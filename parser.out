Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> g
Rule 1     g -> linea g
Rule 2     g -> COMMENT g
Rule 3     g -> empty
Rule 4     linea -> lAbierta
Rule 5     linea -> lCerrada
Rule 6     lAbierta -> IF ( cosaBooleana ) linea
Rule 7     lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta
Rule 8     lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta
Rule 9     lAbierta -> IF ( cosaBooleana ) { g }
Rule 10    lAbierta -> loop lAbierta
Rule 11    lCerrada -> sentencia
Rule 12    com -> COMMENT com
Rule 13    com -> empty
Rule 14    lCerrada -> IF ( cosaBooleana ) { g } ELSE { g }
Rule 15    lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g }
Rule 16    lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
Rule 17    lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada
Rule 18    lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada
Rule 19    lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
Rule 20    lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
Rule 21    lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
Rule 22    lCerrada -> loop { g }
Rule 23    lCerrada -> loop lCerrada
Rule 24    lCerrada -> loop COMMENT com lCerrada
Rule 25    lCerrada -> DO { g } WHILE ( valores ) ;
Rule 26    lCerrada -> DO lCerrada WHILE ( valores ) ;
Rule 27    lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ;
Rule 28    sentencia -> varsOps ;
Rule 29    sentencia -> func ;
Rule 30    sentencia -> varAsig ;
Rule 31    sentencia -> RETURN ;
Rule 32    sentencia -> ;
Rule 33    loop -> WHILE ( valores )
Rule 34    loop -> FOR ( primParam ; valores ; tercerParam )
Rule 35    primParam -> varAsig
Rule 36    primParam -> empty
Rule 37    tercerParam -> varsOps
Rule 38    tercerParam -> varAsig
Rule 39    tercerParam -> func
Rule 40    tercerParam -> empty
Rule 41    cosaBooleana -> expBool
Rule 42    cosaBooleana -> valoresBool
Rule 43    func -> funcReturn
Rule 44    func -> funcVoid
Rule 45    funcReturn -> funcInt
Rule 46    funcReturn -> funcString
Rule 47    funcReturn -> funcBool
Rule 48    funcInt -> MULTIESCALAR ( valores , valores param )
Rule 49    funcInt -> LENGTH ( valores )
Rule 50    funcString -> CAPITALIZAR ( valores )
Rule 51    funcBool -> COLINEALES ( valores , valores )
Rule 52    funcVoid -> PRINT ( valores )
Rule 53    param -> , valores
Rule 54    param -> empty
Rule 55    empty -> <empty>
Rule 56    vec -> [ elem ]
Rule 57    elem -> valores , elem
Rule 58    elem -> valores
Rule 59    vecVal -> ID [ expresion ]
Rule 60    vecVal -> vec [ expresion ]
Rule 61    vecVal -> vecVal [ expresion ]
Rule 62    vecVal -> ID [ INT ]
Rule 63    vecVal -> vec [ INT ]
Rule 64    vecVal -> vecVal [ INT ]
Rule 65    expresion -> eMat
Rule 66    expresion -> expBool
Rule 67    expresion -> funcReturn
Rule 68    expresion -> reg
Rule 69    expresion -> FLOAT
Rule 70    expresion -> STRING
Rule 71    expresion -> BOOL
Rule 72    expresion -> varYVals
Rule 73    expresion -> varsOps
Rule 74    expresion -> vec
Rule 75    expresion -> ternario
Rule 76    expresion -> atributos
Rule 77    expresion -> RES
Rule 78    valores -> varYVals
Rule 79    valores -> varsOps
Rule 80    valores -> eMat
Rule 81    valores -> expBool
Rule 82    valores -> funcReturn
Rule 83    valores -> reg
Rule 84    valores -> INT
Rule 85    valores -> FLOAT
Rule 86    valores -> STRING
Rule 87    valores -> BOOL
Rule 88    valores -> ternario
Rule 89    valores -> atributos
Rule 90    valores -> vec
Rule 91    valores -> RES
Rule 92    reg -> { campos }
Rule 93    campos -> ID : valores , campos
Rule 94    campos -> ID : valores
Rule 95    atributos -> ID . valoresCampos
Rule 96    atributos -> reg . valoresCampos
Rule 97    valoresCampos -> varYVals
Rule 98    valoresCampos -> END
Rule 99    valoresCampos -> BEGIN
Rule 100   ternario -> ternarioMat
Rule 101   ternario -> ternarioBool
Rule 102   ternario -> ( ternarioMat )
Rule 103   ternario -> ( ternarioBool )
Rule 104   ternario -> ternarioVars
Rule 105   ternario -> ( ternarioVars )
Rule 106   ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars
Rule 107   ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat
Rule 108   ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars
Rule 109   ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool
Rule 110   ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars
Rule 111   ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars
Rule 112   ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat
Rule 113   ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars
Rule 114   ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool
Rule 115   ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars
Rule 116   valoresTernarioVars -> reg
Rule 117   valoresTernarioVars -> vec
Rule 118   valoresTernarioVars -> ternarioVars
Rule 119   valoresTernarioVars -> ( ternarioVars )
Rule 120   valoresTernarioVars -> atributos
Rule 121   valoresTernarioVars -> varsOps
Rule 122   valoresTernarioVars -> varYVals
Rule 123   valoresTernarioVars -> RES
Rule 124   ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat
Rule 125   ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat
Rule 126   valoresTernarioMat -> INT
Rule 127   valoresTernarioMat -> FLOAT
Rule 128   valoresTernarioMat -> funcInt
Rule 129   valoresTernarioMat -> STRING
Rule 130   valoresTernarioMat -> eMat
Rule 131   valoresTernarioMat -> ternarioMat
Rule 132   valoresTernarioMat -> ( ternarioMat )
Rule 133   ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool
Rule 134   ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool
Rule 135   valoresTernarioBool -> BOOL
Rule 136   valoresTernarioBool -> funcBool
Rule 137   valoresTernarioBool -> ternarioBool
Rule 138   valoresTernarioBool -> ( ternarioBool )
Rule 139   valoresTernarioBool -> expBool
Rule 140   varYVals -> ID
Rule 141   varYVals -> vecVal
Rule 142   varYVals -> vecVal . varYVals
Rule 143   varsOps -> MENOSMENOS variable
Rule 144   varsOps -> MASMAS variable
Rule 145   varsOps -> variable MASMAS
Rule 146   varsOps -> variable MENOSMENOS
Rule 147   variable -> ID
Rule 148   variable -> vecVal
Rule 149   variable -> vecVal . varYVals
Rule 150   varAsig -> variable MULEQ valores
Rule 151   varAsig -> variable DIVEQ valores
Rule 152   varAsig -> variable MASEQ valores
Rule 153   varAsig -> variable MENOSEQ valores
Rule 154   varAsig -> variable = valores
Rule 155   varAsig -> ID . ID = valores
Rule 156   valoresMat -> INT
Rule 157   valoresMat -> FLOAT
Rule 158   valoresMat -> funcInt
Rule 159   valoresMat -> atributos
Rule 160   valoresMat -> funcString
Rule 161   valoresMat -> STRING
Rule 162   valoresMat -> varYVals
Rule 163   valoresMat -> varsOps
Rule 164   valoresMat -> ( ternarioMat )
Rule 165   eMat -> eMat + p
Rule 166   eMat -> valoresMat + p
Rule 167   eMat -> eMat + valoresMat
Rule 168   eMat -> valoresMat + valoresMat
Rule 169   eMat -> p
Rule 170   eMat -> eMat - p
Rule 171   eMat -> valoresMat - p
Rule 172   eMat -> eMat - valoresMat
Rule 173   eMat -> valoresMat - valoresMat
Rule 174   p -> p * exp
Rule 175   p -> p / exp
Rule 176   p -> p % exp
Rule 177   p -> valoresMat * exp
Rule 178   p -> valoresMat / exp
Rule 179   p -> valoresMat % exp
Rule 180   p -> p * valoresMat
Rule 181   p -> p / valoresMat
Rule 182   p -> p % valoresMat
Rule 183   p -> valoresMat * valoresMat
Rule 184   p -> valoresMat / valoresMat
Rule 185   p -> valoresMat % valoresMat
Rule 186   p -> exp
Rule 187   exp -> exp ^ iSing
Rule 188   exp -> valoresMat ^ iSing
Rule 189   exp -> exp ^ valoresMat
Rule 190   exp -> valoresMat ^ valoresMat
Rule 191   exp -> iSing
Rule 192   iSing -> - paren
Rule 193   iSing -> + paren
Rule 194   iSing -> - valoresMat
Rule 195   iSing -> + valoresMat
Rule 196   iSing -> paren
Rule 197   paren -> ( eMat )
Rule 198   paren -> ( valoresMat )
Rule 199   valoresBool -> BOOL
Rule 200   valoresBool -> funcBool
Rule 201   valoresBool -> varYVals
Rule 202   valoresBool -> varsOps
Rule 203   valoresBool -> ( ternarioBool )
Rule 204   valoresBool -> <empty>
Rule 205   expBool -> expBool OR and
Rule 206   expBool -> valoresBool OR and
Rule 207   expBool -> expBool OR valoresBool
Rule 208   expBool -> valoresBool OR valoresBool
Rule 209   expBool -> and
Rule 210   and -> and AND eq
Rule 211   and -> valoresBool AND eq
Rule 212   and -> and AND valoresBool
Rule 213   and -> valoresBool AND valoresBool
Rule 214   and -> eq
Rule 215   eq -> eq EQEQ mayor
Rule 216   eq -> eq DISTINTO mayor
Rule 217   eq -> tCompareEQ EQEQ mayor
Rule 218   eq -> tCompareEQ DISTINTO mayor
Rule 219   eq -> eq EQEQ tCompareEQ
Rule 220   eq -> eq DISTINTO tCompareEQ
Rule 221   eq -> tCompareEQ EQEQ tCompareEQ
Rule 222   eq -> tCompareEQ DISTINTO tCompareEQ
Rule 223   eq -> mayor
Rule 224   tCompareEQ -> BOOL
Rule 225   tCompareEQ -> funcBool
Rule 226   tCompareEQ -> varYVals
Rule 227   tCompareEQ -> varsOps
Rule 228   tCompareEQ -> INT
Rule 229   tCompareEQ -> FLOAT
Rule 230   tCompareEQ -> funcInt
Rule 231   tCompareEQ -> eMat
Rule 232   tCompareEQ -> ( ternarioBool )
Rule 233   tCompareEQ -> ( ternarioMat )
Rule 234   tCompare -> eMat
Rule 235   tCompare -> varsOps
Rule 236   tCompare -> varYVals
Rule 237   tCompare -> INT
Rule 238   tCompare -> funcInt
Rule 239   tCompare -> FLOAT
Rule 240   tCompare -> ( ternarioMat )
Rule 241   mayor -> tCompare > tCompare
Rule 242   mayor -> menor
Rule 243   menor -> tCompare < tCompare
Rule 244   menor -> not
Rule 245   not -> NOT not
Rule 246   not -> NOT valoresBool
Rule 247   not -> parenBool
Rule 248   parenBool -> ( expBool )

Terminals, with rules where they appear

%                    : 176 179 182 185
(                    : 6 7 8 9 14 15 16 17 18 19 20 21 25 26 27 33 34 48 49 50 51 52 102 103 105 119 132 138 164 197 198 203 232 233 240 248
)                    : 6 7 8 9 14 15 16 17 18 19 20 21 25 26 27 33 34 48 49 50 51 52 102 103 105 119 132 138 164 197 198 203 232 233 240 248
*                    : 174 177 180 183
+                    : 165 166 167 168 193 195
,                    : 48 51 53 57 93
-                    : 170 171 172 173 192 194
.                    : 95 96 142 149 155
/                    : 175 178 181 184
:                    : 93 94 106 107 108 109 110 111 112 113 114 115 124 125 133 134
;                    : 25 26 27 28 29 30 31 32 34 34
<                    : 243
=                    : 154 155
>                    : 241
?                    : 106 107 108 109 110 111 112 113 114 115 124 125 133 134
AND                  : 210 211 212 213
BEGIN                : 99
BOOL                 : 71 87 135 199 224
CAPITALIZAR          : 50
COLINEALES           : 51
COMMENT              : 2 12 16 19 20 21 21 24 27
DISTINTO             : 216 218 220 222
DIVEQ                : 151
DO                   : 25 26 27
ELSE                 : 7 8 14 15 16 17 18 19 20 21
END                  : 98
EQEQ                 : 215 217 219 221
FLOAT                : 69 85 127 157 229 239
FOR                  : 34
ID                   : 59 62 93 94 95 140 147 155 155
IF                   : 6 7 8 9 14 15 16 17 18 19 20 21
INT                  : 62 63 64 84 126 156 228 237
LENGTH               : 49
MASEQ                : 152
MASMAS               : 144 145
MENOSEQ              : 153
MENOSMENOS           : 143 146
MULEQ                : 150
MULTIESCALAR         : 48
NOT                  : 245 246
OR                   : 205 206 207 208
PRINT                : 52
RES                  : 77 91 123
RETURN               : 31
STRING               : 70 86 129 161
WHILE                : 25 26 27 33
[                    : 56 59 60 61 62 63 64
]                    : 56 59 60 61 62 63 64
^                    : 187 188 189 190
error                : 
{                    : 7 9 14 14 15 16 17 22 25 92
}                    : 7 9 14 14 15 16 17 22 25 92

Nonterminals, with rules where they appear

and                  : 205 206 209 210 212
atributos            : 76 89 120 159
campos               : 92 93
com                  : 12 16 19 20 21 21 24 27
cosaBooleana         : 6 7 8 9 14 15 16 17 18 19 20 21
eMat                 : 65 80 130 165 167 170 172 197 231 234
elem                 : 56 57
empty                : 3 13 36 40 54
eq                   : 210 211 214 215 216 219 220
exp                  : 174 175 176 177 178 179 186 187 189
expBool              : 41 66 81 111 112 113 114 115 125 134 139 205 207 248
expresion            : 59 60 61
func                 : 29 39
funcBool             : 47 136 200 225
funcInt              : 45 128 158 230 238
funcReturn           : 43 67 82
funcString           : 46 160
funcVoid             : 44
g                    : 1 2 7 9 14 14 15 16 17 22 25 0
iSing                : 187 188 191
lAbierta             : 4 7 8 10
lCerrada             : 5 8 15 16 17 18 18 19 19 20 20 21 21 23 24 26 27
linea                : 1 6
loop                 : 10 22 23 24
mayor                : 215 216 217 218 223
menor                : 242
not                  : 244 245
p                    : 165 166 169 170 171 174 175 176 180 181 182
param                : 48
paren                : 192 193 196
parenBool            : 247
primParam            : 34
reg                  : 68 83 96 116
sentencia            : 11
tCompare             : 241 241 243 243
tCompareEQ           : 217 218 219 220 221 221 222 222
tercerParam          : 34
ternario             : 75 88
ternarioBool         : 101 103 137 138 203 232
ternarioMat          : 100 102 131 132 164 233 240
ternarioVars         : 104 105 118 119
valores              : 25 26 27 33 34 48 48 49 50 51 51 52 53 57 58 93 94 150 151 152 153 154 155
valoresBool          : 42 106 107 108 109 110 124 133 206 207 208 208 211 212 213 213 246
valoresCampos        : 95 96
valoresMat           : 166 167 168 168 171 172 173 173 177 178 179 180 181 182 183 183 184 184 185 185 188 189 190 190 194 195 198
valoresTernarioBool  : 109 110 114 115 133 133 134 134
valoresTernarioMat   : 107 108 112 113 124 124 125 125
valoresTernarioVars  : 106 106 107 108 109 110 111 111 112 113 114 115
varAsig              : 30 35 38
varYVals             : 72 78 97 122 142 149 162 201 226 236
variable             : 143 144 145 146 150 151 152 153 154
varsOps              : 28 37 73 79 121 163 202 227 235
vec                  : 60 63 74 90 117
vecVal               : 61 64 141 142 148 149

Parsing method: LALR

state 0

    (0) S' -> . g
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (55) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (150) varAsig -> . variable MULEQ valores
    (151) varAsig -> . variable DIVEQ valores
    (152) varAsig -> . variable MASEQ valores
    (153) varAsig -> . variable MENOSEQ valores
    (154) varAsig -> . variable = valores
    (155) varAsig -> . ID . ID = valores
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    $end            reduce using rule 55 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 12
    varsOps                        shift and go to state 13
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 24
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 30
    loop                           shift and go to state 32
    linea                          shift and go to state 34

state 1

    (25) lCerrada -> DO . { g } WHILE ( valores ) ;
    (26) lCerrada -> DO . lCerrada WHILE ( valores ) ;
    (27) lCerrada -> DO . COMMENT com lCerrada WHILE ( valores ) ;
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (150) varAsig -> . variable MULEQ valores
    (151) varAsig -> . variable DIVEQ valores
    (152) varAsig -> . variable MASEQ valores
    (153) varAsig -> . variable MENOSEQ valores
    (154) varAsig -> . variable = valores
    (155) varAsig -> . ID . ID = valores
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 38
    COMMENT         shift and go to state 35
    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 37
    varsOps                        shift and go to state 13
    loop                           shift and go to state 39

state 2

    (31) sentencia -> RETURN . ;

    ;               shift and go to state 40


state 3

    (47) funcReturn -> funcBool .

    ;               reduce using rule 47 (funcReturn -> funcBool .)
    )               reduce using rule 47 (funcReturn -> funcBool .)


state 4

    (51) funcBool -> COLINEALES . ( valores , valores )

    (               shift and go to state 41


state 5

    (45) funcReturn -> funcInt .

    ;               reduce using rule 45 (funcReturn -> funcInt .)
    )               reduce using rule 45 (funcReturn -> funcInt .)


state 6

    (33) loop -> WHILE . ( valores )

    (               shift and go to state 42


state 7

    (52) funcVoid -> PRINT . ( valores )

    (               shift and go to state 43


state 8

    (148) variable -> vecVal .
    (149) variable -> vecVal . . varYVals
    (61) vecVal -> vecVal . [ expresion ]
    (64) vecVal -> vecVal . [ INT ]

    MASMAS          reduce using rule 148 (variable -> vecVal .)
    MENOSMENOS      reduce using rule 148 (variable -> vecVal .)
    MULEQ           reduce using rule 148 (variable -> vecVal .)
    DIVEQ           reduce using rule 148 (variable -> vecVal .)
    MASEQ           reduce using rule 148 (variable -> vecVal .)
    MENOSEQ         reduce using rule 148 (variable -> vecVal .)
    =               reduce using rule 148 (variable -> vecVal .)
    ;               reduce using rule 148 (variable -> vecVal .)
    ,               reduce using rule 148 (variable -> vecVal .)
    ]               reduce using rule 148 (variable -> vecVal .)
    +               reduce using rule 148 (variable -> vecVal .)
    -               reduce using rule 148 (variable -> vecVal .)
    *               reduce using rule 148 (variable -> vecVal .)
    /               reduce using rule 148 (variable -> vecVal .)
    %               reduce using rule 148 (variable -> vecVal .)
    ^               reduce using rule 148 (variable -> vecVal .)
    OR              reduce using rule 148 (variable -> vecVal .)
    AND             reduce using rule 148 (variable -> vecVal .)
    ?               reduce using rule 148 (variable -> vecVal .)
    EQEQ            reduce using rule 148 (variable -> vecVal .)
    DISTINTO        reduce using rule 148 (variable -> vecVal .)
    >               reduce using rule 148 (variable -> vecVal .)
    <               reduce using rule 148 (variable -> vecVal .)
    )               reduce using rule 148 (variable -> vecVal .)
    :               reduce using rule 148 (variable -> vecVal .)
    }               reduce using rule 148 (variable -> vecVal .)
    .               shift and go to state 44
    [               shift and go to state 45


state 9

    (2) g -> COMMENT . g
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (55) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (150) varAsig -> . variable MULEQ valores
    (151) varAsig -> . variable DIVEQ valores
    (152) varAsig -> . variable MASEQ valores
    (153) varAsig -> . variable MENOSEQ valores
    (154) varAsig -> . variable = valores
    (155) varAsig -> . ID . ID = valores
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    $end            reduce using rule 55 (empty -> .)
    }               reduce using rule 55 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 12
    varsOps                        shift and go to state 13
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 46
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 30
    loop                           shift and go to state 32
    linea                          shift and go to state 34

state 10

    (11) lCerrada -> sentencia .

    COMMENT         reduce using rule 11 (lCerrada -> sentencia .)
    IF              reduce using rule 11 (lCerrada -> sentencia .)
    DO              reduce using rule 11 (lCerrada -> sentencia .)
    WHILE           reduce using rule 11 (lCerrada -> sentencia .)
    FOR             reduce using rule 11 (lCerrada -> sentencia .)
    RETURN          reduce using rule 11 (lCerrada -> sentencia .)
    ;               reduce using rule 11 (lCerrada -> sentencia .)
    MENOSMENOS      reduce using rule 11 (lCerrada -> sentencia .)
    MASMAS          reduce using rule 11 (lCerrada -> sentencia .)
    ID              reduce using rule 11 (lCerrada -> sentencia .)
    PRINT           reduce using rule 11 (lCerrada -> sentencia .)
    MULTIESCALAR    reduce using rule 11 (lCerrada -> sentencia .)
    LENGTH          reduce using rule 11 (lCerrada -> sentencia .)
    CAPITALIZAR     reduce using rule 11 (lCerrada -> sentencia .)
    COLINEALES      reduce using rule 11 (lCerrada -> sentencia .)
    [               reduce using rule 11 (lCerrada -> sentencia .)
    }               reduce using rule 11 (lCerrada -> sentencia .)
    $end            reduce using rule 11 (lCerrada -> sentencia .)
    ELSE            reduce using rule 11 (lCerrada -> sentencia .)


state 11

    (32) sentencia -> ; .

    WHILE           reduce using rule 32 (sentencia -> ; .)
    COMMENT         reduce using rule 32 (sentencia -> ; .)
    IF              reduce using rule 32 (sentencia -> ; .)
    DO              reduce using rule 32 (sentencia -> ; .)
    FOR             reduce using rule 32 (sentencia -> ; .)
    RETURN          reduce using rule 32 (sentencia -> ; .)
    ;               reduce using rule 32 (sentencia -> ; .)
    MENOSMENOS      reduce using rule 32 (sentencia -> ; .)
    MASMAS          reduce using rule 32 (sentencia -> ; .)
    ID              reduce using rule 32 (sentencia -> ; .)
    PRINT           reduce using rule 32 (sentencia -> ; .)
    MULTIESCALAR    reduce using rule 32 (sentencia -> ; .)
    LENGTH          reduce using rule 32 (sentencia -> ; .)
    CAPITALIZAR     reduce using rule 32 (sentencia -> ; .)
    COLINEALES      reduce using rule 32 (sentencia -> ; .)
    [               reduce using rule 32 (sentencia -> ; .)
    $end            reduce using rule 32 (sentencia -> ; .)
    }               reduce using rule 32 (sentencia -> ; .)
    ELSE            reduce using rule 32 (sentencia -> ; .)


state 12

    (3) g -> empty .

    }               reduce using rule 3 (g -> empty .)
    $end            reduce using rule 3 (g -> empty .)


state 13

    (28) sentencia -> varsOps . ;

    ;               shift and go to state 47


state 14

    (44) func -> funcVoid .

    ;               reduce using rule 44 (func -> funcVoid .)
    )               reduce using rule 44 (func -> funcVoid .)


state 15

    (143) varsOps -> MENOSMENOS . variable
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (56) vec -> . [ elem ]

    ID              shift and go to state 49
    [               shift and go to state 20

    vec                            shift and go to state 33
    variable                       shift and go to state 48
    vecVal                         shift and go to state 8

state 16

    (34) loop -> FOR . ( primParam ; valores ; tercerParam )

    (               shift and go to state 50


state 17

    (49) funcInt -> LENGTH . ( valores )

    (               shift and go to state 51


state 18

    (29) sentencia -> func . ;

    ;               shift and go to state 52


state 19

    (145) varsOps -> variable . MASMAS
    (146) varsOps -> variable . MENOSMENOS
    (150) varAsig -> variable . MULEQ valores
    (151) varAsig -> variable . DIVEQ valores
    (152) varAsig -> variable . MASEQ valores
    (153) varAsig -> variable . MENOSEQ valores
    (154) varAsig -> variable . = valores

    MASMAS          shift and go to state 56
    MENOSMENOS      shift and go to state 54
    MULEQ           shift and go to state 57
    DIVEQ           shift and go to state 59
    MASEQ           shift and go to state 55
    MENOSEQ         shift and go to state 53
    =               shift and go to state 58


state 20

    (56) vec -> [ . elem ]
    (57) elem -> . valores , elem
    (58) elem -> . valores
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (92) reg -> . { campos }
    (100) ternario -> . ternarioMat
    (101) ternario -> . ternarioBool
    (102) ternario -> . ( ternarioMat )
    (103) ternario -> . ( ternarioBool )
    (104) ternario -> . ternarioVars
    (105) ternario -> . ( ternarioVars )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    ?               reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    valores                        shift and go to state 65
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    elem                           shift and go to state 95
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 21

    (155) varAsig -> ID . . ID = valores
    (147) variable -> ID .
    (59) vecVal -> ID . [ expresion ]
    (62) vecVal -> ID . [ INT ]

    .               shift and go to state 104
    MASMAS          reduce using rule 147 (variable -> ID .)
    MENOSMENOS      reduce using rule 147 (variable -> ID .)
    MULEQ           reduce using rule 147 (variable -> ID .)
    DIVEQ           reduce using rule 147 (variable -> ID .)
    MASEQ           reduce using rule 147 (variable -> ID .)
    MENOSEQ         reduce using rule 147 (variable -> ID .)
    =               reduce using rule 147 (variable -> ID .)
    [               shift and go to state 105


state 22

    (6) lAbierta -> IF . ( cosaBooleana ) linea
    (7) lAbierta -> IF . ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> IF . ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> IF . ( cosaBooleana ) { g }
    (14) lCerrada -> IF . ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF . ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada

    (               shift and go to state 106


state 23

    (30) sentencia -> varAsig . ;

    ;               shift and go to state 107


state 24

    (0) S' -> g .



state 25

    (46) funcReturn -> funcString .

    ;               reduce using rule 46 (funcReturn -> funcString .)
    )               reduce using rule 46 (funcReturn -> funcString .)


state 26

    (43) func -> funcReturn .

    ;               reduce using rule 43 (func -> funcReturn .)
    )               reduce using rule 43 (func -> funcReturn .)


state 27

    (50) funcString -> CAPITALIZAR . ( valores )

    (               shift and go to state 108


state 28

    (5) linea -> lCerrada .

    COMMENT         reduce using rule 5 (linea -> lCerrada .)
    IF              reduce using rule 5 (linea -> lCerrada .)
    DO              reduce using rule 5 (linea -> lCerrada .)
    WHILE           reduce using rule 5 (linea -> lCerrada .)
    FOR             reduce using rule 5 (linea -> lCerrada .)
    RETURN          reduce using rule 5 (linea -> lCerrada .)
    ;               reduce using rule 5 (linea -> lCerrada .)
    MENOSMENOS      reduce using rule 5 (linea -> lCerrada .)
    MASMAS          reduce using rule 5 (linea -> lCerrada .)
    ID              reduce using rule 5 (linea -> lCerrada .)
    PRINT           reduce using rule 5 (linea -> lCerrada .)
    MULTIESCALAR    reduce using rule 5 (linea -> lCerrada .)
    LENGTH          reduce using rule 5 (linea -> lCerrada .)
    CAPITALIZAR     reduce using rule 5 (linea -> lCerrada .)
    COLINEALES      reduce using rule 5 (linea -> lCerrada .)
    [               reduce using rule 5 (linea -> lCerrada .)
    $end            reduce using rule 5 (linea -> lCerrada .)
    }               reduce using rule 5 (linea -> lCerrada .)


state 29

    (48) funcInt -> MULTIESCALAR . ( valores , valores param )

    (               shift and go to state 109


state 30

    (4) linea -> lAbierta .

    COMMENT         reduce using rule 4 (linea -> lAbierta .)
    IF              reduce using rule 4 (linea -> lAbierta .)
    DO              reduce using rule 4 (linea -> lAbierta .)
    WHILE           reduce using rule 4 (linea -> lAbierta .)
    FOR             reduce using rule 4 (linea -> lAbierta .)
    RETURN          reduce using rule 4 (linea -> lAbierta .)
    ;               reduce using rule 4 (linea -> lAbierta .)
    MENOSMENOS      reduce using rule 4 (linea -> lAbierta .)
    MASMAS          reduce using rule 4 (linea -> lAbierta .)
    ID              reduce using rule 4 (linea -> lAbierta .)
    PRINT           reduce using rule 4 (linea -> lAbierta .)
    MULTIESCALAR    reduce using rule 4 (linea -> lAbierta .)
    LENGTH          reduce using rule 4 (linea -> lAbierta .)
    CAPITALIZAR     reduce using rule 4 (linea -> lAbierta .)
    COLINEALES      reduce using rule 4 (linea -> lAbierta .)
    [               reduce using rule 4 (linea -> lAbierta .)
    $end            reduce using rule 4 (linea -> lAbierta .)
    }               reduce using rule 4 (linea -> lAbierta .)


state 31

    (144) varsOps -> MASMAS . variable
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (56) vec -> . [ elem ]

    ID              shift and go to state 49
    [               shift and go to state 20

    vec                            shift and go to state 33
    variable                       shift and go to state 110
    vecVal                         shift and go to state 8

state 32

    (10) lAbierta -> loop . lAbierta
    (22) lCerrada -> loop . { g }
    (23) lCerrada -> loop . lCerrada
    (24) lCerrada -> loop . COMMENT com lCerrada
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (150) varAsig -> . variable MULEQ valores
    (151) varAsig -> . variable DIVEQ valores
    (152) varAsig -> . variable MASEQ valores
    (153) varAsig -> . variable MENOSEQ valores
    (154) varAsig -> . variable = valores
    (155) varAsig -> . ID . ID = valores
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 114
    COMMENT         shift and go to state 111
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    loop                           shift and go to state 32
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 112
    lAbierta                       shift and go to state 113
    varsOps                        shift and go to state 13

state 33

    (60) vecVal -> vec . [ expresion ]
    (63) vecVal -> vec . [ INT ]

    [               shift and go to state 115


state 34

    (1) g -> linea . g
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (55) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (150) varAsig -> . variable MULEQ valores
    (151) varAsig -> . variable DIVEQ valores
    (152) varAsig -> . variable MASEQ valores
    (153) varAsig -> . variable MENOSEQ valores
    (154) varAsig -> . variable = valores
    (155) varAsig -> . ID . ID = valores
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    $end            reduce using rule 55 (empty -> .)
    }               reduce using rule 55 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 12
    varsOps                        shift and go to state 13
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 116
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 30
    loop                           shift and go to state 32
    linea                          shift and go to state 34

state 35

    (27) lCerrada -> DO COMMENT . com lCerrada WHILE ( valores ) ;
    (12) com -> . COMMENT com
    (13) com -> . empty
    (55) empty -> .

    COMMENT         shift and go to state 117
    IF              reduce using rule 55 (empty -> .)
    DO              reduce using rule 55 (empty -> .)
    RETURN          reduce using rule 55 (empty -> .)
    ;               reduce using rule 55 (empty -> .)
    WHILE           reduce using rule 55 (empty -> .)
    FOR             reduce using rule 55 (empty -> .)
    MENOSMENOS      reduce using rule 55 (empty -> .)
    MASMAS          reduce using rule 55 (empty -> .)
    ID              reduce using rule 55 (empty -> .)
    PRINT           reduce using rule 55 (empty -> .)
    MULTIESCALAR    reduce using rule 55 (empty -> .)
    LENGTH          reduce using rule 55 (empty -> .)
    CAPITALIZAR     reduce using rule 55 (empty -> .)
    COLINEALES      reduce using rule 55 (empty -> .)
    [               reduce using rule 55 (empty -> .)

    com                            shift and go to state 118
    empty                          shift and go to state 119

state 36

    (14) lCerrada -> IF . ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF . ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada

    (               shift and go to state 120


state 37

    (26) lCerrada -> DO lCerrada . WHILE ( valores ) ;

    WHILE           shift and go to state 121


state 38

    (25) lCerrada -> DO { . g } WHILE ( valores ) ;
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (55) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (150) varAsig -> . variable MULEQ valores
    (151) varAsig -> . variable DIVEQ valores
    (152) varAsig -> . variable MASEQ valores
    (153) varAsig -> . variable MENOSEQ valores
    (154) varAsig -> . variable = valores
    (155) varAsig -> . ID . ID = valores
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 55 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    linea                          shift and go to state 34
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 12
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 122
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 30
    varsOps                        shift and go to state 13
    loop                           shift and go to state 32

state 39

    (22) lCerrada -> loop . { g }
    (23) lCerrada -> loop . lCerrada
    (24) lCerrada -> loop . COMMENT com lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (150) varAsig -> . variable MULEQ valores
    (151) varAsig -> . variable DIVEQ valores
    (152) varAsig -> . variable MASEQ valores
    (153) varAsig -> . variable MENOSEQ valores
    (154) varAsig -> . variable = valores
    (155) varAsig -> . ID . ID = valores
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 114
    COMMENT         shift and go to state 111
    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 112
    varsOps                        shift and go to state 13
    loop                           shift and go to state 39

state 40

    (31) sentencia -> RETURN ; .

    WHILE           reduce using rule 31 (sentencia -> RETURN ; .)
    COMMENT         reduce using rule 31 (sentencia -> RETURN ; .)
    IF              reduce using rule 31 (sentencia -> RETURN ; .)
    DO              reduce using rule 31 (sentencia -> RETURN ; .)
    FOR             reduce using rule 31 (sentencia -> RETURN ; .)
    RETURN          reduce using rule 31 (sentencia -> RETURN ; .)
    ;               reduce using rule 31 (sentencia -> RETURN ; .)
    MENOSMENOS      reduce using rule 31 (sentencia -> RETURN ; .)
    MASMAS          reduce using rule 31 (sentencia -> RETURN ; .)
    ID              reduce using rule 31 (sentencia -> RETURN ; .)
    PRINT           reduce using rule 31 (sentencia -> RETURN ; .)
    MULTIESCALAR    reduce using rule 31 (sentencia -> RETURN ; .)
    LENGTH          reduce using rule 31 (sentencia -> RETURN ; .)
    CAPITALIZAR     reduce using rule 31 (sentencia -> RETURN ; .)
    COLINEALES      reduce using rule 31 (sentencia -> RETURN ; .)
    [               reduce using rule 31 (sentencia -> RETURN ; .)
    $end            reduce using rule 31 (sentencia -> RETURN ; .)
    }               reduce using rule 31 (sentencia -> RETURN ; .)
    ELSE            reduce using rule 31 (sentencia -> RETURN ; .)


state 41

    (51) funcBool -> COLINEALES ( . valores , valores )
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (92) reg -> . { campos }
    (100) ternario -> . ternarioMat
    (101) ternario -> . ternarioBool
    (102) ternario -> . ( ternarioMat )
    (103) ternario -> . ( ternarioBool )
    (104) ternario -> . ternarioVars
    (105) ternario -> . ( ternarioVars )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    ?               reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 123
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 42

    (33) loop -> WHILE ( . valores )
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (92) reg -> . { campos }
    (100) ternario -> . ternarioMat
    (101) ternario -> . ternarioBool
    (102) ternario -> . ( ternarioMat )
    (103) ternario -> . ( ternarioBool )
    (104) ternario -> . ternarioVars
    (105) ternario -> . ( ternarioVars )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    ?               reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 124
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 43

    (52) funcVoid -> PRINT ( . valores )
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (92) reg -> . { campos }
    (100) ternario -> . ternarioMat
    (101) ternario -> . ternarioBool
    (102) ternario -> . ( ternarioMat )
    (103) ternario -> . ( ternarioBool )
    (104) ternario -> . ternarioVars
    (105) ternario -> . ( ternarioVars )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    ?               reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 125
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 44

    (149) variable -> vecVal . . varYVals
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (56) vec -> . [ elem ]

    ID              shift and go to state 128
    [               shift and go to state 20

    varYVals                       shift and go to state 127
    vecVal                         shift and go to state 126
    vec                            shift and go to state 33

state 45

    (61) vecVal -> vecVal [ . expresion ]
    (64) vecVal -> vecVal [ . INT ]
    (65) expresion -> . eMat
    (66) expresion -> . expBool
    (67) expresion -> . funcReturn
    (68) expresion -> . reg
    (69) expresion -> . FLOAT
    (70) expresion -> . STRING
    (71) expresion -> . BOOL
    (72) expresion -> . varYVals
    (73) expresion -> . varsOps
    (74) expresion -> . vec
    (75) expresion -> . ternario
    (76) expresion -> . atributos
    (77) expresion -> . RES
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (92) reg -> . { campos }
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (56) vec -> . [ elem ]
    (100) ternario -> . ternarioMat
    (101) ternario -> . ternarioBool
    (102) ternario -> . ( ternarioMat )
    (103) ternario -> . ( ternarioBool )
    (104) ternario -> . ternarioVars
    (105) ternario -> . ( ternarioVars )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 137
    FLOAT           shift and go to state 139
    STRING          shift and go to state 131
    BOOL            shift and go to state 140
    RES             shift and go to state 130
    {               shift and go to state 101
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 76
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    ?               reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 129
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 132
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 133
    paren                          shift and go to state 88
    reg                            shift and go to state 134
    expBool                        shift and go to state 135
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    expresion                      shift and go to state 136
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 138
    p                              shift and go to state 96
    varsOps                        shift and go to state 141
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 142
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 143

state 46

    (2) g -> COMMENT g .

    }               reduce using rule 2 (g -> COMMENT g .)
    $end            reduce using rule 2 (g -> COMMENT g .)


state 47

    (28) sentencia -> varsOps ; .

    WHILE           reduce using rule 28 (sentencia -> varsOps ; .)
    COMMENT         reduce using rule 28 (sentencia -> varsOps ; .)
    IF              reduce using rule 28 (sentencia -> varsOps ; .)
    DO              reduce using rule 28 (sentencia -> varsOps ; .)
    FOR             reduce using rule 28 (sentencia -> varsOps ; .)
    RETURN          reduce using rule 28 (sentencia -> varsOps ; .)
    ;               reduce using rule 28 (sentencia -> varsOps ; .)
    MENOSMENOS      reduce using rule 28 (sentencia -> varsOps ; .)
    MASMAS          reduce using rule 28 (sentencia -> varsOps ; .)
    ID              reduce using rule 28 (sentencia -> varsOps ; .)
    PRINT           reduce using rule 28 (sentencia -> varsOps ; .)
    MULTIESCALAR    reduce using rule 28 (sentencia -> varsOps ; .)
    LENGTH          reduce using rule 28 (sentencia -> varsOps ; .)
    CAPITALIZAR     reduce using rule 28 (sentencia -> varsOps ; .)
    COLINEALES      reduce using rule 28 (sentencia -> varsOps ; .)
    [               reduce using rule 28 (sentencia -> varsOps ; .)
    $end            reduce using rule 28 (sentencia -> varsOps ; .)
    }               reduce using rule 28 (sentencia -> varsOps ; .)
    ELSE            reduce using rule 28 (sentencia -> varsOps ; .)


state 48

    (143) varsOps -> MENOSMENOS variable .

    ;               reduce using rule 143 (varsOps -> MENOSMENOS variable .)
    ,               reduce using rule 143 (varsOps -> MENOSMENOS variable .)
    )               reduce using rule 143 (varsOps -> MENOSMENOS variable .)
    +               reduce using rule 143 (varsOps -> MENOSMENOS variable .)
    -               reduce using rule 143 (varsOps -> MENOSMENOS variable .)
    *               reduce using rule 143 (varsOps -> MENOSMENOS variable .)
    /               reduce using rule 143 (varsOps -> MENOSMENOS variable .)
    %               reduce using rule 143 (varsOps -> MENOSMENOS variable .)
    ^               reduce using rule 143 (varsOps -> MENOSMENOS variable .)
    OR              reduce using rule 143 (varsOps -> MENOSMENOS variable .)
    AND             reduce using rule 143 (varsOps -> MENOSMENOS variable .)
    ?               reduce using rule 143 (varsOps -> MENOSMENOS variable .)
    EQEQ            reduce using rule 143 (varsOps -> MENOSMENOS variable .)
    DISTINTO        reduce using rule 143 (varsOps -> MENOSMENOS variable .)
    >               reduce using rule 143 (varsOps -> MENOSMENOS variable .)
    <               reduce using rule 143 (varsOps -> MENOSMENOS variable .)
    ]               reduce using rule 143 (varsOps -> MENOSMENOS variable .)
    :               reduce using rule 143 (varsOps -> MENOSMENOS variable .)
    }               reduce using rule 143 (varsOps -> MENOSMENOS variable .)


state 49

    (147) variable -> ID .
    (59) vecVal -> ID . [ expresion ]
    (62) vecVal -> ID . [ INT ]

    ;               reduce using rule 147 (variable -> ID .)
    ,               reduce using rule 147 (variable -> ID .)
    ]               reduce using rule 147 (variable -> ID .)
    +               reduce using rule 147 (variable -> ID .)
    -               reduce using rule 147 (variable -> ID .)
    *               reduce using rule 147 (variable -> ID .)
    /               reduce using rule 147 (variable -> ID .)
    %               reduce using rule 147 (variable -> ID .)
    ^               reduce using rule 147 (variable -> ID .)
    OR              reduce using rule 147 (variable -> ID .)
    AND             reduce using rule 147 (variable -> ID .)
    ?               reduce using rule 147 (variable -> ID .)
    EQEQ            reduce using rule 147 (variable -> ID .)
    DISTINTO        reduce using rule 147 (variable -> ID .)
    >               reduce using rule 147 (variable -> ID .)
    <               reduce using rule 147 (variable -> ID .)
    )               reduce using rule 147 (variable -> ID .)
    :               reduce using rule 147 (variable -> ID .)
    }               reduce using rule 147 (variable -> ID .)
    [               shift and go to state 105


state 50

    (34) loop -> FOR ( . primParam ; valores ; tercerParam )
    (35) primParam -> . varAsig
    (36) primParam -> . empty
    (150) varAsig -> . variable MULEQ valores
    (151) varAsig -> . variable DIVEQ valores
    (152) varAsig -> . variable MASEQ valores
    (153) varAsig -> . variable MENOSEQ valores
    (154) varAsig -> . variable = valores
    (155) varAsig -> . ID . ID = valores
    (55) empty -> .
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (56) vec -> . [ elem ]

    ID              shift and go to state 21
    ;               reduce using rule 55 (empty -> .)
    [               shift and go to state 20

    varAsig                        shift and go to state 146
    primParam                      shift and go to state 144
    vec                            shift and go to state 33
    variable                       shift and go to state 145
    vecVal                         shift and go to state 8
    empty                          shift and go to state 147

state 51

    (49) funcInt -> LENGTH ( . valores )
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (92) reg -> . { campos }
    (100) ternario -> . ternarioMat
    (101) ternario -> . ternarioBool
    (102) ternario -> . ( ternarioMat )
    (103) ternario -> . ( ternarioBool )
    (104) ternario -> . ternarioVars
    (105) ternario -> . ( ternarioVars )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    ?               reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 148
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 52

    (29) sentencia -> func ; .

    WHILE           reduce using rule 29 (sentencia -> func ; .)
    COMMENT         reduce using rule 29 (sentencia -> func ; .)
    IF              reduce using rule 29 (sentencia -> func ; .)
    DO              reduce using rule 29 (sentencia -> func ; .)
    FOR             reduce using rule 29 (sentencia -> func ; .)
    RETURN          reduce using rule 29 (sentencia -> func ; .)
    ;               reduce using rule 29 (sentencia -> func ; .)
    MENOSMENOS      reduce using rule 29 (sentencia -> func ; .)
    MASMAS          reduce using rule 29 (sentencia -> func ; .)
    ID              reduce using rule 29 (sentencia -> func ; .)
    PRINT           reduce using rule 29 (sentencia -> func ; .)
    MULTIESCALAR    reduce using rule 29 (sentencia -> func ; .)
    LENGTH          reduce using rule 29 (sentencia -> func ; .)
    CAPITALIZAR     reduce using rule 29 (sentencia -> func ; .)
    COLINEALES      reduce using rule 29 (sentencia -> func ; .)
    [               reduce using rule 29 (sentencia -> func ; .)
    $end            reduce using rule 29 (sentencia -> func ; .)
    }               reduce using rule 29 (sentencia -> func ; .)
    ELSE            reduce using rule 29 (sentencia -> func ; .)


state 53

    (153) varAsig -> variable MENOSEQ . valores
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (92) reg -> . { campos }
    (100) ternario -> . ternarioMat
    (101) ternario -> . ternarioBool
    (102) ternario -> . ( ternarioMat )
    (103) ternario -> . ( ternarioBool )
    (104) ternario -> . ternarioVars
    (105) ternario -> . ( ternarioVars )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    ?               reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 149
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 54

    (146) varsOps -> variable MENOSMENOS .

    ;               reduce using rule 146 (varsOps -> variable MENOSMENOS .)
    ,               reduce using rule 146 (varsOps -> variable MENOSMENOS .)
    )               reduce using rule 146 (varsOps -> variable MENOSMENOS .)
    +               reduce using rule 146 (varsOps -> variable MENOSMENOS .)
    -               reduce using rule 146 (varsOps -> variable MENOSMENOS .)
    *               reduce using rule 146 (varsOps -> variable MENOSMENOS .)
    /               reduce using rule 146 (varsOps -> variable MENOSMENOS .)
    %               reduce using rule 146 (varsOps -> variable MENOSMENOS .)
    ^               reduce using rule 146 (varsOps -> variable MENOSMENOS .)
    OR              reduce using rule 146 (varsOps -> variable MENOSMENOS .)
    AND             reduce using rule 146 (varsOps -> variable MENOSMENOS .)
    ?               reduce using rule 146 (varsOps -> variable MENOSMENOS .)
    EQEQ            reduce using rule 146 (varsOps -> variable MENOSMENOS .)
    DISTINTO        reduce using rule 146 (varsOps -> variable MENOSMENOS .)
    >               reduce using rule 146 (varsOps -> variable MENOSMENOS .)
    <               reduce using rule 146 (varsOps -> variable MENOSMENOS .)
    ]               reduce using rule 146 (varsOps -> variable MENOSMENOS .)
    :               reduce using rule 146 (varsOps -> variable MENOSMENOS .)
    }               reduce using rule 146 (varsOps -> variable MENOSMENOS .)


state 55

    (152) varAsig -> variable MASEQ . valores
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (92) reg -> . { campos }
    (100) ternario -> . ternarioMat
    (101) ternario -> . ternarioBool
    (102) ternario -> . ( ternarioMat )
    (103) ternario -> . ( ternarioBool )
    (104) ternario -> . ternarioVars
    (105) ternario -> . ( ternarioVars )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    ?               reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 150
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 56

    (145) varsOps -> variable MASMAS .

    ;               reduce using rule 145 (varsOps -> variable MASMAS .)
    ,               reduce using rule 145 (varsOps -> variable MASMAS .)
    )               reduce using rule 145 (varsOps -> variable MASMAS .)
    +               reduce using rule 145 (varsOps -> variable MASMAS .)
    -               reduce using rule 145 (varsOps -> variable MASMAS .)
    *               reduce using rule 145 (varsOps -> variable MASMAS .)
    /               reduce using rule 145 (varsOps -> variable MASMAS .)
    %               reduce using rule 145 (varsOps -> variable MASMAS .)
    ^               reduce using rule 145 (varsOps -> variable MASMAS .)
    OR              reduce using rule 145 (varsOps -> variable MASMAS .)
    AND             reduce using rule 145 (varsOps -> variable MASMAS .)
    ?               reduce using rule 145 (varsOps -> variable MASMAS .)
    EQEQ            reduce using rule 145 (varsOps -> variable MASMAS .)
    DISTINTO        reduce using rule 145 (varsOps -> variable MASMAS .)
    >               reduce using rule 145 (varsOps -> variable MASMAS .)
    <               reduce using rule 145 (varsOps -> variable MASMAS .)
    ]               reduce using rule 145 (varsOps -> variable MASMAS .)
    :               reduce using rule 145 (varsOps -> variable MASMAS .)
    }               reduce using rule 145 (varsOps -> variable MASMAS .)


state 57

    (150) varAsig -> variable MULEQ . valores
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (92) reg -> . { campos }
    (100) ternario -> . ternarioMat
    (101) ternario -> . ternarioBool
    (102) ternario -> . ( ternarioMat )
    (103) ternario -> . ( ternarioBool )
    (104) ternario -> . ternarioVars
    (105) ternario -> . ( ternarioVars )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    ?               reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 151
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 58

    (154) varAsig -> variable = . valores
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (92) reg -> . { campos }
    (100) ternario -> . ternarioMat
    (101) ternario -> . ternarioBool
    (102) ternario -> . ( ternarioMat )
    (103) ternario -> . ( ternarioBool )
    (104) ternario -> . ternarioVars
    (105) ternario -> . ( ternarioVars )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    ?               reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 152
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 59

    (151) varAsig -> variable DIVEQ . valores
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (92) reg -> . { campos }
    (100) ternario -> . ternarioMat
    (101) ternario -> . ternarioBool
    (102) ternario -> . ( ternarioMat )
    (103) ternario -> . ( ternarioBool )
    (104) ternario -> . ternarioVars
    (105) ternario -> . ( ternarioVars )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    ?               reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 153
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 60

    (209) expBool -> and .
    (210) and -> and . AND eq
    (212) and -> and . AND valoresBool

    )               reduce using rule 209 (expBool -> and .)
    ?               reduce using rule 209 (expBool -> and .)
    OR              reduce using rule 209 (expBool -> and .)
    ]               reduce using rule 209 (expBool -> and .)
    ,               reduce using rule 209 (expBool -> and .)
    ;               reduce using rule 209 (expBool -> and .)
    :               reduce using rule 209 (expBool -> and .)
    }               reduce using rule 209 (expBool -> and .)
    AND             shift and go to state 154


state 61

    (88) valores -> ternario .

    )               reduce using rule 88 (valores -> ternario .)
    ;               reduce using rule 88 (valores -> ternario .)
    ,               reduce using rule 88 (valores -> ternario .)
    ]               reduce using rule 88 (valores -> ternario .)
    }               reduce using rule 88 (valores -> ternario .)


state 62

    (47) funcReturn -> funcBool .
    (200) valoresBool -> funcBool .
    (225) tCompareEQ -> funcBool .

    )               reduce using rule 47 (funcReturn -> funcBool .)
    ,               reduce using rule 47 (funcReturn -> funcBool .)
    ]               reduce using rule 47 (funcReturn -> funcBool .)
    ;               reduce using rule 47 (funcReturn -> funcBool .)
    }               reduce using rule 47 (funcReturn -> funcBool .)
    OR              reduce using rule 200 (valoresBool -> funcBool .)
    AND             reduce using rule 200 (valoresBool -> funcBool .)
    ?               reduce using rule 200 (valoresBool -> funcBool .)
    EQEQ            reduce using rule 225 (tCompareEQ -> funcBool .)
    DISTINTO        reduce using rule 225 (tCompareEQ -> funcBool .)


state 63

    (91) valores -> RES .

    )               reduce using rule 91 (valores -> RES .)
    ;               reduce using rule 91 (valores -> RES .)
    ,               reduce using rule 91 (valores -> RES .)
    ]               reduce using rule 91 (valores -> RES .)
    }               reduce using rule 91 (valores -> RES .)


state 64

    (45) funcReturn -> funcInt .
    (158) valoresMat -> funcInt .
    (230) tCompareEQ -> funcInt .
    (238) tCompare -> funcInt .

    )               reduce using rule 45 (funcReturn -> funcInt .)
    ,               reduce using rule 45 (funcReturn -> funcInt .)
    ]               reduce using rule 45 (funcReturn -> funcInt .)
    ;               reduce using rule 45 (funcReturn -> funcInt .)
    }               reduce using rule 45 (funcReturn -> funcInt .)
    +               reduce using rule 158 (valoresMat -> funcInt .)
    -               reduce using rule 158 (valoresMat -> funcInt .)
    *               reduce using rule 158 (valoresMat -> funcInt .)
    /               reduce using rule 158 (valoresMat -> funcInt .)
    %               reduce using rule 158 (valoresMat -> funcInt .)
    ^               reduce using rule 158 (valoresMat -> funcInt .)
    EQEQ            reduce using rule 230 (tCompareEQ -> funcInt .)
    DISTINTO        reduce using rule 230 (tCompareEQ -> funcInt .)
    >               reduce using rule 238 (tCompare -> funcInt .)
    <               reduce using rule 238 (tCompare -> funcInt .)


state 65

    (57) elem -> valores . , elem
    (58) elem -> valores .

    ,               shift and go to state 155
    ]               reduce using rule 58 (elem -> valores .)


state 66

    (244) menor -> not .

    EQEQ            reduce using rule 244 (menor -> not .)
    DISTINTO        reduce using rule 244 (menor -> not .)
    AND             reduce using rule 244 (menor -> not .)
    ?               reduce using rule 244 (menor -> not .)
    OR              reduce using rule 244 (menor -> not .)
    ,               reduce using rule 244 (menor -> not .)
    ]               reduce using rule 244 (menor -> not .)
    )               reduce using rule 244 (menor -> not .)
    ;               reduce using rule 244 (menor -> not .)
    :               reduce using rule 244 (menor -> not .)
    }               reduce using rule 244 (menor -> not .)


state 67

    (242) mayor -> menor .

    EQEQ            reduce using rule 242 (mayor -> menor .)
    DISTINTO        reduce using rule 242 (mayor -> menor .)
    AND             reduce using rule 242 (mayor -> menor .)
    ?               reduce using rule 242 (mayor -> menor .)
    OR              reduce using rule 242 (mayor -> menor .)
    :               reduce using rule 242 (mayor -> menor .)
    )               reduce using rule 242 (mayor -> menor .)
    ,               reduce using rule 242 (mayor -> menor .)
    ;               reduce using rule 242 (mayor -> menor .)
    ]               reduce using rule 242 (mayor -> menor .)
    }               reduce using rule 242 (mayor -> menor .)


state 68

    (104) ternario -> ternarioVars .

    ;               reduce using rule 104 (ternario -> ternarioVars .)
    ,               reduce using rule 104 (ternario -> ternarioVars .)
    )               reduce using rule 104 (ternario -> ternarioVars .)
    }               reduce using rule 104 (ternario -> ternarioVars .)
    ]               reduce using rule 104 (ternario -> ternarioVars .)


state 69

    (166) eMat -> valoresMat . + p
    (168) eMat -> valoresMat . + valoresMat
    (171) eMat -> valoresMat . - p
    (173) eMat -> valoresMat . - valoresMat
    (177) p -> valoresMat . * exp
    (178) p -> valoresMat . / exp
    (179) p -> valoresMat . % exp
    (183) p -> valoresMat . * valoresMat
    (184) p -> valoresMat . / valoresMat
    (185) p -> valoresMat . % valoresMat
    (188) exp -> valoresMat . ^ iSing
    (190) exp -> valoresMat . ^ valoresMat

    +               shift and go to state 157
    -               shift and go to state 159
    *               shift and go to state 158
    /               shift and go to state 160
    %               shift and go to state 156
    ^               shift and go to state 161


state 70

    (214) and -> eq .
    (215) eq -> eq . EQEQ mayor
    (216) eq -> eq . DISTINTO mayor
    (219) eq -> eq . EQEQ tCompareEQ
    (220) eq -> eq . DISTINTO tCompareEQ

    AND             reduce using rule 214 (and -> eq .)
    OR              reduce using rule 214 (and -> eq .)
    )               reduce using rule 214 (and -> eq .)
    ?               reduce using rule 214 (and -> eq .)
    :               reduce using rule 214 (and -> eq .)
    ,               reduce using rule 214 (and -> eq .)
    ]               reduce using rule 214 (and -> eq .)
    ;               reduce using rule 214 (and -> eq .)
    }               reduce using rule 214 (and -> eq .)
    EQEQ            shift and go to state 162
    DISTINTO        shift and go to state 163


state 71

    (141) varYVals -> vecVal .
    (142) varYVals -> vecVal . . varYVals
    (61) vecVal -> vecVal . [ expresion ]
    (64) vecVal -> vecVal . [ INT ]
    (148) variable -> vecVal .
    (149) variable -> vecVal . . varYVals

    ?               reduce using rule 141 (varYVals -> vecVal .)
    OR              reduce using rule 141 (varYVals -> vecVal .)
    AND             reduce using rule 141 (varYVals -> vecVal .)
    +               reduce using rule 141 (varYVals -> vecVal .)
    -               reduce using rule 141 (varYVals -> vecVal .)
    *               reduce using rule 141 (varYVals -> vecVal .)
    /               reduce using rule 141 (varYVals -> vecVal .)
    %               reduce using rule 141 (varYVals -> vecVal .)
    ^               reduce using rule 141 (varYVals -> vecVal .)
    EQEQ            reduce using rule 141 (varYVals -> vecVal .)
    DISTINTO        reduce using rule 141 (varYVals -> vecVal .)
    >               reduce using rule 141 (varYVals -> vecVal .)
    <               reduce using rule 141 (varYVals -> vecVal .)
    )               reduce using rule 141 (varYVals -> vecVal .)
    ,               reduce using rule 141 (varYVals -> vecVal .)
    ]               reduce using rule 141 (varYVals -> vecVal .)
    ;               reduce using rule 141 (varYVals -> vecVal .)
    :               reduce using rule 141 (varYVals -> vecVal .)
    }               reduce using rule 141 (varYVals -> vecVal .)
    .               shift and go to state 164
    [               shift and go to state 45
    MASMAS          reduce using rule 148 (variable -> vecVal .)
    MENOSMENOS      reduce using rule 148 (variable -> vecVal .)


state 72

    (86) valores -> STRING .
    (161) valoresMat -> STRING .

    )               reduce using rule 86 (valores -> STRING .)
    ;               reduce using rule 86 (valores -> STRING .)
    ,               reduce using rule 86 (valores -> STRING .)
    ]               reduce using rule 86 (valores -> STRING .)
    }               reduce using rule 86 (valores -> STRING .)
    +               reduce using rule 161 (valoresMat -> STRING .)
    -               reduce using rule 161 (valoresMat -> STRING .)
    *               reduce using rule 161 (valoresMat -> STRING .)
    /               reduce using rule 161 (valoresMat -> STRING .)
    %               reduce using rule 161 (valoresMat -> STRING .)
    ^               reduce using rule 161 (valoresMat -> STRING .)


state 73

    (206) expBool -> valoresBool . OR and
    (208) expBool -> valoresBool . OR valoresBool
    (211) and -> valoresBool . AND eq
    (213) and -> valoresBool . AND valoresBool
    (124) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (106) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars

    OR              shift and go to state 166
    AND             shift and go to state 165
    ?               shift and go to state 167


state 74

    (80) valores -> eMat .
    (165) eMat -> eMat . + p
    (167) eMat -> eMat . + valoresMat
    (170) eMat -> eMat . - p
    (172) eMat -> eMat . - valoresMat
    (231) tCompareEQ -> eMat .
    (234) tCompare -> eMat .

    )               reduce using rule 80 (valores -> eMat .)
    ;               reduce using rule 80 (valores -> eMat .)
    ,               reduce using rule 80 (valores -> eMat .)
    ]               reduce using rule 80 (valores -> eMat .)
    }               reduce using rule 80 (valores -> eMat .)
    +               shift and go to state 168
    -               shift and go to state 169
    EQEQ            reduce using rule 231 (tCompareEQ -> eMat .)
    DISTINTO        reduce using rule 231 (tCompareEQ -> eMat .)
    >               reduce using rule 234 (tCompare -> eMat .)
    <               reduce using rule 234 (tCompare -> eMat .)


state 75

    (217) eq -> tCompareEQ . EQEQ mayor
    (218) eq -> tCompareEQ . DISTINTO mayor
    (221) eq -> tCompareEQ . EQEQ tCompareEQ
    (222) eq -> tCompareEQ . DISTINTO tCompareEQ

    EQEQ            shift and go to state 170
    DISTINTO        shift and go to state 171


state 76

    (102) ternario -> ( . ternarioMat )
    (103) ternario -> ( . ternarioBool )
    (105) ternario -> ( . ternarioVars )
    (164) valoresMat -> ( . ternarioMat )
    (203) valoresBool -> ( . ternarioBool )
    (232) tCompareEQ -> ( . ternarioBool )
    (233) tCompareEQ -> ( . ternarioMat )
    (197) paren -> ( . eMat )
    (198) paren -> ( . valoresMat )
    (240) tCompare -> ( . ternarioMat )
    (248) parenBool -> ( . expBool )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (56) vec -> . [ elem ]
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 177
    BOOL            shift and go to state 187
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 175
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 178
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 182
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    expBool                        shift and go to state 188
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 179
    ternarioVars                   shift and go to state 189
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 77

    (193) iSing -> + . paren
    (195) iSing -> + . valoresMat
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (56) vec -> . [ elem ]

    (               shift and go to state 194
    INT             shift and go to state 197
    FLOAT           shift and go to state 196
    STRING          shift and go to state 181
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    [               shift and go to state 20

    funcString                     shift and go to state 184
    funcInt                        shift and go to state 192
    vecVal                         shift and go to state 71
    varsOps                        shift and go to state 198
    valoresMat                     shift and go to state 193
    variable                       shift and go to state 89
    paren                          shift and go to state 195
    varYVals                       shift and go to state 199
    reg                            shift and go to state 180
    atributos                      shift and go to state 191
    vec                            shift and go to state 33

state 78

    (192) iSing -> - . paren
    (194) iSing -> - . valoresMat
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (56) vec -> . [ elem ]

    (               shift and go to state 194
    INT             shift and go to state 197
    FLOAT           shift and go to state 196
    STRING          shift and go to state 181
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    [               shift and go to state 20

    funcString                     shift and go to state 184
    funcInt                        shift and go to state 192
    vecVal                         shift and go to state 71
    varsOps                        shift and go to state 198
    valoresMat                     shift and go to state 200
    variable                       shift and go to state 89
    paren                          shift and go to state 201
    varYVals                       shift and go to state 199
    reg                            shift and go to state 180
    atributos                      shift and go to state 191
    vec                            shift and go to state 33

state 79

    (100) ternario -> ternarioMat .

    ;               reduce using rule 100 (ternario -> ternarioMat .)
    ,               reduce using rule 100 (ternario -> ternarioMat .)
    )               reduce using rule 100 (ternario -> ternarioMat .)
    }               reduce using rule 100 (ternario -> ternarioMat .)
    ]               reduce using rule 100 (ternario -> ternarioMat .)


state 80

    (90) valores -> vec .
    (60) vecVal -> vec . [ expresion ]
    (63) vecVal -> vec . [ INT ]

    )               reduce using rule 90 (valores -> vec .)
    ;               reduce using rule 90 (valores -> vec .)
    ,               reduce using rule 90 (valores -> vec .)
    ]               reduce using rule 90 (valores -> vec .)
    }               reduce using rule 90 (valores -> vec .)
    [               shift and go to state 115


state 81

    (223) eq -> mayor .

    EQEQ            reduce using rule 223 (eq -> mayor .)
    DISTINTO        reduce using rule 223 (eq -> mayor .)
    AND             reduce using rule 223 (eq -> mayor .)
    ?               reduce using rule 223 (eq -> mayor .)
    OR              reduce using rule 223 (eq -> mayor .)
    :               reduce using rule 223 (eq -> mayor .)
    )               reduce using rule 223 (eq -> mayor .)
    ,               reduce using rule 223 (eq -> mayor .)
    ]               reduce using rule 223 (eq -> mayor .)
    ;               reduce using rule 223 (eq -> mayor .)
    }               reduce using rule 223 (eq -> mayor .)


state 82

    (83) valores -> reg .
    (96) atributos -> reg . . valoresCampos

    )               reduce using rule 83 (valores -> reg .)
    ;               reduce using rule 83 (valores -> reg .)
    ,               reduce using rule 83 (valores -> reg .)
    ]               reduce using rule 83 (valores -> reg .)
    }               reduce using rule 83 (valores -> reg .)
    .               shift and go to state 202


state 83

    (81) valores -> expBool .
    (205) expBool -> expBool . OR and
    (207) expBool -> expBool . OR valoresBool
    (125) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (134) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars

    )               reduce using rule 81 (valores -> expBool .)
    ;               reduce using rule 81 (valores -> expBool .)
    ,               reduce using rule 81 (valores -> expBool .)
    ]               reduce using rule 81 (valores -> expBool .)
    }               reduce using rule 81 (valores -> expBool .)
    OR              shift and go to state 203
    ?               shift and go to state 204


state 84

    (101) ternario -> ternarioBool .

    ;               reduce using rule 101 (ternario -> ternarioBool .)
    ,               reduce using rule 101 (ternario -> ternarioBool .)
    )               reduce using rule 101 (ternario -> ternarioBool .)
    }               reduce using rule 101 (ternario -> ternarioBool .)
    ]               reduce using rule 101 (ternario -> ternarioBool .)


state 85

    (191) exp -> iSing .

    ^               reduce using rule 191 (exp -> iSing .)
    *               reduce using rule 191 (exp -> iSing .)
    /               reduce using rule 191 (exp -> iSing .)
    %               reduce using rule 191 (exp -> iSing .)
    +               reduce using rule 191 (exp -> iSing .)
    -               reduce using rule 191 (exp -> iSing .)
    ,               reduce using rule 191 (exp -> iSing .)
    }               reduce using rule 191 (exp -> iSing .)
    EQEQ            reduce using rule 191 (exp -> iSing .)
    DISTINTO        reduce using rule 191 (exp -> iSing .)
    >               reduce using rule 191 (exp -> iSing .)
    <               reduce using rule 191 (exp -> iSing .)
    :               reduce using rule 191 (exp -> iSing .)
    )               reduce using rule 191 (exp -> iSing .)
    ]               reduce using rule 191 (exp -> iSing .)
    ;               reduce using rule 191 (exp -> iSing .)
    AND             reduce using rule 191 (exp -> iSing .)
    OR              reduce using rule 191 (exp -> iSing .)
    ?               reduce using rule 191 (exp -> iSing .)


state 86

    (247) not -> parenBool .

    EQEQ            reduce using rule 247 (not -> parenBool .)
    DISTINTO        reduce using rule 247 (not -> parenBool .)
    AND             reduce using rule 247 (not -> parenBool .)
    OR              reduce using rule 247 (not -> parenBool .)
    ?               reduce using rule 247 (not -> parenBool .)
    ]               reduce using rule 247 (not -> parenBool .)
    :               reduce using rule 247 (not -> parenBool .)
    ,               reduce using rule 247 (not -> parenBool .)
    )               reduce using rule 247 (not -> parenBool .)
    ;               reduce using rule 247 (not -> parenBool .)
    }               reduce using rule 247 (not -> parenBool .)


state 87

    (241) mayor -> tCompare . > tCompare
    (243) menor -> tCompare . < tCompare

    >               shift and go to state 206
    <               shift and go to state 205


state 88

    (196) iSing -> paren .

    ^               reduce using rule 196 (iSing -> paren .)
    *               reduce using rule 196 (iSing -> paren .)
    /               reduce using rule 196 (iSing -> paren .)
    %               reduce using rule 196 (iSing -> paren .)
    +               reduce using rule 196 (iSing -> paren .)
    -               reduce using rule 196 (iSing -> paren .)
    )               reduce using rule 196 (iSing -> paren .)
    EQEQ            reduce using rule 196 (iSing -> paren .)
    DISTINTO        reduce using rule 196 (iSing -> paren .)
    >               reduce using rule 196 (iSing -> paren .)
    <               reduce using rule 196 (iSing -> paren .)
    :               reduce using rule 196 (iSing -> paren .)
    ,               reduce using rule 196 (iSing -> paren .)
    ]               reduce using rule 196 (iSing -> paren .)
    ;               reduce using rule 196 (iSing -> paren .)
    AND             reduce using rule 196 (iSing -> paren .)
    OR              reduce using rule 196 (iSing -> paren .)
    ?               reduce using rule 196 (iSing -> paren .)
    }               reduce using rule 196 (iSing -> paren .)


state 89

    (145) varsOps -> variable . MASMAS
    (146) varsOps -> variable . MENOSMENOS

    MASMAS          shift and go to state 56
    MENOSMENOS      shift and go to state 54


state 90

    (140) varYVals -> ID .
    (95) atributos -> ID . . valoresCampos
    (59) vecVal -> ID . [ expresion ]
    (62) vecVal -> ID . [ INT ]
    (147) variable -> ID .

    ?               reduce using rule 140 (varYVals -> ID .)
    OR              reduce using rule 140 (varYVals -> ID .)
    AND             reduce using rule 140 (varYVals -> ID .)
    +               reduce using rule 140 (varYVals -> ID .)
    -               reduce using rule 140 (varYVals -> ID .)
    *               reduce using rule 140 (varYVals -> ID .)
    /               reduce using rule 140 (varYVals -> ID .)
    %               reduce using rule 140 (varYVals -> ID .)
    ^               reduce using rule 140 (varYVals -> ID .)
    EQEQ            reduce using rule 140 (varYVals -> ID .)
    DISTINTO        reduce using rule 140 (varYVals -> ID .)
    >               reduce using rule 140 (varYVals -> ID .)
    <               reduce using rule 140 (varYVals -> ID .)
    )               reduce using rule 140 (varYVals -> ID .)
    ;               reduce using rule 140 (varYVals -> ID .)
    ,               reduce using rule 140 (varYVals -> ID .)
    ]               reduce using rule 140 (varYVals -> ID .)
    }               reduce using rule 140 (varYVals -> ID .)
    .               shift and go to state 207
    [               shift and go to state 105
    MASMAS          reduce using rule 147 (variable -> ID .)
    MENOSMENOS      reduce using rule 147 (variable -> ID .)


state 91

    (46) funcReturn -> funcString .
    (160) valoresMat -> funcString .

    )               reduce using rule 46 (funcReturn -> funcString .)
    ,               reduce using rule 46 (funcReturn -> funcString .)
    ]               reduce using rule 46 (funcReturn -> funcString .)
    ;               reduce using rule 46 (funcReturn -> funcString .)
    }               reduce using rule 46 (funcReturn -> funcString .)
    +               reduce using rule 160 (valoresMat -> funcString .)
    -               reduce using rule 160 (valoresMat -> funcString .)
    *               reduce using rule 160 (valoresMat -> funcString .)
    /               reduce using rule 160 (valoresMat -> funcString .)
    %               reduce using rule 160 (valoresMat -> funcString .)
    ^               reduce using rule 160 (valoresMat -> funcString .)


state 92

    (84) valores -> INT .
    (156) valoresMat -> INT .
    (228) tCompareEQ -> INT .
    (237) tCompare -> INT .

    )               reduce using rule 84 (valores -> INT .)
    ;               reduce using rule 84 (valores -> INT .)
    ,               reduce using rule 84 (valores -> INT .)
    ]               reduce using rule 84 (valores -> INT .)
    }               reduce using rule 84 (valores -> INT .)
    +               reduce using rule 156 (valoresMat -> INT .)
    -               reduce using rule 156 (valoresMat -> INT .)
    *               reduce using rule 156 (valoresMat -> INT .)
    /               reduce using rule 156 (valoresMat -> INT .)
    %               reduce using rule 156 (valoresMat -> INT .)
    ^               reduce using rule 156 (valoresMat -> INT .)
    EQEQ            reduce using rule 228 (tCompareEQ -> INT .)
    DISTINTO        reduce using rule 228 (tCompareEQ -> INT .)
    >               reduce using rule 237 (tCompare -> INT .)
    <               reduce using rule 237 (tCompare -> INT .)


state 93

    (82) valores -> funcReturn .

    )               reduce using rule 82 (valores -> funcReturn .)
    ;               reduce using rule 82 (valores -> funcReturn .)
    ,               reduce using rule 82 (valores -> funcReturn .)
    ]               reduce using rule 82 (valores -> funcReturn .)
    }               reduce using rule 82 (valores -> funcReturn .)


state 94

    (85) valores -> FLOAT .
    (157) valoresMat -> FLOAT .
    (229) tCompareEQ -> FLOAT .
    (239) tCompare -> FLOAT .

    )               reduce using rule 85 (valores -> FLOAT .)
    ;               reduce using rule 85 (valores -> FLOAT .)
    ,               reduce using rule 85 (valores -> FLOAT .)
    ]               reduce using rule 85 (valores -> FLOAT .)
    }               reduce using rule 85 (valores -> FLOAT .)
    +               reduce using rule 157 (valoresMat -> FLOAT .)
    -               reduce using rule 157 (valoresMat -> FLOAT .)
    *               reduce using rule 157 (valoresMat -> FLOAT .)
    /               reduce using rule 157 (valoresMat -> FLOAT .)
    %               reduce using rule 157 (valoresMat -> FLOAT .)
    ^               reduce using rule 157 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 229 (tCompareEQ -> FLOAT .)
    DISTINTO        reduce using rule 229 (tCompareEQ -> FLOAT .)
    >               reduce using rule 239 (tCompare -> FLOAT .)
    <               reduce using rule 239 (tCompare -> FLOAT .)


state 95

    (56) vec -> [ elem . ]

    ]               shift and go to state 208


state 96

    (169) eMat -> p .
    (174) p -> p . * exp
    (175) p -> p . / exp
    (176) p -> p . % exp
    (180) p -> p . * valoresMat
    (181) p -> p . / valoresMat
    (182) p -> p . % valoresMat

    +               reduce using rule 169 (eMat -> p .)
    -               reduce using rule 169 (eMat -> p .)
    ,               reduce using rule 169 (eMat -> p .)
    ]               reduce using rule 169 (eMat -> p .)
    )               reduce using rule 169 (eMat -> p .)
    ;               reduce using rule 169 (eMat -> p .)
    :               reduce using rule 169 (eMat -> p .)
    }               reduce using rule 169 (eMat -> p .)
    EQEQ            reduce using rule 169 (eMat -> p .)
    DISTINTO        reduce using rule 169 (eMat -> p .)
    >               reduce using rule 169 (eMat -> p .)
    <               reduce using rule 169 (eMat -> p .)
    AND             reduce using rule 169 (eMat -> p .)
    OR              reduce using rule 169 (eMat -> p .)
    ?               reduce using rule 169 (eMat -> p .)
    *               shift and go to state 210
    /               shift and go to state 211
    %               shift and go to state 209


state 97

    (87) valores -> BOOL .
    (199) valoresBool -> BOOL .
    (224) tCompareEQ -> BOOL .

    )               reduce using rule 87 (valores -> BOOL .)
    ;               reduce using rule 87 (valores -> BOOL .)
    ,               reduce using rule 87 (valores -> BOOL .)
    ]               reduce using rule 87 (valores -> BOOL .)
    }               reduce using rule 87 (valores -> BOOL .)
    OR              reduce using rule 199 (valoresBool -> BOOL .)
    AND             reduce using rule 199 (valoresBool -> BOOL .)
    ?               reduce using rule 199 (valoresBool -> BOOL .)
    EQEQ            reduce using rule 224 (tCompareEQ -> BOOL .)
    DISTINTO        reduce using rule 224 (tCompareEQ -> BOOL .)


state 98

    (79) valores -> varsOps .
    (163) valoresMat -> varsOps .
    (202) valoresBool -> varsOps .
    (227) tCompareEQ -> varsOps .
    (235) tCompare -> varsOps .

    )               reduce using rule 79 (valores -> varsOps .)
    ;               reduce using rule 79 (valores -> varsOps .)
    ,               reduce using rule 79 (valores -> varsOps .)
    ]               reduce using rule 79 (valores -> varsOps .)
    }               reduce using rule 79 (valores -> varsOps .)
    +               reduce using rule 163 (valoresMat -> varsOps .)
    -               reduce using rule 163 (valoresMat -> varsOps .)
    *               reduce using rule 163 (valoresMat -> varsOps .)
    /               reduce using rule 163 (valoresMat -> varsOps .)
    %               reduce using rule 163 (valoresMat -> varsOps .)
    ^               reduce using rule 163 (valoresMat -> varsOps .)
    OR              reduce using rule 202 (valoresBool -> varsOps .)
    AND             reduce using rule 202 (valoresBool -> varsOps .)
    ?               reduce using rule 202 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 227 (tCompareEQ -> varsOps .)
    DISTINTO        reduce using rule 227 (tCompareEQ -> varsOps .)
    >               reduce using rule 235 (tCompare -> varsOps .)
    <               reduce using rule 235 (tCompare -> varsOps .)


state 99

    (245) not -> NOT . not
    (246) not -> NOT . valoresBool
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (248) parenBool -> . ( expBool )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (56) vec -> . [ elem ]

    NOT             shift and go to state 99
    BOOL            shift and go to state 217
    (               shift and go to state 214
    EQEQ            reduce using rule 204 (valoresBool -> .)
    DISTINTO        reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    ?               reduce using rule 204 (valoresBool -> .)
    ,               reduce using rule 204 (valoresBool -> .)
    ]               reduce using rule 204 (valoresBool -> .)
    )               reduce using rule 204 (valoresBool -> .)
    ;               reduce using rule 204 (valoresBool -> .)
    :               reduce using rule 204 (valoresBool -> .)
    }               reduce using rule 204 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 216
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    [               shift and go to state 20

    funcBool                       shift and go to state 212
    parenBool                      shift and go to state 86
    variable                       shift and go to state 89
    varsOps                        shift and go to state 218
    vecVal                         shift and go to state 71
    not                            shift and go to state 215
    varYVals                       shift and go to state 219
    valoresBool                    shift and go to state 213
    vec                            shift and go to state 33

state 100

    (186) p -> exp .
    (187) exp -> exp . ^ iSing
    (189) exp -> exp . ^ valoresMat

    *               reduce using rule 186 (p -> exp .)
    /               reduce using rule 186 (p -> exp .)
    %               reduce using rule 186 (p -> exp .)
    +               reduce using rule 186 (p -> exp .)
    -               reduce using rule 186 (p -> exp .)
    :               reduce using rule 186 (p -> exp .)
    EQEQ            reduce using rule 186 (p -> exp .)
    DISTINTO        reduce using rule 186 (p -> exp .)
    >               reduce using rule 186 (p -> exp .)
    <               reduce using rule 186 (p -> exp .)
    ,               reduce using rule 186 (p -> exp .)
    ]               reduce using rule 186 (p -> exp .)
    )               reduce using rule 186 (p -> exp .)
    ;               reduce using rule 186 (p -> exp .)
    }               reduce using rule 186 (p -> exp .)
    AND             reduce using rule 186 (p -> exp .)
    OR              reduce using rule 186 (p -> exp .)
    ?               reduce using rule 186 (p -> exp .)
    ^               shift and go to state 220


state 101

    (92) reg -> { . campos }
    (93) campos -> . ID : valores , campos
    (94) campos -> . ID : valores

    ID              shift and go to state 222

    campos                         shift and go to state 221

state 102

    (78) valores -> varYVals .
    (162) valoresMat -> varYVals .
    (201) valoresBool -> varYVals .
    (226) tCompareEQ -> varYVals .
    (236) tCompare -> varYVals .

    )               reduce using rule 78 (valores -> varYVals .)
    ;               reduce using rule 78 (valores -> varYVals .)
    ,               reduce using rule 78 (valores -> varYVals .)
    ]               reduce using rule 78 (valores -> varYVals .)
    }               reduce using rule 78 (valores -> varYVals .)
    +               reduce using rule 162 (valoresMat -> varYVals .)
    -               reduce using rule 162 (valoresMat -> varYVals .)
    *               reduce using rule 162 (valoresMat -> varYVals .)
    /               reduce using rule 162 (valoresMat -> varYVals .)
    %               reduce using rule 162 (valoresMat -> varYVals .)
    ^               reduce using rule 162 (valoresMat -> varYVals .)
    OR              reduce using rule 201 (valoresBool -> varYVals .)
    AND             reduce using rule 201 (valoresBool -> varYVals .)
    ?               reduce using rule 201 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 226 (tCompareEQ -> varYVals .)
    DISTINTO        reduce using rule 226 (tCompareEQ -> varYVals .)
    >               reduce using rule 236 (tCompare -> varYVals .)
    <               reduce using rule 236 (tCompare -> varYVals .)


state 103

    (89) valores -> atributos .
    (159) valoresMat -> atributos .

    )               reduce using rule 89 (valores -> atributos .)
    ;               reduce using rule 89 (valores -> atributos .)
    ,               reduce using rule 89 (valores -> atributos .)
    ]               reduce using rule 89 (valores -> atributos .)
    }               reduce using rule 89 (valores -> atributos .)
    +               reduce using rule 159 (valoresMat -> atributos .)
    -               reduce using rule 159 (valoresMat -> atributos .)
    *               reduce using rule 159 (valoresMat -> atributos .)
    /               reduce using rule 159 (valoresMat -> atributos .)
    %               reduce using rule 159 (valoresMat -> atributos .)
    ^               reduce using rule 159 (valoresMat -> atributos .)


state 104

    (155) varAsig -> ID . . ID = valores

    ID              shift and go to state 223


state 105

    (59) vecVal -> ID [ . expresion ]
    (62) vecVal -> ID [ . INT ]
    (65) expresion -> . eMat
    (66) expresion -> . expBool
    (67) expresion -> . funcReturn
    (68) expresion -> . reg
    (69) expresion -> . FLOAT
    (70) expresion -> . STRING
    (71) expresion -> . BOOL
    (72) expresion -> . varYVals
    (73) expresion -> . varsOps
    (74) expresion -> . vec
    (75) expresion -> . ternario
    (76) expresion -> . atributos
    (77) expresion -> . RES
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (92) reg -> . { campos }
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (56) vec -> . [ elem ]
    (100) ternario -> . ternarioMat
    (101) ternario -> . ternarioBool
    (102) ternario -> . ( ternarioMat )
    (103) ternario -> . ( ternarioBool )
    (104) ternario -> . ternarioVars
    (105) ternario -> . ( ternarioVars )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 225
    FLOAT           shift and go to state 139
    STRING          shift and go to state 131
    BOOL            shift and go to state 140
    RES             shift and go to state 130
    {               shift and go to state 101
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 76
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    ?               reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 129
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 132
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 133
    paren                          shift and go to state 88
    reg                            shift and go to state 134
    expBool                        shift and go to state 135
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    expresion                      shift and go to state 224
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 138
    p                              shift and go to state 96
    varsOps                        shift and go to state 141
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 142
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 143

state 106

    (6) lAbierta -> IF ( . cosaBooleana ) linea
    (7) lAbierta -> IF ( . cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> IF ( . cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> IF ( . cosaBooleana ) { g }
    (14) lCerrada -> IF ( . cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( . cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (41) cosaBooleana -> . expBool
    (42) cosaBooleana -> . valoresBool
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (56) vec -> . [ elem ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (248) parenBool -> . ( expBool )
    (92) reg -> . { campos }
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )

    BOOL            shift and go to state 187
    (               shift and go to state 229
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    )               reduce using rule 204 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 230
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    valoresBool                    shift and go to state 227
    eMat                           shift and go to state 228
    p                              shift and go to state 96
    atributos                      shift and go to state 191
    mayor                          shift and go to state 81
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 234
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    cosaBooleana                   shift and go to state 231
    funcString                     shift and go to state 184
    tCompareEQ                     shift and go to state 75
    exp                            shift and go to state 100
    varYVals                       shift and go to state 235
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 236

state 107

    (30) sentencia -> varAsig ; .

    WHILE           reduce using rule 30 (sentencia -> varAsig ; .)
    COMMENT         reduce using rule 30 (sentencia -> varAsig ; .)
    IF              reduce using rule 30 (sentencia -> varAsig ; .)
    DO              reduce using rule 30 (sentencia -> varAsig ; .)
    FOR             reduce using rule 30 (sentencia -> varAsig ; .)
    RETURN          reduce using rule 30 (sentencia -> varAsig ; .)
    ;               reduce using rule 30 (sentencia -> varAsig ; .)
    MENOSMENOS      reduce using rule 30 (sentencia -> varAsig ; .)
    MASMAS          reduce using rule 30 (sentencia -> varAsig ; .)
    ID              reduce using rule 30 (sentencia -> varAsig ; .)
    PRINT           reduce using rule 30 (sentencia -> varAsig ; .)
    MULTIESCALAR    reduce using rule 30 (sentencia -> varAsig ; .)
    LENGTH          reduce using rule 30 (sentencia -> varAsig ; .)
    CAPITALIZAR     reduce using rule 30 (sentencia -> varAsig ; .)
    COLINEALES      reduce using rule 30 (sentencia -> varAsig ; .)
    [               reduce using rule 30 (sentencia -> varAsig ; .)
    $end            reduce using rule 30 (sentencia -> varAsig ; .)
    }               reduce using rule 30 (sentencia -> varAsig ; .)
    ELSE            reduce using rule 30 (sentencia -> varAsig ; .)


state 108

    (50) funcString -> CAPITALIZAR ( . valores )
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (92) reg -> . { campos }
    (100) ternario -> . ternarioMat
    (101) ternario -> . ternarioBool
    (102) ternario -> . ( ternarioMat )
    (103) ternario -> . ( ternarioBool )
    (104) ternario -> . ternarioVars
    (105) ternario -> . ( ternarioVars )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    ?               reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 237
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 109

    (48) funcInt -> MULTIESCALAR ( . valores , valores param )
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (92) reg -> . { campos }
    (100) ternario -> . ternarioMat
    (101) ternario -> . ternarioBool
    (102) ternario -> . ( ternarioMat )
    (103) ternario -> . ( ternarioBool )
    (104) ternario -> . ternarioVars
    (105) ternario -> . ( ternarioVars )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    ?               reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    valoresBool                    shift and go to state 73
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 238
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 110

    (144) varsOps -> MASMAS variable .

    ;               reduce using rule 144 (varsOps -> MASMAS variable .)
    ,               reduce using rule 144 (varsOps -> MASMAS variable .)
    )               reduce using rule 144 (varsOps -> MASMAS variable .)
    +               reduce using rule 144 (varsOps -> MASMAS variable .)
    -               reduce using rule 144 (varsOps -> MASMAS variable .)
    *               reduce using rule 144 (varsOps -> MASMAS variable .)
    /               reduce using rule 144 (varsOps -> MASMAS variable .)
    %               reduce using rule 144 (varsOps -> MASMAS variable .)
    ^               reduce using rule 144 (varsOps -> MASMAS variable .)
    OR              reduce using rule 144 (varsOps -> MASMAS variable .)
    AND             reduce using rule 144 (varsOps -> MASMAS variable .)
    ?               reduce using rule 144 (varsOps -> MASMAS variable .)
    EQEQ            reduce using rule 144 (varsOps -> MASMAS variable .)
    DISTINTO        reduce using rule 144 (varsOps -> MASMAS variable .)
    >               reduce using rule 144 (varsOps -> MASMAS variable .)
    <               reduce using rule 144 (varsOps -> MASMAS variable .)
    ]               reduce using rule 144 (varsOps -> MASMAS variable .)
    :               reduce using rule 144 (varsOps -> MASMAS variable .)
    }               reduce using rule 144 (varsOps -> MASMAS variable .)


state 111

    (24) lCerrada -> loop COMMENT . com lCerrada
    (12) com -> . COMMENT com
    (13) com -> . empty
    (55) empty -> .

    COMMENT         shift and go to state 117
    IF              reduce using rule 55 (empty -> .)
    DO              reduce using rule 55 (empty -> .)
    RETURN          reduce using rule 55 (empty -> .)
    ;               reduce using rule 55 (empty -> .)
    WHILE           reduce using rule 55 (empty -> .)
    FOR             reduce using rule 55 (empty -> .)
    MENOSMENOS      reduce using rule 55 (empty -> .)
    MASMAS          reduce using rule 55 (empty -> .)
    ID              reduce using rule 55 (empty -> .)
    PRINT           reduce using rule 55 (empty -> .)
    MULTIESCALAR    reduce using rule 55 (empty -> .)
    LENGTH          reduce using rule 55 (empty -> .)
    CAPITALIZAR     reduce using rule 55 (empty -> .)
    COLINEALES      reduce using rule 55 (empty -> .)
    [               reduce using rule 55 (empty -> .)

    com                            shift and go to state 239
    empty                          shift and go to state 119

state 112

    (23) lCerrada -> loop lCerrada .

    COMMENT         reduce using rule 23 (lCerrada -> loop lCerrada .)
    IF              reduce using rule 23 (lCerrada -> loop lCerrada .)
    DO              reduce using rule 23 (lCerrada -> loop lCerrada .)
    WHILE           reduce using rule 23 (lCerrada -> loop lCerrada .)
    FOR             reduce using rule 23 (lCerrada -> loop lCerrada .)
    RETURN          reduce using rule 23 (lCerrada -> loop lCerrada .)
    ;               reduce using rule 23 (lCerrada -> loop lCerrada .)
    MENOSMENOS      reduce using rule 23 (lCerrada -> loop lCerrada .)
    MASMAS          reduce using rule 23 (lCerrada -> loop lCerrada .)
    ID              reduce using rule 23 (lCerrada -> loop lCerrada .)
    PRINT           reduce using rule 23 (lCerrada -> loop lCerrada .)
    MULTIESCALAR    reduce using rule 23 (lCerrada -> loop lCerrada .)
    LENGTH          reduce using rule 23 (lCerrada -> loop lCerrada .)
    CAPITALIZAR     reduce using rule 23 (lCerrada -> loop lCerrada .)
    COLINEALES      reduce using rule 23 (lCerrada -> loop lCerrada .)
    [               reduce using rule 23 (lCerrada -> loop lCerrada .)
    }               reduce using rule 23 (lCerrada -> loop lCerrada .)
    $end            reduce using rule 23 (lCerrada -> loop lCerrada .)
    ELSE            reduce using rule 23 (lCerrada -> loop lCerrada .)


state 113

    (10) lAbierta -> loop lAbierta .

    COMMENT         reduce using rule 10 (lAbierta -> loop lAbierta .)
    IF              reduce using rule 10 (lAbierta -> loop lAbierta .)
    DO              reduce using rule 10 (lAbierta -> loop lAbierta .)
    WHILE           reduce using rule 10 (lAbierta -> loop lAbierta .)
    FOR             reduce using rule 10 (lAbierta -> loop lAbierta .)
    RETURN          reduce using rule 10 (lAbierta -> loop lAbierta .)
    ;               reduce using rule 10 (lAbierta -> loop lAbierta .)
    MENOSMENOS      reduce using rule 10 (lAbierta -> loop lAbierta .)
    MASMAS          reduce using rule 10 (lAbierta -> loop lAbierta .)
    ID              reduce using rule 10 (lAbierta -> loop lAbierta .)
    PRINT           reduce using rule 10 (lAbierta -> loop lAbierta .)
    MULTIESCALAR    reduce using rule 10 (lAbierta -> loop lAbierta .)
    LENGTH          reduce using rule 10 (lAbierta -> loop lAbierta .)
    CAPITALIZAR     reduce using rule 10 (lAbierta -> loop lAbierta .)
    COLINEALES      reduce using rule 10 (lAbierta -> loop lAbierta .)
    [               reduce using rule 10 (lAbierta -> loop lAbierta .)
    }               reduce using rule 10 (lAbierta -> loop lAbierta .)
    $end            reduce using rule 10 (lAbierta -> loop lAbierta .)


state 114

    (22) lCerrada -> loop { . g }
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (55) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (150) varAsig -> . variable MULEQ valores
    (151) varAsig -> . variable DIVEQ valores
    (152) varAsig -> . variable MASEQ valores
    (153) varAsig -> . variable MENOSEQ valores
    (154) varAsig -> . variable = valores
    (155) varAsig -> . ID . ID = valores
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 55 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    linea                          shift and go to state 34
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 12
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 240
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 30
    varsOps                        shift and go to state 13
    loop                           shift and go to state 32

state 115

    (60) vecVal -> vec [ . expresion ]
    (63) vecVal -> vec [ . INT ]
    (65) expresion -> . eMat
    (66) expresion -> . expBool
    (67) expresion -> . funcReturn
    (68) expresion -> . reg
    (69) expresion -> . FLOAT
    (70) expresion -> . STRING
    (71) expresion -> . BOOL
    (72) expresion -> . varYVals
    (73) expresion -> . varsOps
    (74) expresion -> . vec
    (75) expresion -> . ternario
    (76) expresion -> . atributos
    (77) expresion -> . RES
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (92) reg -> . { campos }
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (56) vec -> . [ elem ]
    (100) ternario -> . ternarioMat
    (101) ternario -> . ternarioBool
    (102) ternario -> . ( ternarioMat )
    (103) ternario -> . ( ternarioBool )
    (104) ternario -> . ternarioVars
    (105) ternario -> . ( ternarioVars )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 242
    FLOAT           shift and go to state 139
    STRING          shift and go to state 131
    BOOL            shift and go to state 140
    RES             shift and go to state 130
    {               shift and go to state 101
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 76
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    ?               reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 129
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 132
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 133
    paren                          shift and go to state 88
    reg                            shift and go to state 134
    varsOps                        shift and go to state 141
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    expresion                      shift and go to state 241
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 138
    p                              shift and go to state 96
    expBool                        shift and go to state 135
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 142
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 143

state 116

    (1) g -> linea g .

    }               reduce using rule 1 (g -> linea g .)
    $end            reduce using rule 1 (g -> linea g .)


state 117

    (12) com -> COMMENT . com
    (12) com -> . COMMENT com
    (13) com -> . empty
    (55) empty -> .

    COMMENT         shift and go to state 117
    IF              reduce using rule 55 (empty -> .)
    DO              reduce using rule 55 (empty -> .)
    RETURN          reduce using rule 55 (empty -> .)
    ;               reduce using rule 55 (empty -> .)
    WHILE           reduce using rule 55 (empty -> .)
    FOR             reduce using rule 55 (empty -> .)
    MENOSMENOS      reduce using rule 55 (empty -> .)
    MASMAS          reduce using rule 55 (empty -> .)
    ID              reduce using rule 55 (empty -> .)
    PRINT           reduce using rule 55 (empty -> .)
    MULTIESCALAR    reduce using rule 55 (empty -> .)
    LENGTH          reduce using rule 55 (empty -> .)
    CAPITALIZAR     reduce using rule 55 (empty -> .)
    COLINEALES      reduce using rule 55 (empty -> .)
    [               reduce using rule 55 (empty -> .)

    com                            shift and go to state 243
    empty                          shift and go to state 119

state 118

    (27) lCerrada -> DO COMMENT com . lCerrada WHILE ( valores ) ;
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (150) varAsig -> . variable MULEQ valores
    (151) varAsig -> . variable DIVEQ valores
    (152) varAsig -> . variable MASEQ valores
    (153) varAsig -> . variable MENOSEQ valores
    (154) varAsig -> . variable = valores
    (155) varAsig -> . ID . ID = valores
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 244
    varsOps                        shift and go to state 13
    loop                           shift and go to state 39

state 119

    (13) com -> empty .

    IF              reduce using rule 13 (com -> empty .)
    DO              reduce using rule 13 (com -> empty .)
    RETURN          reduce using rule 13 (com -> empty .)
    ;               reduce using rule 13 (com -> empty .)
    WHILE           reduce using rule 13 (com -> empty .)
    FOR             reduce using rule 13 (com -> empty .)
    MENOSMENOS      reduce using rule 13 (com -> empty .)
    MASMAS          reduce using rule 13 (com -> empty .)
    ID              reduce using rule 13 (com -> empty .)
    PRINT           reduce using rule 13 (com -> empty .)
    MULTIESCALAR    reduce using rule 13 (com -> empty .)
    LENGTH          reduce using rule 13 (com -> empty .)
    CAPITALIZAR     reduce using rule 13 (com -> empty .)
    COLINEALES      reduce using rule 13 (com -> empty .)
    [               reduce using rule 13 (com -> empty .)


state 120

    (14) lCerrada -> IF ( . cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( . cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (41) cosaBooleana -> . expBool
    (42) cosaBooleana -> . valoresBool
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (56) vec -> . [ elem ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (248) parenBool -> . ( expBool )
    (92) reg -> . { campos }
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )

    BOOL            shift and go to state 187
    (               shift and go to state 229
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    )               reduce using rule 204 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 230
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    valoresBool                    shift and go to state 227
    eMat                           shift and go to state 228
    p                              shift and go to state 96
    atributos                      shift and go to state 191
    mayor                          shift and go to state 81
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    cosaBooleana                   shift and go to state 245
    funcString                     shift and go to state 184
    tCompareEQ                     shift and go to state 75
    varsOps                        shift and go to state 234
    exp                            shift and go to state 100
    varYVals                       shift and go to state 235
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 236

state 121

    (26) lCerrada -> DO lCerrada WHILE . ( valores ) ;

    (               shift and go to state 246


state 122

    (25) lCerrada -> DO { g . } WHILE ( valores ) ;

    }               shift and go to state 247


state 123

    (51) funcBool -> COLINEALES ( valores . , valores )

    ,               shift and go to state 248


state 124

    (33) loop -> WHILE ( valores . )

    )               shift and go to state 249


state 125

    (52) funcVoid -> PRINT ( valores . )

    )               shift and go to state 250


state 126

    (141) varYVals -> vecVal .
    (142) varYVals -> vecVal . . varYVals
    (61) vecVal -> vecVal . [ expresion ]
    (64) vecVal -> vecVal . [ INT ]

    MASMAS          reduce using rule 141 (varYVals -> vecVal .)
    MENOSMENOS      reduce using rule 141 (varYVals -> vecVal .)
    MULEQ           reduce using rule 141 (varYVals -> vecVal .)
    DIVEQ           reduce using rule 141 (varYVals -> vecVal .)
    MASEQ           reduce using rule 141 (varYVals -> vecVal .)
    MENOSEQ         reduce using rule 141 (varYVals -> vecVal .)
    =               reduce using rule 141 (varYVals -> vecVal .)
    ;               reduce using rule 141 (varYVals -> vecVal .)
    ,               reduce using rule 141 (varYVals -> vecVal .)
    ]               reduce using rule 141 (varYVals -> vecVal .)
    +               reduce using rule 141 (varYVals -> vecVal .)
    -               reduce using rule 141 (varYVals -> vecVal .)
    *               reduce using rule 141 (varYVals -> vecVal .)
    /               reduce using rule 141 (varYVals -> vecVal .)
    %               reduce using rule 141 (varYVals -> vecVal .)
    ^               reduce using rule 141 (varYVals -> vecVal .)
    OR              reduce using rule 141 (varYVals -> vecVal .)
    AND             reduce using rule 141 (varYVals -> vecVal .)
    ?               reduce using rule 141 (varYVals -> vecVal .)
    EQEQ            reduce using rule 141 (varYVals -> vecVal .)
    DISTINTO        reduce using rule 141 (varYVals -> vecVal .)
    >               reduce using rule 141 (varYVals -> vecVal .)
    <               reduce using rule 141 (varYVals -> vecVal .)
    )               reduce using rule 141 (varYVals -> vecVal .)
    :               reduce using rule 141 (varYVals -> vecVal .)
    }               reduce using rule 141 (varYVals -> vecVal .)
    .               shift and go to state 251
    [               shift and go to state 45


state 127

    (149) variable -> vecVal . varYVals .

    MASMAS          reduce using rule 149 (variable -> vecVal . varYVals .)
    MENOSMENOS      reduce using rule 149 (variable -> vecVal . varYVals .)
    MULEQ           reduce using rule 149 (variable -> vecVal . varYVals .)
    DIVEQ           reduce using rule 149 (variable -> vecVal . varYVals .)
    MASEQ           reduce using rule 149 (variable -> vecVal . varYVals .)
    MENOSEQ         reduce using rule 149 (variable -> vecVal . varYVals .)
    =               reduce using rule 149 (variable -> vecVal . varYVals .)
    ;               reduce using rule 149 (variable -> vecVal . varYVals .)
    ,               reduce using rule 149 (variable -> vecVal . varYVals .)
    ]               reduce using rule 149 (variable -> vecVal . varYVals .)
    +               reduce using rule 149 (variable -> vecVal . varYVals .)
    -               reduce using rule 149 (variable -> vecVal . varYVals .)
    *               reduce using rule 149 (variable -> vecVal . varYVals .)
    /               reduce using rule 149 (variable -> vecVal . varYVals .)
    %               reduce using rule 149 (variable -> vecVal . varYVals .)
    ^               reduce using rule 149 (variable -> vecVal . varYVals .)
    OR              reduce using rule 149 (variable -> vecVal . varYVals .)
    AND             reduce using rule 149 (variable -> vecVal . varYVals .)
    ?               reduce using rule 149 (variable -> vecVal . varYVals .)
    EQEQ            reduce using rule 149 (variable -> vecVal . varYVals .)
    DISTINTO        reduce using rule 149 (variable -> vecVal . varYVals .)
    >               reduce using rule 149 (variable -> vecVal . varYVals .)
    <               reduce using rule 149 (variable -> vecVal . varYVals .)
    )               reduce using rule 149 (variable -> vecVal . varYVals .)
    :               reduce using rule 149 (variable -> vecVal . varYVals .)
    }               reduce using rule 149 (variable -> vecVal . varYVals .)


state 128

    (140) varYVals -> ID .
    (59) vecVal -> ID . [ expresion ]
    (62) vecVal -> ID . [ INT ]

    MASMAS          reduce using rule 140 (varYVals -> ID .)
    MENOSMENOS      reduce using rule 140 (varYVals -> ID .)
    MULEQ           reduce using rule 140 (varYVals -> ID .)
    DIVEQ           reduce using rule 140 (varYVals -> ID .)
    MASEQ           reduce using rule 140 (varYVals -> ID .)
    MENOSEQ         reduce using rule 140 (varYVals -> ID .)
    =               reduce using rule 140 (varYVals -> ID .)
    ;               reduce using rule 140 (varYVals -> ID .)
    ,               reduce using rule 140 (varYVals -> ID .)
    ]               reduce using rule 140 (varYVals -> ID .)
    +               reduce using rule 140 (varYVals -> ID .)
    -               reduce using rule 140 (varYVals -> ID .)
    *               reduce using rule 140 (varYVals -> ID .)
    /               reduce using rule 140 (varYVals -> ID .)
    %               reduce using rule 140 (varYVals -> ID .)
    ^               reduce using rule 140 (varYVals -> ID .)
    OR              reduce using rule 140 (varYVals -> ID .)
    AND             reduce using rule 140 (varYVals -> ID .)
    ?               reduce using rule 140 (varYVals -> ID .)
    EQEQ            reduce using rule 140 (varYVals -> ID .)
    DISTINTO        reduce using rule 140 (varYVals -> ID .)
    >               reduce using rule 140 (varYVals -> ID .)
    <               reduce using rule 140 (varYVals -> ID .)
    )               reduce using rule 140 (varYVals -> ID .)
    :               reduce using rule 140 (varYVals -> ID .)
    }               reduce using rule 140 (varYVals -> ID .)
    [               shift and go to state 105


state 129

    (75) expresion -> ternario .

    ]               reduce using rule 75 (expresion -> ternario .)


state 130

    (77) expresion -> RES .

    ]               reduce using rule 77 (expresion -> RES .)


state 131

    (70) expresion -> STRING .
    (161) valoresMat -> STRING .

    ]               reduce using rule 70 (expresion -> STRING .)
    +               reduce using rule 161 (valoresMat -> STRING .)
    -               reduce using rule 161 (valoresMat -> STRING .)
    *               reduce using rule 161 (valoresMat -> STRING .)
    /               reduce using rule 161 (valoresMat -> STRING .)
    %               reduce using rule 161 (valoresMat -> STRING .)
    ^               reduce using rule 161 (valoresMat -> STRING .)


state 132

    (65) expresion -> eMat .
    (165) eMat -> eMat . + p
    (167) eMat -> eMat . + valoresMat
    (170) eMat -> eMat . - p
    (172) eMat -> eMat . - valoresMat
    (231) tCompareEQ -> eMat .
    (234) tCompare -> eMat .

    ]               reduce using rule 65 (expresion -> eMat .)
    +               shift and go to state 168
    -               shift and go to state 169
    EQEQ            reduce using rule 231 (tCompareEQ -> eMat .)
    DISTINTO        reduce using rule 231 (tCompareEQ -> eMat .)
    >               reduce using rule 234 (tCompare -> eMat .)
    <               reduce using rule 234 (tCompare -> eMat .)


state 133

    (74) expresion -> vec .
    (60) vecVal -> vec . [ expresion ]
    (63) vecVal -> vec . [ INT ]

    ]               reduce using rule 74 (expresion -> vec .)
    [               shift and go to state 115


state 134

    (68) expresion -> reg .
    (96) atributos -> reg . . valoresCampos

    ]               reduce using rule 68 (expresion -> reg .)
    .               shift and go to state 202


state 135

    (66) expresion -> expBool .
    (205) expBool -> expBool . OR and
    (207) expBool -> expBool . OR valoresBool
    (125) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (134) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars

    ]               reduce using rule 66 (expresion -> expBool .)
    OR              shift and go to state 203
    ?               shift and go to state 204


state 136

    (61) vecVal -> vecVal [ expresion . ]

    ]               shift and go to state 252


state 137

    (64) vecVal -> vecVal [ INT . ]
    (156) valoresMat -> INT .
    (228) tCompareEQ -> INT .
    (237) tCompare -> INT .

    ]               shift and go to state 253
    +               reduce using rule 156 (valoresMat -> INT .)
    -               reduce using rule 156 (valoresMat -> INT .)
    *               reduce using rule 156 (valoresMat -> INT .)
    /               reduce using rule 156 (valoresMat -> INT .)
    %               reduce using rule 156 (valoresMat -> INT .)
    ^               reduce using rule 156 (valoresMat -> INT .)
    EQEQ            reduce using rule 228 (tCompareEQ -> INT .)
    DISTINTO        reduce using rule 228 (tCompareEQ -> INT .)
    >               reduce using rule 237 (tCompare -> INT .)
    <               reduce using rule 237 (tCompare -> INT .)


state 138

    (67) expresion -> funcReturn .

    ]               reduce using rule 67 (expresion -> funcReturn .)


state 139

    (69) expresion -> FLOAT .
    (157) valoresMat -> FLOAT .
    (229) tCompareEQ -> FLOAT .
    (239) tCompare -> FLOAT .

    ]               reduce using rule 69 (expresion -> FLOAT .)
    +               reduce using rule 157 (valoresMat -> FLOAT .)
    -               reduce using rule 157 (valoresMat -> FLOAT .)
    *               reduce using rule 157 (valoresMat -> FLOAT .)
    /               reduce using rule 157 (valoresMat -> FLOAT .)
    %               reduce using rule 157 (valoresMat -> FLOAT .)
    ^               reduce using rule 157 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 229 (tCompareEQ -> FLOAT .)
    DISTINTO        reduce using rule 229 (tCompareEQ -> FLOAT .)
    >               reduce using rule 239 (tCompare -> FLOAT .)
    <               reduce using rule 239 (tCompare -> FLOAT .)


state 140

    (71) expresion -> BOOL .
    (199) valoresBool -> BOOL .
    (224) tCompareEQ -> BOOL .

    ]               reduce using rule 71 (expresion -> BOOL .)
    OR              reduce using rule 199 (valoresBool -> BOOL .)
    AND             reduce using rule 199 (valoresBool -> BOOL .)
    ?               reduce using rule 199 (valoresBool -> BOOL .)
    EQEQ            reduce using rule 224 (tCompareEQ -> BOOL .)
    DISTINTO        reduce using rule 224 (tCompareEQ -> BOOL .)


state 141

    (73) expresion -> varsOps .
    (163) valoresMat -> varsOps .
    (202) valoresBool -> varsOps .
    (227) tCompareEQ -> varsOps .
    (235) tCompare -> varsOps .

    ]               reduce using rule 73 (expresion -> varsOps .)
    +               reduce using rule 163 (valoresMat -> varsOps .)
    -               reduce using rule 163 (valoresMat -> varsOps .)
    *               reduce using rule 163 (valoresMat -> varsOps .)
    /               reduce using rule 163 (valoresMat -> varsOps .)
    %               reduce using rule 163 (valoresMat -> varsOps .)
    ^               reduce using rule 163 (valoresMat -> varsOps .)
    OR              reduce using rule 202 (valoresBool -> varsOps .)
    AND             reduce using rule 202 (valoresBool -> varsOps .)
    ?               reduce using rule 202 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 227 (tCompareEQ -> varsOps .)
    DISTINTO        reduce using rule 227 (tCompareEQ -> varsOps .)
    >               reduce using rule 235 (tCompare -> varsOps .)
    <               reduce using rule 235 (tCompare -> varsOps .)


state 142

    (72) expresion -> varYVals .
    (162) valoresMat -> varYVals .
    (201) valoresBool -> varYVals .
    (226) tCompareEQ -> varYVals .
    (236) tCompare -> varYVals .

    ]               reduce using rule 72 (expresion -> varYVals .)
    +               reduce using rule 162 (valoresMat -> varYVals .)
    -               reduce using rule 162 (valoresMat -> varYVals .)
    *               reduce using rule 162 (valoresMat -> varYVals .)
    /               reduce using rule 162 (valoresMat -> varYVals .)
    %               reduce using rule 162 (valoresMat -> varYVals .)
    ^               reduce using rule 162 (valoresMat -> varYVals .)
    OR              reduce using rule 201 (valoresBool -> varYVals .)
    AND             reduce using rule 201 (valoresBool -> varYVals .)
    ?               reduce using rule 201 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 226 (tCompareEQ -> varYVals .)
    DISTINTO        reduce using rule 226 (tCompareEQ -> varYVals .)
    >               reduce using rule 236 (tCompare -> varYVals .)
    <               reduce using rule 236 (tCompare -> varYVals .)


state 143

    (76) expresion -> atributos .
    (159) valoresMat -> atributos .

    ]               reduce using rule 76 (expresion -> atributos .)
    +               reduce using rule 159 (valoresMat -> atributos .)
    -               reduce using rule 159 (valoresMat -> atributos .)
    *               reduce using rule 159 (valoresMat -> atributos .)
    /               reduce using rule 159 (valoresMat -> atributos .)
    %               reduce using rule 159 (valoresMat -> atributos .)
    ^               reduce using rule 159 (valoresMat -> atributos .)


state 144

    (34) loop -> FOR ( primParam . ; valores ; tercerParam )

    ;               shift and go to state 254


state 145

    (150) varAsig -> variable . MULEQ valores
    (151) varAsig -> variable . DIVEQ valores
    (152) varAsig -> variable . MASEQ valores
    (153) varAsig -> variable . MENOSEQ valores
    (154) varAsig -> variable . = valores

    MULEQ           shift and go to state 57
    DIVEQ           shift and go to state 59
    MASEQ           shift and go to state 55
    MENOSEQ         shift and go to state 53
    =               shift and go to state 58


state 146

    (35) primParam -> varAsig .

    ;               reduce using rule 35 (primParam -> varAsig .)


state 147

    (36) primParam -> empty .

    ;               reduce using rule 36 (primParam -> empty .)


state 148

    (49) funcInt -> LENGTH ( valores . )

    )               shift and go to state 255


state 149

    (153) varAsig -> variable MENOSEQ valores .

    ;               reduce using rule 153 (varAsig -> variable MENOSEQ valores .)
    )               reduce using rule 153 (varAsig -> variable MENOSEQ valores .)


state 150

    (152) varAsig -> variable MASEQ valores .

    ;               reduce using rule 152 (varAsig -> variable MASEQ valores .)
    )               reduce using rule 152 (varAsig -> variable MASEQ valores .)


state 151

    (150) varAsig -> variable MULEQ valores .

    ;               reduce using rule 150 (varAsig -> variable MULEQ valores .)
    )               reduce using rule 150 (varAsig -> variable MULEQ valores .)


state 152

    (154) varAsig -> variable = valores .

    ;               reduce using rule 154 (varAsig -> variable = valores .)
    )               reduce using rule 154 (varAsig -> variable = valores .)


state 153

    (151) varAsig -> variable DIVEQ valores .

    ;               reduce using rule 151 (varAsig -> variable DIVEQ valores .)
    )               reduce using rule 151 (varAsig -> variable DIVEQ valores .)


state 154

    (210) and -> and AND . eq
    (212) and -> and AND . valoresBool
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (51) funcBool -> . COLINEALES ( valores , valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (56) vec -> . [ elem ]
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (248) parenBool -> . ( expBool )
    (92) reg -> . { campos }
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )

    BOOL            shift and go to state 187
    (               shift and go to state 229
    AND             reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    ?               reduce using rule 204 (valoresBool -> .)
    ,               reduce using rule 204 (valoresBool -> .)
    ]               reduce using rule 204 (valoresBool -> .)
    )               reduce using rule 204 (valoresBool -> .)
    ;               reduce using rule 204 (valoresBool -> .)
    :               reduce using rule 204 (valoresBool -> .)
    }               reduce using rule 204 (valoresBool -> .)
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    COLINEALES      shift and go to state 4
    ID              shift and go to state 230
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    [               shift and go to state 20
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77

    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 226
    variable                       shift and go to state 89
    menor                          shift and go to state 67
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 256
    mayor                          shift and go to state 81
    valoresBool                    shift and go to state 257
    eMat                           shift and go to state 228
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    not                            shift and go to state 66
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 234
    exp                            shift and go to state 100
    varYVals                       shift and go to state 235
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 155

    (57) elem -> valores , . elem
    (57) elem -> . valores , elem
    (58) elem -> . valores
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (92) reg -> . { campos }
    (100) ternario -> . ternarioMat
    (101) ternario -> . ternarioBool
    (102) ternario -> . ( ternarioMat )
    (103) ternario -> . ( ternarioBool )
    (104) ternario -> . ternarioVars
    (105) ternario -> . ( ternarioVars )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    ?               reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    elem                           shift and go to state 258
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 65
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 156

    (179) p -> valoresMat % . exp
    (185) p -> valoresMat % . valoresMat
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (56) vec -> . [ elem ]

    INT             shift and go to state 197
    FLOAT           shift and go to state 196
    STRING          shift and go to state 181
    (               shift and go to state 260
    -               shift and go to state 78
    +               shift and go to state 77
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    [               shift and go to state 20

    valoresMat                     shift and go to state 259
    funcString                     shift and go to state 184
    funcInt                        shift and go to state 192
    vecVal                         shift and go to state 71
    vec                            shift and go to state 33
    iSing                          shift and go to state 85
    exp                            shift and go to state 261
    variable                       shift and go to state 89
    paren                          shift and go to state 88
    varYVals                       shift and go to state 199
    reg                            shift and go to state 180
    atributos                      shift and go to state 191
    varsOps                        shift and go to state 198

state 157

    (166) eMat -> valoresMat + . p
    (168) eMat -> valoresMat + . valoresMat
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (56) vec -> . [ elem ]

    INT             shift and go to state 197
    FLOAT           shift and go to state 196
    STRING          shift and go to state 181
    (               shift and go to state 260
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    -               shift and go to state 78
    +               shift and go to state 77
    {               shift and go to state 101
    [               shift and go to state 20

    funcInt                        shift and go to state 192
    valoresMat                     shift and go to state 262
    vecVal                         shift and go to state 71
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    exp                            shift and go to state 100
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 263
    varsOps                        shift and go to state 198
    varYVals                       shift and go to state 199
    atributos                      shift and go to state 191

state 158

    (177) p -> valoresMat * . exp
    (183) p -> valoresMat * . valoresMat
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (56) vec -> . [ elem ]

    INT             shift and go to state 197
    FLOAT           shift and go to state 196
    STRING          shift and go to state 181
    (               shift and go to state 260
    -               shift and go to state 78
    +               shift and go to state 77
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    [               shift and go to state 20

    valoresMat                     shift and go to state 264
    funcString                     shift and go to state 184
    funcInt                        shift and go to state 192
    vecVal                         shift and go to state 71
    vec                            shift and go to state 33
    iSing                          shift and go to state 85
    exp                            shift and go to state 265
    variable                       shift and go to state 89
    paren                          shift and go to state 88
    varYVals                       shift and go to state 199
    reg                            shift and go to state 180
    atributos                      shift and go to state 191
    varsOps                        shift and go to state 198

state 159

    (171) eMat -> valoresMat - . p
    (173) eMat -> valoresMat - . valoresMat
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (56) vec -> . [ elem ]

    INT             shift and go to state 197
    FLOAT           shift and go to state 196
    STRING          shift and go to state 181
    (               shift and go to state 260
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    -               shift and go to state 78
    +               shift and go to state 77
    {               shift and go to state 101
    [               shift and go to state 20

    funcInt                        shift and go to state 192
    valoresMat                     shift and go to state 266
    vecVal                         shift and go to state 71
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    exp                            shift and go to state 100
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 267
    varsOps                        shift and go to state 198
    varYVals                       shift and go to state 199
    atributos                      shift and go to state 191

state 160

    (178) p -> valoresMat / . exp
    (184) p -> valoresMat / . valoresMat
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (56) vec -> . [ elem ]

    INT             shift and go to state 197
    FLOAT           shift and go to state 196
    STRING          shift and go to state 181
    (               shift and go to state 260
    -               shift and go to state 78
    +               shift and go to state 77
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    [               shift and go to state 20

    valoresMat                     shift and go to state 268
    funcString                     shift and go to state 184
    funcInt                        shift and go to state 192
    vecVal                         shift and go to state 71
    vec                            shift and go to state 33
    iSing                          shift and go to state 85
    exp                            shift and go to state 269
    variable                       shift and go to state 89
    paren                          shift and go to state 88
    varYVals                       shift and go to state 199
    reg                            shift and go to state 180
    atributos                      shift and go to state 191
    varsOps                        shift and go to state 198

state 161

    (188) exp -> valoresMat ^ . iSing
    (190) exp -> valoresMat ^ . valoresMat
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (56) vec -> . [ elem ]

    -               shift and go to state 78
    +               shift and go to state 77
    INT             shift and go to state 197
    FLOAT           shift and go to state 196
    STRING          shift and go to state 181
    (               shift and go to state 260
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    [               shift and go to state 20

    funcString                     shift and go to state 184
    funcInt                        shift and go to state 192
    vecVal                         shift and go to state 71
    vec                            shift and go to state 33
    iSing                          shift and go to state 271
    valoresMat                     shift and go to state 270
    variable                       shift and go to state 89
    paren                          shift and go to state 88
    varYVals                       shift and go to state 199
    reg                            shift and go to state 180
    atributos                      shift and go to state 191
    varsOps                        shift and go to state 198

state 162

    (215) eq -> eq EQEQ . mayor
    (219) eq -> eq EQEQ . tCompareEQ
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (51) funcBool -> . COLINEALES ( valores , valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (248) parenBool -> . ( expBool )
    (56) vec -> . [ elem ]
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (92) reg -> . { campos }
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )

    BOOL            shift and go to state 277
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    (               shift and go to state 275
    COLINEALES      shift and go to state 4
    ID              shift and go to state 230
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    NOT             shift and go to state 99
    STRING          shift and go to state 181
    [               shift and go to state 20
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77

    funcBool                       shift and go to state 272
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    valoresMat                     shift and go to state 69
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 274
    tCompareEQ                     shift and go to state 276
    mayor                          shift and go to state 273
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 278
    exp                            shift and go to state 100
    varYVals                       shift and go to state 279
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 163

    (216) eq -> eq DISTINTO . mayor
    (220) eq -> eq DISTINTO . tCompareEQ
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (51) funcBool -> . COLINEALES ( valores , valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (248) parenBool -> . ( expBool )
    (56) vec -> . [ elem ]
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (92) reg -> . { campos }
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )

    BOOL            shift and go to state 277
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    (               shift and go to state 275
    COLINEALES      shift and go to state 4
    ID              shift and go to state 230
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    NOT             shift and go to state 99
    STRING          shift and go to state 181
    [               shift and go to state 20
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77

    funcBool                       shift and go to state 272
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    valoresMat                     shift and go to state 69
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 274
    tCompareEQ                     shift and go to state 281
    mayor                          shift and go to state 280
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 278
    exp                            shift and go to state 100
    varYVals                       shift and go to state 279
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 164

    (142) varYVals -> vecVal . . varYVals
    (149) variable -> vecVal . . varYVals
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (56) vec -> . [ elem ]

    ID              shift and go to state 128
    [               shift and go to state 20

    varYVals                       shift and go to state 282
    vecVal                         shift and go to state 126
    vec                            shift and go to state 33

state 165

    (211) and -> valoresBool AND . eq
    (213) and -> valoresBool AND . valoresBool
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (51) funcBool -> . COLINEALES ( valores , valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (56) vec -> . [ elem ]
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (248) parenBool -> . ( expBool )
    (92) reg -> . { campos }
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )

    BOOL            shift and go to state 187
    (               shift and go to state 229
    AND             reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    ?               reduce using rule 204 (valoresBool -> .)
    ,               reduce using rule 204 (valoresBool -> .)
    ]               reduce using rule 204 (valoresBool -> .)
    )               reduce using rule 204 (valoresBool -> .)
    ;               reduce using rule 204 (valoresBool -> .)
    :               reduce using rule 204 (valoresBool -> .)
    }               reduce using rule 204 (valoresBool -> .)
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    COLINEALES      shift and go to state 4
    ID              shift and go to state 230
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    [               shift and go to state 20
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77

    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 226
    variable                       shift and go to state 89
    menor                          shift and go to state 67
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 283
    mayor                          shift and go to state 81
    valoresBool                    shift and go to state 284
    eMat                           shift and go to state 228
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    not                            shift and go to state 66
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 234
    exp                            shift and go to state 100
    varYVals                       shift and go to state 235
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 166

    (206) expBool -> valoresBool OR . and
    (208) expBool -> valoresBool OR . valoresBool
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (51) funcBool -> . COLINEALES ( valores , valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (56) vec -> . [ elem ]
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (248) parenBool -> . ( expBool )
    (92) reg -> . { campos }
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )

    BOOL            shift and go to state 187
    (               shift and go to state 229
    AND             reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    ?               reduce using rule 204 (valoresBool -> .)
    ,               reduce using rule 204 (valoresBool -> .)
    ]               reduce using rule 204 (valoresBool -> .)
    )               reduce using rule 204 (valoresBool -> .)
    ;               reduce using rule 204 (valoresBool -> .)
    :               reduce using rule 204 (valoresBool -> .)
    }               reduce using rule 204 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 230
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    [               shift and go to state 20
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77

    and                            shift and go to state 285
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    mayor                          shift and go to state 81
    valoresBool                    shift and go to state 286
    eMat                           shift and go to state 228
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 234
    exp                            shift and go to state 100
    varYVals                       shift and go to state 235
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 167

    (124) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (106) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (135) valoresTernarioBool -> . BOOL
    (136) valoresTernarioBool -> . funcBool
    (137) valoresTernarioBool -> . ternarioBool
    (138) valoresTernarioBool -> . ( ternarioBool )
    (139) valoresTernarioBool -> . expBool
    (116) valoresTernarioVars -> . reg
    (117) valoresTernarioVars -> . vec
    (118) valoresTernarioVars -> . ternarioVars
    (119) valoresTernarioVars -> . ( ternarioVars )
    (120) valoresTernarioVars -> . atributos
    (121) valoresTernarioVars -> . varsOps
    (122) valoresTernarioVars -> . varYVals
    (123) valoresTernarioVars -> . RES
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (92) reg -> . { campos }
    (56) vec -> . [ elem ]
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    (               shift and go to state 307
    BOOL            shift and go to state 305
    RES             shift and go to state 288
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 291
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 293
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 299
    expBool                        shift and go to state 306
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 302
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 297
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 309
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 168

    (165) eMat -> eMat + . p
    (167) eMat -> eMat + . valoresMat
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (56) vec -> . [ elem ]

    INT             shift and go to state 197
    FLOAT           shift and go to state 196
    STRING          shift and go to state 181
    (               shift and go to state 260
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    -               shift and go to state 78
    +               shift and go to state 77
    {               shift and go to state 101
    [               shift and go to state 20

    funcInt                        shift and go to state 192
    valoresMat                     shift and go to state 311
    vecVal                         shift and go to state 71
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    exp                            shift and go to state 100
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 312
    varsOps                        shift and go to state 198
    varYVals                       shift and go to state 199
    atributos                      shift and go to state 191

state 169

    (170) eMat -> eMat - . p
    (172) eMat -> eMat - . valoresMat
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (56) vec -> . [ elem ]

    INT             shift and go to state 197
    FLOAT           shift and go to state 196
    STRING          shift and go to state 181
    (               shift and go to state 260
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    -               shift and go to state 78
    +               shift and go to state 77
    {               shift and go to state 101
    [               shift and go to state 20

    funcInt                        shift and go to state 192
    valoresMat                     shift and go to state 313
    vecVal                         shift and go to state 71
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    exp                            shift and go to state 100
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 314
    varsOps                        shift and go to state 198
    varYVals                       shift and go to state 199
    atributos                      shift and go to state 191

state 170

    (217) eq -> tCompareEQ EQEQ . mayor
    (221) eq -> tCompareEQ EQEQ . tCompareEQ
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (51) funcBool -> . COLINEALES ( valores , valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (248) parenBool -> . ( expBool )
    (56) vec -> . [ elem ]
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (92) reg -> . { campos }
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )

    BOOL            shift and go to state 277
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    (               shift and go to state 275
    COLINEALES      shift and go to state 4
    ID              shift and go to state 230
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    NOT             shift and go to state 99
    STRING          shift and go to state 181
    [               shift and go to state 20
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77

    funcBool                       shift and go to state 272
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    valoresMat                     shift and go to state 69
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 274
    tCompareEQ                     shift and go to state 316
    mayor                          shift and go to state 315
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 278
    exp                            shift and go to state 100
    varYVals                       shift and go to state 279
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 171

    (218) eq -> tCompareEQ DISTINTO . mayor
    (222) eq -> tCompareEQ DISTINTO . tCompareEQ
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (51) funcBool -> . COLINEALES ( valores , valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (248) parenBool -> . ( expBool )
    (56) vec -> . [ elem ]
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (92) reg -> . { campos }
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )

    BOOL            shift and go to state 277
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    (               shift and go to state 275
    COLINEALES      shift and go to state 4
    ID              shift and go to state 230
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    NOT             shift and go to state 99
    STRING          shift and go to state 181
    [               shift and go to state 20
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77

    funcBool                       shift and go to state 272
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    valoresMat                     shift and go to state 69
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 274
    tCompareEQ                     shift and go to state 318
    mayor                          shift and go to state 317
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 278
    exp                            shift and go to state 100
    varYVals                       shift and go to state 279
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 172

    (200) valoresBool -> funcBool .
    (225) tCompareEQ -> funcBool .

    ?               reduce using rule 200 (valoresBool -> funcBool .)
    OR              reduce using rule 200 (valoresBool -> funcBool .)
    AND             reduce using rule 200 (valoresBool -> funcBool .)
    ,               reduce using rule 200 (valoresBool -> funcBool .)
    ]               reduce using rule 200 (valoresBool -> funcBool .)
    )               reduce using rule 200 (valoresBool -> funcBool .)
    ;               reduce using rule 200 (valoresBool -> funcBool .)
    :               reduce using rule 200 (valoresBool -> funcBool .)
    }               reduce using rule 200 (valoresBool -> funcBool .)
    EQEQ            reduce using rule 225 (tCompareEQ -> funcBool .)
    DISTINTO        reduce using rule 225 (tCompareEQ -> funcBool .)


state 173

    (158) valoresMat -> funcInt .
    (230) tCompareEQ -> funcInt .
    (238) tCompare -> funcInt .

    )               reduce using rule 158 (valoresMat -> funcInt .)
    +               reduce using rule 158 (valoresMat -> funcInt .)
    -               reduce using rule 158 (valoresMat -> funcInt .)
    *               reduce using rule 158 (valoresMat -> funcInt .)
    /               reduce using rule 158 (valoresMat -> funcInt .)
    %               reduce using rule 158 (valoresMat -> funcInt .)
    ^               reduce using rule 158 (valoresMat -> funcInt .)
    EQEQ            reduce using rule 230 (tCompareEQ -> funcInt .)
    DISTINTO        reduce using rule 230 (tCompareEQ -> funcInt .)
    >               reduce using rule 238 (tCompare -> funcInt .)
    <               reduce using rule 238 (tCompare -> funcInt .)


state 174

    (198) paren -> ( valoresMat . )
    (166) eMat -> valoresMat . + p
    (168) eMat -> valoresMat . + valoresMat
    (171) eMat -> valoresMat . - p
    (173) eMat -> valoresMat . - valoresMat
    (177) p -> valoresMat . * exp
    (178) p -> valoresMat . / exp
    (179) p -> valoresMat . % exp
    (183) p -> valoresMat . * valoresMat
    (184) p -> valoresMat . / valoresMat
    (185) p -> valoresMat . % valoresMat
    (188) exp -> valoresMat . ^ iSing
    (190) exp -> valoresMat . ^ valoresMat

    )               shift and go to state 319
    +               shift and go to state 157
    -               shift and go to state 159
    *               shift and go to state 158
    /               shift and go to state 160
    %               shift and go to state 156
    ^               shift and go to state 161


state 175

    (124) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (106) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (206) expBool -> valoresBool . OR and
    (208) expBool -> valoresBool . OR valoresBool
    (211) and -> valoresBool . AND eq
    (213) and -> valoresBool . AND valoresBool

    ?               shift and go to state 167
    OR              shift and go to state 166
    AND             shift and go to state 165


state 176

    (197) paren -> ( eMat . )
    (165) eMat -> eMat . + p
    (167) eMat -> eMat . + valoresMat
    (170) eMat -> eMat . - p
    (172) eMat -> eMat . - valoresMat
    (231) tCompareEQ -> eMat .
    (234) tCompare -> eMat .

    )               shift and go to state 320
    +               shift and go to state 168
    -               shift and go to state 169
    EQEQ            reduce using rule 231 (tCompareEQ -> eMat .)
    DISTINTO        reduce using rule 231 (tCompareEQ -> eMat .)
    >               reduce using rule 234 (tCompare -> eMat .)
    <               reduce using rule 234 (tCompare -> eMat .)


state 177

    (164) valoresMat -> ( . ternarioMat )
    (203) valoresBool -> ( . ternarioBool )
    (232) tCompareEQ -> ( . ternarioBool )
    (233) tCompareEQ -> ( . ternarioMat )
    (197) paren -> ( . eMat )
    (198) paren -> ( . valoresMat )
    (240) tCompare -> ( . ternarioMat )
    (248) parenBool -> ( . expBool )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (56) vec -> . [ elem ]
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 177
    BOOL            shift and go to state 187
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    valoresBool                    shift and go to state 321
    ternarioMat                    shift and go to state 322
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 323
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    expBool                        shift and go to state 324
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 178

    (102) ternario -> ( ternarioMat . )
    (164) valoresMat -> ( ternarioMat . )
    (233) tCompareEQ -> ( ternarioMat . )
    (240) tCompare -> ( ternarioMat . )

    )               shift and go to state 325


state 179

    (163) valoresMat -> varsOps .
    (202) valoresBool -> varsOps .
    (227) tCompareEQ -> varsOps .
    (235) tCompare -> varsOps .

    )               reduce using rule 163 (valoresMat -> varsOps .)
    +               reduce using rule 163 (valoresMat -> varsOps .)
    -               reduce using rule 163 (valoresMat -> varsOps .)
    *               reduce using rule 163 (valoresMat -> varsOps .)
    /               reduce using rule 163 (valoresMat -> varsOps .)
    %               reduce using rule 163 (valoresMat -> varsOps .)
    ^               reduce using rule 163 (valoresMat -> varsOps .)
    ?               reduce using rule 202 (valoresBool -> varsOps .)
    OR              reduce using rule 202 (valoresBool -> varsOps .)
    AND             reduce using rule 202 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 227 (tCompareEQ -> varsOps .)
    DISTINTO        reduce using rule 227 (tCompareEQ -> varsOps .)
    >               reduce using rule 235 (tCompare -> varsOps .)
    <               reduce using rule 235 (tCompare -> varsOps .)


state 180

    (96) atributos -> reg . . valoresCampos

    .               shift and go to state 202


state 181

    (161) valoresMat -> STRING .

    +               reduce using rule 161 (valoresMat -> STRING .)
    -               reduce using rule 161 (valoresMat -> STRING .)
    *               reduce using rule 161 (valoresMat -> STRING .)
    /               reduce using rule 161 (valoresMat -> STRING .)
    %               reduce using rule 161 (valoresMat -> STRING .)
    ^               reduce using rule 161 (valoresMat -> STRING .)
    )               reduce using rule 161 (valoresMat -> STRING .)
    ,               reduce using rule 161 (valoresMat -> STRING .)
    ]               reduce using rule 161 (valoresMat -> STRING .)
    EQEQ            reduce using rule 161 (valoresMat -> STRING .)
    DISTINTO        reduce using rule 161 (valoresMat -> STRING .)
    >               reduce using rule 161 (valoresMat -> STRING .)
    <               reduce using rule 161 (valoresMat -> STRING .)
    ;               reduce using rule 161 (valoresMat -> STRING .)
    AND             reduce using rule 161 (valoresMat -> STRING .)
    OR              reduce using rule 161 (valoresMat -> STRING .)
    ?               reduce using rule 161 (valoresMat -> STRING .)
    :               reduce using rule 161 (valoresMat -> STRING .)
    }               reduce using rule 161 (valoresMat -> STRING .)


state 182

    (103) ternario -> ( ternarioBool . )
    (203) valoresBool -> ( ternarioBool . )
    (232) tCompareEQ -> ( ternarioBool . )

    )               shift and go to state 326


state 183

    (95) atributos -> ID . . valoresCampos
    (140) varYVals -> ID .
    (59) vecVal -> ID . [ expresion ]
    (62) vecVal -> ID . [ INT ]
    (147) variable -> ID .

    .               shift and go to state 207
    )               reduce using rule 140 (varYVals -> ID .)
    +               reduce using rule 140 (varYVals -> ID .)
    -               reduce using rule 140 (varYVals -> ID .)
    *               reduce using rule 140 (varYVals -> ID .)
    /               reduce using rule 140 (varYVals -> ID .)
    %               reduce using rule 140 (varYVals -> ID .)
    ^               reduce using rule 140 (varYVals -> ID .)
    ?               reduce using rule 140 (varYVals -> ID .)
    OR              reduce using rule 140 (varYVals -> ID .)
    AND             reduce using rule 140 (varYVals -> ID .)
    EQEQ            reduce using rule 140 (varYVals -> ID .)
    DISTINTO        reduce using rule 140 (varYVals -> ID .)
    >               reduce using rule 140 (varYVals -> ID .)
    <               reduce using rule 140 (varYVals -> ID .)
    ,               reduce using rule 140 (varYVals -> ID .)
    ]               reduce using rule 140 (varYVals -> ID .)
    ;               reduce using rule 140 (varYVals -> ID .)
    :               reduce using rule 140 (varYVals -> ID .)
    }               reduce using rule 140 (varYVals -> ID .)
    [               shift and go to state 105
    MASMAS          reduce using rule 147 (variable -> ID .)
    MENOSMENOS      reduce using rule 147 (variable -> ID .)


state 184

    (160) valoresMat -> funcString .

    +               reduce using rule 160 (valoresMat -> funcString .)
    -               reduce using rule 160 (valoresMat -> funcString .)
    *               reduce using rule 160 (valoresMat -> funcString .)
    /               reduce using rule 160 (valoresMat -> funcString .)
    %               reduce using rule 160 (valoresMat -> funcString .)
    ^               reduce using rule 160 (valoresMat -> funcString .)
    )               reduce using rule 160 (valoresMat -> funcString .)
    ,               reduce using rule 160 (valoresMat -> funcString .)
    ]               reduce using rule 160 (valoresMat -> funcString .)
    EQEQ            reduce using rule 160 (valoresMat -> funcString .)
    DISTINTO        reduce using rule 160 (valoresMat -> funcString .)
    >               reduce using rule 160 (valoresMat -> funcString .)
    <               reduce using rule 160 (valoresMat -> funcString .)
    ;               reduce using rule 160 (valoresMat -> funcString .)
    AND             reduce using rule 160 (valoresMat -> funcString .)
    OR              reduce using rule 160 (valoresMat -> funcString .)
    ?               reduce using rule 160 (valoresMat -> funcString .)
    :               reduce using rule 160 (valoresMat -> funcString .)
    }               reduce using rule 160 (valoresMat -> funcString .)


state 185

    (156) valoresMat -> INT .
    (228) tCompareEQ -> INT .
    (237) tCompare -> INT .

    )               reduce using rule 156 (valoresMat -> INT .)
    +               reduce using rule 156 (valoresMat -> INT .)
    -               reduce using rule 156 (valoresMat -> INT .)
    *               reduce using rule 156 (valoresMat -> INT .)
    /               reduce using rule 156 (valoresMat -> INT .)
    %               reduce using rule 156 (valoresMat -> INT .)
    ^               reduce using rule 156 (valoresMat -> INT .)
    EQEQ            reduce using rule 228 (tCompareEQ -> INT .)
    DISTINTO        reduce using rule 228 (tCompareEQ -> INT .)
    >               reduce using rule 237 (tCompare -> INT .)
    <               reduce using rule 237 (tCompare -> INT .)


state 186

    (157) valoresMat -> FLOAT .
    (229) tCompareEQ -> FLOAT .
    (239) tCompare -> FLOAT .

    )               reduce using rule 157 (valoresMat -> FLOAT .)
    +               reduce using rule 157 (valoresMat -> FLOAT .)
    -               reduce using rule 157 (valoresMat -> FLOAT .)
    *               reduce using rule 157 (valoresMat -> FLOAT .)
    /               reduce using rule 157 (valoresMat -> FLOAT .)
    %               reduce using rule 157 (valoresMat -> FLOAT .)
    ^               reduce using rule 157 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 229 (tCompareEQ -> FLOAT .)
    DISTINTO        reduce using rule 229 (tCompareEQ -> FLOAT .)
    >               reduce using rule 239 (tCompare -> FLOAT .)
    <               reduce using rule 239 (tCompare -> FLOAT .)


state 187

    (199) valoresBool -> BOOL .
    (224) tCompareEQ -> BOOL .

    ?               reduce using rule 199 (valoresBool -> BOOL .)
    OR              reduce using rule 199 (valoresBool -> BOOL .)
    AND             reduce using rule 199 (valoresBool -> BOOL .)
    ,               reduce using rule 199 (valoresBool -> BOOL .)
    ]               reduce using rule 199 (valoresBool -> BOOL .)
    )               reduce using rule 199 (valoresBool -> BOOL .)
    ;               reduce using rule 199 (valoresBool -> BOOL .)
    :               reduce using rule 199 (valoresBool -> BOOL .)
    }               reduce using rule 199 (valoresBool -> BOOL .)
    EQEQ            reduce using rule 224 (tCompareEQ -> BOOL .)
    DISTINTO        reduce using rule 224 (tCompareEQ -> BOOL .)


state 188

    (248) parenBool -> ( expBool . )
    (125) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (134) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (205) expBool -> expBool . OR and
    (207) expBool -> expBool . OR valoresBool

    )               shift and go to state 327
    ?               shift and go to state 204
    OR              shift and go to state 203


state 189

    (105) ternario -> ( ternarioVars . )

    )               shift and go to state 328


state 190

    (162) valoresMat -> varYVals .
    (201) valoresBool -> varYVals .
    (226) tCompareEQ -> varYVals .
    (236) tCompare -> varYVals .

    )               reduce using rule 162 (valoresMat -> varYVals .)
    +               reduce using rule 162 (valoresMat -> varYVals .)
    -               reduce using rule 162 (valoresMat -> varYVals .)
    *               reduce using rule 162 (valoresMat -> varYVals .)
    /               reduce using rule 162 (valoresMat -> varYVals .)
    %               reduce using rule 162 (valoresMat -> varYVals .)
    ^               reduce using rule 162 (valoresMat -> varYVals .)
    ?               reduce using rule 201 (valoresBool -> varYVals .)
    OR              reduce using rule 201 (valoresBool -> varYVals .)
    AND             reduce using rule 201 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 226 (tCompareEQ -> varYVals .)
    DISTINTO        reduce using rule 226 (tCompareEQ -> varYVals .)
    >               reduce using rule 236 (tCompare -> varYVals .)
    <               reduce using rule 236 (tCompare -> varYVals .)


state 191

    (159) valoresMat -> atributos .

    +               reduce using rule 159 (valoresMat -> atributos .)
    -               reduce using rule 159 (valoresMat -> atributos .)
    *               reduce using rule 159 (valoresMat -> atributos .)
    /               reduce using rule 159 (valoresMat -> atributos .)
    %               reduce using rule 159 (valoresMat -> atributos .)
    ^               reduce using rule 159 (valoresMat -> atributos .)
    )               reduce using rule 159 (valoresMat -> atributos .)
    ,               reduce using rule 159 (valoresMat -> atributos .)
    ]               reduce using rule 159 (valoresMat -> atributos .)
    EQEQ            reduce using rule 159 (valoresMat -> atributos .)
    DISTINTO        reduce using rule 159 (valoresMat -> atributos .)
    >               reduce using rule 159 (valoresMat -> atributos .)
    <               reduce using rule 159 (valoresMat -> atributos .)
    ;               reduce using rule 159 (valoresMat -> atributos .)
    AND             reduce using rule 159 (valoresMat -> atributos .)
    OR              reduce using rule 159 (valoresMat -> atributos .)
    ?               reduce using rule 159 (valoresMat -> atributos .)
    :               reduce using rule 159 (valoresMat -> atributos .)
    }               reduce using rule 159 (valoresMat -> atributos .)


state 192

    (158) valoresMat -> funcInt .

    ^               reduce using rule 158 (valoresMat -> funcInt .)
    *               reduce using rule 158 (valoresMat -> funcInt .)
    /               reduce using rule 158 (valoresMat -> funcInt .)
    %               reduce using rule 158 (valoresMat -> funcInt .)
    +               reduce using rule 158 (valoresMat -> funcInt .)
    -               reduce using rule 158 (valoresMat -> funcInt .)
    ,               reduce using rule 158 (valoresMat -> funcInt .)
    ]               reduce using rule 158 (valoresMat -> funcInt .)
    EQEQ            reduce using rule 158 (valoresMat -> funcInt .)
    DISTINTO        reduce using rule 158 (valoresMat -> funcInt .)
    >               reduce using rule 158 (valoresMat -> funcInt .)
    <               reduce using rule 158 (valoresMat -> funcInt .)
    )               reduce using rule 158 (valoresMat -> funcInt .)
    ;               reduce using rule 158 (valoresMat -> funcInt .)
    AND             reduce using rule 158 (valoresMat -> funcInt .)
    OR              reduce using rule 158 (valoresMat -> funcInt .)
    ?               reduce using rule 158 (valoresMat -> funcInt .)
    :               reduce using rule 158 (valoresMat -> funcInt .)
    }               reduce using rule 158 (valoresMat -> funcInt .)


state 193

    (195) iSing -> + valoresMat .

    ^               reduce using rule 195 (iSing -> + valoresMat .)
    *               reduce using rule 195 (iSing -> + valoresMat .)
    /               reduce using rule 195 (iSing -> + valoresMat .)
    %               reduce using rule 195 (iSing -> + valoresMat .)
    +               reduce using rule 195 (iSing -> + valoresMat .)
    -               reduce using rule 195 (iSing -> + valoresMat .)
    )               reduce using rule 195 (iSing -> + valoresMat .)
    EQEQ            reduce using rule 195 (iSing -> + valoresMat .)
    DISTINTO        reduce using rule 195 (iSing -> + valoresMat .)
    >               reduce using rule 195 (iSing -> + valoresMat .)
    <               reduce using rule 195 (iSing -> + valoresMat .)
    :               reduce using rule 195 (iSing -> + valoresMat .)
    ,               reduce using rule 195 (iSing -> + valoresMat .)
    ]               reduce using rule 195 (iSing -> + valoresMat .)
    ;               reduce using rule 195 (iSing -> + valoresMat .)
    AND             reduce using rule 195 (iSing -> + valoresMat .)
    OR              reduce using rule 195 (iSing -> + valoresMat .)
    ?               reduce using rule 195 (iSing -> + valoresMat .)
    }               reduce using rule 195 (iSing -> + valoresMat .)


state 194

    (197) paren -> ( . eMat )
    (198) paren -> ( . valoresMat )
    (164) valoresMat -> ( . ternarioMat )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (51) funcBool -> . COLINEALES ( valores , valores )
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (56) vec -> . [ elem ]
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 330
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    BOOL            shift and go to state 187
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    {               shift and go to state 101
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    atributos                      shift and go to state 191
    valoresBool                    shift and go to state 329
    ternarioMat                    shift and go to state 331
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    exp                            shift and go to state 100
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 179
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 332

state 195

    (193) iSing -> + paren .

    ^               reduce using rule 193 (iSing -> + paren .)
    *               reduce using rule 193 (iSing -> + paren .)
    /               reduce using rule 193 (iSing -> + paren .)
    %               reduce using rule 193 (iSing -> + paren .)
    +               reduce using rule 193 (iSing -> + paren .)
    -               reduce using rule 193 (iSing -> + paren .)
    )               reduce using rule 193 (iSing -> + paren .)
    EQEQ            reduce using rule 193 (iSing -> + paren .)
    DISTINTO        reduce using rule 193 (iSing -> + paren .)
    >               reduce using rule 193 (iSing -> + paren .)
    <               reduce using rule 193 (iSing -> + paren .)
    :               reduce using rule 193 (iSing -> + paren .)
    ,               reduce using rule 193 (iSing -> + paren .)
    ]               reduce using rule 193 (iSing -> + paren .)
    ;               reduce using rule 193 (iSing -> + paren .)
    AND             reduce using rule 193 (iSing -> + paren .)
    OR              reduce using rule 193 (iSing -> + paren .)
    ?               reduce using rule 193 (iSing -> + paren .)
    }               reduce using rule 193 (iSing -> + paren .)


state 196

    (157) valoresMat -> FLOAT .

    ^               reduce using rule 157 (valoresMat -> FLOAT .)
    *               reduce using rule 157 (valoresMat -> FLOAT .)
    /               reduce using rule 157 (valoresMat -> FLOAT .)
    %               reduce using rule 157 (valoresMat -> FLOAT .)
    +               reduce using rule 157 (valoresMat -> FLOAT .)
    -               reduce using rule 157 (valoresMat -> FLOAT .)
    ,               reduce using rule 157 (valoresMat -> FLOAT .)
    ]               reduce using rule 157 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 157 (valoresMat -> FLOAT .)
    DISTINTO        reduce using rule 157 (valoresMat -> FLOAT .)
    >               reduce using rule 157 (valoresMat -> FLOAT .)
    <               reduce using rule 157 (valoresMat -> FLOAT .)
    )               reduce using rule 157 (valoresMat -> FLOAT .)
    ;               reduce using rule 157 (valoresMat -> FLOAT .)
    AND             reduce using rule 157 (valoresMat -> FLOAT .)
    OR              reduce using rule 157 (valoresMat -> FLOAT .)
    ?               reduce using rule 157 (valoresMat -> FLOAT .)
    :               reduce using rule 157 (valoresMat -> FLOAT .)
    }               reduce using rule 157 (valoresMat -> FLOAT .)


state 197

    (156) valoresMat -> INT .

    ^               reduce using rule 156 (valoresMat -> INT .)
    *               reduce using rule 156 (valoresMat -> INT .)
    /               reduce using rule 156 (valoresMat -> INT .)
    %               reduce using rule 156 (valoresMat -> INT .)
    +               reduce using rule 156 (valoresMat -> INT .)
    -               reduce using rule 156 (valoresMat -> INT .)
    ,               reduce using rule 156 (valoresMat -> INT .)
    ]               reduce using rule 156 (valoresMat -> INT .)
    EQEQ            reduce using rule 156 (valoresMat -> INT .)
    DISTINTO        reduce using rule 156 (valoresMat -> INT .)
    >               reduce using rule 156 (valoresMat -> INT .)
    <               reduce using rule 156 (valoresMat -> INT .)
    )               reduce using rule 156 (valoresMat -> INT .)
    ;               reduce using rule 156 (valoresMat -> INT .)
    AND             reduce using rule 156 (valoresMat -> INT .)
    OR              reduce using rule 156 (valoresMat -> INT .)
    ?               reduce using rule 156 (valoresMat -> INT .)
    :               reduce using rule 156 (valoresMat -> INT .)
    }               reduce using rule 156 (valoresMat -> INT .)


state 198

    (163) valoresMat -> varsOps .

    ^               reduce using rule 163 (valoresMat -> varsOps .)
    *               reduce using rule 163 (valoresMat -> varsOps .)
    /               reduce using rule 163 (valoresMat -> varsOps .)
    %               reduce using rule 163 (valoresMat -> varsOps .)
    +               reduce using rule 163 (valoresMat -> varsOps .)
    -               reduce using rule 163 (valoresMat -> varsOps .)
    ,               reduce using rule 163 (valoresMat -> varsOps .)
    ]               reduce using rule 163 (valoresMat -> varsOps .)
    EQEQ            reduce using rule 163 (valoresMat -> varsOps .)
    DISTINTO        reduce using rule 163 (valoresMat -> varsOps .)
    >               reduce using rule 163 (valoresMat -> varsOps .)
    <               reduce using rule 163 (valoresMat -> varsOps .)
    )               reduce using rule 163 (valoresMat -> varsOps .)
    ;               reduce using rule 163 (valoresMat -> varsOps .)
    AND             reduce using rule 163 (valoresMat -> varsOps .)
    OR              reduce using rule 163 (valoresMat -> varsOps .)
    ?               reduce using rule 163 (valoresMat -> varsOps .)
    :               reduce using rule 163 (valoresMat -> varsOps .)
    }               reduce using rule 163 (valoresMat -> varsOps .)


state 199

    (162) valoresMat -> varYVals .

    ^               reduce using rule 162 (valoresMat -> varYVals .)
    *               reduce using rule 162 (valoresMat -> varYVals .)
    /               reduce using rule 162 (valoresMat -> varYVals .)
    %               reduce using rule 162 (valoresMat -> varYVals .)
    +               reduce using rule 162 (valoresMat -> varYVals .)
    -               reduce using rule 162 (valoresMat -> varYVals .)
    ,               reduce using rule 162 (valoresMat -> varYVals .)
    ]               reduce using rule 162 (valoresMat -> varYVals .)
    EQEQ            reduce using rule 162 (valoresMat -> varYVals .)
    DISTINTO        reduce using rule 162 (valoresMat -> varYVals .)
    >               reduce using rule 162 (valoresMat -> varYVals .)
    <               reduce using rule 162 (valoresMat -> varYVals .)
    )               reduce using rule 162 (valoresMat -> varYVals .)
    ;               reduce using rule 162 (valoresMat -> varYVals .)
    AND             reduce using rule 162 (valoresMat -> varYVals .)
    OR              reduce using rule 162 (valoresMat -> varYVals .)
    ?               reduce using rule 162 (valoresMat -> varYVals .)
    :               reduce using rule 162 (valoresMat -> varYVals .)
    }               reduce using rule 162 (valoresMat -> varYVals .)


state 200

    (194) iSing -> - valoresMat .

    ^               reduce using rule 194 (iSing -> - valoresMat .)
    *               reduce using rule 194 (iSing -> - valoresMat .)
    /               reduce using rule 194 (iSing -> - valoresMat .)
    %               reduce using rule 194 (iSing -> - valoresMat .)
    +               reduce using rule 194 (iSing -> - valoresMat .)
    -               reduce using rule 194 (iSing -> - valoresMat .)
    )               reduce using rule 194 (iSing -> - valoresMat .)
    EQEQ            reduce using rule 194 (iSing -> - valoresMat .)
    DISTINTO        reduce using rule 194 (iSing -> - valoresMat .)
    >               reduce using rule 194 (iSing -> - valoresMat .)
    <               reduce using rule 194 (iSing -> - valoresMat .)
    :               reduce using rule 194 (iSing -> - valoresMat .)
    ,               reduce using rule 194 (iSing -> - valoresMat .)
    ]               reduce using rule 194 (iSing -> - valoresMat .)
    ;               reduce using rule 194 (iSing -> - valoresMat .)
    AND             reduce using rule 194 (iSing -> - valoresMat .)
    OR              reduce using rule 194 (iSing -> - valoresMat .)
    ?               reduce using rule 194 (iSing -> - valoresMat .)
    }               reduce using rule 194 (iSing -> - valoresMat .)


state 201

    (192) iSing -> - paren .

    ^               reduce using rule 192 (iSing -> - paren .)
    *               reduce using rule 192 (iSing -> - paren .)
    /               reduce using rule 192 (iSing -> - paren .)
    %               reduce using rule 192 (iSing -> - paren .)
    +               reduce using rule 192 (iSing -> - paren .)
    -               reduce using rule 192 (iSing -> - paren .)
    )               reduce using rule 192 (iSing -> - paren .)
    EQEQ            reduce using rule 192 (iSing -> - paren .)
    DISTINTO        reduce using rule 192 (iSing -> - paren .)
    >               reduce using rule 192 (iSing -> - paren .)
    <               reduce using rule 192 (iSing -> - paren .)
    :               reduce using rule 192 (iSing -> - paren .)
    ,               reduce using rule 192 (iSing -> - paren .)
    ]               reduce using rule 192 (iSing -> - paren .)
    ;               reduce using rule 192 (iSing -> - paren .)
    AND             reduce using rule 192 (iSing -> - paren .)
    OR              reduce using rule 192 (iSing -> - paren .)
    ?               reduce using rule 192 (iSing -> - paren .)
    }               reduce using rule 192 (iSing -> - paren .)


state 202

    (96) atributos -> reg . . valoresCampos
    (97) valoresCampos -> . varYVals
    (98) valoresCampos -> . END
    (99) valoresCampos -> . BEGIN
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (56) vec -> . [ elem ]

    END             shift and go to state 334
    BEGIN           shift and go to state 333
    ID              shift and go to state 128
    [               shift and go to state 20

    vecVal                         shift and go to state 126
    vec                            shift and go to state 33
    valoresCampos                  shift and go to state 335
    varYVals                       shift and go to state 336

state 203

    (205) expBool -> expBool OR . and
    (207) expBool -> expBool OR . valoresBool
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (51) funcBool -> . COLINEALES ( valores , valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (56) vec -> . [ elem ]
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (248) parenBool -> . ( expBool )
    (92) reg -> . { campos }
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )

    BOOL            shift and go to state 187
    (               shift and go to state 229
    AND             reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    ?               reduce using rule 204 (valoresBool -> .)
    ,               reduce using rule 204 (valoresBool -> .)
    ]               reduce using rule 204 (valoresBool -> .)
    )               reduce using rule 204 (valoresBool -> .)
    ;               reduce using rule 204 (valoresBool -> .)
    :               reduce using rule 204 (valoresBool -> .)
    }               reduce using rule 204 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 230
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    [               shift and go to state 20
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77

    and                            shift and go to state 337
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    mayor                          shift and go to state 81
    valoresBool                    shift and go to state 338
    eMat                           shift and go to state 228
    tCompareEQ                     shift and go to state 75
    atributos                      shift and go to state 191
    vecVal                         shift and go to state 71
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 234
    exp                            shift and go to state 100
    varYVals                       shift and go to state 235
    parenBool                      shift and go to state 86

state 204

    (125) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (134) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (111) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (135) valoresTernarioBool -> . BOOL
    (136) valoresTernarioBool -> . funcBool
    (137) valoresTernarioBool -> . ternarioBool
    (138) valoresTernarioBool -> . ( ternarioBool )
    (139) valoresTernarioBool -> . expBool
    (116) valoresTernarioVars -> . reg
    (117) valoresTernarioVars -> . vec
    (118) valoresTernarioVars -> . ternarioVars
    (119) valoresTernarioVars -> . ( ternarioVars )
    (120) valoresTernarioVars -> . atributos
    (121) valoresTernarioVars -> . varsOps
    (122) valoresTernarioVars -> . varYVals
    (123) valoresTernarioVars -> . RES
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (92) reg -> . { campos }
    (56) vec -> . [ elem ]
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    (               shift and go to state 307
    BOOL            shift and go to state 305
    RES             shift and go to state 288
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 291
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 339
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 340
    expBool                        shift and go to state 306
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 341
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 297
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 309
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 205

    (243) menor -> tCompare < . tCompare
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (56) vec -> . [ elem ]
    (92) reg -> . { campos }
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )

    INT             shift and go to state 347
    FLOAT           shift and go to state 348
    (               shift and go to state 344
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 346
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    CAPITALIZAR     shift and go to state 27
    [               shift and go to state 20
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77

    funcInt                        shift and go to state 342
    valoresMat                     shift and go to state 69
    vecVal                         shift and go to state 290
    eMat                           shift and go to state 343
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 349
    exp                            shift and go to state 100
    tCompare                       shift and go to state 345
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    iSing                          shift and go to state 85
    varYVals                       shift and go to state 350
    atributos                      shift and go to state 191

state 206

    (241) mayor -> tCompare > . tCompare
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (56) vec -> . [ elem ]
    (92) reg -> . { campos }
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )

    INT             shift and go to state 347
    FLOAT           shift and go to state 348
    (               shift and go to state 344
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 346
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    CAPITALIZAR     shift and go to state 27
    [               shift and go to state 20
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77

    funcInt                        shift and go to state 342
    valoresMat                     shift and go to state 69
    vecVal                         shift and go to state 290
    eMat                           shift and go to state 343
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 349
    exp                            shift and go to state 100
    tCompare                       shift and go to state 351
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    iSing                          shift and go to state 85
    varYVals                       shift and go to state 350
    atributos                      shift and go to state 191

state 207

    (95) atributos -> ID . . valoresCampos
    (97) valoresCampos -> . varYVals
    (98) valoresCampos -> . END
    (99) valoresCampos -> . BEGIN
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (56) vec -> . [ elem ]

    END             shift and go to state 334
    BEGIN           shift and go to state 333
    ID              shift and go to state 128
    [               shift and go to state 20

    vec                            shift and go to state 33
    valoresCampos                  shift and go to state 352
    varYVals                       shift and go to state 336
    vecVal                         shift and go to state 126

state 208

    (56) vec -> [ elem ] .

    [               reduce using rule 56 (vec -> [ elem ] .)
    :               reduce using rule 56 (vec -> [ elem ] .)
    ,               reduce using rule 56 (vec -> [ elem ] .)
    ]               reduce using rule 56 (vec -> [ elem ] .)
    )               reduce using rule 56 (vec -> [ elem ] .)
    ;               reduce using rule 56 (vec -> [ elem ] .)
    }               reduce using rule 56 (vec -> [ elem ] .)


state 209

    (176) p -> p % . exp
    (182) p -> p % . valoresMat
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (56) vec -> . [ elem ]

    INT             shift and go to state 197
    FLOAT           shift and go to state 196
    STRING          shift and go to state 181
    (               shift and go to state 260
    -               shift and go to state 78
    +               shift and go to state 77
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    [               shift and go to state 20

    funcInt                        shift and go to state 192
    valoresMat                     shift and go to state 353
    vecVal                         shift and go to state 71
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 198
    exp                            shift and go to state 354
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    iSing                          shift and go to state 85
    varYVals                       shift and go to state 199
    atributos                      shift and go to state 191

state 210

    (174) p -> p * . exp
    (180) p -> p * . valoresMat
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (56) vec -> . [ elem ]

    INT             shift and go to state 197
    FLOAT           shift and go to state 196
    STRING          shift and go to state 181
    (               shift and go to state 260
    -               shift and go to state 78
    +               shift and go to state 77
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    [               shift and go to state 20

    funcInt                        shift and go to state 192
    valoresMat                     shift and go to state 355
    vecVal                         shift and go to state 71
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 198
    exp                            shift and go to state 356
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    iSing                          shift and go to state 85
    varYVals                       shift and go to state 199
    atributos                      shift and go to state 191

state 211

    (175) p -> p / . exp
    (181) p -> p / . valoresMat
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (56) vec -> . [ elem ]

    INT             shift and go to state 197
    FLOAT           shift and go to state 196
    STRING          shift and go to state 181
    (               shift and go to state 260
    -               shift and go to state 78
    +               shift and go to state 77
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    [               shift and go to state 20

    funcInt                        shift and go to state 192
    valoresMat                     shift and go to state 357
    vecVal                         shift and go to state 71
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 198
    exp                            shift and go to state 358
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    iSing                          shift and go to state 85
    varYVals                       shift and go to state 199
    atributos                      shift and go to state 191

state 212

    (200) valoresBool -> funcBool .

    EQEQ            reduce using rule 200 (valoresBool -> funcBool .)
    DISTINTO        reduce using rule 200 (valoresBool -> funcBool .)
    AND             reduce using rule 200 (valoresBool -> funcBool .)
    OR              reduce using rule 200 (valoresBool -> funcBool .)
    ?               reduce using rule 200 (valoresBool -> funcBool .)
    ,               reduce using rule 200 (valoresBool -> funcBool .)
    ]               reduce using rule 200 (valoresBool -> funcBool .)
    )               reduce using rule 200 (valoresBool -> funcBool .)
    ;               reduce using rule 200 (valoresBool -> funcBool .)
    :               reduce using rule 200 (valoresBool -> funcBool .)
    }               reduce using rule 200 (valoresBool -> funcBool .)


state 213

    (246) not -> NOT valoresBool .

    EQEQ            reduce using rule 246 (not -> NOT valoresBool .)
    DISTINTO        reduce using rule 246 (not -> NOT valoresBool .)
    AND             reduce using rule 246 (not -> NOT valoresBool .)
    OR              reduce using rule 246 (not -> NOT valoresBool .)
    ?               reduce using rule 246 (not -> NOT valoresBool .)
    ]               reduce using rule 246 (not -> NOT valoresBool .)
    :               reduce using rule 246 (not -> NOT valoresBool .)
    ,               reduce using rule 246 (not -> NOT valoresBool .)
    )               reduce using rule 246 (not -> NOT valoresBool .)
    ;               reduce using rule 246 (not -> NOT valoresBool .)
    }               reduce using rule 246 (not -> NOT valoresBool .)


state 214

    (203) valoresBool -> ( . ternarioBool )
    (248) parenBool -> ( . expBool )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (56) vec -> . [ elem ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (248) parenBool -> . ( expBool )
    (92) reg -> . { campos }
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )

    BOOL            shift and go to state 187
    (               shift and go to state 229
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 230
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77

    and                            shift and go to state 60
    atributos                      shift and go to state 191
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    valoresBool                    shift and go to state 359
    eMat                           shift and go to state 228
    p                              shift and go to state 96
    mayor                          shift and go to state 81
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    ternarioBool                   shift and go to state 360
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    tCompareEQ                     shift and go to state 75
    varsOps                        shift and go to state 234
    exp                            shift and go to state 100
    varYVals                       shift and go to state 235
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 361

state 215

    (245) not -> NOT not .

    EQEQ            reduce using rule 245 (not -> NOT not .)
    DISTINTO        reduce using rule 245 (not -> NOT not .)
    AND             reduce using rule 245 (not -> NOT not .)
    OR              reduce using rule 245 (not -> NOT not .)
    ?               reduce using rule 245 (not -> NOT not .)
    ]               reduce using rule 245 (not -> NOT not .)
    :               reduce using rule 245 (not -> NOT not .)
    ,               reduce using rule 245 (not -> NOT not .)
    )               reduce using rule 245 (not -> NOT not .)
    ;               reduce using rule 245 (not -> NOT not .)
    }               reduce using rule 245 (not -> NOT not .)


state 216

    (140) varYVals -> ID .
    (59) vecVal -> ID . [ expresion ]
    (62) vecVal -> ID . [ INT ]
    (147) variable -> ID .

    EQEQ            reduce using rule 140 (varYVals -> ID .)
    DISTINTO        reduce using rule 140 (varYVals -> ID .)
    AND             reduce using rule 140 (varYVals -> ID .)
    OR              reduce using rule 140 (varYVals -> ID .)
    ?               reduce using rule 140 (varYVals -> ID .)
    ,               reduce using rule 140 (varYVals -> ID .)
    ]               reduce using rule 140 (varYVals -> ID .)
    )               reduce using rule 140 (varYVals -> ID .)
    ;               reduce using rule 140 (varYVals -> ID .)
    :               reduce using rule 140 (varYVals -> ID .)
    }               reduce using rule 140 (varYVals -> ID .)
    [               shift and go to state 105
    MASMAS          reduce using rule 147 (variable -> ID .)
    MENOSMENOS      reduce using rule 147 (variable -> ID .)


state 217

    (199) valoresBool -> BOOL .

    EQEQ            reduce using rule 199 (valoresBool -> BOOL .)
    DISTINTO        reduce using rule 199 (valoresBool -> BOOL .)
    AND             reduce using rule 199 (valoresBool -> BOOL .)
    OR              reduce using rule 199 (valoresBool -> BOOL .)
    ?               reduce using rule 199 (valoresBool -> BOOL .)
    ,               reduce using rule 199 (valoresBool -> BOOL .)
    ]               reduce using rule 199 (valoresBool -> BOOL .)
    )               reduce using rule 199 (valoresBool -> BOOL .)
    ;               reduce using rule 199 (valoresBool -> BOOL .)
    :               reduce using rule 199 (valoresBool -> BOOL .)
    }               reduce using rule 199 (valoresBool -> BOOL .)


state 218

    (202) valoresBool -> varsOps .

    EQEQ            reduce using rule 202 (valoresBool -> varsOps .)
    DISTINTO        reduce using rule 202 (valoresBool -> varsOps .)
    AND             reduce using rule 202 (valoresBool -> varsOps .)
    OR              reduce using rule 202 (valoresBool -> varsOps .)
    ?               reduce using rule 202 (valoresBool -> varsOps .)
    ,               reduce using rule 202 (valoresBool -> varsOps .)
    ]               reduce using rule 202 (valoresBool -> varsOps .)
    )               reduce using rule 202 (valoresBool -> varsOps .)
    ;               reduce using rule 202 (valoresBool -> varsOps .)
    :               reduce using rule 202 (valoresBool -> varsOps .)
    }               reduce using rule 202 (valoresBool -> varsOps .)


state 219

    (201) valoresBool -> varYVals .

    EQEQ            reduce using rule 201 (valoresBool -> varYVals .)
    DISTINTO        reduce using rule 201 (valoresBool -> varYVals .)
    AND             reduce using rule 201 (valoresBool -> varYVals .)
    OR              reduce using rule 201 (valoresBool -> varYVals .)
    ?               reduce using rule 201 (valoresBool -> varYVals .)
    ,               reduce using rule 201 (valoresBool -> varYVals .)
    ]               reduce using rule 201 (valoresBool -> varYVals .)
    )               reduce using rule 201 (valoresBool -> varYVals .)
    ;               reduce using rule 201 (valoresBool -> varYVals .)
    :               reduce using rule 201 (valoresBool -> varYVals .)
    }               reduce using rule 201 (valoresBool -> varYVals .)


state 220

    (187) exp -> exp ^ . iSing
    (189) exp -> exp ^ . valoresMat
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (56) vec -> . [ elem ]

    -               shift and go to state 78
    +               shift and go to state 77
    INT             shift and go to state 197
    FLOAT           shift and go to state 196
    STRING          shift and go to state 181
    (               shift and go to state 260
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    [               shift and go to state 20

    funcString                     shift and go to state 184
    funcInt                        shift and go to state 192
    vecVal                         shift and go to state 71
    vec                            shift and go to state 33
    iSing                          shift and go to state 363
    valoresMat                     shift and go to state 362
    variable                       shift and go to state 89
    paren                          shift and go to state 88
    varYVals                       shift and go to state 199
    reg                            shift and go to state 180
    atributos                      shift and go to state 191
    varsOps                        shift and go to state 198

state 221

    (92) reg -> { campos . }

    }               shift and go to state 364


state 222

    (93) campos -> ID . : valores , campos
    (94) campos -> ID . : valores

    :               shift and go to state 365


state 223

    (155) varAsig -> ID . ID . = valores

    =               shift and go to state 366


state 224

    (59) vecVal -> ID [ expresion . ]

    ]               shift and go to state 367


state 225

    (62) vecVal -> ID [ INT . ]
    (156) valoresMat -> INT .
    (228) tCompareEQ -> INT .
    (237) tCompare -> INT .

    ]               shift and go to state 368
    +               reduce using rule 156 (valoresMat -> INT .)
    -               reduce using rule 156 (valoresMat -> INT .)
    *               reduce using rule 156 (valoresMat -> INT .)
    /               reduce using rule 156 (valoresMat -> INT .)
    %               reduce using rule 156 (valoresMat -> INT .)
    ^               reduce using rule 156 (valoresMat -> INT .)
    EQEQ            reduce using rule 228 (tCompareEQ -> INT .)
    DISTINTO        reduce using rule 228 (tCompareEQ -> INT .)
    >               reduce using rule 237 (tCompare -> INT .)
    <               reduce using rule 237 (tCompare -> INT .)


state 226

    (230) tCompareEQ -> funcInt .
    (238) tCompare -> funcInt .
    (158) valoresMat -> funcInt .

    EQEQ            reduce using rule 230 (tCompareEQ -> funcInt .)
    DISTINTO        reduce using rule 230 (tCompareEQ -> funcInt .)
    AND             reduce using rule 230 (tCompareEQ -> funcInt .)
    OR              reduce using rule 230 (tCompareEQ -> funcInt .)
    ?               reduce using rule 230 (tCompareEQ -> funcInt .)
    ,               reduce using rule 230 (tCompareEQ -> funcInt .)
    ]               reduce using rule 230 (tCompareEQ -> funcInt .)
    )               reduce using rule 230 (tCompareEQ -> funcInt .)
    ;               reduce using rule 230 (tCompareEQ -> funcInt .)
    :               reduce using rule 230 (tCompareEQ -> funcInt .)
    }               reduce using rule 230 (tCompareEQ -> funcInt .)
    >               reduce using rule 238 (tCompare -> funcInt .)
    <               reduce using rule 238 (tCompare -> funcInt .)
    +               reduce using rule 158 (valoresMat -> funcInt .)
    -               reduce using rule 158 (valoresMat -> funcInt .)
    *               reduce using rule 158 (valoresMat -> funcInt .)
    /               reduce using rule 158 (valoresMat -> funcInt .)
    %               reduce using rule 158 (valoresMat -> funcInt .)
    ^               reduce using rule 158 (valoresMat -> funcInt .)


state 227

    (42) cosaBooleana -> valoresBool .
    (206) expBool -> valoresBool . OR and
    (208) expBool -> valoresBool . OR valoresBool
    (211) and -> valoresBool . AND eq
    (213) and -> valoresBool . AND valoresBool

    )               reduce using rule 42 (cosaBooleana -> valoresBool .)
    OR              shift and go to state 166
    AND             shift and go to state 165


state 228

    (231) tCompareEQ -> eMat .
    (165) eMat -> eMat . + p
    (167) eMat -> eMat . + valoresMat
    (170) eMat -> eMat . - p
    (172) eMat -> eMat . - valoresMat
    (234) tCompare -> eMat .

    EQEQ            reduce using rule 231 (tCompareEQ -> eMat .)
    DISTINTO        reduce using rule 231 (tCompareEQ -> eMat .)
    +               shift and go to state 168
    -               shift and go to state 169
    >               reduce using rule 234 (tCompare -> eMat .)
    <               reduce using rule 234 (tCompare -> eMat .)


state 229

    (203) valoresBool -> ( . ternarioBool )
    (232) tCompareEQ -> ( . ternarioBool )
    (233) tCompareEQ -> ( . ternarioMat )
    (240) tCompare -> ( . ternarioMat )
    (164) valoresMat -> ( . ternarioMat )
    (248) parenBool -> ( . expBool )
    (197) paren -> ( . eMat )
    (198) paren -> ( . valoresMat )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (51) funcBool -> . COLINEALES ( valores , valores )
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (56) vec -> . [ elem ]
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 370
    BOOL            shift and go to state 187
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 369
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 371
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 323
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    expBool                        shift and go to state 372
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 230

    (140) varYVals -> ID .
    (59) vecVal -> ID . [ expresion ]
    (62) vecVal -> ID . [ INT ]
    (147) variable -> ID .
    (95) atributos -> ID . . valoresCampos

    ?               reduce using rule 140 (varYVals -> ID .)
    OR              reduce using rule 140 (varYVals -> ID .)
    AND             reduce using rule 140 (varYVals -> ID .)
    EQEQ            reduce using rule 140 (varYVals -> ID .)
    DISTINTO        reduce using rule 140 (varYVals -> ID .)
    >               reduce using rule 140 (varYVals -> ID .)
    <               reduce using rule 140 (varYVals -> ID .)
    +               reduce using rule 140 (varYVals -> ID .)
    -               reduce using rule 140 (varYVals -> ID .)
    *               reduce using rule 140 (varYVals -> ID .)
    /               reduce using rule 140 (varYVals -> ID .)
    %               reduce using rule 140 (varYVals -> ID .)
    ^               reduce using rule 140 (varYVals -> ID .)
    ,               reduce using rule 140 (varYVals -> ID .)
    ]               reduce using rule 140 (varYVals -> ID .)
    )               reduce using rule 140 (varYVals -> ID .)
    ;               reduce using rule 140 (varYVals -> ID .)
    :               reduce using rule 140 (varYVals -> ID .)
    }               reduce using rule 140 (varYVals -> ID .)
    [               shift and go to state 105
    MASMAS          reduce using rule 147 (variable -> ID .)
    MENOSMENOS      reduce using rule 147 (variable -> ID .)
    .               shift and go to state 207


state 231

    (6) lAbierta -> IF ( cosaBooleana . ) linea
    (7) lAbierta -> IF ( cosaBooleana . ) { g } ELSE lAbierta
    (8) lAbierta -> IF ( cosaBooleana . ) lCerrada ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana . ) { g }
    (14) lCerrada -> IF ( cosaBooleana . ) { g } ELSE { g }
    (15) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE { g }
    (16) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana . ) { g } ELSE lCerrada
    (18) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE COMMENT com lCerrada

    )               shift and go to state 373


state 232

    (228) tCompareEQ -> INT .
    (237) tCompare -> INT .
    (156) valoresMat -> INT .

    EQEQ            reduce using rule 228 (tCompareEQ -> INT .)
    DISTINTO        reduce using rule 228 (tCompareEQ -> INT .)
    AND             reduce using rule 228 (tCompareEQ -> INT .)
    OR              reduce using rule 228 (tCompareEQ -> INT .)
    ?               reduce using rule 228 (tCompareEQ -> INT .)
    ,               reduce using rule 228 (tCompareEQ -> INT .)
    ]               reduce using rule 228 (tCompareEQ -> INT .)
    )               reduce using rule 228 (tCompareEQ -> INT .)
    ;               reduce using rule 228 (tCompareEQ -> INT .)
    :               reduce using rule 228 (tCompareEQ -> INT .)
    }               reduce using rule 228 (tCompareEQ -> INT .)
    >               reduce using rule 237 (tCompare -> INT .)
    <               reduce using rule 237 (tCompare -> INT .)
    +               reduce using rule 156 (valoresMat -> INT .)
    -               reduce using rule 156 (valoresMat -> INT .)
    *               reduce using rule 156 (valoresMat -> INT .)
    /               reduce using rule 156 (valoresMat -> INT .)
    %               reduce using rule 156 (valoresMat -> INT .)
    ^               reduce using rule 156 (valoresMat -> INT .)


state 233

    (229) tCompareEQ -> FLOAT .
    (239) tCompare -> FLOAT .
    (157) valoresMat -> FLOAT .

    EQEQ            reduce using rule 229 (tCompareEQ -> FLOAT .)
    DISTINTO        reduce using rule 229 (tCompareEQ -> FLOAT .)
    AND             reduce using rule 229 (tCompareEQ -> FLOAT .)
    OR              reduce using rule 229 (tCompareEQ -> FLOAT .)
    ?               reduce using rule 229 (tCompareEQ -> FLOAT .)
    ,               reduce using rule 229 (tCompareEQ -> FLOAT .)
    ]               reduce using rule 229 (tCompareEQ -> FLOAT .)
    )               reduce using rule 229 (tCompareEQ -> FLOAT .)
    ;               reduce using rule 229 (tCompareEQ -> FLOAT .)
    :               reduce using rule 229 (tCompareEQ -> FLOAT .)
    }               reduce using rule 229 (tCompareEQ -> FLOAT .)
    >               reduce using rule 239 (tCompare -> FLOAT .)
    <               reduce using rule 239 (tCompare -> FLOAT .)
    +               reduce using rule 157 (valoresMat -> FLOAT .)
    -               reduce using rule 157 (valoresMat -> FLOAT .)
    *               reduce using rule 157 (valoresMat -> FLOAT .)
    /               reduce using rule 157 (valoresMat -> FLOAT .)
    %               reduce using rule 157 (valoresMat -> FLOAT .)
    ^               reduce using rule 157 (valoresMat -> FLOAT .)


state 234

    (202) valoresBool -> varsOps .
    (227) tCompareEQ -> varsOps .
    (235) tCompare -> varsOps .
    (163) valoresMat -> varsOps .

    AND             reduce using rule 202 (valoresBool -> varsOps .)
    OR              reduce using rule 202 (valoresBool -> varsOps .)
    ?               reduce using rule 202 (valoresBool -> varsOps .)
    ,               reduce using rule 202 (valoresBool -> varsOps .)
    ]               reduce using rule 202 (valoresBool -> varsOps .)
    )               reduce using rule 202 (valoresBool -> varsOps .)
    ;               reduce using rule 202 (valoresBool -> varsOps .)
    :               reduce using rule 202 (valoresBool -> varsOps .)
    }               reduce using rule 202 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 227 (tCompareEQ -> varsOps .)
    DISTINTO        reduce using rule 227 (tCompareEQ -> varsOps .)
    >               reduce using rule 235 (tCompare -> varsOps .)
    <               reduce using rule 235 (tCompare -> varsOps .)
    +               reduce using rule 163 (valoresMat -> varsOps .)
    -               reduce using rule 163 (valoresMat -> varsOps .)
    *               reduce using rule 163 (valoresMat -> varsOps .)
    /               reduce using rule 163 (valoresMat -> varsOps .)
    %               reduce using rule 163 (valoresMat -> varsOps .)
    ^               reduce using rule 163 (valoresMat -> varsOps .)


state 235

    (201) valoresBool -> varYVals .
    (226) tCompareEQ -> varYVals .
    (236) tCompare -> varYVals .
    (162) valoresMat -> varYVals .

    AND             reduce using rule 201 (valoresBool -> varYVals .)
    OR              reduce using rule 201 (valoresBool -> varYVals .)
    ?               reduce using rule 201 (valoresBool -> varYVals .)
    ,               reduce using rule 201 (valoresBool -> varYVals .)
    ]               reduce using rule 201 (valoresBool -> varYVals .)
    )               reduce using rule 201 (valoresBool -> varYVals .)
    ;               reduce using rule 201 (valoresBool -> varYVals .)
    :               reduce using rule 201 (valoresBool -> varYVals .)
    }               reduce using rule 201 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 226 (tCompareEQ -> varYVals .)
    DISTINTO        reduce using rule 226 (tCompareEQ -> varYVals .)
    >               reduce using rule 236 (tCompare -> varYVals .)
    <               reduce using rule 236 (tCompare -> varYVals .)
    +               reduce using rule 162 (valoresMat -> varYVals .)
    -               reduce using rule 162 (valoresMat -> varYVals .)
    *               reduce using rule 162 (valoresMat -> varYVals .)
    /               reduce using rule 162 (valoresMat -> varYVals .)
    %               reduce using rule 162 (valoresMat -> varYVals .)
    ^               reduce using rule 162 (valoresMat -> varYVals .)


state 236

    (41) cosaBooleana -> expBool .
    (205) expBool -> expBool . OR and
    (207) expBool -> expBool . OR valoresBool

    )               reduce using rule 41 (cosaBooleana -> expBool .)
    OR              shift and go to state 203


state 237

    (50) funcString -> CAPITALIZAR ( valores . )

    )               shift and go to state 374


state 238

    (48) funcInt -> MULTIESCALAR ( valores . , valores param )

    ,               shift and go to state 375


state 239

    (24) lCerrada -> loop COMMENT com . lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (150) varAsig -> . variable MULEQ valores
    (151) varAsig -> . variable DIVEQ valores
    (152) varAsig -> . variable MASEQ valores
    (153) varAsig -> . variable MENOSEQ valores
    (154) varAsig -> . variable = valores
    (155) varAsig -> . ID . ID = valores
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 376
    varsOps                        shift and go to state 13
    loop                           shift and go to state 39

state 240

    (22) lCerrada -> loop { g . }

    }               shift and go to state 377


state 241

    (60) vecVal -> vec [ expresion . ]

    ]               shift and go to state 378


state 242

    (63) vecVal -> vec [ INT . ]
    (156) valoresMat -> INT .
    (228) tCompareEQ -> INT .
    (237) tCompare -> INT .

    ]               shift and go to state 379
    +               reduce using rule 156 (valoresMat -> INT .)
    -               reduce using rule 156 (valoresMat -> INT .)
    *               reduce using rule 156 (valoresMat -> INT .)
    /               reduce using rule 156 (valoresMat -> INT .)
    %               reduce using rule 156 (valoresMat -> INT .)
    ^               reduce using rule 156 (valoresMat -> INT .)
    EQEQ            reduce using rule 228 (tCompareEQ -> INT .)
    DISTINTO        reduce using rule 228 (tCompareEQ -> INT .)
    >               reduce using rule 237 (tCompare -> INT .)
    <               reduce using rule 237 (tCompare -> INT .)


state 243

    (12) com -> COMMENT com .

    IF              reduce using rule 12 (com -> COMMENT com .)
    DO              reduce using rule 12 (com -> COMMENT com .)
    RETURN          reduce using rule 12 (com -> COMMENT com .)
    ;               reduce using rule 12 (com -> COMMENT com .)
    WHILE           reduce using rule 12 (com -> COMMENT com .)
    FOR             reduce using rule 12 (com -> COMMENT com .)
    MENOSMENOS      reduce using rule 12 (com -> COMMENT com .)
    MASMAS          reduce using rule 12 (com -> COMMENT com .)
    ID              reduce using rule 12 (com -> COMMENT com .)
    PRINT           reduce using rule 12 (com -> COMMENT com .)
    MULTIESCALAR    reduce using rule 12 (com -> COMMENT com .)
    LENGTH          reduce using rule 12 (com -> COMMENT com .)
    CAPITALIZAR     reduce using rule 12 (com -> COMMENT com .)
    COLINEALES      reduce using rule 12 (com -> COMMENT com .)
    [               reduce using rule 12 (com -> COMMENT com .)


state 244

    (27) lCerrada -> DO COMMENT com lCerrada . WHILE ( valores ) ;

    WHILE           shift and go to state 380


state 245

    (14) lCerrada -> IF ( cosaBooleana . ) { g } ELSE { g }
    (15) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE { g }
    (16) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana . ) { g } ELSE lCerrada
    (18) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE COMMENT com lCerrada

    )               shift and go to state 381


state 246

    (26) lCerrada -> DO lCerrada WHILE ( . valores ) ;
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (92) reg -> . { campos }
    (100) ternario -> . ternarioMat
    (101) ternario -> . ternarioBool
    (102) ternario -> . ( ternarioMat )
    (103) ternario -> . ( ternarioBool )
    (104) ternario -> . ternarioVars
    (105) ternario -> . ( ternarioVars )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    ?               reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 382
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 247

    (25) lCerrada -> DO { g } . WHILE ( valores ) ;

    WHILE           shift and go to state 383


state 248

    (51) funcBool -> COLINEALES ( valores , . valores )
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (92) reg -> . { campos }
    (100) ternario -> . ternarioMat
    (101) ternario -> . ternarioBool
    (102) ternario -> . ( ternarioMat )
    (103) ternario -> . ( ternarioBool )
    (104) ternario -> . ternarioVars
    (105) ternario -> . ( ternarioVars )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    ?               reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 384
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 249

    (33) loop -> WHILE ( valores ) .

    {               reduce using rule 33 (loop -> WHILE ( valores ) .)
    COMMENT         reduce using rule 33 (loop -> WHILE ( valores ) .)
    IF              reduce using rule 33 (loop -> WHILE ( valores ) .)
    DO              reduce using rule 33 (loop -> WHILE ( valores ) .)
    RETURN          reduce using rule 33 (loop -> WHILE ( valores ) .)
    ;               reduce using rule 33 (loop -> WHILE ( valores ) .)
    WHILE           reduce using rule 33 (loop -> WHILE ( valores ) .)
    FOR             reduce using rule 33 (loop -> WHILE ( valores ) .)
    MENOSMENOS      reduce using rule 33 (loop -> WHILE ( valores ) .)
    MASMAS          reduce using rule 33 (loop -> WHILE ( valores ) .)
    ID              reduce using rule 33 (loop -> WHILE ( valores ) .)
    PRINT           reduce using rule 33 (loop -> WHILE ( valores ) .)
    MULTIESCALAR    reduce using rule 33 (loop -> WHILE ( valores ) .)
    LENGTH          reduce using rule 33 (loop -> WHILE ( valores ) .)
    CAPITALIZAR     reduce using rule 33 (loop -> WHILE ( valores ) .)
    COLINEALES      reduce using rule 33 (loop -> WHILE ( valores ) .)
    [               reduce using rule 33 (loop -> WHILE ( valores ) .)


state 250

    (52) funcVoid -> PRINT ( valores ) .

    ;               reduce using rule 52 (funcVoid -> PRINT ( valores ) .)
    )               reduce using rule 52 (funcVoid -> PRINT ( valores ) .)


state 251

    (142) varYVals -> vecVal . . varYVals
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (56) vec -> . [ elem ]

    ID              shift and go to state 128
    [               shift and go to state 20

    varYVals                       shift and go to state 385
    vecVal                         shift and go to state 126
    vec                            shift and go to state 33

state 252

    (61) vecVal -> vecVal [ expresion ] .

    .               reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    [               reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    ?               reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    OR              reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    AND             reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    +               reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    -               reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    *               reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    /               reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    %               reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    ^               reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    EQEQ            reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    DISTINTO        reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    >               reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    <               reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    MASMAS          reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    MENOSMENOS      reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    ;               reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    )               reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    :               reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    MULEQ           reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    DIVEQ           reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    MASEQ           reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    MENOSEQ         reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    =               reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    ,               reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    ]               reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    }               reduce using rule 61 (vecVal -> vecVal [ expresion ] .)


state 253

    (64) vecVal -> vecVal [ INT ] .

    .               reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    [               reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    ?               reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    OR              reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    AND             reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    +               reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    -               reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    *               reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    /               reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    %               reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    ^               reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    EQEQ            reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    DISTINTO        reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    >               reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    <               reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    MASMAS          reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    MENOSMENOS      reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    ;               reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    )               reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    :               reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    MULEQ           reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    DIVEQ           reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    MASEQ           reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    MENOSEQ         reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    =               reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    ,               reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    ]               reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    }               reduce using rule 64 (vecVal -> vecVal [ INT ] .)


state 254

    (34) loop -> FOR ( primParam ; . valores ; tercerParam )
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (92) reg -> . { campos }
    (100) ternario -> . ternarioMat
    (101) ternario -> . ternarioBool
    (102) ternario -> . ( ternarioMat )
    (103) ternario -> . ( ternarioBool )
    (104) ternario -> . ternarioVars
    (105) ternario -> . ( ternarioVars )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    ?               reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 386
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 255

    (49) funcInt -> LENGTH ( valores ) .

    )               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    ;               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    ,               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    ]               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    :               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    }               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    +               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    -               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    *               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    /               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    %               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    ^               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    EQEQ            reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    DISTINTO        reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    >               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    <               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    AND             reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    OR              reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    ?               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)


state 256

    (210) and -> and AND eq .
    (215) eq -> eq . EQEQ mayor
    (216) eq -> eq . DISTINTO mayor
    (219) eq -> eq . EQEQ tCompareEQ
    (220) eq -> eq . DISTINTO tCompareEQ

    AND             reduce using rule 210 (and -> and AND eq .)
    OR              reduce using rule 210 (and -> and AND eq .)
    )               reduce using rule 210 (and -> and AND eq .)
    ?               reduce using rule 210 (and -> and AND eq .)
    :               reduce using rule 210 (and -> and AND eq .)
    ,               reduce using rule 210 (and -> and AND eq .)
    ]               reduce using rule 210 (and -> and AND eq .)
    ;               reduce using rule 210 (and -> and AND eq .)
    }               reduce using rule 210 (and -> and AND eq .)
    EQEQ            shift and go to state 162
    DISTINTO        shift and go to state 163


state 257

    (212) and -> and AND valoresBool .

    AND             reduce using rule 212 (and -> and AND valoresBool .)
    OR              reduce using rule 212 (and -> and AND valoresBool .)
    )               reduce using rule 212 (and -> and AND valoresBool .)
    ?               reduce using rule 212 (and -> and AND valoresBool .)
    :               reduce using rule 212 (and -> and AND valoresBool .)
    ,               reduce using rule 212 (and -> and AND valoresBool .)
    ]               reduce using rule 212 (and -> and AND valoresBool .)
    ;               reduce using rule 212 (and -> and AND valoresBool .)
    }               reduce using rule 212 (and -> and AND valoresBool .)


state 258

    (57) elem -> valores , elem .

    ]               reduce using rule 57 (elem -> valores , elem .)


state 259

    (185) p -> valoresMat % valoresMat .
    (188) exp -> valoresMat . ^ iSing
    (190) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 185 (p -> valoresMat % valoresMat .)
    /               reduce using rule 185 (p -> valoresMat % valoresMat .)
    %               reduce using rule 185 (p -> valoresMat % valoresMat .)
    +               reduce using rule 185 (p -> valoresMat % valoresMat .)
    -               reduce using rule 185 (p -> valoresMat % valoresMat .)
    :               reduce using rule 185 (p -> valoresMat % valoresMat .)
    EQEQ            reduce using rule 185 (p -> valoresMat % valoresMat .)
    DISTINTO        reduce using rule 185 (p -> valoresMat % valoresMat .)
    >               reduce using rule 185 (p -> valoresMat % valoresMat .)
    <               reduce using rule 185 (p -> valoresMat % valoresMat .)
    ,               reduce using rule 185 (p -> valoresMat % valoresMat .)
    ]               reduce using rule 185 (p -> valoresMat % valoresMat .)
    )               reduce using rule 185 (p -> valoresMat % valoresMat .)
    ;               reduce using rule 185 (p -> valoresMat % valoresMat .)
    }               reduce using rule 185 (p -> valoresMat % valoresMat .)
    AND             reduce using rule 185 (p -> valoresMat % valoresMat .)
    OR              reduce using rule 185 (p -> valoresMat % valoresMat .)
    ?               reduce using rule 185 (p -> valoresMat % valoresMat .)
    ^               shift and go to state 161


state 260

    (164) valoresMat -> ( . ternarioMat )
    (197) paren -> ( . eMat )
    (198) paren -> ( . valoresMat )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (51) funcBool -> . COLINEALES ( valores , valores )
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (56) vec -> . [ elem ]
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 177
    BOOL            shift and go to state 187
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    valoresBool                    shift and go to state 329
    ternarioMat                    shift and go to state 331
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    expBool                        shift and go to state 332
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 261

    (179) p -> valoresMat % exp .
    (187) exp -> exp . ^ iSing
    (189) exp -> exp . ^ valoresMat

    *               reduce using rule 179 (p -> valoresMat % exp .)
    /               reduce using rule 179 (p -> valoresMat % exp .)
    %               reduce using rule 179 (p -> valoresMat % exp .)
    +               reduce using rule 179 (p -> valoresMat % exp .)
    -               reduce using rule 179 (p -> valoresMat % exp .)
    :               reduce using rule 179 (p -> valoresMat % exp .)
    EQEQ            reduce using rule 179 (p -> valoresMat % exp .)
    DISTINTO        reduce using rule 179 (p -> valoresMat % exp .)
    >               reduce using rule 179 (p -> valoresMat % exp .)
    <               reduce using rule 179 (p -> valoresMat % exp .)
    ,               reduce using rule 179 (p -> valoresMat % exp .)
    ]               reduce using rule 179 (p -> valoresMat % exp .)
    )               reduce using rule 179 (p -> valoresMat % exp .)
    ;               reduce using rule 179 (p -> valoresMat % exp .)
    }               reduce using rule 179 (p -> valoresMat % exp .)
    AND             reduce using rule 179 (p -> valoresMat % exp .)
    OR              reduce using rule 179 (p -> valoresMat % exp .)
    ?               reduce using rule 179 (p -> valoresMat % exp .)
    ^               shift and go to state 220


state 262

    (168) eMat -> valoresMat + valoresMat .
    (177) p -> valoresMat . * exp
    (178) p -> valoresMat . / exp
    (179) p -> valoresMat . % exp
    (183) p -> valoresMat . * valoresMat
    (184) p -> valoresMat . / valoresMat
    (185) p -> valoresMat . % valoresMat
    (188) exp -> valoresMat . ^ iSing
    (190) exp -> valoresMat . ^ valoresMat

    +               reduce using rule 168 (eMat -> valoresMat + valoresMat .)
    -               reduce using rule 168 (eMat -> valoresMat + valoresMat .)
    ,               reduce using rule 168 (eMat -> valoresMat + valoresMat .)
    ]               reduce using rule 168 (eMat -> valoresMat + valoresMat .)
    )               reduce using rule 168 (eMat -> valoresMat + valoresMat .)
    ;               reduce using rule 168 (eMat -> valoresMat + valoresMat .)
    :               reduce using rule 168 (eMat -> valoresMat + valoresMat .)
    }               reduce using rule 168 (eMat -> valoresMat + valoresMat .)
    EQEQ            reduce using rule 168 (eMat -> valoresMat + valoresMat .)
    DISTINTO        reduce using rule 168 (eMat -> valoresMat + valoresMat .)
    >               reduce using rule 168 (eMat -> valoresMat + valoresMat .)
    <               reduce using rule 168 (eMat -> valoresMat + valoresMat .)
    AND             reduce using rule 168 (eMat -> valoresMat + valoresMat .)
    OR              reduce using rule 168 (eMat -> valoresMat + valoresMat .)
    ?               reduce using rule 168 (eMat -> valoresMat + valoresMat .)
    *               shift and go to state 158
    /               shift and go to state 160
    %               shift and go to state 156
    ^               shift and go to state 161


state 263

    (166) eMat -> valoresMat + p .
    (174) p -> p . * exp
    (175) p -> p . / exp
    (176) p -> p . % exp
    (180) p -> p . * valoresMat
    (181) p -> p . / valoresMat
    (182) p -> p . % valoresMat

    +               reduce using rule 166 (eMat -> valoresMat + p .)
    -               reduce using rule 166 (eMat -> valoresMat + p .)
    ,               reduce using rule 166 (eMat -> valoresMat + p .)
    ]               reduce using rule 166 (eMat -> valoresMat + p .)
    )               reduce using rule 166 (eMat -> valoresMat + p .)
    ;               reduce using rule 166 (eMat -> valoresMat + p .)
    :               reduce using rule 166 (eMat -> valoresMat + p .)
    }               reduce using rule 166 (eMat -> valoresMat + p .)
    EQEQ            reduce using rule 166 (eMat -> valoresMat + p .)
    DISTINTO        reduce using rule 166 (eMat -> valoresMat + p .)
    >               reduce using rule 166 (eMat -> valoresMat + p .)
    <               reduce using rule 166 (eMat -> valoresMat + p .)
    AND             reduce using rule 166 (eMat -> valoresMat + p .)
    OR              reduce using rule 166 (eMat -> valoresMat + p .)
    ?               reduce using rule 166 (eMat -> valoresMat + p .)
    *               shift and go to state 210
    /               shift and go to state 211
    %               shift and go to state 209


state 264

    (183) p -> valoresMat * valoresMat .
    (188) exp -> valoresMat . ^ iSing
    (190) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 183 (p -> valoresMat * valoresMat .)
    /               reduce using rule 183 (p -> valoresMat * valoresMat .)
    %               reduce using rule 183 (p -> valoresMat * valoresMat .)
    +               reduce using rule 183 (p -> valoresMat * valoresMat .)
    -               reduce using rule 183 (p -> valoresMat * valoresMat .)
    :               reduce using rule 183 (p -> valoresMat * valoresMat .)
    EQEQ            reduce using rule 183 (p -> valoresMat * valoresMat .)
    DISTINTO        reduce using rule 183 (p -> valoresMat * valoresMat .)
    >               reduce using rule 183 (p -> valoresMat * valoresMat .)
    <               reduce using rule 183 (p -> valoresMat * valoresMat .)
    ,               reduce using rule 183 (p -> valoresMat * valoresMat .)
    ]               reduce using rule 183 (p -> valoresMat * valoresMat .)
    )               reduce using rule 183 (p -> valoresMat * valoresMat .)
    ;               reduce using rule 183 (p -> valoresMat * valoresMat .)
    }               reduce using rule 183 (p -> valoresMat * valoresMat .)
    AND             reduce using rule 183 (p -> valoresMat * valoresMat .)
    OR              reduce using rule 183 (p -> valoresMat * valoresMat .)
    ?               reduce using rule 183 (p -> valoresMat * valoresMat .)
    ^               shift and go to state 161


state 265

    (177) p -> valoresMat * exp .
    (187) exp -> exp . ^ iSing
    (189) exp -> exp . ^ valoresMat

    *               reduce using rule 177 (p -> valoresMat * exp .)
    /               reduce using rule 177 (p -> valoresMat * exp .)
    %               reduce using rule 177 (p -> valoresMat * exp .)
    +               reduce using rule 177 (p -> valoresMat * exp .)
    -               reduce using rule 177 (p -> valoresMat * exp .)
    :               reduce using rule 177 (p -> valoresMat * exp .)
    EQEQ            reduce using rule 177 (p -> valoresMat * exp .)
    DISTINTO        reduce using rule 177 (p -> valoresMat * exp .)
    >               reduce using rule 177 (p -> valoresMat * exp .)
    <               reduce using rule 177 (p -> valoresMat * exp .)
    ,               reduce using rule 177 (p -> valoresMat * exp .)
    ]               reduce using rule 177 (p -> valoresMat * exp .)
    )               reduce using rule 177 (p -> valoresMat * exp .)
    ;               reduce using rule 177 (p -> valoresMat * exp .)
    }               reduce using rule 177 (p -> valoresMat * exp .)
    AND             reduce using rule 177 (p -> valoresMat * exp .)
    OR              reduce using rule 177 (p -> valoresMat * exp .)
    ?               reduce using rule 177 (p -> valoresMat * exp .)
    ^               shift and go to state 220


state 266

    (173) eMat -> valoresMat - valoresMat .
    (177) p -> valoresMat . * exp
    (178) p -> valoresMat . / exp
    (179) p -> valoresMat . % exp
    (183) p -> valoresMat . * valoresMat
    (184) p -> valoresMat . / valoresMat
    (185) p -> valoresMat . % valoresMat
    (188) exp -> valoresMat . ^ iSing
    (190) exp -> valoresMat . ^ valoresMat

    +               reduce using rule 173 (eMat -> valoresMat - valoresMat .)
    -               reduce using rule 173 (eMat -> valoresMat - valoresMat .)
    ,               reduce using rule 173 (eMat -> valoresMat - valoresMat .)
    ]               reduce using rule 173 (eMat -> valoresMat - valoresMat .)
    )               reduce using rule 173 (eMat -> valoresMat - valoresMat .)
    ;               reduce using rule 173 (eMat -> valoresMat - valoresMat .)
    :               reduce using rule 173 (eMat -> valoresMat - valoresMat .)
    }               reduce using rule 173 (eMat -> valoresMat - valoresMat .)
    EQEQ            reduce using rule 173 (eMat -> valoresMat - valoresMat .)
    DISTINTO        reduce using rule 173 (eMat -> valoresMat - valoresMat .)
    >               reduce using rule 173 (eMat -> valoresMat - valoresMat .)
    <               reduce using rule 173 (eMat -> valoresMat - valoresMat .)
    AND             reduce using rule 173 (eMat -> valoresMat - valoresMat .)
    OR              reduce using rule 173 (eMat -> valoresMat - valoresMat .)
    ?               reduce using rule 173 (eMat -> valoresMat - valoresMat .)
    *               shift and go to state 158
    /               shift and go to state 160
    %               shift and go to state 156
    ^               shift and go to state 161


state 267

    (171) eMat -> valoresMat - p .
    (174) p -> p . * exp
    (175) p -> p . / exp
    (176) p -> p . % exp
    (180) p -> p . * valoresMat
    (181) p -> p . / valoresMat
    (182) p -> p . % valoresMat

    +               reduce using rule 171 (eMat -> valoresMat - p .)
    -               reduce using rule 171 (eMat -> valoresMat - p .)
    ,               reduce using rule 171 (eMat -> valoresMat - p .)
    ]               reduce using rule 171 (eMat -> valoresMat - p .)
    )               reduce using rule 171 (eMat -> valoresMat - p .)
    ;               reduce using rule 171 (eMat -> valoresMat - p .)
    :               reduce using rule 171 (eMat -> valoresMat - p .)
    }               reduce using rule 171 (eMat -> valoresMat - p .)
    EQEQ            reduce using rule 171 (eMat -> valoresMat - p .)
    DISTINTO        reduce using rule 171 (eMat -> valoresMat - p .)
    >               reduce using rule 171 (eMat -> valoresMat - p .)
    <               reduce using rule 171 (eMat -> valoresMat - p .)
    AND             reduce using rule 171 (eMat -> valoresMat - p .)
    OR              reduce using rule 171 (eMat -> valoresMat - p .)
    ?               reduce using rule 171 (eMat -> valoresMat - p .)
    *               shift and go to state 210
    /               shift and go to state 211
    %               shift and go to state 209


state 268

    (184) p -> valoresMat / valoresMat .
    (188) exp -> valoresMat . ^ iSing
    (190) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 184 (p -> valoresMat / valoresMat .)
    /               reduce using rule 184 (p -> valoresMat / valoresMat .)
    %               reduce using rule 184 (p -> valoresMat / valoresMat .)
    +               reduce using rule 184 (p -> valoresMat / valoresMat .)
    -               reduce using rule 184 (p -> valoresMat / valoresMat .)
    :               reduce using rule 184 (p -> valoresMat / valoresMat .)
    EQEQ            reduce using rule 184 (p -> valoresMat / valoresMat .)
    DISTINTO        reduce using rule 184 (p -> valoresMat / valoresMat .)
    >               reduce using rule 184 (p -> valoresMat / valoresMat .)
    <               reduce using rule 184 (p -> valoresMat / valoresMat .)
    ,               reduce using rule 184 (p -> valoresMat / valoresMat .)
    ]               reduce using rule 184 (p -> valoresMat / valoresMat .)
    )               reduce using rule 184 (p -> valoresMat / valoresMat .)
    ;               reduce using rule 184 (p -> valoresMat / valoresMat .)
    }               reduce using rule 184 (p -> valoresMat / valoresMat .)
    AND             reduce using rule 184 (p -> valoresMat / valoresMat .)
    OR              reduce using rule 184 (p -> valoresMat / valoresMat .)
    ?               reduce using rule 184 (p -> valoresMat / valoresMat .)
    ^               shift and go to state 161


state 269

    (178) p -> valoresMat / exp .
    (187) exp -> exp . ^ iSing
    (189) exp -> exp . ^ valoresMat

    *               reduce using rule 178 (p -> valoresMat / exp .)
    /               reduce using rule 178 (p -> valoresMat / exp .)
    %               reduce using rule 178 (p -> valoresMat / exp .)
    +               reduce using rule 178 (p -> valoresMat / exp .)
    -               reduce using rule 178 (p -> valoresMat / exp .)
    :               reduce using rule 178 (p -> valoresMat / exp .)
    EQEQ            reduce using rule 178 (p -> valoresMat / exp .)
    DISTINTO        reduce using rule 178 (p -> valoresMat / exp .)
    >               reduce using rule 178 (p -> valoresMat / exp .)
    <               reduce using rule 178 (p -> valoresMat / exp .)
    ,               reduce using rule 178 (p -> valoresMat / exp .)
    ]               reduce using rule 178 (p -> valoresMat / exp .)
    )               reduce using rule 178 (p -> valoresMat / exp .)
    ;               reduce using rule 178 (p -> valoresMat / exp .)
    }               reduce using rule 178 (p -> valoresMat / exp .)
    AND             reduce using rule 178 (p -> valoresMat / exp .)
    OR              reduce using rule 178 (p -> valoresMat / exp .)
    ?               reduce using rule 178 (p -> valoresMat / exp .)
    ^               shift and go to state 220


state 270

    (190) exp -> valoresMat ^ valoresMat .

    ^               reduce using rule 190 (exp -> valoresMat ^ valoresMat .)
    *               reduce using rule 190 (exp -> valoresMat ^ valoresMat .)
    /               reduce using rule 190 (exp -> valoresMat ^ valoresMat .)
    %               reduce using rule 190 (exp -> valoresMat ^ valoresMat .)
    +               reduce using rule 190 (exp -> valoresMat ^ valoresMat .)
    -               reduce using rule 190 (exp -> valoresMat ^ valoresMat .)
    ,               reduce using rule 190 (exp -> valoresMat ^ valoresMat .)
    }               reduce using rule 190 (exp -> valoresMat ^ valoresMat .)
    EQEQ            reduce using rule 190 (exp -> valoresMat ^ valoresMat .)
    DISTINTO        reduce using rule 190 (exp -> valoresMat ^ valoresMat .)
    >               reduce using rule 190 (exp -> valoresMat ^ valoresMat .)
    <               reduce using rule 190 (exp -> valoresMat ^ valoresMat .)
    :               reduce using rule 190 (exp -> valoresMat ^ valoresMat .)
    )               reduce using rule 190 (exp -> valoresMat ^ valoresMat .)
    ]               reduce using rule 190 (exp -> valoresMat ^ valoresMat .)
    ;               reduce using rule 190 (exp -> valoresMat ^ valoresMat .)
    AND             reduce using rule 190 (exp -> valoresMat ^ valoresMat .)
    OR              reduce using rule 190 (exp -> valoresMat ^ valoresMat .)
    ?               reduce using rule 190 (exp -> valoresMat ^ valoresMat .)


state 271

    (188) exp -> valoresMat ^ iSing .

    ^               reduce using rule 188 (exp -> valoresMat ^ iSing .)
    *               reduce using rule 188 (exp -> valoresMat ^ iSing .)
    /               reduce using rule 188 (exp -> valoresMat ^ iSing .)
    %               reduce using rule 188 (exp -> valoresMat ^ iSing .)
    +               reduce using rule 188 (exp -> valoresMat ^ iSing .)
    -               reduce using rule 188 (exp -> valoresMat ^ iSing .)
    ,               reduce using rule 188 (exp -> valoresMat ^ iSing .)
    }               reduce using rule 188 (exp -> valoresMat ^ iSing .)
    EQEQ            reduce using rule 188 (exp -> valoresMat ^ iSing .)
    DISTINTO        reduce using rule 188 (exp -> valoresMat ^ iSing .)
    >               reduce using rule 188 (exp -> valoresMat ^ iSing .)
    <               reduce using rule 188 (exp -> valoresMat ^ iSing .)
    :               reduce using rule 188 (exp -> valoresMat ^ iSing .)
    )               reduce using rule 188 (exp -> valoresMat ^ iSing .)
    ]               reduce using rule 188 (exp -> valoresMat ^ iSing .)
    ;               reduce using rule 188 (exp -> valoresMat ^ iSing .)
    AND             reduce using rule 188 (exp -> valoresMat ^ iSing .)
    OR              reduce using rule 188 (exp -> valoresMat ^ iSing .)
    ?               reduce using rule 188 (exp -> valoresMat ^ iSing .)


state 272

    (225) tCompareEQ -> funcBool .

    EQEQ            reduce using rule 225 (tCompareEQ -> funcBool .)
    DISTINTO        reduce using rule 225 (tCompareEQ -> funcBool .)
    AND             reduce using rule 225 (tCompareEQ -> funcBool .)
    OR              reduce using rule 225 (tCompareEQ -> funcBool .)
    ?               reduce using rule 225 (tCompareEQ -> funcBool .)
    ,               reduce using rule 225 (tCompareEQ -> funcBool .)
    ]               reduce using rule 225 (tCompareEQ -> funcBool .)
    )               reduce using rule 225 (tCompareEQ -> funcBool .)
    ;               reduce using rule 225 (tCompareEQ -> funcBool .)
    :               reduce using rule 225 (tCompareEQ -> funcBool .)
    }               reduce using rule 225 (tCompareEQ -> funcBool .)


state 273

    (215) eq -> eq EQEQ mayor .

    EQEQ            reduce using rule 215 (eq -> eq EQEQ mayor .)
    DISTINTO        reduce using rule 215 (eq -> eq EQEQ mayor .)
    AND             reduce using rule 215 (eq -> eq EQEQ mayor .)
    ?               reduce using rule 215 (eq -> eq EQEQ mayor .)
    OR              reduce using rule 215 (eq -> eq EQEQ mayor .)
    :               reduce using rule 215 (eq -> eq EQEQ mayor .)
    )               reduce using rule 215 (eq -> eq EQEQ mayor .)
    ,               reduce using rule 215 (eq -> eq EQEQ mayor .)
    ]               reduce using rule 215 (eq -> eq EQEQ mayor .)
    ;               reduce using rule 215 (eq -> eq EQEQ mayor .)
    }               reduce using rule 215 (eq -> eq EQEQ mayor .)


state 274

    (231) tCompareEQ -> eMat .
    (234) tCompare -> eMat .
    (165) eMat -> eMat . + p
    (167) eMat -> eMat . + valoresMat
    (170) eMat -> eMat . - p
    (172) eMat -> eMat . - valoresMat

    EQEQ            reduce using rule 231 (tCompareEQ -> eMat .)
    DISTINTO        reduce using rule 231 (tCompareEQ -> eMat .)
    AND             reduce using rule 231 (tCompareEQ -> eMat .)
    OR              reduce using rule 231 (tCompareEQ -> eMat .)
    ?               reduce using rule 231 (tCompareEQ -> eMat .)
    ,               reduce using rule 231 (tCompareEQ -> eMat .)
    ]               reduce using rule 231 (tCompareEQ -> eMat .)
    )               reduce using rule 231 (tCompareEQ -> eMat .)
    ;               reduce using rule 231 (tCompareEQ -> eMat .)
    :               reduce using rule 231 (tCompareEQ -> eMat .)
    }               reduce using rule 231 (tCompareEQ -> eMat .)
    >               reduce using rule 234 (tCompare -> eMat .)
    <               reduce using rule 234 (tCompare -> eMat .)
    +               shift and go to state 168
    -               shift and go to state 169


state 275

    (232) tCompareEQ -> ( . ternarioBool )
    (233) tCompareEQ -> ( . ternarioMat )
    (240) tCompare -> ( . ternarioMat )
    (164) valoresMat -> ( . ternarioMat )
    (248) parenBool -> ( . expBool )
    (197) paren -> ( . eMat )
    (198) paren -> ( . valoresMat )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (51) funcBool -> . COLINEALES ( valores , valores )
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (56) vec -> . [ elem ]
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 370
    BOOL            shift and go to state 187
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 369
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 371
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 387
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    expBool                        shift and go to state 372
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 276

    (219) eq -> eq EQEQ tCompareEQ .

    EQEQ            reduce using rule 219 (eq -> eq EQEQ tCompareEQ .)
    DISTINTO        reduce using rule 219 (eq -> eq EQEQ tCompareEQ .)
    AND             reduce using rule 219 (eq -> eq EQEQ tCompareEQ .)
    ?               reduce using rule 219 (eq -> eq EQEQ tCompareEQ .)
    OR              reduce using rule 219 (eq -> eq EQEQ tCompareEQ .)
    :               reduce using rule 219 (eq -> eq EQEQ tCompareEQ .)
    )               reduce using rule 219 (eq -> eq EQEQ tCompareEQ .)
    ,               reduce using rule 219 (eq -> eq EQEQ tCompareEQ .)
    ]               reduce using rule 219 (eq -> eq EQEQ tCompareEQ .)
    ;               reduce using rule 219 (eq -> eq EQEQ tCompareEQ .)
    }               reduce using rule 219 (eq -> eq EQEQ tCompareEQ .)


state 277

    (224) tCompareEQ -> BOOL .

    EQEQ            reduce using rule 224 (tCompareEQ -> BOOL .)
    DISTINTO        reduce using rule 224 (tCompareEQ -> BOOL .)
    AND             reduce using rule 224 (tCompareEQ -> BOOL .)
    OR              reduce using rule 224 (tCompareEQ -> BOOL .)
    ?               reduce using rule 224 (tCompareEQ -> BOOL .)
    ,               reduce using rule 224 (tCompareEQ -> BOOL .)
    ]               reduce using rule 224 (tCompareEQ -> BOOL .)
    )               reduce using rule 224 (tCompareEQ -> BOOL .)
    ;               reduce using rule 224 (tCompareEQ -> BOOL .)
    :               reduce using rule 224 (tCompareEQ -> BOOL .)
    }               reduce using rule 224 (tCompareEQ -> BOOL .)


state 278

    (227) tCompareEQ -> varsOps .
    (235) tCompare -> varsOps .
    (163) valoresMat -> varsOps .

    EQEQ            reduce using rule 227 (tCompareEQ -> varsOps .)
    DISTINTO        reduce using rule 227 (tCompareEQ -> varsOps .)
    AND             reduce using rule 227 (tCompareEQ -> varsOps .)
    OR              reduce using rule 227 (tCompareEQ -> varsOps .)
    ?               reduce using rule 227 (tCompareEQ -> varsOps .)
    ,               reduce using rule 227 (tCompareEQ -> varsOps .)
    ]               reduce using rule 227 (tCompareEQ -> varsOps .)
    )               reduce using rule 227 (tCompareEQ -> varsOps .)
    ;               reduce using rule 227 (tCompareEQ -> varsOps .)
    :               reduce using rule 227 (tCompareEQ -> varsOps .)
    }               reduce using rule 227 (tCompareEQ -> varsOps .)
    >               reduce using rule 235 (tCompare -> varsOps .)
    <               reduce using rule 235 (tCompare -> varsOps .)
    +               reduce using rule 163 (valoresMat -> varsOps .)
    -               reduce using rule 163 (valoresMat -> varsOps .)
    *               reduce using rule 163 (valoresMat -> varsOps .)
    /               reduce using rule 163 (valoresMat -> varsOps .)
    %               reduce using rule 163 (valoresMat -> varsOps .)
    ^               reduce using rule 163 (valoresMat -> varsOps .)


state 279

    (226) tCompareEQ -> varYVals .
    (236) tCompare -> varYVals .
    (162) valoresMat -> varYVals .

    EQEQ            reduce using rule 226 (tCompareEQ -> varYVals .)
    DISTINTO        reduce using rule 226 (tCompareEQ -> varYVals .)
    AND             reduce using rule 226 (tCompareEQ -> varYVals .)
    OR              reduce using rule 226 (tCompareEQ -> varYVals .)
    ?               reduce using rule 226 (tCompareEQ -> varYVals .)
    ,               reduce using rule 226 (tCompareEQ -> varYVals .)
    ]               reduce using rule 226 (tCompareEQ -> varYVals .)
    )               reduce using rule 226 (tCompareEQ -> varYVals .)
    ;               reduce using rule 226 (tCompareEQ -> varYVals .)
    :               reduce using rule 226 (tCompareEQ -> varYVals .)
    }               reduce using rule 226 (tCompareEQ -> varYVals .)
    >               reduce using rule 236 (tCompare -> varYVals .)
    <               reduce using rule 236 (tCompare -> varYVals .)
    +               reduce using rule 162 (valoresMat -> varYVals .)
    -               reduce using rule 162 (valoresMat -> varYVals .)
    *               reduce using rule 162 (valoresMat -> varYVals .)
    /               reduce using rule 162 (valoresMat -> varYVals .)
    %               reduce using rule 162 (valoresMat -> varYVals .)
    ^               reduce using rule 162 (valoresMat -> varYVals .)


state 280

    (216) eq -> eq DISTINTO mayor .

    EQEQ            reduce using rule 216 (eq -> eq DISTINTO mayor .)
    DISTINTO        reduce using rule 216 (eq -> eq DISTINTO mayor .)
    AND             reduce using rule 216 (eq -> eq DISTINTO mayor .)
    ?               reduce using rule 216 (eq -> eq DISTINTO mayor .)
    OR              reduce using rule 216 (eq -> eq DISTINTO mayor .)
    :               reduce using rule 216 (eq -> eq DISTINTO mayor .)
    )               reduce using rule 216 (eq -> eq DISTINTO mayor .)
    ,               reduce using rule 216 (eq -> eq DISTINTO mayor .)
    ]               reduce using rule 216 (eq -> eq DISTINTO mayor .)
    ;               reduce using rule 216 (eq -> eq DISTINTO mayor .)
    }               reduce using rule 216 (eq -> eq DISTINTO mayor .)


state 281

    (220) eq -> eq DISTINTO tCompareEQ .

    EQEQ            reduce using rule 220 (eq -> eq DISTINTO tCompareEQ .)
    DISTINTO        reduce using rule 220 (eq -> eq DISTINTO tCompareEQ .)
    AND             reduce using rule 220 (eq -> eq DISTINTO tCompareEQ .)
    ?               reduce using rule 220 (eq -> eq DISTINTO tCompareEQ .)
    OR              reduce using rule 220 (eq -> eq DISTINTO tCompareEQ .)
    :               reduce using rule 220 (eq -> eq DISTINTO tCompareEQ .)
    )               reduce using rule 220 (eq -> eq DISTINTO tCompareEQ .)
    ,               reduce using rule 220 (eq -> eq DISTINTO tCompareEQ .)
    ]               reduce using rule 220 (eq -> eq DISTINTO tCompareEQ .)
    ;               reduce using rule 220 (eq -> eq DISTINTO tCompareEQ .)
    }               reduce using rule 220 (eq -> eq DISTINTO tCompareEQ .)


state 282

    (142) varYVals -> vecVal . varYVals .
    (149) variable -> vecVal . varYVals .

    ?               reduce using rule 142 (varYVals -> vecVal . varYVals .)
    OR              reduce using rule 142 (varYVals -> vecVal . varYVals .)
    AND             reduce using rule 142 (varYVals -> vecVal . varYVals .)
    +               reduce using rule 142 (varYVals -> vecVal . varYVals .)
    -               reduce using rule 142 (varYVals -> vecVal . varYVals .)
    *               reduce using rule 142 (varYVals -> vecVal . varYVals .)
    /               reduce using rule 142 (varYVals -> vecVal . varYVals .)
    %               reduce using rule 142 (varYVals -> vecVal . varYVals .)
    ^               reduce using rule 142 (varYVals -> vecVal . varYVals .)
    EQEQ            reduce using rule 142 (varYVals -> vecVal . varYVals .)
    DISTINTO        reduce using rule 142 (varYVals -> vecVal . varYVals .)
    >               reduce using rule 142 (varYVals -> vecVal . varYVals .)
    <               reduce using rule 142 (varYVals -> vecVal . varYVals .)
    )               reduce using rule 142 (varYVals -> vecVal . varYVals .)
    ,               reduce using rule 142 (varYVals -> vecVal . varYVals .)
    ]               reduce using rule 142 (varYVals -> vecVal . varYVals .)
    ;               reduce using rule 142 (varYVals -> vecVal . varYVals .)
    :               reduce using rule 142 (varYVals -> vecVal . varYVals .)
    }               reduce using rule 142 (varYVals -> vecVal . varYVals .)
    MASMAS          reduce using rule 149 (variable -> vecVal . varYVals .)
    MENOSMENOS      reduce using rule 149 (variable -> vecVal . varYVals .)


state 283

    (211) and -> valoresBool AND eq .
    (215) eq -> eq . EQEQ mayor
    (216) eq -> eq . DISTINTO mayor
    (219) eq -> eq . EQEQ tCompareEQ
    (220) eq -> eq . DISTINTO tCompareEQ

    AND             reduce using rule 211 (and -> valoresBool AND eq .)
    OR              reduce using rule 211 (and -> valoresBool AND eq .)
    )               reduce using rule 211 (and -> valoresBool AND eq .)
    ?               reduce using rule 211 (and -> valoresBool AND eq .)
    :               reduce using rule 211 (and -> valoresBool AND eq .)
    ,               reduce using rule 211 (and -> valoresBool AND eq .)
    ]               reduce using rule 211 (and -> valoresBool AND eq .)
    ;               reduce using rule 211 (and -> valoresBool AND eq .)
    }               reduce using rule 211 (and -> valoresBool AND eq .)
    EQEQ            shift and go to state 162
    DISTINTO        shift and go to state 163


state 284

    (213) and -> valoresBool AND valoresBool .

    AND             reduce using rule 213 (and -> valoresBool AND valoresBool .)
    OR              reduce using rule 213 (and -> valoresBool AND valoresBool .)
    )               reduce using rule 213 (and -> valoresBool AND valoresBool .)
    ?               reduce using rule 213 (and -> valoresBool AND valoresBool .)
    :               reduce using rule 213 (and -> valoresBool AND valoresBool .)
    ,               reduce using rule 213 (and -> valoresBool AND valoresBool .)
    ]               reduce using rule 213 (and -> valoresBool AND valoresBool .)
    ;               reduce using rule 213 (and -> valoresBool AND valoresBool .)
    }               reduce using rule 213 (and -> valoresBool AND valoresBool .)


state 285

    (206) expBool -> valoresBool OR and .
    (210) and -> and . AND eq
    (212) and -> and . AND valoresBool

    )               reduce using rule 206 (expBool -> valoresBool OR and .)
    ?               reduce using rule 206 (expBool -> valoresBool OR and .)
    OR              reduce using rule 206 (expBool -> valoresBool OR and .)
    ]               reduce using rule 206 (expBool -> valoresBool OR and .)
    ,               reduce using rule 206 (expBool -> valoresBool OR and .)
    ;               reduce using rule 206 (expBool -> valoresBool OR and .)
    :               reduce using rule 206 (expBool -> valoresBool OR and .)
    }               reduce using rule 206 (expBool -> valoresBool OR and .)
    AND             shift and go to state 154


state 286

    (208) expBool -> valoresBool OR valoresBool .
    (211) and -> valoresBool . AND eq
    (213) and -> valoresBool . AND valoresBool

    )               reduce using rule 208 (expBool -> valoresBool OR valoresBool .)
    ?               reduce using rule 208 (expBool -> valoresBool OR valoresBool .)
    OR              reduce using rule 208 (expBool -> valoresBool OR valoresBool .)
    ]               reduce using rule 208 (expBool -> valoresBool OR valoresBool .)
    ,               reduce using rule 208 (expBool -> valoresBool OR valoresBool .)
    ;               reduce using rule 208 (expBool -> valoresBool OR valoresBool .)
    :               reduce using rule 208 (expBool -> valoresBool OR valoresBool .)
    }               reduce using rule 208 (expBool -> valoresBool OR valoresBool .)
    AND             shift and go to state 165


state 287

    (136) valoresTernarioBool -> funcBool .
    (200) valoresBool -> funcBool .
    (225) tCompareEQ -> funcBool .

    ,               reduce using rule 136 (valoresTernarioBool -> funcBool .)
    ]               reduce using rule 136 (valoresTernarioBool -> funcBool .)
    )               reduce using rule 136 (valoresTernarioBool -> funcBool .)
    ;               reduce using rule 136 (valoresTernarioBool -> funcBool .)
    :               reduce using rule 136 (valoresTernarioBool -> funcBool .)
    }               reduce using rule 136 (valoresTernarioBool -> funcBool .)
    ?               reduce using rule 200 (valoresBool -> funcBool .)
    OR              reduce using rule 200 (valoresBool -> funcBool .)
    AND             reduce using rule 200 (valoresBool -> funcBool .)
    EQEQ            reduce using rule 225 (tCompareEQ -> funcBool .)
    DISTINTO        reduce using rule 225 (tCompareEQ -> funcBool .)


state 288

    (123) valoresTernarioVars -> RES .

    ,               reduce using rule 123 (valoresTernarioVars -> RES .)
    ]               reduce using rule 123 (valoresTernarioVars -> RES .)
    )               reduce using rule 123 (valoresTernarioVars -> RES .)
    ;               reduce using rule 123 (valoresTernarioVars -> RES .)
    :               reduce using rule 123 (valoresTernarioVars -> RES .)
    }               reduce using rule 123 (valoresTernarioVars -> RES .)


state 289

    (128) valoresTernarioMat -> funcInt .
    (158) valoresMat -> funcInt .
    (230) tCompareEQ -> funcInt .
    (238) tCompare -> funcInt .

    :               reduce using rule 128 (valoresTernarioMat -> funcInt .)
    ,               reduce using rule 128 (valoresTernarioMat -> funcInt .)
    ]               reduce using rule 128 (valoresTernarioMat -> funcInt .)
    )               reduce using rule 128 (valoresTernarioMat -> funcInt .)
    ;               reduce using rule 128 (valoresTernarioMat -> funcInt .)
    }               reduce using rule 128 (valoresTernarioMat -> funcInt .)
    +               reduce using rule 158 (valoresMat -> funcInt .)
    -               reduce using rule 158 (valoresMat -> funcInt .)
    *               reduce using rule 158 (valoresMat -> funcInt .)
    /               reduce using rule 158 (valoresMat -> funcInt .)
    %               reduce using rule 158 (valoresMat -> funcInt .)
    ^               reduce using rule 158 (valoresMat -> funcInt .)
    EQEQ            reduce using rule 230 (tCompareEQ -> funcInt .)
    DISTINTO        reduce using rule 230 (tCompareEQ -> funcInt .)
    >               reduce using rule 238 (tCompare -> funcInt .)
    <               reduce using rule 238 (tCompare -> funcInt .)


state 290

    (141) varYVals -> vecVal .
    (142) varYVals -> vecVal . . varYVals
    (148) variable -> vecVal .
    (149) variable -> vecVal . . varYVals
    (61) vecVal -> vecVal . [ expresion ]
    (64) vecVal -> vecVal . [ INT ]

    :               reduce using rule 141 (varYVals -> vecVal .)
    ?               reduce using rule 141 (varYVals -> vecVal .)
    OR              reduce using rule 141 (varYVals -> vecVal .)
    AND             reduce using rule 141 (varYVals -> vecVal .)
    +               reduce using rule 141 (varYVals -> vecVal .)
    -               reduce using rule 141 (varYVals -> vecVal .)
    *               reduce using rule 141 (varYVals -> vecVal .)
    /               reduce using rule 141 (varYVals -> vecVal .)
    %               reduce using rule 141 (varYVals -> vecVal .)
    ^               reduce using rule 141 (varYVals -> vecVal .)
    EQEQ            reduce using rule 141 (varYVals -> vecVal .)
    DISTINTO        reduce using rule 141 (varYVals -> vecVal .)
    >               reduce using rule 141 (varYVals -> vecVal .)
    <               reduce using rule 141 (varYVals -> vecVal .)
    ,               reduce using rule 141 (varYVals -> vecVal .)
    ]               reduce using rule 141 (varYVals -> vecVal .)
    )               reduce using rule 141 (varYVals -> vecVal .)
    ;               reduce using rule 141 (varYVals -> vecVal .)
    }               reduce using rule 141 (varYVals -> vecVal .)
    .               shift and go to state 164
    MASMAS          reduce using rule 148 (variable -> vecVal .)
    MENOSMENOS      reduce using rule 148 (variable -> vecVal .)
    [               shift and go to state 45


state 291

    (124) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (206) expBool -> valoresBool . OR and
    (208) expBool -> valoresBool . OR valoresBool
    (106) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (211) and -> valoresBool . AND eq
    (213) and -> valoresBool . AND valoresBool

    ?               shift and go to state 167
    OR              shift and go to state 166
    AND             shift and go to state 165


state 292

    (130) valoresTernarioMat -> eMat .
    (165) eMat -> eMat . + p
    (167) eMat -> eMat . + valoresMat
    (170) eMat -> eMat . - p
    (172) eMat -> eMat . - valoresMat
    (231) tCompareEQ -> eMat .
    (234) tCompare -> eMat .

    :               reduce using rule 130 (valoresTernarioMat -> eMat .)
    ,               reduce using rule 130 (valoresTernarioMat -> eMat .)
    ]               reduce using rule 130 (valoresTernarioMat -> eMat .)
    )               reduce using rule 130 (valoresTernarioMat -> eMat .)
    ;               reduce using rule 130 (valoresTernarioMat -> eMat .)
    }               reduce using rule 130 (valoresTernarioMat -> eMat .)
    +               shift and go to state 168
    -               shift and go to state 169
    EQEQ            reduce using rule 231 (tCompareEQ -> eMat .)
    DISTINTO        reduce using rule 231 (tCompareEQ -> eMat .)
    >               reduce using rule 234 (tCompare -> eMat .)
    <               reduce using rule 234 (tCompare -> eMat .)


state 293

    (133) ternarioBool -> valoresBool ? valoresTernarioBool . : valoresTernarioBool
    (110) ternarioVars -> valoresBool ? valoresTernarioBool . : valoresTernarioVars

    :               shift and go to state 388


state 294

    (95) atributos -> ID . . valoresCampos
    (140) varYVals -> ID .
    (147) variable -> ID .
    (59) vecVal -> ID . [ expresion ]
    (62) vecVal -> ID . [ INT ]

    .               shift and go to state 207
    :               reduce using rule 140 (varYVals -> ID .)
    ?               reduce using rule 140 (varYVals -> ID .)
    OR              reduce using rule 140 (varYVals -> ID .)
    AND             reduce using rule 140 (varYVals -> ID .)
    +               reduce using rule 140 (varYVals -> ID .)
    -               reduce using rule 140 (varYVals -> ID .)
    *               reduce using rule 140 (varYVals -> ID .)
    /               reduce using rule 140 (varYVals -> ID .)
    %               reduce using rule 140 (varYVals -> ID .)
    ^               reduce using rule 140 (varYVals -> ID .)
    EQEQ            reduce using rule 140 (varYVals -> ID .)
    DISTINTO        reduce using rule 140 (varYVals -> ID .)
    >               reduce using rule 140 (varYVals -> ID .)
    <               reduce using rule 140 (varYVals -> ID .)
    ,               reduce using rule 140 (varYVals -> ID .)
    ]               reduce using rule 140 (varYVals -> ID .)
    )               reduce using rule 140 (varYVals -> ID .)
    ;               reduce using rule 140 (varYVals -> ID .)
    }               reduce using rule 140 (varYVals -> ID .)
    MASMAS          reduce using rule 147 (variable -> ID .)
    MENOSMENOS      reduce using rule 147 (variable -> ID .)
    [               shift and go to state 105


state 295

    (131) valoresTernarioMat -> ternarioMat .

    :               reduce using rule 131 (valoresTernarioMat -> ternarioMat .)
    ,               reduce using rule 131 (valoresTernarioMat -> ternarioMat .)
    ]               reduce using rule 131 (valoresTernarioMat -> ternarioMat .)
    )               reduce using rule 131 (valoresTernarioMat -> ternarioMat .)
    ;               reduce using rule 131 (valoresTernarioMat -> ternarioMat .)
    }               reduce using rule 131 (valoresTernarioMat -> ternarioMat .)


state 296

    (117) valoresTernarioVars -> vec .
    (60) vecVal -> vec . [ expresion ]
    (63) vecVal -> vec . [ INT ]

    ,               reduce using rule 117 (valoresTernarioVars -> vec .)
    ]               reduce using rule 117 (valoresTernarioVars -> vec .)
    )               reduce using rule 117 (valoresTernarioVars -> vec .)
    ;               reduce using rule 117 (valoresTernarioVars -> vec .)
    :               reduce using rule 117 (valoresTernarioVars -> vec .)
    }               reduce using rule 117 (valoresTernarioVars -> vec .)
    [               shift and go to state 115


state 297

    (121) valoresTernarioVars -> varsOps .
    (163) valoresMat -> varsOps .
    (202) valoresBool -> varsOps .
    (227) tCompareEQ -> varsOps .
    (235) tCompare -> varsOps .

    :               reduce using rule 121 (valoresTernarioVars -> varsOps .)
    ,               reduce using rule 121 (valoresTernarioVars -> varsOps .)
    ]               reduce using rule 121 (valoresTernarioVars -> varsOps .)
    )               reduce using rule 121 (valoresTernarioVars -> varsOps .)
    ;               reduce using rule 121 (valoresTernarioVars -> varsOps .)
    }               reduce using rule 121 (valoresTernarioVars -> varsOps .)
    +               reduce using rule 163 (valoresMat -> varsOps .)
    -               reduce using rule 163 (valoresMat -> varsOps .)
    *               reduce using rule 163 (valoresMat -> varsOps .)
    /               reduce using rule 163 (valoresMat -> varsOps .)
    %               reduce using rule 163 (valoresMat -> varsOps .)
    ^               reduce using rule 163 (valoresMat -> varsOps .)
    ?               reduce using rule 202 (valoresBool -> varsOps .)
    OR              reduce using rule 202 (valoresBool -> varsOps .)
    AND             reduce using rule 202 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 227 (tCompareEQ -> varsOps .)
    DISTINTO        reduce using rule 227 (tCompareEQ -> varsOps .)
    >               reduce using rule 235 (tCompare -> varsOps .)
    <               reduce using rule 235 (tCompare -> varsOps .)


state 298

    (116) valoresTernarioVars -> reg .
    (96) atributos -> reg . . valoresCampos

    ,               reduce using rule 116 (valoresTernarioVars -> reg .)
    ]               reduce using rule 116 (valoresTernarioVars -> reg .)
    )               reduce using rule 116 (valoresTernarioVars -> reg .)
    ;               reduce using rule 116 (valoresTernarioVars -> reg .)
    :               reduce using rule 116 (valoresTernarioVars -> reg .)
    }               reduce using rule 116 (valoresTernarioVars -> reg .)
    .               shift and go to state 202


state 299

    (106) ternarioVars -> valoresBool ? valoresTernarioVars . : valoresTernarioVars
    (107) ternarioVars -> valoresBool ? valoresTernarioVars . : valoresTernarioMat
    (109) ternarioVars -> valoresBool ? valoresTernarioVars . : valoresTernarioBool

    :               shift and go to state 389


state 300

    (129) valoresTernarioMat -> STRING .
    (161) valoresMat -> STRING .

    :               reduce using rule 129 (valoresTernarioMat -> STRING .)
    ,               reduce using rule 129 (valoresTernarioMat -> STRING .)
    ]               reduce using rule 129 (valoresTernarioMat -> STRING .)
    )               reduce using rule 129 (valoresTernarioMat -> STRING .)
    ;               reduce using rule 129 (valoresTernarioMat -> STRING .)
    }               reduce using rule 129 (valoresTernarioMat -> STRING .)
    +               reduce using rule 161 (valoresMat -> STRING .)
    -               reduce using rule 161 (valoresMat -> STRING .)
    *               reduce using rule 161 (valoresMat -> STRING .)
    /               reduce using rule 161 (valoresMat -> STRING .)
    %               reduce using rule 161 (valoresMat -> STRING .)
    ^               reduce using rule 161 (valoresMat -> STRING .)


state 301

    (137) valoresTernarioBool -> ternarioBool .

    ,               reduce using rule 137 (valoresTernarioBool -> ternarioBool .)
    ]               reduce using rule 137 (valoresTernarioBool -> ternarioBool .)
    )               reduce using rule 137 (valoresTernarioBool -> ternarioBool .)
    ;               reduce using rule 137 (valoresTernarioBool -> ternarioBool .)
    :               reduce using rule 137 (valoresTernarioBool -> ternarioBool .)
    }               reduce using rule 137 (valoresTernarioBool -> ternarioBool .)


state 302

    (124) ternarioMat -> valoresBool ? valoresTernarioMat . : valoresTernarioMat
    (108) ternarioVars -> valoresBool ? valoresTernarioMat . : valoresTernarioVars

    :               shift and go to state 390


state 303

    (126) valoresTernarioMat -> INT .
    (156) valoresMat -> INT .
    (228) tCompareEQ -> INT .
    (237) tCompare -> INT .

    :               reduce using rule 126 (valoresTernarioMat -> INT .)
    ,               reduce using rule 126 (valoresTernarioMat -> INT .)
    ]               reduce using rule 126 (valoresTernarioMat -> INT .)
    )               reduce using rule 126 (valoresTernarioMat -> INT .)
    ;               reduce using rule 126 (valoresTernarioMat -> INT .)
    }               reduce using rule 126 (valoresTernarioMat -> INT .)
    +               reduce using rule 156 (valoresMat -> INT .)
    -               reduce using rule 156 (valoresMat -> INT .)
    *               reduce using rule 156 (valoresMat -> INT .)
    /               reduce using rule 156 (valoresMat -> INT .)
    %               reduce using rule 156 (valoresMat -> INT .)
    ^               reduce using rule 156 (valoresMat -> INT .)
    EQEQ            reduce using rule 228 (tCompareEQ -> INT .)
    DISTINTO        reduce using rule 228 (tCompareEQ -> INT .)
    >               reduce using rule 237 (tCompare -> INT .)
    <               reduce using rule 237 (tCompare -> INT .)


state 304

    (127) valoresTernarioMat -> FLOAT .
    (157) valoresMat -> FLOAT .
    (229) tCompareEQ -> FLOAT .
    (239) tCompare -> FLOAT .

    :               reduce using rule 127 (valoresTernarioMat -> FLOAT .)
    ,               reduce using rule 127 (valoresTernarioMat -> FLOAT .)
    ]               reduce using rule 127 (valoresTernarioMat -> FLOAT .)
    )               reduce using rule 127 (valoresTernarioMat -> FLOAT .)
    ;               reduce using rule 127 (valoresTernarioMat -> FLOAT .)
    }               reduce using rule 127 (valoresTernarioMat -> FLOAT .)
    +               reduce using rule 157 (valoresMat -> FLOAT .)
    -               reduce using rule 157 (valoresMat -> FLOAT .)
    *               reduce using rule 157 (valoresMat -> FLOAT .)
    /               reduce using rule 157 (valoresMat -> FLOAT .)
    %               reduce using rule 157 (valoresMat -> FLOAT .)
    ^               reduce using rule 157 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 229 (tCompareEQ -> FLOAT .)
    DISTINTO        reduce using rule 229 (tCompareEQ -> FLOAT .)
    >               reduce using rule 239 (tCompare -> FLOAT .)
    <               reduce using rule 239 (tCompare -> FLOAT .)


state 305

    (135) valoresTernarioBool -> BOOL .
    (199) valoresBool -> BOOL .
    (224) tCompareEQ -> BOOL .

    ,               reduce using rule 135 (valoresTernarioBool -> BOOL .)
    ]               reduce using rule 135 (valoresTernarioBool -> BOOL .)
    )               reduce using rule 135 (valoresTernarioBool -> BOOL .)
    ;               reduce using rule 135 (valoresTernarioBool -> BOOL .)
    :               reduce using rule 135 (valoresTernarioBool -> BOOL .)
    }               reduce using rule 135 (valoresTernarioBool -> BOOL .)
    ?               reduce using rule 199 (valoresBool -> BOOL .)
    OR              reduce using rule 199 (valoresBool -> BOOL .)
    AND             reduce using rule 199 (valoresBool -> BOOL .)
    EQEQ            reduce using rule 224 (tCompareEQ -> BOOL .)
    DISTINTO        reduce using rule 224 (tCompareEQ -> BOOL .)


state 306

    (139) valoresTernarioBool -> expBool .
    (125) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (134) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> expBool . OR and
    (207) expBool -> expBool . OR valoresBool
    (111) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars

    :               reduce using rule 139 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 204
    OR              shift and go to state 203


state 307

    (132) valoresTernarioMat -> ( . ternarioMat )
    (138) valoresTernarioBool -> ( . ternarioBool )
    (119) valoresTernarioVars -> ( . ternarioVars )
    (164) valoresMat -> ( . ternarioMat )
    (203) valoresBool -> ( . ternarioBool )
    (232) tCompareEQ -> ( . ternarioBool )
    (233) tCompareEQ -> ( . ternarioMat )
    (197) paren -> ( . eMat )
    (198) paren -> ( . valoresMat )
    (240) tCompare -> ( . ternarioMat )
    (248) parenBool -> ( . expBool )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (56) vec -> . [ elem ]
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 177
    BOOL            shift and go to state 187
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 175
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 391
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 392
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    expBool                        shift and go to state 188
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 179
    ternarioVars                   shift and go to state 393
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 308

    (118) valoresTernarioVars -> ternarioVars .

    ,               reduce using rule 118 (valoresTernarioVars -> ternarioVars .)
    ]               reduce using rule 118 (valoresTernarioVars -> ternarioVars .)
    )               reduce using rule 118 (valoresTernarioVars -> ternarioVars .)
    ;               reduce using rule 118 (valoresTernarioVars -> ternarioVars .)
    :               reduce using rule 118 (valoresTernarioVars -> ternarioVars .)
    }               reduce using rule 118 (valoresTernarioVars -> ternarioVars .)


state 309

    (122) valoresTernarioVars -> varYVals .
    (162) valoresMat -> varYVals .
    (201) valoresBool -> varYVals .
    (226) tCompareEQ -> varYVals .
    (236) tCompare -> varYVals .

    :               reduce using rule 122 (valoresTernarioVars -> varYVals .)
    ,               reduce using rule 122 (valoresTernarioVars -> varYVals .)
    ]               reduce using rule 122 (valoresTernarioVars -> varYVals .)
    )               reduce using rule 122 (valoresTernarioVars -> varYVals .)
    ;               reduce using rule 122 (valoresTernarioVars -> varYVals .)
    }               reduce using rule 122 (valoresTernarioVars -> varYVals .)
    +               reduce using rule 162 (valoresMat -> varYVals .)
    -               reduce using rule 162 (valoresMat -> varYVals .)
    *               reduce using rule 162 (valoresMat -> varYVals .)
    /               reduce using rule 162 (valoresMat -> varYVals .)
    %               reduce using rule 162 (valoresMat -> varYVals .)
    ^               reduce using rule 162 (valoresMat -> varYVals .)
    ?               reduce using rule 201 (valoresBool -> varYVals .)
    OR              reduce using rule 201 (valoresBool -> varYVals .)
    AND             reduce using rule 201 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 226 (tCompareEQ -> varYVals .)
    DISTINTO        reduce using rule 226 (tCompareEQ -> varYVals .)
    >               reduce using rule 236 (tCompare -> varYVals .)
    <               reduce using rule 236 (tCompare -> varYVals .)


state 310

    (120) valoresTernarioVars -> atributos .
    (159) valoresMat -> atributos .

    ,               reduce using rule 120 (valoresTernarioVars -> atributos .)
    ]               reduce using rule 120 (valoresTernarioVars -> atributos .)
    )               reduce using rule 120 (valoresTernarioVars -> atributos .)
    ;               reduce using rule 120 (valoresTernarioVars -> atributos .)
    :               reduce using rule 120 (valoresTernarioVars -> atributos .)
    }               reduce using rule 120 (valoresTernarioVars -> atributos .)
    +               reduce using rule 159 (valoresMat -> atributos .)
    -               reduce using rule 159 (valoresMat -> atributos .)
    *               reduce using rule 159 (valoresMat -> atributos .)
    /               reduce using rule 159 (valoresMat -> atributos .)
    %               reduce using rule 159 (valoresMat -> atributos .)
    ^               reduce using rule 159 (valoresMat -> atributos .)


state 311

    (167) eMat -> eMat + valoresMat .
    (177) p -> valoresMat . * exp
    (178) p -> valoresMat . / exp
    (179) p -> valoresMat . % exp
    (183) p -> valoresMat . * valoresMat
    (184) p -> valoresMat . / valoresMat
    (185) p -> valoresMat . % valoresMat
    (188) exp -> valoresMat . ^ iSing
    (190) exp -> valoresMat . ^ valoresMat

    +               reduce using rule 167 (eMat -> eMat + valoresMat .)
    -               reduce using rule 167 (eMat -> eMat + valoresMat .)
    ,               reduce using rule 167 (eMat -> eMat + valoresMat .)
    ]               reduce using rule 167 (eMat -> eMat + valoresMat .)
    )               reduce using rule 167 (eMat -> eMat + valoresMat .)
    ;               reduce using rule 167 (eMat -> eMat + valoresMat .)
    :               reduce using rule 167 (eMat -> eMat + valoresMat .)
    }               reduce using rule 167 (eMat -> eMat + valoresMat .)
    EQEQ            reduce using rule 167 (eMat -> eMat + valoresMat .)
    DISTINTO        reduce using rule 167 (eMat -> eMat + valoresMat .)
    >               reduce using rule 167 (eMat -> eMat + valoresMat .)
    <               reduce using rule 167 (eMat -> eMat + valoresMat .)
    AND             reduce using rule 167 (eMat -> eMat + valoresMat .)
    OR              reduce using rule 167 (eMat -> eMat + valoresMat .)
    ?               reduce using rule 167 (eMat -> eMat + valoresMat .)
    *               shift and go to state 158
    /               shift and go to state 160
    %               shift and go to state 156
    ^               shift and go to state 161


state 312

    (165) eMat -> eMat + p .
    (174) p -> p . * exp
    (175) p -> p . / exp
    (176) p -> p . % exp
    (180) p -> p . * valoresMat
    (181) p -> p . / valoresMat
    (182) p -> p . % valoresMat

    +               reduce using rule 165 (eMat -> eMat + p .)
    -               reduce using rule 165 (eMat -> eMat + p .)
    ,               reduce using rule 165 (eMat -> eMat + p .)
    ]               reduce using rule 165 (eMat -> eMat + p .)
    )               reduce using rule 165 (eMat -> eMat + p .)
    ;               reduce using rule 165 (eMat -> eMat + p .)
    :               reduce using rule 165 (eMat -> eMat + p .)
    }               reduce using rule 165 (eMat -> eMat + p .)
    EQEQ            reduce using rule 165 (eMat -> eMat + p .)
    DISTINTO        reduce using rule 165 (eMat -> eMat + p .)
    >               reduce using rule 165 (eMat -> eMat + p .)
    <               reduce using rule 165 (eMat -> eMat + p .)
    AND             reduce using rule 165 (eMat -> eMat + p .)
    OR              reduce using rule 165 (eMat -> eMat + p .)
    ?               reduce using rule 165 (eMat -> eMat + p .)
    *               shift and go to state 210
    /               shift and go to state 211
    %               shift and go to state 209


state 313

    (172) eMat -> eMat - valoresMat .
    (177) p -> valoresMat . * exp
    (178) p -> valoresMat . / exp
    (179) p -> valoresMat . % exp
    (183) p -> valoresMat . * valoresMat
    (184) p -> valoresMat . / valoresMat
    (185) p -> valoresMat . % valoresMat
    (188) exp -> valoresMat . ^ iSing
    (190) exp -> valoresMat . ^ valoresMat

    +               reduce using rule 172 (eMat -> eMat - valoresMat .)
    -               reduce using rule 172 (eMat -> eMat - valoresMat .)
    ,               reduce using rule 172 (eMat -> eMat - valoresMat .)
    ]               reduce using rule 172 (eMat -> eMat - valoresMat .)
    )               reduce using rule 172 (eMat -> eMat - valoresMat .)
    ;               reduce using rule 172 (eMat -> eMat - valoresMat .)
    :               reduce using rule 172 (eMat -> eMat - valoresMat .)
    }               reduce using rule 172 (eMat -> eMat - valoresMat .)
    EQEQ            reduce using rule 172 (eMat -> eMat - valoresMat .)
    DISTINTO        reduce using rule 172 (eMat -> eMat - valoresMat .)
    >               reduce using rule 172 (eMat -> eMat - valoresMat .)
    <               reduce using rule 172 (eMat -> eMat - valoresMat .)
    AND             reduce using rule 172 (eMat -> eMat - valoresMat .)
    OR              reduce using rule 172 (eMat -> eMat - valoresMat .)
    ?               reduce using rule 172 (eMat -> eMat - valoresMat .)
    *               shift and go to state 158
    /               shift and go to state 160
    %               shift and go to state 156
    ^               shift and go to state 161


state 314

    (170) eMat -> eMat - p .
    (174) p -> p . * exp
    (175) p -> p . / exp
    (176) p -> p . % exp
    (180) p -> p . * valoresMat
    (181) p -> p . / valoresMat
    (182) p -> p . % valoresMat

    +               reduce using rule 170 (eMat -> eMat - p .)
    -               reduce using rule 170 (eMat -> eMat - p .)
    ,               reduce using rule 170 (eMat -> eMat - p .)
    ]               reduce using rule 170 (eMat -> eMat - p .)
    )               reduce using rule 170 (eMat -> eMat - p .)
    ;               reduce using rule 170 (eMat -> eMat - p .)
    :               reduce using rule 170 (eMat -> eMat - p .)
    }               reduce using rule 170 (eMat -> eMat - p .)
    EQEQ            reduce using rule 170 (eMat -> eMat - p .)
    DISTINTO        reduce using rule 170 (eMat -> eMat - p .)
    >               reduce using rule 170 (eMat -> eMat - p .)
    <               reduce using rule 170 (eMat -> eMat - p .)
    AND             reduce using rule 170 (eMat -> eMat - p .)
    OR              reduce using rule 170 (eMat -> eMat - p .)
    ?               reduce using rule 170 (eMat -> eMat - p .)
    *               shift and go to state 210
    /               shift and go to state 211
    %               shift and go to state 209


state 315

    (217) eq -> tCompareEQ EQEQ mayor .

    EQEQ            reduce using rule 217 (eq -> tCompareEQ EQEQ mayor .)
    DISTINTO        reduce using rule 217 (eq -> tCompareEQ EQEQ mayor .)
    AND             reduce using rule 217 (eq -> tCompareEQ EQEQ mayor .)
    ?               reduce using rule 217 (eq -> tCompareEQ EQEQ mayor .)
    OR              reduce using rule 217 (eq -> tCompareEQ EQEQ mayor .)
    :               reduce using rule 217 (eq -> tCompareEQ EQEQ mayor .)
    )               reduce using rule 217 (eq -> tCompareEQ EQEQ mayor .)
    ,               reduce using rule 217 (eq -> tCompareEQ EQEQ mayor .)
    ]               reduce using rule 217 (eq -> tCompareEQ EQEQ mayor .)
    ;               reduce using rule 217 (eq -> tCompareEQ EQEQ mayor .)
    }               reduce using rule 217 (eq -> tCompareEQ EQEQ mayor .)


state 316

    (221) eq -> tCompareEQ EQEQ tCompareEQ .

    EQEQ            reduce using rule 221 (eq -> tCompareEQ EQEQ tCompareEQ .)
    DISTINTO        reduce using rule 221 (eq -> tCompareEQ EQEQ tCompareEQ .)
    AND             reduce using rule 221 (eq -> tCompareEQ EQEQ tCompareEQ .)
    ?               reduce using rule 221 (eq -> tCompareEQ EQEQ tCompareEQ .)
    OR              reduce using rule 221 (eq -> tCompareEQ EQEQ tCompareEQ .)
    :               reduce using rule 221 (eq -> tCompareEQ EQEQ tCompareEQ .)
    )               reduce using rule 221 (eq -> tCompareEQ EQEQ tCompareEQ .)
    ,               reduce using rule 221 (eq -> tCompareEQ EQEQ tCompareEQ .)
    ]               reduce using rule 221 (eq -> tCompareEQ EQEQ tCompareEQ .)
    ;               reduce using rule 221 (eq -> tCompareEQ EQEQ tCompareEQ .)
    }               reduce using rule 221 (eq -> tCompareEQ EQEQ tCompareEQ .)


state 317

    (218) eq -> tCompareEQ DISTINTO mayor .

    EQEQ            reduce using rule 218 (eq -> tCompareEQ DISTINTO mayor .)
    DISTINTO        reduce using rule 218 (eq -> tCompareEQ DISTINTO mayor .)
    AND             reduce using rule 218 (eq -> tCompareEQ DISTINTO mayor .)
    ?               reduce using rule 218 (eq -> tCompareEQ DISTINTO mayor .)
    OR              reduce using rule 218 (eq -> tCompareEQ DISTINTO mayor .)
    :               reduce using rule 218 (eq -> tCompareEQ DISTINTO mayor .)
    )               reduce using rule 218 (eq -> tCompareEQ DISTINTO mayor .)
    ,               reduce using rule 218 (eq -> tCompareEQ DISTINTO mayor .)
    ]               reduce using rule 218 (eq -> tCompareEQ DISTINTO mayor .)
    ;               reduce using rule 218 (eq -> tCompareEQ DISTINTO mayor .)
    }               reduce using rule 218 (eq -> tCompareEQ DISTINTO mayor .)


state 318

    (222) eq -> tCompareEQ DISTINTO tCompareEQ .

    EQEQ            reduce using rule 222 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    DISTINTO        reduce using rule 222 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    AND             reduce using rule 222 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    ?               reduce using rule 222 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    OR              reduce using rule 222 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    :               reduce using rule 222 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    )               reduce using rule 222 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    ,               reduce using rule 222 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    ]               reduce using rule 222 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    ;               reduce using rule 222 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    }               reduce using rule 222 (eq -> tCompareEQ DISTINTO tCompareEQ .)


state 319

    (198) paren -> ( valoresMat ) .

    ^               reduce using rule 198 (paren -> ( valoresMat ) .)
    *               reduce using rule 198 (paren -> ( valoresMat ) .)
    /               reduce using rule 198 (paren -> ( valoresMat ) .)
    %               reduce using rule 198 (paren -> ( valoresMat ) .)
    +               reduce using rule 198 (paren -> ( valoresMat ) .)
    -               reduce using rule 198 (paren -> ( valoresMat ) .)
    :               reduce using rule 198 (paren -> ( valoresMat ) .)
    EQEQ            reduce using rule 198 (paren -> ( valoresMat ) .)
    DISTINTO        reduce using rule 198 (paren -> ( valoresMat ) .)
    >               reduce using rule 198 (paren -> ( valoresMat ) .)
    <               reduce using rule 198 (paren -> ( valoresMat ) .)
    ,               reduce using rule 198 (paren -> ( valoresMat ) .)
    ]               reduce using rule 198 (paren -> ( valoresMat ) .)
    )               reduce using rule 198 (paren -> ( valoresMat ) .)
    ;               reduce using rule 198 (paren -> ( valoresMat ) .)
    AND             reduce using rule 198 (paren -> ( valoresMat ) .)
    OR              reduce using rule 198 (paren -> ( valoresMat ) .)
    ?               reduce using rule 198 (paren -> ( valoresMat ) .)
    }               reduce using rule 198 (paren -> ( valoresMat ) .)


state 320

    (197) paren -> ( eMat ) .

    ^               reduce using rule 197 (paren -> ( eMat ) .)
    *               reduce using rule 197 (paren -> ( eMat ) .)
    /               reduce using rule 197 (paren -> ( eMat ) .)
    %               reduce using rule 197 (paren -> ( eMat ) .)
    +               reduce using rule 197 (paren -> ( eMat ) .)
    -               reduce using rule 197 (paren -> ( eMat ) .)
    :               reduce using rule 197 (paren -> ( eMat ) .)
    EQEQ            reduce using rule 197 (paren -> ( eMat ) .)
    DISTINTO        reduce using rule 197 (paren -> ( eMat ) .)
    >               reduce using rule 197 (paren -> ( eMat ) .)
    <               reduce using rule 197 (paren -> ( eMat ) .)
    ,               reduce using rule 197 (paren -> ( eMat ) .)
    ]               reduce using rule 197 (paren -> ( eMat ) .)
    )               reduce using rule 197 (paren -> ( eMat ) .)
    ;               reduce using rule 197 (paren -> ( eMat ) .)
    AND             reduce using rule 197 (paren -> ( eMat ) .)
    OR              reduce using rule 197 (paren -> ( eMat ) .)
    ?               reduce using rule 197 (paren -> ( eMat ) .)
    }               reduce using rule 197 (paren -> ( eMat ) .)


state 321

    (124) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (206) expBool -> valoresBool . OR and
    (208) expBool -> valoresBool . OR valoresBool
    (211) and -> valoresBool . AND eq
    (213) and -> valoresBool . AND valoresBool

    ?               shift and go to state 394
    OR              shift and go to state 166
    AND             shift and go to state 165


state 322

    (164) valoresMat -> ( ternarioMat . )
    (233) tCompareEQ -> ( ternarioMat . )
    (240) tCompare -> ( ternarioMat . )

    )               shift and go to state 395


state 323

    (203) valoresBool -> ( ternarioBool . )
    (232) tCompareEQ -> ( ternarioBool . )

    )               shift and go to state 396


state 324

    (248) parenBool -> ( expBool . )
    (125) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (134) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> expBool . OR and
    (207) expBool -> expBool . OR valoresBool

    )               shift and go to state 327
    ?               shift and go to state 397
    OR              shift and go to state 203


state 325

    (102) ternario -> ( ternarioMat ) .
    (164) valoresMat -> ( ternarioMat ) .
    (233) tCompareEQ -> ( ternarioMat ) .
    (240) tCompare -> ( ternarioMat ) .

    ;               reduce using rule 102 (ternario -> ( ternarioMat ) .)
    ,               reduce using rule 102 (ternario -> ( ternarioMat ) .)
    )               reduce using rule 102 (ternario -> ( ternarioMat ) .)
    }               reduce using rule 102 (ternario -> ( ternarioMat ) .)
    ]               reduce using rule 102 (ternario -> ( ternarioMat ) .)
    +               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    ^               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    EQEQ            reduce using rule 233 (tCompareEQ -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 233 (tCompareEQ -> ( ternarioMat ) .)
    >               reduce using rule 240 (tCompare -> ( ternarioMat ) .)
    <               reduce using rule 240 (tCompare -> ( ternarioMat ) .)


state 326

    (103) ternario -> ( ternarioBool ) .
    (203) valoresBool -> ( ternarioBool ) .
    (232) tCompareEQ -> ( ternarioBool ) .

    ;               reduce using rule 103 (ternario -> ( ternarioBool ) .)
    ,               reduce using rule 103 (ternario -> ( ternarioBool ) .)
    )               reduce using rule 103 (ternario -> ( ternarioBool ) .)
    }               reduce using rule 103 (ternario -> ( ternarioBool ) .)
    ]               reduce using rule 103 (ternario -> ( ternarioBool ) .)
    OR              reduce using rule 203 (valoresBool -> ( ternarioBool ) .)
    AND             reduce using rule 203 (valoresBool -> ( ternarioBool ) .)
    ?               reduce using rule 203 (valoresBool -> ( ternarioBool ) .)
    EQEQ            reduce using rule 232 (tCompareEQ -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 232 (tCompareEQ -> ( ternarioBool ) .)


state 327

    (248) parenBool -> ( expBool ) .

    EQEQ            reduce using rule 248 (parenBool -> ( expBool ) .)
    DISTINTO        reduce using rule 248 (parenBool -> ( expBool ) .)
    AND             reduce using rule 248 (parenBool -> ( expBool ) .)
    ?               reduce using rule 248 (parenBool -> ( expBool ) .)
    OR              reduce using rule 248 (parenBool -> ( expBool ) .)
    ,               reduce using rule 248 (parenBool -> ( expBool ) .)
    ]               reduce using rule 248 (parenBool -> ( expBool ) .)
    )               reduce using rule 248 (parenBool -> ( expBool ) .)
    ;               reduce using rule 248 (parenBool -> ( expBool ) .)
    :               reduce using rule 248 (parenBool -> ( expBool ) .)
    }               reduce using rule 248 (parenBool -> ( expBool ) .)


state 328

    (105) ternario -> ( ternarioVars ) .

    ;               reduce using rule 105 (ternario -> ( ternarioVars ) .)
    ,               reduce using rule 105 (ternario -> ( ternarioVars ) .)
    )               reduce using rule 105 (ternario -> ( ternarioVars ) .)
    }               reduce using rule 105 (ternario -> ( ternarioVars ) .)
    ]               reduce using rule 105 (ternario -> ( ternarioVars ) .)


state 329

    (124) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (206) expBool -> valoresBool . OR and
    (208) expBool -> valoresBool . OR valoresBool
    (211) and -> valoresBool . AND eq
    (213) and -> valoresBool . AND valoresBool

    ?               shift and go to state 398
    OR              shift and go to state 166
    AND             shift and go to state 165


state 330

    (164) valoresMat -> ( . ternarioMat )
    (203) valoresBool -> ( . ternarioBool )
    (197) paren -> ( . eMat )
    (198) paren -> ( . valoresMat )
    (232) tCompareEQ -> ( . ternarioBool )
    (233) tCompareEQ -> ( . ternarioMat )
    (240) tCompare -> ( . ternarioMat )
    (248) parenBool -> ( . expBool )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (56) vec -> . [ elem ]
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 177
    BOOL            shift and go to state 187
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    valoresBool                    shift and go to state 321
    ternarioMat                    shift and go to state 322
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 323
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    expBool                        shift and go to state 324
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 331

    (164) valoresMat -> ( ternarioMat . )

    )               shift and go to state 399


state 332

    (125) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (205) expBool -> expBool . OR and
    (207) expBool -> expBool . OR valoresBool

    ?               shift and go to state 400
    OR              shift and go to state 203


state 333

    (99) valoresCampos -> BEGIN .

    ,               reduce using rule 99 (valoresCampos -> BEGIN .)
    ]               reduce using rule 99 (valoresCampos -> BEGIN .)
    +               reduce using rule 99 (valoresCampos -> BEGIN .)
    -               reduce using rule 99 (valoresCampos -> BEGIN .)
    *               reduce using rule 99 (valoresCampos -> BEGIN .)
    /               reduce using rule 99 (valoresCampos -> BEGIN .)
    %               reduce using rule 99 (valoresCampos -> BEGIN .)
    ^               reduce using rule 99 (valoresCampos -> BEGIN .)
    )               reduce using rule 99 (valoresCampos -> BEGIN .)
    ;               reduce using rule 99 (valoresCampos -> BEGIN .)
    EQEQ            reduce using rule 99 (valoresCampos -> BEGIN .)
    DISTINTO        reduce using rule 99 (valoresCampos -> BEGIN .)
    >               reduce using rule 99 (valoresCampos -> BEGIN .)
    <               reduce using rule 99 (valoresCampos -> BEGIN .)
    AND             reduce using rule 99 (valoresCampos -> BEGIN .)
    OR              reduce using rule 99 (valoresCampos -> BEGIN .)
    ?               reduce using rule 99 (valoresCampos -> BEGIN .)
    :               reduce using rule 99 (valoresCampos -> BEGIN .)
    }               reduce using rule 99 (valoresCampos -> BEGIN .)


state 334

    (98) valoresCampos -> END .

    ,               reduce using rule 98 (valoresCampos -> END .)
    ]               reduce using rule 98 (valoresCampos -> END .)
    +               reduce using rule 98 (valoresCampos -> END .)
    -               reduce using rule 98 (valoresCampos -> END .)
    *               reduce using rule 98 (valoresCampos -> END .)
    /               reduce using rule 98 (valoresCampos -> END .)
    %               reduce using rule 98 (valoresCampos -> END .)
    ^               reduce using rule 98 (valoresCampos -> END .)
    )               reduce using rule 98 (valoresCampos -> END .)
    ;               reduce using rule 98 (valoresCampos -> END .)
    EQEQ            reduce using rule 98 (valoresCampos -> END .)
    DISTINTO        reduce using rule 98 (valoresCampos -> END .)
    >               reduce using rule 98 (valoresCampos -> END .)
    <               reduce using rule 98 (valoresCampos -> END .)
    AND             reduce using rule 98 (valoresCampos -> END .)
    OR              reduce using rule 98 (valoresCampos -> END .)
    ?               reduce using rule 98 (valoresCampos -> END .)
    :               reduce using rule 98 (valoresCampos -> END .)
    }               reduce using rule 98 (valoresCampos -> END .)


state 335

    (96) atributos -> reg . valoresCampos .

    ^               reduce using rule 96 (atributos -> reg . valoresCampos .)
    *               reduce using rule 96 (atributos -> reg . valoresCampos .)
    /               reduce using rule 96 (atributos -> reg . valoresCampos .)
    %               reduce using rule 96 (atributos -> reg . valoresCampos .)
    +               reduce using rule 96 (atributos -> reg . valoresCampos .)
    -               reduce using rule 96 (atributos -> reg . valoresCampos .)
    ,               reduce using rule 96 (atributos -> reg . valoresCampos .)
    ]               reduce using rule 96 (atributos -> reg . valoresCampos .)
    EQEQ            reduce using rule 96 (atributos -> reg . valoresCampos .)
    DISTINTO        reduce using rule 96 (atributos -> reg . valoresCampos .)
    >               reduce using rule 96 (atributos -> reg . valoresCampos .)
    <               reduce using rule 96 (atributos -> reg . valoresCampos .)
    )               reduce using rule 96 (atributos -> reg . valoresCampos .)
    ;               reduce using rule 96 (atributos -> reg . valoresCampos .)
    AND             reduce using rule 96 (atributos -> reg . valoresCampos .)
    OR              reduce using rule 96 (atributos -> reg . valoresCampos .)
    ?               reduce using rule 96 (atributos -> reg . valoresCampos .)
    :               reduce using rule 96 (atributos -> reg . valoresCampos .)
    }               reduce using rule 96 (atributos -> reg . valoresCampos .)


state 336

    (97) valoresCampos -> varYVals .

    ,               reduce using rule 97 (valoresCampos -> varYVals .)
    ]               reduce using rule 97 (valoresCampos -> varYVals .)
    +               reduce using rule 97 (valoresCampos -> varYVals .)
    -               reduce using rule 97 (valoresCampos -> varYVals .)
    *               reduce using rule 97 (valoresCampos -> varYVals .)
    /               reduce using rule 97 (valoresCampos -> varYVals .)
    %               reduce using rule 97 (valoresCampos -> varYVals .)
    ^               reduce using rule 97 (valoresCampos -> varYVals .)
    )               reduce using rule 97 (valoresCampos -> varYVals .)
    ;               reduce using rule 97 (valoresCampos -> varYVals .)
    EQEQ            reduce using rule 97 (valoresCampos -> varYVals .)
    DISTINTO        reduce using rule 97 (valoresCampos -> varYVals .)
    >               reduce using rule 97 (valoresCampos -> varYVals .)
    <               reduce using rule 97 (valoresCampos -> varYVals .)
    AND             reduce using rule 97 (valoresCampos -> varYVals .)
    OR              reduce using rule 97 (valoresCampos -> varYVals .)
    ?               reduce using rule 97 (valoresCampos -> varYVals .)
    :               reduce using rule 97 (valoresCampos -> varYVals .)
    }               reduce using rule 97 (valoresCampos -> varYVals .)


state 337

    (205) expBool -> expBool OR and .
    (210) and -> and . AND eq
    (212) and -> and . AND valoresBool

    )               reduce using rule 205 (expBool -> expBool OR and .)
    ?               reduce using rule 205 (expBool -> expBool OR and .)
    OR              reduce using rule 205 (expBool -> expBool OR and .)
    ]               reduce using rule 205 (expBool -> expBool OR and .)
    ,               reduce using rule 205 (expBool -> expBool OR and .)
    ;               reduce using rule 205 (expBool -> expBool OR and .)
    :               reduce using rule 205 (expBool -> expBool OR and .)
    }               reduce using rule 205 (expBool -> expBool OR and .)
    AND             shift and go to state 154


state 338

    (207) expBool -> expBool OR valoresBool .
    (211) and -> valoresBool . AND eq
    (213) and -> valoresBool . AND valoresBool

    )               reduce using rule 207 (expBool -> expBool OR valoresBool .)
    ?               reduce using rule 207 (expBool -> expBool OR valoresBool .)
    OR              reduce using rule 207 (expBool -> expBool OR valoresBool .)
    ]               reduce using rule 207 (expBool -> expBool OR valoresBool .)
    ,               reduce using rule 207 (expBool -> expBool OR valoresBool .)
    ;               reduce using rule 207 (expBool -> expBool OR valoresBool .)
    :               reduce using rule 207 (expBool -> expBool OR valoresBool .)
    }               reduce using rule 207 (expBool -> expBool OR valoresBool .)
    AND             shift and go to state 165


state 339

    (134) ternarioBool -> expBool ? valoresTernarioBool . : valoresTernarioBool
    (115) ternarioVars -> expBool ? valoresTernarioBool . : valoresTernarioVars

    :               shift and go to state 401


state 340

    (111) ternarioVars -> expBool ? valoresTernarioVars . : valoresTernarioVars
    (112) ternarioVars -> expBool ? valoresTernarioVars . : valoresTernarioMat
    (114) ternarioVars -> expBool ? valoresTernarioVars . : valoresTernarioBool

    :               shift and go to state 402


state 341

    (125) ternarioMat -> expBool ? valoresTernarioMat . : valoresTernarioMat
    (113) ternarioVars -> expBool ? valoresTernarioMat . : valoresTernarioVars

    :               shift and go to state 403


state 342

    (238) tCompare -> funcInt .
    (158) valoresMat -> funcInt .

    EQEQ            reduce using rule 238 (tCompare -> funcInt .)
    DISTINTO        reduce using rule 238 (tCompare -> funcInt .)
    AND             reduce using rule 238 (tCompare -> funcInt .)
    OR              reduce using rule 238 (tCompare -> funcInt .)
    ?               reduce using rule 238 (tCompare -> funcInt .)
    ,               reduce using rule 238 (tCompare -> funcInt .)
    ]               reduce using rule 238 (tCompare -> funcInt .)
    )               reduce using rule 238 (tCompare -> funcInt .)
    ;               reduce using rule 238 (tCompare -> funcInt .)
    :               reduce using rule 238 (tCompare -> funcInt .)
    }               reduce using rule 238 (tCompare -> funcInt .)
    +               reduce using rule 158 (valoresMat -> funcInt .)
    -               reduce using rule 158 (valoresMat -> funcInt .)
    *               reduce using rule 158 (valoresMat -> funcInt .)
    /               reduce using rule 158 (valoresMat -> funcInt .)
    %               reduce using rule 158 (valoresMat -> funcInt .)
    ^               reduce using rule 158 (valoresMat -> funcInt .)


state 343

    (234) tCompare -> eMat .
    (165) eMat -> eMat . + p
    (167) eMat -> eMat . + valoresMat
    (170) eMat -> eMat . - p
    (172) eMat -> eMat . - valoresMat

    EQEQ            reduce using rule 234 (tCompare -> eMat .)
    DISTINTO        reduce using rule 234 (tCompare -> eMat .)
    AND             reduce using rule 234 (tCompare -> eMat .)
    OR              reduce using rule 234 (tCompare -> eMat .)
    ?               reduce using rule 234 (tCompare -> eMat .)
    ,               reduce using rule 234 (tCompare -> eMat .)
    ]               reduce using rule 234 (tCompare -> eMat .)
    )               reduce using rule 234 (tCompare -> eMat .)
    ;               reduce using rule 234 (tCompare -> eMat .)
    :               reduce using rule 234 (tCompare -> eMat .)
    }               reduce using rule 234 (tCompare -> eMat .)
    +               shift and go to state 168
    -               shift and go to state 169


state 344

    (240) tCompare -> ( . ternarioMat )
    (164) valoresMat -> ( . ternarioMat )
    (197) paren -> ( . eMat )
    (198) paren -> ( . valoresMat )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (51) funcBool -> . COLINEALES ( valores , valores )
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (56) vec -> . [ elem ]
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 177
    BOOL            shift and go to state 187
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    valoresBool                    shift and go to state 329
    ternarioMat                    shift and go to state 404
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    expBool                        shift and go to state 332
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 345

    (243) menor -> tCompare < tCompare .

    EQEQ            reduce using rule 243 (menor -> tCompare < tCompare .)
    DISTINTO        reduce using rule 243 (menor -> tCompare < tCompare .)
    AND             reduce using rule 243 (menor -> tCompare < tCompare .)
    ?               reduce using rule 243 (menor -> tCompare < tCompare .)
    OR              reduce using rule 243 (menor -> tCompare < tCompare .)
    ,               reduce using rule 243 (menor -> tCompare < tCompare .)
    ]               reduce using rule 243 (menor -> tCompare < tCompare .)
    )               reduce using rule 243 (menor -> tCompare < tCompare .)
    ;               reduce using rule 243 (menor -> tCompare < tCompare .)
    :               reduce using rule 243 (menor -> tCompare < tCompare .)
    }               reduce using rule 243 (menor -> tCompare < tCompare .)


state 346

    (140) varYVals -> ID .
    (147) variable -> ID .
    (59) vecVal -> ID . [ expresion ]
    (62) vecVal -> ID . [ INT ]
    (95) atributos -> ID . . valoresCampos

    EQEQ            reduce using rule 140 (varYVals -> ID .)
    DISTINTO        reduce using rule 140 (varYVals -> ID .)
    AND             reduce using rule 140 (varYVals -> ID .)
    OR              reduce using rule 140 (varYVals -> ID .)
    ?               reduce using rule 140 (varYVals -> ID .)
    ,               reduce using rule 140 (varYVals -> ID .)
    ]               reduce using rule 140 (varYVals -> ID .)
    )               reduce using rule 140 (varYVals -> ID .)
    ;               reduce using rule 140 (varYVals -> ID .)
    :               reduce using rule 140 (varYVals -> ID .)
    }               reduce using rule 140 (varYVals -> ID .)
    +               reduce using rule 140 (varYVals -> ID .)
    -               reduce using rule 140 (varYVals -> ID .)
    *               reduce using rule 140 (varYVals -> ID .)
    /               reduce using rule 140 (varYVals -> ID .)
    %               reduce using rule 140 (varYVals -> ID .)
    ^               reduce using rule 140 (varYVals -> ID .)
    MASMAS          reduce using rule 147 (variable -> ID .)
    MENOSMENOS      reduce using rule 147 (variable -> ID .)
    [               shift and go to state 105
    .               shift and go to state 207


state 347

    (237) tCompare -> INT .
    (156) valoresMat -> INT .

    EQEQ            reduce using rule 237 (tCompare -> INT .)
    DISTINTO        reduce using rule 237 (tCompare -> INT .)
    AND             reduce using rule 237 (tCompare -> INT .)
    OR              reduce using rule 237 (tCompare -> INT .)
    ?               reduce using rule 237 (tCompare -> INT .)
    ,               reduce using rule 237 (tCompare -> INT .)
    ]               reduce using rule 237 (tCompare -> INT .)
    )               reduce using rule 237 (tCompare -> INT .)
    ;               reduce using rule 237 (tCompare -> INT .)
    :               reduce using rule 237 (tCompare -> INT .)
    }               reduce using rule 237 (tCompare -> INT .)
    +               reduce using rule 156 (valoresMat -> INT .)
    -               reduce using rule 156 (valoresMat -> INT .)
    *               reduce using rule 156 (valoresMat -> INT .)
    /               reduce using rule 156 (valoresMat -> INT .)
    %               reduce using rule 156 (valoresMat -> INT .)
    ^               reduce using rule 156 (valoresMat -> INT .)


state 348

    (239) tCompare -> FLOAT .
    (157) valoresMat -> FLOAT .

    EQEQ            reduce using rule 239 (tCompare -> FLOAT .)
    DISTINTO        reduce using rule 239 (tCompare -> FLOAT .)
    AND             reduce using rule 239 (tCompare -> FLOAT .)
    OR              reduce using rule 239 (tCompare -> FLOAT .)
    ?               reduce using rule 239 (tCompare -> FLOAT .)
    ,               reduce using rule 239 (tCompare -> FLOAT .)
    ]               reduce using rule 239 (tCompare -> FLOAT .)
    )               reduce using rule 239 (tCompare -> FLOAT .)
    ;               reduce using rule 239 (tCompare -> FLOAT .)
    :               reduce using rule 239 (tCompare -> FLOAT .)
    }               reduce using rule 239 (tCompare -> FLOAT .)
    +               reduce using rule 157 (valoresMat -> FLOAT .)
    -               reduce using rule 157 (valoresMat -> FLOAT .)
    *               reduce using rule 157 (valoresMat -> FLOAT .)
    /               reduce using rule 157 (valoresMat -> FLOAT .)
    %               reduce using rule 157 (valoresMat -> FLOAT .)
    ^               reduce using rule 157 (valoresMat -> FLOAT .)


state 349

    (235) tCompare -> varsOps .
    (163) valoresMat -> varsOps .

    EQEQ            reduce using rule 235 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 235 (tCompare -> varsOps .)
    AND             reduce using rule 235 (tCompare -> varsOps .)
    OR              reduce using rule 235 (tCompare -> varsOps .)
    ?               reduce using rule 235 (tCompare -> varsOps .)
    ,               reduce using rule 235 (tCompare -> varsOps .)
    ]               reduce using rule 235 (tCompare -> varsOps .)
    )               reduce using rule 235 (tCompare -> varsOps .)
    ;               reduce using rule 235 (tCompare -> varsOps .)
    :               reduce using rule 235 (tCompare -> varsOps .)
    }               reduce using rule 235 (tCompare -> varsOps .)
    +               reduce using rule 163 (valoresMat -> varsOps .)
    -               reduce using rule 163 (valoresMat -> varsOps .)
    *               reduce using rule 163 (valoresMat -> varsOps .)
    /               reduce using rule 163 (valoresMat -> varsOps .)
    %               reduce using rule 163 (valoresMat -> varsOps .)
    ^               reduce using rule 163 (valoresMat -> varsOps .)


state 350

    (236) tCompare -> varYVals .
    (162) valoresMat -> varYVals .

    EQEQ            reduce using rule 236 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 236 (tCompare -> varYVals .)
    AND             reduce using rule 236 (tCompare -> varYVals .)
    OR              reduce using rule 236 (tCompare -> varYVals .)
    ?               reduce using rule 236 (tCompare -> varYVals .)
    ,               reduce using rule 236 (tCompare -> varYVals .)
    ]               reduce using rule 236 (tCompare -> varYVals .)
    )               reduce using rule 236 (tCompare -> varYVals .)
    ;               reduce using rule 236 (tCompare -> varYVals .)
    :               reduce using rule 236 (tCompare -> varYVals .)
    }               reduce using rule 236 (tCompare -> varYVals .)
    +               reduce using rule 162 (valoresMat -> varYVals .)
    -               reduce using rule 162 (valoresMat -> varYVals .)
    *               reduce using rule 162 (valoresMat -> varYVals .)
    /               reduce using rule 162 (valoresMat -> varYVals .)
    %               reduce using rule 162 (valoresMat -> varYVals .)
    ^               reduce using rule 162 (valoresMat -> varYVals .)


state 351

    (241) mayor -> tCompare > tCompare .

    EQEQ            reduce using rule 241 (mayor -> tCompare > tCompare .)
    DISTINTO        reduce using rule 241 (mayor -> tCompare > tCompare .)
    AND             reduce using rule 241 (mayor -> tCompare > tCompare .)
    ?               reduce using rule 241 (mayor -> tCompare > tCompare .)
    OR              reduce using rule 241 (mayor -> tCompare > tCompare .)
    :               reduce using rule 241 (mayor -> tCompare > tCompare .)
    )               reduce using rule 241 (mayor -> tCompare > tCompare .)
    ,               reduce using rule 241 (mayor -> tCompare > tCompare .)
    ;               reduce using rule 241 (mayor -> tCompare > tCompare .)
    ]               reduce using rule 241 (mayor -> tCompare > tCompare .)
    }               reduce using rule 241 (mayor -> tCompare > tCompare .)


state 352

    (95) atributos -> ID . valoresCampos .

    ^               reduce using rule 95 (atributos -> ID . valoresCampos .)
    *               reduce using rule 95 (atributos -> ID . valoresCampos .)
    /               reduce using rule 95 (atributos -> ID . valoresCampos .)
    %               reduce using rule 95 (atributos -> ID . valoresCampos .)
    +               reduce using rule 95 (atributos -> ID . valoresCampos .)
    -               reduce using rule 95 (atributos -> ID . valoresCampos .)
    ,               reduce using rule 95 (atributos -> ID . valoresCampos .)
    ]               reduce using rule 95 (atributos -> ID . valoresCampos .)
    EQEQ            reduce using rule 95 (atributos -> ID . valoresCampos .)
    DISTINTO        reduce using rule 95 (atributos -> ID . valoresCampos .)
    >               reduce using rule 95 (atributos -> ID . valoresCampos .)
    <               reduce using rule 95 (atributos -> ID . valoresCampos .)
    )               reduce using rule 95 (atributos -> ID . valoresCampos .)
    ;               reduce using rule 95 (atributos -> ID . valoresCampos .)
    AND             reduce using rule 95 (atributos -> ID . valoresCampos .)
    OR              reduce using rule 95 (atributos -> ID . valoresCampos .)
    ?               reduce using rule 95 (atributos -> ID . valoresCampos .)
    :               reduce using rule 95 (atributos -> ID . valoresCampos .)
    }               reduce using rule 95 (atributos -> ID . valoresCampos .)


state 353

    (182) p -> p % valoresMat .
    (188) exp -> valoresMat . ^ iSing
    (190) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 182 (p -> p % valoresMat .)
    /               reduce using rule 182 (p -> p % valoresMat .)
    %               reduce using rule 182 (p -> p % valoresMat .)
    +               reduce using rule 182 (p -> p % valoresMat .)
    -               reduce using rule 182 (p -> p % valoresMat .)
    :               reduce using rule 182 (p -> p % valoresMat .)
    EQEQ            reduce using rule 182 (p -> p % valoresMat .)
    DISTINTO        reduce using rule 182 (p -> p % valoresMat .)
    >               reduce using rule 182 (p -> p % valoresMat .)
    <               reduce using rule 182 (p -> p % valoresMat .)
    ,               reduce using rule 182 (p -> p % valoresMat .)
    ]               reduce using rule 182 (p -> p % valoresMat .)
    )               reduce using rule 182 (p -> p % valoresMat .)
    ;               reduce using rule 182 (p -> p % valoresMat .)
    }               reduce using rule 182 (p -> p % valoresMat .)
    AND             reduce using rule 182 (p -> p % valoresMat .)
    OR              reduce using rule 182 (p -> p % valoresMat .)
    ?               reduce using rule 182 (p -> p % valoresMat .)
    ^               shift and go to state 161


state 354

    (176) p -> p % exp .
    (187) exp -> exp . ^ iSing
    (189) exp -> exp . ^ valoresMat

    *               reduce using rule 176 (p -> p % exp .)
    /               reduce using rule 176 (p -> p % exp .)
    %               reduce using rule 176 (p -> p % exp .)
    +               reduce using rule 176 (p -> p % exp .)
    -               reduce using rule 176 (p -> p % exp .)
    :               reduce using rule 176 (p -> p % exp .)
    EQEQ            reduce using rule 176 (p -> p % exp .)
    DISTINTO        reduce using rule 176 (p -> p % exp .)
    >               reduce using rule 176 (p -> p % exp .)
    <               reduce using rule 176 (p -> p % exp .)
    ,               reduce using rule 176 (p -> p % exp .)
    ]               reduce using rule 176 (p -> p % exp .)
    )               reduce using rule 176 (p -> p % exp .)
    ;               reduce using rule 176 (p -> p % exp .)
    }               reduce using rule 176 (p -> p % exp .)
    AND             reduce using rule 176 (p -> p % exp .)
    OR              reduce using rule 176 (p -> p % exp .)
    ?               reduce using rule 176 (p -> p % exp .)
    ^               shift and go to state 220


state 355

    (180) p -> p * valoresMat .
    (188) exp -> valoresMat . ^ iSing
    (190) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 180 (p -> p * valoresMat .)
    /               reduce using rule 180 (p -> p * valoresMat .)
    %               reduce using rule 180 (p -> p * valoresMat .)
    +               reduce using rule 180 (p -> p * valoresMat .)
    -               reduce using rule 180 (p -> p * valoresMat .)
    :               reduce using rule 180 (p -> p * valoresMat .)
    EQEQ            reduce using rule 180 (p -> p * valoresMat .)
    DISTINTO        reduce using rule 180 (p -> p * valoresMat .)
    >               reduce using rule 180 (p -> p * valoresMat .)
    <               reduce using rule 180 (p -> p * valoresMat .)
    ,               reduce using rule 180 (p -> p * valoresMat .)
    ]               reduce using rule 180 (p -> p * valoresMat .)
    )               reduce using rule 180 (p -> p * valoresMat .)
    ;               reduce using rule 180 (p -> p * valoresMat .)
    }               reduce using rule 180 (p -> p * valoresMat .)
    AND             reduce using rule 180 (p -> p * valoresMat .)
    OR              reduce using rule 180 (p -> p * valoresMat .)
    ?               reduce using rule 180 (p -> p * valoresMat .)
    ^               shift and go to state 161


state 356

    (174) p -> p * exp .
    (187) exp -> exp . ^ iSing
    (189) exp -> exp . ^ valoresMat

    *               reduce using rule 174 (p -> p * exp .)
    /               reduce using rule 174 (p -> p * exp .)
    %               reduce using rule 174 (p -> p * exp .)
    +               reduce using rule 174 (p -> p * exp .)
    -               reduce using rule 174 (p -> p * exp .)
    :               reduce using rule 174 (p -> p * exp .)
    EQEQ            reduce using rule 174 (p -> p * exp .)
    DISTINTO        reduce using rule 174 (p -> p * exp .)
    >               reduce using rule 174 (p -> p * exp .)
    <               reduce using rule 174 (p -> p * exp .)
    ,               reduce using rule 174 (p -> p * exp .)
    ]               reduce using rule 174 (p -> p * exp .)
    )               reduce using rule 174 (p -> p * exp .)
    ;               reduce using rule 174 (p -> p * exp .)
    }               reduce using rule 174 (p -> p * exp .)
    AND             reduce using rule 174 (p -> p * exp .)
    OR              reduce using rule 174 (p -> p * exp .)
    ?               reduce using rule 174 (p -> p * exp .)
    ^               shift and go to state 220


state 357

    (181) p -> p / valoresMat .
    (188) exp -> valoresMat . ^ iSing
    (190) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 181 (p -> p / valoresMat .)
    /               reduce using rule 181 (p -> p / valoresMat .)
    %               reduce using rule 181 (p -> p / valoresMat .)
    +               reduce using rule 181 (p -> p / valoresMat .)
    -               reduce using rule 181 (p -> p / valoresMat .)
    :               reduce using rule 181 (p -> p / valoresMat .)
    EQEQ            reduce using rule 181 (p -> p / valoresMat .)
    DISTINTO        reduce using rule 181 (p -> p / valoresMat .)
    >               reduce using rule 181 (p -> p / valoresMat .)
    <               reduce using rule 181 (p -> p / valoresMat .)
    ,               reduce using rule 181 (p -> p / valoresMat .)
    ]               reduce using rule 181 (p -> p / valoresMat .)
    )               reduce using rule 181 (p -> p / valoresMat .)
    ;               reduce using rule 181 (p -> p / valoresMat .)
    }               reduce using rule 181 (p -> p / valoresMat .)
    AND             reduce using rule 181 (p -> p / valoresMat .)
    OR              reduce using rule 181 (p -> p / valoresMat .)
    ?               reduce using rule 181 (p -> p / valoresMat .)
    ^               shift and go to state 161


state 358

    (175) p -> p / exp .
    (187) exp -> exp . ^ iSing
    (189) exp -> exp . ^ valoresMat

    *               reduce using rule 175 (p -> p / exp .)
    /               reduce using rule 175 (p -> p / exp .)
    %               reduce using rule 175 (p -> p / exp .)
    +               reduce using rule 175 (p -> p / exp .)
    -               reduce using rule 175 (p -> p / exp .)
    :               reduce using rule 175 (p -> p / exp .)
    EQEQ            reduce using rule 175 (p -> p / exp .)
    DISTINTO        reduce using rule 175 (p -> p / exp .)
    >               reduce using rule 175 (p -> p / exp .)
    <               reduce using rule 175 (p -> p / exp .)
    ,               reduce using rule 175 (p -> p / exp .)
    ]               reduce using rule 175 (p -> p / exp .)
    )               reduce using rule 175 (p -> p / exp .)
    ;               reduce using rule 175 (p -> p / exp .)
    }               reduce using rule 175 (p -> p / exp .)
    AND             reduce using rule 175 (p -> p / exp .)
    OR              reduce using rule 175 (p -> p / exp .)
    ?               reduce using rule 175 (p -> p / exp .)
    ^               shift and go to state 220


state 359

    (133) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (206) expBool -> valoresBool . OR and
    (208) expBool -> valoresBool . OR valoresBool
    (211) and -> valoresBool . AND eq
    (213) and -> valoresBool . AND valoresBool

    ?               shift and go to state 405
    OR              shift and go to state 166
    AND             shift and go to state 165


state 360

    (203) valoresBool -> ( ternarioBool . )

    )               shift and go to state 406


state 361

    (248) parenBool -> ( expBool . )
    (134) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> expBool . OR and
    (207) expBool -> expBool . OR valoresBool

    )               shift and go to state 327
    ?               shift and go to state 407
    OR              shift and go to state 203


state 362

    (189) exp -> exp ^ valoresMat .

    ^               reduce using rule 189 (exp -> exp ^ valoresMat .)
    *               reduce using rule 189 (exp -> exp ^ valoresMat .)
    /               reduce using rule 189 (exp -> exp ^ valoresMat .)
    %               reduce using rule 189 (exp -> exp ^ valoresMat .)
    +               reduce using rule 189 (exp -> exp ^ valoresMat .)
    -               reduce using rule 189 (exp -> exp ^ valoresMat .)
    ,               reduce using rule 189 (exp -> exp ^ valoresMat .)
    }               reduce using rule 189 (exp -> exp ^ valoresMat .)
    EQEQ            reduce using rule 189 (exp -> exp ^ valoresMat .)
    DISTINTO        reduce using rule 189 (exp -> exp ^ valoresMat .)
    >               reduce using rule 189 (exp -> exp ^ valoresMat .)
    <               reduce using rule 189 (exp -> exp ^ valoresMat .)
    :               reduce using rule 189 (exp -> exp ^ valoresMat .)
    )               reduce using rule 189 (exp -> exp ^ valoresMat .)
    ]               reduce using rule 189 (exp -> exp ^ valoresMat .)
    ;               reduce using rule 189 (exp -> exp ^ valoresMat .)
    AND             reduce using rule 189 (exp -> exp ^ valoresMat .)
    OR              reduce using rule 189 (exp -> exp ^ valoresMat .)
    ?               reduce using rule 189 (exp -> exp ^ valoresMat .)


state 363

    (187) exp -> exp ^ iSing .

    ^               reduce using rule 187 (exp -> exp ^ iSing .)
    *               reduce using rule 187 (exp -> exp ^ iSing .)
    /               reduce using rule 187 (exp -> exp ^ iSing .)
    %               reduce using rule 187 (exp -> exp ^ iSing .)
    +               reduce using rule 187 (exp -> exp ^ iSing .)
    -               reduce using rule 187 (exp -> exp ^ iSing .)
    ,               reduce using rule 187 (exp -> exp ^ iSing .)
    }               reduce using rule 187 (exp -> exp ^ iSing .)
    EQEQ            reduce using rule 187 (exp -> exp ^ iSing .)
    DISTINTO        reduce using rule 187 (exp -> exp ^ iSing .)
    >               reduce using rule 187 (exp -> exp ^ iSing .)
    <               reduce using rule 187 (exp -> exp ^ iSing .)
    :               reduce using rule 187 (exp -> exp ^ iSing .)
    )               reduce using rule 187 (exp -> exp ^ iSing .)
    ]               reduce using rule 187 (exp -> exp ^ iSing .)
    ;               reduce using rule 187 (exp -> exp ^ iSing .)
    AND             reduce using rule 187 (exp -> exp ^ iSing .)
    OR              reduce using rule 187 (exp -> exp ^ iSing .)
    ?               reduce using rule 187 (exp -> exp ^ iSing .)


state 364

    (92) reg -> { campos } .

    .               reduce using rule 92 (reg -> { campos } .)
    ,               reduce using rule 92 (reg -> { campos } .)
    ]               reduce using rule 92 (reg -> { campos } .)
    )               reduce using rule 92 (reg -> { campos } .)
    ;               reduce using rule 92 (reg -> { campos } .)
    :               reduce using rule 92 (reg -> { campos } .)
    }               reduce using rule 92 (reg -> { campos } .)


state 365

    (93) campos -> ID : . valores , campos
    (94) campos -> ID : . valores
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (92) reg -> . { campos }
    (100) ternario -> . ternarioMat
    (101) ternario -> . ternarioBool
    (102) ternario -> . ( ternarioMat )
    (103) ternario -> . ( ternarioBool )
    (104) ternario -> . ternarioVars
    (105) ternario -> . ( ternarioVars )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    ?               reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 408
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 366

    (155) varAsig -> ID . ID = . valores
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (92) reg -> . { campos }
    (100) ternario -> . ternarioMat
    (101) ternario -> . ternarioBool
    (102) ternario -> . ( ternarioMat )
    (103) ternario -> . ( ternarioBool )
    (104) ternario -> . ternarioVars
    (105) ternario -> . ( ternarioVars )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    ?               reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 409
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 367

    (59) vecVal -> ID [ expresion ] .

    .               reduce using rule 59 (vecVal -> ID [ expresion ] .)
    [               reduce using rule 59 (vecVal -> ID [ expresion ] .)
    ?               reduce using rule 59 (vecVal -> ID [ expresion ] .)
    OR              reduce using rule 59 (vecVal -> ID [ expresion ] .)
    AND             reduce using rule 59 (vecVal -> ID [ expresion ] .)
    +               reduce using rule 59 (vecVal -> ID [ expresion ] .)
    -               reduce using rule 59 (vecVal -> ID [ expresion ] .)
    *               reduce using rule 59 (vecVal -> ID [ expresion ] .)
    /               reduce using rule 59 (vecVal -> ID [ expresion ] .)
    %               reduce using rule 59 (vecVal -> ID [ expresion ] .)
    ^               reduce using rule 59 (vecVal -> ID [ expresion ] .)
    EQEQ            reduce using rule 59 (vecVal -> ID [ expresion ] .)
    DISTINTO        reduce using rule 59 (vecVal -> ID [ expresion ] .)
    >               reduce using rule 59 (vecVal -> ID [ expresion ] .)
    <               reduce using rule 59 (vecVal -> ID [ expresion ] .)
    MASMAS          reduce using rule 59 (vecVal -> ID [ expresion ] .)
    MENOSMENOS      reduce using rule 59 (vecVal -> ID [ expresion ] .)
    ;               reduce using rule 59 (vecVal -> ID [ expresion ] .)
    )               reduce using rule 59 (vecVal -> ID [ expresion ] .)
    :               reduce using rule 59 (vecVal -> ID [ expresion ] .)
    MULEQ           reduce using rule 59 (vecVal -> ID [ expresion ] .)
    DIVEQ           reduce using rule 59 (vecVal -> ID [ expresion ] .)
    MASEQ           reduce using rule 59 (vecVal -> ID [ expresion ] .)
    MENOSEQ         reduce using rule 59 (vecVal -> ID [ expresion ] .)
    =               reduce using rule 59 (vecVal -> ID [ expresion ] .)
    ,               reduce using rule 59 (vecVal -> ID [ expresion ] .)
    ]               reduce using rule 59 (vecVal -> ID [ expresion ] .)
    }               reduce using rule 59 (vecVal -> ID [ expresion ] .)


state 368

    (62) vecVal -> ID [ INT ] .

    .               reduce using rule 62 (vecVal -> ID [ INT ] .)
    [               reduce using rule 62 (vecVal -> ID [ INT ] .)
    ?               reduce using rule 62 (vecVal -> ID [ INT ] .)
    OR              reduce using rule 62 (vecVal -> ID [ INT ] .)
    AND             reduce using rule 62 (vecVal -> ID [ INT ] .)
    +               reduce using rule 62 (vecVal -> ID [ INT ] .)
    -               reduce using rule 62 (vecVal -> ID [ INT ] .)
    *               reduce using rule 62 (vecVal -> ID [ INT ] .)
    /               reduce using rule 62 (vecVal -> ID [ INT ] .)
    %               reduce using rule 62 (vecVal -> ID [ INT ] .)
    ^               reduce using rule 62 (vecVal -> ID [ INT ] .)
    EQEQ            reduce using rule 62 (vecVal -> ID [ INT ] .)
    DISTINTO        reduce using rule 62 (vecVal -> ID [ INT ] .)
    >               reduce using rule 62 (vecVal -> ID [ INT ] .)
    <               reduce using rule 62 (vecVal -> ID [ INT ] .)
    MASMAS          reduce using rule 62 (vecVal -> ID [ INT ] .)
    MENOSMENOS      reduce using rule 62 (vecVal -> ID [ INT ] .)
    ;               reduce using rule 62 (vecVal -> ID [ INT ] .)
    )               reduce using rule 62 (vecVal -> ID [ INT ] .)
    :               reduce using rule 62 (vecVal -> ID [ INT ] .)
    MULEQ           reduce using rule 62 (vecVal -> ID [ INT ] .)
    DIVEQ           reduce using rule 62 (vecVal -> ID [ INT ] .)
    MASEQ           reduce using rule 62 (vecVal -> ID [ INT ] .)
    MENOSEQ         reduce using rule 62 (vecVal -> ID [ INT ] .)
    =               reduce using rule 62 (vecVal -> ID [ INT ] .)
    ,               reduce using rule 62 (vecVal -> ID [ INT ] .)
    ]               reduce using rule 62 (vecVal -> ID [ INT ] .)
    }               reduce using rule 62 (vecVal -> ID [ INT ] .)


state 369

    (133) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (124) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (206) expBool -> valoresBool . OR and
    (208) expBool -> valoresBool . OR valoresBool
    (211) and -> valoresBool . AND eq
    (213) and -> valoresBool . AND valoresBool

    ?               shift and go to state 410
    OR              shift and go to state 166
    AND             shift and go to state 165


state 370

    (164) valoresMat -> ( . ternarioMat )
    (203) valoresBool -> ( . ternarioBool )
    (232) tCompareEQ -> ( . ternarioBool )
    (233) tCompareEQ -> ( . ternarioMat )
    (240) tCompare -> ( . ternarioMat )
    (197) paren -> ( . eMat )
    (198) paren -> ( . valoresMat )
    (248) parenBool -> ( . expBool )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (56) vec -> . [ elem ]
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 177
    BOOL            shift and go to state 187
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    valoresBool                    shift and go to state 321
    ternarioMat                    shift and go to state 322
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 323
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    expBool                        shift and go to state 324
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 371

    (233) tCompareEQ -> ( ternarioMat . )
    (240) tCompare -> ( ternarioMat . )
    (164) valoresMat -> ( ternarioMat . )

    )               shift and go to state 411


state 372

    (248) parenBool -> ( expBool . )
    (134) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (125) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (205) expBool -> expBool . OR and
    (207) expBool -> expBool . OR valoresBool

    )               shift and go to state 327
    ?               shift and go to state 412
    OR              shift and go to state 203


state 373

    (6) lAbierta -> IF ( cosaBooleana ) . linea
    (7) lAbierta -> IF ( cosaBooleana ) . { g } ELSE lAbierta
    (8) lAbierta -> IF ( cosaBooleana ) . lCerrada ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) . { g }
    (14) lCerrada -> IF ( cosaBooleana ) . { g } ELSE { g }
    (15) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE { g }
    (16) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) . { g } ELSE lCerrada
    (18) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE COMMENT com lCerrada
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (150) varAsig -> . variable MULEQ valores
    (151) varAsig -> . variable DIVEQ valores
    (152) varAsig -> . variable MASEQ valores
    (153) varAsig -> . variable MENOSEQ valores
    (154) varAsig -> . variable = valores
    (155) varAsig -> . ID . ID = valores
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 417
    COMMENT         shift and go to state 414
    IF              shift and go to state 415
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    varsOps                        shift and go to state 13
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 416
    lAbierta                       shift and go to state 30
    linea                          shift and go to state 413
    loop                           shift and go to state 418

state 374

    (50) funcString -> CAPITALIZAR ( valores ) .

    +               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    -               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    *               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    /               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    %               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    ^               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    ,               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    ]               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    EQEQ            reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    DISTINTO        reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    >               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    <               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    )               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    ;               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    AND             reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    OR              reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    ?               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    :               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    }               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)


state 375

    (48) funcInt -> MULTIESCALAR ( valores , . valores param )
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (92) reg -> . { campos }
    (100) ternario -> . ternarioMat
    (101) ternario -> . ternarioBool
    (102) ternario -> . ( ternarioMat )
    (103) ternario -> . ( ternarioBool )
    (104) ternario -> . ternarioVars
    (105) ternario -> . ( ternarioVars )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    ?               reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    valoresBool                    shift and go to state 73
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 419
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 376

    (24) lCerrada -> loop COMMENT com lCerrada .

    COMMENT         reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    IF              reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    DO              reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    WHILE           reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    FOR             reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    RETURN          reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    ;               reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    MENOSMENOS      reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    MASMAS          reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    ID              reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    PRINT           reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    MULTIESCALAR    reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    LENGTH          reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    CAPITALIZAR     reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    COLINEALES      reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    [               reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    }               reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    $end            reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    ELSE            reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)


state 377

    (22) lCerrada -> loop { g } .

    COMMENT         reduce using rule 22 (lCerrada -> loop { g } .)
    IF              reduce using rule 22 (lCerrada -> loop { g } .)
    DO              reduce using rule 22 (lCerrada -> loop { g } .)
    WHILE           reduce using rule 22 (lCerrada -> loop { g } .)
    FOR             reduce using rule 22 (lCerrada -> loop { g } .)
    RETURN          reduce using rule 22 (lCerrada -> loop { g } .)
    ;               reduce using rule 22 (lCerrada -> loop { g } .)
    MENOSMENOS      reduce using rule 22 (lCerrada -> loop { g } .)
    MASMAS          reduce using rule 22 (lCerrada -> loop { g } .)
    ID              reduce using rule 22 (lCerrada -> loop { g } .)
    PRINT           reduce using rule 22 (lCerrada -> loop { g } .)
    MULTIESCALAR    reduce using rule 22 (lCerrada -> loop { g } .)
    LENGTH          reduce using rule 22 (lCerrada -> loop { g } .)
    CAPITALIZAR     reduce using rule 22 (lCerrada -> loop { g } .)
    COLINEALES      reduce using rule 22 (lCerrada -> loop { g } .)
    [               reduce using rule 22 (lCerrada -> loop { g } .)
    }               reduce using rule 22 (lCerrada -> loop { g } .)
    $end            reduce using rule 22 (lCerrada -> loop { g } .)
    ELSE            reduce using rule 22 (lCerrada -> loop { g } .)


state 378

    (60) vecVal -> vec [ expresion ] .

    .               reduce using rule 60 (vecVal -> vec [ expresion ] .)
    [               reduce using rule 60 (vecVal -> vec [ expresion ] .)
    ?               reduce using rule 60 (vecVal -> vec [ expresion ] .)
    OR              reduce using rule 60 (vecVal -> vec [ expresion ] .)
    AND             reduce using rule 60 (vecVal -> vec [ expresion ] .)
    +               reduce using rule 60 (vecVal -> vec [ expresion ] .)
    -               reduce using rule 60 (vecVal -> vec [ expresion ] .)
    *               reduce using rule 60 (vecVal -> vec [ expresion ] .)
    /               reduce using rule 60 (vecVal -> vec [ expresion ] .)
    %               reduce using rule 60 (vecVal -> vec [ expresion ] .)
    ^               reduce using rule 60 (vecVal -> vec [ expresion ] .)
    EQEQ            reduce using rule 60 (vecVal -> vec [ expresion ] .)
    DISTINTO        reduce using rule 60 (vecVal -> vec [ expresion ] .)
    >               reduce using rule 60 (vecVal -> vec [ expresion ] .)
    <               reduce using rule 60 (vecVal -> vec [ expresion ] .)
    MASMAS          reduce using rule 60 (vecVal -> vec [ expresion ] .)
    MENOSMENOS      reduce using rule 60 (vecVal -> vec [ expresion ] .)
    ;               reduce using rule 60 (vecVal -> vec [ expresion ] .)
    )               reduce using rule 60 (vecVal -> vec [ expresion ] .)
    :               reduce using rule 60 (vecVal -> vec [ expresion ] .)
    MULEQ           reduce using rule 60 (vecVal -> vec [ expresion ] .)
    DIVEQ           reduce using rule 60 (vecVal -> vec [ expresion ] .)
    MASEQ           reduce using rule 60 (vecVal -> vec [ expresion ] .)
    MENOSEQ         reduce using rule 60 (vecVal -> vec [ expresion ] .)
    =               reduce using rule 60 (vecVal -> vec [ expresion ] .)
    ,               reduce using rule 60 (vecVal -> vec [ expresion ] .)
    ]               reduce using rule 60 (vecVal -> vec [ expresion ] .)
    }               reduce using rule 60 (vecVal -> vec [ expresion ] .)


state 379

    (63) vecVal -> vec [ INT ] .

    .               reduce using rule 63 (vecVal -> vec [ INT ] .)
    [               reduce using rule 63 (vecVal -> vec [ INT ] .)
    ?               reduce using rule 63 (vecVal -> vec [ INT ] .)
    OR              reduce using rule 63 (vecVal -> vec [ INT ] .)
    AND             reduce using rule 63 (vecVal -> vec [ INT ] .)
    +               reduce using rule 63 (vecVal -> vec [ INT ] .)
    -               reduce using rule 63 (vecVal -> vec [ INT ] .)
    *               reduce using rule 63 (vecVal -> vec [ INT ] .)
    /               reduce using rule 63 (vecVal -> vec [ INT ] .)
    %               reduce using rule 63 (vecVal -> vec [ INT ] .)
    ^               reduce using rule 63 (vecVal -> vec [ INT ] .)
    EQEQ            reduce using rule 63 (vecVal -> vec [ INT ] .)
    DISTINTO        reduce using rule 63 (vecVal -> vec [ INT ] .)
    >               reduce using rule 63 (vecVal -> vec [ INT ] .)
    <               reduce using rule 63 (vecVal -> vec [ INT ] .)
    MASMAS          reduce using rule 63 (vecVal -> vec [ INT ] .)
    MENOSMENOS      reduce using rule 63 (vecVal -> vec [ INT ] .)
    ;               reduce using rule 63 (vecVal -> vec [ INT ] .)
    )               reduce using rule 63 (vecVal -> vec [ INT ] .)
    :               reduce using rule 63 (vecVal -> vec [ INT ] .)
    MULEQ           reduce using rule 63 (vecVal -> vec [ INT ] .)
    DIVEQ           reduce using rule 63 (vecVal -> vec [ INT ] .)
    MASEQ           reduce using rule 63 (vecVal -> vec [ INT ] .)
    MENOSEQ         reduce using rule 63 (vecVal -> vec [ INT ] .)
    =               reduce using rule 63 (vecVal -> vec [ INT ] .)
    ,               reduce using rule 63 (vecVal -> vec [ INT ] .)
    ]               reduce using rule 63 (vecVal -> vec [ INT ] .)
    }               reduce using rule 63 (vecVal -> vec [ INT ] .)


state 380

    (27) lCerrada -> DO COMMENT com lCerrada WHILE . ( valores ) ;

    (               shift and go to state 420


state 381

    (14) lCerrada -> IF ( cosaBooleana ) . { g } ELSE { g }
    (15) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE { g }
    (16) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) . { g } ELSE lCerrada
    (18) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE COMMENT com lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (150) varAsig -> . variable MULEQ valores
    (151) varAsig -> . variable DIVEQ valores
    (152) varAsig -> . variable MASEQ valores
    (153) varAsig -> . variable MENOSEQ valores
    (154) varAsig -> . variable = valores
    (155) varAsig -> . ID . ID = valores
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 422
    COMMENT         shift and go to state 414
    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 421
    varsOps                        shift and go to state 13
    loop                           shift and go to state 39

state 382

    (26) lCerrada -> DO lCerrada WHILE ( valores . ) ;

    )               shift and go to state 423


state 383

    (25) lCerrada -> DO { g } WHILE . ( valores ) ;

    (               shift and go to state 424


state 384

    (51) funcBool -> COLINEALES ( valores , valores . )

    )               shift and go to state 425


state 385

    (142) varYVals -> vecVal . varYVals .

    MASMAS          reduce using rule 142 (varYVals -> vecVal . varYVals .)
    MENOSMENOS      reduce using rule 142 (varYVals -> vecVal . varYVals .)
    MULEQ           reduce using rule 142 (varYVals -> vecVal . varYVals .)
    DIVEQ           reduce using rule 142 (varYVals -> vecVal . varYVals .)
    MASEQ           reduce using rule 142 (varYVals -> vecVal . varYVals .)
    MENOSEQ         reduce using rule 142 (varYVals -> vecVal . varYVals .)
    =               reduce using rule 142 (varYVals -> vecVal . varYVals .)
    ;               reduce using rule 142 (varYVals -> vecVal . varYVals .)
    ,               reduce using rule 142 (varYVals -> vecVal . varYVals .)
    ]               reduce using rule 142 (varYVals -> vecVal . varYVals .)
    +               reduce using rule 142 (varYVals -> vecVal . varYVals .)
    -               reduce using rule 142 (varYVals -> vecVal . varYVals .)
    *               reduce using rule 142 (varYVals -> vecVal . varYVals .)
    /               reduce using rule 142 (varYVals -> vecVal . varYVals .)
    %               reduce using rule 142 (varYVals -> vecVal . varYVals .)
    ^               reduce using rule 142 (varYVals -> vecVal . varYVals .)
    OR              reduce using rule 142 (varYVals -> vecVal . varYVals .)
    AND             reduce using rule 142 (varYVals -> vecVal . varYVals .)
    ?               reduce using rule 142 (varYVals -> vecVal . varYVals .)
    EQEQ            reduce using rule 142 (varYVals -> vecVal . varYVals .)
    DISTINTO        reduce using rule 142 (varYVals -> vecVal . varYVals .)
    >               reduce using rule 142 (varYVals -> vecVal . varYVals .)
    <               reduce using rule 142 (varYVals -> vecVal . varYVals .)
    )               reduce using rule 142 (varYVals -> vecVal . varYVals .)
    :               reduce using rule 142 (varYVals -> vecVal . varYVals .)
    }               reduce using rule 142 (varYVals -> vecVal . varYVals .)


state 386

    (34) loop -> FOR ( primParam ; valores . ; tercerParam )

    ;               shift and go to state 426


state 387

    (232) tCompareEQ -> ( ternarioBool . )

    )               shift and go to state 427


state 388

    (133) ternarioBool -> valoresBool ? valoresTernarioBool : . valoresTernarioBool
    (110) ternarioVars -> valoresBool ? valoresTernarioBool : . valoresTernarioVars
    (135) valoresTernarioBool -> . BOOL
    (136) valoresTernarioBool -> . funcBool
    (137) valoresTernarioBool -> . ternarioBool
    (138) valoresTernarioBool -> . ( ternarioBool )
    (139) valoresTernarioBool -> . expBool
    (116) valoresTernarioVars -> . reg
    (117) valoresTernarioVars -> . vec
    (118) valoresTernarioVars -> . ternarioVars
    (119) valoresTernarioVars -> . ( ternarioVars )
    (120) valoresTernarioVars -> . atributos
    (121) valoresTernarioVars -> . varsOps
    (122) valoresTernarioVars -> . varYVals
    (123) valoresTernarioVars -> . RES
    (51) funcBool -> . COLINEALES ( valores , valores )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (92) reg -> . { campos }
    (56) vec -> . [ elem ]
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (248) parenBool -> . ( expBool )
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )

    BOOL            shift and go to state 305
    (               shift and go to state 433
    RES             shift and go to state 288
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    vecVal                         shift and go to state 290
    eMat                           shift and go to state 228
    p                              shift and go to state 96
    valoresTernarioBool            shift and go to state 429
    valoresBool                    shift and go to state 428
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 430
    expBool                        shift and go to state 431
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    tCompareEQ                     shift and go to state 75
    varsOps                        shift and go to state 432
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 434
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 389

    (106) ternarioVars -> valoresBool ? valoresTernarioVars : . valoresTernarioVars
    (107) ternarioVars -> valoresBool ? valoresTernarioVars : . valoresTernarioMat
    (109) ternarioVars -> valoresBool ? valoresTernarioVars : . valoresTernarioBool
    (116) valoresTernarioVars -> . reg
    (117) valoresTernarioVars -> . vec
    (118) valoresTernarioVars -> . ternarioVars
    (119) valoresTernarioVars -> . ( ternarioVars )
    (120) valoresTernarioVars -> . atributos
    (121) valoresTernarioVars -> . varsOps
    (122) valoresTernarioVars -> . varYVals
    (123) valoresTernarioVars -> . RES
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (135) valoresTernarioBool -> . BOOL
    (136) valoresTernarioBool -> . funcBool
    (137) valoresTernarioBool -> . ternarioBool
    (138) valoresTernarioBool -> . ( ternarioBool )
    (139) valoresTernarioBool -> . expBool
    (92) reg -> . { campos }
    (56) vec -> . [ elem ]
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    (               shift and go to state 441
    RES             shift and go to state 288
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    BOOL            shift and go to state 305
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    COLINEALES      shift and go to state 4
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    atributos                      shift and go to state 310
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 435
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 436
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 437
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 438
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 440
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 442
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 439

state 390

    (124) ternarioMat -> valoresBool ? valoresTernarioMat : . valoresTernarioMat
    (108) ternarioVars -> valoresBool ? valoresTernarioMat : . valoresTernarioVars
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (116) valoresTernarioVars -> . reg
    (117) valoresTernarioVars -> . vec
    (118) valoresTernarioVars -> . ternarioVars
    (119) valoresTernarioVars -> . ( ternarioVars )
    (120) valoresTernarioVars -> . atributos
    (121) valoresTernarioVars -> . varsOps
    (122) valoresTernarioVars -> . varYVals
    (123) valoresTernarioVars -> . RES
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (92) reg -> . { campos }
    (56) vec -> . [ elem ]
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (51) funcBool -> . COLINEALES ( valores , valores )
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    (               shift and go to state 444
    RES             shift and go to state 288
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    BOOL            shift and go to state 187
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    atributos                      shift and go to state 310
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 443
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 445
    exp                            shift and go to state 100
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 446
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 297
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 309
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 447

state 391

    (132) valoresTernarioMat -> ( ternarioMat . )
    (164) valoresMat -> ( ternarioMat . )
    (233) tCompareEQ -> ( ternarioMat . )
    (240) tCompare -> ( ternarioMat . )

    )               shift and go to state 448


state 392

    (138) valoresTernarioBool -> ( ternarioBool . )
    (203) valoresBool -> ( ternarioBool . )
    (232) tCompareEQ -> ( ternarioBool . )

    )               shift and go to state 449


state 393

    (119) valoresTernarioVars -> ( ternarioVars . )

    )               shift and go to state 450


state 394

    (124) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (135) valoresTernarioBool -> . BOOL
    (136) valoresTernarioBool -> . funcBool
    (137) valoresTernarioBool -> . ternarioBool
    (138) valoresTernarioBool -> . ( ternarioBool )
    (139) valoresTernarioBool -> . expBool
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (56) vec -> . [ elem ]
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    (               shift and go to state 453
    BOOL            shift and go to state 305
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    COLINEALES      shift and go to state 4
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 321
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 451
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 452
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    expBool                        shift and go to state 454
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 395

    (164) valoresMat -> ( ternarioMat ) .
    (233) tCompareEQ -> ( ternarioMat ) .
    (240) tCompare -> ( ternarioMat ) .

    )               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    +               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    ^               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    EQEQ            reduce using rule 233 (tCompareEQ -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 233 (tCompareEQ -> ( ternarioMat ) .)
    >               reduce using rule 240 (tCompare -> ( ternarioMat ) .)
    <               reduce using rule 240 (tCompare -> ( ternarioMat ) .)


state 396

    (203) valoresBool -> ( ternarioBool ) .
    (232) tCompareEQ -> ( ternarioBool ) .

    ?               reduce using rule 203 (valoresBool -> ( ternarioBool ) .)
    OR              reduce using rule 203 (valoresBool -> ( ternarioBool ) .)
    AND             reduce using rule 203 (valoresBool -> ( ternarioBool ) .)
    ,               reduce using rule 203 (valoresBool -> ( ternarioBool ) .)
    ]               reduce using rule 203 (valoresBool -> ( ternarioBool ) .)
    )               reduce using rule 203 (valoresBool -> ( ternarioBool ) .)
    ;               reduce using rule 203 (valoresBool -> ( ternarioBool ) .)
    :               reduce using rule 203 (valoresBool -> ( ternarioBool ) .)
    }               reduce using rule 203 (valoresBool -> ( ternarioBool ) .)
    EQEQ            reduce using rule 232 (tCompareEQ -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 232 (tCompareEQ -> ( ternarioBool ) .)


state 397

    (125) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (134) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (135) valoresTernarioBool -> . BOOL
    (136) valoresTernarioBool -> . funcBool
    (137) valoresTernarioBool -> . ternarioBool
    (138) valoresTernarioBool -> . ( ternarioBool )
    (139) valoresTernarioBool -> . expBool
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (56) vec -> . [ elem ]
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    (               shift and go to state 453
    BOOL            shift and go to state 305
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    COLINEALES      shift and go to state 4
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 321
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 455
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 456
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    expBool                        shift and go to state 454
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 398

    (124) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (51) funcBool -> . COLINEALES ( valores , valores )
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (56) vec -> . [ elem ]
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    (               shift and go to state 457
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    BOOL            shift and go to state 187
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresBool                    shift and go to state 329
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 452
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    expBool                        shift and go to state 332
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 399

    (164) valoresMat -> ( ternarioMat ) .

    ^               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    +               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    ,               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    ]               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    EQEQ            reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    >               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    <               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    )               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    ;               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    AND             reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    OR              reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    ?               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    :               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    }               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)


state 400

    (125) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (51) funcBool -> . COLINEALES ( valores , valores )
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (56) vec -> . [ elem ]
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    (               shift and go to state 457
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    BOOL            shift and go to state 187
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresBool                    shift and go to state 329
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 456
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    expBool                        shift and go to state 332
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 401

    (134) ternarioBool -> expBool ? valoresTernarioBool : . valoresTernarioBool
    (115) ternarioVars -> expBool ? valoresTernarioBool : . valoresTernarioVars
    (135) valoresTernarioBool -> . BOOL
    (136) valoresTernarioBool -> . funcBool
    (137) valoresTernarioBool -> . ternarioBool
    (138) valoresTernarioBool -> . ( ternarioBool )
    (139) valoresTernarioBool -> . expBool
    (116) valoresTernarioVars -> . reg
    (117) valoresTernarioVars -> . vec
    (118) valoresTernarioVars -> . ternarioVars
    (119) valoresTernarioVars -> . ( ternarioVars )
    (120) valoresTernarioVars -> . atributos
    (121) valoresTernarioVars -> . varsOps
    (122) valoresTernarioVars -> . varYVals
    (123) valoresTernarioVars -> . RES
    (51) funcBool -> . COLINEALES ( valores , valores )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (92) reg -> . { campos }
    (56) vec -> . [ elem ]
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (248) parenBool -> . ( expBool )
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )

    BOOL            shift and go to state 305
    (               shift and go to state 433
    RES             shift and go to state 288
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 428
    eMat                           shift and go to state 228
    p                              shift and go to state 96
    valoresTernarioBool            shift and go to state 458
    vecVal                         shift and go to state 290
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 459
    expBool                        shift and go to state 431
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    tCompareEQ                     shift and go to state 75
    varsOps                        shift and go to state 432
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 434
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 402

    (111) ternarioVars -> expBool ? valoresTernarioVars : . valoresTernarioVars
    (112) ternarioVars -> expBool ? valoresTernarioVars : . valoresTernarioMat
    (114) ternarioVars -> expBool ? valoresTernarioVars : . valoresTernarioBool
    (116) valoresTernarioVars -> . reg
    (117) valoresTernarioVars -> . vec
    (118) valoresTernarioVars -> . ternarioVars
    (119) valoresTernarioVars -> . ( ternarioVars )
    (120) valoresTernarioVars -> . atributos
    (121) valoresTernarioVars -> . varsOps
    (122) valoresTernarioVars -> . varYVals
    (123) valoresTernarioVars -> . RES
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (135) valoresTernarioBool -> . BOOL
    (136) valoresTernarioBool -> . funcBool
    (137) valoresTernarioBool -> . ternarioBool
    (138) valoresTernarioBool -> . ( ternarioBool )
    (139) valoresTernarioBool -> . expBool
    (92) reg -> . { campos }
    (56) vec -> . [ elem ]
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    (               shift and go to state 441
    RES             shift and go to state 288
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    BOOL            shift and go to state 305
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    COLINEALES      shift and go to state 4
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 435
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 460
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 461
    expBool                        shift and go to state 439
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 462
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 440
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 442
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 403

    (125) ternarioMat -> expBool ? valoresTernarioMat : . valoresTernarioMat
    (113) ternarioVars -> expBool ? valoresTernarioMat : . valoresTernarioVars
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (116) valoresTernarioVars -> . reg
    (117) valoresTernarioVars -> . vec
    (118) valoresTernarioVars -> . ternarioVars
    (119) valoresTernarioVars -> . ( ternarioVars )
    (120) valoresTernarioVars -> . atributos
    (121) valoresTernarioVars -> . varsOps
    (122) valoresTernarioVars -> . varYVals
    (123) valoresTernarioVars -> . RES
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (92) reg -> . { campos }
    (56) vec -> . [ elem ]
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (51) funcBool -> . COLINEALES ( valores , valores )
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    (               shift and go to state 444
    RES             shift and go to state 288
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    BOOL            shift and go to state 187
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 443
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 464
    expBool                        shift and go to state 447
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 463
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 297
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 309
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 404

    (240) tCompare -> ( ternarioMat . )
    (164) valoresMat -> ( ternarioMat . )

    )               shift and go to state 465


state 405

    (133) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (135) valoresTernarioBool -> . BOOL
    (136) valoresTernarioBool -> . funcBool
    (137) valoresTernarioBool -> . ternarioBool
    (138) valoresTernarioBool -> . ( ternarioBool )
    (139) valoresTernarioBool -> . expBool
    (51) funcBool -> . COLINEALES ( valores , valores )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (56) vec -> . [ elem ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (248) parenBool -> . ( expBool )
    (92) reg -> . { campos }
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )

    BOOL            shift and go to state 305
    (               shift and go to state 466
    COLINEALES      shift and go to state 4
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    ID              shift and go to state 230
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77

    and                            shift and go to state 60
    atributos                      shift and go to state 191
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    valoresBool                    shift and go to state 359
    eMat                           shift and go to state 228
    p                              shift and go to state 96
    valoresTernarioBool            shift and go to state 451
    mayor                          shift and go to state 81
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    ternarioBool                   shift and go to state 301
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    tCompareEQ                     shift and go to state 75
    varsOps                        shift and go to state 234
    exp                            shift and go to state 100
    varYVals                       shift and go to state 235
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 467

state 406

    (203) valoresBool -> ( ternarioBool ) .

    EQEQ            reduce using rule 203 (valoresBool -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 203 (valoresBool -> ( ternarioBool ) .)
    AND             reduce using rule 203 (valoresBool -> ( ternarioBool ) .)
    OR              reduce using rule 203 (valoresBool -> ( ternarioBool ) .)
    ?               reduce using rule 203 (valoresBool -> ( ternarioBool ) .)
    ,               reduce using rule 203 (valoresBool -> ( ternarioBool ) .)
    ]               reduce using rule 203 (valoresBool -> ( ternarioBool ) .)
    )               reduce using rule 203 (valoresBool -> ( ternarioBool ) .)
    ;               reduce using rule 203 (valoresBool -> ( ternarioBool ) .)
    :               reduce using rule 203 (valoresBool -> ( ternarioBool ) .)
    }               reduce using rule 203 (valoresBool -> ( ternarioBool ) .)


state 407

    (134) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (135) valoresTernarioBool -> . BOOL
    (136) valoresTernarioBool -> . funcBool
    (137) valoresTernarioBool -> . ternarioBool
    (138) valoresTernarioBool -> . ( ternarioBool )
    (139) valoresTernarioBool -> . expBool
    (51) funcBool -> . COLINEALES ( valores , valores )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (56) vec -> . [ elem ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (248) parenBool -> . ( expBool )
    (92) reg -> . { campos }
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )

    BOOL            shift and go to state 305
    (               shift and go to state 466
    COLINEALES      shift and go to state 4
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    ID              shift and go to state 230
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77

    and                            shift and go to state 60
    atributos                      shift and go to state 191
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    valoresBool                    shift and go to state 359
    eMat                           shift and go to state 228
    p                              shift and go to state 96
    valoresTernarioBool            shift and go to state 455
    mayor                          shift and go to state 81
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    ternarioBool                   shift and go to state 301
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    tCompareEQ                     shift and go to state 75
    varsOps                        shift and go to state 234
    exp                            shift and go to state 100
    varYVals                       shift and go to state 235
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 467

state 408

    (93) campos -> ID : valores . , campos
    (94) campos -> ID : valores .

    ,               shift and go to state 468
    }               reduce using rule 94 (campos -> ID : valores .)


state 409

    (155) varAsig -> ID . ID = valores .

    ;               reduce using rule 155 (varAsig -> ID . ID = valores .)
    )               reduce using rule 155 (varAsig -> ID . ID = valores .)


state 410

    (133) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (124) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (135) valoresTernarioBool -> . BOOL
    (136) valoresTernarioBool -> . funcBool
    (137) valoresTernarioBool -> . ternarioBool
    (138) valoresTernarioBool -> . ( ternarioBool )
    (139) valoresTernarioBool -> . expBool
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (92) reg -> . { campos }
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (56) vec -> . [ elem ]
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    BOOL            shift and go to state 305
    (               shift and go to state 471
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    COLINEALES      shift and go to state 4
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 451
    valoresBool                    shift and go to state 469
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    expBool                        shift and go to state 473
    ternarioBool                   shift and go to state 301
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 452
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 470
    exp                            shift and go to state 100
    varYVals                       shift and go to state 472
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 411

    (233) tCompareEQ -> ( ternarioMat ) .
    (240) tCompare -> ( ternarioMat ) .
    (164) valoresMat -> ( ternarioMat ) .

    EQEQ            reduce using rule 233 (tCompareEQ -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 233 (tCompareEQ -> ( ternarioMat ) .)
    AND             reduce using rule 233 (tCompareEQ -> ( ternarioMat ) .)
    OR              reduce using rule 233 (tCompareEQ -> ( ternarioMat ) .)
    ?               reduce using rule 233 (tCompareEQ -> ( ternarioMat ) .)
    ,               reduce using rule 233 (tCompareEQ -> ( ternarioMat ) .)
    ]               reduce using rule 233 (tCompareEQ -> ( ternarioMat ) .)
    )               reduce using rule 233 (tCompareEQ -> ( ternarioMat ) .)
    ;               reduce using rule 233 (tCompareEQ -> ( ternarioMat ) .)
    :               reduce using rule 233 (tCompareEQ -> ( ternarioMat ) .)
    }               reduce using rule 233 (tCompareEQ -> ( ternarioMat ) .)
    >               reduce using rule 240 (tCompare -> ( ternarioMat ) .)
    <               reduce using rule 240 (tCompare -> ( ternarioMat ) .)
    +               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    ^               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)


state 412

    (134) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (125) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (135) valoresTernarioBool -> . BOOL
    (136) valoresTernarioBool -> . funcBool
    (137) valoresTernarioBool -> . ternarioBool
    (138) valoresTernarioBool -> . ( ternarioBool )
    (139) valoresTernarioBool -> . expBool
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (92) reg -> . { campos }
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (56) vec -> . [ elem ]
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    BOOL            shift and go to state 305
    (               shift and go to state 471
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    COLINEALES      shift and go to state 4
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 455
    valoresBool                    shift and go to state 469
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    expBool                        shift and go to state 473
    ternarioBool                   shift and go to state 301
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 456
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 470
    exp                            shift and go to state 100
    varYVals                       shift and go to state 472
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 413

    (6) lAbierta -> IF ( cosaBooleana ) linea .

    COMMENT         reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    IF              reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    DO              reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    WHILE           reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    FOR             reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    RETURN          reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    ;               reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    MENOSMENOS      reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    MASMAS          reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    ID              reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    PRINT           reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    MULTIESCALAR    reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    LENGTH          reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    CAPITALIZAR     reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    COLINEALES      reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    [               reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    }               reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    $end            reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)


state 414

    (16) lCerrada -> IF ( cosaBooleana ) COMMENT . com lCerrada ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) COMMENT . com lCerrada ELSE lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT . com lCerrada ELSE COMMENT com lCerrada
    (12) com -> . COMMENT com
    (13) com -> . empty
    (55) empty -> .

    COMMENT         shift and go to state 117
    IF              reduce using rule 55 (empty -> .)
    DO              reduce using rule 55 (empty -> .)
    RETURN          reduce using rule 55 (empty -> .)
    ;               reduce using rule 55 (empty -> .)
    WHILE           reduce using rule 55 (empty -> .)
    FOR             reduce using rule 55 (empty -> .)
    MENOSMENOS      reduce using rule 55 (empty -> .)
    MASMAS          reduce using rule 55 (empty -> .)
    ID              reduce using rule 55 (empty -> .)
    PRINT           reduce using rule 55 (empty -> .)
    MULTIESCALAR    reduce using rule 55 (empty -> .)
    LENGTH          reduce using rule 55 (empty -> .)
    CAPITALIZAR     reduce using rule 55 (empty -> .)
    COLINEALES      reduce using rule 55 (empty -> .)
    [               reduce using rule 55 (empty -> .)

    com                            shift and go to state 474
    empty                          shift and go to state 119

state 415

    (14) lCerrada -> IF . ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF . ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (6) lAbierta -> IF . ( cosaBooleana ) linea
    (7) lAbierta -> IF . ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> IF . ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> IF . ( cosaBooleana ) { g }

    (               shift and go to state 475


state 416

    (8) lAbierta -> IF ( cosaBooleana ) lCerrada . ELSE lAbierta
    (15) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE { g }
    (18) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE COMMENT com lCerrada
    (5) linea -> lCerrada .

    ELSE            shift and go to state 476
    COMMENT         reduce using rule 5 (linea -> lCerrada .)
    IF              reduce using rule 5 (linea -> lCerrada .)
    DO              reduce using rule 5 (linea -> lCerrada .)
    WHILE           reduce using rule 5 (linea -> lCerrada .)
    FOR             reduce using rule 5 (linea -> lCerrada .)
    RETURN          reduce using rule 5 (linea -> lCerrada .)
    ;               reduce using rule 5 (linea -> lCerrada .)
    MENOSMENOS      reduce using rule 5 (linea -> lCerrada .)
    MASMAS          reduce using rule 5 (linea -> lCerrada .)
    ID              reduce using rule 5 (linea -> lCerrada .)
    PRINT           reduce using rule 5 (linea -> lCerrada .)
    MULTIESCALAR    reduce using rule 5 (linea -> lCerrada .)
    LENGTH          reduce using rule 5 (linea -> lCerrada .)
    CAPITALIZAR     reduce using rule 5 (linea -> lCerrada .)
    COLINEALES      reduce using rule 5 (linea -> lCerrada .)
    [               reduce using rule 5 (linea -> lCerrada .)
    $end            reduce using rule 5 (linea -> lCerrada .)
    }               reduce using rule 5 (linea -> lCerrada .)


state 417

    (7) lAbierta -> IF ( cosaBooleana ) { . g } ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) { . g }
    (14) lCerrada -> IF ( cosaBooleana ) { . g } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { . g } ELSE lCerrada
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (55) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (150) varAsig -> . variable MULEQ valores
    (151) varAsig -> . variable DIVEQ valores
    (152) varAsig -> . variable MASEQ valores
    (153) varAsig -> . variable MENOSEQ valores
    (154) varAsig -> . variable = valores
    (155) varAsig -> . ID . ID = valores
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 55 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    linea                          shift and go to state 34
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 12
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 477
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 30
    varsOps                        shift and go to state 13
    loop                           shift and go to state 32

state 418

    (22) lCerrada -> loop . { g }
    (23) lCerrada -> loop . lCerrada
    (24) lCerrada -> loop . COMMENT com lCerrada
    (10) lAbierta -> loop . lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (150) varAsig -> . variable MULEQ valores
    (151) varAsig -> . variable DIVEQ valores
    (152) varAsig -> . variable MASEQ valores
    (153) varAsig -> . variable MENOSEQ valores
    (154) varAsig -> . variable = valores
    (155) varAsig -> . ID . ID = valores
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 114
    COMMENT         shift and go to state 111
    IF              shift and go to state 415
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    varsOps                        shift and go to state 13
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 112
    lAbierta                       shift and go to state 113
    loop                           shift and go to state 418

state 419

    (48) funcInt -> MULTIESCALAR ( valores , valores . param )
    (53) param -> . , valores
    (54) param -> . empty
    (55) empty -> .

    ,               shift and go to state 479
    )               reduce using rule 55 (empty -> .)

    empty                          shift and go to state 480
    param                          shift and go to state 478

state 420

    (27) lCerrada -> DO COMMENT com lCerrada WHILE ( . valores ) ;
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (92) reg -> . { campos }
    (100) ternario -> . ternarioMat
    (101) ternario -> . ternarioBool
    (102) ternario -> . ( ternarioMat )
    (103) ternario -> . ( ternarioBool )
    (104) ternario -> . ternarioVars
    (105) ternario -> . ( ternarioVars )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    ?               reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    varYVals                       shift and go to state 102
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 481
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 421

    (15) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE { g }
    (18) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE COMMENT com lCerrada

    ELSE            shift and go to state 482


state 422

    (14) lCerrada -> IF ( cosaBooleana ) { . g } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { . g } ELSE lCerrada
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (55) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (150) varAsig -> . variable MULEQ valores
    (151) varAsig -> . variable DIVEQ valores
    (152) varAsig -> . variable MASEQ valores
    (153) varAsig -> . variable MENOSEQ valores
    (154) varAsig -> . variable = valores
    (155) varAsig -> . ID . ID = valores
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 55 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 12
    varsOps                        shift and go to state 13
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 483
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 30
    loop                           shift and go to state 32
    linea                          shift and go to state 34

state 423

    (26) lCerrada -> DO lCerrada WHILE ( valores ) . ;

    ;               shift and go to state 484


state 424

    (25) lCerrada -> DO { g } WHILE ( . valores ) ;
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (92) reg -> . { campos }
    (100) ternario -> . ternarioMat
    (101) ternario -> . ternarioBool
    (102) ternario -> . ( ternarioMat )
    (103) ternario -> . ( ternarioBool )
    (104) ternario -> . ternarioVars
    (105) ternario -> . ( ternarioVars )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    ?               reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 485
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 425

    (51) funcBool -> COLINEALES ( valores , valores ) .

    ]               reduce using rule 51 (funcBool -> COLINEALES ( valores , valores ) .)
    OR              reduce using rule 51 (funcBool -> COLINEALES ( valores , valores ) .)
    AND             reduce using rule 51 (funcBool -> COLINEALES ( valores , valores ) .)
    ?               reduce using rule 51 (funcBool -> COLINEALES ( valores , valores ) .)
    EQEQ            reduce using rule 51 (funcBool -> COLINEALES ( valores , valores ) .)
    DISTINTO        reduce using rule 51 (funcBool -> COLINEALES ( valores , valores ) .)
    ;               reduce using rule 51 (funcBool -> COLINEALES ( valores , valores ) .)
    ,               reduce using rule 51 (funcBool -> COLINEALES ( valores , valores ) .)
    )               reduce using rule 51 (funcBool -> COLINEALES ( valores , valores ) .)
    :               reduce using rule 51 (funcBool -> COLINEALES ( valores , valores ) .)
    }               reduce using rule 51 (funcBool -> COLINEALES ( valores , valores ) .)


state 426

    (34) loop -> FOR ( primParam ; valores ; . tercerParam )
    (37) tercerParam -> . varsOps
    (38) tercerParam -> . varAsig
    (39) tercerParam -> . func
    (40) tercerParam -> . empty
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (150) varAsig -> . variable MULEQ valores
    (151) varAsig -> . variable DIVEQ valores
    (152) varAsig -> . variable MASEQ valores
    (153) varAsig -> . variable MENOSEQ valores
    (154) varAsig -> . variable = valores
    (155) varAsig -> . ID . ID = valores
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (55) empty -> .
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    )               reduce using rule 55 (empty -> .)
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    varAsig                        shift and go to state 488
    funcVoid                       shift and go to state 14
    funcBool                       shift and go to state 3
    funcString                     shift and go to state 25
    funcInt                        shift and go to state 5
    funcReturn                     shift and go to state 26
    vec                            shift and go to state 33
    varsOps                        shift and go to state 490
    func                           shift and go to state 486
    variable                       shift and go to state 19
    vecVal                         shift and go to state 8
    empty                          shift and go to state 489
    tercerParam                    shift and go to state 487

state 427

    (232) tCompareEQ -> ( ternarioBool ) .

    EQEQ            reduce using rule 232 (tCompareEQ -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 232 (tCompareEQ -> ( ternarioBool ) .)
    AND             reduce using rule 232 (tCompareEQ -> ( ternarioBool ) .)
    OR              reduce using rule 232 (tCompareEQ -> ( ternarioBool ) .)
    ?               reduce using rule 232 (tCompareEQ -> ( ternarioBool ) .)
    ,               reduce using rule 232 (tCompareEQ -> ( ternarioBool ) .)
    ]               reduce using rule 232 (tCompareEQ -> ( ternarioBool ) .)
    )               reduce using rule 232 (tCompareEQ -> ( ternarioBool ) .)
    ;               reduce using rule 232 (tCompareEQ -> ( ternarioBool ) .)
    :               reduce using rule 232 (tCompareEQ -> ( ternarioBool ) .)
    }               reduce using rule 232 (tCompareEQ -> ( ternarioBool ) .)


state 428

    (133) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (206) expBool -> valoresBool . OR and
    (208) expBool -> valoresBool . OR valoresBool
    (106) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (211) and -> valoresBool . AND eq
    (213) and -> valoresBool . AND valoresBool

    ?               shift and go to state 491
    OR              shift and go to state 166
    AND             shift and go to state 165


state 429

    (133) ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .

    ,               reduce using rule 133 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    ]               reduce using rule 133 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    )               reduce using rule 133 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    ;               reduce using rule 133 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    :               reduce using rule 133 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    }               reduce using rule 133 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)


state 430

    (110) ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .

    ,               reduce using rule 110 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    }               reduce using rule 110 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    :               reduce using rule 110 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    ]               reduce using rule 110 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    )               reduce using rule 110 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    ;               reduce using rule 110 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)


state 431

    (139) valoresTernarioBool -> expBool .
    (134) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> expBool . OR and
    (207) expBool -> expBool . OR valoresBool
    (111) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars

    ,               reduce using rule 139 (valoresTernarioBool -> expBool .)
    ]               reduce using rule 139 (valoresTernarioBool -> expBool .)
    )               reduce using rule 139 (valoresTernarioBool -> expBool .)
    ;               reduce using rule 139 (valoresTernarioBool -> expBool .)
    :               reduce using rule 139 (valoresTernarioBool -> expBool .)
    }               reduce using rule 139 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 492
    OR              shift and go to state 203


state 432

    (121) valoresTernarioVars -> varsOps .
    (202) valoresBool -> varsOps .
    (227) tCompareEQ -> varsOps .
    (235) tCompare -> varsOps .
    (163) valoresMat -> varsOps .

    ,               reduce using rule 121 (valoresTernarioVars -> varsOps .)
    ]               reduce using rule 121 (valoresTernarioVars -> varsOps .)
    )               reduce using rule 121 (valoresTernarioVars -> varsOps .)
    ;               reduce using rule 121 (valoresTernarioVars -> varsOps .)
    :               reduce using rule 121 (valoresTernarioVars -> varsOps .)
    }               reduce using rule 121 (valoresTernarioVars -> varsOps .)
    ?               reduce using rule 202 (valoresBool -> varsOps .)
    OR              reduce using rule 202 (valoresBool -> varsOps .)
    AND             reduce using rule 202 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 227 (tCompareEQ -> varsOps .)
    DISTINTO        reduce using rule 227 (tCompareEQ -> varsOps .)
    >               reduce using rule 235 (tCompare -> varsOps .)
    <               reduce using rule 235 (tCompare -> varsOps .)
    +               reduce using rule 163 (valoresMat -> varsOps .)
    -               reduce using rule 163 (valoresMat -> varsOps .)
    *               reduce using rule 163 (valoresMat -> varsOps .)
    /               reduce using rule 163 (valoresMat -> varsOps .)
    %               reduce using rule 163 (valoresMat -> varsOps .)
    ^               reduce using rule 163 (valoresMat -> varsOps .)


state 433

    (138) valoresTernarioBool -> ( . ternarioBool )
    (119) valoresTernarioVars -> ( . ternarioVars )
    (203) valoresBool -> ( . ternarioBool )
    (232) tCompareEQ -> ( . ternarioBool )
    (233) tCompareEQ -> ( . ternarioMat )
    (240) tCompare -> ( . ternarioMat )
    (164) valoresMat -> ( . ternarioMat )
    (248) parenBool -> ( . expBool )
    (197) paren -> ( . eMat )
    (198) paren -> ( . valoresMat )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (51) funcBool -> . COLINEALES ( valores , valores )
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (56) vec -> . [ elem ]
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 370
    BOOL            shift and go to state 187
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 493
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 371
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    expBool                        shift and go to state 494
    ternarioBool                   shift and go to state 392
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 393
    mayor                          shift and go to state 81
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 434

    (122) valoresTernarioVars -> varYVals .
    (201) valoresBool -> varYVals .
    (226) tCompareEQ -> varYVals .
    (236) tCompare -> varYVals .
    (162) valoresMat -> varYVals .

    ,               reduce using rule 122 (valoresTernarioVars -> varYVals .)
    ]               reduce using rule 122 (valoresTernarioVars -> varYVals .)
    )               reduce using rule 122 (valoresTernarioVars -> varYVals .)
    ;               reduce using rule 122 (valoresTernarioVars -> varYVals .)
    :               reduce using rule 122 (valoresTernarioVars -> varYVals .)
    }               reduce using rule 122 (valoresTernarioVars -> varYVals .)
    ?               reduce using rule 201 (valoresBool -> varYVals .)
    OR              reduce using rule 201 (valoresBool -> varYVals .)
    AND             reduce using rule 201 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 226 (tCompareEQ -> varYVals .)
    DISTINTO        reduce using rule 226 (tCompareEQ -> varYVals .)
    >               reduce using rule 236 (tCompare -> varYVals .)
    <               reduce using rule 236 (tCompare -> varYVals .)
    +               reduce using rule 162 (valoresMat -> varYVals .)
    -               reduce using rule 162 (valoresMat -> varYVals .)
    *               reduce using rule 162 (valoresMat -> varYVals .)
    /               reduce using rule 162 (valoresMat -> varYVals .)
    %               reduce using rule 162 (valoresMat -> varYVals .)
    ^               reduce using rule 162 (valoresMat -> varYVals .)


state 435

    (106) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (124) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (206) expBool -> valoresBool . OR and
    (208) expBool -> valoresBool . OR valoresBool
    (211) and -> valoresBool . AND eq
    (213) and -> valoresBool . AND valoresBool

    ?               shift and go to state 495
    OR              shift and go to state 166
    AND             shift and go to state 165


state 436

    (109) ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .

    ,               reduce using rule 109 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    }               reduce using rule 109 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    :               reduce using rule 109 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    ]               reduce using rule 109 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    )               reduce using rule 109 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    ;               reduce using rule 109 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)


state 437

    (106) ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .

    ,               reduce using rule 106 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    }               reduce using rule 106 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    :               reduce using rule 106 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    ]               reduce using rule 106 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    )               reduce using rule 106 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    ;               reduce using rule 106 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)


state 438

    (107) ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .

    ,               reduce using rule 107 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    }               reduce using rule 107 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    :               reduce using rule 107 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    ]               reduce using rule 107 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    )               reduce using rule 107 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    ;               reduce using rule 107 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)


state 439

    (139) valoresTernarioBool -> expBool .
    (111) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (125) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (134) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> expBool . OR and
    (207) expBool -> expBool . OR valoresBool

    ,               reduce using rule 139 (valoresTernarioBool -> expBool .)
    ]               reduce using rule 139 (valoresTernarioBool -> expBool .)
    )               reduce using rule 139 (valoresTernarioBool -> expBool .)
    ;               reduce using rule 139 (valoresTernarioBool -> expBool .)
    :               reduce using rule 139 (valoresTernarioBool -> expBool .)
    }               reduce using rule 139 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 496
    OR              shift and go to state 203


state 440

    (121) valoresTernarioVars -> varsOps .
    (202) valoresBool -> varsOps .
    (163) valoresMat -> varsOps .
    (227) tCompareEQ -> varsOps .
    (235) tCompare -> varsOps .

    :               reduce using rule 121 (valoresTernarioVars -> varsOps .)
    ,               reduce using rule 121 (valoresTernarioVars -> varsOps .)
    ]               reduce using rule 121 (valoresTernarioVars -> varsOps .)
    )               reduce using rule 121 (valoresTernarioVars -> varsOps .)
    ;               reduce using rule 121 (valoresTernarioVars -> varsOps .)
    }               reduce using rule 121 (valoresTernarioVars -> varsOps .)
    ?               reduce using rule 202 (valoresBool -> varsOps .)
    OR              reduce using rule 202 (valoresBool -> varsOps .)
    AND             reduce using rule 202 (valoresBool -> varsOps .)
    +               reduce using rule 163 (valoresMat -> varsOps .)
    -               reduce using rule 163 (valoresMat -> varsOps .)
    *               reduce using rule 163 (valoresMat -> varsOps .)
    /               reduce using rule 163 (valoresMat -> varsOps .)
    %               reduce using rule 163 (valoresMat -> varsOps .)
    ^               reduce using rule 163 (valoresMat -> varsOps .)
    EQEQ            reduce using rule 227 (tCompareEQ -> varsOps .)
    DISTINTO        reduce using rule 227 (tCompareEQ -> varsOps .)
    >               reduce using rule 235 (tCompare -> varsOps .)
    <               reduce using rule 235 (tCompare -> varsOps .)


state 441

    (119) valoresTernarioVars -> ( . ternarioVars )
    (132) valoresTernarioMat -> ( . ternarioMat )
    (138) valoresTernarioBool -> ( . ternarioBool )
    (203) valoresBool -> ( . ternarioBool )
    (164) valoresMat -> ( . ternarioMat )
    (232) tCompareEQ -> ( . ternarioBool )
    (233) tCompareEQ -> ( . ternarioMat )
    (197) paren -> ( . eMat )
    (198) paren -> ( . valoresMat )
    (240) tCompare -> ( . ternarioMat )
    (248) parenBool -> ( . expBool )
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (56) vec -> . [ elem ]
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 177
    BOOL            shift and go to state 187
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 435
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 391
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 392
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    expBool                        shift and go to state 497
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 179
    ternarioVars                   shift and go to state 393
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 442

    (122) valoresTernarioVars -> varYVals .
    (201) valoresBool -> varYVals .
    (162) valoresMat -> varYVals .
    (226) tCompareEQ -> varYVals .
    (236) tCompare -> varYVals .

    :               reduce using rule 122 (valoresTernarioVars -> varYVals .)
    ,               reduce using rule 122 (valoresTernarioVars -> varYVals .)
    ]               reduce using rule 122 (valoresTernarioVars -> varYVals .)
    )               reduce using rule 122 (valoresTernarioVars -> varYVals .)
    ;               reduce using rule 122 (valoresTernarioVars -> varYVals .)
    }               reduce using rule 122 (valoresTernarioVars -> varYVals .)
    ?               reduce using rule 201 (valoresBool -> varYVals .)
    OR              reduce using rule 201 (valoresBool -> varYVals .)
    AND             reduce using rule 201 (valoresBool -> varYVals .)
    +               reduce using rule 162 (valoresMat -> varYVals .)
    -               reduce using rule 162 (valoresMat -> varYVals .)
    *               reduce using rule 162 (valoresMat -> varYVals .)
    /               reduce using rule 162 (valoresMat -> varYVals .)
    %               reduce using rule 162 (valoresMat -> varYVals .)
    ^               reduce using rule 162 (valoresMat -> varYVals .)
    EQEQ            reduce using rule 226 (tCompareEQ -> varYVals .)
    DISTINTO        reduce using rule 226 (tCompareEQ -> varYVals .)
    >               reduce using rule 236 (tCompare -> varYVals .)
    <               reduce using rule 236 (tCompare -> varYVals .)


state 443

    (124) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (106) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (206) expBool -> valoresBool . OR and
    (208) expBool -> valoresBool . OR valoresBool
    (211) and -> valoresBool . AND eq
    (213) and -> valoresBool . AND valoresBool

    ?               shift and go to state 498
    OR              shift and go to state 166
    AND             shift and go to state 165


state 444

    (132) valoresTernarioMat -> ( . ternarioMat )
    (119) valoresTernarioVars -> ( . ternarioVars )
    (164) valoresMat -> ( . ternarioMat )
    (203) valoresBool -> ( . ternarioBool )
    (197) paren -> ( . eMat )
    (198) paren -> ( . valoresMat )
    (232) tCompareEQ -> ( . ternarioBool )
    (233) tCompareEQ -> ( . ternarioMat )
    (240) tCompare -> ( . ternarioMat )
    (248) parenBool -> ( . expBool )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (56) vec -> . [ elem ]
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 177
    BOOL            shift and go to state 187
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 499
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 391
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 323
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    expBool                        shift and go to state 500
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 179
    ternarioVars                   shift and go to state 393
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 445

    (108) ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .

    ,               reduce using rule 108 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    }               reduce using rule 108 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    :               reduce using rule 108 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    ]               reduce using rule 108 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    )               reduce using rule 108 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    ;               reduce using rule 108 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)


state 446

    (124) ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .

    )               reduce using rule 124 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    ]               reduce using rule 124 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    :               reduce using rule 124 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    ,               reduce using rule 124 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    ;               reduce using rule 124 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    }               reduce using rule 124 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)


state 447

    (125) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (111) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (205) expBool -> expBool . OR and
    (207) expBool -> expBool . OR valoresBool

    ?               shift and go to state 501
    OR              shift and go to state 203


state 448

    (132) valoresTernarioMat -> ( ternarioMat ) .
    (164) valoresMat -> ( ternarioMat ) .
    (233) tCompareEQ -> ( ternarioMat ) .
    (240) tCompare -> ( ternarioMat ) .

    :               reduce using rule 132 (valoresTernarioMat -> ( ternarioMat ) .)
    ,               reduce using rule 132 (valoresTernarioMat -> ( ternarioMat ) .)
    ]               reduce using rule 132 (valoresTernarioMat -> ( ternarioMat ) .)
    )               reduce using rule 132 (valoresTernarioMat -> ( ternarioMat ) .)
    ;               reduce using rule 132 (valoresTernarioMat -> ( ternarioMat ) .)
    }               reduce using rule 132 (valoresTernarioMat -> ( ternarioMat ) .)
    +               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    ^               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    EQEQ            reduce using rule 233 (tCompareEQ -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 233 (tCompareEQ -> ( ternarioMat ) .)
    >               reduce using rule 240 (tCompare -> ( ternarioMat ) .)
    <               reduce using rule 240 (tCompare -> ( ternarioMat ) .)


state 449

    (138) valoresTernarioBool -> ( ternarioBool ) .
    (203) valoresBool -> ( ternarioBool ) .
    (232) tCompareEQ -> ( ternarioBool ) .

    ,               reduce using rule 138 (valoresTernarioBool -> ( ternarioBool ) .)
    ]               reduce using rule 138 (valoresTernarioBool -> ( ternarioBool ) .)
    )               reduce using rule 138 (valoresTernarioBool -> ( ternarioBool ) .)
    ;               reduce using rule 138 (valoresTernarioBool -> ( ternarioBool ) .)
    :               reduce using rule 138 (valoresTernarioBool -> ( ternarioBool ) .)
    }               reduce using rule 138 (valoresTernarioBool -> ( ternarioBool ) .)
    ?               reduce using rule 203 (valoresBool -> ( ternarioBool ) .)
    OR              reduce using rule 203 (valoresBool -> ( ternarioBool ) .)
    AND             reduce using rule 203 (valoresBool -> ( ternarioBool ) .)
    EQEQ            reduce using rule 232 (tCompareEQ -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 232 (tCompareEQ -> ( ternarioBool ) .)


state 450

    (119) valoresTernarioVars -> ( ternarioVars ) .

    ,               reduce using rule 119 (valoresTernarioVars -> ( ternarioVars ) .)
    ]               reduce using rule 119 (valoresTernarioVars -> ( ternarioVars ) .)
    )               reduce using rule 119 (valoresTernarioVars -> ( ternarioVars ) .)
    ;               reduce using rule 119 (valoresTernarioVars -> ( ternarioVars ) .)
    :               reduce using rule 119 (valoresTernarioVars -> ( ternarioVars ) .)
    }               reduce using rule 119 (valoresTernarioVars -> ( ternarioVars ) .)


state 451

    (133) ternarioBool -> valoresBool ? valoresTernarioBool . : valoresTernarioBool

    :               shift and go to state 502


state 452

    (124) ternarioMat -> valoresBool ? valoresTernarioMat . : valoresTernarioMat

    :               shift and go to state 503


state 453

    (132) valoresTernarioMat -> ( . ternarioMat )
    (138) valoresTernarioBool -> ( . ternarioBool )
    (164) valoresMat -> ( . ternarioMat )
    (203) valoresBool -> ( . ternarioBool )
    (232) tCompareEQ -> ( . ternarioBool )
    (233) tCompareEQ -> ( . ternarioMat )
    (197) paren -> ( . eMat )
    (198) paren -> ( . valoresMat )
    (240) tCompare -> ( . ternarioMat )
    (248) parenBool -> ( . expBool )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (56) vec -> . [ elem ]
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 177
    BOOL            shift and go to state 187
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    valoresBool                    shift and go to state 321
    ternarioMat                    shift and go to state 391
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 392
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    expBool                        shift and go to state 324
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 454

    (139) valoresTernarioBool -> expBool .
    (125) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (134) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> expBool . OR and
    (207) expBool -> expBool . OR valoresBool

    :               reduce using rule 139 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 397
    OR              shift and go to state 203


state 455

    (134) ternarioBool -> expBool ? valoresTernarioBool . : valoresTernarioBool

    :               shift and go to state 504


state 456

    (125) ternarioMat -> expBool ? valoresTernarioMat . : valoresTernarioMat

    :               shift and go to state 505


state 457

    (132) valoresTernarioMat -> ( . ternarioMat )
    (164) valoresMat -> ( . ternarioMat )
    (203) valoresBool -> ( . ternarioBool )
    (197) paren -> ( . eMat )
    (198) paren -> ( . valoresMat )
    (232) tCompareEQ -> ( . ternarioBool )
    (233) tCompareEQ -> ( . ternarioMat )
    (240) tCompare -> ( . ternarioMat )
    (248) parenBool -> ( . expBool )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (56) vec -> . [ elem ]
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 177
    BOOL            shift and go to state 187
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    valoresBool                    shift and go to state 321
    ternarioMat                    shift and go to state 391
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 323
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    expBool                        shift and go to state 324
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 458

    (134) ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .

    ,               reduce using rule 134 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    ]               reduce using rule 134 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    )               reduce using rule 134 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    ;               reduce using rule 134 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    :               reduce using rule 134 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    }               reduce using rule 134 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)


state 459

    (115) ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .

    ,               reduce using rule 115 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    }               reduce using rule 115 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    :               reduce using rule 115 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    ]               reduce using rule 115 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    )               reduce using rule 115 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    ;               reduce using rule 115 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)


state 460

    (114) ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .

    ,               reduce using rule 114 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    }               reduce using rule 114 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    :               reduce using rule 114 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    ]               reduce using rule 114 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    )               reduce using rule 114 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    ;               reduce using rule 114 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)


state 461

    (111) ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .

    ,               reduce using rule 111 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    }               reduce using rule 111 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    :               reduce using rule 111 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    ]               reduce using rule 111 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    )               reduce using rule 111 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    ;               reduce using rule 111 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)


state 462

    (112) ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .

    ,               reduce using rule 112 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    }               reduce using rule 112 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    :               reduce using rule 112 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    ]               reduce using rule 112 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    )               reduce using rule 112 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    ;               reduce using rule 112 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)


state 463

    (125) ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .

    )               reduce using rule 125 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    ]               reduce using rule 125 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    :               reduce using rule 125 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    ,               reduce using rule 125 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    ;               reduce using rule 125 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    }               reduce using rule 125 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)


state 464

    (113) ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .

    ,               reduce using rule 113 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    }               reduce using rule 113 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    :               reduce using rule 113 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    ]               reduce using rule 113 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    )               reduce using rule 113 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    ;               reduce using rule 113 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)


state 465

    (240) tCompare -> ( ternarioMat ) .
    (164) valoresMat -> ( ternarioMat ) .

    EQEQ            reduce using rule 240 (tCompare -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 240 (tCompare -> ( ternarioMat ) .)
    AND             reduce using rule 240 (tCompare -> ( ternarioMat ) .)
    OR              reduce using rule 240 (tCompare -> ( ternarioMat ) .)
    ?               reduce using rule 240 (tCompare -> ( ternarioMat ) .)
    ,               reduce using rule 240 (tCompare -> ( ternarioMat ) .)
    ]               reduce using rule 240 (tCompare -> ( ternarioMat ) .)
    )               reduce using rule 240 (tCompare -> ( ternarioMat ) .)
    ;               reduce using rule 240 (tCompare -> ( ternarioMat ) .)
    :               reduce using rule 240 (tCompare -> ( ternarioMat ) .)
    }               reduce using rule 240 (tCompare -> ( ternarioMat ) .)
    +               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)
    ^               reduce using rule 164 (valoresMat -> ( ternarioMat ) .)


state 466

    (138) valoresTernarioBool -> ( . ternarioBool )
    (203) valoresBool -> ( . ternarioBool )
    (232) tCompareEQ -> ( . ternarioBool )
    (233) tCompareEQ -> ( . ternarioMat )
    (240) tCompare -> ( . ternarioMat )
    (164) valoresMat -> ( . ternarioMat )
    (248) parenBool -> ( . expBool )
    (197) paren -> ( . eMat )
    (198) paren -> ( . valoresMat )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (51) funcBool -> . COLINEALES ( valores , valores )
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (56) vec -> . [ elem ]
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 370
    BOOL            shift and go to state 187
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 369
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 371
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 392
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    expBool                        shift and go to state 372
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 467

    (139) valoresTernarioBool -> expBool .
    (134) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> expBool . OR and
    (207) expBool -> expBool . OR valoresBool

    :               reduce using rule 139 (valoresTernarioBool -> expBool .)
    )               reduce using rule 139 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 407
    OR              shift and go to state 203


state 468

    (93) campos -> ID : valores , . campos
    (93) campos -> . ID : valores , campos
    (94) campos -> . ID : valores

    ID              shift and go to state 222

    campos                         shift and go to state 506

state 469

    (133) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (206) expBool -> valoresBool . OR and
    (208) expBool -> valoresBool . OR valoresBool
    (124) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (211) and -> valoresBool . AND eq
    (213) and -> valoresBool . AND valoresBool

    ?               shift and go to state 410
    OR              shift and go to state 166
    AND             shift and go to state 165


state 470

    (202) valoresBool -> varsOps .
    (163) valoresMat -> varsOps .
    (227) tCompareEQ -> varsOps .
    (235) tCompare -> varsOps .

    ?               reduce using rule 202 (valoresBool -> varsOps .)
    OR              reduce using rule 202 (valoresBool -> varsOps .)
    AND             reduce using rule 202 (valoresBool -> varsOps .)
    +               reduce using rule 163 (valoresMat -> varsOps .)
    -               reduce using rule 163 (valoresMat -> varsOps .)
    *               reduce using rule 163 (valoresMat -> varsOps .)
    /               reduce using rule 163 (valoresMat -> varsOps .)
    %               reduce using rule 163 (valoresMat -> varsOps .)
    ^               reduce using rule 163 (valoresMat -> varsOps .)
    EQEQ            reduce using rule 227 (tCompareEQ -> varsOps .)
    DISTINTO        reduce using rule 227 (tCompareEQ -> varsOps .)
    >               reduce using rule 235 (tCompare -> varsOps .)
    <               reduce using rule 235 (tCompare -> varsOps .)


state 471

    (138) valoresTernarioBool -> ( . ternarioBool )
    (132) valoresTernarioMat -> ( . ternarioMat )
    (203) valoresBool -> ( . ternarioBool )
    (164) valoresMat -> ( . ternarioMat )
    (232) tCompareEQ -> ( . ternarioBool )
    (233) tCompareEQ -> ( . ternarioMat )
    (240) tCompare -> ( . ternarioMat )
    (197) paren -> ( . eMat )
    (198) paren -> ( . valoresMat )
    (248) parenBool -> ( . expBool )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (56) vec -> . [ elem ]
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 177
    BOOL            shift and go to state 187
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    valoresBool                    shift and go to state 369
    ternarioMat                    shift and go to state 391
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 392
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    expBool                        shift and go to state 372
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 472

    (201) valoresBool -> varYVals .
    (162) valoresMat -> varYVals .
    (226) tCompareEQ -> varYVals .
    (236) tCompare -> varYVals .

    ?               reduce using rule 201 (valoresBool -> varYVals .)
    OR              reduce using rule 201 (valoresBool -> varYVals .)
    AND             reduce using rule 201 (valoresBool -> varYVals .)
    +               reduce using rule 162 (valoresMat -> varYVals .)
    -               reduce using rule 162 (valoresMat -> varYVals .)
    *               reduce using rule 162 (valoresMat -> varYVals .)
    /               reduce using rule 162 (valoresMat -> varYVals .)
    %               reduce using rule 162 (valoresMat -> varYVals .)
    ^               reduce using rule 162 (valoresMat -> varYVals .)
    EQEQ            reduce using rule 226 (tCompareEQ -> varYVals .)
    DISTINTO        reduce using rule 226 (tCompareEQ -> varYVals .)
    >               reduce using rule 236 (tCompare -> varYVals .)
    <               reduce using rule 236 (tCompare -> varYVals .)


state 473

    (139) valoresTernarioBool -> expBool .
    (134) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> expBool . OR and
    (207) expBool -> expBool . OR valoresBool
    (125) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat

    :               reduce using rule 139 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 412
    OR              shift and go to state 203


state 474

    (16) lCerrada -> IF ( cosaBooleana ) COMMENT com . lCerrada ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) COMMENT com . lCerrada ELSE lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com . lCerrada ELSE COMMENT com lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (150) varAsig -> . variable MULEQ valores
    (151) varAsig -> . variable DIVEQ valores
    (152) varAsig -> . variable MASEQ valores
    (153) varAsig -> . variable MENOSEQ valores
    (154) varAsig -> . variable = valores
    (155) varAsig -> . ID . ID = valores
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 507
    varsOps                        shift and go to state 13
    loop                           shift and go to state 39

state 475

    (14) lCerrada -> IF ( . cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( . cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (6) lAbierta -> IF ( . cosaBooleana ) linea
    (7) lAbierta -> IF ( . cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> IF ( . cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> IF ( . cosaBooleana ) { g }
    (41) cosaBooleana -> . expBool
    (42) cosaBooleana -> . valoresBool
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (56) vec -> . [ elem ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (248) parenBool -> . ( expBool )
    (92) reg -> . { campos }
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )

    BOOL            shift and go to state 187
    (               shift and go to state 229
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    )               reduce using rule 204 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 230
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    valoresBool                    shift and go to state 227
    eMat                           shift and go to state 228
    p                              shift and go to state 96
    atributos                      shift and go to state 191
    mayor                          shift and go to state 81
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 234
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    cosaBooleana                   shift and go to state 508
    funcString                     shift and go to state 184
    tCompareEQ                     shift and go to state 75
    exp                            shift and go to state 100
    varYVals                       shift and go to state 235
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 236

state 476

    (8) lAbierta -> IF ( cosaBooleana ) lCerrada ELSE . lAbierta
    (15) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . { g }
    (18) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . COMMENT com lCerrada
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (150) varAsig -> . variable MULEQ valores
    (151) varAsig -> . variable DIVEQ valores
    (152) varAsig -> . variable MASEQ valores
    (153) varAsig -> . variable MENOSEQ valores
    (154) varAsig -> . variable = valores
    (155) varAsig -> . ID . ID = valores
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 512
    COMMENT         shift and go to state 509
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 510
    lAbierta                       shift and go to state 511
    varsOps                        shift and go to state 13
    loop                           shift and go to state 32

state 477

    (7) lAbierta -> IF ( cosaBooleana ) { g . } ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) { g . }
    (14) lCerrada -> IF ( cosaBooleana ) { g . } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g . } ELSE lCerrada

    }               shift and go to state 513


state 478

    (48) funcInt -> MULTIESCALAR ( valores , valores param . )

    )               shift and go to state 514


state 479

    (53) param -> , . valores
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (92) reg -> . { campos }
    (100) ternario -> . ternarioMat
    (101) ternario -> . ternarioBool
    (102) ternario -> . ( ternarioMat )
    (103) ternario -> . ( ternarioBool )
    (104) ternario -> . ternarioVars
    (105) ternario -> . ( ternarioVars )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    ?               reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 515
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 480

    (54) param -> empty .

    )               reduce using rule 54 (param -> empty .)


state 481

    (27) lCerrada -> DO COMMENT com lCerrada WHILE ( valores . ) ;

    )               shift and go to state 516


state 482

    (15) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . { g }
    (18) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . COMMENT com lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (150) varAsig -> . variable MULEQ valores
    (151) varAsig -> . variable DIVEQ valores
    (152) varAsig -> . variable MASEQ valores
    (153) varAsig -> . variable MENOSEQ valores
    (154) varAsig -> . variable = valores
    (155) varAsig -> . ID . ID = valores
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 512
    COMMENT         shift and go to state 509
    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 510
    varsOps                        shift and go to state 13
    loop                           shift and go to state 39

state 483

    (14) lCerrada -> IF ( cosaBooleana ) { g . } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g . } ELSE lCerrada

    }               shift and go to state 517


state 484

    (26) lCerrada -> DO lCerrada WHILE ( valores ) ; .

    COMMENT         reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    IF              reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    DO              reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    WHILE           reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    FOR             reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    RETURN          reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    ;               reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    MENOSMENOS      reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    MASMAS          reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    ID              reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    PRINT           reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    MULTIESCALAR    reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    LENGTH          reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    CAPITALIZAR     reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    COLINEALES      reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    [               reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    }               reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    $end            reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    ELSE            reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)


state 485

    (25) lCerrada -> DO { g } WHILE ( valores . ) ;

    )               shift and go to state 518


state 486

    (39) tercerParam -> func .

    )               reduce using rule 39 (tercerParam -> func .)


state 487

    (34) loop -> FOR ( primParam ; valores ; tercerParam . )

    )               shift and go to state 519


state 488

    (38) tercerParam -> varAsig .

    )               reduce using rule 38 (tercerParam -> varAsig .)


state 489

    (40) tercerParam -> empty .

    )               reduce using rule 40 (tercerParam -> empty .)


state 490

    (37) tercerParam -> varsOps .

    )               reduce using rule 37 (tercerParam -> varsOps .)


state 491

    (133) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (106) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (135) valoresTernarioBool -> . BOOL
    (136) valoresTernarioBool -> . funcBool
    (137) valoresTernarioBool -> . ternarioBool
    (138) valoresTernarioBool -> . ( ternarioBool )
    (139) valoresTernarioBool -> . expBool
    (116) valoresTernarioVars -> . reg
    (117) valoresTernarioVars -> . vec
    (118) valoresTernarioVars -> . ternarioVars
    (119) valoresTernarioVars -> . ( ternarioVars )
    (120) valoresTernarioVars -> . atributos
    (121) valoresTernarioVars -> . varsOps
    (122) valoresTernarioVars -> . varYVals
    (123) valoresTernarioVars -> . RES
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (92) reg -> . { campos }
    (56) vec -> . [ elem ]
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    BOOL            shift and go to state 305
    (               shift and go to state 523
    RES             shift and go to state 288
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 520
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 293
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 299
    expBool                        shift and go to state 521
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 522
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 440
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 442
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 492

    (134) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (111) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (135) valoresTernarioBool -> . BOOL
    (136) valoresTernarioBool -> . funcBool
    (137) valoresTernarioBool -> . ternarioBool
    (138) valoresTernarioBool -> . ( ternarioBool )
    (139) valoresTernarioBool -> . expBool
    (116) valoresTernarioVars -> . reg
    (117) valoresTernarioVars -> . vec
    (118) valoresTernarioVars -> . ternarioVars
    (119) valoresTernarioVars -> . ( ternarioVars )
    (120) valoresTernarioVars -> . atributos
    (121) valoresTernarioVars -> . varsOps
    (122) valoresTernarioVars -> . varYVals
    (123) valoresTernarioVars -> . RES
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (92) reg -> . { campos }
    (56) vec -> . [ elem ]
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    BOOL            shift and go to state 305
    (               shift and go to state 523
    RES             shift and go to state 288
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 520
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 339
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 340
    expBool                        shift and go to state 521
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 524
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 440
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 442
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 493

    (133) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (106) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (124) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (206) expBool -> valoresBool . OR and
    (208) expBool -> valoresBool . OR valoresBool
    (211) and -> valoresBool . AND eq
    (213) and -> valoresBool . AND valoresBool

    ?               shift and go to state 525
    OR              shift and go to state 166
    AND             shift and go to state 165


state 494

    (248) parenBool -> ( expBool . )
    (134) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (125) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (205) expBool -> expBool . OR and
    (207) expBool -> expBool . OR valoresBool

    )               shift and go to state 327
    ?               shift and go to state 526
    OR              shift and go to state 203


state 495

    (106) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (124) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (116) valoresTernarioVars -> . reg
    (117) valoresTernarioVars -> . vec
    (118) valoresTernarioVars -> . ternarioVars
    (119) valoresTernarioVars -> . ( ternarioVars )
    (120) valoresTernarioVars -> . atributos
    (121) valoresTernarioVars -> . varsOps
    (122) valoresTernarioVars -> . varYVals
    (123) valoresTernarioVars -> . RES
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (135) valoresTernarioBool -> . BOOL
    (136) valoresTernarioBool -> . funcBool
    (137) valoresTernarioBool -> . ternarioBool
    (138) valoresTernarioBool -> . ( ternarioBool )
    (139) valoresTernarioBool -> . expBool
    (92) reg -> . { campos }
    (56) vec -> . [ elem ]
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    (               shift and go to state 441
    RES             shift and go to state 288
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    BOOL            shift and go to state 305
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    COLINEALES      shift and go to state 4
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    atributos                      shift and go to state 310
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 435
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 527
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 299
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 528
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 440
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 442
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 439

state 496

    (111) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (125) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (134) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (116) valoresTernarioVars -> . reg
    (117) valoresTernarioVars -> . vec
    (118) valoresTernarioVars -> . ternarioVars
    (119) valoresTernarioVars -> . ( ternarioVars )
    (120) valoresTernarioVars -> . atributos
    (121) valoresTernarioVars -> . varsOps
    (122) valoresTernarioVars -> . varYVals
    (123) valoresTernarioVars -> . RES
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (135) valoresTernarioBool -> . BOOL
    (136) valoresTernarioBool -> . funcBool
    (137) valoresTernarioBool -> . ternarioBool
    (138) valoresTernarioBool -> . ( ternarioBool )
    (139) valoresTernarioBool -> . expBool
    (92) reg -> . { campos }
    (56) vec -> . [ elem ]
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    (               shift and go to state 441
    RES             shift and go to state 288
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    BOOL            shift and go to state 305
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    COLINEALES      shift and go to state 4
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 435
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 529
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 340
    expBool                        shift and go to state 439
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 530
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 440
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 442
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 497

    (248) parenBool -> ( expBool . )
    (111) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (125) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (134) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> expBool . OR and
    (207) expBool -> expBool . OR valoresBool

    )               shift and go to state 327
    ?               shift and go to state 496
    OR              shift and go to state 203


state 498

    (124) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (106) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (116) valoresTernarioVars -> . reg
    (117) valoresTernarioVars -> . vec
    (118) valoresTernarioVars -> . ternarioVars
    (119) valoresTernarioVars -> . ( ternarioVars )
    (120) valoresTernarioVars -> . atributos
    (121) valoresTernarioVars -> . varsOps
    (122) valoresTernarioVars -> . varYVals
    (123) valoresTernarioVars -> . RES
    (135) valoresTernarioBool -> . BOOL
    (136) valoresTernarioBool -> . funcBool
    (137) valoresTernarioBool -> . ternarioBool
    (138) valoresTernarioBool -> . ( ternarioBool )
    (139) valoresTernarioBool -> . expBool
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (92) reg -> . { campos }
    (56) vec -> . [ elem ]
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (51) funcBool -> . COLINEALES ( valores , valores )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    (               shift and go to state 533
    RES             shift and go to state 288
    BOOL            shift and go to state 305
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    atributos                      shift and go to state 310
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 499
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 531
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 299
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 302
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 297
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 309
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 532

state 499

    (124) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (106) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (133) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (206) expBool -> valoresBool . OR and
    (208) expBool -> valoresBool . OR valoresBool
    (211) and -> valoresBool . AND eq
    (213) and -> valoresBool . AND valoresBool

    ?               shift and go to state 534
    OR              shift and go to state 166
    AND             shift and go to state 165


state 500

    (248) parenBool -> ( expBool . )
    (125) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (111) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (134) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> expBool . OR and
    (207) expBool -> expBool . OR valoresBool

    )               shift and go to state 327
    ?               shift and go to state 535
    OR              shift and go to state 203


state 501

    (125) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (111) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (116) valoresTernarioVars -> . reg
    (117) valoresTernarioVars -> . vec
    (118) valoresTernarioVars -> . ternarioVars
    (119) valoresTernarioVars -> . ( ternarioVars )
    (120) valoresTernarioVars -> . atributos
    (121) valoresTernarioVars -> . varsOps
    (122) valoresTernarioVars -> . varYVals
    (123) valoresTernarioVars -> . RES
    (135) valoresTernarioBool -> . BOOL
    (136) valoresTernarioBool -> . funcBool
    (137) valoresTernarioBool -> . ternarioBool
    (138) valoresTernarioBool -> . ( ternarioBool )
    (139) valoresTernarioBool -> . expBool
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (92) reg -> . { campos }
    (56) vec -> . [ elem ]
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (51) funcBool -> . COLINEALES ( valores , valores )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    (               shift and go to state 533
    RES             shift and go to state 288
    BOOL            shift and go to state 305
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 499
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 536
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 340
    expBool                        shift and go to state 532
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 341
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 297
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 309
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 502

    (133) ternarioBool -> valoresBool ? valoresTernarioBool : . valoresTernarioBool
    (135) valoresTernarioBool -> . BOOL
    (136) valoresTernarioBool -> . funcBool
    (137) valoresTernarioBool -> . ternarioBool
    (138) valoresTernarioBool -> . ( ternarioBool )
    (139) valoresTernarioBool -> . expBool
    (51) funcBool -> . COLINEALES ( valores , valores )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (56) vec -> . [ elem ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (248) parenBool -> . ( expBool )
    (92) reg -> . { campos }
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )

    BOOL            shift and go to state 305
    (               shift and go to state 466
    COLINEALES      shift and go to state 4
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    ID              shift and go to state 230
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77

    and                            shift and go to state 60
    atributos                      shift and go to state 191
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    valoresBool                    shift and go to state 359
    eMat                           shift and go to state 228
    p                              shift and go to state 96
    valoresTernarioBool            shift and go to state 429
    mayor                          shift and go to state 81
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    ternarioBool                   shift and go to state 301
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    tCompareEQ                     shift and go to state 75
    varsOps                        shift and go to state 234
    exp                            shift and go to state 100
    varYVals                       shift and go to state 235
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 467

state 503

    (124) ternarioMat -> valoresBool ? valoresTernarioMat : . valoresTernarioMat
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (51) funcBool -> . COLINEALES ( valores , valores )
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (56) vec -> . [ elem ]
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    (               shift and go to state 457
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    BOOL            shift and go to state 187
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresBool                    shift and go to state 329
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 446
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    expBool                        shift and go to state 332
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 504

    (134) ternarioBool -> expBool ? valoresTernarioBool : . valoresTernarioBool
    (135) valoresTernarioBool -> . BOOL
    (136) valoresTernarioBool -> . funcBool
    (137) valoresTernarioBool -> . ternarioBool
    (138) valoresTernarioBool -> . ( ternarioBool )
    (139) valoresTernarioBool -> . expBool
    (51) funcBool -> . COLINEALES ( valores , valores )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (56) vec -> . [ elem ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (248) parenBool -> . ( expBool )
    (92) reg -> . { campos }
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )

    BOOL            shift and go to state 305
    (               shift and go to state 466
    COLINEALES      shift and go to state 4
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    ID              shift and go to state 230
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77

    and                            shift and go to state 60
    atributos                      shift and go to state 191
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    valoresBool                    shift and go to state 359
    eMat                           shift and go to state 228
    p                              shift and go to state 96
    valoresTernarioBool            shift and go to state 458
    mayor                          shift and go to state 81
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    ternarioBool                   shift and go to state 301
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    tCompareEQ                     shift and go to state 75
    varsOps                        shift and go to state 234
    exp                            shift and go to state 100
    varYVals                       shift and go to state 235
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 467

state 505

    (125) ternarioMat -> expBool ? valoresTernarioMat : . valoresTernarioMat
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (51) funcBool -> . COLINEALES ( valores , valores )
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (56) vec -> . [ elem ]
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    (               shift and go to state 457
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    BOOL            shift and go to state 187
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresBool                    shift and go to state 329
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 463
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    expBool                        shift and go to state 332
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 506

    (93) campos -> ID : valores , campos .

    }               reduce using rule 93 (campos -> ID : valores , campos .)


state 507

    (16) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada . ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada . ELSE lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada . ELSE COMMENT com lCerrada

    ELSE            shift and go to state 537


state 508

    (14) lCerrada -> IF ( cosaBooleana . ) { g } ELSE { g }
    (15) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE { g }
    (16) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana . ) { g } ELSE lCerrada
    (18) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (6) lAbierta -> IF ( cosaBooleana . ) linea
    (7) lAbierta -> IF ( cosaBooleana . ) { g } ELSE lAbierta
    (8) lAbierta -> IF ( cosaBooleana . ) lCerrada ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana . ) { g }

    )               shift and go to state 538


state 509

    (20) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT . com lCerrada
    (12) com -> . COMMENT com
    (13) com -> . empty
    (55) empty -> .

    COMMENT         shift and go to state 117
    IF              reduce using rule 55 (empty -> .)
    DO              reduce using rule 55 (empty -> .)
    RETURN          reduce using rule 55 (empty -> .)
    ;               reduce using rule 55 (empty -> .)
    WHILE           reduce using rule 55 (empty -> .)
    FOR             reduce using rule 55 (empty -> .)
    MENOSMENOS      reduce using rule 55 (empty -> .)
    MASMAS          reduce using rule 55 (empty -> .)
    ID              reduce using rule 55 (empty -> .)
    PRINT           reduce using rule 55 (empty -> .)
    MULTIESCALAR    reduce using rule 55 (empty -> .)
    LENGTH          reduce using rule 55 (empty -> .)
    CAPITALIZAR     reduce using rule 55 (empty -> .)
    COLINEALES      reduce using rule 55 (empty -> .)
    [               reduce using rule 55 (empty -> .)

    com                            shift and go to state 539
    empty                          shift and go to state 119

state 510

    (18) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .

    COMMENT         reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    IF              reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    DO              reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    WHILE           reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    FOR             reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    RETURN          reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    ;               reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    MENOSMENOS      reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    MASMAS          reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    ID              reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    PRINT           reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    MULTIESCALAR    reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    LENGTH          reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    CAPITALIZAR     reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    COLINEALES      reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    [               reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    }               reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    $end            reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    ELSE            reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)


state 511

    (8) lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .

    COMMENT         reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    IF              reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    DO              reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    WHILE           reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    FOR             reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    RETURN          reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    ;               reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    MENOSMENOS      reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    MASMAS          reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    ID              reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    PRINT           reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    MULTIESCALAR    reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    LENGTH          reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    CAPITALIZAR     reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    COLINEALES      reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    [               reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    }               reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    $end            reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)


state 512

    (15) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { . g }
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (55) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (150) varAsig -> . variable MULEQ valores
    (151) varAsig -> . variable DIVEQ valores
    (152) varAsig -> . variable MASEQ valores
    (153) varAsig -> . variable MENOSEQ valores
    (154) varAsig -> . variable = valores
    (155) varAsig -> . ID . ID = valores
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 55 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 12
    varsOps                        shift and go to state 13
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 540
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 30
    loop                           shift and go to state 32
    linea                          shift and go to state 34

state 513

    (7) lAbierta -> IF ( cosaBooleana ) { g } . ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) { g } .
    (14) lCerrada -> IF ( cosaBooleana ) { g } . ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g } . ELSE lCerrada

    ELSE            shift and go to state 541
    COMMENT         reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    IF              reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    DO              reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    WHILE           reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    FOR             reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    RETURN          reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    ;               reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MENOSMENOS      reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MASMAS          reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    ID              reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    PRINT           reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MULTIESCALAR    reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    LENGTH          reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    CAPITALIZAR     reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    COLINEALES      reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    [               reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    }               reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    $end            reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)


state 514

    (48) funcInt -> MULTIESCALAR ( valores , valores param ) .

    )               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ;               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ,               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ]               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    :               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    }               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    +               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    -               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    *               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    /               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    %               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ^               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    EQEQ            reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    DISTINTO        reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    >               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    <               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    AND             reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    OR              reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ?               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)


state 515

    (53) param -> , valores .

    )               reduce using rule 53 (param -> , valores .)


state 516

    (27) lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) . ;

    ;               shift and go to state 542


state 517

    (14) lCerrada -> IF ( cosaBooleana ) { g } . ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g } . ELSE lCerrada

    ELSE            shift and go to state 543


state 518

    (25) lCerrada -> DO { g } WHILE ( valores ) . ;

    ;               shift and go to state 544


state 519

    (34) loop -> FOR ( primParam ; valores ; tercerParam ) .

    {               reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    COMMENT         reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    IF              reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    DO              reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    RETURN          reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    ;               reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    WHILE           reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    FOR             reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    MENOSMENOS      reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    MASMAS          reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    ID              reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    PRINT           reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    MULTIESCALAR    reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    LENGTH          reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    CAPITALIZAR     reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    COLINEALES      reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    [               reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)


state 520

    (133) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (206) expBool -> valoresBool . OR and
    (208) expBool -> valoresBool . OR valoresBool
    (106) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (124) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (211) and -> valoresBool . AND eq
    (213) and -> valoresBool . AND valoresBool

    ?               shift and go to state 525
    OR              shift and go to state 166
    AND             shift and go to state 165


state 521

    (139) valoresTernarioBool -> expBool .
    (134) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> expBool . OR and
    (207) expBool -> expBool . OR valoresBool
    (111) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (125) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat

    :               reduce using rule 139 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 526
    OR              shift and go to state 203


state 522

    (108) ternarioVars -> valoresBool ? valoresTernarioMat . : valoresTernarioVars

    :               shift and go to state 545


state 523

    (138) valoresTernarioBool -> ( . ternarioBool )
    (119) valoresTernarioVars -> ( . ternarioVars )
    (132) valoresTernarioMat -> ( . ternarioMat )
    (203) valoresBool -> ( . ternarioBool )
    (164) valoresMat -> ( . ternarioMat )
    (232) tCompareEQ -> ( . ternarioBool )
    (233) tCompareEQ -> ( . ternarioMat )
    (240) tCompare -> ( . ternarioMat )
    (197) paren -> ( . eMat )
    (198) paren -> ( . valoresMat )
    (248) parenBool -> ( . expBool )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (56) vec -> . [ elem ]
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 177
    BOOL            shift and go to state 187
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 493
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 391
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 392
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    expBool                        shift and go to state 494
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 179
    ternarioVars                   shift and go to state 393
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 524

    (113) ternarioVars -> expBool ? valoresTernarioMat . : valoresTernarioVars

    :               shift and go to state 546


state 525

    (133) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (106) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (124) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (135) valoresTernarioBool -> . BOOL
    (136) valoresTernarioBool -> . funcBool
    (137) valoresTernarioBool -> . ternarioBool
    (138) valoresTernarioBool -> . ( ternarioBool )
    (139) valoresTernarioBool -> . expBool
    (116) valoresTernarioVars -> . reg
    (117) valoresTernarioVars -> . vec
    (118) valoresTernarioVars -> . ternarioVars
    (119) valoresTernarioVars -> . ( ternarioVars )
    (120) valoresTernarioVars -> . atributos
    (121) valoresTernarioVars -> . varsOps
    (122) valoresTernarioVars -> . varYVals
    (123) valoresTernarioVars -> . RES
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (92) reg -> . { campos }
    (56) vec -> . [ elem ]
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    BOOL            shift and go to state 305
    (               shift and go to state 523
    RES             shift and go to state 288
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 520
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 293
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 299
    expBool                        shift and go to state 521
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 528
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 440
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 442
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 526

    (134) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (111) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (125) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (135) valoresTernarioBool -> . BOOL
    (136) valoresTernarioBool -> . funcBool
    (137) valoresTernarioBool -> . ternarioBool
    (138) valoresTernarioBool -> . ( ternarioBool )
    (139) valoresTernarioBool -> . expBool
    (116) valoresTernarioVars -> . reg
    (117) valoresTernarioVars -> . vec
    (118) valoresTernarioVars -> . ternarioVars
    (119) valoresTernarioVars -> . ( ternarioVars )
    (120) valoresTernarioVars -> . atributos
    (121) valoresTernarioVars -> . varsOps
    (122) valoresTernarioVars -> . varYVals
    (123) valoresTernarioVars -> . RES
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (92) reg -> . { campos }
    (56) vec -> . [ elem ]
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    BOOL            shift and go to state 305
    (               shift and go to state 523
    RES             shift and go to state 288
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 520
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 339
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 340
    expBool                        shift and go to state 521
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 530
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 440
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 442
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 527

    (110) ternarioVars -> valoresBool ? valoresTernarioBool . : valoresTernarioVars
    (133) ternarioBool -> valoresBool ? valoresTernarioBool . : valoresTernarioBool

    :               shift and go to state 547


state 528

    (108) ternarioVars -> valoresBool ? valoresTernarioMat . : valoresTernarioVars
    (124) ternarioMat -> valoresBool ? valoresTernarioMat . : valoresTernarioMat

    :               shift and go to state 548


state 529

    (115) ternarioVars -> expBool ? valoresTernarioBool . : valoresTernarioVars
    (134) ternarioBool -> expBool ? valoresTernarioBool . : valoresTernarioBool

    :               shift and go to state 549


state 530

    (113) ternarioVars -> expBool ? valoresTernarioMat . : valoresTernarioVars
    (125) ternarioMat -> expBool ? valoresTernarioMat . : valoresTernarioMat

    :               shift and go to state 550


state 531

    (110) ternarioVars -> valoresBool ? valoresTernarioBool . : valoresTernarioVars

    :               shift and go to state 551


state 532

    (139) valoresTernarioBool -> expBool .
    (125) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (111) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (134) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> expBool . OR and
    (207) expBool -> expBool . OR valoresBool

    :               reduce using rule 139 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 535
    OR              shift and go to state 203


state 533

    (132) valoresTernarioMat -> ( . ternarioMat )
    (119) valoresTernarioVars -> ( . ternarioVars )
    (138) valoresTernarioBool -> ( . ternarioBool )
    (164) valoresMat -> ( . ternarioMat )
    (203) valoresBool -> ( . ternarioBool )
    (232) tCompareEQ -> ( . ternarioBool )
    (233) tCompareEQ -> ( . ternarioMat )
    (197) paren -> ( . eMat )
    (198) paren -> ( . valoresMat )
    (240) tCompare -> ( . ternarioMat )
    (248) parenBool -> ( . expBool )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (56) vec -> . [ elem ]
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 177
    BOOL            shift and go to state 187
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 499
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 391
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 392
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    expBool                        shift and go to state 500
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 179
    ternarioVars                   shift and go to state 393
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 534

    (124) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (106) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (133) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (116) valoresTernarioVars -> . reg
    (117) valoresTernarioVars -> . vec
    (118) valoresTernarioVars -> . ternarioVars
    (119) valoresTernarioVars -> . ( ternarioVars )
    (120) valoresTernarioVars -> . atributos
    (121) valoresTernarioVars -> . varsOps
    (122) valoresTernarioVars -> . varYVals
    (123) valoresTernarioVars -> . RES
    (135) valoresTernarioBool -> . BOOL
    (136) valoresTernarioBool -> . funcBool
    (137) valoresTernarioBool -> . ternarioBool
    (138) valoresTernarioBool -> . ( ternarioBool )
    (139) valoresTernarioBool -> . expBool
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (92) reg -> . { campos }
    (56) vec -> . [ elem ]
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (51) funcBool -> . COLINEALES ( valores , valores )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    (               shift and go to state 533
    RES             shift and go to state 288
    BOOL            shift and go to state 305
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    atributos                      shift and go to state 310
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 499
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 527
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 299
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 302
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 297
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 309
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 532

state 535

    (125) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (111) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (134) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (116) valoresTernarioVars -> . reg
    (117) valoresTernarioVars -> . vec
    (118) valoresTernarioVars -> . ternarioVars
    (119) valoresTernarioVars -> . ( ternarioVars )
    (120) valoresTernarioVars -> . atributos
    (121) valoresTernarioVars -> . varsOps
    (122) valoresTernarioVars -> . varYVals
    (123) valoresTernarioVars -> . RES
    (135) valoresTernarioBool -> . BOOL
    (136) valoresTernarioBool -> . funcBool
    (137) valoresTernarioBool -> . ternarioBool
    (138) valoresTernarioBool -> . ( ternarioBool )
    (139) valoresTernarioBool -> . expBool
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (92) reg -> . { campos }
    (56) vec -> . [ elem ]
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (51) funcBool -> . COLINEALES ( valores , valores )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    (               shift and go to state 533
    RES             shift and go to state 288
    BOOL            shift and go to state 305
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 499
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 529
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 340
    expBool                        shift and go to state 532
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 341
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 297
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 309
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 536

    (115) ternarioVars -> expBool ? valoresTernarioBool . : valoresTernarioVars

    :               shift and go to state 552


state 537

    (16) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE . { g }
    (19) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE . lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE . COMMENT com lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (150) varAsig -> . variable MULEQ valores
    (151) varAsig -> . variable DIVEQ valores
    (152) varAsig -> . variable MASEQ valores
    (153) varAsig -> . variable MENOSEQ valores
    (154) varAsig -> . variable = valores
    (155) varAsig -> . ID . ID = valores
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 555
    COMMENT         shift and go to state 553
    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 554
    varsOps                        shift and go to state 13
    loop                           shift and go to state 39

state 538

    (14) lCerrada -> IF ( cosaBooleana ) . { g } ELSE { g }
    (15) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE { g }
    (16) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) . { g } ELSE lCerrada
    (18) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE COMMENT com lCerrada
    (6) lAbierta -> IF ( cosaBooleana ) . linea
    (7) lAbierta -> IF ( cosaBooleana ) . { g } ELSE lAbierta
    (8) lAbierta -> IF ( cosaBooleana ) . lCerrada ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) . { g }
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (150) varAsig -> . variable MULEQ valores
    (151) varAsig -> . variable DIVEQ valores
    (152) varAsig -> . variable MASEQ valores
    (153) varAsig -> . variable MENOSEQ valores
    (154) varAsig -> . variable = valores
    (155) varAsig -> . ID . ID = valores
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 557
    COMMENT         shift and go to state 414
    IF              shift and go to state 415
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    varsOps                        shift and go to state 13
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 556
    lAbierta                       shift and go to state 30
    linea                          shift and go to state 413
    loop                           shift and go to state 418

state 539

    (20) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com . lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (150) varAsig -> . variable MULEQ valores
    (151) varAsig -> . variable DIVEQ valores
    (152) varAsig -> . variable MASEQ valores
    (153) varAsig -> . variable MENOSEQ valores
    (154) varAsig -> . variable = valores
    (155) varAsig -> . ID . ID = valores
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 558
    varsOps                        shift and go to state 13
    loop                           shift and go to state 39

state 540

    (15) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g . }

    }               shift and go to state 559


state 541

    (7) lAbierta -> IF ( cosaBooleana ) { g } ELSE . lAbierta
    (14) lCerrada -> IF ( cosaBooleana ) { g } ELSE . { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g } ELSE . lCerrada
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (150) varAsig -> . variable MULEQ valores
    (151) varAsig -> . variable DIVEQ valores
    (152) varAsig -> . variable MASEQ valores
    (153) varAsig -> . variable MENOSEQ valores
    (154) varAsig -> . variable = valores
    (155) varAsig -> . ID . ID = valores
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 562
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 560
    lAbierta                       shift and go to state 561
    varsOps                        shift and go to state 13
    loop                           shift and go to state 32

state 542

    (27) lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .

    COMMENT         reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    IF              reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    DO              reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    WHILE           reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    FOR             reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    RETURN          reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    ;               reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    MENOSMENOS      reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    MASMAS          reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    ID              reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    PRINT           reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    MULTIESCALAR    reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    LENGTH          reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    CAPITALIZAR     reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    COLINEALES      reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    [               reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    }               reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    $end            reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    ELSE            reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)


state 543

    (14) lCerrada -> IF ( cosaBooleana ) { g } ELSE . { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g } ELSE . lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (150) varAsig -> . variable MULEQ valores
    (151) varAsig -> . variable DIVEQ valores
    (152) varAsig -> . variable MASEQ valores
    (153) varAsig -> . variable MENOSEQ valores
    (154) varAsig -> . variable = valores
    (155) varAsig -> . ID . ID = valores
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 562
    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 560
    varsOps                        shift and go to state 13
    loop                           shift and go to state 39

state 544

    (25) lCerrada -> DO { g } WHILE ( valores ) ; .

    COMMENT         reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    IF              reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    DO              reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    WHILE           reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    FOR             reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    RETURN          reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    ;               reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    MENOSMENOS      reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    MASMAS          reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    ID              reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    PRINT           reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    MULTIESCALAR    reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    LENGTH          reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    CAPITALIZAR     reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    COLINEALES      reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    [               reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    }               reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    $end            reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    ELSE            reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)


state 545

    (108) ternarioVars -> valoresBool ? valoresTernarioMat : . valoresTernarioVars
    (116) valoresTernarioVars -> . reg
    (117) valoresTernarioVars -> . vec
    (118) valoresTernarioVars -> . ternarioVars
    (119) valoresTernarioVars -> . ( ternarioVars )
    (120) valoresTernarioVars -> . atributos
    (121) valoresTernarioVars -> . varsOps
    (122) valoresTernarioVars -> . varYVals
    (123) valoresTernarioVars -> . RES
    (92) reg -> . { campos }
    (56) vec -> . [ elem ]
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (51) funcBool -> . COLINEALES ( valores , valores )
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (248) parenBool -> . ( expBool )
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )

    (               shift and go to state 565
    RES             shift and go to state 288
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    BOOL            shift and go to state 187
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77

    and                            shift and go to state 60
    atributos                      shift and go to state 310
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 563
    eMat                           shift and go to state 228
    p                              shift and go to state 96
    vecVal                         shift and go to state 290
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 445
    exp                            shift and go to state 100
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    tCompareEQ                     shift and go to state 75
    varsOps                        shift and go to state 432
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 434
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 564

state 546

    (113) ternarioVars -> expBool ? valoresTernarioMat : . valoresTernarioVars
    (116) valoresTernarioVars -> . reg
    (117) valoresTernarioVars -> . vec
    (118) valoresTernarioVars -> . ternarioVars
    (119) valoresTernarioVars -> . ( ternarioVars )
    (120) valoresTernarioVars -> . atributos
    (121) valoresTernarioVars -> . varsOps
    (122) valoresTernarioVars -> . varYVals
    (123) valoresTernarioVars -> . RES
    (92) reg -> . { campos }
    (56) vec -> . [ elem ]
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (51) funcBool -> . COLINEALES ( valores , valores )
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (248) parenBool -> . ( expBool )
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )

    (               shift and go to state 565
    RES             shift and go to state 288
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    BOOL            shift and go to state 187
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    vecVal                         shift and go to state 290
    eMat                           shift and go to state 228
    p                              shift and go to state 96
    valoresBool                    shift and go to state 563
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 464
    expBool                        shift and go to state 564
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    tCompareEQ                     shift and go to state 75
    varsOps                        shift and go to state 432
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 434
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 547

    (110) ternarioVars -> valoresBool ? valoresTernarioBool : . valoresTernarioVars
    (133) ternarioBool -> valoresBool ? valoresTernarioBool : . valoresTernarioBool
    (116) valoresTernarioVars -> . reg
    (117) valoresTernarioVars -> . vec
    (118) valoresTernarioVars -> . ternarioVars
    (119) valoresTernarioVars -> . ( ternarioVars )
    (120) valoresTernarioVars -> . atributos
    (121) valoresTernarioVars -> . varsOps
    (122) valoresTernarioVars -> . varYVals
    (123) valoresTernarioVars -> . RES
    (135) valoresTernarioBool -> . BOOL
    (136) valoresTernarioBool -> . funcBool
    (137) valoresTernarioBool -> . ternarioBool
    (138) valoresTernarioBool -> . ( ternarioBool )
    (139) valoresTernarioBool -> . expBool
    (92) reg -> . { campos }
    (56) vec -> . [ elem ]
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (51) funcBool -> . COLINEALES ( valores , valores )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (248) parenBool -> . ( expBool )
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )

    (               shift and go to state 568
    RES             shift and go to state 288
    BOOL            shift and go to state 305
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77

    and                            shift and go to state 60
    atributos                      shift and go to state 310
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 566
    eMat                           shift and go to state 228
    p                              shift and go to state 96
    valoresTernarioBool            shift and go to state 429
    vecVal                         shift and go to state 290
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 430
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    tCompareEQ                     shift and go to state 75
    varsOps                        shift and go to state 432
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 434
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 567

state 548

    (108) ternarioVars -> valoresBool ? valoresTernarioMat : . valoresTernarioVars
    (124) ternarioMat -> valoresBool ? valoresTernarioMat : . valoresTernarioMat
    (116) valoresTernarioVars -> . reg
    (117) valoresTernarioVars -> . vec
    (118) valoresTernarioVars -> . ternarioVars
    (119) valoresTernarioVars -> . ( ternarioVars )
    (120) valoresTernarioVars -> . atributos
    (121) valoresTernarioVars -> . varsOps
    (122) valoresTernarioVars -> . varYVals
    (123) valoresTernarioVars -> . RES
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (92) reg -> . { campos }
    (56) vec -> . [ elem ]
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (51) funcBool -> . COLINEALES ( valores , valores )
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    (               shift and go to state 570
    RES             shift and go to state 288
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    BOOL            shift and go to state 187
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    atributos                      shift and go to state 310
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 569
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 445
    exp                            shift and go to state 100
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 446
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 440
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 442
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 571

state 549

    (115) ternarioVars -> expBool ? valoresTernarioBool : . valoresTernarioVars
    (134) ternarioBool -> expBool ? valoresTernarioBool : . valoresTernarioBool
    (116) valoresTernarioVars -> . reg
    (117) valoresTernarioVars -> . vec
    (118) valoresTernarioVars -> . ternarioVars
    (119) valoresTernarioVars -> . ( ternarioVars )
    (120) valoresTernarioVars -> . atributos
    (121) valoresTernarioVars -> . varsOps
    (122) valoresTernarioVars -> . varYVals
    (123) valoresTernarioVars -> . RES
    (135) valoresTernarioBool -> . BOOL
    (136) valoresTernarioBool -> . funcBool
    (137) valoresTernarioBool -> . ternarioBool
    (138) valoresTernarioBool -> . ( ternarioBool )
    (139) valoresTernarioBool -> . expBool
    (92) reg -> . { campos }
    (56) vec -> . [ elem ]
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (51) funcBool -> . COLINEALES ( valores , valores )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (248) parenBool -> . ( expBool )
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )

    (               shift and go to state 568
    RES             shift and go to state 288
    BOOL            shift and go to state 305
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 566
    eMat                           shift and go to state 228
    p                              shift and go to state 96
    valoresTernarioBool            shift and go to state 458
    vecVal                         shift and go to state 290
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 459
    expBool                        shift and go to state 567
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    tCompareEQ                     shift and go to state 75
    varsOps                        shift and go to state 432
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 434
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 550

    (113) ternarioVars -> expBool ? valoresTernarioMat : . valoresTernarioVars
    (125) ternarioMat -> expBool ? valoresTernarioMat : . valoresTernarioMat
    (116) valoresTernarioVars -> . reg
    (117) valoresTernarioVars -> . vec
    (118) valoresTernarioVars -> . ternarioVars
    (119) valoresTernarioVars -> . ( ternarioVars )
    (120) valoresTernarioVars -> . atributos
    (121) valoresTernarioVars -> . varsOps
    (122) valoresTernarioVars -> . varYVals
    (123) valoresTernarioVars -> . RES
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (92) reg -> . { campos }
    (56) vec -> . [ elem ]
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (51) funcBool -> . COLINEALES ( valores , valores )
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    (               shift and go to state 570
    RES             shift and go to state 288
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    BOOL            shift and go to state 187
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    vecVal                         shift and go to state 290
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresBool                    shift and go to state 569
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 464
    expBool                        shift and go to state 571
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 463
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 440
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 442
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 551

    (110) ternarioVars -> valoresBool ? valoresTernarioBool : . valoresTernarioVars
    (116) valoresTernarioVars -> . reg
    (117) valoresTernarioVars -> . vec
    (118) valoresTernarioVars -> . ternarioVars
    (119) valoresTernarioVars -> . ( ternarioVars )
    (120) valoresTernarioVars -> . atributos
    (121) valoresTernarioVars -> . varsOps
    (122) valoresTernarioVars -> . varYVals
    (123) valoresTernarioVars -> . RES
    (92) reg -> . { campos }
    (56) vec -> . [ elem ]
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (51) funcBool -> . COLINEALES ( valores , valores )
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (248) parenBool -> . ( expBool )
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )

    (               shift and go to state 565
    RES             shift and go to state 288
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    BOOL            shift and go to state 187
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77

    and                            shift and go to state 60
    atributos                      shift and go to state 310
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 563
    eMat                           shift and go to state 228
    p                              shift and go to state 96
    vecVal                         shift and go to state 290
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 430
    exp                            shift and go to state 100
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    tCompareEQ                     shift and go to state 75
    varsOps                        shift and go to state 432
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 434
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 564

state 552

    (115) ternarioVars -> expBool ? valoresTernarioBool : . valoresTernarioVars
    (116) valoresTernarioVars -> . reg
    (117) valoresTernarioVars -> . vec
    (118) valoresTernarioVars -> . ternarioVars
    (119) valoresTernarioVars -> . ( ternarioVars )
    (120) valoresTernarioVars -> . atributos
    (121) valoresTernarioVars -> . varsOps
    (122) valoresTernarioVars -> . varYVals
    (123) valoresTernarioVars -> . RES
    (92) reg -> . { campos }
    (56) vec -> . [ elem ]
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (51) funcBool -> . COLINEALES ( valores , valores )
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (248) parenBool -> . ( expBool )
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )

    (               shift and go to state 565
    RES             shift and go to state 288
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    BOOL            shift and go to state 187
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 563
    eMat                           shift and go to state 228
    p                              shift and go to state 96
    vecVal                         shift and go to state 290
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 459
    expBool                        shift and go to state 564
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    tCompareEQ                     shift and go to state 75
    varsOps                        shift and go to state 432
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 434
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 553

    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT . com lCerrada
    (12) com -> . COMMENT com
    (13) com -> . empty
    (55) empty -> .

    COMMENT         shift and go to state 117
    IF              reduce using rule 55 (empty -> .)
    DO              reduce using rule 55 (empty -> .)
    RETURN          reduce using rule 55 (empty -> .)
    ;               reduce using rule 55 (empty -> .)
    WHILE           reduce using rule 55 (empty -> .)
    FOR             reduce using rule 55 (empty -> .)
    MENOSMENOS      reduce using rule 55 (empty -> .)
    MASMAS          reduce using rule 55 (empty -> .)
    ID              reduce using rule 55 (empty -> .)
    PRINT           reduce using rule 55 (empty -> .)
    MULTIESCALAR    reduce using rule 55 (empty -> .)
    LENGTH          reduce using rule 55 (empty -> .)
    CAPITALIZAR     reduce using rule 55 (empty -> .)
    COLINEALES      reduce using rule 55 (empty -> .)
    [               reduce using rule 55 (empty -> .)

    com                            shift and go to state 572
    empty                          shift and go to state 119

state 554

    (19) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .

    COMMENT         reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    IF              reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    DO              reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    WHILE           reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    FOR             reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    RETURN          reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    ;               reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    MENOSMENOS      reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    MASMAS          reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    ID              reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    PRINT           reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    MULTIESCALAR    reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    LENGTH          reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    CAPITALIZAR     reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    COLINEALES      reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    [               reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    }               reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    $end            reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    ELSE            reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)


state 555

    (16) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { . g }
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (55) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (150) varAsig -> . variable MULEQ valores
    (151) varAsig -> . variable DIVEQ valores
    (152) varAsig -> . variable MASEQ valores
    (153) varAsig -> . variable MENOSEQ valores
    (154) varAsig -> . variable = valores
    (155) varAsig -> . ID . ID = valores
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 55 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 12
    varsOps                        shift and go to state 13
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 573
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 30
    loop                           shift and go to state 32
    linea                          shift and go to state 34

state 556

    (15) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE { g }
    (18) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE COMMENT com lCerrada
    (8) lAbierta -> IF ( cosaBooleana ) lCerrada . ELSE lAbierta
    (5) linea -> lCerrada .

    ELSE            shift and go to state 574
    COMMENT         reduce using rule 5 (linea -> lCerrada .)
    IF              reduce using rule 5 (linea -> lCerrada .)
    DO              reduce using rule 5 (linea -> lCerrada .)
    WHILE           reduce using rule 5 (linea -> lCerrada .)
    FOR             reduce using rule 5 (linea -> lCerrada .)
    RETURN          reduce using rule 5 (linea -> lCerrada .)
    ;               reduce using rule 5 (linea -> lCerrada .)
    MENOSMENOS      reduce using rule 5 (linea -> lCerrada .)
    MASMAS          reduce using rule 5 (linea -> lCerrada .)
    ID              reduce using rule 5 (linea -> lCerrada .)
    PRINT           reduce using rule 5 (linea -> lCerrada .)
    MULTIESCALAR    reduce using rule 5 (linea -> lCerrada .)
    LENGTH          reduce using rule 5 (linea -> lCerrada .)
    CAPITALIZAR     reduce using rule 5 (linea -> lCerrada .)
    COLINEALES      reduce using rule 5 (linea -> lCerrada .)
    [               reduce using rule 5 (linea -> lCerrada .)
    $end            reduce using rule 5 (linea -> lCerrada .)
    }               reduce using rule 5 (linea -> lCerrada .)


state 557

    (14) lCerrada -> IF ( cosaBooleana ) { . g } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { . g } ELSE lCerrada
    (7) lAbierta -> IF ( cosaBooleana ) { . g } ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) { . g }
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (55) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (150) varAsig -> . variable MULEQ valores
    (151) varAsig -> . variable DIVEQ valores
    (152) varAsig -> . variable MASEQ valores
    (153) varAsig -> . variable MENOSEQ valores
    (154) varAsig -> . variable = valores
    (155) varAsig -> . ID . ID = valores
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 55 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    linea                          shift and go to state 34
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 12
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 575
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 30
    varsOps                        shift and go to state 13
    loop                           shift and go to state 32

state 558

    (20) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .

    COMMENT         reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    IF              reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    DO              reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    WHILE           reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    FOR             reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    RETURN          reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    ;               reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    MENOSMENOS      reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    MASMAS          reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    ID              reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    PRINT           reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    MULTIESCALAR    reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    LENGTH          reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    CAPITALIZAR     reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    COLINEALES      reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    [               reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    }               reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    $end            reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    ELSE            reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)


state 559

    (15) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .

    COMMENT         reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    IF              reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    DO              reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    WHILE           reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    FOR             reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    RETURN          reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    ;               reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    MENOSMENOS      reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    MASMAS          reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    ID              reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    PRINT           reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    MULTIESCALAR    reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    LENGTH          reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    CAPITALIZAR     reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    COLINEALES      reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    [               reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    }               reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    $end            reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    ELSE            reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)


state 560

    (17) lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .

    COMMENT         reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    IF              reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    DO              reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    WHILE           reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    FOR             reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    RETURN          reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    ;               reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    MENOSMENOS      reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    MASMAS          reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    ID              reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    PRINT           reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    MULTIESCALAR    reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    LENGTH          reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    CAPITALIZAR     reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    COLINEALES      reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    [               reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    }               reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    $end            reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    ELSE            reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)


state 561

    (7) lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .

    COMMENT         reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    IF              reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    DO              reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    WHILE           reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    FOR             reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    RETURN          reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    ;               reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    MENOSMENOS      reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    MASMAS          reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    ID              reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    PRINT           reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    MULTIESCALAR    reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    LENGTH          reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    CAPITALIZAR     reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    COLINEALES      reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    [               reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    }               reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    $end            reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)


state 562

    (14) lCerrada -> IF ( cosaBooleana ) { g } ELSE { . g }
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (55) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (150) varAsig -> . variable MULEQ valores
    (151) varAsig -> . variable DIVEQ valores
    (152) varAsig -> . variable MASEQ valores
    (153) varAsig -> . variable MENOSEQ valores
    (154) varAsig -> . variable = valores
    (155) varAsig -> . ID . ID = valores
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 55 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 12
    varsOps                        shift and go to state 13
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 576
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 30
    loop                           shift and go to state 32
    linea                          shift and go to state 34

state 563

    (106) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (206) expBool -> valoresBool . OR and
    (208) expBool -> valoresBool . OR valoresBool
    (211) and -> valoresBool . AND eq
    (213) and -> valoresBool . AND valoresBool

    ?               shift and go to state 577
    OR              shift and go to state 166
    AND             shift and go to state 165


state 564

    (111) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (205) expBool -> expBool . OR and
    (207) expBool -> expBool . OR valoresBool

    ?               shift and go to state 578
    OR              shift and go to state 203


state 565

    (119) valoresTernarioVars -> ( . ternarioVars )
    (203) valoresBool -> ( . ternarioBool )
    (232) tCompareEQ -> ( . ternarioBool )
    (233) tCompareEQ -> ( . ternarioMat )
    (240) tCompare -> ( . ternarioMat )
    (164) valoresMat -> ( . ternarioMat )
    (248) parenBool -> ( . expBool )
    (197) paren -> ( . eMat )
    (198) paren -> ( . valoresMat )
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (51) funcBool -> . COLINEALES ( valores , valores )
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (56) vec -> . [ elem ]
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 370
    BOOL            shift and go to state 187
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 579
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 371
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    expBool                        shift and go to state 580
    ternarioBool                   shift and go to state 323
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 393
    mayor                          shift and go to state 81
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 566

    (106) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (133) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (206) expBool -> valoresBool . OR and
    (208) expBool -> valoresBool . OR valoresBool
    (211) and -> valoresBool . AND eq
    (213) and -> valoresBool . AND valoresBool

    ?               shift and go to state 581
    OR              shift and go to state 166
    AND             shift and go to state 165


state 567

    (139) valoresTernarioBool -> expBool .
    (111) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (134) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> expBool . OR and
    (207) expBool -> expBool . OR valoresBool

    ,               reduce using rule 139 (valoresTernarioBool -> expBool .)
    ]               reduce using rule 139 (valoresTernarioBool -> expBool .)
    )               reduce using rule 139 (valoresTernarioBool -> expBool .)
    ;               reduce using rule 139 (valoresTernarioBool -> expBool .)
    :               reduce using rule 139 (valoresTernarioBool -> expBool .)
    }               reduce using rule 139 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 582
    OR              shift and go to state 203


state 568

    (119) valoresTernarioVars -> ( . ternarioVars )
    (138) valoresTernarioBool -> ( . ternarioBool )
    (203) valoresBool -> ( . ternarioBool )
    (232) tCompareEQ -> ( . ternarioBool )
    (233) tCompareEQ -> ( . ternarioMat )
    (240) tCompare -> ( . ternarioMat )
    (164) valoresMat -> ( . ternarioMat )
    (248) parenBool -> ( . expBool )
    (197) paren -> ( . eMat )
    (198) paren -> ( . valoresMat )
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (51) funcBool -> . COLINEALES ( valores , valores )
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (56) vec -> . [ elem ]
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 370
    BOOL            shift and go to state 187
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 579
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 371
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    expBool                        shift and go to state 580
    ternarioBool                   shift and go to state 392
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 393
    mayor                          shift and go to state 81
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 569

    (106) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (124) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (206) expBool -> valoresBool . OR and
    (208) expBool -> valoresBool . OR valoresBool
    (211) and -> valoresBool . AND eq
    (213) and -> valoresBool . AND valoresBool

    ?               shift and go to state 583
    OR              shift and go to state 166
    AND             shift and go to state 165


state 570

    (119) valoresTernarioVars -> ( . ternarioVars )
    (132) valoresTernarioMat -> ( . ternarioMat )
    (203) valoresBool -> ( . ternarioBool )
    (164) valoresMat -> ( . ternarioMat )
    (232) tCompareEQ -> ( . ternarioBool )
    (233) tCompareEQ -> ( . ternarioMat )
    (197) paren -> ( . eMat )
    (198) paren -> ( . valoresMat )
    (240) tCompare -> ( . ternarioMat )
    (248) parenBool -> ( . expBool )
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (92) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (56) vec -> . [ elem ]
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 177
    BOOL            shift and go to state 187
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 435
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 391
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 323
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    expBool                        shift and go to state 497
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 179
    ternarioVars                   shift and go to state 393
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 571

    (111) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (125) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (205) expBool -> expBool . OR and
    (207) expBool -> expBool . OR valoresBool

    ?               shift and go to state 584
    OR              shift and go to state 203


state 572

    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com . lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (150) varAsig -> . variable MULEQ valores
    (151) varAsig -> . variable DIVEQ valores
    (152) varAsig -> . variable MASEQ valores
    (153) varAsig -> . variable MENOSEQ valores
    (154) varAsig -> . variable = valores
    (155) varAsig -> . ID . ID = valores
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 585
    varsOps                        shift and go to state 13
    loop                           shift and go to state 39

state 573

    (16) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g . }

    }               shift and go to state 586


state 574

    (15) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . { g }
    (18) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . COMMENT com lCerrada
    (8) lAbierta -> IF ( cosaBooleana ) lCerrada ELSE . lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (150) varAsig -> . variable MULEQ valores
    (151) varAsig -> . variable DIVEQ valores
    (152) varAsig -> . variable MASEQ valores
    (153) varAsig -> . variable MENOSEQ valores
    (154) varAsig -> . variable = valores
    (155) varAsig -> . ID . ID = valores
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 512
    COMMENT         shift and go to state 509
    IF              shift and go to state 415
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    varsOps                        shift and go to state 13
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 510
    lAbierta                       shift and go to state 511
    loop                           shift and go to state 418

state 575

    (14) lCerrada -> IF ( cosaBooleana ) { g . } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g . } ELSE lCerrada
    (7) lAbierta -> IF ( cosaBooleana ) { g . } ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) { g . }

    }               shift and go to state 587


state 576

    (14) lCerrada -> IF ( cosaBooleana ) { g } ELSE { g . }

    }               shift and go to state 588


state 577

    (106) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (116) valoresTernarioVars -> . reg
    (117) valoresTernarioVars -> . vec
    (118) valoresTernarioVars -> . ternarioVars
    (119) valoresTernarioVars -> . ( ternarioVars )
    (120) valoresTernarioVars -> . atributos
    (121) valoresTernarioVars -> . varsOps
    (122) valoresTernarioVars -> . varYVals
    (123) valoresTernarioVars -> . RES
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (135) valoresTernarioBool -> . BOOL
    (136) valoresTernarioBool -> . funcBool
    (137) valoresTernarioBool -> . ternarioBool
    (138) valoresTernarioBool -> . ( ternarioBool )
    (139) valoresTernarioBool -> . expBool
    (92) reg -> . { campos }
    (56) vec -> . [ elem ]
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    (               shift and go to state 441
    RES             shift and go to state 288
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    BOOL            shift and go to state 305
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    COLINEALES      shift and go to state 4
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    atributos                      shift and go to state 310
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 435
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 531
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 299
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 522
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 440
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 442
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 439

state 578

    (111) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (116) valoresTernarioVars -> . reg
    (117) valoresTernarioVars -> . vec
    (118) valoresTernarioVars -> . ternarioVars
    (119) valoresTernarioVars -> . ( ternarioVars )
    (120) valoresTernarioVars -> . atributos
    (121) valoresTernarioVars -> . varsOps
    (122) valoresTernarioVars -> . varYVals
    (123) valoresTernarioVars -> . RES
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (135) valoresTernarioBool -> . BOOL
    (136) valoresTernarioBool -> . funcBool
    (137) valoresTernarioBool -> . ternarioBool
    (138) valoresTernarioBool -> . ( ternarioBool )
    (139) valoresTernarioBool -> . expBool
    (92) reg -> . { campos }
    (56) vec -> . [ elem ]
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    (               shift and go to state 441
    RES             shift and go to state 288
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    BOOL            shift and go to state 305
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    COLINEALES      shift and go to state 4
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 435
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 536
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 340
    expBool                        shift and go to state 439
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 524
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 440
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 442
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 579

    (106) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (133) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (124) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (206) expBool -> valoresBool . OR and
    (208) expBool -> valoresBool . OR valoresBool
    (211) and -> valoresBool . AND eq
    (213) and -> valoresBool . AND valoresBool

    ?               shift and go to state 589
    OR              shift and go to state 166
    AND             shift and go to state 165


state 580

    (248) parenBool -> ( expBool . )
    (111) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (134) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (125) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (205) expBool -> expBool . OR and
    (207) expBool -> expBool . OR valoresBool

    )               shift and go to state 327
    ?               shift and go to state 590
    OR              shift and go to state 203


state 581

    (106) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (133) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (116) valoresTernarioVars -> . reg
    (117) valoresTernarioVars -> . vec
    (118) valoresTernarioVars -> . ternarioVars
    (119) valoresTernarioVars -> . ( ternarioVars )
    (120) valoresTernarioVars -> . atributos
    (121) valoresTernarioVars -> . varsOps
    (122) valoresTernarioVars -> . varYVals
    (123) valoresTernarioVars -> . RES
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (135) valoresTernarioBool -> . BOOL
    (136) valoresTernarioBool -> . funcBool
    (137) valoresTernarioBool -> . ternarioBool
    (138) valoresTernarioBool -> . ( ternarioBool )
    (139) valoresTernarioBool -> . expBool
    (92) reg -> . { campos }
    (56) vec -> . [ elem ]
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    (               shift and go to state 441
    RES             shift and go to state 288
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    BOOL            shift and go to state 305
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    COLINEALES      shift and go to state 4
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    atributos                      shift and go to state 310
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 435
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 527
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 299
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 522
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 440
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 442
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 439

state 582

    (111) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (134) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (116) valoresTernarioVars -> . reg
    (117) valoresTernarioVars -> . vec
    (118) valoresTernarioVars -> . ternarioVars
    (119) valoresTernarioVars -> . ( ternarioVars )
    (120) valoresTernarioVars -> . atributos
    (121) valoresTernarioVars -> . varsOps
    (122) valoresTernarioVars -> . varYVals
    (123) valoresTernarioVars -> . RES
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (135) valoresTernarioBool -> . BOOL
    (136) valoresTernarioBool -> . funcBool
    (137) valoresTernarioBool -> . ternarioBool
    (138) valoresTernarioBool -> . ( ternarioBool )
    (139) valoresTernarioBool -> . expBool
    (92) reg -> . { campos }
    (56) vec -> . [ elem ]
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    (               shift and go to state 441
    RES             shift and go to state 288
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    BOOL            shift and go to state 305
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    COLINEALES      shift and go to state 4
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 435
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 529
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 340
    expBool                        shift and go to state 439
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 524
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 440
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 442
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 583

    (106) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (124) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (116) valoresTernarioVars -> . reg
    (117) valoresTernarioVars -> . vec
    (118) valoresTernarioVars -> . ternarioVars
    (119) valoresTernarioVars -> . ( ternarioVars )
    (120) valoresTernarioVars -> . atributos
    (121) valoresTernarioVars -> . varsOps
    (122) valoresTernarioVars -> . varYVals
    (123) valoresTernarioVars -> . RES
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (135) valoresTernarioBool -> . BOOL
    (136) valoresTernarioBool -> . funcBool
    (137) valoresTernarioBool -> . ternarioBool
    (138) valoresTernarioBool -> . ( ternarioBool )
    (139) valoresTernarioBool -> . expBool
    (92) reg -> . { campos }
    (56) vec -> . [ elem ]
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    (               shift and go to state 441
    RES             shift and go to state 288
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    BOOL            shift and go to state 305
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    COLINEALES      shift and go to state 4
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    atributos                      shift and go to state 310
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 435
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 531
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 299
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 528
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 440
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 442
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 439

state 584

    (111) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (125) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (116) valoresTernarioVars -> . reg
    (117) valoresTernarioVars -> . vec
    (118) valoresTernarioVars -> . ternarioVars
    (119) valoresTernarioVars -> . ( ternarioVars )
    (120) valoresTernarioVars -> . atributos
    (121) valoresTernarioVars -> . varsOps
    (122) valoresTernarioVars -> . varYVals
    (123) valoresTernarioVars -> . RES
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (135) valoresTernarioBool -> . BOOL
    (136) valoresTernarioBool -> . funcBool
    (137) valoresTernarioBool -> . ternarioBool
    (138) valoresTernarioBool -> . ( ternarioBool )
    (139) valoresTernarioBool -> . expBool
    (92) reg -> . { campos }
    (56) vec -> . [ elem ]
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    (               shift and go to state 441
    RES             shift and go to state 288
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    BOOL            shift and go to state 305
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    COLINEALES      shift and go to state 4
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 435
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 536
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 340
    expBool                        shift and go to state 439
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 530
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 440
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 442
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 585

    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .

    COMMENT         reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    IF              reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    DO              reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    WHILE           reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    FOR             reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    RETURN          reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    ;               reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    MENOSMENOS      reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    MASMAS          reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    ID              reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    PRINT           reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    MULTIESCALAR    reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    LENGTH          reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    CAPITALIZAR     reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    COLINEALES      reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    [               reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    }               reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    $end            reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    ELSE            reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)


state 586

    (16) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .

    COMMENT         reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    IF              reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    DO              reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    WHILE           reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    FOR             reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    RETURN          reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    ;               reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    MENOSMENOS      reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    MASMAS          reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    ID              reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    PRINT           reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    MULTIESCALAR    reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    LENGTH          reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    CAPITALIZAR     reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    COLINEALES      reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    [               reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    }               reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    $end            reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    ELSE            reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)


state 587

    (14) lCerrada -> IF ( cosaBooleana ) { g } . ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g } . ELSE lCerrada
    (7) lAbierta -> IF ( cosaBooleana ) { g } . ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) { g } .

    ELSE            shift and go to state 591
    COMMENT         reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    IF              reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    DO              reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    WHILE           reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    FOR             reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    RETURN          reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    ;               reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MENOSMENOS      reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MASMAS          reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    ID              reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    PRINT           reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MULTIESCALAR    reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    LENGTH          reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    CAPITALIZAR     reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    COLINEALES      reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    [               reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    $end            reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    }               reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)


state 588

    (14) lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .

    COMMENT         reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    IF              reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    DO              reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    WHILE           reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    FOR             reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    RETURN          reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    ;               reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    MENOSMENOS      reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    MASMAS          reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    ID              reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    PRINT           reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    MULTIESCALAR    reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    LENGTH          reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    CAPITALIZAR     reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    COLINEALES      reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    [               reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    }               reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    $end            reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    ELSE            reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)


state 589

    (106) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (133) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (124) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (116) valoresTernarioVars -> . reg
    (117) valoresTernarioVars -> . vec
    (118) valoresTernarioVars -> . ternarioVars
    (119) valoresTernarioVars -> . ( ternarioVars )
    (120) valoresTernarioVars -> . atributos
    (121) valoresTernarioVars -> . varsOps
    (122) valoresTernarioVars -> . varYVals
    (123) valoresTernarioVars -> . RES
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (135) valoresTernarioBool -> . BOOL
    (136) valoresTernarioBool -> . funcBool
    (137) valoresTernarioBool -> . ternarioBool
    (138) valoresTernarioBool -> . ( ternarioBool )
    (139) valoresTernarioBool -> . expBool
    (92) reg -> . { campos }
    (56) vec -> . [ elem ]
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    (               shift and go to state 441
    RES             shift and go to state 288
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    BOOL            shift and go to state 305
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    COLINEALES      shift and go to state 4
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    atributos                      shift and go to state 310
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 435
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 527
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 299
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 528
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 440
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 442
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 439

state 590

    (111) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (134) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (125) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (116) valoresTernarioVars -> . reg
    (117) valoresTernarioVars -> . vec
    (118) valoresTernarioVars -> . ternarioVars
    (119) valoresTernarioVars -> . ( ternarioVars )
    (120) valoresTernarioVars -> . atributos
    (121) valoresTernarioVars -> . varsOps
    (122) valoresTernarioVars -> . varYVals
    (123) valoresTernarioVars -> . RES
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (135) valoresTernarioBool -> . BOOL
    (136) valoresTernarioBool -> . funcBool
    (137) valoresTernarioBool -> . ternarioBool
    (138) valoresTernarioBool -> . ( ternarioBool )
    (139) valoresTernarioBool -> . expBool
    (92) reg -> . { campos }
    (56) vec -> . [ elem ]
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (107) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (110) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (112) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (113) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (115) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (95) atributos -> . ID . valoresCampos
    (96) atributos -> . reg . valoresCampos
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (140) varYVals -> . ID
    (141) varYVals -> . vecVal
    (142) varYVals -> . vecVal . varYVals
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (165) eMat -> . eMat + p
    (166) eMat -> . valoresMat + p
    (167) eMat -> . eMat + valoresMat
    (168) eMat -> . valoresMat + valoresMat
    (169) eMat -> . p
    (170) eMat -> . eMat - p
    (171) eMat -> . valoresMat - p
    (172) eMat -> . eMat - valoresMat
    (173) eMat -> . valoresMat - valoresMat
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (133) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (134) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (205) expBool -> . expBool OR and
    (206) expBool -> . valoresBool OR and
    (207) expBool -> . expBool OR valoresBool
    (208) expBool -> . valoresBool OR valoresBool
    (209) expBool -> . and
    (199) valoresBool -> . BOOL
    (200) valoresBool -> . funcBool
    (201) valoresBool -> . varYVals
    (202) valoresBool -> . varsOps
    (203) valoresBool -> . ( ternarioBool )
    (204) valoresBool -> .
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (156) valoresMat -> . INT
    (157) valoresMat -> . FLOAT
    (158) valoresMat -> . funcInt
    (159) valoresMat -> . atributos
    (160) valoresMat -> . funcString
    (161) valoresMat -> . STRING
    (162) valoresMat -> . varYVals
    (163) valoresMat -> . varsOps
    (164) valoresMat -> . ( ternarioMat )
    (174) p -> . p * exp
    (175) p -> . p / exp
    (176) p -> . p % exp
    (177) p -> . valoresMat * exp
    (178) p -> . valoresMat / exp
    (179) p -> . valoresMat % exp
    (180) p -> . p * valoresMat
    (181) p -> . p / valoresMat
    (182) p -> . p % valoresMat
    (183) p -> . valoresMat * valoresMat
    (184) p -> . valoresMat / valoresMat
    (185) p -> . valoresMat % valoresMat
    (186) p -> . exp
    (210) and -> . and AND eq
    (211) and -> . valoresBool AND eq
    (212) and -> . and AND valoresBool
    (213) and -> . valoresBool AND valoresBool
    (214) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (187) exp -> . exp ^ iSing
    (188) exp -> . valoresMat ^ iSing
    (189) exp -> . exp ^ valoresMat
    (190) exp -> . valoresMat ^ valoresMat
    (191) exp -> . iSing
    (215) eq -> . eq EQEQ mayor
    (216) eq -> . eq DISTINTO mayor
    (217) eq -> . tCompareEQ EQEQ mayor
    (218) eq -> . tCompareEQ DISTINTO mayor
    (219) eq -> . eq EQEQ tCompareEQ
    (220) eq -> . eq DISTINTO tCompareEQ
    (221) eq -> . tCompareEQ EQEQ tCompareEQ
    (222) eq -> . tCompareEQ DISTINTO tCompareEQ
    (223) eq -> . mayor
    (192) iSing -> . - paren
    (193) iSing -> . + paren
    (194) iSing -> . - valoresMat
    (195) iSing -> . + valoresMat
    (196) iSing -> . paren
    (224) tCompareEQ -> . BOOL
    (225) tCompareEQ -> . funcBool
    (226) tCompareEQ -> . varYVals
    (227) tCompareEQ -> . varsOps
    (228) tCompareEQ -> . INT
    (229) tCompareEQ -> . FLOAT
    (230) tCompareEQ -> . funcInt
    (231) tCompareEQ -> . eMat
    (232) tCompareEQ -> . ( ternarioBool )
    (233) tCompareEQ -> . ( ternarioMat )
    (241) mayor -> . tCompare > tCompare
    (242) mayor -> . menor
    (197) paren -> . ( eMat )
    (198) paren -> . ( valoresMat )
    (234) tCompare -> . eMat
    (235) tCompare -> . varsOps
    (236) tCompare -> . varYVals
    (237) tCompare -> . INT
    (238) tCompare -> . funcInt
    (239) tCompare -> . FLOAT
    (240) tCompare -> . ( ternarioMat )
    (243) menor -> . tCompare < tCompare
    (244) menor -> . not
    (245) not -> . NOT not
    (246) not -> . NOT valoresBool
    (247) not -> . parenBool
    (248) parenBool -> . ( expBool )

    (               shift and go to state 441
    RES             shift and go to state 288
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    BOOL            shift and go to state 305
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    COLINEALES      shift and go to state 4
    ?               reduce using rule 204 (valoresBool -> .)
    OR              reduce using rule 204 (valoresBool -> .)
    AND             reduce using rule 204 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 435
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 529
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 340
    expBool                        shift and go to state 439
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 530
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 440
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 442
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 591

    (14) lCerrada -> IF ( cosaBooleana ) { g } ELSE . { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g } ELSE . lCerrada
    (7) lAbierta -> IF ( cosaBooleana ) { g } ELSE . lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (143) varsOps -> . MENOSMENOS variable
    (144) varsOps -> . MASMAS variable
    (145) varsOps -> . variable MASMAS
    (146) varsOps -> . variable MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (150) varAsig -> . variable MULEQ valores
    (151) varAsig -> . variable DIVEQ valores
    (152) varAsig -> . variable MASEQ valores
    (153) varAsig -> . variable MENOSEQ valores
    (154) varAsig -> . variable = valores
    (155) varAsig -> . ID . ID = valores
    (147) variable -> . ID
    (148) variable -> . vecVal
    (149) variable -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 562
    IF              shift and go to state 415
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    varsOps                        shift and go to state 13
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 560
    lAbierta                       shift and go to state 561
    loop                           shift and go to state 418
