Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> g
Rule 1     g -> linea g
Rule 2     g -> COMMENT g
Rule 3     g -> empty
Rule 4     linea -> lAbierta
Rule 5     linea -> lCerrada
Rule 6     lAbierta -> IF ( cosaBooleana ) linea
Rule 7     lAbierta -> IF ( cosaBooleana ) COMMENT com linea
Rule 8     lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta
Rule 9     lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
Rule 10    lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta
Rule 11    lAbierta -> IF ( cosaBooleana ) { g }
Rule 12    lAbierta -> loop lAbierta
Rule 13    lCerrada -> sentencia
Rule 14    com -> COMMENT com
Rule 15    com -> empty
Rule 16    lCerrada -> IF ( cosaBooleana ) { g } ELSE { g }
Rule 17    lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g }
Rule 18    lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
Rule 19    lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada
Rule 20    lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada
Rule 21    lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
Rule 22    lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
Rule 23    lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
Rule 24    lCerrada -> loop { g }
Rule 25    lCerrada -> loop lCerrada
Rule 26    lCerrada -> loop COMMENT com lCerrada
Rule 27    lCerrada -> DO { g } WHILE ( valores ) ;
Rule 28    lCerrada -> DO lCerrada WHILE ( valores ) ;
Rule 29    lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ;
Rule 30    sentencia -> varsOps ;
Rule 31    sentencia -> func ;
Rule 32    sentencia -> varAsig ;
Rule 33    sentencia -> RETURN ;
Rule 34    sentencia -> ;
Rule 35    loop -> WHILE ( valores )
Rule 36    loop -> FOR ( primParam ; valores ; tercerParam )
Rule 37    primParam -> varAsig
Rule 38    primParam -> empty
Rule 39    tercerParam -> varsOps
Rule 40    tercerParam -> varAsig
Rule 41    tercerParam -> func
Rule 42    tercerParam -> empty
Rule 43    cosaBooleana -> expBool
Rule 44    cosaBooleana -> valoresBool
Rule 45    func -> funcReturn
Rule 46    func -> funcVoid
Rule 47    funcReturn -> funcInt
Rule 48    funcReturn -> funcString
Rule 49    funcReturn -> funcBool
Rule 50    funcInt -> MULTIESCALAR ( valores , valores param )
Rule 51    funcInt -> LENGTH ( valores )
Rule 52    funcString -> CAPITALIZAR ( valores )
Rule 53    funcBool -> COLINEALES ( valores , valores )
Rule 54    funcVoid -> PRINT ( valores )
Rule 55    param -> , valores
Rule 56    param -> empty
Rule 57    empty -> <empty>
Rule 58    vec -> [ elem ]
Rule 59    elem -> valores , elem
Rule 60    elem -> valores
Rule 61    vecVal -> ID [ expresion ]
Rule 62    vecVal -> vec [ expresion ]
Rule 63    vecVal -> vecVal [ expresion ]
Rule 64    vecVal -> atributos [ expresion ]
Rule 65    vecVal -> ID [ INT ]
Rule 66    vecVal -> vec [ INT ]
Rule 67    vecVal -> vecVal [ INT ]
Rule 68    vecVal -> atributos [ INT ]
Rule 69    expresion -> eMat
Rule 70    expresion -> expBool
Rule 71    expresion -> funcReturn
Rule 72    expresion -> reg
Rule 73    expresion -> FLOAT
Rule 74    expresion -> STRING
Rule 75    expresion -> BOOL
Rule 76    expresion -> varYVals
Rule 77    expresion -> varsOps
Rule 78    expresion -> vec
Rule 79    expresion -> ternario
Rule 80    expresion -> atributos
Rule 81    expresion -> RES
Rule 82    valores -> varYVals
Rule 83    valores -> varsOps
Rule 84    valores -> eMat
Rule 85    valores -> expBool
Rule 86    valores -> funcReturn
Rule 87    valores -> reg
Rule 88    valores -> INT
Rule 89    valores -> FLOAT
Rule 90    valores -> STRING
Rule 91    valores -> BOOL
Rule 92    valores -> ternario
Rule 93    valores -> atributos
Rule 94    valores -> vec
Rule 95    valores -> RES
Rule 96    reg -> { campos }
Rule 97    campos -> ID : valores , campos
Rule 98    campos -> ID : valores
Rule 99    atributos -> ID . valoresCampos
Rule 100   atributos -> reg . valoresCampos
Rule 101   valoresCampos -> ID
Rule 102   valoresCampos -> end
Rule 103   valoresCampos -> begin
Rule 104   end -> END
Rule 105   begin -> BEGIN
Rule 106   ternario -> ternarioMat
Rule 107   ternario -> ternarioBool
Rule 108   ternario -> ( ternarioMat )
Rule 109   ternario -> ( ternarioBool )
Rule 110   ternario -> ternarioVars
Rule 111   ternario -> ( ternarioVars )
Rule 112   ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars
Rule 113   ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat
Rule 114   ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars
Rule 115   ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool
Rule 116   ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars
Rule 117   ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars
Rule 118   ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat
Rule 119   ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars
Rule 120   ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool
Rule 121   ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars
Rule 122   valoresTernarioVars -> reg
Rule 123   valoresTernarioVars -> vec
Rule 124   valoresTernarioVars -> ternarioVars
Rule 125   valoresTernarioVars -> ( ternarioVars )
Rule 126   valoresTernarioVars -> atributos
Rule 127   valoresTernarioVars -> varsOps
Rule 128   valoresTernarioVars -> varYVals
Rule 129   valoresTernarioVars -> RES
Rule 130   ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat
Rule 131   ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat
Rule 132   valoresTernarioMat -> INT
Rule 133   valoresTernarioMat -> FLOAT
Rule 134   valoresTernarioMat -> funcInt
Rule 135   valoresTernarioMat -> STRING
Rule 136   valoresTernarioMat -> eMat
Rule 137   valoresTernarioMat -> ternarioMat
Rule 138   valoresTernarioMat -> ( ternarioMat )
Rule 139   ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool
Rule 140   ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool
Rule 141   valoresTernarioBool -> BOOL
Rule 142   valoresTernarioBool -> funcBool
Rule 143   valoresTernarioBool -> ternarioBool
Rule 144   valoresTernarioBool -> ( ternarioBool )
Rule 145   valoresTernarioBool -> expBool
Rule 146   varYVals -> ID
Rule 147   varYVals -> vecVal
Rule 148   varYVals -> vecVal . varYVals
Rule 149   varsOps -> MENOSMENOS variable
Rule 150   varsOps -> MASMAS variable
Rule 151   varsOps -> variable MASMAS
Rule 152   varsOps -> variable MENOSMENOS
Rule 153   variable -> ID
Rule 154   variable -> vecVal
Rule 155   variable -> vecVal . varYVals
Rule 156   varAsig -> variable MULEQ valores
Rule 157   varAsig -> variable DIVEQ valores
Rule 158   varAsig -> variable MASEQ valores
Rule 159   varAsig -> variable MENOSEQ valores
Rule 160   varAsig -> variable = valores
Rule 161   varAsig -> ID . ID = valores
Rule 162   valoresMat -> INT
Rule 163   valoresMat -> FLOAT
Rule 164   valoresMat -> funcInt
Rule 165   valoresMat -> atributos
Rule 166   valoresMat -> funcString
Rule 167   valoresMat -> STRING
Rule 168   valoresMat -> varYVals
Rule 169   valoresMat -> varsOps
Rule 170   valoresMat -> ( ternarioMat )
Rule 171   eMat -> eMat + p
Rule 172   eMat -> valoresMat + p
Rule 173   eMat -> eMat + valoresMat
Rule 174   eMat -> valoresMat + valoresMat
Rule 175   eMat -> p
Rule 176   eMat -> eMat - p
Rule 177   eMat -> valoresMat - p
Rule 178   eMat -> eMat - valoresMat
Rule 179   eMat -> valoresMat - valoresMat
Rule 180   p -> p * exp
Rule 181   p -> p / exp
Rule 182   p -> p % exp
Rule 183   p -> valoresMat * exp
Rule 184   p -> valoresMat / exp
Rule 185   p -> valoresMat % exp
Rule 186   p -> p * valoresMat
Rule 187   p -> p / valoresMat
Rule 188   p -> p % valoresMat
Rule 189   p -> valoresMat * valoresMat
Rule 190   p -> valoresMat / valoresMat
Rule 191   p -> valoresMat % valoresMat
Rule 192   p -> exp
Rule 193   exp -> exp ^ iSing
Rule 194   exp -> valoresMat ^ iSing
Rule 195   exp -> exp ^ valoresMat
Rule 196   exp -> valoresMat ^ valoresMat
Rule 197   exp -> iSing
Rule 198   iSing -> - paren
Rule 199   iSing -> + paren
Rule 200   iSing -> - valoresMat
Rule 201   iSing -> + valoresMat
Rule 202   iSing -> paren
Rule 203   paren -> ( eMat )
Rule 204   paren -> ( valoresMat )
Rule 205   valoresBool -> BOOL
Rule 206   valoresBool -> funcBool
Rule 207   valoresBool -> varYVals
Rule 208   valoresBool -> varsOps
Rule 209   valoresBool -> ( ternarioBool )
Rule 210   valoresBool -> <empty>
Rule 211   expBool -> expBool OR and
Rule 212   expBool -> valoresBool OR and
Rule 213   expBool -> expBool OR valoresBool
Rule 214   expBool -> valoresBool OR valoresBool
Rule 215   expBool -> and
Rule 216   and -> and AND eq
Rule 217   and -> valoresBool AND eq
Rule 218   and -> and AND valoresBool
Rule 219   and -> valoresBool AND valoresBool
Rule 220   and -> eq
Rule 221   eq -> eq EQEQ mayor
Rule 222   eq -> eq DISTINTO mayor
Rule 223   eq -> tCompareEQ EQEQ mayor
Rule 224   eq -> tCompareEQ DISTINTO mayor
Rule 225   eq -> eq EQEQ tCompareEQ
Rule 226   eq -> eq DISTINTO tCompareEQ
Rule 227   eq -> tCompareEQ EQEQ tCompareEQ
Rule 228   eq -> tCompareEQ DISTINTO tCompareEQ
Rule 229   eq -> mayor
Rule 230   tCompareEQ -> BOOL
Rule 231   tCompareEQ -> funcBool
Rule 232   tCompareEQ -> varYVals
Rule 233   tCompareEQ -> varsOps
Rule 234   tCompareEQ -> INT
Rule 235   tCompareEQ -> FLOAT
Rule 236   tCompareEQ -> funcInt
Rule 237   tCompareEQ -> eMat
Rule 238   tCompareEQ -> ( ternarioBool )
Rule 239   tCompareEQ -> ( ternarioMat )
Rule 240   tCompare -> eMat
Rule 241   tCompare -> varsOps
Rule 242   tCompare -> varYVals
Rule 243   tCompare -> INT
Rule 244   tCompare -> funcInt
Rule 245   tCompare -> FLOAT
Rule 246   tCompare -> ( ternarioMat )
Rule 247   mayor -> tCompare > tCompare
Rule 248   mayor -> menor
Rule 249   menor -> tCompare < tCompare
Rule 250   menor -> not
Rule 251   not -> NOT not
Rule 252   not -> NOT valoresBool
Rule 253   not -> parenBool
Rule 254   parenBool -> ( expBool )

Terminals, with rules where they appear

%                    : 182 185 188 191
(                    : 6 7 8 9 10 11 16 17 18 19 20 21 22 23 27 28 29 35 36 50 51 52 53 54 108 109 111 125 138 144 170 203 204 209 238 239 246 254
)                    : 6 7 8 9 10 11 16 17 18 19 20 21 22 23 27 28 29 35 36 50 51 52 53 54 108 109 111 125 138 144 170 203 204 209 238 239 246 254
*                    : 180 183 186 189
+                    : 171 172 173 174 199 201
,                    : 50 53 55 59 97
-                    : 176 177 178 179 198 200
.                    : 99 100 148 155 161
/                    : 181 184 187 190
:                    : 97 98 112 113 114 115 116 117 118 119 120 121 130 131 139 140
;                    : 27 28 29 30 31 32 33 34 36 36
<                    : 249
=                    : 160 161
>                    : 247
?                    : 112 113 114 115 116 117 118 119 120 121 130 131 139 140
AND                  : 216 217 218 219
BEGIN                : 105
BOOL                 : 75 91 141 205 230
CAPITALIZAR          : 52
COLINEALES           : 53
COMMENT              : 2 7 9 14 18 21 22 23 23 26 29
DISTINTO             : 222 224 226 228
DIVEQ                : 157
DO                   : 27 28 29
ELSE                 : 8 9 10 16 17 18 19 20 21 22 23
END                  : 104
EQEQ                 : 221 223 225 227
FLOAT                : 73 89 133 163 235 245
FOR                  : 36
ID                   : 61 65 97 98 99 101 146 153 161 161
IF                   : 6 7 8 9 10 11 16 17 18 19 20 21 22 23
INT                  : 65 66 67 68 88 132 162 234 243
LENGTH               : 51
MASEQ                : 158
MASMAS               : 150 151
MENOSEQ              : 159
MENOSMENOS           : 149 152
MULEQ                : 156
MULTIESCALAR         : 50
NOT                  : 251 252
OR                   : 211 212 213 214
PRINT                : 54
RES                  : 81 95 129
RETURN               : 33
STRING               : 74 90 135 167
WHILE                : 27 28 29 35
[                    : 58 61 62 63 64 65 66 67 68
]                    : 58 61 62 63 64 65 66 67 68
^                    : 193 194 195 196
error                : 
{                    : 8 11 16 16 17 18 19 24 27 96
}                    : 8 11 16 16 17 18 19 24 27 96

Nonterminals, with rules where they appear

and                  : 211 212 215 216 218
atributos            : 64 68 80 93 126 165
begin                : 103
campos               : 96 97
com                  : 7 9 14 18 21 22 23 23 26 29
cosaBooleana         : 6 7 8 9 10 11 16 17 18 19 20 21 22 23
eMat                 : 69 84 136 171 173 176 178 203 237 240
elem                 : 58 59
empty                : 3 15 38 42 56
end                  : 102
eq                   : 216 217 220 221 222 225 226
exp                  : 180 181 182 183 184 185 192 193 195
expBool              : 43 70 85 117 118 119 120 121 131 140 145 211 213 254
expresion            : 61 62 63 64
func                 : 31 41
funcBool             : 49 142 206 231
funcInt              : 47 134 164 236 244
funcReturn           : 45 71 86
funcString           : 48 166
funcVoid             : 46
g                    : 1 2 8 11 16 16 17 18 19 24 27 0
iSing                : 193 194 197
lAbierta             : 4 8 9 10 12
lCerrada             : 5 9 10 17 18 19 20 20 21 21 22 22 23 23 25 26 28 29
linea                : 1 6 7
loop                 : 12 24 25 26
mayor                : 221 222 223 224 229
menor                : 248
not                  : 250 251
p                    : 171 172 175 176 177 180 181 182 186 187 188
param                : 50
paren                : 198 199 202
parenBool            : 253
primParam            : 36
reg                  : 72 87 100 122
sentencia            : 13
tCompare             : 247 247 249 249
tCompareEQ           : 223 224 225 226 227 227 228 228
tercerParam          : 36
ternario             : 79 92
ternarioBool         : 107 109 143 144 209 238
ternarioMat          : 106 108 137 138 170 239 246
ternarioVars         : 110 111 124 125
valores              : 27 28 29 35 36 50 50 51 52 53 53 54 55 59 60 97 98 156 157 158 159 160 161
valoresBool          : 44 112 113 114 115 116 130 139 212 213 214 214 217 218 219 219 252
valoresCampos        : 99 100
valoresMat           : 172 173 174 174 177 178 179 179 183 184 185 186 187 188 189 189 190 190 191 191 194 195 196 196 200 201 204
valoresTernarioBool  : 115 116 120 121 139 139 140 140
valoresTernarioMat   : 113 114 118 119 130 130 131 131
valoresTernarioVars  : 112 112 113 114 115 116 117 117 118 119 120 121
varAsig              : 32 37 40
varYVals             : 76 82 128 148 155 168 207 232 242
variable             : 149 150 151 152 156 157 158 159 160
varsOps              : 30 39 77 83 127 169 208 233 241
vec                  : 62 66 78 94 123
vecVal               : 63 67 147 148 154 155

Parsing method: LALR

state 0

    (0) S' -> . g
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (57) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (156) varAsig -> . variable MULEQ valores
    (157) varAsig -> . variable DIVEQ valores
    (158) varAsig -> . variable MASEQ valores
    (159) varAsig -> . variable MENOSEQ valores
    (160) varAsig -> . variable = valores
    (161) varAsig -> . ID . ID = valores
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    COMMENT         shift and go to state 10
    $end            reduce using rule 57 (empty -> .)
    IF              shift and go to state 24
    DO              shift and go to state 1
    WHILE           shift and go to state 7
    FOR             shift and go to state 18
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    ID              shift and go to state 23
    PRINT           shift and go to state 8
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    [               shift and go to state 22
    {               shift and go to state 35

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 9
    sentencia                      shift and go to state 11
    atributos                      shift and go to state 6
    vec                            shift and go to state 36
    reg                            shift and go to state 13
    empty                          shift and go to state 14
    varsOps                        shift and go to state 15
    funcVoid                       shift and go to state 16
    func                           shift and go to state 20
    variable                       shift and go to state 21
    varAsig                        shift and go to state 25
    g                              shift and go to state 26
    funcString                     shift and go to state 27
    funcReturn                     shift and go to state 28
    lCerrada                       shift and go to state 30
    lAbierta                       shift and go to state 32
    loop                           shift and go to state 34
    linea                          shift and go to state 37

state 1

    (27) lCerrada -> DO . { g } WHILE ( valores ) ;
    (28) lCerrada -> DO . lCerrada WHILE ( valores ) ;
    (29) lCerrada -> DO . COMMENT com lCerrada WHILE ( valores ) ;
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (156) varAsig -> . variable MULEQ valores
    (157) varAsig -> . variable DIVEQ valores
    (158) varAsig -> . variable MASEQ valores
    (159) varAsig -> . variable MENOSEQ valores
    (160) varAsig -> . variable = valores
    (161) varAsig -> . ID . ID = valores
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    {               shift and go to state 41
    COMMENT         shift and go to state 38
    IF              shift and go to state 39
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 7
    FOR             shift and go to state 18
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    ID              shift and go to state 23
    PRINT           shift and go to state 8
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    [               shift and go to state 22

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 9
    sentencia                      shift and go to state 11
    atributos                      shift and go to state 6
    vec                            shift and go to state 36
    reg                            shift and go to state 13
    funcVoid                       shift and go to state 16
    func                           shift and go to state 20
    variable                       shift and go to state 21
    varAsig                        shift and go to state 25
    funcString                     shift and go to state 27
    funcReturn                     shift and go to state 28
    lCerrada                       shift and go to state 40
    varsOps                        shift and go to state 15
    loop                           shift and go to state 42

state 2

    (33) sentencia -> RETURN . ;

    ;               shift and go to state 43


state 3

    (49) funcReturn -> funcBool .

    ;               reduce using rule 49 (funcReturn -> funcBool .)
    )               reduce using rule 49 (funcReturn -> funcBool .)


state 4

    (53) funcBool -> COLINEALES . ( valores , valores )

    (               shift and go to state 44


state 5

    (47) funcReturn -> funcInt .

    ;               reduce using rule 47 (funcReturn -> funcInt .)
    )               reduce using rule 47 (funcReturn -> funcInt .)


state 6

    (64) vecVal -> atributos . [ expresion ]
    (68) vecVal -> atributos . [ INT ]

    [               shift and go to state 45


state 7

    (35) loop -> WHILE . ( valores )

    (               shift and go to state 46


state 8

    (54) funcVoid -> PRINT . ( valores )

    (               shift and go to state 47


state 9

    (154) variable -> vecVal .
    (155) variable -> vecVal . . varYVals
    (63) vecVal -> vecVal . [ expresion ]
    (67) vecVal -> vecVal . [ INT ]

    MASMAS          reduce using rule 154 (variable -> vecVal .)
    MENOSMENOS      reduce using rule 154 (variable -> vecVal .)
    MULEQ           reduce using rule 154 (variable -> vecVal .)
    DIVEQ           reduce using rule 154 (variable -> vecVal .)
    MASEQ           reduce using rule 154 (variable -> vecVal .)
    MENOSEQ         reduce using rule 154 (variable -> vecVal .)
    =               reduce using rule 154 (variable -> vecVal .)
    ;               reduce using rule 154 (variable -> vecVal .)
    ,               reduce using rule 154 (variable -> vecVal .)
    ]               reduce using rule 154 (variable -> vecVal .)
    +               reduce using rule 154 (variable -> vecVal .)
    -               reduce using rule 154 (variable -> vecVal .)
    *               reduce using rule 154 (variable -> vecVal .)
    /               reduce using rule 154 (variable -> vecVal .)
    %               reduce using rule 154 (variable -> vecVal .)
    ^               reduce using rule 154 (variable -> vecVal .)
    OR              reduce using rule 154 (variable -> vecVal .)
    AND             reduce using rule 154 (variable -> vecVal .)
    ?               reduce using rule 154 (variable -> vecVal .)
    EQEQ            reduce using rule 154 (variable -> vecVal .)
    DISTINTO        reduce using rule 154 (variable -> vecVal .)
    >               reduce using rule 154 (variable -> vecVal .)
    <               reduce using rule 154 (variable -> vecVal .)
    )               reduce using rule 154 (variable -> vecVal .)
    :               reduce using rule 154 (variable -> vecVal .)
    }               reduce using rule 154 (variable -> vecVal .)
    .               shift and go to state 48
    [               shift and go to state 49


state 10

    (2) g -> COMMENT . g
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (57) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (156) varAsig -> . variable MULEQ valores
    (157) varAsig -> . variable DIVEQ valores
    (158) varAsig -> . variable MASEQ valores
    (159) varAsig -> . variable MENOSEQ valores
    (160) varAsig -> . variable = valores
    (161) varAsig -> . ID . ID = valores
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    COMMENT         shift and go to state 10
    $end            reduce using rule 57 (empty -> .)
    }               reduce using rule 57 (empty -> .)
    IF              shift and go to state 24
    DO              shift and go to state 1
    WHILE           shift and go to state 7
    FOR             shift and go to state 18
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    ID              shift and go to state 23
    PRINT           shift and go to state 8
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    [               shift and go to state 22
    {               shift and go to state 35

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 9
    sentencia                      shift and go to state 11
    atributos                      shift and go to state 6
    vec                            shift and go to state 36
    reg                            shift and go to state 13
    empty                          shift and go to state 14
    varsOps                        shift and go to state 15
    funcVoid                       shift and go to state 16
    func                           shift and go to state 20
    variable                       shift and go to state 21
    varAsig                        shift and go to state 25
    g                              shift and go to state 50
    funcString                     shift and go to state 27
    funcReturn                     shift and go to state 28
    lCerrada                       shift and go to state 30
    lAbierta                       shift and go to state 32
    loop                           shift and go to state 34
    linea                          shift and go to state 37

state 11

    (13) lCerrada -> sentencia .

    COMMENT         reduce using rule 13 (lCerrada -> sentencia .)
    IF              reduce using rule 13 (lCerrada -> sentencia .)
    DO              reduce using rule 13 (lCerrada -> sentencia .)
    WHILE           reduce using rule 13 (lCerrada -> sentencia .)
    FOR             reduce using rule 13 (lCerrada -> sentencia .)
    RETURN          reduce using rule 13 (lCerrada -> sentencia .)
    ;               reduce using rule 13 (lCerrada -> sentencia .)
    MENOSMENOS      reduce using rule 13 (lCerrada -> sentencia .)
    MASMAS          reduce using rule 13 (lCerrada -> sentencia .)
    ID              reduce using rule 13 (lCerrada -> sentencia .)
    PRINT           reduce using rule 13 (lCerrada -> sentencia .)
    MULTIESCALAR    reduce using rule 13 (lCerrada -> sentencia .)
    LENGTH          reduce using rule 13 (lCerrada -> sentencia .)
    CAPITALIZAR     reduce using rule 13 (lCerrada -> sentencia .)
    COLINEALES      reduce using rule 13 (lCerrada -> sentencia .)
    [               reduce using rule 13 (lCerrada -> sentencia .)
    {               reduce using rule 13 (lCerrada -> sentencia .)
    }               reduce using rule 13 (lCerrada -> sentencia .)
    $end            reduce using rule 13 (lCerrada -> sentencia .)
    ELSE            reduce using rule 13 (lCerrada -> sentencia .)


state 12

    (34) sentencia -> ; .

    COMMENT         reduce using rule 34 (sentencia -> ; .)
    IF              reduce using rule 34 (sentencia -> ; .)
    DO              reduce using rule 34 (sentencia -> ; .)
    WHILE           reduce using rule 34 (sentencia -> ; .)
    FOR             reduce using rule 34 (sentencia -> ; .)
    RETURN          reduce using rule 34 (sentencia -> ; .)
    ;               reduce using rule 34 (sentencia -> ; .)
    MENOSMENOS      reduce using rule 34 (sentencia -> ; .)
    MASMAS          reduce using rule 34 (sentencia -> ; .)
    ID              reduce using rule 34 (sentencia -> ; .)
    PRINT           reduce using rule 34 (sentencia -> ; .)
    MULTIESCALAR    reduce using rule 34 (sentencia -> ; .)
    LENGTH          reduce using rule 34 (sentencia -> ; .)
    CAPITALIZAR     reduce using rule 34 (sentencia -> ; .)
    COLINEALES      reduce using rule 34 (sentencia -> ; .)
    [               reduce using rule 34 (sentencia -> ; .)
    {               reduce using rule 34 (sentencia -> ; .)
    $end            reduce using rule 34 (sentencia -> ; .)
    }               reduce using rule 34 (sentencia -> ; .)
    ELSE            reduce using rule 34 (sentencia -> ; .)


state 13

    (100) atributos -> reg . . valoresCampos

    .               shift and go to state 51


state 14

    (3) g -> empty .

    $end            reduce using rule 3 (g -> empty .)
    }               reduce using rule 3 (g -> empty .)


state 15

    (30) sentencia -> varsOps . ;

    ;               shift and go to state 52


state 16

    (46) func -> funcVoid .

    ;               reduce using rule 46 (func -> funcVoid .)
    )               reduce using rule 46 (func -> funcVoid .)


state 17

    (149) varsOps -> MENOSMENOS . variable
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    ID              shift and go to state 54
    [               shift and go to state 22
    {               shift and go to state 35

    reg                            shift and go to state 13
    vec                            shift and go to state 36
    variable                       shift and go to state 53
    vecVal                         shift and go to state 9
    atributos                      shift and go to state 6

state 18

    (36) loop -> FOR . ( primParam ; valores ; tercerParam )

    (               shift and go to state 55


state 19

    (51) funcInt -> LENGTH . ( valores )

    (               shift and go to state 56


state 20

    (31) sentencia -> func . ;

    ;               shift and go to state 57


state 21

    (151) varsOps -> variable . MASMAS
    (152) varsOps -> variable . MENOSMENOS
    (156) varAsig -> variable . MULEQ valores
    (157) varAsig -> variable . DIVEQ valores
    (158) varAsig -> variable . MASEQ valores
    (159) varAsig -> variable . MENOSEQ valores
    (160) varAsig -> variable . = valores

    MASMAS          shift and go to state 61
    MENOSMENOS      shift and go to state 59
    MULEQ           shift and go to state 62
    DIVEQ           shift and go to state 64
    MASEQ           shift and go to state 60
    MENOSEQ         shift and go to state 58
    =               shift and go to state 63


state 22

    (58) vec -> [ . elem ]
    (59) elem -> . valores , elem
    (60) elem -> . valores
    (82) valores -> . varYVals
    (83) valores -> . varsOps
    (84) valores -> . eMat
    (85) valores -> . expBool
    (86) valores -> . funcReturn
    (87) valores -> . reg
    (88) valores -> . INT
    (89) valores -> . FLOAT
    (90) valores -> . STRING
    (91) valores -> . BOOL
    (92) valores -> . ternario
    (93) valores -> . atributos
    (94) valores -> . vec
    (95) valores -> . RES
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (96) reg -> . { campos }
    (106) ternario -> . ternarioMat
    (107) ternario -> . ternarioBool
    (108) ternario -> . ( ternarioMat )
    (109) ternario -> . ( ternarioBool )
    (110) ternario -> . ternarioVars
    (111) ternario -> . ( ternarioVars )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 97
    FLOAT           shift and go to state 99
    STRING          shift and go to state 77
    BOOL            shift and go to state 102
    RES             shift and go to state 68
    ID              shift and go to state 95
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    {               shift and go to state 35
    (               shift and go to state 81
    [               shift and go to state 22
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    ?               reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    ternario                       shift and go to state 66
    funcBool                       shift and go to state 67
    funcInt                        shift and go to state 69
    valores                        shift and go to state 70
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 79
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 84
    vec                            shift and go to state 85
    paren                          shift and go to state 93
    reg                            shift and go to state 87
    expBool                        shift and go to state 88
    ternarioBool                   shift and go to state 89
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 96
    funcReturn                     shift and go to state 98
    elem                           shift and go to state 100
    p                              shift and go to state 101
    varsOps                        shift and go to state 103
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 73
    varYVals                       shift and go to state 106
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 107

state 23

    (161) varAsig -> ID . . ID = valores
    (153) variable -> ID .
    (61) vecVal -> ID . [ expresion ]
    (65) vecVal -> ID . [ INT ]
    (99) atributos -> ID . . valoresCampos

    .               shift and go to state 108
    MASMAS          reduce using rule 153 (variable -> ID .)
    MENOSMENOS      reduce using rule 153 (variable -> ID .)
    MULEQ           reduce using rule 153 (variable -> ID .)
    DIVEQ           reduce using rule 153 (variable -> ID .)
    MASEQ           reduce using rule 153 (variable -> ID .)
    MENOSEQ         reduce using rule 153 (variable -> ID .)
    =               reduce using rule 153 (variable -> ID .)
    [               shift and go to state 109


state 24

    (6) lAbierta -> IF . ( cosaBooleana ) linea
    (7) lAbierta -> IF . ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> IF . ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> IF . ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> IF . ( cosaBooleana ) { g }
    (16) lCerrada -> IF . ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> IF . ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada

    (               shift and go to state 110


state 25

    (32) sentencia -> varAsig . ;

    ;               shift and go to state 111


state 26

    (0) S' -> g .



state 27

    (48) funcReturn -> funcString .

    ;               reduce using rule 48 (funcReturn -> funcString .)
    )               reduce using rule 48 (funcReturn -> funcString .)


state 28

    (45) func -> funcReturn .

    ;               reduce using rule 45 (func -> funcReturn .)
    )               reduce using rule 45 (func -> funcReturn .)


state 29

    (52) funcString -> CAPITALIZAR . ( valores )

    (               shift and go to state 112


state 30

    (5) linea -> lCerrada .

    COMMENT         reduce using rule 5 (linea -> lCerrada .)
    IF              reduce using rule 5 (linea -> lCerrada .)
    DO              reduce using rule 5 (linea -> lCerrada .)
    WHILE           reduce using rule 5 (linea -> lCerrada .)
    FOR             reduce using rule 5 (linea -> lCerrada .)
    RETURN          reduce using rule 5 (linea -> lCerrada .)
    ;               reduce using rule 5 (linea -> lCerrada .)
    MENOSMENOS      reduce using rule 5 (linea -> lCerrada .)
    MASMAS          reduce using rule 5 (linea -> lCerrada .)
    ID              reduce using rule 5 (linea -> lCerrada .)
    PRINT           reduce using rule 5 (linea -> lCerrada .)
    MULTIESCALAR    reduce using rule 5 (linea -> lCerrada .)
    LENGTH          reduce using rule 5 (linea -> lCerrada .)
    CAPITALIZAR     reduce using rule 5 (linea -> lCerrada .)
    COLINEALES      reduce using rule 5 (linea -> lCerrada .)
    [               reduce using rule 5 (linea -> lCerrada .)
    {               reduce using rule 5 (linea -> lCerrada .)
    $end            reduce using rule 5 (linea -> lCerrada .)
    }               reduce using rule 5 (linea -> lCerrada .)


state 31

    (50) funcInt -> MULTIESCALAR . ( valores , valores param )

    (               shift and go to state 113


state 32

    (4) linea -> lAbierta .

    COMMENT         reduce using rule 4 (linea -> lAbierta .)
    IF              reduce using rule 4 (linea -> lAbierta .)
    DO              reduce using rule 4 (linea -> lAbierta .)
    WHILE           reduce using rule 4 (linea -> lAbierta .)
    FOR             reduce using rule 4 (linea -> lAbierta .)
    RETURN          reduce using rule 4 (linea -> lAbierta .)
    ;               reduce using rule 4 (linea -> lAbierta .)
    MENOSMENOS      reduce using rule 4 (linea -> lAbierta .)
    MASMAS          reduce using rule 4 (linea -> lAbierta .)
    ID              reduce using rule 4 (linea -> lAbierta .)
    PRINT           reduce using rule 4 (linea -> lAbierta .)
    MULTIESCALAR    reduce using rule 4 (linea -> lAbierta .)
    LENGTH          reduce using rule 4 (linea -> lAbierta .)
    CAPITALIZAR     reduce using rule 4 (linea -> lAbierta .)
    COLINEALES      reduce using rule 4 (linea -> lAbierta .)
    [               reduce using rule 4 (linea -> lAbierta .)
    {               reduce using rule 4 (linea -> lAbierta .)
    $end            reduce using rule 4 (linea -> lAbierta .)
    }               reduce using rule 4 (linea -> lAbierta .)


state 33

    (150) varsOps -> MASMAS . variable
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    ID              shift and go to state 54
    [               shift and go to state 22
    {               shift and go to state 35

    reg                            shift and go to state 13
    vec                            shift and go to state 36
    variable                       shift and go to state 114
    vecVal                         shift and go to state 9
    atributos                      shift and go to state 6

state 34

    (12) lAbierta -> loop . lAbierta
    (24) lCerrada -> loop . { g }
    (25) lCerrada -> loop . lCerrada
    (26) lCerrada -> loop . COMMENT com lCerrada
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (156) varAsig -> . variable MULEQ valores
    (157) varAsig -> . variable DIVEQ valores
    (158) varAsig -> . variable MASEQ valores
    (159) varAsig -> . variable MENOSEQ valores
    (160) varAsig -> . variable = valores
    (161) varAsig -> . ID . ID = valores
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    {               shift and go to state 118
    COMMENT         shift and go to state 115
    IF              shift and go to state 24
    DO              shift and go to state 1
    WHILE           shift and go to state 7
    FOR             shift and go to state 18
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    ID              shift and go to state 23
    PRINT           shift and go to state 8
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    [               shift and go to state 22

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    loop                           shift and go to state 34
    vecVal                         shift and go to state 9
    sentencia                      shift and go to state 11
    atributos                      shift and go to state 6
    vec                            shift and go to state 36
    reg                            shift and go to state 13
    funcVoid                       shift and go to state 16
    func                           shift and go to state 20
    variable                       shift and go to state 21
    varAsig                        shift and go to state 25
    funcString                     shift and go to state 27
    funcReturn                     shift and go to state 28
    lCerrada                       shift and go to state 116
    lAbierta                       shift and go to state 117
    varsOps                        shift and go to state 15

state 35

    (96) reg -> { . campos }
    (97) campos -> . ID : valores , campos
    (98) campos -> . ID : valores

    ID              shift and go to state 120

    campos                         shift and go to state 119

state 36

    (62) vecVal -> vec . [ expresion ]
    (66) vecVal -> vec . [ INT ]

    [               shift and go to state 121


state 37

    (1) g -> linea . g
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (57) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (156) varAsig -> . variable MULEQ valores
    (157) varAsig -> . variable DIVEQ valores
    (158) varAsig -> . variable MASEQ valores
    (159) varAsig -> . variable MENOSEQ valores
    (160) varAsig -> . variable = valores
    (161) varAsig -> . ID . ID = valores
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    COMMENT         shift and go to state 10
    $end            reduce using rule 57 (empty -> .)
    }               reduce using rule 57 (empty -> .)
    IF              shift and go to state 24
    DO              shift and go to state 1
    WHILE           shift and go to state 7
    FOR             shift and go to state 18
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    ID              shift and go to state 23
    PRINT           shift and go to state 8
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    [               shift and go to state 22
    {               shift and go to state 35

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 9
    sentencia                      shift and go to state 11
    atributos                      shift and go to state 6
    vec                            shift and go to state 36
    reg                            shift and go to state 13
    empty                          shift and go to state 14
    varsOps                        shift and go to state 15
    funcVoid                       shift and go to state 16
    func                           shift and go to state 20
    variable                       shift and go to state 21
    varAsig                        shift and go to state 25
    g                              shift and go to state 122
    funcString                     shift and go to state 27
    funcReturn                     shift and go to state 28
    lCerrada                       shift and go to state 30
    lAbierta                       shift and go to state 32
    loop                           shift and go to state 34
    linea                          shift and go to state 37

state 38

    (29) lCerrada -> DO COMMENT . com lCerrada WHILE ( valores ) ;
    (14) com -> . COMMENT com
    (15) com -> . empty
    (57) empty -> .

    COMMENT         shift and go to state 123
    IF              reduce using rule 57 (empty -> .)
    DO              reduce using rule 57 (empty -> .)
    RETURN          reduce using rule 57 (empty -> .)
    ;               reduce using rule 57 (empty -> .)
    WHILE           reduce using rule 57 (empty -> .)
    FOR             reduce using rule 57 (empty -> .)
    MENOSMENOS      reduce using rule 57 (empty -> .)
    MASMAS          reduce using rule 57 (empty -> .)
    ID              reduce using rule 57 (empty -> .)
    PRINT           reduce using rule 57 (empty -> .)
    MULTIESCALAR    reduce using rule 57 (empty -> .)
    LENGTH          reduce using rule 57 (empty -> .)
    CAPITALIZAR     reduce using rule 57 (empty -> .)
    COLINEALES      reduce using rule 57 (empty -> .)
    [               reduce using rule 57 (empty -> .)
    {               reduce using rule 57 (empty -> .)

    com                            shift and go to state 124
    empty                          shift and go to state 125

state 39

    (16) lCerrada -> IF . ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> IF . ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada

    (               shift and go to state 126


state 40

    (28) lCerrada -> DO lCerrada . WHILE ( valores ) ;

    WHILE           shift and go to state 127


state 41

    (27) lCerrada -> DO { . g } WHILE ( valores ) ;
    (96) reg -> { . campos }
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (97) campos -> . ID : valores , campos
    (98) campos -> . ID : valores
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (57) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (156) varAsig -> . variable MULEQ valores
    (157) varAsig -> . variable DIVEQ valores
    (158) varAsig -> . variable MASEQ valores
    (159) varAsig -> . variable MENOSEQ valores
    (160) varAsig -> . variable = valores
    (161) varAsig -> . ID . ID = valores
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    COMMENT         shift and go to state 10
    ID              shift and go to state 128
    }               reduce using rule 57 (empty -> .)
    IF              shift and go to state 24
    DO              shift and go to state 1
    WHILE           shift and go to state 7
    FOR             shift and go to state 18
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    PRINT           shift and go to state 8
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    [               shift and go to state 22
    {               shift and go to state 35

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    linea                          shift and go to state 37
    vecVal                         shift and go to state 9
    sentencia                      shift and go to state 11
    atributos                      shift and go to state 6
    vec                            shift and go to state 36
    reg                            shift and go to state 13
    empty                          shift and go to state 14
    funcVoid                       shift and go to state 16
    campos                         shift and go to state 119
    func                           shift and go to state 20
    variable                       shift and go to state 21
    varAsig                        shift and go to state 25
    g                              shift and go to state 129
    funcString                     shift and go to state 27
    funcReturn                     shift and go to state 28
    lCerrada                       shift and go to state 30
    lAbierta                       shift and go to state 32
    varsOps                        shift and go to state 15
    loop                           shift and go to state 34

state 42

    (24) lCerrada -> loop . { g }
    (25) lCerrada -> loop . lCerrada
    (26) lCerrada -> loop . COMMENT com lCerrada
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (156) varAsig -> . variable MULEQ valores
    (157) varAsig -> . variable DIVEQ valores
    (158) varAsig -> . variable MASEQ valores
    (159) varAsig -> . variable MENOSEQ valores
    (160) varAsig -> . variable = valores
    (161) varAsig -> . ID . ID = valores
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    {               shift and go to state 118
    COMMENT         shift and go to state 115
    IF              shift and go to state 39
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 7
    FOR             shift and go to state 18
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    ID              shift and go to state 23
    PRINT           shift and go to state 8
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    [               shift and go to state 22

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 9
    sentencia                      shift and go to state 11
    atributos                      shift and go to state 6
    vec                            shift and go to state 36
    reg                            shift and go to state 13
    funcVoid                       shift and go to state 16
    func                           shift and go to state 20
    variable                       shift and go to state 21
    varAsig                        shift and go to state 25
    funcString                     shift and go to state 27
    funcReturn                     shift and go to state 28
    lCerrada                       shift and go to state 116
    varsOps                        shift and go to state 15
    loop                           shift and go to state 42

state 43

    (33) sentencia -> RETURN ; .

    COMMENT         reduce using rule 33 (sentencia -> RETURN ; .)
    IF              reduce using rule 33 (sentencia -> RETURN ; .)
    DO              reduce using rule 33 (sentencia -> RETURN ; .)
    WHILE           reduce using rule 33 (sentencia -> RETURN ; .)
    FOR             reduce using rule 33 (sentencia -> RETURN ; .)
    RETURN          reduce using rule 33 (sentencia -> RETURN ; .)
    ;               reduce using rule 33 (sentencia -> RETURN ; .)
    MENOSMENOS      reduce using rule 33 (sentencia -> RETURN ; .)
    MASMAS          reduce using rule 33 (sentencia -> RETURN ; .)
    ID              reduce using rule 33 (sentencia -> RETURN ; .)
    PRINT           reduce using rule 33 (sentencia -> RETURN ; .)
    MULTIESCALAR    reduce using rule 33 (sentencia -> RETURN ; .)
    LENGTH          reduce using rule 33 (sentencia -> RETURN ; .)
    CAPITALIZAR     reduce using rule 33 (sentencia -> RETURN ; .)
    COLINEALES      reduce using rule 33 (sentencia -> RETURN ; .)
    [               reduce using rule 33 (sentencia -> RETURN ; .)
    {               reduce using rule 33 (sentencia -> RETURN ; .)
    $end            reduce using rule 33 (sentencia -> RETURN ; .)
    }               reduce using rule 33 (sentencia -> RETURN ; .)
    ELSE            reduce using rule 33 (sentencia -> RETURN ; .)


state 44

    (53) funcBool -> COLINEALES ( . valores , valores )
    (82) valores -> . varYVals
    (83) valores -> . varsOps
    (84) valores -> . eMat
    (85) valores -> . expBool
    (86) valores -> . funcReturn
    (87) valores -> . reg
    (88) valores -> . INT
    (89) valores -> . FLOAT
    (90) valores -> . STRING
    (91) valores -> . BOOL
    (92) valores -> . ternario
    (93) valores -> . atributos
    (94) valores -> . vec
    (95) valores -> . RES
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (96) reg -> . { campos }
    (106) ternario -> . ternarioMat
    (107) ternario -> . ternarioBool
    (108) ternario -> . ( ternarioMat )
    (109) ternario -> . ( ternarioBool )
    (110) ternario -> . ternarioVars
    (111) ternario -> . ( ternarioVars )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 97
    FLOAT           shift and go to state 99
    STRING          shift and go to state 77
    BOOL            shift and go to state 102
    RES             shift and go to state 68
    ID              shift and go to state 95
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    {               shift and go to state 35
    (               shift and go to state 81
    [               shift and go to state 22
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    ?               reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    ternario                       shift and go to state 66
    funcBool                       shift and go to state 67
    funcInt                        shift and go to state 69
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 79
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 84
    vec                            shift and go to state 85
    paren                          shift and go to state 93
    reg                            shift and go to state 87
    expBool                        shift and go to state 88
    ternarioBool                   shift and go to state 89
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 96
    funcReturn                     shift and go to state 98
    valores                        shift and go to state 130
    p                              shift and go to state 101
    varsOps                        shift and go to state 103
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 73
    varYVals                       shift and go to state 106
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 107

state 45

    (64) vecVal -> atributos [ . expresion ]
    (68) vecVal -> atributos [ . INT ]
    (69) expresion -> . eMat
    (70) expresion -> . expBool
    (71) expresion -> . funcReturn
    (72) expresion -> . reg
    (73) expresion -> . FLOAT
    (74) expresion -> . STRING
    (75) expresion -> . BOOL
    (76) expresion -> . varYVals
    (77) expresion -> . varsOps
    (78) expresion -> . vec
    (79) expresion -> . ternario
    (80) expresion -> . atributos
    (81) expresion -> . RES
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (96) reg -> . { campos }
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (58) vec -> . [ elem ]
    (106) ternario -> . ternarioMat
    (107) ternario -> . ternarioBool
    (108) ternario -> . ( ternarioMat )
    (109) ternario -> . ( ternarioBool )
    (110) ternario -> . ternarioVars
    (111) ternario -> . ( ternarioVars )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 139
    FLOAT           shift and go to state 141
    STRING          shift and go to state 137
    BOOL            shift and go to state 142
    RES             shift and go to state 132
    {               shift and go to state 35
    ID              shift and go to state 95
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    [               shift and go to state 22
    (               shift and go to state 81
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    ?               reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    ternario                       shift and go to state 131
    funcBool                       shift and go to state 67
    funcInt                        shift and go to state 69
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 133
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 84
    vec                            shift and go to state 135
    paren                          shift and go to state 93
    reg                            shift and go to state 136
    varsOps                        shift and go to state 143
    exp                            shift and go to state 105
    ternarioBool                   shift and go to state 89
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    expresion                      shift and go to state 138
    funcString                     shift and go to state 96
    funcReturn                     shift and go to state 140
    p                              shift and go to state 101
    expBool                        shift and go to state 145
    ternarioVars                   shift and go to state 73
    varYVals                       shift and go to state 144
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 134

state 46

    (35) loop -> WHILE ( . valores )
    (82) valores -> . varYVals
    (83) valores -> . varsOps
    (84) valores -> . eMat
    (85) valores -> . expBool
    (86) valores -> . funcReturn
    (87) valores -> . reg
    (88) valores -> . INT
    (89) valores -> . FLOAT
    (90) valores -> . STRING
    (91) valores -> . BOOL
    (92) valores -> . ternario
    (93) valores -> . atributos
    (94) valores -> . vec
    (95) valores -> . RES
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (96) reg -> . { campos }
    (106) ternario -> . ternarioMat
    (107) ternario -> . ternarioBool
    (108) ternario -> . ( ternarioMat )
    (109) ternario -> . ( ternarioBool )
    (110) ternario -> . ternarioVars
    (111) ternario -> . ( ternarioVars )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 97
    FLOAT           shift and go to state 99
    STRING          shift and go to state 77
    BOOL            shift and go to state 102
    RES             shift and go to state 68
    ID              shift and go to state 95
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    {               shift and go to state 35
    (               shift and go to state 81
    [               shift and go to state 22
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    ?               reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    ternario                       shift and go to state 66
    funcBool                       shift and go to state 67
    funcInt                        shift and go to state 69
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 79
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 84
    vec                            shift and go to state 85
    paren                          shift and go to state 93
    reg                            shift and go to state 87
    expBool                        shift and go to state 88
    ternarioBool                   shift and go to state 89
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 96
    funcReturn                     shift and go to state 98
    valores                        shift and go to state 146
    p                              shift and go to state 101
    varsOps                        shift and go to state 103
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 73
    varYVals                       shift and go to state 106
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 107

state 47

    (54) funcVoid -> PRINT ( . valores )
    (82) valores -> . varYVals
    (83) valores -> . varsOps
    (84) valores -> . eMat
    (85) valores -> . expBool
    (86) valores -> . funcReturn
    (87) valores -> . reg
    (88) valores -> . INT
    (89) valores -> . FLOAT
    (90) valores -> . STRING
    (91) valores -> . BOOL
    (92) valores -> . ternario
    (93) valores -> . atributos
    (94) valores -> . vec
    (95) valores -> . RES
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (96) reg -> . { campos }
    (106) ternario -> . ternarioMat
    (107) ternario -> . ternarioBool
    (108) ternario -> . ( ternarioMat )
    (109) ternario -> . ( ternarioBool )
    (110) ternario -> . ternarioVars
    (111) ternario -> . ( ternarioVars )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 97
    FLOAT           shift and go to state 99
    STRING          shift and go to state 77
    BOOL            shift and go to state 102
    RES             shift and go to state 68
    ID              shift and go to state 95
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    {               shift and go to state 35
    (               shift and go to state 81
    [               shift and go to state 22
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    ?               reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    ternario                       shift and go to state 66
    funcBool                       shift and go to state 67
    funcInt                        shift and go to state 69
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 79
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 84
    vec                            shift and go to state 85
    paren                          shift and go to state 93
    reg                            shift and go to state 87
    expBool                        shift and go to state 88
    ternarioBool                   shift and go to state 89
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 96
    funcReturn                     shift and go to state 98
    valores                        shift and go to state 147
    p                              shift and go to state 101
    varsOps                        shift and go to state 103
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 73
    varYVals                       shift and go to state 106
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 107

state 48

    (155) variable -> vecVal . . varYVals
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    ID              shift and go to state 150
    [               shift and go to state 22
    {               shift and go to state 35

    reg                            shift and go to state 13
    vec                            shift and go to state 36
    varYVals                       shift and go to state 149
    vecVal                         shift and go to state 148
    atributos                      shift and go to state 6

state 49

    (63) vecVal -> vecVal [ . expresion ]
    (67) vecVal -> vecVal [ . INT ]
    (69) expresion -> . eMat
    (70) expresion -> . expBool
    (71) expresion -> . funcReturn
    (72) expresion -> . reg
    (73) expresion -> . FLOAT
    (74) expresion -> . STRING
    (75) expresion -> . BOOL
    (76) expresion -> . varYVals
    (77) expresion -> . varsOps
    (78) expresion -> . vec
    (79) expresion -> . ternario
    (80) expresion -> . atributos
    (81) expresion -> . RES
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (96) reg -> . { campos }
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (58) vec -> . [ elem ]
    (106) ternario -> . ternarioMat
    (107) ternario -> . ternarioBool
    (108) ternario -> . ( ternarioMat )
    (109) ternario -> . ( ternarioBool )
    (110) ternario -> . ternarioVars
    (111) ternario -> . ( ternarioVars )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 152
    FLOAT           shift and go to state 141
    STRING          shift and go to state 137
    BOOL            shift and go to state 142
    RES             shift and go to state 132
    {               shift and go to state 35
    ID              shift and go to state 95
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    [               shift and go to state 22
    (               shift and go to state 81
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    ?               reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    ternario                       shift and go to state 131
    funcBool                       shift and go to state 67
    funcInt                        shift and go to state 69
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 133
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 84
    vec                            shift and go to state 135
    paren                          shift and go to state 93
    reg                            shift and go to state 136
    expBool                        shift and go to state 145
    ternarioBool                   shift and go to state 89
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    expresion                      shift and go to state 151
    funcString                     shift and go to state 96
    funcReturn                     shift and go to state 140
    p                              shift and go to state 101
    varsOps                        shift and go to state 143
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 73
    varYVals                       shift and go to state 144
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 134

state 50

    (2) g -> COMMENT g .

    $end            reduce using rule 2 (g -> COMMENT g .)
    }               reduce using rule 2 (g -> COMMENT g .)


state 51

    (100) atributos -> reg . . valoresCampos
    (101) valoresCampos -> . ID
    (102) valoresCampos -> . end
    (103) valoresCampos -> . begin
    (104) end -> . END
    (105) begin -> . BEGIN

    ID              shift and go to state 158
    END             shift and go to state 157
    BEGIN           shift and go to state 155

    begin                          shift and go to state 153
    end                            shift and go to state 154
    valoresCampos                  shift and go to state 156

state 52

    (30) sentencia -> varsOps ; .

    COMMENT         reduce using rule 30 (sentencia -> varsOps ; .)
    IF              reduce using rule 30 (sentencia -> varsOps ; .)
    DO              reduce using rule 30 (sentencia -> varsOps ; .)
    WHILE           reduce using rule 30 (sentencia -> varsOps ; .)
    FOR             reduce using rule 30 (sentencia -> varsOps ; .)
    RETURN          reduce using rule 30 (sentencia -> varsOps ; .)
    ;               reduce using rule 30 (sentencia -> varsOps ; .)
    MENOSMENOS      reduce using rule 30 (sentencia -> varsOps ; .)
    MASMAS          reduce using rule 30 (sentencia -> varsOps ; .)
    ID              reduce using rule 30 (sentencia -> varsOps ; .)
    PRINT           reduce using rule 30 (sentencia -> varsOps ; .)
    MULTIESCALAR    reduce using rule 30 (sentencia -> varsOps ; .)
    LENGTH          reduce using rule 30 (sentencia -> varsOps ; .)
    CAPITALIZAR     reduce using rule 30 (sentencia -> varsOps ; .)
    COLINEALES      reduce using rule 30 (sentencia -> varsOps ; .)
    [               reduce using rule 30 (sentencia -> varsOps ; .)
    {               reduce using rule 30 (sentencia -> varsOps ; .)
    $end            reduce using rule 30 (sentencia -> varsOps ; .)
    }               reduce using rule 30 (sentencia -> varsOps ; .)
    ELSE            reduce using rule 30 (sentencia -> varsOps ; .)


state 53

    (149) varsOps -> MENOSMENOS variable .

    ;               reduce using rule 149 (varsOps -> MENOSMENOS variable .)
    ^               reduce using rule 149 (varsOps -> MENOSMENOS variable .)
    *               reduce using rule 149 (varsOps -> MENOSMENOS variable .)
    /               reduce using rule 149 (varsOps -> MENOSMENOS variable .)
    %               reduce using rule 149 (varsOps -> MENOSMENOS variable .)
    +               reduce using rule 149 (varsOps -> MENOSMENOS variable .)
    -               reduce using rule 149 (varsOps -> MENOSMENOS variable .)
    ,               reduce using rule 149 (varsOps -> MENOSMENOS variable .)
    ]               reduce using rule 149 (varsOps -> MENOSMENOS variable .)
    EQEQ            reduce using rule 149 (varsOps -> MENOSMENOS variable .)
    DISTINTO        reduce using rule 149 (varsOps -> MENOSMENOS variable .)
    >               reduce using rule 149 (varsOps -> MENOSMENOS variable .)
    <               reduce using rule 149 (varsOps -> MENOSMENOS variable .)
    )               reduce using rule 149 (varsOps -> MENOSMENOS variable .)
    AND             reduce using rule 149 (varsOps -> MENOSMENOS variable .)
    OR              reduce using rule 149 (varsOps -> MENOSMENOS variable .)
    ?               reduce using rule 149 (varsOps -> MENOSMENOS variable .)
    :               reduce using rule 149 (varsOps -> MENOSMENOS variable .)
    }               reduce using rule 149 (varsOps -> MENOSMENOS variable .)


state 54

    (153) variable -> ID .
    (61) vecVal -> ID . [ expresion ]
    (65) vecVal -> ID . [ INT ]
    (99) atributos -> ID . . valoresCampos

    ;               reduce using rule 153 (variable -> ID .)
    ,               reduce using rule 153 (variable -> ID .)
    ]               reduce using rule 153 (variable -> ID .)
    +               reduce using rule 153 (variable -> ID .)
    -               reduce using rule 153 (variable -> ID .)
    *               reduce using rule 153 (variable -> ID .)
    /               reduce using rule 153 (variable -> ID .)
    %               reduce using rule 153 (variable -> ID .)
    ^               reduce using rule 153 (variable -> ID .)
    OR              reduce using rule 153 (variable -> ID .)
    AND             reduce using rule 153 (variable -> ID .)
    ?               reduce using rule 153 (variable -> ID .)
    EQEQ            reduce using rule 153 (variable -> ID .)
    DISTINTO        reduce using rule 153 (variable -> ID .)
    >               reduce using rule 153 (variable -> ID .)
    <               reduce using rule 153 (variable -> ID .)
    )               reduce using rule 153 (variable -> ID .)
    :               reduce using rule 153 (variable -> ID .)
    }               reduce using rule 153 (variable -> ID .)
    [               shift and go to state 109
    .               shift and go to state 159


state 55

    (36) loop -> FOR ( . primParam ; valores ; tercerParam )
    (37) primParam -> . varAsig
    (38) primParam -> . empty
    (156) varAsig -> . variable MULEQ valores
    (157) varAsig -> . variable DIVEQ valores
    (158) varAsig -> . variable MASEQ valores
    (159) varAsig -> . variable MENOSEQ valores
    (160) varAsig -> . variable = valores
    (161) varAsig -> . ID . ID = valores
    (57) empty -> .
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    ID              shift and go to state 23
    ;               reduce using rule 57 (empty -> .)
    [               shift and go to state 22
    {               shift and go to state 35

    varAsig                        shift and go to state 162
    primParam                      shift and go to state 160
    reg                            shift and go to state 13
    atributos                      shift and go to state 6
    vec                            shift and go to state 36
    variable                       shift and go to state 161
    vecVal                         shift and go to state 9
    empty                          shift and go to state 163

state 56

    (51) funcInt -> LENGTH ( . valores )
    (82) valores -> . varYVals
    (83) valores -> . varsOps
    (84) valores -> . eMat
    (85) valores -> . expBool
    (86) valores -> . funcReturn
    (87) valores -> . reg
    (88) valores -> . INT
    (89) valores -> . FLOAT
    (90) valores -> . STRING
    (91) valores -> . BOOL
    (92) valores -> . ternario
    (93) valores -> . atributos
    (94) valores -> . vec
    (95) valores -> . RES
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (96) reg -> . { campos }
    (106) ternario -> . ternarioMat
    (107) ternario -> . ternarioBool
    (108) ternario -> . ( ternarioMat )
    (109) ternario -> . ( ternarioBool )
    (110) ternario -> . ternarioVars
    (111) ternario -> . ( ternarioVars )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 97
    FLOAT           shift and go to state 99
    STRING          shift and go to state 77
    BOOL            shift and go to state 102
    RES             shift and go to state 68
    ID              shift and go to state 95
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    {               shift and go to state 35
    (               shift and go to state 81
    [               shift and go to state 22
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    ?               reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    ternario                       shift and go to state 66
    funcBool                       shift and go to state 67
    funcInt                        shift and go to state 69
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 79
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 84
    vec                            shift and go to state 85
    paren                          shift and go to state 93
    reg                            shift and go to state 87
    expBool                        shift and go to state 88
    ternarioBool                   shift and go to state 89
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 96
    funcReturn                     shift and go to state 98
    valores                        shift and go to state 164
    p                              shift and go to state 101
    varsOps                        shift and go to state 103
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 73
    varYVals                       shift and go to state 106
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 107

state 57

    (31) sentencia -> func ; .

    COMMENT         reduce using rule 31 (sentencia -> func ; .)
    IF              reduce using rule 31 (sentencia -> func ; .)
    DO              reduce using rule 31 (sentencia -> func ; .)
    WHILE           reduce using rule 31 (sentencia -> func ; .)
    FOR             reduce using rule 31 (sentencia -> func ; .)
    RETURN          reduce using rule 31 (sentencia -> func ; .)
    ;               reduce using rule 31 (sentencia -> func ; .)
    MENOSMENOS      reduce using rule 31 (sentencia -> func ; .)
    MASMAS          reduce using rule 31 (sentencia -> func ; .)
    ID              reduce using rule 31 (sentencia -> func ; .)
    PRINT           reduce using rule 31 (sentencia -> func ; .)
    MULTIESCALAR    reduce using rule 31 (sentencia -> func ; .)
    LENGTH          reduce using rule 31 (sentencia -> func ; .)
    CAPITALIZAR     reduce using rule 31 (sentencia -> func ; .)
    COLINEALES      reduce using rule 31 (sentencia -> func ; .)
    [               reduce using rule 31 (sentencia -> func ; .)
    {               reduce using rule 31 (sentencia -> func ; .)
    $end            reduce using rule 31 (sentencia -> func ; .)
    }               reduce using rule 31 (sentencia -> func ; .)
    ELSE            reduce using rule 31 (sentencia -> func ; .)


state 58

    (159) varAsig -> variable MENOSEQ . valores
    (82) valores -> . varYVals
    (83) valores -> . varsOps
    (84) valores -> . eMat
    (85) valores -> . expBool
    (86) valores -> . funcReturn
    (87) valores -> . reg
    (88) valores -> . INT
    (89) valores -> . FLOAT
    (90) valores -> . STRING
    (91) valores -> . BOOL
    (92) valores -> . ternario
    (93) valores -> . atributos
    (94) valores -> . vec
    (95) valores -> . RES
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (96) reg -> . { campos }
    (106) ternario -> . ternarioMat
    (107) ternario -> . ternarioBool
    (108) ternario -> . ( ternarioMat )
    (109) ternario -> . ( ternarioBool )
    (110) ternario -> . ternarioVars
    (111) ternario -> . ( ternarioVars )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 97
    FLOAT           shift and go to state 99
    STRING          shift and go to state 77
    BOOL            shift and go to state 102
    RES             shift and go to state 68
    ID              shift and go to state 95
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    {               shift and go to state 35
    (               shift and go to state 81
    [               shift and go to state 22
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    ?               reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    ternario                       shift and go to state 66
    funcBool                       shift and go to state 67
    funcInt                        shift and go to state 69
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 79
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 84
    vec                            shift and go to state 85
    paren                          shift and go to state 93
    reg                            shift and go to state 87
    expBool                        shift and go to state 88
    ternarioBool                   shift and go to state 89
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 96
    funcReturn                     shift and go to state 98
    valores                        shift and go to state 165
    p                              shift and go to state 101
    varsOps                        shift and go to state 103
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 73
    varYVals                       shift and go to state 106
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 107

state 59

    (152) varsOps -> variable MENOSMENOS .

    ;               reduce using rule 152 (varsOps -> variable MENOSMENOS .)
    ^               reduce using rule 152 (varsOps -> variable MENOSMENOS .)
    *               reduce using rule 152 (varsOps -> variable MENOSMENOS .)
    /               reduce using rule 152 (varsOps -> variable MENOSMENOS .)
    %               reduce using rule 152 (varsOps -> variable MENOSMENOS .)
    +               reduce using rule 152 (varsOps -> variable MENOSMENOS .)
    -               reduce using rule 152 (varsOps -> variable MENOSMENOS .)
    ,               reduce using rule 152 (varsOps -> variable MENOSMENOS .)
    ]               reduce using rule 152 (varsOps -> variable MENOSMENOS .)
    EQEQ            reduce using rule 152 (varsOps -> variable MENOSMENOS .)
    DISTINTO        reduce using rule 152 (varsOps -> variable MENOSMENOS .)
    >               reduce using rule 152 (varsOps -> variable MENOSMENOS .)
    <               reduce using rule 152 (varsOps -> variable MENOSMENOS .)
    )               reduce using rule 152 (varsOps -> variable MENOSMENOS .)
    AND             reduce using rule 152 (varsOps -> variable MENOSMENOS .)
    OR              reduce using rule 152 (varsOps -> variable MENOSMENOS .)
    ?               reduce using rule 152 (varsOps -> variable MENOSMENOS .)
    :               reduce using rule 152 (varsOps -> variable MENOSMENOS .)
    }               reduce using rule 152 (varsOps -> variable MENOSMENOS .)


state 60

    (158) varAsig -> variable MASEQ . valores
    (82) valores -> . varYVals
    (83) valores -> . varsOps
    (84) valores -> . eMat
    (85) valores -> . expBool
    (86) valores -> . funcReturn
    (87) valores -> . reg
    (88) valores -> . INT
    (89) valores -> . FLOAT
    (90) valores -> . STRING
    (91) valores -> . BOOL
    (92) valores -> . ternario
    (93) valores -> . atributos
    (94) valores -> . vec
    (95) valores -> . RES
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (96) reg -> . { campos }
    (106) ternario -> . ternarioMat
    (107) ternario -> . ternarioBool
    (108) ternario -> . ( ternarioMat )
    (109) ternario -> . ( ternarioBool )
    (110) ternario -> . ternarioVars
    (111) ternario -> . ( ternarioVars )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 97
    FLOAT           shift and go to state 99
    STRING          shift and go to state 77
    BOOL            shift and go to state 102
    RES             shift and go to state 68
    ID              shift and go to state 95
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    {               shift and go to state 35
    (               shift and go to state 81
    [               shift and go to state 22
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    ?               reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    ternario                       shift and go to state 66
    funcBool                       shift and go to state 67
    funcInt                        shift and go to state 69
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 79
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 84
    vec                            shift and go to state 85
    paren                          shift and go to state 93
    reg                            shift and go to state 87
    expBool                        shift and go to state 88
    ternarioBool                   shift and go to state 89
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 96
    funcReturn                     shift and go to state 98
    valores                        shift and go to state 166
    p                              shift and go to state 101
    varsOps                        shift and go to state 103
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 73
    varYVals                       shift and go to state 106
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 107

state 61

    (151) varsOps -> variable MASMAS .

    ;               reduce using rule 151 (varsOps -> variable MASMAS .)
    ^               reduce using rule 151 (varsOps -> variable MASMAS .)
    *               reduce using rule 151 (varsOps -> variable MASMAS .)
    /               reduce using rule 151 (varsOps -> variable MASMAS .)
    %               reduce using rule 151 (varsOps -> variable MASMAS .)
    +               reduce using rule 151 (varsOps -> variable MASMAS .)
    -               reduce using rule 151 (varsOps -> variable MASMAS .)
    ,               reduce using rule 151 (varsOps -> variable MASMAS .)
    ]               reduce using rule 151 (varsOps -> variable MASMAS .)
    EQEQ            reduce using rule 151 (varsOps -> variable MASMAS .)
    DISTINTO        reduce using rule 151 (varsOps -> variable MASMAS .)
    >               reduce using rule 151 (varsOps -> variable MASMAS .)
    <               reduce using rule 151 (varsOps -> variable MASMAS .)
    )               reduce using rule 151 (varsOps -> variable MASMAS .)
    AND             reduce using rule 151 (varsOps -> variable MASMAS .)
    OR              reduce using rule 151 (varsOps -> variable MASMAS .)
    ?               reduce using rule 151 (varsOps -> variable MASMAS .)
    :               reduce using rule 151 (varsOps -> variable MASMAS .)
    }               reduce using rule 151 (varsOps -> variable MASMAS .)


state 62

    (156) varAsig -> variable MULEQ . valores
    (82) valores -> . varYVals
    (83) valores -> . varsOps
    (84) valores -> . eMat
    (85) valores -> . expBool
    (86) valores -> . funcReturn
    (87) valores -> . reg
    (88) valores -> . INT
    (89) valores -> . FLOAT
    (90) valores -> . STRING
    (91) valores -> . BOOL
    (92) valores -> . ternario
    (93) valores -> . atributos
    (94) valores -> . vec
    (95) valores -> . RES
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (96) reg -> . { campos }
    (106) ternario -> . ternarioMat
    (107) ternario -> . ternarioBool
    (108) ternario -> . ( ternarioMat )
    (109) ternario -> . ( ternarioBool )
    (110) ternario -> . ternarioVars
    (111) ternario -> . ( ternarioVars )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 97
    FLOAT           shift and go to state 99
    STRING          shift and go to state 77
    BOOL            shift and go to state 102
    RES             shift and go to state 68
    ID              shift and go to state 95
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    {               shift and go to state 35
    (               shift and go to state 81
    [               shift and go to state 22
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    ?               reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    ternario                       shift and go to state 66
    funcBool                       shift and go to state 67
    funcInt                        shift and go to state 69
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 79
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 84
    vec                            shift and go to state 85
    paren                          shift and go to state 93
    reg                            shift and go to state 87
    expBool                        shift and go to state 88
    ternarioBool                   shift and go to state 89
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 96
    funcReturn                     shift and go to state 98
    valores                        shift and go to state 167
    p                              shift and go to state 101
    varsOps                        shift and go to state 103
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 73
    varYVals                       shift and go to state 106
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 107

state 63

    (160) varAsig -> variable = . valores
    (82) valores -> . varYVals
    (83) valores -> . varsOps
    (84) valores -> . eMat
    (85) valores -> . expBool
    (86) valores -> . funcReturn
    (87) valores -> . reg
    (88) valores -> . INT
    (89) valores -> . FLOAT
    (90) valores -> . STRING
    (91) valores -> . BOOL
    (92) valores -> . ternario
    (93) valores -> . atributos
    (94) valores -> . vec
    (95) valores -> . RES
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (96) reg -> . { campos }
    (106) ternario -> . ternarioMat
    (107) ternario -> . ternarioBool
    (108) ternario -> . ( ternarioMat )
    (109) ternario -> . ( ternarioBool )
    (110) ternario -> . ternarioVars
    (111) ternario -> . ( ternarioVars )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 97
    FLOAT           shift and go to state 99
    STRING          shift and go to state 77
    BOOL            shift and go to state 102
    RES             shift and go to state 68
    ID              shift and go to state 95
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    {               shift and go to state 35
    (               shift and go to state 81
    [               shift and go to state 22
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    ?               reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    ternario                       shift and go to state 66
    funcBool                       shift and go to state 67
    funcInt                        shift and go to state 69
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 79
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 84
    vec                            shift and go to state 85
    paren                          shift and go to state 93
    reg                            shift and go to state 87
    expBool                        shift and go to state 88
    ternarioBool                   shift and go to state 89
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 96
    funcReturn                     shift and go to state 98
    valores                        shift and go to state 168
    p                              shift and go to state 101
    varsOps                        shift and go to state 103
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 73
    varYVals                       shift and go to state 106
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 107

state 64

    (157) varAsig -> variable DIVEQ . valores
    (82) valores -> . varYVals
    (83) valores -> . varsOps
    (84) valores -> . eMat
    (85) valores -> . expBool
    (86) valores -> . funcReturn
    (87) valores -> . reg
    (88) valores -> . INT
    (89) valores -> . FLOAT
    (90) valores -> . STRING
    (91) valores -> . BOOL
    (92) valores -> . ternario
    (93) valores -> . atributos
    (94) valores -> . vec
    (95) valores -> . RES
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (96) reg -> . { campos }
    (106) ternario -> . ternarioMat
    (107) ternario -> . ternarioBool
    (108) ternario -> . ( ternarioMat )
    (109) ternario -> . ( ternarioBool )
    (110) ternario -> . ternarioVars
    (111) ternario -> . ( ternarioVars )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 97
    FLOAT           shift and go to state 99
    STRING          shift and go to state 77
    BOOL            shift and go to state 102
    RES             shift and go to state 68
    ID              shift and go to state 95
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    {               shift and go to state 35
    (               shift and go to state 81
    [               shift and go to state 22
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    ?               reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    ternario                       shift and go to state 66
    funcBool                       shift and go to state 67
    funcInt                        shift and go to state 69
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 79
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 84
    vec                            shift and go to state 85
    paren                          shift and go to state 93
    reg                            shift and go to state 87
    expBool                        shift and go to state 88
    ternarioBool                   shift and go to state 89
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 96
    funcReturn                     shift and go to state 98
    valores                        shift and go to state 169
    p                              shift and go to state 101
    varsOps                        shift and go to state 103
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 73
    varYVals                       shift and go to state 106
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 107

state 65

    (215) expBool -> and .
    (216) and -> and . AND eq
    (218) and -> and . AND valoresBool

    )               reduce using rule 215 (expBool -> and .)
    ?               reduce using rule 215 (expBool -> and .)
    OR              reduce using rule 215 (expBool -> and .)
    ]               reduce using rule 215 (expBool -> and .)
    ,               reduce using rule 215 (expBool -> and .)
    ;               reduce using rule 215 (expBool -> and .)
    :               reduce using rule 215 (expBool -> and .)
    }               reduce using rule 215 (expBool -> and .)
    AND             shift and go to state 170


state 66

    (92) valores -> ternario .

    )               reduce using rule 92 (valores -> ternario .)
    ;               reduce using rule 92 (valores -> ternario .)
    ,               reduce using rule 92 (valores -> ternario .)
    ]               reduce using rule 92 (valores -> ternario .)
    }               reduce using rule 92 (valores -> ternario .)


state 67

    (49) funcReturn -> funcBool .
    (206) valoresBool -> funcBool .
    (231) tCompareEQ -> funcBool .

    )               reduce using rule 49 (funcReturn -> funcBool .)
    ;               reduce using rule 49 (funcReturn -> funcBool .)
    ,               reduce using rule 49 (funcReturn -> funcBool .)
    }               reduce using rule 49 (funcReturn -> funcBool .)
    ]               reduce using rule 49 (funcReturn -> funcBool .)
    OR              reduce using rule 206 (valoresBool -> funcBool .)
    AND             reduce using rule 206 (valoresBool -> funcBool .)
    ?               reduce using rule 206 (valoresBool -> funcBool .)
    EQEQ            reduce using rule 231 (tCompareEQ -> funcBool .)
    DISTINTO        reduce using rule 231 (tCompareEQ -> funcBool .)


state 68

    (95) valores -> RES .

    )               reduce using rule 95 (valores -> RES .)
    ;               reduce using rule 95 (valores -> RES .)
    ,               reduce using rule 95 (valores -> RES .)
    ]               reduce using rule 95 (valores -> RES .)
    }               reduce using rule 95 (valores -> RES .)


state 69

    (47) funcReturn -> funcInt .
    (164) valoresMat -> funcInt .
    (236) tCompareEQ -> funcInt .
    (244) tCompare -> funcInt .

    )               reduce using rule 47 (funcReturn -> funcInt .)
    ;               reduce using rule 47 (funcReturn -> funcInt .)
    ,               reduce using rule 47 (funcReturn -> funcInt .)
    }               reduce using rule 47 (funcReturn -> funcInt .)
    ]               reduce using rule 47 (funcReturn -> funcInt .)
    +               reduce using rule 164 (valoresMat -> funcInt .)
    -               reduce using rule 164 (valoresMat -> funcInt .)
    *               reduce using rule 164 (valoresMat -> funcInt .)
    /               reduce using rule 164 (valoresMat -> funcInt .)
    %               reduce using rule 164 (valoresMat -> funcInt .)
    ^               reduce using rule 164 (valoresMat -> funcInt .)
    EQEQ            reduce using rule 236 (tCompareEQ -> funcInt .)
    DISTINTO        reduce using rule 236 (tCompareEQ -> funcInt .)
    >               reduce using rule 244 (tCompare -> funcInt .)
    <               reduce using rule 244 (tCompare -> funcInt .)


state 70

    (59) elem -> valores . , elem
    (60) elem -> valores .

    ,               shift and go to state 171
    ]               reduce using rule 60 (elem -> valores .)


state 71

    (250) menor -> not .

    EQEQ            reduce using rule 250 (menor -> not .)
    DISTINTO        reduce using rule 250 (menor -> not .)
    AND             reduce using rule 250 (menor -> not .)
    OR              reduce using rule 250 (menor -> not .)
    ?               reduce using rule 250 (menor -> not .)
    )               reduce using rule 250 (menor -> not .)
    ,               reduce using rule 250 (menor -> not .)
    ]               reduce using rule 250 (menor -> not .)
    ;               reduce using rule 250 (menor -> not .)
    :               reduce using rule 250 (menor -> not .)
    }               reduce using rule 250 (menor -> not .)


state 72

    (248) mayor -> menor .

    EQEQ            reduce using rule 248 (mayor -> menor .)
    DISTINTO        reduce using rule 248 (mayor -> menor .)
    AND             reduce using rule 248 (mayor -> menor .)
    OR              reduce using rule 248 (mayor -> menor .)
    ?               reduce using rule 248 (mayor -> menor .)
    ,               reduce using rule 248 (mayor -> menor .)
    ]               reduce using rule 248 (mayor -> menor .)
    )               reduce using rule 248 (mayor -> menor .)
    ;               reduce using rule 248 (mayor -> menor .)
    :               reduce using rule 248 (mayor -> menor .)
    }               reduce using rule 248 (mayor -> menor .)


state 73

    (110) ternario -> ternarioVars .

    ,               reduce using rule 110 (ternario -> ternarioVars .)
    }               reduce using rule 110 (ternario -> ternarioVars .)
    ]               reduce using rule 110 (ternario -> ternarioVars .)
    )               reduce using rule 110 (ternario -> ternarioVars .)
    ;               reduce using rule 110 (ternario -> ternarioVars .)


state 74

    (172) eMat -> valoresMat . + p
    (174) eMat -> valoresMat . + valoresMat
    (177) eMat -> valoresMat . - p
    (179) eMat -> valoresMat . - valoresMat
    (183) p -> valoresMat . * exp
    (184) p -> valoresMat . / exp
    (185) p -> valoresMat . % exp
    (189) p -> valoresMat . * valoresMat
    (190) p -> valoresMat . / valoresMat
    (191) p -> valoresMat . % valoresMat
    (194) exp -> valoresMat . ^ iSing
    (196) exp -> valoresMat . ^ valoresMat

    +               shift and go to state 173
    -               shift and go to state 175
    *               shift and go to state 174
    /               shift and go to state 176
    %               shift and go to state 172
    ^               shift and go to state 177


state 75

    (220) and -> eq .
    (221) eq -> eq . EQEQ mayor
    (222) eq -> eq . DISTINTO mayor
    (225) eq -> eq . EQEQ tCompareEQ
    (226) eq -> eq . DISTINTO tCompareEQ

    AND             reduce using rule 220 (and -> eq .)
    ?               reduce using rule 220 (and -> eq .)
    OR              reduce using rule 220 (and -> eq .)
    :               reduce using rule 220 (and -> eq .)
    )               reduce using rule 220 (and -> eq .)
    ,               reduce using rule 220 (and -> eq .)
    ]               reduce using rule 220 (and -> eq .)
    ;               reduce using rule 220 (and -> eq .)
    }               reduce using rule 220 (and -> eq .)
    EQEQ            shift and go to state 178
    DISTINTO        shift and go to state 179


state 76

    (147) varYVals -> vecVal .
    (148) varYVals -> vecVal . . varYVals
    (63) vecVal -> vecVal . [ expresion ]
    (67) vecVal -> vecVal . [ INT ]
    (154) variable -> vecVal .
    (155) variable -> vecVal . . varYVals

    +               reduce using rule 147 (varYVals -> vecVal .)
    -               reduce using rule 147 (varYVals -> vecVal .)
    *               reduce using rule 147 (varYVals -> vecVal .)
    /               reduce using rule 147 (varYVals -> vecVal .)
    %               reduce using rule 147 (varYVals -> vecVal .)
    ^               reduce using rule 147 (varYVals -> vecVal .)
    ?               reduce using rule 147 (varYVals -> vecVal .)
    OR              reduce using rule 147 (varYVals -> vecVal .)
    AND             reduce using rule 147 (varYVals -> vecVal .)
    EQEQ            reduce using rule 147 (varYVals -> vecVal .)
    DISTINTO        reduce using rule 147 (varYVals -> vecVal .)
    >               reduce using rule 147 (varYVals -> vecVal .)
    <               reduce using rule 147 (varYVals -> vecVal .)
    ,               reduce using rule 147 (varYVals -> vecVal .)
    ]               reduce using rule 147 (varYVals -> vecVal .)
    )               reduce using rule 147 (varYVals -> vecVal .)
    ;               reduce using rule 147 (varYVals -> vecVal .)
    :               reduce using rule 147 (varYVals -> vecVal .)
    }               reduce using rule 147 (varYVals -> vecVal .)
    .               shift and go to state 180
    [               shift and go to state 49
    MASMAS          reduce using rule 154 (variable -> vecVal .)
    MENOSMENOS      reduce using rule 154 (variable -> vecVal .)


state 77

    (90) valores -> STRING .
    (167) valoresMat -> STRING .

    )               reduce using rule 90 (valores -> STRING .)
    ;               reduce using rule 90 (valores -> STRING .)
    ,               reduce using rule 90 (valores -> STRING .)
    ]               reduce using rule 90 (valores -> STRING .)
    }               reduce using rule 90 (valores -> STRING .)
    +               reduce using rule 167 (valoresMat -> STRING .)
    -               reduce using rule 167 (valoresMat -> STRING .)
    *               reduce using rule 167 (valoresMat -> STRING .)
    /               reduce using rule 167 (valoresMat -> STRING .)
    %               reduce using rule 167 (valoresMat -> STRING .)
    ^               reduce using rule 167 (valoresMat -> STRING .)


state 78

    (212) expBool -> valoresBool . OR and
    (214) expBool -> valoresBool . OR valoresBool
    (217) and -> valoresBool . AND eq
    (219) and -> valoresBool . AND valoresBool
    (130) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (112) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars

    OR              shift and go to state 182
    AND             shift and go to state 181
    ?               shift and go to state 183


state 79

    (84) valores -> eMat .
    (171) eMat -> eMat . + p
    (173) eMat -> eMat . + valoresMat
    (176) eMat -> eMat . - p
    (178) eMat -> eMat . - valoresMat
    (237) tCompareEQ -> eMat .
    (240) tCompare -> eMat .

    )               reduce using rule 84 (valores -> eMat .)
    ;               reduce using rule 84 (valores -> eMat .)
    ,               reduce using rule 84 (valores -> eMat .)
    ]               reduce using rule 84 (valores -> eMat .)
    }               reduce using rule 84 (valores -> eMat .)
    +               shift and go to state 184
    -               shift and go to state 185
    EQEQ            reduce using rule 237 (tCompareEQ -> eMat .)
    DISTINTO        reduce using rule 237 (tCompareEQ -> eMat .)
    >               reduce using rule 240 (tCompare -> eMat .)
    <               reduce using rule 240 (tCompare -> eMat .)


state 80

    (223) eq -> tCompareEQ . EQEQ mayor
    (224) eq -> tCompareEQ . DISTINTO mayor
    (227) eq -> tCompareEQ . EQEQ tCompareEQ
    (228) eq -> tCompareEQ . DISTINTO tCompareEQ

    EQEQ            shift and go to state 186
    DISTINTO        shift and go to state 187


state 81

    (108) ternario -> ( . ternarioMat )
    (109) ternario -> ( . ternarioBool )
    (111) ternario -> ( . ternarioVars )
    (170) valoresMat -> ( . ternarioMat )
    (209) valoresBool -> ( . ternarioBool )
    (238) tCompareEQ -> ( . ternarioBool )
    (239) tCompareEQ -> ( . ternarioMat )
    (203) paren -> ( . eMat )
    (204) paren -> ( . valoresMat )
    (246) tCompare -> ( . ternarioMat )
    (254) parenBool -> ( . expBool )
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (53) funcBool -> . COLINEALES ( valores , valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (58) vec -> . [ elem ]
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    STRING          shift and go to state 196
    (               shift and go to state 193
    BOOL            shift and go to state 202
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    COLINEALES      shift and go to state 4
    {               shift and go to state 35
    -               shift and go to state 83
    +               shift and go to state 82
    [               shift and go to state 22
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 189
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 190
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 191
    eMat                           shift and go to state 192
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 194
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    exp                            shift and go to state 105
    ternarioBool                   shift and go to state 197
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    expBool                        shift and go to state 203
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 195
    ternarioVars                   shift and go to state 204
    varYVals                       shift and go to state 205
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 206

state 82

    (199) iSing -> + . paren
    (201) iSing -> + . valoresMat
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (58) vec -> . [ elem ]

    (               shift and go to state 209
    INT             shift and go to state 212
    FLOAT           shift and go to state 211
    STRING          shift and go to state 196
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    {               shift and go to state 35
    [               shift and go to state 22

    funcString                     shift and go to state 199
    funcInt                        shift and go to state 207
    vecVal                         shift and go to state 76
    varsOps                        shift and go to state 213
    valoresMat                     shift and go to state 208
    variable                       shift and go to state 94
    paren                          shift and go to state 210
    varYVals                       shift and go to state 214
    reg                            shift and go to state 13
    atributos                      shift and go to state 206
    vec                            shift and go to state 36

state 83

    (198) iSing -> - . paren
    (200) iSing -> - . valoresMat
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (58) vec -> . [ elem ]

    (               shift and go to state 209
    INT             shift and go to state 212
    FLOAT           shift and go to state 211
    STRING          shift and go to state 196
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    {               shift and go to state 35
    [               shift and go to state 22

    funcString                     shift and go to state 199
    funcInt                        shift and go to state 207
    vecVal                         shift and go to state 76
    varsOps                        shift and go to state 213
    valoresMat                     shift and go to state 215
    variable                       shift and go to state 94
    paren                          shift and go to state 216
    varYVals                       shift and go to state 214
    reg                            shift and go to state 13
    atributos                      shift and go to state 206
    vec                            shift and go to state 36

state 84

    (106) ternario -> ternarioMat .

    ,               reduce using rule 106 (ternario -> ternarioMat .)
    }               reduce using rule 106 (ternario -> ternarioMat .)
    ]               reduce using rule 106 (ternario -> ternarioMat .)
    )               reduce using rule 106 (ternario -> ternarioMat .)
    ;               reduce using rule 106 (ternario -> ternarioMat .)


state 85

    (94) valores -> vec .
    (62) vecVal -> vec . [ expresion ]
    (66) vecVal -> vec . [ INT ]

    )               reduce using rule 94 (valores -> vec .)
    ;               reduce using rule 94 (valores -> vec .)
    ,               reduce using rule 94 (valores -> vec .)
    ]               reduce using rule 94 (valores -> vec .)
    }               reduce using rule 94 (valores -> vec .)
    [               shift and go to state 121


state 86

    (229) eq -> mayor .

    EQEQ            reduce using rule 229 (eq -> mayor .)
    DISTINTO        reduce using rule 229 (eq -> mayor .)
    AND             reduce using rule 229 (eq -> mayor .)
    ?               reduce using rule 229 (eq -> mayor .)
    OR              reduce using rule 229 (eq -> mayor .)
    :               reduce using rule 229 (eq -> mayor .)
    ,               reduce using rule 229 (eq -> mayor .)
    ]               reduce using rule 229 (eq -> mayor .)
    )               reduce using rule 229 (eq -> mayor .)
    ;               reduce using rule 229 (eq -> mayor .)
    }               reduce using rule 229 (eq -> mayor .)


state 87

    (87) valores -> reg .
    (100) atributos -> reg . . valoresCampos

    )               reduce using rule 87 (valores -> reg .)
    ;               reduce using rule 87 (valores -> reg .)
    ,               reduce using rule 87 (valores -> reg .)
    ]               reduce using rule 87 (valores -> reg .)
    }               reduce using rule 87 (valores -> reg .)
    .               shift and go to state 51


state 88

    (85) valores -> expBool .
    (211) expBool -> expBool . OR and
    (213) expBool -> expBool . OR valoresBool
    (131) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (140) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (117) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars

    )               reduce using rule 85 (valores -> expBool .)
    ;               reduce using rule 85 (valores -> expBool .)
    ,               reduce using rule 85 (valores -> expBool .)
    ]               reduce using rule 85 (valores -> expBool .)
    }               reduce using rule 85 (valores -> expBool .)
    OR              shift and go to state 217
    ?               shift and go to state 218


state 89

    (107) ternario -> ternarioBool .

    ,               reduce using rule 107 (ternario -> ternarioBool .)
    }               reduce using rule 107 (ternario -> ternarioBool .)
    ]               reduce using rule 107 (ternario -> ternarioBool .)
    )               reduce using rule 107 (ternario -> ternarioBool .)
    ;               reduce using rule 107 (ternario -> ternarioBool .)


state 90

    (197) exp -> iSing .

    ^               reduce using rule 197 (exp -> iSing .)
    *               reduce using rule 197 (exp -> iSing .)
    /               reduce using rule 197 (exp -> iSing .)
    %               reduce using rule 197 (exp -> iSing .)
    +               reduce using rule 197 (exp -> iSing .)
    -               reduce using rule 197 (exp -> iSing .)
    :               reduce using rule 197 (exp -> iSing .)
    EQEQ            reduce using rule 197 (exp -> iSing .)
    DISTINTO        reduce using rule 197 (exp -> iSing .)
    >               reduce using rule 197 (exp -> iSing .)
    <               reduce using rule 197 (exp -> iSing .)
    )               reduce using rule 197 (exp -> iSing .)
    ,               reduce using rule 197 (exp -> iSing .)
    ]               reduce using rule 197 (exp -> iSing .)
    ;               reduce using rule 197 (exp -> iSing .)
    AND             reduce using rule 197 (exp -> iSing .)
    OR              reduce using rule 197 (exp -> iSing .)
    ?               reduce using rule 197 (exp -> iSing .)
    }               reduce using rule 197 (exp -> iSing .)


state 91

    (253) not -> parenBool .

    EQEQ            reduce using rule 253 (not -> parenBool .)
    DISTINTO        reduce using rule 253 (not -> parenBool .)
    AND             reduce using rule 253 (not -> parenBool .)
    OR              reduce using rule 253 (not -> parenBool .)
    ?               reduce using rule 253 (not -> parenBool .)
    ]               reduce using rule 253 (not -> parenBool .)
    )               reduce using rule 253 (not -> parenBool .)
    ,               reduce using rule 253 (not -> parenBool .)
    ;               reduce using rule 253 (not -> parenBool .)
    :               reduce using rule 253 (not -> parenBool .)
    }               reduce using rule 253 (not -> parenBool .)


state 92

    (247) mayor -> tCompare . > tCompare
    (249) menor -> tCompare . < tCompare

    >               shift and go to state 220
    <               shift and go to state 219


state 93

    (202) iSing -> paren .

    ^               reduce using rule 202 (iSing -> paren .)
    *               reduce using rule 202 (iSing -> paren .)
    /               reduce using rule 202 (iSing -> paren .)
    %               reduce using rule 202 (iSing -> paren .)
    )               reduce using rule 202 (iSing -> paren .)
    +               reduce using rule 202 (iSing -> paren .)
    -               reduce using rule 202 (iSing -> paren .)
    EQEQ            reduce using rule 202 (iSing -> paren .)
    DISTINTO        reduce using rule 202 (iSing -> paren .)
    >               reduce using rule 202 (iSing -> paren .)
    <               reduce using rule 202 (iSing -> paren .)
    ]               reduce using rule 202 (iSing -> paren .)
    :               reduce using rule 202 (iSing -> paren .)
    ;               reduce using rule 202 (iSing -> paren .)
    AND             reduce using rule 202 (iSing -> paren .)
    OR              reduce using rule 202 (iSing -> paren .)
    ?               reduce using rule 202 (iSing -> paren .)
    ,               reduce using rule 202 (iSing -> paren .)
    }               reduce using rule 202 (iSing -> paren .)


state 94

    (151) varsOps -> variable . MASMAS
    (152) varsOps -> variable . MENOSMENOS

    MASMAS          shift and go to state 61
    MENOSMENOS      shift and go to state 59


state 95

    (146) varYVals -> ID .
    (99) atributos -> ID . . valoresCampos
    (61) vecVal -> ID . [ expresion ]
    (65) vecVal -> ID . [ INT ]
    (153) variable -> ID .

    ;               reduce using rule 146 (varYVals -> ID .)
    )               reduce using rule 146 (varYVals -> ID .)
    +               reduce using rule 146 (varYVals -> ID .)
    -               reduce using rule 146 (varYVals -> ID .)
    *               reduce using rule 146 (varYVals -> ID .)
    /               reduce using rule 146 (varYVals -> ID .)
    %               reduce using rule 146 (varYVals -> ID .)
    ^               reduce using rule 146 (varYVals -> ID .)
    OR              reduce using rule 146 (varYVals -> ID .)
    AND             reduce using rule 146 (varYVals -> ID .)
    ?               reduce using rule 146 (varYVals -> ID .)
    EQEQ            reduce using rule 146 (varYVals -> ID .)
    DISTINTO        reduce using rule 146 (varYVals -> ID .)
    >               reduce using rule 146 (varYVals -> ID .)
    <               reduce using rule 146 (varYVals -> ID .)
    ,               reduce using rule 146 (varYVals -> ID .)
    ]               reduce using rule 146 (varYVals -> ID .)
    }               reduce using rule 146 (varYVals -> ID .)
    .               shift and go to state 159
    [               shift and go to state 109
    MASMAS          reduce using rule 153 (variable -> ID .)
    MENOSMENOS      reduce using rule 153 (variable -> ID .)


state 96

    (48) funcReturn -> funcString .
    (166) valoresMat -> funcString .

    )               reduce using rule 48 (funcReturn -> funcString .)
    ;               reduce using rule 48 (funcReturn -> funcString .)
    ,               reduce using rule 48 (funcReturn -> funcString .)
    }               reduce using rule 48 (funcReturn -> funcString .)
    ]               reduce using rule 48 (funcReturn -> funcString .)
    +               reduce using rule 166 (valoresMat -> funcString .)
    -               reduce using rule 166 (valoresMat -> funcString .)
    *               reduce using rule 166 (valoresMat -> funcString .)
    /               reduce using rule 166 (valoresMat -> funcString .)
    %               reduce using rule 166 (valoresMat -> funcString .)
    ^               reduce using rule 166 (valoresMat -> funcString .)


state 97

    (88) valores -> INT .
    (162) valoresMat -> INT .
    (234) tCompareEQ -> INT .
    (243) tCompare -> INT .

    )               reduce using rule 88 (valores -> INT .)
    ;               reduce using rule 88 (valores -> INT .)
    ,               reduce using rule 88 (valores -> INT .)
    ]               reduce using rule 88 (valores -> INT .)
    }               reduce using rule 88 (valores -> INT .)
    +               reduce using rule 162 (valoresMat -> INT .)
    -               reduce using rule 162 (valoresMat -> INT .)
    *               reduce using rule 162 (valoresMat -> INT .)
    /               reduce using rule 162 (valoresMat -> INT .)
    %               reduce using rule 162 (valoresMat -> INT .)
    ^               reduce using rule 162 (valoresMat -> INT .)
    EQEQ            reduce using rule 234 (tCompareEQ -> INT .)
    DISTINTO        reduce using rule 234 (tCompareEQ -> INT .)
    >               reduce using rule 243 (tCompare -> INT .)
    <               reduce using rule 243 (tCompare -> INT .)


state 98

    (86) valores -> funcReturn .

    )               reduce using rule 86 (valores -> funcReturn .)
    ;               reduce using rule 86 (valores -> funcReturn .)
    ,               reduce using rule 86 (valores -> funcReturn .)
    ]               reduce using rule 86 (valores -> funcReturn .)
    }               reduce using rule 86 (valores -> funcReturn .)


state 99

    (89) valores -> FLOAT .
    (163) valoresMat -> FLOAT .
    (235) tCompareEQ -> FLOAT .
    (245) tCompare -> FLOAT .

    )               reduce using rule 89 (valores -> FLOAT .)
    ;               reduce using rule 89 (valores -> FLOAT .)
    ,               reduce using rule 89 (valores -> FLOAT .)
    ]               reduce using rule 89 (valores -> FLOAT .)
    }               reduce using rule 89 (valores -> FLOAT .)
    +               reduce using rule 163 (valoresMat -> FLOAT .)
    -               reduce using rule 163 (valoresMat -> FLOAT .)
    *               reduce using rule 163 (valoresMat -> FLOAT .)
    /               reduce using rule 163 (valoresMat -> FLOAT .)
    %               reduce using rule 163 (valoresMat -> FLOAT .)
    ^               reduce using rule 163 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 235 (tCompareEQ -> FLOAT .)
    DISTINTO        reduce using rule 235 (tCompareEQ -> FLOAT .)
    >               reduce using rule 245 (tCompare -> FLOAT .)
    <               reduce using rule 245 (tCompare -> FLOAT .)


state 100

    (58) vec -> [ elem . ]

    ]               shift and go to state 221


state 101

    (175) eMat -> p .
    (180) p -> p . * exp
    (181) p -> p . / exp
    (182) p -> p . % exp
    (186) p -> p . * valoresMat
    (187) p -> p . / valoresMat
    (188) p -> p . % valoresMat

    +               reduce using rule 175 (eMat -> p .)
    -               reduce using rule 175 (eMat -> p .)
    EQEQ            reduce using rule 175 (eMat -> p .)
    DISTINTO        reduce using rule 175 (eMat -> p .)
    >               reduce using rule 175 (eMat -> p .)
    <               reduce using rule 175 (eMat -> p .)
    )               reduce using rule 175 (eMat -> p .)
    :               reduce using rule 175 (eMat -> p .)
    ,               reduce using rule 175 (eMat -> p .)
    ]               reduce using rule 175 (eMat -> p .)
    }               reduce using rule 175 (eMat -> p .)
    AND             reduce using rule 175 (eMat -> p .)
    OR              reduce using rule 175 (eMat -> p .)
    ?               reduce using rule 175 (eMat -> p .)
    ;               reduce using rule 175 (eMat -> p .)
    *               shift and go to state 223
    /               shift and go to state 224
    %               shift and go to state 222


state 102

    (91) valores -> BOOL .
    (205) valoresBool -> BOOL .
    (230) tCompareEQ -> BOOL .

    )               reduce using rule 91 (valores -> BOOL .)
    ;               reduce using rule 91 (valores -> BOOL .)
    ,               reduce using rule 91 (valores -> BOOL .)
    ]               reduce using rule 91 (valores -> BOOL .)
    }               reduce using rule 91 (valores -> BOOL .)
    OR              reduce using rule 205 (valoresBool -> BOOL .)
    AND             reduce using rule 205 (valoresBool -> BOOL .)
    ?               reduce using rule 205 (valoresBool -> BOOL .)
    EQEQ            reduce using rule 230 (tCompareEQ -> BOOL .)
    DISTINTO        reduce using rule 230 (tCompareEQ -> BOOL .)


state 103

    (83) valores -> varsOps .
    (169) valoresMat -> varsOps .
    (208) valoresBool -> varsOps .
    (233) tCompareEQ -> varsOps .
    (241) tCompare -> varsOps .

    )               reduce using rule 83 (valores -> varsOps .)
    ;               reduce using rule 83 (valores -> varsOps .)
    ,               reduce using rule 83 (valores -> varsOps .)
    ]               reduce using rule 83 (valores -> varsOps .)
    }               reduce using rule 83 (valores -> varsOps .)
    +               reduce using rule 169 (valoresMat -> varsOps .)
    -               reduce using rule 169 (valoresMat -> varsOps .)
    *               reduce using rule 169 (valoresMat -> varsOps .)
    /               reduce using rule 169 (valoresMat -> varsOps .)
    %               reduce using rule 169 (valoresMat -> varsOps .)
    ^               reduce using rule 169 (valoresMat -> varsOps .)
    OR              reduce using rule 208 (valoresBool -> varsOps .)
    AND             reduce using rule 208 (valoresBool -> varsOps .)
    ?               reduce using rule 208 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 233 (tCompareEQ -> varsOps .)
    DISTINTO        reduce using rule 233 (tCompareEQ -> varsOps .)
    >               reduce using rule 241 (tCompare -> varsOps .)
    <               reduce using rule 241 (tCompare -> varsOps .)


state 104

    (251) not -> NOT . not
    (252) not -> NOT . valoresBool
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (254) parenBool -> . ( expBool )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    NOT             shift and go to state 104
    BOOL            shift and go to state 230
    (               shift and go to state 227
    EQEQ            reduce using rule 210 (valoresBool -> .)
    DISTINTO        reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    ?               reduce using rule 210 (valoresBool -> .)
    ,               reduce using rule 210 (valoresBool -> .)
    ]               reduce using rule 210 (valoresBool -> .)
    )               reduce using rule 210 (valoresBool -> .)
    ;               reduce using rule 210 (valoresBool -> .)
    :               reduce using rule 210 (valoresBool -> .)
    }               reduce using rule 210 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 229
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    [               shift and go to state 22
    {               shift and go to state 35

    reg                            shift and go to state 13
    funcBool                       shift and go to state 225
    atributos                      shift and go to state 6
    parenBool                      shift and go to state 91
    variable                       shift and go to state 94
    varsOps                        shift and go to state 231
    vecVal                         shift and go to state 76
    not                            shift and go to state 228
    varYVals                       shift and go to state 232
    valoresBool                    shift and go to state 226
    vec                            shift and go to state 36

state 105

    (192) p -> exp .
    (193) exp -> exp . ^ iSing
    (195) exp -> exp . ^ valoresMat

    *               reduce using rule 192 (p -> exp .)
    /               reduce using rule 192 (p -> exp .)
    %               reduce using rule 192 (p -> exp .)
    +               reduce using rule 192 (p -> exp .)
    -               reduce using rule 192 (p -> exp .)
    )               reduce using rule 192 (p -> exp .)
    :               reduce using rule 192 (p -> exp .)
    EQEQ            reduce using rule 192 (p -> exp .)
    DISTINTO        reduce using rule 192 (p -> exp .)
    >               reduce using rule 192 (p -> exp .)
    <               reduce using rule 192 (p -> exp .)
    ,               reduce using rule 192 (p -> exp .)
    }               reduce using rule 192 (p -> exp .)
    ]               reduce using rule 192 (p -> exp .)
    ;               reduce using rule 192 (p -> exp .)
    AND             reduce using rule 192 (p -> exp .)
    OR              reduce using rule 192 (p -> exp .)
    ?               reduce using rule 192 (p -> exp .)
    ^               shift and go to state 233


state 106

    (82) valores -> varYVals .
    (168) valoresMat -> varYVals .
    (207) valoresBool -> varYVals .
    (232) tCompareEQ -> varYVals .
    (242) tCompare -> varYVals .

    )               reduce using rule 82 (valores -> varYVals .)
    ;               reduce using rule 82 (valores -> varYVals .)
    ,               reduce using rule 82 (valores -> varYVals .)
    ]               reduce using rule 82 (valores -> varYVals .)
    }               reduce using rule 82 (valores -> varYVals .)
    +               reduce using rule 168 (valoresMat -> varYVals .)
    -               reduce using rule 168 (valoresMat -> varYVals .)
    *               reduce using rule 168 (valoresMat -> varYVals .)
    /               reduce using rule 168 (valoresMat -> varYVals .)
    %               reduce using rule 168 (valoresMat -> varYVals .)
    ^               reduce using rule 168 (valoresMat -> varYVals .)
    OR              reduce using rule 207 (valoresBool -> varYVals .)
    AND             reduce using rule 207 (valoresBool -> varYVals .)
    ?               reduce using rule 207 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 232 (tCompareEQ -> varYVals .)
    DISTINTO        reduce using rule 232 (tCompareEQ -> varYVals .)
    >               reduce using rule 242 (tCompare -> varYVals .)
    <               reduce using rule 242 (tCompare -> varYVals .)


state 107

    (93) valores -> atributos .
    (64) vecVal -> atributos . [ expresion ]
    (68) vecVal -> atributos . [ INT ]
    (165) valoresMat -> atributos .

    )               reduce using rule 93 (valores -> atributos .)
    ;               reduce using rule 93 (valores -> atributos .)
    ,               reduce using rule 93 (valores -> atributos .)
    ]               reduce using rule 93 (valores -> atributos .)
    }               reduce using rule 93 (valores -> atributos .)
    [               shift and go to state 45
    +               reduce using rule 165 (valoresMat -> atributos .)
    -               reduce using rule 165 (valoresMat -> atributos .)
    *               reduce using rule 165 (valoresMat -> atributos .)
    /               reduce using rule 165 (valoresMat -> atributos .)
    %               reduce using rule 165 (valoresMat -> atributos .)
    ^               reduce using rule 165 (valoresMat -> atributos .)


state 108

    (161) varAsig -> ID . . ID = valores
    (99) atributos -> ID . . valoresCampos
    (101) valoresCampos -> . ID
    (102) valoresCampos -> . end
    (103) valoresCampos -> . begin
    (104) end -> . END
    (105) begin -> . BEGIN

    ID              shift and go to state 235
    END             shift and go to state 157
    BEGIN           shift and go to state 155

    begin                          shift and go to state 153
    end                            shift and go to state 154
    valoresCampos                  shift and go to state 234

state 109

    (61) vecVal -> ID [ . expresion ]
    (65) vecVal -> ID [ . INT ]
    (69) expresion -> . eMat
    (70) expresion -> . expBool
    (71) expresion -> . funcReturn
    (72) expresion -> . reg
    (73) expresion -> . FLOAT
    (74) expresion -> . STRING
    (75) expresion -> . BOOL
    (76) expresion -> . varYVals
    (77) expresion -> . varsOps
    (78) expresion -> . vec
    (79) expresion -> . ternario
    (80) expresion -> . atributos
    (81) expresion -> . RES
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (96) reg -> . { campos }
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (58) vec -> . [ elem ]
    (106) ternario -> . ternarioMat
    (107) ternario -> . ternarioBool
    (108) ternario -> . ( ternarioMat )
    (109) ternario -> . ( ternarioBool )
    (110) ternario -> . ternarioVars
    (111) ternario -> . ( ternarioVars )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 237
    FLOAT           shift and go to state 141
    STRING          shift and go to state 137
    BOOL            shift and go to state 142
    RES             shift and go to state 132
    {               shift and go to state 35
    ID              shift and go to state 95
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    [               shift and go to state 22
    (               shift and go to state 81
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    ?               reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    ternario                       shift and go to state 131
    funcBool                       shift and go to state 67
    funcInt                        shift and go to state 69
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 133
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 84
    vec                            shift and go to state 135
    paren                          shift and go to state 93
    reg                            shift and go to state 136
    expBool                        shift and go to state 145
    ternarioBool                   shift and go to state 89
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    expresion                      shift and go to state 236
    funcString                     shift and go to state 96
    funcReturn                     shift and go to state 140
    p                              shift and go to state 101
    varsOps                        shift and go to state 143
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 73
    varYVals                       shift and go to state 144
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 134

state 110

    (6) lAbierta -> IF ( . cosaBooleana ) linea
    (7) lAbierta -> IF ( . cosaBooleana ) COMMENT com linea
    (8) lAbierta -> IF ( . cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> IF ( . cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> IF ( . cosaBooleana ) { g }
    (16) lCerrada -> IF ( . cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> IF ( . cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (43) cosaBooleana -> . expBool
    (44) cosaBooleana -> . valoresBool
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (53) funcBool -> . COLINEALES ( valores , valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (96) reg -> . { campos }
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (254) parenBool -> . ( expBool )
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )

    BOOL            shift and go to state 202
    (               shift and go to state 242
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    )               reduce using rule 210 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 229
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    INT             shift and go to state 244
    FLOAT           shift and go to state 245
    [               shift and go to state 22
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    {               shift and go to state 35
    STRING          shift and go to state 196
    NOT             shift and go to state 104
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82

    and                            shift and go to state 65
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 239
    not                            shift and go to state 71
    menor                          shift and go to state 72
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    vecVal                         shift and go to state 76
    valoresBool                    shift and go to state 240
    eMat                           shift and go to state 241
    p                              shift and go to state 101
    mayor                          shift and go to state 86
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    varsOps                        shift and go to state 246
    exp                            shift and go to state 105
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    cosaBooleana                   shift and go to state 243
    funcString                     shift and go to state 199
    tCompareEQ                     shift and go to state 80
    expBool                        shift and go to state 248
    varYVals                       shift and go to state 247
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 238

state 111

    (32) sentencia -> varAsig ; .

    COMMENT         reduce using rule 32 (sentencia -> varAsig ; .)
    IF              reduce using rule 32 (sentencia -> varAsig ; .)
    DO              reduce using rule 32 (sentencia -> varAsig ; .)
    WHILE           reduce using rule 32 (sentencia -> varAsig ; .)
    FOR             reduce using rule 32 (sentencia -> varAsig ; .)
    RETURN          reduce using rule 32 (sentencia -> varAsig ; .)
    ;               reduce using rule 32 (sentencia -> varAsig ; .)
    MENOSMENOS      reduce using rule 32 (sentencia -> varAsig ; .)
    MASMAS          reduce using rule 32 (sentencia -> varAsig ; .)
    ID              reduce using rule 32 (sentencia -> varAsig ; .)
    PRINT           reduce using rule 32 (sentencia -> varAsig ; .)
    MULTIESCALAR    reduce using rule 32 (sentencia -> varAsig ; .)
    LENGTH          reduce using rule 32 (sentencia -> varAsig ; .)
    CAPITALIZAR     reduce using rule 32 (sentencia -> varAsig ; .)
    COLINEALES      reduce using rule 32 (sentencia -> varAsig ; .)
    [               reduce using rule 32 (sentencia -> varAsig ; .)
    {               reduce using rule 32 (sentencia -> varAsig ; .)
    $end            reduce using rule 32 (sentencia -> varAsig ; .)
    }               reduce using rule 32 (sentencia -> varAsig ; .)
    ELSE            reduce using rule 32 (sentencia -> varAsig ; .)


state 112

    (52) funcString -> CAPITALIZAR ( . valores )
    (82) valores -> . varYVals
    (83) valores -> . varsOps
    (84) valores -> . eMat
    (85) valores -> . expBool
    (86) valores -> . funcReturn
    (87) valores -> . reg
    (88) valores -> . INT
    (89) valores -> . FLOAT
    (90) valores -> . STRING
    (91) valores -> . BOOL
    (92) valores -> . ternario
    (93) valores -> . atributos
    (94) valores -> . vec
    (95) valores -> . RES
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (96) reg -> . { campos }
    (106) ternario -> . ternarioMat
    (107) ternario -> . ternarioBool
    (108) ternario -> . ( ternarioMat )
    (109) ternario -> . ( ternarioBool )
    (110) ternario -> . ternarioVars
    (111) ternario -> . ( ternarioVars )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 97
    FLOAT           shift and go to state 99
    STRING          shift and go to state 77
    BOOL            shift and go to state 102
    RES             shift and go to state 68
    ID              shift and go to state 95
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    {               shift and go to state 35
    (               shift and go to state 81
    [               shift and go to state 22
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    ?               reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    ternario                       shift and go to state 66
    funcBool                       shift and go to state 67
    funcInt                        shift and go to state 69
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 79
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 84
    vec                            shift and go to state 85
    paren                          shift and go to state 93
    reg                            shift and go to state 87
    expBool                        shift and go to state 88
    ternarioBool                   shift and go to state 89
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 96
    funcReturn                     shift and go to state 98
    valores                        shift and go to state 249
    p                              shift and go to state 101
    varsOps                        shift and go to state 103
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 73
    varYVals                       shift and go to state 106
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 107

state 113

    (50) funcInt -> MULTIESCALAR ( . valores , valores param )
    (82) valores -> . varYVals
    (83) valores -> . varsOps
    (84) valores -> . eMat
    (85) valores -> . expBool
    (86) valores -> . funcReturn
    (87) valores -> . reg
    (88) valores -> . INT
    (89) valores -> . FLOAT
    (90) valores -> . STRING
    (91) valores -> . BOOL
    (92) valores -> . ternario
    (93) valores -> . atributos
    (94) valores -> . vec
    (95) valores -> . RES
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (96) reg -> . { campos }
    (106) ternario -> . ternarioMat
    (107) ternario -> . ternarioBool
    (108) ternario -> . ( ternarioMat )
    (109) ternario -> . ( ternarioBool )
    (110) ternario -> . ternarioVars
    (111) ternario -> . ( ternarioVars )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 97
    FLOAT           shift and go to state 99
    STRING          shift and go to state 77
    BOOL            shift and go to state 102
    RES             shift and go to state 68
    ID              shift and go to state 95
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    {               shift and go to state 35
    (               shift and go to state 81
    [               shift and go to state 22
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    ?               reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    ternario                       shift and go to state 66
    funcBool                       shift and go to state 67
    funcInt                        shift and go to state 69
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    vecVal                         shift and go to state 76
    eMat                           shift and go to state 79
    tCompareEQ                     shift and go to state 80
    valoresBool                    shift and go to state 78
    ternarioMat                    shift and go to state 84
    vec                            shift and go to state 85
    paren                          shift and go to state 93
    reg                            shift and go to state 87
    expBool                        shift and go to state 88
    ternarioBool                   shift and go to state 89
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 96
    funcReturn                     shift and go to state 98
    valores                        shift and go to state 250
    p                              shift and go to state 101
    varsOps                        shift and go to state 103
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 73
    varYVals                       shift and go to state 106
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 107

state 114

    (150) varsOps -> MASMAS variable .

    ;               reduce using rule 150 (varsOps -> MASMAS variable .)
    ^               reduce using rule 150 (varsOps -> MASMAS variable .)
    *               reduce using rule 150 (varsOps -> MASMAS variable .)
    /               reduce using rule 150 (varsOps -> MASMAS variable .)
    %               reduce using rule 150 (varsOps -> MASMAS variable .)
    +               reduce using rule 150 (varsOps -> MASMAS variable .)
    -               reduce using rule 150 (varsOps -> MASMAS variable .)
    ,               reduce using rule 150 (varsOps -> MASMAS variable .)
    ]               reduce using rule 150 (varsOps -> MASMAS variable .)
    EQEQ            reduce using rule 150 (varsOps -> MASMAS variable .)
    DISTINTO        reduce using rule 150 (varsOps -> MASMAS variable .)
    >               reduce using rule 150 (varsOps -> MASMAS variable .)
    <               reduce using rule 150 (varsOps -> MASMAS variable .)
    )               reduce using rule 150 (varsOps -> MASMAS variable .)
    AND             reduce using rule 150 (varsOps -> MASMAS variable .)
    OR              reduce using rule 150 (varsOps -> MASMAS variable .)
    ?               reduce using rule 150 (varsOps -> MASMAS variable .)
    :               reduce using rule 150 (varsOps -> MASMAS variable .)
    }               reduce using rule 150 (varsOps -> MASMAS variable .)


state 115

    (26) lCerrada -> loop COMMENT . com lCerrada
    (14) com -> . COMMENT com
    (15) com -> . empty
    (57) empty -> .

    COMMENT         shift and go to state 123
    IF              reduce using rule 57 (empty -> .)
    DO              reduce using rule 57 (empty -> .)
    RETURN          reduce using rule 57 (empty -> .)
    ;               reduce using rule 57 (empty -> .)
    WHILE           reduce using rule 57 (empty -> .)
    FOR             reduce using rule 57 (empty -> .)
    MENOSMENOS      reduce using rule 57 (empty -> .)
    MASMAS          reduce using rule 57 (empty -> .)
    ID              reduce using rule 57 (empty -> .)
    PRINT           reduce using rule 57 (empty -> .)
    MULTIESCALAR    reduce using rule 57 (empty -> .)
    LENGTH          reduce using rule 57 (empty -> .)
    CAPITALIZAR     reduce using rule 57 (empty -> .)
    COLINEALES      reduce using rule 57 (empty -> .)
    [               reduce using rule 57 (empty -> .)
    {               reduce using rule 57 (empty -> .)

    com                            shift and go to state 251
    empty                          shift and go to state 125

state 116

    (25) lCerrada -> loop lCerrada .

    COMMENT         reduce using rule 25 (lCerrada -> loop lCerrada .)
    IF              reduce using rule 25 (lCerrada -> loop lCerrada .)
    DO              reduce using rule 25 (lCerrada -> loop lCerrada .)
    WHILE           reduce using rule 25 (lCerrada -> loop lCerrada .)
    FOR             reduce using rule 25 (lCerrada -> loop lCerrada .)
    RETURN          reduce using rule 25 (lCerrada -> loop lCerrada .)
    ;               reduce using rule 25 (lCerrada -> loop lCerrada .)
    MENOSMENOS      reduce using rule 25 (lCerrada -> loop lCerrada .)
    MASMAS          reduce using rule 25 (lCerrada -> loop lCerrada .)
    ID              reduce using rule 25 (lCerrada -> loop lCerrada .)
    PRINT           reduce using rule 25 (lCerrada -> loop lCerrada .)
    MULTIESCALAR    reduce using rule 25 (lCerrada -> loop lCerrada .)
    LENGTH          reduce using rule 25 (lCerrada -> loop lCerrada .)
    CAPITALIZAR     reduce using rule 25 (lCerrada -> loop lCerrada .)
    COLINEALES      reduce using rule 25 (lCerrada -> loop lCerrada .)
    [               reduce using rule 25 (lCerrada -> loop lCerrada .)
    {               reduce using rule 25 (lCerrada -> loop lCerrada .)
    }               reduce using rule 25 (lCerrada -> loop lCerrada .)
    $end            reduce using rule 25 (lCerrada -> loop lCerrada .)
    ELSE            reduce using rule 25 (lCerrada -> loop lCerrada .)


state 117

    (12) lAbierta -> loop lAbierta .

    COMMENT         reduce using rule 12 (lAbierta -> loop lAbierta .)
    IF              reduce using rule 12 (lAbierta -> loop lAbierta .)
    DO              reduce using rule 12 (lAbierta -> loop lAbierta .)
    WHILE           reduce using rule 12 (lAbierta -> loop lAbierta .)
    FOR             reduce using rule 12 (lAbierta -> loop lAbierta .)
    RETURN          reduce using rule 12 (lAbierta -> loop lAbierta .)
    ;               reduce using rule 12 (lAbierta -> loop lAbierta .)
    MENOSMENOS      reduce using rule 12 (lAbierta -> loop lAbierta .)
    MASMAS          reduce using rule 12 (lAbierta -> loop lAbierta .)
    ID              reduce using rule 12 (lAbierta -> loop lAbierta .)
    PRINT           reduce using rule 12 (lAbierta -> loop lAbierta .)
    MULTIESCALAR    reduce using rule 12 (lAbierta -> loop lAbierta .)
    LENGTH          reduce using rule 12 (lAbierta -> loop lAbierta .)
    CAPITALIZAR     reduce using rule 12 (lAbierta -> loop lAbierta .)
    COLINEALES      reduce using rule 12 (lAbierta -> loop lAbierta .)
    [               reduce using rule 12 (lAbierta -> loop lAbierta .)
    {               reduce using rule 12 (lAbierta -> loop lAbierta .)
    $end            reduce using rule 12 (lAbierta -> loop lAbierta .)
    }               reduce using rule 12 (lAbierta -> loop lAbierta .)


state 118

    (24) lCerrada -> loop { . g }
    (96) reg -> { . campos }
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (97) campos -> . ID : valores , campos
    (98) campos -> . ID : valores
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (57) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (156) varAsig -> . variable MULEQ valores
    (157) varAsig -> . variable DIVEQ valores
    (158) varAsig -> . variable MASEQ valores
    (159) varAsig -> . variable MENOSEQ valores
    (160) varAsig -> . variable = valores
    (161) varAsig -> . ID . ID = valores
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    COMMENT         shift and go to state 10
    ID              shift and go to state 128
    }               reduce using rule 57 (empty -> .)
    IF              shift and go to state 24
    DO              shift and go to state 1
    WHILE           shift and go to state 7
    FOR             shift and go to state 18
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    PRINT           shift and go to state 8
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    [               shift and go to state 22
    {               shift and go to state 35

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    linea                          shift and go to state 37
    vecVal                         shift and go to state 9
    sentencia                      shift and go to state 11
    atributos                      shift and go to state 6
    vec                            shift and go to state 36
    reg                            shift and go to state 13
    empty                          shift and go to state 14
    funcVoid                       shift and go to state 16
    campos                         shift and go to state 119
    func                           shift and go to state 20
    variable                       shift and go to state 21
    varAsig                        shift and go to state 25
    g                              shift and go to state 252
    funcString                     shift and go to state 27
    funcReturn                     shift and go to state 28
    lCerrada                       shift and go to state 30
    lAbierta                       shift and go to state 32
    varsOps                        shift and go to state 15
    loop                           shift and go to state 34

state 119

    (96) reg -> { campos . }

    }               shift and go to state 253


state 120

    (97) campos -> ID . : valores , campos
    (98) campos -> ID . : valores

    :               shift and go to state 254


state 121

    (62) vecVal -> vec [ . expresion ]
    (66) vecVal -> vec [ . INT ]
    (69) expresion -> . eMat
    (70) expresion -> . expBool
    (71) expresion -> . funcReturn
    (72) expresion -> . reg
    (73) expresion -> . FLOAT
    (74) expresion -> . STRING
    (75) expresion -> . BOOL
    (76) expresion -> . varYVals
    (77) expresion -> . varsOps
    (78) expresion -> . vec
    (79) expresion -> . ternario
    (80) expresion -> . atributos
    (81) expresion -> . RES
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (96) reg -> . { campos }
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (58) vec -> . [ elem ]
    (106) ternario -> . ternarioMat
    (107) ternario -> . ternarioBool
    (108) ternario -> . ( ternarioMat )
    (109) ternario -> . ( ternarioBool )
    (110) ternario -> . ternarioVars
    (111) ternario -> . ( ternarioVars )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 256
    FLOAT           shift and go to state 141
    STRING          shift and go to state 137
    BOOL            shift and go to state 142
    RES             shift and go to state 132
    {               shift and go to state 35
    ID              shift and go to state 95
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    [               shift and go to state 22
    (               shift and go to state 81
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    ?               reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    ternario                       shift and go to state 131
    funcBool                       shift and go to state 67
    funcInt                        shift and go to state 69
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 133
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 84
    vec                            shift and go to state 135
    paren                          shift and go to state 93
    reg                            shift and go to state 136
    varsOps                        shift and go to state 143
    exp                            shift and go to state 105
    ternarioBool                   shift and go to state 89
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    expresion                      shift and go to state 255
    funcString                     shift and go to state 96
    funcReturn                     shift and go to state 140
    p                              shift and go to state 101
    expBool                        shift and go to state 145
    ternarioVars                   shift and go to state 73
    varYVals                       shift and go to state 144
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 134

state 122

    (1) g -> linea g .

    $end            reduce using rule 1 (g -> linea g .)
    }               reduce using rule 1 (g -> linea g .)


state 123

    (14) com -> COMMENT . com
    (14) com -> . COMMENT com
    (15) com -> . empty
    (57) empty -> .

    COMMENT         shift and go to state 123
    IF              reduce using rule 57 (empty -> .)
    DO              reduce using rule 57 (empty -> .)
    RETURN          reduce using rule 57 (empty -> .)
    ;               reduce using rule 57 (empty -> .)
    WHILE           reduce using rule 57 (empty -> .)
    FOR             reduce using rule 57 (empty -> .)
    MENOSMENOS      reduce using rule 57 (empty -> .)
    MASMAS          reduce using rule 57 (empty -> .)
    ID              reduce using rule 57 (empty -> .)
    PRINT           reduce using rule 57 (empty -> .)
    MULTIESCALAR    reduce using rule 57 (empty -> .)
    LENGTH          reduce using rule 57 (empty -> .)
    CAPITALIZAR     reduce using rule 57 (empty -> .)
    COLINEALES      reduce using rule 57 (empty -> .)
    [               reduce using rule 57 (empty -> .)
    {               reduce using rule 57 (empty -> .)

    com                            shift and go to state 257
    empty                          shift and go to state 125

state 124

    (29) lCerrada -> DO COMMENT com . lCerrada WHILE ( valores ) ;
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (156) varAsig -> . variable MULEQ valores
    (157) varAsig -> . variable DIVEQ valores
    (158) varAsig -> . variable MASEQ valores
    (159) varAsig -> . variable MENOSEQ valores
    (160) varAsig -> . variable = valores
    (161) varAsig -> . ID . ID = valores
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    IF              shift and go to state 39
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 7
    FOR             shift and go to state 18
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    ID              shift and go to state 23
    PRINT           shift and go to state 8
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    [               shift and go to state 22
    {               shift and go to state 35

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 9
    sentencia                      shift and go to state 11
    atributos                      shift and go to state 6
    vec                            shift and go to state 36
    reg                            shift and go to state 13
    funcVoid                       shift and go to state 16
    func                           shift and go to state 20
    variable                       shift and go to state 21
    varAsig                        shift and go to state 25
    funcString                     shift and go to state 27
    funcReturn                     shift and go to state 28
    lCerrada                       shift and go to state 258
    varsOps                        shift and go to state 15
    loop                           shift and go to state 42

state 125

    (15) com -> empty .

    IF              reduce using rule 15 (com -> empty .)
    DO              reduce using rule 15 (com -> empty .)
    RETURN          reduce using rule 15 (com -> empty .)
    ;               reduce using rule 15 (com -> empty .)
    WHILE           reduce using rule 15 (com -> empty .)
    FOR             reduce using rule 15 (com -> empty .)
    MENOSMENOS      reduce using rule 15 (com -> empty .)
    MASMAS          reduce using rule 15 (com -> empty .)
    ID              reduce using rule 15 (com -> empty .)
    PRINT           reduce using rule 15 (com -> empty .)
    MULTIESCALAR    reduce using rule 15 (com -> empty .)
    LENGTH          reduce using rule 15 (com -> empty .)
    CAPITALIZAR     reduce using rule 15 (com -> empty .)
    COLINEALES      reduce using rule 15 (com -> empty .)
    [               reduce using rule 15 (com -> empty .)
    {               reduce using rule 15 (com -> empty .)


state 126

    (16) lCerrada -> IF ( . cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> IF ( . cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (43) cosaBooleana -> . expBool
    (44) cosaBooleana -> . valoresBool
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (53) funcBool -> . COLINEALES ( valores , valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (96) reg -> . { campos }
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (254) parenBool -> . ( expBool )
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )

    BOOL            shift and go to state 202
    (               shift and go to state 242
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    )               reduce using rule 210 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 229
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    INT             shift and go to state 244
    FLOAT           shift and go to state 245
    [               shift and go to state 22
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    {               shift and go to state 35
    STRING          shift and go to state 196
    NOT             shift and go to state 104
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82

    and                            shift and go to state 65
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 239
    not                            shift and go to state 71
    menor                          shift and go to state 72
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    vecVal                         shift and go to state 76
    valoresBool                    shift and go to state 240
    eMat                           shift and go to state 241
    p                              shift and go to state 101
    mayor                          shift and go to state 86
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    iSing                          shift and go to state 90
    expBool                        shift and go to state 248
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    cosaBooleana                   shift and go to state 259
    funcString                     shift and go to state 199
    tCompareEQ                     shift and go to state 80
    varsOps                        shift and go to state 246
    exp                            shift and go to state 105
    varYVals                       shift and go to state 247
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 238

state 127

    (28) lCerrada -> DO lCerrada WHILE . ( valores ) ;

    (               shift and go to state 260


state 128

    (97) campos -> ID . : valores , campos
    (98) campos -> ID . : valores
    (161) varAsig -> ID . . ID = valores
    (153) variable -> ID .
    (61) vecVal -> ID . [ expresion ]
    (65) vecVal -> ID . [ INT ]
    (99) atributos -> ID . . valoresCampos

    :               shift and go to state 254
    .               shift and go to state 108
    MASMAS          reduce using rule 153 (variable -> ID .)
    MENOSMENOS      reduce using rule 153 (variable -> ID .)
    MULEQ           reduce using rule 153 (variable -> ID .)
    DIVEQ           reduce using rule 153 (variable -> ID .)
    MASEQ           reduce using rule 153 (variable -> ID .)
    MENOSEQ         reduce using rule 153 (variable -> ID .)
    =               reduce using rule 153 (variable -> ID .)
    [               shift and go to state 109


state 129

    (27) lCerrada -> DO { g . } WHILE ( valores ) ;

    }               shift and go to state 261


state 130

    (53) funcBool -> COLINEALES ( valores . , valores )

    ,               shift and go to state 262


state 131

    (79) expresion -> ternario .

    ]               reduce using rule 79 (expresion -> ternario .)


state 132

    (81) expresion -> RES .

    ]               reduce using rule 81 (expresion -> RES .)


state 133

    (69) expresion -> eMat .
    (171) eMat -> eMat . + p
    (173) eMat -> eMat . + valoresMat
    (176) eMat -> eMat . - p
    (178) eMat -> eMat . - valoresMat
    (237) tCompareEQ -> eMat .
    (240) tCompare -> eMat .

    ]               reduce using rule 69 (expresion -> eMat .)
    +               shift and go to state 184
    -               shift and go to state 185
    EQEQ            reduce using rule 237 (tCompareEQ -> eMat .)
    DISTINTO        reduce using rule 237 (tCompareEQ -> eMat .)
    >               reduce using rule 240 (tCompare -> eMat .)
    <               reduce using rule 240 (tCompare -> eMat .)


state 134

    (80) expresion -> atributos .
    (165) valoresMat -> atributos .
    (64) vecVal -> atributos . [ expresion ]
    (68) vecVal -> atributos . [ INT ]

    ]               reduce using rule 80 (expresion -> atributos .)
    +               reduce using rule 165 (valoresMat -> atributos .)
    -               reduce using rule 165 (valoresMat -> atributos .)
    *               reduce using rule 165 (valoresMat -> atributos .)
    /               reduce using rule 165 (valoresMat -> atributos .)
    %               reduce using rule 165 (valoresMat -> atributos .)
    ^               reduce using rule 165 (valoresMat -> atributos .)
    [               shift and go to state 45


state 135

    (78) expresion -> vec .
    (62) vecVal -> vec . [ expresion ]
    (66) vecVal -> vec . [ INT ]

    ]               reduce using rule 78 (expresion -> vec .)
    [               shift and go to state 121


state 136

    (72) expresion -> reg .
    (100) atributos -> reg . . valoresCampos

    ]               reduce using rule 72 (expresion -> reg .)
    .               shift and go to state 51


state 137

    (74) expresion -> STRING .
    (167) valoresMat -> STRING .

    ]               reduce using rule 74 (expresion -> STRING .)
    +               reduce using rule 167 (valoresMat -> STRING .)
    -               reduce using rule 167 (valoresMat -> STRING .)
    *               reduce using rule 167 (valoresMat -> STRING .)
    /               reduce using rule 167 (valoresMat -> STRING .)
    %               reduce using rule 167 (valoresMat -> STRING .)
    ^               reduce using rule 167 (valoresMat -> STRING .)


state 138

    (64) vecVal -> atributos [ expresion . ]

    ]               shift and go to state 263


state 139

    (68) vecVal -> atributos [ INT . ]
    (162) valoresMat -> INT .
    (234) tCompareEQ -> INT .
    (243) tCompare -> INT .

    ]               shift and go to state 264
    +               reduce using rule 162 (valoresMat -> INT .)
    -               reduce using rule 162 (valoresMat -> INT .)
    *               reduce using rule 162 (valoresMat -> INT .)
    /               reduce using rule 162 (valoresMat -> INT .)
    %               reduce using rule 162 (valoresMat -> INT .)
    ^               reduce using rule 162 (valoresMat -> INT .)
    EQEQ            reduce using rule 234 (tCompareEQ -> INT .)
    DISTINTO        reduce using rule 234 (tCompareEQ -> INT .)
    >               reduce using rule 243 (tCompare -> INT .)
    <               reduce using rule 243 (tCompare -> INT .)


state 140

    (71) expresion -> funcReturn .

    ]               reduce using rule 71 (expresion -> funcReturn .)


state 141

    (73) expresion -> FLOAT .
    (163) valoresMat -> FLOAT .
    (235) tCompareEQ -> FLOAT .
    (245) tCompare -> FLOAT .

    ]               reduce using rule 73 (expresion -> FLOAT .)
    +               reduce using rule 163 (valoresMat -> FLOAT .)
    -               reduce using rule 163 (valoresMat -> FLOAT .)
    *               reduce using rule 163 (valoresMat -> FLOAT .)
    /               reduce using rule 163 (valoresMat -> FLOAT .)
    %               reduce using rule 163 (valoresMat -> FLOAT .)
    ^               reduce using rule 163 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 235 (tCompareEQ -> FLOAT .)
    DISTINTO        reduce using rule 235 (tCompareEQ -> FLOAT .)
    >               reduce using rule 245 (tCompare -> FLOAT .)
    <               reduce using rule 245 (tCompare -> FLOAT .)


state 142

    (75) expresion -> BOOL .
    (205) valoresBool -> BOOL .
    (230) tCompareEQ -> BOOL .

    ]               reduce using rule 75 (expresion -> BOOL .)
    OR              reduce using rule 205 (valoresBool -> BOOL .)
    AND             reduce using rule 205 (valoresBool -> BOOL .)
    ?               reduce using rule 205 (valoresBool -> BOOL .)
    EQEQ            reduce using rule 230 (tCompareEQ -> BOOL .)
    DISTINTO        reduce using rule 230 (tCompareEQ -> BOOL .)


state 143

    (77) expresion -> varsOps .
    (169) valoresMat -> varsOps .
    (208) valoresBool -> varsOps .
    (233) tCompareEQ -> varsOps .
    (241) tCompare -> varsOps .

    ]               reduce using rule 77 (expresion -> varsOps .)
    +               reduce using rule 169 (valoresMat -> varsOps .)
    -               reduce using rule 169 (valoresMat -> varsOps .)
    *               reduce using rule 169 (valoresMat -> varsOps .)
    /               reduce using rule 169 (valoresMat -> varsOps .)
    %               reduce using rule 169 (valoresMat -> varsOps .)
    ^               reduce using rule 169 (valoresMat -> varsOps .)
    OR              reduce using rule 208 (valoresBool -> varsOps .)
    AND             reduce using rule 208 (valoresBool -> varsOps .)
    ?               reduce using rule 208 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 233 (tCompareEQ -> varsOps .)
    DISTINTO        reduce using rule 233 (tCompareEQ -> varsOps .)
    >               reduce using rule 241 (tCompare -> varsOps .)
    <               reduce using rule 241 (tCompare -> varsOps .)


state 144

    (76) expresion -> varYVals .
    (168) valoresMat -> varYVals .
    (207) valoresBool -> varYVals .
    (232) tCompareEQ -> varYVals .
    (242) tCompare -> varYVals .

    ]               reduce using rule 76 (expresion -> varYVals .)
    +               reduce using rule 168 (valoresMat -> varYVals .)
    -               reduce using rule 168 (valoresMat -> varYVals .)
    *               reduce using rule 168 (valoresMat -> varYVals .)
    /               reduce using rule 168 (valoresMat -> varYVals .)
    %               reduce using rule 168 (valoresMat -> varYVals .)
    ^               reduce using rule 168 (valoresMat -> varYVals .)
    OR              reduce using rule 207 (valoresBool -> varYVals .)
    AND             reduce using rule 207 (valoresBool -> varYVals .)
    ?               reduce using rule 207 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 232 (tCompareEQ -> varYVals .)
    DISTINTO        reduce using rule 232 (tCompareEQ -> varYVals .)
    >               reduce using rule 242 (tCompare -> varYVals .)
    <               reduce using rule 242 (tCompare -> varYVals .)


state 145

    (70) expresion -> expBool .
    (211) expBool -> expBool . OR and
    (213) expBool -> expBool . OR valoresBool
    (131) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (140) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (117) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars

    ]               reduce using rule 70 (expresion -> expBool .)
    OR              shift and go to state 217
    ?               shift and go to state 218


state 146

    (35) loop -> WHILE ( valores . )

    )               shift and go to state 265


state 147

    (54) funcVoid -> PRINT ( valores . )

    )               shift and go to state 266


state 148

    (147) varYVals -> vecVal .
    (148) varYVals -> vecVal . . varYVals
    (63) vecVal -> vecVal . [ expresion ]
    (67) vecVal -> vecVal . [ INT ]

    MASMAS          reduce using rule 147 (varYVals -> vecVal .)
    MENOSMENOS      reduce using rule 147 (varYVals -> vecVal .)
    MULEQ           reduce using rule 147 (varYVals -> vecVal .)
    DIVEQ           reduce using rule 147 (varYVals -> vecVal .)
    MASEQ           reduce using rule 147 (varYVals -> vecVal .)
    MENOSEQ         reduce using rule 147 (varYVals -> vecVal .)
    =               reduce using rule 147 (varYVals -> vecVal .)
    ;               reduce using rule 147 (varYVals -> vecVal .)
    ,               reduce using rule 147 (varYVals -> vecVal .)
    ]               reduce using rule 147 (varYVals -> vecVal .)
    +               reduce using rule 147 (varYVals -> vecVal .)
    -               reduce using rule 147 (varYVals -> vecVal .)
    *               reduce using rule 147 (varYVals -> vecVal .)
    /               reduce using rule 147 (varYVals -> vecVal .)
    %               reduce using rule 147 (varYVals -> vecVal .)
    ^               reduce using rule 147 (varYVals -> vecVal .)
    OR              reduce using rule 147 (varYVals -> vecVal .)
    AND             reduce using rule 147 (varYVals -> vecVal .)
    ?               reduce using rule 147 (varYVals -> vecVal .)
    EQEQ            reduce using rule 147 (varYVals -> vecVal .)
    DISTINTO        reduce using rule 147 (varYVals -> vecVal .)
    >               reduce using rule 147 (varYVals -> vecVal .)
    <               reduce using rule 147 (varYVals -> vecVal .)
    )               reduce using rule 147 (varYVals -> vecVal .)
    :               reduce using rule 147 (varYVals -> vecVal .)
    }               reduce using rule 147 (varYVals -> vecVal .)
    .               shift and go to state 267
    [               shift and go to state 49


state 149

    (155) variable -> vecVal . varYVals .

    MASMAS          reduce using rule 155 (variable -> vecVal . varYVals .)
    MENOSMENOS      reduce using rule 155 (variable -> vecVal . varYVals .)
    MULEQ           reduce using rule 155 (variable -> vecVal . varYVals .)
    DIVEQ           reduce using rule 155 (variable -> vecVal . varYVals .)
    MASEQ           reduce using rule 155 (variable -> vecVal . varYVals .)
    MENOSEQ         reduce using rule 155 (variable -> vecVal . varYVals .)
    =               reduce using rule 155 (variable -> vecVal . varYVals .)
    ;               reduce using rule 155 (variable -> vecVal . varYVals .)
    ,               reduce using rule 155 (variable -> vecVal . varYVals .)
    ]               reduce using rule 155 (variable -> vecVal . varYVals .)
    +               reduce using rule 155 (variable -> vecVal . varYVals .)
    -               reduce using rule 155 (variable -> vecVal . varYVals .)
    *               reduce using rule 155 (variable -> vecVal . varYVals .)
    /               reduce using rule 155 (variable -> vecVal . varYVals .)
    %               reduce using rule 155 (variable -> vecVal . varYVals .)
    ^               reduce using rule 155 (variable -> vecVal . varYVals .)
    OR              reduce using rule 155 (variable -> vecVal . varYVals .)
    AND             reduce using rule 155 (variable -> vecVal . varYVals .)
    ?               reduce using rule 155 (variable -> vecVal . varYVals .)
    EQEQ            reduce using rule 155 (variable -> vecVal . varYVals .)
    DISTINTO        reduce using rule 155 (variable -> vecVal . varYVals .)
    >               reduce using rule 155 (variable -> vecVal . varYVals .)
    <               reduce using rule 155 (variable -> vecVal . varYVals .)
    )               reduce using rule 155 (variable -> vecVal . varYVals .)
    :               reduce using rule 155 (variable -> vecVal . varYVals .)
    }               reduce using rule 155 (variable -> vecVal . varYVals .)


state 150

    (146) varYVals -> ID .
    (61) vecVal -> ID . [ expresion ]
    (65) vecVal -> ID . [ INT ]
    (99) atributos -> ID . . valoresCampos

    MASMAS          reduce using rule 146 (varYVals -> ID .)
    MENOSMENOS      reduce using rule 146 (varYVals -> ID .)
    MULEQ           reduce using rule 146 (varYVals -> ID .)
    DIVEQ           reduce using rule 146 (varYVals -> ID .)
    MASEQ           reduce using rule 146 (varYVals -> ID .)
    MENOSEQ         reduce using rule 146 (varYVals -> ID .)
    =               reduce using rule 146 (varYVals -> ID .)
    ;               reduce using rule 146 (varYVals -> ID .)
    ,               reduce using rule 146 (varYVals -> ID .)
    ]               reduce using rule 146 (varYVals -> ID .)
    +               reduce using rule 146 (varYVals -> ID .)
    -               reduce using rule 146 (varYVals -> ID .)
    *               reduce using rule 146 (varYVals -> ID .)
    /               reduce using rule 146 (varYVals -> ID .)
    %               reduce using rule 146 (varYVals -> ID .)
    ^               reduce using rule 146 (varYVals -> ID .)
    OR              reduce using rule 146 (varYVals -> ID .)
    AND             reduce using rule 146 (varYVals -> ID .)
    ?               reduce using rule 146 (varYVals -> ID .)
    EQEQ            reduce using rule 146 (varYVals -> ID .)
    DISTINTO        reduce using rule 146 (varYVals -> ID .)
    >               reduce using rule 146 (varYVals -> ID .)
    <               reduce using rule 146 (varYVals -> ID .)
    )               reduce using rule 146 (varYVals -> ID .)
    :               reduce using rule 146 (varYVals -> ID .)
    }               reduce using rule 146 (varYVals -> ID .)
    [               shift and go to state 109
    .               shift and go to state 159


state 151

    (63) vecVal -> vecVal [ expresion . ]

    ]               shift and go to state 268


state 152

    (67) vecVal -> vecVal [ INT . ]
    (162) valoresMat -> INT .
    (234) tCompareEQ -> INT .
    (243) tCompare -> INT .

    ]               shift and go to state 269
    +               reduce using rule 162 (valoresMat -> INT .)
    -               reduce using rule 162 (valoresMat -> INT .)
    *               reduce using rule 162 (valoresMat -> INT .)
    /               reduce using rule 162 (valoresMat -> INT .)
    %               reduce using rule 162 (valoresMat -> INT .)
    ^               reduce using rule 162 (valoresMat -> INT .)
    EQEQ            reduce using rule 234 (tCompareEQ -> INT .)
    DISTINTO        reduce using rule 234 (tCompareEQ -> INT .)
    >               reduce using rule 243 (tCompare -> INT .)
    <               reduce using rule 243 (tCompare -> INT .)


state 153

    (103) valoresCampos -> begin .

    [               reduce using rule 103 (valoresCampos -> begin .)
    ,               reduce using rule 103 (valoresCampos -> begin .)
    ]               reduce using rule 103 (valoresCampos -> begin .)
    +               reduce using rule 103 (valoresCampos -> begin .)
    -               reduce using rule 103 (valoresCampos -> begin .)
    *               reduce using rule 103 (valoresCampos -> begin .)
    /               reduce using rule 103 (valoresCampos -> begin .)
    %               reduce using rule 103 (valoresCampos -> begin .)
    ^               reduce using rule 103 (valoresCampos -> begin .)
    )               reduce using rule 103 (valoresCampos -> begin .)
    ;               reduce using rule 103 (valoresCampos -> begin .)
    EQEQ            reduce using rule 103 (valoresCampos -> begin .)
    DISTINTO        reduce using rule 103 (valoresCampos -> begin .)
    >               reduce using rule 103 (valoresCampos -> begin .)
    <               reduce using rule 103 (valoresCampos -> begin .)
    AND             reduce using rule 103 (valoresCampos -> begin .)
    OR              reduce using rule 103 (valoresCampos -> begin .)
    ?               reduce using rule 103 (valoresCampos -> begin .)
    :               reduce using rule 103 (valoresCampos -> begin .)
    }               reduce using rule 103 (valoresCampos -> begin .)


state 154

    (102) valoresCampos -> end .

    [               reduce using rule 102 (valoresCampos -> end .)
    ,               reduce using rule 102 (valoresCampos -> end .)
    ]               reduce using rule 102 (valoresCampos -> end .)
    +               reduce using rule 102 (valoresCampos -> end .)
    -               reduce using rule 102 (valoresCampos -> end .)
    *               reduce using rule 102 (valoresCampos -> end .)
    /               reduce using rule 102 (valoresCampos -> end .)
    %               reduce using rule 102 (valoresCampos -> end .)
    ^               reduce using rule 102 (valoresCampos -> end .)
    )               reduce using rule 102 (valoresCampos -> end .)
    ;               reduce using rule 102 (valoresCampos -> end .)
    EQEQ            reduce using rule 102 (valoresCampos -> end .)
    DISTINTO        reduce using rule 102 (valoresCampos -> end .)
    >               reduce using rule 102 (valoresCampos -> end .)
    <               reduce using rule 102 (valoresCampos -> end .)
    AND             reduce using rule 102 (valoresCampos -> end .)
    OR              reduce using rule 102 (valoresCampos -> end .)
    ?               reduce using rule 102 (valoresCampos -> end .)
    :               reduce using rule 102 (valoresCampos -> end .)
    }               reduce using rule 102 (valoresCampos -> end .)


state 155

    (105) begin -> BEGIN .

    [               reduce using rule 105 (begin -> BEGIN .)
    ,               reduce using rule 105 (begin -> BEGIN .)
    ]               reduce using rule 105 (begin -> BEGIN .)
    +               reduce using rule 105 (begin -> BEGIN .)
    -               reduce using rule 105 (begin -> BEGIN .)
    *               reduce using rule 105 (begin -> BEGIN .)
    /               reduce using rule 105 (begin -> BEGIN .)
    %               reduce using rule 105 (begin -> BEGIN .)
    ^               reduce using rule 105 (begin -> BEGIN .)
    )               reduce using rule 105 (begin -> BEGIN .)
    ;               reduce using rule 105 (begin -> BEGIN .)
    EQEQ            reduce using rule 105 (begin -> BEGIN .)
    DISTINTO        reduce using rule 105 (begin -> BEGIN .)
    >               reduce using rule 105 (begin -> BEGIN .)
    <               reduce using rule 105 (begin -> BEGIN .)
    AND             reduce using rule 105 (begin -> BEGIN .)
    OR              reduce using rule 105 (begin -> BEGIN .)
    ?               reduce using rule 105 (begin -> BEGIN .)
    :               reduce using rule 105 (begin -> BEGIN .)
    }               reduce using rule 105 (begin -> BEGIN .)


state 156

    (100) atributos -> reg . valoresCampos .

    [               reduce using rule 100 (atributos -> reg . valoresCampos .)
    )               reduce using rule 100 (atributos -> reg . valoresCampos .)
    +               reduce using rule 100 (atributos -> reg . valoresCampos .)
    -               reduce using rule 100 (atributos -> reg . valoresCampos .)
    *               reduce using rule 100 (atributos -> reg . valoresCampos .)
    /               reduce using rule 100 (atributos -> reg . valoresCampos .)
    %               reduce using rule 100 (atributos -> reg . valoresCampos .)
    ^               reduce using rule 100 (atributos -> reg . valoresCampos .)
    ,               reduce using rule 100 (atributos -> reg . valoresCampos .)
    ]               reduce using rule 100 (atributos -> reg . valoresCampos .)
    EQEQ            reduce using rule 100 (atributos -> reg . valoresCampos .)
    DISTINTO        reduce using rule 100 (atributos -> reg . valoresCampos .)
    >               reduce using rule 100 (atributos -> reg . valoresCampos .)
    <               reduce using rule 100 (atributos -> reg . valoresCampos .)
    ;               reduce using rule 100 (atributos -> reg . valoresCampos .)
    AND             reduce using rule 100 (atributos -> reg . valoresCampos .)
    OR              reduce using rule 100 (atributos -> reg . valoresCampos .)
    ?               reduce using rule 100 (atributos -> reg . valoresCampos .)
    :               reduce using rule 100 (atributos -> reg . valoresCampos .)
    }               reduce using rule 100 (atributos -> reg . valoresCampos .)


state 157

    (104) end -> END .

    [               reduce using rule 104 (end -> END .)
    ,               reduce using rule 104 (end -> END .)
    ]               reduce using rule 104 (end -> END .)
    +               reduce using rule 104 (end -> END .)
    -               reduce using rule 104 (end -> END .)
    *               reduce using rule 104 (end -> END .)
    /               reduce using rule 104 (end -> END .)
    %               reduce using rule 104 (end -> END .)
    ^               reduce using rule 104 (end -> END .)
    )               reduce using rule 104 (end -> END .)
    ;               reduce using rule 104 (end -> END .)
    EQEQ            reduce using rule 104 (end -> END .)
    DISTINTO        reduce using rule 104 (end -> END .)
    >               reduce using rule 104 (end -> END .)
    <               reduce using rule 104 (end -> END .)
    AND             reduce using rule 104 (end -> END .)
    OR              reduce using rule 104 (end -> END .)
    ?               reduce using rule 104 (end -> END .)
    :               reduce using rule 104 (end -> END .)
    }               reduce using rule 104 (end -> END .)


state 158

    (101) valoresCampos -> ID .

    [               reduce using rule 101 (valoresCampos -> ID .)
    ,               reduce using rule 101 (valoresCampos -> ID .)
    ]               reduce using rule 101 (valoresCampos -> ID .)
    +               reduce using rule 101 (valoresCampos -> ID .)
    -               reduce using rule 101 (valoresCampos -> ID .)
    *               reduce using rule 101 (valoresCampos -> ID .)
    /               reduce using rule 101 (valoresCampos -> ID .)
    %               reduce using rule 101 (valoresCampos -> ID .)
    ^               reduce using rule 101 (valoresCampos -> ID .)
    )               reduce using rule 101 (valoresCampos -> ID .)
    ;               reduce using rule 101 (valoresCampos -> ID .)
    EQEQ            reduce using rule 101 (valoresCampos -> ID .)
    DISTINTO        reduce using rule 101 (valoresCampos -> ID .)
    >               reduce using rule 101 (valoresCampos -> ID .)
    <               reduce using rule 101 (valoresCampos -> ID .)
    AND             reduce using rule 101 (valoresCampos -> ID .)
    OR              reduce using rule 101 (valoresCampos -> ID .)
    ?               reduce using rule 101 (valoresCampos -> ID .)
    :               reduce using rule 101 (valoresCampos -> ID .)
    }               reduce using rule 101 (valoresCampos -> ID .)


state 159

    (99) atributos -> ID . . valoresCampos
    (101) valoresCampos -> . ID
    (102) valoresCampos -> . end
    (103) valoresCampos -> . begin
    (104) end -> . END
    (105) begin -> . BEGIN

    ID              shift and go to state 158
    END             shift and go to state 157
    BEGIN           shift and go to state 155

    begin                          shift and go to state 153
    end                            shift and go to state 154
    valoresCampos                  shift and go to state 234

state 160

    (36) loop -> FOR ( primParam . ; valores ; tercerParam )

    ;               shift and go to state 270


state 161

    (156) varAsig -> variable . MULEQ valores
    (157) varAsig -> variable . DIVEQ valores
    (158) varAsig -> variable . MASEQ valores
    (159) varAsig -> variable . MENOSEQ valores
    (160) varAsig -> variable . = valores

    MULEQ           shift and go to state 62
    DIVEQ           shift and go to state 64
    MASEQ           shift and go to state 60
    MENOSEQ         shift and go to state 58
    =               shift and go to state 63


state 162

    (37) primParam -> varAsig .

    ;               reduce using rule 37 (primParam -> varAsig .)


state 163

    (38) primParam -> empty .

    ;               reduce using rule 38 (primParam -> empty .)


state 164

    (51) funcInt -> LENGTH ( valores . )

    )               shift and go to state 271


state 165

    (159) varAsig -> variable MENOSEQ valores .

    )               reduce using rule 159 (varAsig -> variable MENOSEQ valores .)
    ;               reduce using rule 159 (varAsig -> variable MENOSEQ valores .)


state 166

    (158) varAsig -> variable MASEQ valores .

    )               reduce using rule 158 (varAsig -> variable MASEQ valores .)
    ;               reduce using rule 158 (varAsig -> variable MASEQ valores .)


state 167

    (156) varAsig -> variable MULEQ valores .

    )               reduce using rule 156 (varAsig -> variable MULEQ valores .)
    ;               reduce using rule 156 (varAsig -> variable MULEQ valores .)


state 168

    (160) varAsig -> variable = valores .

    )               reduce using rule 160 (varAsig -> variable = valores .)
    ;               reduce using rule 160 (varAsig -> variable = valores .)


state 169

    (157) varAsig -> variable DIVEQ valores .

    )               reduce using rule 157 (varAsig -> variable DIVEQ valores .)
    ;               reduce using rule 157 (varAsig -> variable DIVEQ valores .)


state 170

    (216) and -> and AND . eq
    (218) and -> and AND . valoresBool
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (53) funcBool -> . COLINEALES ( valores , valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (254) parenBool -> . ( expBool )
    (96) reg -> . { campos }
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )

    BOOL            shift and go to state 202
    (               shift and go to state 242
    AND             reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    ?               reduce using rule 210 (valoresBool -> .)
    ,               reduce using rule 210 (valoresBool -> .)
    ]               reduce using rule 210 (valoresBool -> .)
    )               reduce using rule 210 (valoresBool -> .)
    ;               reduce using rule 210 (valoresBool -> .)
    :               reduce using rule 210 (valoresBool -> .)
    }               reduce using rule 210 (valoresBool -> .)
    INT             shift and go to state 244
    FLOAT           shift and go to state 245
    COLINEALES      shift and go to state 4
    ID              shift and go to state 229
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    STRING          shift and go to state 196
    NOT             shift and go to state 104
    [               shift and go to state 22
    CAPITALIZAR     shift and go to state 29
    {               shift and go to state 35
    -               shift and go to state 83
    +               shift and go to state 82

    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 239
    variable                       shift and go to state 94
    menor                          shift and go to state 72
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 272
    mayor                          shift and go to state 86
    valoresBool                    shift and go to state 273
    eMat                           shift and go to state 241
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    not                            shift and go to state 71
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 246
    exp                            shift and go to state 105
    varYVals                       shift and go to state 247
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 238

state 171

    (59) elem -> valores , . elem
    (59) elem -> . valores , elem
    (60) elem -> . valores
    (82) valores -> . varYVals
    (83) valores -> . varsOps
    (84) valores -> . eMat
    (85) valores -> . expBool
    (86) valores -> . funcReturn
    (87) valores -> . reg
    (88) valores -> . INT
    (89) valores -> . FLOAT
    (90) valores -> . STRING
    (91) valores -> . BOOL
    (92) valores -> . ternario
    (93) valores -> . atributos
    (94) valores -> . vec
    (95) valores -> . RES
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (96) reg -> . { campos }
    (106) ternario -> . ternarioMat
    (107) ternario -> . ternarioBool
    (108) ternario -> . ( ternarioMat )
    (109) ternario -> . ( ternarioBool )
    (110) ternario -> . ternarioVars
    (111) ternario -> . ( ternarioVars )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 97
    FLOAT           shift and go to state 99
    STRING          shift and go to state 77
    BOOL            shift and go to state 102
    RES             shift and go to state 68
    ID              shift and go to state 95
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    {               shift and go to state 35
    (               shift and go to state 81
    [               shift and go to state 22
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    ?               reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    ternario                       shift and go to state 66
    funcBool                       shift and go to state 67
    funcInt                        shift and go to state 69
    elem                           shift and go to state 274
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 79
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 84
    vec                            shift and go to state 85
    paren                          shift and go to state 93
    reg                            shift and go to state 87
    expBool                        shift and go to state 88
    ternarioBool                   shift and go to state 89
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 96
    funcReturn                     shift and go to state 98
    valores                        shift and go to state 70
    p                              shift and go to state 101
    varsOps                        shift and go to state 103
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 73
    varYVals                       shift and go to state 106
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 107

state 172

    (185) p -> valoresMat % . exp
    (191) p -> valoresMat % . valoresMat
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (58) vec -> . [ elem ]

    INT             shift and go to state 212
    FLOAT           shift and go to state 211
    STRING          shift and go to state 196
    (               shift and go to state 276
    -               shift and go to state 83
    +               shift and go to state 82
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    {               shift and go to state 35
    [               shift and go to state 22

    valoresMat                     shift and go to state 275
    funcString                     shift and go to state 199
    funcInt                        shift and go to state 207
    vecVal                         shift and go to state 76
    vec                            shift and go to state 36
    iSing                          shift and go to state 90
    exp                            shift and go to state 277
    variable                       shift and go to state 94
    paren                          shift and go to state 93
    varYVals                       shift and go to state 214
    reg                            shift and go to state 13
    atributos                      shift and go to state 206
    varsOps                        shift and go to state 213

state 173

    (172) eMat -> valoresMat + . p
    (174) eMat -> valoresMat + . valoresMat
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (58) vec -> . [ elem ]

    INT             shift and go to state 212
    FLOAT           shift and go to state 211
    STRING          shift and go to state 196
    (               shift and go to state 276
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    -               shift and go to state 83
    +               shift and go to state 82
    {               shift and go to state 35
    [               shift and go to state 22

    funcInt                        shift and go to state 207
    valoresMat                     shift and go to state 278
    vecVal                         shift and go to state 76
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    iSing                          shift and go to state 90
    exp                            shift and go to state 105
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 279
    varsOps                        shift and go to state 213
    varYVals                       shift and go to state 214
    atributos                      shift and go to state 206

state 174

    (183) p -> valoresMat * . exp
    (189) p -> valoresMat * . valoresMat
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (58) vec -> . [ elem ]

    INT             shift and go to state 212
    FLOAT           shift and go to state 211
    STRING          shift and go to state 196
    (               shift and go to state 276
    -               shift and go to state 83
    +               shift and go to state 82
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    {               shift and go to state 35
    [               shift and go to state 22

    valoresMat                     shift and go to state 280
    funcString                     shift and go to state 199
    funcInt                        shift and go to state 207
    vecVal                         shift and go to state 76
    vec                            shift and go to state 36
    iSing                          shift and go to state 90
    exp                            shift and go to state 281
    variable                       shift and go to state 94
    paren                          shift and go to state 93
    varYVals                       shift and go to state 214
    reg                            shift and go to state 13
    atributos                      shift and go to state 206
    varsOps                        shift and go to state 213

state 175

    (177) eMat -> valoresMat - . p
    (179) eMat -> valoresMat - . valoresMat
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (58) vec -> . [ elem ]

    INT             shift and go to state 212
    FLOAT           shift and go to state 211
    STRING          shift and go to state 196
    (               shift and go to state 276
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    -               shift and go to state 83
    +               shift and go to state 82
    {               shift and go to state 35
    [               shift and go to state 22

    funcInt                        shift and go to state 207
    valoresMat                     shift and go to state 282
    vecVal                         shift and go to state 76
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    iSing                          shift and go to state 90
    exp                            shift and go to state 105
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 283
    varsOps                        shift and go to state 213
    varYVals                       shift and go to state 214
    atributos                      shift and go to state 206

state 176

    (184) p -> valoresMat / . exp
    (190) p -> valoresMat / . valoresMat
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (58) vec -> . [ elem ]

    INT             shift and go to state 212
    FLOAT           shift and go to state 211
    STRING          shift and go to state 196
    (               shift and go to state 276
    -               shift and go to state 83
    +               shift and go to state 82
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    {               shift and go to state 35
    [               shift and go to state 22

    valoresMat                     shift and go to state 284
    funcString                     shift and go to state 199
    funcInt                        shift and go to state 207
    vecVal                         shift and go to state 76
    vec                            shift and go to state 36
    iSing                          shift and go to state 90
    exp                            shift and go to state 285
    variable                       shift and go to state 94
    paren                          shift and go to state 93
    varYVals                       shift and go to state 214
    reg                            shift and go to state 13
    atributos                      shift and go to state 206
    varsOps                        shift and go to state 213

state 177

    (194) exp -> valoresMat ^ . iSing
    (196) exp -> valoresMat ^ . valoresMat
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (58) vec -> . [ elem ]

    -               shift and go to state 83
    +               shift and go to state 82
    INT             shift and go to state 212
    FLOAT           shift and go to state 211
    STRING          shift and go to state 196
    (               shift and go to state 276
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    {               shift and go to state 35
    [               shift and go to state 22

    funcString                     shift and go to state 199
    funcInt                        shift and go to state 207
    vecVal                         shift and go to state 76
    vec                            shift and go to state 36
    iSing                          shift and go to state 287
    valoresMat                     shift and go to state 286
    variable                       shift and go to state 94
    paren                          shift and go to state 93
    varYVals                       shift and go to state 214
    reg                            shift and go to state 13
    atributos                      shift and go to state 206
    varsOps                        shift and go to state 213

state 178

    (221) eq -> eq EQEQ . mayor
    (225) eq -> eq EQEQ . tCompareEQ
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (53) funcBool -> . COLINEALES ( valores , valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (254) parenBool -> . ( expBool )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (96) reg -> . { campos }
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )

    BOOL            shift and go to state 293
    INT             shift and go to state 244
    FLOAT           shift and go to state 245
    (               shift and go to state 291
    COLINEALES      shift and go to state 4
    ID              shift and go to state 229
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    NOT             shift and go to state 104
    STRING          shift and go to state 196
    [               shift and go to state 22
    CAPITALIZAR     shift and go to state 29
    {               shift and go to state 35
    -               shift and go to state 83
    +               shift and go to state 82

    funcBool                       shift and go to state 288
    funcInt                        shift and go to state 239
    not                            shift and go to state 71
    menor                          shift and go to state 72
    valoresMat                     shift and go to state 74
    vecVal                         shift and go to state 76
    eMat                           shift and go to state 290
    tCompareEQ                     shift and go to state 292
    mayor                          shift and go to state 289
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 294
    exp                            shift and go to state 105
    varYVals                       shift and go to state 295
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 238

state 179

    (222) eq -> eq DISTINTO . mayor
    (226) eq -> eq DISTINTO . tCompareEQ
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (53) funcBool -> . COLINEALES ( valores , valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (254) parenBool -> . ( expBool )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (96) reg -> . { campos }
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )

    BOOL            shift and go to state 293
    INT             shift and go to state 244
    FLOAT           shift and go to state 245
    (               shift and go to state 291
    COLINEALES      shift and go to state 4
    ID              shift and go to state 229
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    NOT             shift and go to state 104
    STRING          shift and go to state 196
    [               shift and go to state 22
    CAPITALIZAR     shift and go to state 29
    {               shift and go to state 35
    -               shift and go to state 83
    +               shift and go to state 82

    funcBool                       shift and go to state 288
    funcInt                        shift and go to state 239
    not                            shift and go to state 71
    menor                          shift and go to state 72
    valoresMat                     shift and go to state 74
    vecVal                         shift and go to state 76
    eMat                           shift and go to state 290
    tCompareEQ                     shift and go to state 297
    mayor                          shift and go to state 296
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 294
    exp                            shift and go to state 105
    varYVals                       shift and go to state 295
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 238

state 180

    (148) varYVals -> vecVal . . varYVals
    (155) variable -> vecVal . . varYVals
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    ID              shift and go to state 150
    [               shift and go to state 22
    {               shift and go to state 35

    reg                            shift and go to state 13
    vec                            shift and go to state 36
    varYVals                       shift and go to state 298
    vecVal                         shift and go to state 148
    atributos                      shift and go to state 6

state 181

    (217) and -> valoresBool AND . eq
    (219) and -> valoresBool AND . valoresBool
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (53) funcBool -> . COLINEALES ( valores , valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (254) parenBool -> . ( expBool )
    (96) reg -> . { campos }
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )

    BOOL            shift and go to state 202
    (               shift and go to state 242
    AND             reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    ?               reduce using rule 210 (valoresBool -> .)
    ,               reduce using rule 210 (valoresBool -> .)
    ]               reduce using rule 210 (valoresBool -> .)
    )               reduce using rule 210 (valoresBool -> .)
    ;               reduce using rule 210 (valoresBool -> .)
    :               reduce using rule 210 (valoresBool -> .)
    }               reduce using rule 210 (valoresBool -> .)
    INT             shift and go to state 244
    FLOAT           shift and go to state 245
    COLINEALES      shift and go to state 4
    ID              shift and go to state 229
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    STRING          shift and go to state 196
    NOT             shift and go to state 104
    [               shift and go to state 22
    CAPITALIZAR     shift and go to state 29
    {               shift and go to state 35
    -               shift and go to state 83
    +               shift and go to state 82

    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 239
    variable                       shift and go to state 94
    menor                          shift and go to state 72
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 299
    mayor                          shift and go to state 86
    valoresBool                    shift and go to state 300
    eMat                           shift and go to state 241
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    not                            shift and go to state 71
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 246
    exp                            shift and go to state 105
    varYVals                       shift and go to state 247
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 238

state 182

    (212) expBool -> valoresBool OR . and
    (214) expBool -> valoresBool OR . valoresBool
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (53) funcBool -> . COLINEALES ( valores , valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (96) reg -> . { campos }
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (254) parenBool -> . ( expBool )
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )

    BOOL            shift and go to state 202
    (               shift and go to state 242
    AND             reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    ?               reduce using rule 210 (valoresBool -> .)
    ,               reduce using rule 210 (valoresBool -> .)
    ]               reduce using rule 210 (valoresBool -> .)
    )               reduce using rule 210 (valoresBool -> .)
    ;               reduce using rule 210 (valoresBool -> .)
    :               reduce using rule 210 (valoresBool -> .)
    }               reduce using rule 210 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 229
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    INT             shift and go to state 244
    FLOAT           shift and go to state 245
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    [               shift and go to state 22
    STRING          shift and go to state 196
    NOT             shift and go to state 104
    {               shift and go to state 35
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82

    and                            shift and go to state 301
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 239
    not                            shift and go to state 71
    menor                          shift and go to state 72
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    mayor                          shift and go to state 86
    valoresBool                    shift and go to state 302
    eMat                           shift and go to state 241
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    iSing                          shift and go to state 90
    exp                            shift and go to state 105
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 246
    varYVals                       shift and go to state 247
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 238

state 183

    (130) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (112) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (132) valoresTernarioMat -> . INT
    (133) valoresTernarioMat -> . FLOAT
    (134) valoresTernarioMat -> . funcInt
    (135) valoresTernarioMat -> . STRING
    (136) valoresTernarioMat -> . eMat
    (137) valoresTernarioMat -> . ternarioMat
    (138) valoresTernarioMat -> . ( ternarioMat )
    (141) valoresTernarioBool -> . BOOL
    (142) valoresTernarioBool -> . funcBool
    (143) valoresTernarioBool -> . ternarioBool
    (144) valoresTernarioBool -> . ( ternarioBool )
    (145) valoresTernarioBool -> . expBool
    (122) valoresTernarioVars -> . reg
    (123) valoresTernarioVars -> . vec
    (124) valoresTernarioVars -> . ternarioVars
    (125) valoresTernarioVars -> . ( ternarioVars )
    (126) valoresTernarioVars -> . atributos
    (127) valoresTernarioVars -> . varsOps
    (128) valoresTernarioVars -> . varYVals
    (129) valoresTernarioVars -> . RES
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (53) funcBool -> . COLINEALES ( valores , valores )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (96) reg -> . { campos }
    (58) vec -> . [ elem ]
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 319
    FLOAT           shift and go to state 320
    STRING          shift and go to state 316
    (               shift and go to state 323
    BOOL            shift and go to state 321
    RES             shift and go to state 304
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    COLINEALES      shift and go to state 4
    {               shift and go to state 35
    [               shift and go to state 22
    ID              shift and go to state 310
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 303
    funcInt                        shift and go to state 305
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 307
    eMat                           shift and go to state 308
    tCompareEQ                     shift and go to state 80
    valoresTernarioBool            shift and go to state 309
    vecVal                         shift and go to state 306
    ternarioMat                    shift and go to state 311
    vec                            shift and go to state 312
    paren                          shift and go to state 93
    reg                            shift and go to state 314
    valoresTernarioVars            shift and go to state 315
    expBool                        shift and go to state 322
    ternarioBool                   shift and go to state 317
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    valoresTernarioMat             shift and go to state 318
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 313
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 324
    varYVals                       shift and go to state 325
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 326

state 184

    (171) eMat -> eMat + . p
    (173) eMat -> eMat + . valoresMat
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (58) vec -> . [ elem ]

    INT             shift and go to state 212
    FLOAT           shift and go to state 211
    STRING          shift and go to state 196
    (               shift and go to state 276
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    -               shift and go to state 83
    +               shift and go to state 82
    {               shift and go to state 35
    [               shift and go to state 22

    funcInt                        shift and go to state 207
    valoresMat                     shift and go to state 327
    vecVal                         shift and go to state 76
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    iSing                          shift and go to state 90
    exp                            shift and go to state 105
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 328
    varsOps                        shift and go to state 213
    varYVals                       shift and go to state 214
    atributos                      shift and go to state 206

state 185

    (176) eMat -> eMat - . p
    (178) eMat -> eMat - . valoresMat
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (58) vec -> . [ elem ]

    INT             shift and go to state 212
    FLOAT           shift and go to state 211
    STRING          shift and go to state 196
    (               shift and go to state 276
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    -               shift and go to state 83
    +               shift and go to state 82
    {               shift and go to state 35
    [               shift and go to state 22

    funcInt                        shift and go to state 207
    valoresMat                     shift and go to state 329
    vecVal                         shift and go to state 76
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    iSing                          shift and go to state 90
    exp                            shift and go to state 105
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 330
    varsOps                        shift and go to state 213
    varYVals                       shift and go to state 214
    atributos                      shift and go to state 206

state 186

    (223) eq -> tCompareEQ EQEQ . mayor
    (227) eq -> tCompareEQ EQEQ . tCompareEQ
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (53) funcBool -> . COLINEALES ( valores , valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (254) parenBool -> . ( expBool )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (96) reg -> . { campos }
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )

    BOOL            shift and go to state 293
    INT             shift and go to state 244
    FLOAT           shift and go to state 245
    (               shift and go to state 291
    COLINEALES      shift and go to state 4
    ID              shift and go to state 229
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    NOT             shift and go to state 104
    STRING          shift and go to state 196
    [               shift and go to state 22
    CAPITALIZAR     shift and go to state 29
    {               shift and go to state 35
    -               shift and go to state 83
    +               shift and go to state 82

    funcBool                       shift and go to state 288
    funcInt                        shift and go to state 239
    not                            shift and go to state 71
    menor                          shift and go to state 72
    valoresMat                     shift and go to state 74
    vecVal                         shift and go to state 76
    eMat                           shift and go to state 290
    tCompareEQ                     shift and go to state 332
    mayor                          shift and go to state 331
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 294
    exp                            shift and go to state 105
    varYVals                       shift and go to state 295
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 238

state 187

    (224) eq -> tCompareEQ DISTINTO . mayor
    (228) eq -> tCompareEQ DISTINTO . tCompareEQ
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (53) funcBool -> . COLINEALES ( valores , valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (254) parenBool -> . ( expBool )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (96) reg -> . { campos }
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )

    BOOL            shift and go to state 293
    INT             shift and go to state 244
    FLOAT           shift and go to state 245
    (               shift and go to state 291
    COLINEALES      shift and go to state 4
    ID              shift and go to state 229
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    NOT             shift and go to state 104
    STRING          shift and go to state 196
    [               shift and go to state 22
    CAPITALIZAR     shift and go to state 29
    {               shift and go to state 35
    -               shift and go to state 83
    +               shift and go to state 82

    funcBool                       shift and go to state 288
    funcInt                        shift and go to state 239
    not                            shift and go to state 71
    menor                          shift and go to state 72
    valoresMat                     shift and go to state 74
    vecVal                         shift and go to state 76
    eMat                           shift and go to state 290
    tCompareEQ                     shift and go to state 334
    mayor                          shift and go to state 333
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 294
    exp                            shift and go to state 105
    varYVals                       shift and go to state 295
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 238

state 188

    (206) valoresBool -> funcBool .
    (231) tCompareEQ -> funcBool .

    AND             reduce using rule 206 (valoresBool -> funcBool .)
    OR              reduce using rule 206 (valoresBool -> funcBool .)
    ?               reduce using rule 206 (valoresBool -> funcBool .)
    ,               reduce using rule 206 (valoresBool -> funcBool .)
    ]               reduce using rule 206 (valoresBool -> funcBool .)
    )               reduce using rule 206 (valoresBool -> funcBool .)
    ;               reduce using rule 206 (valoresBool -> funcBool .)
    :               reduce using rule 206 (valoresBool -> funcBool .)
    }               reduce using rule 206 (valoresBool -> funcBool .)
    EQEQ            reduce using rule 231 (tCompareEQ -> funcBool .)
    DISTINTO        reduce using rule 231 (tCompareEQ -> funcBool .)


state 189

    (164) valoresMat -> funcInt .
    (236) tCompareEQ -> funcInt .
    (244) tCompare -> funcInt .

    )               reduce using rule 164 (valoresMat -> funcInt .)
    +               reduce using rule 164 (valoresMat -> funcInt .)
    -               reduce using rule 164 (valoresMat -> funcInt .)
    *               reduce using rule 164 (valoresMat -> funcInt .)
    /               reduce using rule 164 (valoresMat -> funcInt .)
    %               reduce using rule 164 (valoresMat -> funcInt .)
    ^               reduce using rule 164 (valoresMat -> funcInt .)
    EQEQ            reduce using rule 236 (tCompareEQ -> funcInt .)
    DISTINTO        reduce using rule 236 (tCompareEQ -> funcInt .)
    >               reduce using rule 244 (tCompare -> funcInt .)
    <               reduce using rule 244 (tCompare -> funcInt .)


state 190

    (204) paren -> ( valoresMat . )
    (172) eMat -> valoresMat . + p
    (174) eMat -> valoresMat . + valoresMat
    (177) eMat -> valoresMat . - p
    (179) eMat -> valoresMat . - valoresMat
    (183) p -> valoresMat . * exp
    (184) p -> valoresMat . / exp
    (185) p -> valoresMat . % exp
    (189) p -> valoresMat . * valoresMat
    (190) p -> valoresMat . / valoresMat
    (191) p -> valoresMat . % valoresMat
    (194) exp -> valoresMat . ^ iSing
    (196) exp -> valoresMat . ^ valoresMat

    )               shift and go to state 335
    +               shift and go to state 173
    -               shift and go to state 175
    *               shift and go to state 174
    /               shift and go to state 176
    %               shift and go to state 172
    ^               shift and go to state 177


state 191

    (130) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (112) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (212) expBool -> valoresBool . OR and
    (214) expBool -> valoresBool . OR valoresBool
    (217) and -> valoresBool . AND eq
    (219) and -> valoresBool . AND valoresBool

    ?               shift and go to state 183
    OR              shift and go to state 182
    AND             shift and go to state 181


state 192

    (203) paren -> ( eMat . )
    (171) eMat -> eMat . + p
    (173) eMat -> eMat . + valoresMat
    (176) eMat -> eMat . - p
    (178) eMat -> eMat . - valoresMat
    (237) tCompareEQ -> eMat .
    (240) tCompare -> eMat .

    )               shift and go to state 336
    +               shift and go to state 184
    -               shift and go to state 185
    EQEQ            reduce using rule 237 (tCompareEQ -> eMat .)
    DISTINTO        reduce using rule 237 (tCompareEQ -> eMat .)
    >               reduce using rule 240 (tCompare -> eMat .)
    <               reduce using rule 240 (tCompare -> eMat .)


state 193

    (170) valoresMat -> ( . ternarioMat )
    (209) valoresBool -> ( . ternarioBool )
    (238) tCompareEQ -> ( . ternarioBool )
    (239) tCompareEQ -> ( . ternarioMat )
    (203) paren -> ( . eMat )
    (204) paren -> ( . valoresMat )
    (246) tCompare -> ( . ternarioMat )
    (254) parenBool -> ( . expBool )
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (53) funcBool -> . COLINEALES ( valores , valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (58) vec -> . [ elem ]
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    STRING          shift and go to state 196
    (               shift and go to state 193
    BOOL            shift and go to state 202
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    COLINEALES      shift and go to state 4
    {               shift and go to state 35
    -               shift and go to state 83
    +               shift and go to state 82
    [               shift and go to state 22
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 189
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 190
    eq                             shift and go to state 75
    vecVal                         shift and go to state 76
    eMat                           shift and go to state 192
    tCompareEQ                     shift and go to state 80
    valoresBool                    shift and go to state 337
    ternarioMat                    shift and go to state 338
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    varsOps                        shift and go to state 195
    exp                            shift and go to state 105
    ternarioBool                   shift and go to state 339
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    expBool                        shift and go to state 340
    varYVals                       shift and go to state 205
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 206

state 194

    (108) ternario -> ( ternarioMat . )
    (170) valoresMat -> ( ternarioMat . )
    (239) tCompareEQ -> ( ternarioMat . )
    (246) tCompare -> ( ternarioMat . )

    )               shift and go to state 341


state 195

    (169) valoresMat -> varsOps .
    (208) valoresBool -> varsOps .
    (233) tCompareEQ -> varsOps .
    (241) tCompare -> varsOps .

    )               reduce using rule 169 (valoresMat -> varsOps .)
    +               reduce using rule 169 (valoresMat -> varsOps .)
    -               reduce using rule 169 (valoresMat -> varsOps .)
    *               reduce using rule 169 (valoresMat -> varsOps .)
    /               reduce using rule 169 (valoresMat -> varsOps .)
    %               reduce using rule 169 (valoresMat -> varsOps .)
    ^               reduce using rule 169 (valoresMat -> varsOps .)
    ?               reduce using rule 208 (valoresBool -> varsOps .)
    OR              reduce using rule 208 (valoresBool -> varsOps .)
    AND             reduce using rule 208 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 233 (tCompareEQ -> varsOps .)
    DISTINTO        reduce using rule 233 (tCompareEQ -> varsOps .)
    >               reduce using rule 241 (tCompare -> varsOps .)
    <               reduce using rule 241 (tCompare -> varsOps .)


state 196

    (167) valoresMat -> STRING .

    +               reduce using rule 167 (valoresMat -> STRING .)
    -               reduce using rule 167 (valoresMat -> STRING .)
    *               reduce using rule 167 (valoresMat -> STRING .)
    /               reduce using rule 167 (valoresMat -> STRING .)
    %               reduce using rule 167 (valoresMat -> STRING .)
    ^               reduce using rule 167 (valoresMat -> STRING .)
    )               reduce using rule 167 (valoresMat -> STRING .)
    ,               reduce using rule 167 (valoresMat -> STRING .)
    ]               reduce using rule 167 (valoresMat -> STRING .)
    EQEQ            reduce using rule 167 (valoresMat -> STRING .)
    DISTINTO        reduce using rule 167 (valoresMat -> STRING .)
    >               reduce using rule 167 (valoresMat -> STRING .)
    <               reduce using rule 167 (valoresMat -> STRING .)
    ;               reduce using rule 167 (valoresMat -> STRING .)
    AND             reduce using rule 167 (valoresMat -> STRING .)
    OR              reduce using rule 167 (valoresMat -> STRING .)
    ?               reduce using rule 167 (valoresMat -> STRING .)
    :               reduce using rule 167 (valoresMat -> STRING .)
    }               reduce using rule 167 (valoresMat -> STRING .)


state 197

    (109) ternario -> ( ternarioBool . )
    (209) valoresBool -> ( ternarioBool . )
    (238) tCompareEQ -> ( ternarioBool . )

    )               shift and go to state 342


state 198

    (99) atributos -> ID . . valoresCampos
    (146) varYVals -> ID .
    (61) vecVal -> ID . [ expresion ]
    (65) vecVal -> ID . [ INT ]
    (153) variable -> ID .

    .               shift and go to state 159
    +               reduce using rule 146 (varYVals -> ID .)
    -               reduce using rule 146 (varYVals -> ID .)
    *               reduce using rule 146 (varYVals -> ID .)
    /               reduce using rule 146 (varYVals -> ID .)
    %               reduce using rule 146 (varYVals -> ID .)
    ^               reduce using rule 146 (varYVals -> ID .)
    ?               reduce using rule 146 (varYVals -> ID .)
    OR              reduce using rule 146 (varYVals -> ID .)
    AND             reduce using rule 146 (varYVals -> ID .)
    EQEQ            reduce using rule 146 (varYVals -> ID .)
    DISTINTO        reduce using rule 146 (varYVals -> ID .)
    >               reduce using rule 146 (varYVals -> ID .)
    <               reduce using rule 146 (varYVals -> ID .)
    ,               reduce using rule 146 (varYVals -> ID .)
    ]               reduce using rule 146 (varYVals -> ID .)
    )               reduce using rule 146 (varYVals -> ID .)
    ;               reduce using rule 146 (varYVals -> ID .)
    :               reduce using rule 146 (varYVals -> ID .)
    }               reduce using rule 146 (varYVals -> ID .)
    [               shift and go to state 109
    MASMAS          reduce using rule 153 (variable -> ID .)
    MENOSMENOS      reduce using rule 153 (variable -> ID .)


state 199

    (166) valoresMat -> funcString .

    +               reduce using rule 166 (valoresMat -> funcString .)
    -               reduce using rule 166 (valoresMat -> funcString .)
    *               reduce using rule 166 (valoresMat -> funcString .)
    /               reduce using rule 166 (valoresMat -> funcString .)
    %               reduce using rule 166 (valoresMat -> funcString .)
    ^               reduce using rule 166 (valoresMat -> funcString .)
    )               reduce using rule 166 (valoresMat -> funcString .)
    ,               reduce using rule 166 (valoresMat -> funcString .)
    ]               reduce using rule 166 (valoresMat -> funcString .)
    EQEQ            reduce using rule 166 (valoresMat -> funcString .)
    DISTINTO        reduce using rule 166 (valoresMat -> funcString .)
    >               reduce using rule 166 (valoresMat -> funcString .)
    <               reduce using rule 166 (valoresMat -> funcString .)
    ;               reduce using rule 166 (valoresMat -> funcString .)
    AND             reduce using rule 166 (valoresMat -> funcString .)
    OR              reduce using rule 166 (valoresMat -> funcString .)
    ?               reduce using rule 166 (valoresMat -> funcString .)
    :               reduce using rule 166 (valoresMat -> funcString .)
    }               reduce using rule 166 (valoresMat -> funcString .)


state 200

    (162) valoresMat -> INT .
    (234) tCompareEQ -> INT .
    (243) tCompare -> INT .

    )               reduce using rule 162 (valoresMat -> INT .)
    +               reduce using rule 162 (valoresMat -> INT .)
    -               reduce using rule 162 (valoresMat -> INT .)
    *               reduce using rule 162 (valoresMat -> INT .)
    /               reduce using rule 162 (valoresMat -> INT .)
    %               reduce using rule 162 (valoresMat -> INT .)
    ^               reduce using rule 162 (valoresMat -> INT .)
    EQEQ            reduce using rule 234 (tCompareEQ -> INT .)
    DISTINTO        reduce using rule 234 (tCompareEQ -> INT .)
    >               reduce using rule 243 (tCompare -> INT .)
    <               reduce using rule 243 (tCompare -> INT .)


state 201

    (163) valoresMat -> FLOAT .
    (235) tCompareEQ -> FLOAT .
    (245) tCompare -> FLOAT .

    )               reduce using rule 163 (valoresMat -> FLOAT .)
    +               reduce using rule 163 (valoresMat -> FLOAT .)
    -               reduce using rule 163 (valoresMat -> FLOAT .)
    *               reduce using rule 163 (valoresMat -> FLOAT .)
    /               reduce using rule 163 (valoresMat -> FLOAT .)
    %               reduce using rule 163 (valoresMat -> FLOAT .)
    ^               reduce using rule 163 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 235 (tCompareEQ -> FLOAT .)
    DISTINTO        reduce using rule 235 (tCompareEQ -> FLOAT .)
    >               reduce using rule 245 (tCompare -> FLOAT .)
    <               reduce using rule 245 (tCompare -> FLOAT .)


state 202

    (205) valoresBool -> BOOL .
    (230) tCompareEQ -> BOOL .

    AND             reduce using rule 205 (valoresBool -> BOOL .)
    OR              reduce using rule 205 (valoresBool -> BOOL .)
    ?               reduce using rule 205 (valoresBool -> BOOL .)
    ,               reduce using rule 205 (valoresBool -> BOOL .)
    ]               reduce using rule 205 (valoresBool -> BOOL .)
    )               reduce using rule 205 (valoresBool -> BOOL .)
    ;               reduce using rule 205 (valoresBool -> BOOL .)
    :               reduce using rule 205 (valoresBool -> BOOL .)
    }               reduce using rule 205 (valoresBool -> BOOL .)
    EQEQ            reduce using rule 230 (tCompareEQ -> BOOL .)
    DISTINTO        reduce using rule 230 (tCompareEQ -> BOOL .)


state 203

    (254) parenBool -> ( expBool . )
    (131) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (140) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (117) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (211) expBool -> expBool . OR and
    (213) expBool -> expBool . OR valoresBool

    )               shift and go to state 343
    ?               shift and go to state 218
    OR              shift and go to state 217


state 204

    (111) ternario -> ( ternarioVars . )

    )               shift and go to state 344


state 205

    (168) valoresMat -> varYVals .
    (207) valoresBool -> varYVals .
    (232) tCompareEQ -> varYVals .
    (242) tCompare -> varYVals .

    )               reduce using rule 168 (valoresMat -> varYVals .)
    +               reduce using rule 168 (valoresMat -> varYVals .)
    -               reduce using rule 168 (valoresMat -> varYVals .)
    *               reduce using rule 168 (valoresMat -> varYVals .)
    /               reduce using rule 168 (valoresMat -> varYVals .)
    %               reduce using rule 168 (valoresMat -> varYVals .)
    ^               reduce using rule 168 (valoresMat -> varYVals .)
    ?               reduce using rule 207 (valoresBool -> varYVals .)
    OR              reduce using rule 207 (valoresBool -> varYVals .)
    AND             reduce using rule 207 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 232 (tCompareEQ -> varYVals .)
    DISTINTO        reduce using rule 232 (tCompareEQ -> varYVals .)
    >               reduce using rule 242 (tCompare -> varYVals .)
    <               reduce using rule 242 (tCompare -> varYVals .)


state 206

    (165) valoresMat -> atributos .
    (64) vecVal -> atributos . [ expresion ]
    (68) vecVal -> atributos . [ INT ]

    )               reduce using rule 165 (valoresMat -> atributos .)
    +               reduce using rule 165 (valoresMat -> atributos .)
    -               reduce using rule 165 (valoresMat -> atributos .)
    *               reduce using rule 165 (valoresMat -> atributos .)
    /               reduce using rule 165 (valoresMat -> atributos .)
    %               reduce using rule 165 (valoresMat -> atributos .)
    ^               reduce using rule 165 (valoresMat -> atributos .)
    ,               reduce using rule 165 (valoresMat -> atributos .)
    ]               reduce using rule 165 (valoresMat -> atributos .)
    EQEQ            reduce using rule 165 (valoresMat -> atributos .)
    DISTINTO        reduce using rule 165 (valoresMat -> atributos .)
    >               reduce using rule 165 (valoresMat -> atributos .)
    <               reduce using rule 165 (valoresMat -> atributos .)
    ;               reduce using rule 165 (valoresMat -> atributos .)
    AND             reduce using rule 165 (valoresMat -> atributos .)
    OR              reduce using rule 165 (valoresMat -> atributos .)
    ?               reduce using rule 165 (valoresMat -> atributos .)
    :               reduce using rule 165 (valoresMat -> atributos .)
    }               reduce using rule 165 (valoresMat -> atributos .)
    [               shift and go to state 45


state 207

    (164) valoresMat -> funcInt .

    ^               reduce using rule 164 (valoresMat -> funcInt .)
    *               reduce using rule 164 (valoresMat -> funcInt .)
    /               reduce using rule 164 (valoresMat -> funcInt .)
    %               reduce using rule 164 (valoresMat -> funcInt .)
    +               reduce using rule 164 (valoresMat -> funcInt .)
    -               reduce using rule 164 (valoresMat -> funcInt .)
    ,               reduce using rule 164 (valoresMat -> funcInt .)
    ]               reduce using rule 164 (valoresMat -> funcInt .)
    EQEQ            reduce using rule 164 (valoresMat -> funcInt .)
    DISTINTO        reduce using rule 164 (valoresMat -> funcInt .)
    >               reduce using rule 164 (valoresMat -> funcInt .)
    <               reduce using rule 164 (valoresMat -> funcInt .)
    )               reduce using rule 164 (valoresMat -> funcInt .)
    ;               reduce using rule 164 (valoresMat -> funcInt .)
    AND             reduce using rule 164 (valoresMat -> funcInt .)
    OR              reduce using rule 164 (valoresMat -> funcInt .)
    ?               reduce using rule 164 (valoresMat -> funcInt .)
    :               reduce using rule 164 (valoresMat -> funcInt .)
    }               reduce using rule 164 (valoresMat -> funcInt .)


state 208

    (201) iSing -> + valoresMat .

    ^               reduce using rule 201 (iSing -> + valoresMat .)
    *               reduce using rule 201 (iSing -> + valoresMat .)
    /               reduce using rule 201 (iSing -> + valoresMat .)
    %               reduce using rule 201 (iSing -> + valoresMat .)
    )               reduce using rule 201 (iSing -> + valoresMat .)
    +               reduce using rule 201 (iSing -> + valoresMat .)
    -               reduce using rule 201 (iSing -> + valoresMat .)
    EQEQ            reduce using rule 201 (iSing -> + valoresMat .)
    DISTINTO        reduce using rule 201 (iSing -> + valoresMat .)
    >               reduce using rule 201 (iSing -> + valoresMat .)
    <               reduce using rule 201 (iSing -> + valoresMat .)
    ]               reduce using rule 201 (iSing -> + valoresMat .)
    :               reduce using rule 201 (iSing -> + valoresMat .)
    ;               reduce using rule 201 (iSing -> + valoresMat .)
    AND             reduce using rule 201 (iSing -> + valoresMat .)
    OR              reduce using rule 201 (iSing -> + valoresMat .)
    ?               reduce using rule 201 (iSing -> + valoresMat .)
    ,               reduce using rule 201 (iSing -> + valoresMat .)
    }               reduce using rule 201 (iSing -> + valoresMat .)


state 209

    (203) paren -> ( . eMat )
    (204) paren -> ( . valoresMat )
    (170) valoresMat -> ( . ternarioMat )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (53) funcBool -> . COLINEALES ( valores , valores )
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (58) vec -> . [ elem ]
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    STRING          shift and go to state 196
    (               shift and go to state 346
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    BOOL            shift and go to state 202
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    {               shift and go to state 35
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    [               shift and go to state 22
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 189
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 190
    eq                             shift and go to state 75
    vecVal                         shift and go to state 76
    eMat                           shift and go to state 192
    tCompareEQ                     shift and go to state 80
    atributos                      shift and go to state 206
    valoresBool                    shift and go to state 345
    ternarioMat                    shift and go to state 347
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    iSing                          shift and go to state 90
    exp                            shift and go to state 105
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 195
    varYVals                       shift and go to state 205
    parenBool                      shift and go to state 91
    expBool                        shift and go to state 348

state 210

    (199) iSing -> + paren .

    ^               reduce using rule 199 (iSing -> + paren .)
    *               reduce using rule 199 (iSing -> + paren .)
    /               reduce using rule 199 (iSing -> + paren .)
    %               reduce using rule 199 (iSing -> + paren .)
    )               reduce using rule 199 (iSing -> + paren .)
    +               reduce using rule 199 (iSing -> + paren .)
    -               reduce using rule 199 (iSing -> + paren .)
    EQEQ            reduce using rule 199 (iSing -> + paren .)
    DISTINTO        reduce using rule 199 (iSing -> + paren .)
    >               reduce using rule 199 (iSing -> + paren .)
    <               reduce using rule 199 (iSing -> + paren .)
    ]               reduce using rule 199 (iSing -> + paren .)
    :               reduce using rule 199 (iSing -> + paren .)
    ;               reduce using rule 199 (iSing -> + paren .)
    AND             reduce using rule 199 (iSing -> + paren .)
    OR              reduce using rule 199 (iSing -> + paren .)
    ?               reduce using rule 199 (iSing -> + paren .)
    ,               reduce using rule 199 (iSing -> + paren .)
    }               reduce using rule 199 (iSing -> + paren .)


state 211

    (163) valoresMat -> FLOAT .

    ^               reduce using rule 163 (valoresMat -> FLOAT .)
    *               reduce using rule 163 (valoresMat -> FLOAT .)
    /               reduce using rule 163 (valoresMat -> FLOAT .)
    %               reduce using rule 163 (valoresMat -> FLOAT .)
    +               reduce using rule 163 (valoresMat -> FLOAT .)
    -               reduce using rule 163 (valoresMat -> FLOAT .)
    ,               reduce using rule 163 (valoresMat -> FLOAT .)
    ]               reduce using rule 163 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 163 (valoresMat -> FLOAT .)
    DISTINTO        reduce using rule 163 (valoresMat -> FLOAT .)
    >               reduce using rule 163 (valoresMat -> FLOAT .)
    <               reduce using rule 163 (valoresMat -> FLOAT .)
    )               reduce using rule 163 (valoresMat -> FLOAT .)
    ;               reduce using rule 163 (valoresMat -> FLOAT .)
    AND             reduce using rule 163 (valoresMat -> FLOAT .)
    OR              reduce using rule 163 (valoresMat -> FLOAT .)
    ?               reduce using rule 163 (valoresMat -> FLOAT .)
    :               reduce using rule 163 (valoresMat -> FLOAT .)
    }               reduce using rule 163 (valoresMat -> FLOAT .)


state 212

    (162) valoresMat -> INT .

    ^               reduce using rule 162 (valoresMat -> INT .)
    *               reduce using rule 162 (valoresMat -> INT .)
    /               reduce using rule 162 (valoresMat -> INT .)
    %               reduce using rule 162 (valoresMat -> INT .)
    +               reduce using rule 162 (valoresMat -> INT .)
    -               reduce using rule 162 (valoresMat -> INT .)
    ,               reduce using rule 162 (valoresMat -> INT .)
    ]               reduce using rule 162 (valoresMat -> INT .)
    EQEQ            reduce using rule 162 (valoresMat -> INT .)
    DISTINTO        reduce using rule 162 (valoresMat -> INT .)
    >               reduce using rule 162 (valoresMat -> INT .)
    <               reduce using rule 162 (valoresMat -> INT .)
    )               reduce using rule 162 (valoresMat -> INT .)
    ;               reduce using rule 162 (valoresMat -> INT .)
    AND             reduce using rule 162 (valoresMat -> INT .)
    OR              reduce using rule 162 (valoresMat -> INT .)
    ?               reduce using rule 162 (valoresMat -> INT .)
    :               reduce using rule 162 (valoresMat -> INT .)
    }               reduce using rule 162 (valoresMat -> INT .)


state 213

    (169) valoresMat -> varsOps .

    ^               reduce using rule 169 (valoresMat -> varsOps .)
    *               reduce using rule 169 (valoresMat -> varsOps .)
    /               reduce using rule 169 (valoresMat -> varsOps .)
    %               reduce using rule 169 (valoresMat -> varsOps .)
    +               reduce using rule 169 (valoresMat -> varsOps .)
    -               reduce using rule 169 (valoresMat -> varsOps .)
    ,               reduce using rule 169 (valoresMat -> varsOps .)
    ]               reduce using rule 169 (valoresMat -> varsOps .)
    EQEQ            reduce using rule 169 (valoresMat -> varsOps .)
    DISTINTO        reduce using rule 169 (valoresMat -> varsOps .)
    >               reduce using rule 169 (valoresMat -> varsOps .)
    <               reduce using rule 169 (valoresMat -> varsOps .)
    )               reduce using rule 169 (valoresMat -> varsOps .)
    ;               reduce using rule 169 (valoresMat -> varsOps .)
    AND             reduce using rule 169 (valoresMat -> varsOps .)
    OR              reduce using rule 169 (valoresMat -> varsOps .)
    ?               reduce using rule 169 (valoresMat -> varsOps .)
    :               reduce using rule 169 (valoresMat -> varsOps .)
    }               reduce using rule 169 (valoresMat -> varsOps .)


state 214

    (168) valoresMat -> varYVals .

    ^               reduce using rule 168 (valoresMat -> varYVals .)
    *               reduce using rule 168 (valoresMat -> varYVals .)
    /               reduce using rule 168 (valoresMat -> varYVals .)
    %               reduce using rule 168 (valoresMat -> varYVals .)
    +               reduce using rule 168 (valoresMat -> varYVals .)
    -               reduce using rule 168 (valoresMat -> varYVals .)
    ,               reduce using rule 168 (valoresMat -> varYVals .)
    ]               reduce using rule 168 (valoresMat -> varYVals .)
    EQEQ            reduce using rule 168 (valoresMat -> varYVals .)
    DISTINTO        reduce using rule 168 (valoresMat -> varYVals .)
    >               reduce using rule 168 (valoresMat -> varYVals .)
    <               reduce using rule 168 (valoresMat -> varYVals .)
    )               reduce using rule 168 (valoresMat -> varYVals .)
    ;               reduce using rule 168 (valoresMat -> varYVals .)
    AND             reduce using rule 168 (valoresMat -> varYVals .)
    OR              reduce using rule 168 (valoresMat -> varYVals .)
    ?               reduce using rule 168 (valoresMat -> varYVals .)
    :               reduce using rule 168 (valoresMat -> varYVals .)
    }               reduce using rule 168 (valoresMat -> varYVals .)


state 215

    (200) iSing -> - valoresMat .

    ^               reduce using rule 200 (iSing -> - valoresMat .)
    *               reduce using rule 200 (iSing -> - valoresMat .)
    /               reduce using rule 200 (iSing -> - valoresMat .)
    %               reduce using rule 200 (iSing -> - valoresMat .)
    )               reduce using rule 200 (iSing -> - valoresMat .)
    +               reduce using rule 200 (iSing -> - valoresMat .)
    -               reduce using rule 200 (iSing -> - valoresMat .)
    EQEQ            reduce using rule 200 (iSing -> - valoresMat .)
    DISTINTO        reduce using rule 200 (iSing -> - valoresMat .)
    >               reduce using rule 200 (iSing -> - valoresMat .)
    <               reduce using rule 200 (iSing -> - valoresMat .)
    ]               reduce using rule 200 (iSing -> - valoresMat .)
    :               reduce using rule 200 (iSing -> - valoresMat .)
    ;               reduce using rule 200 (iSing -> - valoresMat .)
    AND             reduce using rule 200 (iSing -> - valoresMat .)
    OR              reduce using rule 200 (iSing -> - valoresMat .)
    ?               reduce using rule 200 (iSing -> - valoresMat .)
    ,               reduce using rule 200 (iSing -> - valoresMat .)
    }               reduce using rule 200 (iSing -> - valoresMat .)


state 216

    (198) iSing -> - paren .

    ^               reduce using rule 198 (iSing -> - paren .)
    *               reduce using rule 198 (iSing -> - paren .)
    /               reduce using rule 198 (iSing -> - paren .)
    %               reduce using rule 198 (iSing -> - paren .)
    )               reduce using rule 198 (iSing -> - paren .)
    +               reduce using rule 198 (iSing -> - paren .)
    -               reduce using rule 198 (iSing -> - paren .)
    EQEQ            reduce using rule 198 (iSing -> - paren .)
    DISTINTO        reduce using rule 198 (iSing -> - paren .)
    >               reduce using rule 198 (iSing -> - paren .)
    <               reduce using rule 198 (iSing -> - paren .)
    ]               reduce using rule 198 (iSing -> - paren .)
    :               reduce using rule 198 (iSing -> - paren .)
    ;               reduce using rule 198 (iSing -> - paren .)
    AND             reduce using rule 198 (iSing -> - paren .)
    OR              reduce using rule 198 (iSing -> - paren .)
    ?               reduce using rule 198 (iSing -> - paren .)
    ,               reduce using rule 198 (iSing -> - paren .)
    }               reduce using rule 198 (iSing -> - paren .)


state 217

    (211) expBool -> expBool OR . and
    (213) expBool -> expBool OR . valoresBool
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (53) funcBool -> . COLINEALES ( valores , valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (96) reg -> . { campos }
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (254) parenBool -> . ( expBool )
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )

    BOOL            shift and go to state 202
    (               shift and go to state 242
    AND             reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    ?               reduce using rule 210 (valoresBool -> .)
    ,               reduce using rule 210 (valoresBool -> .)
    ]               reduce using rule 210 (valoresBool -> .)
    )               reduce using rule 210 (valoresBool -> .)
    ;               reduce using rule 210 (valoresBool -> .)
    :               reduce using rule 210 (valoresBool -> .)
    }               reduce using rule 210 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 229
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    INT             shift and go to state 244
    FLOAT           shift and go to state 245
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    [               shift and go to state 22
    STRING          shift and go to state 196
    NOT             shift and go to state 104
    {               shift and go to state 35
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82

    and                            shift and go to state 349
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 239
    not                            shift and go to state 71
    menor                          shift and go to state 72
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    mayor                          shift and go to state 86
    valoresBool                    shift and go to state 350
    eMat                           shift and go to state 241
    p                              shift and go to state 101
    vecVal                         shift and go to state 76
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    tCompareEQ                     shift and go to state 80
    varsOps                        shift and go to state 246
    exp                            shift and go to state 105
    varYVals                       shift and go to state 247
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 238

state 218

    (131) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (140) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (117) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (132) valoresTernarioMat -> . INT
    (133) valoresTernarioMat -> . FLOAT
    (134) valoresTernarioMat -> . funcInt
    (135) valoresTernarioMat -> . STRING
    (136) valoresTernarioMat -> . eMat
    (137) valoresTernarioMat -> . ternarioMat
    (138) valoresTernarioMat -> . ( ternarioMat )
    (141) valoresTernarioBool -> . BOOL
    (142) valoresTernarioBool -> . funcBool
    (143) valoresTernarioBool -> . ternarioBool
    (144) valoresTernarioBool -> . ( ternarioBool )
    (145) valoresTernarioBool -> . expBool
    (122) valoresTernarioVars -> . reg
    (123) valoresTernarioVars -> . vec
    (124) valoresTernarioVars -> . ternarioVars
    (125) valoresTernarioVars -> . ( ternarioVars )
    (126) valoresTernarioVars -> . atributos
    (127) valoresTernarioVars -> . varsOps
    (128) valoresTernarioVars -> . varYVals
    (129) valoresTernarioVars -> . RES
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (53) funcBool -> . COLINEALES ( valores , valores )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (96) reg -> . { campos }
    (58) vec -> . [ elem ]
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 319
    FLOAT           shift and go to state 320
    STRING          shift and go to state 316
    (               shift and go to state 323
    BOOL            shift and go to state 321
    RES             shift and go to state 304
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    COLINEALES      shift and go to state 4
    {               shift and go to state 35
    [               shift and go to state 22
    ID              shift and go to state 310
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 303
    funcInt                        shift and go to state 305
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 307
    eMat                           shift and go to state 308
    tCompareEQ                     shift and go to state 80
    valoresTernarioBool            shift and go to state 351
    vecVal                         shift and go to state 306
    ternarioMat                    shift and go to state 311
    vec                            shift and go to state 312
    paren                          shift and go to state 93
    reg                            shift and go to state 314
    valoresTernarioVars            shift and go to state 352
    expBool                        shift and go to state 322
    ternarioBool                   shift and go to state 317
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    valoresTernarioMat             shift and go to state 353
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 313
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 324
    varYVals                       shift and go to state 325
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 326

state 219

    (249) menor -> tCompare < . tCompare
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (58) vec -> . [ elem ]
    (96) reg -> . { campos }
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )

    INT             shift and go to state 359
    FLOAT           shift and go to state 360
    (               shift and go to state 356
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    ID              shift and go to state 358
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    STRING          shift and go to state 196
    CAPITALIZAR     shift and go to state 29
    [               shift and go to state 22
    {               shift and go to state 35
    -               shift and go to state 83
    +               shift and go to state 82

    funcInt                        shift and go to state 354
    valoresMat                     shift and go to state 74
    vecVal                         shift and go to state 306
    eMat                           shift and go to state 355
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    varsOps                        shift and go to state 361
    exp                            shift and go to state 105
    tCompare                       shift and go to state 357
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    iSing                          shift and go to state 90
    varYVals                       shift and go to state 362
    atributos                      shift and go to state 206

state 220

    (247) mayor -> tCompare > . tCompare
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (58) vec -> . [ elem ]
    (96) reg -> . { campos }
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )

    INT             shift and go to state 359
    FLOAT           shift and go to state 360
    (               shift and go to state 356
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    ID              shift and go to state 358
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    STRING          shift and go to state 196
    CAPITALIZAR     shift and go to state 29
    [               shift and go to state 22
    {               shift and go to state 35
    -               shift and go to state 83
    +               shift and go to state 82

    funcInt                        shift and go to state 354
    valoresMat                     shift and go to state 74
    vecVal                         shift and go to state 306
    eMat                           shift and go to state 355
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    varsOps                        shift and go to state 361
    exp                            shift and go to state 105
    tCompare                       shift and go to state 363
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    iSing                          shift and go to state 90
    varYVals                       shift and go to state 362
    atributos                      shift and go to state 206

state 221

    (58) vec -> [ elem ] .

    [               reduce using rule 58 (vec -> [ elem ] .)
    ,               reduce using rule 58 (vec -> [ elem ] .)
    ]               reduce using rule 58 (vec -> [ elem ] .)
    )               reduce using rule 58 (vec -> [ elem ] .)
    ;               reduce using rule 58 (vec -> [ elem ] .)
    :               reduce using rule 58 (vec -> [ elem ] .)
    }               reduce using rule 58 (vec -> [ elem ] .)


state 222

    (182) p -> p % . exp
    (188) p -> p % . valoresMat
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (58) vec -> . [ elem ]

    INT             shift and go to state 212
    FLOAT           shift and go to state 211
    STRING          shift and go to state 196
    (               shift and go to state 276
    -               shift and go to state 83
    +               shift and go to state 82
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    {               shift and go to state 35
    [               shift and go to state 22

    funcInt                        shift and go to state 207
    valoresMat                     shift and go to state 364
    vecVal                         shift and go to state 76
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    varsOps                        shift and go to state 213
    exp                            shift and go to state 365
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    iSing                          shift and go to state 90
    varYVals                       shift and go to state 214
    atributos                      shift and go to state 206

state 223

    (180) p -> p * . exp
    (186) p -> p * . valoresMat
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (58) vec -> . [ elem ]

    INT             shift and go to state 212
    FLOAT           shift and go to state 211
    STRING          shift and go to state 196
    (               shift and go to state 276
    -               shift and go to state 83
    +               shift and go to state 82
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    {               shift and go to state 35
    [               shift and go to state 22

    funcInt                        shift and go to state 207
    valoresMat                     shift and go to state 366
    vecVal                         shift and go to state 76
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    varsOps                        shift and go to state 213
    exp                            shift and go to state 367
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    iSing                          shift and go to state 90
    varYVals                       shift and go to state 214
    atributos                      shift and go to state 206

state 224

    (181) p -> p / . exp
    (187) p -> p / . valoresMat
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (58) vec -> . [ elem ]

    INT             shift and go to state 212
    FLOAT           shift and go to state 211
    STRING          shift and go to state 196
    (               shift and go to state 276
    -               shift and go to state 83
    +               shift and go to state 82
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    {               shift and go to state 35
    [               shift and go to state 22

    funcInt                        shift and go to state 207
    valoresMat                     shift and go to state 368
    vecVal                         shift and go to state 76
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    varsOps                        shift and go to state 213
    exp                            shift and go to state 369
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    iSing                          shift and go to state 90
    varYVals                       shift and go to state 214
    atributos                      shift and go to state 206

state 225

    (206) valoresBool -> funcBool .

    EQEQ            reduce using rule 206 (valoresBool -> funcBool .)
    DISTINTO        reduce using rule 206 (valoresBool -> funcBool .)
    AND             reduce using rule 206 (valoresBool -> funcBool .)
    OR              reduce using rule 206 (valoresBool -> funcBool .)
    ?               reduce using rule 206 (valoresBool -> funcBool .)
    ,               reduce using rule 206 (valoresBool -> funcBool .)
    ]               reduce using rule 206 (valoresBool -> funcBool .)
    )               reduce using rule 206 (valoresBool -> funcBool .)
    ;               reduce using rule 206 (valoresBool -> funcBool .)
    :               reduce using rule 206 (valoresBool -> funcBool .)
    }               reduce using rule 206 (valoresBool -> funcBool .)


state 226

    (252) not -> NOT valoresBool .

    EQEQ            reduce using rule 252 (not -> NOT valoresBool .)
    DISTINTO        reduce using rule 252 (not -> NOT valoresBool .)
    AND             reduce using rule 252 (not -> NOT valoresBool .)
    OR              reduce using rule 252 (not -> NOT valoresBool .)
    ?               reduce using rule 252 (not -> NOT valoresBool .)
    ]               reduce using rule 252 (not -> NOT valoresBool .)
    )               reduce using rule 252 (not -> NOT valoresBool .)
    ,               reduce using rule 252 (not -> NOT valoresBool .)
    ;               reduce using rule 252 (not -> NOT valoresBool .)
    :               reduce using rule 252 (not -> NOT valoresBool .)
    }               reduce using rule 252 (not -> NOT valoresBool .)


state 227

    (209) valoresBool -> ( . ternarioBool )
    (254) parenBool -> ( . expBool )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (53) funcBool -> . COLINEALES ( valores , valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (96) reg -> . { campos }
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (254) parenBool -> . ( expBool )
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )

    BOOL            shift and go to state 202
    (               shift and go to state 242
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 229
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    INT             shift and go to state 244
    FLOAT           shift and go to state 245
    [               shift and go to state 22
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    {               shift and go to state 35
    STRING          shift and go to state 196
    NOT             shift and go to state 104
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82

    and                            shift and go to state 65
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 239
    not                            shift and go to state 71
    menor                          shift and go to state 72
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    vecVal                         shift and go to state 76
    valoresBool                    shift and go to state 370
    eMat                           shift and go to state 241
    p                              shift and go to state 101
    mayor                          shift and go to state 86
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    iSing                          shift and go to state 90
    expBool                        shift and go to state 372
    ternarioBool                   shift and go to state 371
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    tCompareEQ                     shift and go to state 80
    varsOps                        shift and go to state 246
    exp                            shift and go to state 105
    varYVals                       shift and go to state 247
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 238

state 228

    (251) not -> NOT not .

    EQEQ            reduce using rule 251 (not -> NOT not .)
    DISTINTO        reduce using rule 251 (not -> NOT not .)
    AND             reduce using rule 251 (not -> NOT not .)
    OR              reduce using rule 251 (not -> NOT not .)
    ?               reduce using rule 251 (not -> NOT not .)
    ]               reduce using rule 251 (not -> NOT not .)
    )               reduce using rule 251 (not -> NOT not .)
    ,               reduce using rule 251 (not -> NOT not .)
    ;               reduce using rule 251 (not -> NOT not .)
    :               reduce using rule 251 (not -> NOT not .)
    }               reduce using rule 251 (not -> NOT not .)


state 229

    (146) varYVals -> ID .
    (61) vecVal -> ID . [ expresion ]
    (65) vecVal -> ID . [ INT ]
    (153) variable -> ID .
    (99) atributos -> ID . . valoresCampos

    ?               reduce using rule 146 (varYVals -> ID .)
    OR              reduce using rule 146 (varYVals -> ID .)
    AND             reduce using rule 146 (varYVals -> ID .)
    EQEQ            reduce using rule 146 (varYVals -> ID .)
    DISTINTO        reduce using rule 146 (varYVals -> ID .)
    >               reduce using rule 146 (varYVals -> ID .)
    <               reduce using rule 146 (varYVals -> ID .)
    +               reduce using rule 146 (varYVals -> ID .)
    -               reduce using rule 146 (varYVals -> ID .)
    *               reduce using rule 146 (varYVals -> ID .)
    /               reduce using rule 146 (varYVals -> ID .)
    %               reduce using rule 146 (varYVals -> ID .)
    ^               reduce using rule 146 (varYVals -> ID .)
    )               reduce using rule 146 (varYVals -> ID .)
    ,               reduce using rule 146 (varYVals -> ID .)
    ]               reduce using rule 146 (varYVals -> ID .)
    ;               reduce using rule 146 (varYVals -> ID .)
    :               reduce using rule 146 (varYVals -> ID .)
    }               reduce using rule 146 (varYVals -> ID .)
    [               shift and go to state 109
    MASMAS          reduce using rule 153 (variable -> ID .)
    MENOSMENOS      reduce using rule 153 (variable -> ID .)
    .               shift and go to state 159


state 230

    (205) valoresBool -> BOOL .

    EQEQ            reduce using rule 205 (valoresBool -> BOOL .)
    DISTINTO        reduce using rule 205 (valoresBool -> BOOL .)
    AND             reduce using rule 205 (valoresBool -> BOOL .)
    OR              reduce using rule 205 (valoresBool -> BOOL .)
    ?               reduce using rule 205 (valoresBool -> BOOL .)
    ,               reduce using rule 205 (valoresBool -> BOOL .)
    ]               reduce using rule 205 (valoresBool -> BOOL .)
    )               reduce using rule 205 (valoresBool -> BOOL .)
    ;               reduce using rule 205 (valoresBool -> BOOL .)
    :               reduce using rule 205 (valoresBool -> BOOL .)
    }               reduce using rule 205 (valoresBool -> BOOL .)


state 231

    (208) valoresBool -> varsOps .

    EQEQ            reduce using rule 208 (valoresBool -> varsOps .)
    DISTINTO        reduce using rule 208 (valoresBool -> varsOps .)
    AND             reduce using rule 208 (valoresBool -> varsOps .)
    OR              reduce using rule 208 (valoresBool -> varsOps .)
    ?               reduce using rule 208 (valoresBool -> varsOps .)
    ,               reduce using rule 208 (valoresBool -> varsOps .)
    ]               reduce using rule 208 (valoresBool -> varsOps .)
    )               reduce using rule 208 (valoresBool -> varsOps .)
    ;               reduce using rule 208 (valoresBool -> varsOps .)
    :               reduce using rule 208 (valoresBool -> varsOps .)
    }               reduce using rule 208 (valoresBool -> varsOps .)


state 232

    (207) valoresBool -> varYVals .

    EQEQ            reduce using rule 207 (valoresBool -> varYVals .)
    DISTINTO        reduce using rule 207 (valoresBool -> varYVals .)
    AND             reduce using rule 207 (valoresBool -> varYVals .)
    OR              reduce using rule 207 (valoresBool -> varYVals .)
    ?               reduce using rule 207 (valoresBool -> varYVals .)
    ,               reduce using rule 207 (valoresBool -> varYVals .)
    ]               reduce using rule 207 (valoresBool -> varYVals .)
    )               reduce using rule 207 (valoresBool -> varYVals .)
    ;               reduce using rule 207 (valoresBool -> varYVals .)
    :               reduce using rule 207 (valoresBool -> varYVals .)
    }               reduce using rule 207 (valoresBool -> varYVals .)


state 233

    (193) exp -> exp ^ . iSing
    (195) exp -> exp ^ . valoresMat
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (58) vec -> . [ elem ]

    -               shift and go to state 83
    +               shift and go to state 82
    INT             shift and go to state 212
    FLOAT           shift and go to state 211
    STRING          shift and go to state 196
    (               shift and go to state 276
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    {               shift and go to state 35
    [               shift and go to state 22

    funcString                     shift and go to state 199
    funcInt                        shift and go to state 207
    vecVal                         shift and go to state 76
    vec                            shift and go to state 36
    iSing                          shift and go to state 374
    valoresMat                     shift and go to state 373
    variable                       shift and go to state 94
    paren                          shift and go to state 93
    varYVals                       shift and go to state 214
    reg                            shift and go to state 13
    atributos                      shift and go to state 206
    varsOps                        shift and go to state 213

state 234

    (99) atributos -> ID . valoresCampos .

    [               reduce using rule 99 (atributos -> ID . valoresCampos .)
    )               reduce using rule 99 (atributos -> ID . valoresCampos .)
    +               reduce using rule 99 (atributos -> ID . valoresCampos .)
    -               reduce using rule 99 (atributos -> ID . valoresCampos .)
    *               reduce using rule 99 (atributos -> ID . valoresCampos .)
    /               reduce using rule 99 (atributos -> ID . valoresCampos .)
    %               reduce using rule 99 (atributos -> ID . valoresCampos .)
    ^               reduce using rule 99 (atributos -> ID . valoresCampos .)
    ,               reduce using rule 99 (atributos -> ID . valoresCampos .)
    ]               reduce using rule 99 (atributos -> ID . valoresCampos .)
    EQEQ            reduce using rule 99 (atributos -> ID . valoresCampos .)
    DISTINTO        reduce using rule 99 (atributos -> ID . valoresCampos .)
    >               reduce using rule 99 (atributos -> ID . valoresCampos .)
    <               reduce using rule 99 (atributos -> ID . valoresCampos .)
    ;               reduce using rule 99 (atributos -> ID . valoresCampos .)
    AND             reduce using rule 99 (atributos -> ID . valoresCampos .)
    OR              reduce using rule 99 (atributos -> ID . valoresCampos .)
    ?               reduce using rule 99 (atributos -> ID . valoresCampos .)
    :               reduce using rule 99 (atributos -> ID . valoresCampos .)
    }               reduce using rule 99 (atributos -> ID . valoresCampos .)


state 235

    (161) varAsig -> ID . ID . = valores
    (101) valoresCampos -> ID .

    =               shift and go to state 375
    [               reduce using rule 101 (valoresCampos -> ID .)


state 236

    (61) vecVal -> ID [ expresion . ]

    ]               shift and go to state 376


state 237

    (65) vecVal -> ID [ INT . ]
    (162) valoresMat -> INT .
    (234) tCompareEQ -> INT .
    (243) tCompare -> INT .

    ]               shift and go to state 377
    +               reduce using rule 162 (valoresMat -> INT .)
    -               reduce using rule 162 (valoresMat -> INT .)
    *               reduce using rule 162 (valoresMat -> INT .)
    /               reduce using rule 162 (valoresMat -> INT .)
    %               reduce using rule 162 (valoresMat -> INT .)
    ^               reduce using rule 162 (valoresMat -> INT .)
    EQEQ            reduce using rule 234 (tCompareEQ -> INT .)
    DISTINTO        reduce using rule 234 (tCompareEQ -> INT .)
    >               reduce using rule 243 (tCompare -> INT .)
    <               reduce using rule 243 (tCompare -> INT .)


state 238

    (64) vecVal -> atributos . [ expresion ]
    (68) vecVal -> atributos . [ INT ]
    (165) valoresMat -> atributos .

    [               shift and go to state 45
    +               reduce using rule 165 (valoresMat -> atributos .)
    -               reduce using rule 165 (valoresMat -> atributos .)
    *               reduce using rule 165 (valoresMat -> atributos .)
    /               reduce using rule 165 (valoresMat -> atributos .)
    %               reduce using rule 165 (valoresMat -> atributos .)
    ^               reduce using rule 165 (valoresMat -> atributos .)


state 239

    (236) tCompareEQ -> funcInt .
    (244) tCompare -> funcInt .
    (164) valoresMat -> funcInt .

    EQEQ            reduce using rule 236 (tCompareEQ -> funcInt .)
    DISTINTO        reduce using rule 236 (tCompareEQ -> funcInt .)
    AND             reduce using rule 236 (tCompareEQ -> funcInt .)
    OR              reduce using rule 236 (tCompareEQ -> funcInt .)
    ?               reduce using rule 236 (tCompareEQ -> funcInt .)
    ,               reduce using rule 236 (tCompareEQ -> funcInt .)
    ]               reduce using rule 236 (tCompareEQ -> funcInt .)
    )               reduce using rule 236 (tCompareEQ -> funcInt .)
    ;               reduce using rule 236 (tCompareEQ -> funcInt .)
    :               reduce using rule 236 (tCompareEQ -> funcInt .)
    }               reduce using rule 236 (tCompareEQ -> funcInt .)
    >               reduce using rule 244 (tCompare -> funcInt .)
    <               reduce using rule 244 (tCompare -> funcInt .)
    +               reduce using rule 164 (valoresMat -> funcInt .)
    -               reduce using rule 164 (valoresMat -> funcInt .)
    *               reduce using rule 164 (valoresMat -> funcInt .)
    /               reduce using rule 164 (valoresMat -> funcInt .)
    %               reduce using rule 164 (valoresMat -> funcInt .)
    ^               reduce using rule 164 (valoresMat -> funcInt .)


state 240

    (44) cosaBooleana -> valoresBool .
    (212) expBool -> valoresBool . OR and
    (214) expBool -> valoresBool . OR valoresBool
    (217) and -> valoresBool . AND eq
    (219) and -> valoresBool . AND valoresBool

    )               reduce using rule 44 (cosaBooleana -> valoresBool .)
    OR              shift and go to state 182
    AND             shift and go to state 181


state 241

    (237) tCompareEQ -> eMat .
    (171) eMat -> eMat . + p
    (173) eMat -> eMat . + valoresMat
    (176) eMat -> eMat . - p
    (178) eMat -> eMat . - valoresMat
    (240) tCompare -> eMat .

    EQEQ            reduce using rule 237 (tCompareEQ -> eMat .)
    DISTINTO        reduce using rule 237 (tCompareEQ -> eMat .)
    +               shift and go to state 184
    -               shift and go to state 185
    >               reduce using rule 240 (tCompare -> eMat .)
    <               reduce using rule 240 (tCompare -> eMat .)


state 242

    (209) valoresBool -> ( . ternarioBool )
    (238) tCompareEQ -> ( . ternarioBool )
    (239) tCompareEQ -> ( . ternarioMat )
    (246) tCompare -> ( . ternarioMat )
    (170) valoresMat -> ( . ternarioMat )
    (254) parenBool -> ( . expBool )
    (203) paren -> ( . eMat )
    (204) paren -> ( . valoresMat )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (53) funcBool -> . COLINEALES ( valores , valores )
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (58) vec -> . [ elem ]
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    STRING          shift and go to state 196
    (               shift and go to state 379
    BOOL            shift and go to state 202
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    COLINEALES      shift and go to state 4
    {               shift and go to state 35
    -               shift and go to state 83
    +               shift and go to state 82
    [               shift and go to state 22
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 189
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 190
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 378
    eMat                           shift and go to state 192
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 380
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    varsOps                        shift and go to state 195
    exp                            shift and go to state 105
    ternarioBool                   shift and go to state 339
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    expBool                        shift and go to state 381
    varYVals                       shift and go to state 205
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 206

state 243

    (6) lAbierta -> IF ( cosaBooleana . ) linea
    (7) lAbierta -> IF ( cosaBooleana . ) COMMENT com linea
    (8) lAbierta -> IF ( cosaBooleana . ) { g } ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> IF ( cosaBooleana . ) lCerrada ELSE lAbierta
    (11) lAbierta -> IF ( cosaBooleana . ) { g }
    (16) lCerrada -> IF ( cosaBooleana . ) { g } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE { g }
    (18) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana . ) { g } ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE lCerrada
    (21) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE COMMENT com lCerrada

    )               shift and go to state 382


state 244

    (234) tCompareEQ -> INT .
    (243) tCompare -> INT .
    (162) valoresMat -> INT .

    EQEQ            reduce using rule 234 (tCompareEQ -> INT .)
    DISTINTO        reduce using rule 234 (tCompareEQ -> INT .)
    AND             reduce using rule 234 (tCompareEQ -> INT .)
    OR              reduce using rule 234 (tCompareEQ -> INT .)
    ?               reduce using rule 234 (tCompareEQ -> INT .)
    ,               reduce using rule 234 (tCompareEQ -> INT .)
    ]               reduce using rule 234 (tCompareEQ -> INT .)
    )               reduce using rule 234 (tCompareEQ -> INT .)
    ;               reduce using rule 234 (tCompareEQ -> INT .)
    :               reduce using rule 234 (tCompareEQ -> INT .)
    }               reduce using rule 234 (tCompareEQ -> INT .)
    >               reduce using rule 243 (tCompare -> INT .)
    <               reduce using rule 243 (tCompare -> INT .)
    +               reduce using rule 162 (valoresMat -> INT .)
    -               reduce using rule 162 (valoresMat -> INT .)
    *               reduce using rule 162 (valoresMat -> INT .)
    /               reduce using rule 162 (valoresMat -> INT .)
    %               reduce using rule 162 (valoresMat -> INT .)
    ^               reduce using rule 162 (valoresMat -> INT .)


state 245

    (235) tCompareEQ -> FLOAT .
    (245) tCompare -> FLOAT .
    (163) valoresMat -> FLOAT .

    EQEQ            reduce using rule 235 (tCompareEQ -> FLOAT .)
    DISTINTO        reduce using rule 235 (tCompareEQ -> FLOAT .)
    AND             reduce using rule 235 (tCompareEQ -> FLOAT .)
    OR              reduce using rule 235 (tCompareEQ -> FLOAT .)
    ?               reduce using rule 235 (tCompareEQ -> FLOAT .)
    ,               reduce using rule 235 (tCompareEQ -> FLOAT .)
    ]               reduce using rule 235 (tCompareEQ -> FLOAT .)
    )               reduce using rule 235 (tCompareEQ -> FLOAT .)
    ;               reduce using rule 235 (tCompareEQ -> FLOAT .)
    :               reduce using rule 235 (tCompareEQ -> FLOAT .)
    }               reduce using rule 235 (tCompareEQ -> FLOAT .)
    >               reduce using rule 245 (tCompare -> FLOAT .)
    <               reduce using rule 245 (tCompare -> FLOAT .)
    +               reduce using rule 163 (valoresMat -> FLOAT .)
    -               reduce using rule 163 (valoresMat -> FLOAT .)
    *               reduce using rule 163 (valoresMat -> FLOAT .)
    /               reduce using rule 163 (valoresMat -> FLOAT .)
    %               reduce using rule 163 (valoresMat -> FLOAT .)
    ^               reduce using rule 163 (valoresMat -> FLOAT .)


state 246

    (208) valoresBool -> varsOps .
    (233) tCompareEQ -> varsOps .
    (241) tCompare -> varsOps .
    (169) valoresMat -> varsOps .

    AND             reduce using rule 208 (valoresBool -> varsOps .)
    OR              reduce using rule 208 (valoresBool -> varsOps .)
    ?               reduce using rule 208 (valoresBool -> varsOps .)
    ,               reduce using rule 208 (valoresBool -> varsOps .)
    ]               reduce using rule 208 (valoresBool -> varsOps .)
    )               reduce using rule 208 (valoresBool -> varsOps .)
    ;               reduce using rule 208 (valoresBool -> varsOps .)
    :               reduce using rule 208 (valoresBool -> varsOps .)
    }               reduce using rule 208 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 233 (tCompareEQ -> varsOps .)
    DISTINTO        reduce using rule 233 (tCompareEQ -> varsOps .)
    >               reduce using rule 241 (tCompare -> varsOps .)
    <               reduce using rule 241 (tCompare -> varsOps .)
    +               reduce using rule 169 (valoresMat -> varsOps .)
    -               reduce using rule 169 (valoresMat -> varsOps .)
    *               reduce using rule 169 (valoresMat -> varsOps .)
    /               reduce using rule 169 (valoresMat -> varsOps .)
    %               reduce using rule 169 (valoresMat -> varsOps .)
    ^               reduce using rule 169 (valoresMat -> varsOps .)


state 247

    (207) valoresBool -> varYVals .
    (232) tCompareEQ -> varYVals .
    (242) tCompare -> varYVals .
    (168) valoresMat -> varYVals .

    AND             reduce using rule 207 (valoresBool -> varYVals .)
    OR              reduce using rule 207 (valoresBool -> varYVals .)
    ?               reduce using rule 207 (valoresBool -> varYVals .)
    ,               reduce using rule 207 (valoresBool -> varYVals .)
    ]               reduce using rule 207 (valoresBool -> varYVals .)
    )               reduce using rule 207 (valoresBool -> varYVals .)
    ;               reduce using rule 207 (valoresBool -> varYVals .)
    :               reduce using rule 207 (valoresBool -> varYVals .)
    }               reduce using rule 207 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 232 (tCompareEQ -> varYVals .)
    DISTINTO        reduce using rule 232 (tCompareEQ -> varYVals .)
    >               reduce using rule 242 (tCompare -> varYVals .)
    <               reduce using rule 242 (tCompare -> varYVals .)
    +               reduce using rule 168 (valoresMat -> varYVals .)
    -               reduce using rule 168 (valoresMat -> varYVals .)
    *               reduce using rule 168 (valoresMat -> varYVals .)
    /               reduce using rule 168 (valoresMat -> varYVals .)
    %               reduce using rule 168 (valoresMat -> varYVals .)
    ^               reduce using rule 168 (valoresMat -> varYVals .)


state 248

    (43) cosaBooleana -> expBool .
    (211) expBool -> expBool . OR and
    (213) expBool -> expBool . OR valoresBool

    )               reduce using rule 43 (cosaBooleana -> expBool .)
    OR              shift and go to state 217


state 249

    (52) funcString -> CAPITALIZAR ( valores . )

    )               shift and go to state 383


state 250

    (50) funcInt -> MULTIESCALAR ( valores . , valores param )

    ,               shift and go to state 384


state 251

    (26) lCerrada -> loop COMMENT com . lCerrada
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (156) varAsig -> . variable MULEQ valores
    (157) varAsig -> . variable DIVEQ valores
    (158) varAsig -> . variable MASEQ valores
    (159) varAsig -> . variable MENOSEQ valores
    (160) varAsig -> . variable = valores
    (161) varAsig -> . ID . ID = valores
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    IF              shift and go to state 39
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 7
    FOR             shift and go to state 18
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    ID              shift and go to state 23
    PRINT           shift and go to state 8
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    [               shift and go to state 22
    {               shift and go to state 35

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 9
    sentencia                      shift and go to state 11
    atributos                      shift and go to state 6
    vec                            shift and go to state 36
    reg                            shift and go to state 13
    funcVoid                       shift and go to state 16
    func                           shift and go to state 20
    variable                       shift and go to state 21
    varAsig                        shift and go to state 25
    funcString                     shift and go to state 27
    funcReturn                     shift and go to state 28
    lCerrada                       shift and go to state 385
    varsOps                        shift and go to state 15
    loop                           shift and go to state 42

state 252

    (24) lCerrada -> loop { g . }

    }               shift and go to state 386


state 253

    (96) reg -> { campos } .

    .               reduce using rule 96 (reg -> { campos } .)
    ,               reduce using rule 96 (reg -> { campos } .)
    ]               reduce using rule 96 (reg -> { campos } .)
    )               reduce using rule 96 (reg -> { campos } .)
    ;               reduce using rule 96 (reg -> { campos } .)
    :               reduce using rule 96 (reg -> { campos } .)
    }               reduce using rule 96 (reg -> { campos } .)


state 254

    (97) campos -> ID : . valores , campos
    (98) campos -> ID : . valores
    (82) valores -> . varYVals
    (83) valores -> . varsOps
    (84) valores -> . eMat
    (85) valores -> . expBool
    (86) valores -> . funcReturn
    (87) valores -> . reg
    (88) valores -> . INT
    (89) valores -> . FLOAT
    (90) valores -> . STRING
    (91) valores -> . BOOL
    (92) valores -> . ternario
    (93) valores -> . atributos
    (94) valores -> . vec
    (95) valores -> . RES
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (96) reg -> . { campos }
    (106) ternario -> . ternarioMat
    (107) ternario -> . ternarioBool
    (108) ternario -> . ( ternarioMat )
    (109) ternario -> . ( ternarioBool )
    (110) ternario -> . ternarioVars
    (111) ternario -> . ( ternarioVars )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 97
    FLOAT           shift and go to state 99
    STRING          shift and go to state 77
    BOOL            shift and go to state 102
    RES             shift and go to state 68
    ID              shift and go to state 95
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    {               shift and go to state 35
    (               shift and go to state 81
    [               shift and go to state 22
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    ?               reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    ternario                       shift and go to state 66
    funcBool                       shift and go to state 67
    funcInt                        shift and go to state 69
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 79
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 84
    vec                            shift and go to state 85
    paren                          shift and go to state 93
    reg                            shift and go to state 87
    expBool                        shift and go to state 88
    ternarioBool                   shift and go to state 89
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 96
    funcReturn                     shift and go to state 98
    valores                        shift and go to state 387
    p                              shift and go to state 101
    varsOps                        shift and go to state 103
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 73
    varYVals                       shift and go to state 106
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 107

state 255

    (62) vecVal -> vec [ expresion . ]

    ]               shift and go to state 388


state 256

    (66) vecVal -> vec [ INT . ]
    (162) valoresMat -> INT .
    (234) tCompareEQ -> INT .
    (243) tCompare -> INT .

    ]               shift and go to state 389
    +               reduce using rule 162 (valoresMat -> INT .)
    -               reduce using rule 162 (valoresMat -> INT .)
    *               reduce using rule 162 (valoresMat -> INT .)
    /               reduce using rule 162 (valoresMat -> INT .)
    %               reduce using rule 162 (valoresMat -> INT .)
    ^               reduce using rule 162 (valoresMat -> INT .)
    EQEQ            reduce using rule 234 (tCompareEQ -> INT .)
    DISTINTO        reduce using rule 234 (tCompareEQ -> INT .)
    >               reduce using rule 243 (tCompare -> INT .)
    <               reduce using rule 243 (tCompare -> INT .)


state 257

    (14) com -> COMMENT com .

    IF              reduce using rule 14 (com -> COMMENT com .)
    DO              reduce using rule 14 (com -> COMMENT com .)
    RETURN          reduce using rule 14 (com -> COMMENT com .)
    ;               reduce using rule 14 (com -> COMMENT com .)
    WHILE           reduce using rule 14 (com -> COMMENT com .)
    FOR             reduce using rule 14 (com -> COMMENT com .)
    MENOSMENOS      reduce using rule 14 (com -> COMMENT com .)
    MASMAS          reduce using rule 14 (com -> COMMENT com .)
    ID              reduce using rule 14 (com -> COMMENT com .)
    PRINT           reduce using rule 14 (com -> COMMENT com .)
    MULTIESCALAR    reduce using rule 14 (com -> COMMENT com .)
    LENGTH          reduce using rule 14 (com -> COMMENT com .)
    CAPITALIZAR     reduce using rule 14 (com -> COMMENT com .)
    COLINEALES      reduce using rule 14 (com -> COMMENT com .)
    [               reduce using rule 14 (com -> COMMENT com .)
    {               reduce using rule 14 (com -> COMMENT com .)


state 258

    (29) lCerrada -> DO COMMENT com lCerrada . WHILE ( valores ) ;

    WHILE           shift and go to state 390


state 259

    (16) lCerrada -> IF ( cosaBooleana . ) { g } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE { g }
    (18) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana . ) { g } ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE lCerrada
    (21) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE COMMENT com lCerrada

    )               shift and go to state 391


state 260

    (28) lCerrada -> DO lCerrada WHILE ( . valores ) ;
    (82) valores -> . varYVals
    (83) valores -> . varsOps
    (84) valores -> . eMat
    (85) valores -> . expBool
    (86) valores -> . funcReturn
    (87) valores -> . reg
    (88) valores -> . INT
    (89) valores -> . FLOAT
    (90) valores -> . STRING
    (91) valores -> . BOOL
    (92) valores -> . ternario
    (93) valores -> . atributos
    (94) valores -> . vec
    (95) valores -> . RES
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (96) reg -> . { campos }
    (106) ternario -> . ternarioMat
    (107) ternario -> . ternarioBool
    (108) ternario -> . ( ternarioMat )
    (109) ternario -> . ( ternarioBool )
    (110) ternario -> . ternarioVars
    (111) ternario -> . ( ternarioVars )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 97
    FLOAT           shift and go to state 99
    STRING          shift and go to state 77
    BOOL            shift and go to state 102
    RES             shift and go to state 68
    ID              shift and go to state 95
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    {               shift and go to state 35
    (               shift and go to state 81
    [               shift and go to state 22
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    ?               reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    ternario                       shift and go to state 66
    funcBool                       shift and go to state 67
    funcInt                        shift and go to state 69
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 79
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 84
    vec                            shift and go to state 85
    paren                          shift and go to state 93
    reg                            shift and go to state 87
    expBool                        shift and go to state 88
    ternarioBool                   shift and go to state 89
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 96
    funcReturn                     shift and go to state 98
    valores                        shift and go to state 392
    p                              shift and go to state 101
    varsOps                        shift and go to state 103
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 73
    varYVals                       shift and go to state 106
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 107

state 261

    (27) lCerrada -> DO { g } . WHILE ( valores ) ;

    WHILE           shift and go to state 393


state 262

    (53) funcBool -> COLINEALES ( valores , . valores )
    (82) valores -> . varYVals
    (83) valores -> . varsOps
    (84) valores -> . eMat
    (85) valores -> . expBool
    (86) valores -> . funcReturn
    (87) valores -> . reg
    (88) valores -> . INT
    (89) valores -> . FLOAT
    (90) valores -> . STRING
    (91) valores -> . BOOL
    (92) valores -> . ternario
    (93) valores -> . atributos
    (94) valores -> . vec
    (95) valores -> . RES
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (96) reg -> . { campos }
    (106) ternario -> . ternarioMat
    (107) ternario -> . ternarioBool
    (108) ternario -> . ( ternarioMat )
    (109) ternario -> . ( ternarioBool )
    (110) ternario -> . ternarioVars
    (111) ternario -> . ( ternarioVars )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 97
    FLOAT           shift and go to state 99
    STRING          shift and go to state 77
    BOOL            shift and go to state 102
    RES             shift and go to state 68
    ID              shift and go to state 95
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    {               shift and go to state 35
    (               shift and go to state 81
    [               shift and go to state 22
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    ?               reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    ternario                       shift and go to state 66
    funcBool                       shift and go to state 67
    funcInt                        shift and go to state 69
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 79
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 84
    vec                            shift and go to state 85
    paren                          shift and go to state 93
    reg                            shift and go to state 87
    expBool                        shift and go to state 88
    ternarioBool                   shift and go to state 89
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 96
    funcReturn                     shift and go to state 98
    valores                        shift and go to state 394
    p                              shift and go to state 101
    varsOps                        shift and go to state 103
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 73
    varYVals                       shift and go to state 106
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 107

state 263

    (64) vecVal -> atributos [ expresion ] .

    .               reduce using rule 64 (vecVal -> atributos [ expresion ] .)
    [               reduce using rule 64 (vecVal -> atributos [ expresion ] .)
    ,               reduce using rule 64 (vecVal -> atributos [ expresion ] .)
    ]               reduce using rule 64 (vecVal -> atributos [ expresion ] .)
    )               reduce using rule 64 (vecVal -> atributos [ expresion ] .)
    ;               reduce using rule 64 (vecVal -> atributos [ expresion ] .)
    :               reduce using rule 64 (vecVal -> atributos [ expresion ] .)
    }               reduce using rule 64 (vecVal -> atributos [ expresion ] .)
    ?               reduce using rule 64 (vecVal -> atributos [ expresion ] .)
    OR              reduce using rule 64 (vecVal -> atributos [ expresion ] .)
    AND             reduce using rule 64 (vecVal -> atributos [ expresion ] .)
    +               reduce using rule 64 (vecVal -> atributos [ expresion ] .)
    -               reduce using rule 64 (vecVal -> atributos [ expresion ] .)
    *               reduce using rule 64 (vecVal -> atributos [ expresion ] .)
    /               reduce using rule 64 (vecVal -> atributos [ expresion ] .)
    %               reduce using rule 64 (vecVal -> atributos [ expresion ] .)
    ^               reduce using rule 64 (vecVal -> atributos [ expresion ] .)
    EQEQ            reduce using rule 64 (vecVal -> atributos [ expresion ] .)
    DISTINTO        reduce using rule 64 (vecVal -> atributos [ expresion ] .)
    >               reduce using rule 64 (vecVal -> atributos [ expresion ] .)
    <               reduce using rule 64 (vecVal -> atributos [ expresion ] .)
    MASMAS          reduce using rule 64 (vecVal -> atributos [ expresion ] .)
    MENOSMENOS      reduce using rule 64 (vecVal -> atributos [ expresion ] .)
    MULEQ           reduce using rule 64 (vecVal -> atributos [ expresion ] .)
    DIVEQ           reduce using rule 64 (vecVal -> atributos [ expresion ] .)
    MASEQ           reduce using rule 64 (vecVal -> atributos [ expresion ] .)
    MENOSEQ         reduce using rule 64 (vecVal -> atributos [ expresion ] .)
    =               reduce using rule 64 (vecVal -> atributos [ expresion ] .)


state 264

    (68) vecVal -> atributos [ INT ] .

    .               reduce using rule 68 (vecVal -> atributos [ INT ] .)
    [               reduce using rule 68 (vecVal -> atributos [ INT ] .)
    ,               reduce using rule 68 (vecVal -> atributos [ INT ] .)
    ]               reduce using rule 68 (vecVal -> atributos [ INT ] .)
    )               reduce using rule 68 (vecVal -> atributos [ INT ] .)
    ;               reduce using rule 68 (vecVal -> atributos [ INT ] .)
    :               reduce using rule 68 (vecVal -> atributos [ INT ] .)
    }               reduce using rule 68 (vecVal -> atributos [ INT ] .)
    ?               reduce using rule 68 (vecVal -> atributos [ INT ] .)
    OR              reduce using rule 68 (vecVal -> atributos [ INT ] .)
    AND             reduce using rule 68 (vecVal -> atributos [ INT ] .)
    +               reduce using rule 68 (vecVal -> atributos [ INT ] .)
    -               reduce using rule 68 (vecVal -> atributos [ INT ] .)
    *               reduce using rule 68 (vecVal -> atributos [ INT ] .)
    /               reduce using rule 68 (vecVal -> atributos [ INT ] .)
    %               reduce using rule 68 (vecVal -> atributos [ INT ] .)
    ^               reduce using rule 68 (vecVal -> atributos [ INT ] .)
    EQEQ            reduce using rule 68 (vecVal -> atributos [ INT ] .)
    DISTINTO        reduce using rule 68 (vecVal -> atributos [ INT ] .)
    >               reduce using rule 68 (vecVal -> atributos [ INT ] .)
    <               reduce using rule 68 (vecVal -> atributos [ INT ] .)
    MASMAS          reduce using rule 68 (vecVal -> atributos [ INT ] .)
    MENOSMENOS      reduce using rule 68 (vecVal -> atributos [ INT ] .)
    MULEQ           reduce using rule 68 (vecVal -> atributos [ INT ] .)
    DIVEQ           reduce using rule 68 (vecVal -> atributos [ INT ] .)
    MASEQ           reduce using rule 68 (vecVal -> atributos [ INT ] .)
    MENOSEQ         reduce using rule 68 (vecVal -> atributos [ INT ] .)
    =               reduce using rule 68 (vecVal -> atributos [ INT ] .)


state 265

    (35) loop -> WHILE ( valores ) .

    {               reduce using rule 35 (loop -> WHILE ( valores ) .)
    COMMENT         reduce using rule 35 (loop -> WHILE ( valores ) .)
    IF              reduce using rule 35 (loop -> WHILE ( valores ) .)
    DO              reduce using rule 35 (loop -> WHILE ( valores ) .)
    RETURN          reduce using rule 35 (loop -> WHILE ( valores ) .)
    ;               reduce using rule 35 (loop -> WHILE ( valores ) .)
    WHILE           reduce using rule 35 (loop -> WHILE ( valores ) .)
    FOR             reduce using rule 35 (loop -> WHILE ( valores ) .)
    MENOSMENOS      reduce using rule 35 (loop -> WHILE ( valores ) .)
    MASMAS          reduce using rule 35 (loop -> WHILE ( valores ) .)
    ID              reduce using rule 35 (loop -> WHILE ( valores ) .)
    PRINT           reduce using rule 35 (loop -> WHILE ( valores ) .)
    MULTIESCALAR    reduce using rule 35 (loop -> WHILE ( valores ) .)
    LENGTH          reduce using rule 35 (loop -> WHILE ( valores ) .)
    CAPITALIZAR     reduce using rule 35 (loop -> WHILE ( valores ) .)
    COLINEALES      reduce using rule 35 (loop -> WHILE ( valores ) .)
    [               reduce using rule 35 (loop -> WHILE ( valores ) .)


state 266

    (54) funcVoid -> PRINT ( valores ) .

    ;               reduce using rule 54 (funcVoid -> PRINT ( valores ) .)
    )               reduce using rule 54 (funcVoid -> PRINT ( valores ) .)


state 267

    (148) varYVals -> vecVal . . varYVals
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    ID              shift and go to state 150
    [               shift and go to state 22
    {               shift and go to state 35

    reg                            shift and go to state 13
    vec                            shift and go to state 36
    varYVals                       shift and go to state 395
    vecVal                         shift and go to state 148
    atributos                      shift and go to state 6

state 268

    (63) vecVal -> vecVal [ expresion ] .

    .               reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    [               reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    ,               reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    ]               reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    )               reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    ;               reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    :               reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    }               reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    ?               reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    OR              reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    AND             reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    +               reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    -               reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    *               reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    /               reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    %               reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    ^               reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    EQEQ            reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    DISTINTO        reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    >               reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    <               reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    MASMAS          reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    MENOSMENOS      reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    MULEQ           reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    DIVEQ           reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    MASEQ           reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    MENOSEQ         reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    =               reduce using rule 63 (vecVal -> vecVal [ expresion ] .)


state 269

    (67) vecVal -> vecVal [ INT ] .

    .               reduce using rule 67 (vecVal -> vecVal [ INT ] .)
    [               reduce using rule 67 (vecVal -> vecVal [ INT ] .)
    ,               reduce using rule 67 (vecVal -> vecVal [ INT ] .)
    ]               reduce using rule 67 (vecVal -> vecVal [ INT ] .)
    )               reduce using rule 67 (vecVal -> vecVal [ INT ] .)
    ;               reduce using rule 67 (vecVal -> vecVal [ INT ] .)
    :               reduce using rule 67 (vecVal -> vecVal [ INT ] .)
    }               reduce using rule 67 (vecVal -> vecVal [ INT ] .)
    ?               reduce using rule 67 (vecVal -> vecVal [ INT ] .)
    OR              reduce using rule 67 (vecVal -> vecVal [ INT ] .)
    AND             reduce using rule 67 (vecVal -> vecVal [ INT ] .)
    +               reduce using rule 67 (vecVal -> vecVal [ INT ] .)
    -               reduce using rule 67 (vecVal -> vecVal [ INT ] .)
    *               reduce using rule 67 (vecVal -> vecVal [ INT ] .)
    /               reduce using rule 67 (vecVal -> vecVal [ INT ] .)
    %               reduce using rule 67 (vecVal -> vecVal [ INT ] .)
    ^               reduce using rule 67 (vecVal -> vecVal [ INT ] .)
    EQEQ            reduce using rule 67 (vecVal -> vecVal [ INT ] .)
    DISTINTO        reduce using rule 67 (vecVal -> vecVal [ INT ] .)
    >               reduce using rule 67 (vecVal -> vecVal [ INT ] .)
    <               reduce using rule 67 (vecVal -> vecVal [ INT ] .)
    MASMAS          reduce using rule 67 (vecVal -> vecVal [ INT ] .)
    MENOSMENOS      reduce using rule 67 (vecVal -> vecVal [ INT ] .)
    MULEQ           reduce using rule 67 (vecVal -> vecVal [ INT ] .)
    DIVEQ           reduce using rule 67 (vecVal -> vecVal [ INT ] .)
    MASEQ           reduce using rule 67 (vecVal -> vecVal [ INT ] .)
    MENOSEQ         reduce using rule 67 (vecVal -> vecVal [ INT ] .)
    =               reduce using rule 67 (vecVal -> vecVal [ INT ] .)


state 270

    (36) loop -> FOR ( primParam ; . valores ; tercerParam )
    (82) valores -> . varYVals
    (83) valores -> . varsOps
    (84) valores -> . eMat
    (85) valores -> . expBool
    (86) valores -> . funcReturn
    (87) valores -> . reg
    (88) valores -> . INT
    (89) valores -> . FLOAT
    (90) valores -> . STRING
    (91) valores -> . BOOL
    (92) valores -> . ternario
    (93) valores -> . atributos
    (94) valores -> . vec
    (95) valores -> . RES
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (96) reg -> . { campos }
    (106) ternario -> . ternarioMat
    (107) ternario -> . ternarioBool
    (108) ternario -> . ( ternarioMat )
    (109) ternario -> . ( ternarioBool )
    (110) ternario -> . ternarioVars
    (111) ternario -> . ( ternarioVars )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 97
    FLOAT           shift and go to state 99
    STRING          shift and go to state 77
    BOOL            shift and go to state 102
    RES             shift and go to state 68
    ID              shift and go to state 95
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    {               shift and go to state 35
    (               shift and go to state 81
    [               shift and go to state 22
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    ?               reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    ternario                       shift and go to state 66
    funcBool                       shift and go to state 67
    funcInt                        shift and go to state 69
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 79
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 84
    vec                            shift and go to state 85
    paren                          shift and go to state 93
    reg                            shift and go to state 87
    expBool                        shift and go to state 88
    ternarioBool                   shift and go to state 89
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 96
    funcReturn                     shift and go to state 98
    valores                        shift and go to state 396
    p                              shift and go to state 101
    varsOps                        shift and go to state 103
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 73
    varYVals                       shift and go to state 106
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 107

state 271

    (51) funcInt -> LENGTH ( valores ) .

    ;               reduce using rule 51 (funcInt -> LENGTH ( valores ) .)
    ,               reduce using rule 51 (funcInt -> LENGTH ( valores ) .)
    ]               reduce using rule 51 (funcInt -> LENGTH ( valores ) .)
    )               reduce using rule 51 (funcInt -> LENGTH ( valores ) .)
    :               reduce using rule 51 (funcInt -> LENGTH ( valores ) .)
    }               reduce using rule 51 (funcInt -> LENGTH ( valores ) .)
    +               reduce using rule 51 (funcInt -> LENGTH ( valores ) .)
    -               reduce using rule 51 (funcInt -> LENGTH ( valores ) .)
    *               reduce using rule 51 (funcInt -> LENGTH ( valores ) .)
    /               reduce using rule 51 (funcInt -> LENGTH ( valores ) .)
    %               reduce using rule 51 (funcInt -> LENGTH ( valores ) .)
    ^               reduce using rule 51 (funcInt -> LENGTH ( valores ) .)
    EQEQ            reduce using rule 51 (funcInt -> LENGTH ( valores ) .)
    DISTINTO        reduce using rule 51 (funcInt -> LENGTH ( valores ) .)
    >               reduce using rule 51 (funcInt -> LENGTH ( valores ) .)
    <               reduce using rule 51 (funcInt -> LENGTH ( valores ) .)
    AND             reduce using rule 51 (funcInt -> LENGTH ( valores ) .)
    OR              reduce using rule 51 (funcInt -> LENGTH ( valores ) .)
    ?               reduce using rule 51 (funcInt -> LENGTH ( valores ) .)


state 272

    (216) and -> and AND eq .
    (221) eq -> eq . EQEQ mayor
    (222) eq -> eq . DISTINTO mayor
    (225) eq -> eq . EQEQ tCompareEQ
    (226) eq -> eq . DISTINTO tCompareEQ

    AND             reduce using rule 216 (and -> and AND eq .)
    ?               reduce using rule 216 (and -> and AND eq .)
    OR              reduce using rule 216 (and -> and AND eq .)
    :               reduce using rule 216 (and -> and AND eq .)
    )               reduce using rule 216 (and -> and AND eq .)
    ,               reduce using rule 216 (and -> and AND eq .)
    ]               reduce using rule 216 (and -> and AND eq .)
    ;               reduce using rule 216 (and -> and AND eq .)
    }               reduce using rule 216 (and -> and AND eq .)
    EQEQ            shift and go to state 178
    DISTINTO        shift and go to state 179


state 273

    (218) and -> and AND valoresBool .

    AND             reduce using rule 218 (and -> and AND valoresBool .)
    ?               reduce using rule 218 (and -> and AND valoresBool .)
    OR              reduce using rule 218 (and -> and AND valoresBool .)
    :               reduce using rule 218 (and -> and AND valoresBool .)
    )               reduce using rule 218 (and -> and AND valoresBool .)
    ,               reduce using rule 218 (and -> and AND valoresBool .)
    ]               reduce using rule 218 (and -> and AND valoresBool .)
    ;               reduce using rule 218 (and -> and AND valoresBool .)
    }               reduce using rule 218 (and -> and AND valoresBool .)


state 274

    (59) elem -> valores , elem .

    ]               reduce using rule 59 (elem -> valores , elem .)


state 275

    (191) p -> valoresMat % valoresMat .
    (194) exp -> valoresMat . ^ iSing
    (196) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 191 (p -> valoresMat % valoresMat .)
    /               reduce using rule 191 (p -> valoresMat % valoresMat .)
    %               reduce using rule 191 (p -> valoresMat % valoresMat .)
    +               reduce using rule 191 (p -> valoresMat % valoresMat .)
    -               reduce using rule 191 (p -> valoresMat % valoresMat .)
    )               reduce using rule 191 (p -> valoresMat % valoresMat .)
    :               reduce using rule 191 (p -> valoresMat % valoresMat .)
    EQEQ            reduce using rule 191 (p -> valoresMat % valoresMat .)
    DISTINTO        reduce using rule 191 (p -> valoresMat % valoresMat .)
    >               reduce using rule 191 (p -> valoresMat % valoresMat .)
    <               reduce using rule 191 (p -> valoresMat % valoresMat .)
    ,               reduce using rule 191 (p -> valoresMat % valoresMat .)
    }               reduce using rule 191 (p -> valoresMat % valoresMat .)
    ]               reduce using rule 191 (p -> valoresMat % valoresMat .)
    ;               reduce using rule 191 (p -> valoresMat % valoresMat .)
    AND             reduce using rule 191 (p -> valoresMat % valoresMat .)
    OR              reduce using rule 191 (p -> valoresMat % valoresMat .)
    ?               reduce using rule 191 (p -> valoresMat % valoresMat .)
    ^               shift and go to state 177


state 276

    (170) valoresMat -> ( . ternarioMat )
    (203) paren -> ( . eMat )
    (204) paren -> ( . valoresMat )
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (53) funcBool -> . COLINEALES ( valores , valores )
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (58) vec -> . [ elem ]
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    STRING          shift and go to state 196
    (               shift and go to state 193
    BOOL            shift and go to state 202
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    COLINEALES      shift and go to state 4
    {               shift and go to state 35
    -               shift and go to state 83
    +               shift and go to state 82
    [               shift and go to state 22
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 189
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 190
    eq                             shift and go to state 75
    vecVal                         shift and go to state 76
    eMat                           shift and go to state 192
    tCompareEQ                     shift and go to state 80
    valoresBool                    shift and go to state 345
    ternarioMat                    shift and go to state 347
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    varsOps                        shift and go to state 195
    exp                            shift and go to state 105
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    expBool                        shift and go to state 348
    varYVals                       shift and go to state 205
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 206

state 277

    (185) p -> valoresMat % exp .
    (193) exp -> exp . ^ iSing
    (195) exp -> exp . ^ valoresMat

    *               reduce using rule 185 (p -> valoresMat % exp .)
    /               reduce using rule 185 (p -> valoresMat % exp .)
    %               reduce using rule 185 (p -> valoresMat % exp .)
    +               reduce using rule 185 (p -> valoresMat % exp .)
    -               reduce using rule 185 (p -> valoresMat % exp .)
    )               reduce using rule 185 (p -> valoresMat % exp .)
    :               reduce using rule 185 (p -> valoresMat % exp .)
    EQEQ            reduce using rule 185 (p -> valoresMat % exp .)
    DISTINTO        reduce using rule 185 (p -> valoresMat % exp .)
    >               reduce using rule 185 (p -> valoresMat % exp .)
    <               reduce using rule 185 (p -> valoresMat % exp .)
    ,               reduce using rule 185 (p -> valoresMat % exp .)
    }               reduce using rule 185 (p -> valoresMat % exp .)
    ]               reduce using rule 185 (p -> valoresMat % exp .)
    ;               reduce using rule 185 (p -> valoresMat % exp .)
    AND             reduce using rule 185 (p -> valoresMat % exp .)
    OR              reduce using rule 185 (p -> valoresMat % exp .)
    ?               reduce using rule 185 (p -> valoresMat % exp .)
    ^               shift and go to state 233


state 278

    (174) eMat -> valoresMat + valoresMat .
    (183) p -> valoresMat . * exp
    (184) p -> valoresMat . / exp
    (185) p -> valoresMat . % exp
    (189) p -> valoresMat . * valoresMat
    (190) p -> valoresMat . / valoresMat
    (191) p -> valoresMat . % valoresMat
    (194) exp -> valoresMat . ^ iSing
    (196) exp -> valoresMat . ^ valoresMat

    +               reduce using rule 174 (eMat -> valoresMat + valoresMat .)
    -               reduce using rule 174 (eMat -> valoresMat + valoresMat .)
    EQEQ            reduce using rule 174 (eMat -> valoresMat + valoresMat .)
    DISTINTO        reduce using rule 174 (eMat -> valoresMat + valoresMat .)
    >               reduce using rule 174 (eMat -> valoresMat + valoresMat .)
    <               reduce using rule 174 (eMat -> valoresMat + valoresMat .)
    )               reduce using rule 174 (eMat -> valoresMat + valoresMat .)
    :               reduce using rule 174 (eMat -> valoresMat + valoresMat .)
    ,               reduce using rule 174 (eMat -> valoresMat + valoresMat .)
    ]               reduce using rule 174 (eMat -> valoresMat + valoresMat .)
    }               reduce using rule 174 (eMat -> valoresMat + valoresMat .)
    AND             reduce using rule 174 (eMat -> valoresMat + valoresMat .)
    OR              reduce using rule 174 (eMat -> valoresMat + valoresMat .)
    ?               reduce using rule 174 (eMat -> valoresMat + valoresMat .)
    ;               reduce using rule 174 (eMat -> valoresMat + valoresMat .)
    *               shift and go to state 174
    /               shift and go to state 176
    %               shift and go to state 172
    ^               shift and go to state 177


state 279

    (172) eMat -> valoresMat + p .
    (180) p -> p . * exp
    (181) p -> p . / exp
    (182) p -> p . % exp
    (186) p -> p . * valoresMat
    (187) p -> p . / valoresMat
    (188) p -> p . % valoresMat

    +               reduce using rule 172 (eMat -> valoresMat + p .)
    -               reduce using rule 172 (eMat -> valoresMat + p .)
    EQEQ            reduce using rule 172 (eMat -> valoresMat + p .)
    DISTINTO        reduce using rule 172 (eMat -> valoresMat + p .)
    >               reduce using rule 172 (eMat -> valoresMat + p .)
    <               reduce using rule 172 (eMat -> valoresMat + p .)
    )               reduce using rule 172 (eMat -> valoresMat + p .)
    :               reduce using rule 172 (eMat -> valoresMat + p .)
    ,               reduce using rule 172 (eMat -> valoresMat + p .)
    ]               reduce using rule 172 (eMat -> valoresMat + p .)
    }               reduce using rule 172 (eMat -> valoresMat + p .)
    AND             reduce using rule 172 (eMat -> valoresMat + p .)
    OR              reduce using rule 172 (eMat -> valoresMat + p .)
    ?               reduce using rule 172 (eMat -> valoresMat + p .)
    ;               reduce using rule 172 (eMat -> valoresMat + p .)
    *               shift and go to state 223
    /               shift and go to state 224
    %               shift and go to state 222


state 280

    (189) p -> valoresMat * valoresMat .
    (194) exp -> valoresMat . ^ iSing
    (196) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 189 (p -> valoresMat * valoresMat .)
    /               reduce using rule 189 (p -> valoresMat * valoresMat .)
    %               reduce using rule 189 (p -> valoresMat * valoresMat .)
    +               reduce using rule 189 (p -> valoresMat * valoresMat .)
    -               reduce using rule 189 (p -> valoresMat * valoresMat .)
    )               reduce using rule 189 (p -> valoresMat * valoresMat .)
    :               reduce using rule 189 (p -> valoresMat * valoresMat .)
    EQEQ            reduce using rule 189 (p -> valoresMat * valoresMat .)
    DISTINTO        reduce using rule 189 (p -> valoresMat * valoresMat .)
    >               reduce using rule 189 (p -> valoresMat * valoresMat .)
    <               reduce using rule 189 (p -> valoresMat * valoresMat .)
    ,               reduce using rule 189 (p -> valoresMat * valoresMat .)
    }               reduce using rule 189 (p -> valoresMat * valoresMat .)
    ]               reduce using rule 189 (p -> valoresMat * valoresMat .)
    ;               reduce using rule 189 (p -> valoresMat * valoresMat .)
    AND             reduce using rule 189 (p -> valoresMat * valoresMat .)
    OR              reduce using rule 189 (p -> valoresMat * valoresMat .)
    ?               reduce using rule 189 (p -> valoresMat * valoresMat .)
    ^               shift and go to state 177


state 281

    (183) p -> valoresMat * exp .
    (193) exp -> exp . ^ iSing
    (195) exp -> exp . ^ valoresMat

    *               reduce using rule 183 (p -> valoresMat * exp .)
    /               reduce using rule 183 (p -> valoresMat * exp .)
    %               reduce using rule 183 (p -> valoresMat * exp .)
    +               reduce using rule 183 (p -> valoresMat * exp .)
    -               reduce using rule 183 (p -> valoresMat * exp .)
    )               reduce using rule 183 (p -> valoresMat * exp .)
    :               reduce using rule 183 (p -> valoresMat * exp .)
    EQEQ            reduce using rule 183 (p -> valoresMat * exp .)
    DISTINTO        reduce using rule 183 (p -> valoresMat * exp .)
    >               reduce using rule 183 (p -> valoresMat * exp .)
    <               reduce using rule 183 (p -> valoresMat * exp .)
    ,               reduce using rule 183 (p -> valoresMat * exp .)
    }               reduce using rule 183 (p -> valoresMat * exp .)
    ]               reduce using rule 183 (p -> valoresMat * exp .)
    ;               reduce using rule 183 (p -> valoresMat * exp .)
    AND             reduce using rule 183 (p -> valoresMat * exp .)
    OR              reduce using rule 183 (p -> valoresMat * exp .)
    ?               reduce using rule 183 (p -> valoresMat * exp .)
    ^               shift and go to state 233


state 282

    (179) eMat -> valoresMat - valoresMat .
    (183) p -> valoresMat . * exp
    (184) p -> valoresMat . / exp
    (185) p -> valoresMat . % exp
    (189) p -> valoresMat . * valoresMat
    (190) p -> valoresMat . / valoresMat
    (191) p -> valoresMat . % valoresMat
    (194) exp -> valoresMat . ^ iSing
    (196) exp -> valoresMat . ^ valoresMat

    +               reduce using rule 179 (eMat -> valoresMat - valoresMat .)
    -               reduce using rule 179 (eMat -> valoresMat - valoresMat .)
    EQEQ            reduce using rule 179 (eMat -> valoresMat - valoresMat .)
    DISTINTO        reduce using rule 179 (eMat -> valoresMat - valoresMat .)
    >               reduce using rule 179 (eMat -> valoresMat - valoresMat .)
    <               reduce using rule 179 (eMat -> valoresMat - valoresMat .)
    )               reduce using rule 179 (eMat -> valoresMat - valoresMat .)
    :               reduce using rule 179 (eMat -> valoresMat - valoresMat .)
    ,               reduce using rule 179 (eMat -> valoresMat - valoresMat .)
    ]               reduce using rule 179 (eMat -> valoresMat - valoresMat .)
    }               reduce using rule 179 (eMat -> valoresMat - valoresMat .)
    AND             reduce using rule 179 (eMat -> valoresMat - valoresMat .)
    OR              reduce using rule 179 (eMat -> valoresMat - valoresMat .)
    ?               reduce using rule 179 (eMat -> valoresMat - valoresMat .)
    ;               reduce using rule 179 (eMat -> valoresMat - valoresMat .)
    *               shift and go to state 174
    /               shift and go to state 176
    %               shift and go to state 172
    ^               shift and go to state 177


state 283

    (177) eMat -> valoresMat - p .
    (180) p -> p . * exp
    (181) p -> p . / exp
    (182) p -> p . % exp
    (186) p -> p . * valoresMat
    (187) p -> p . / valoresMat
    (188) p -> p . % valoresMat

    +               reduce using rule 177 (eMat -> valoresMat - p .)
    -               reduce using rule 177 (eMat -> valoresMat - p .)
    EQEQ            reduce using rule 177 (eMat -> valoresMat - p .)
    DISTINTO        reduce using rule 177 (eMat -> valoresMat - p .)
    >               reduce using rule 177 (eMat -> valoresMat - p .)
    <               reduce using rule 177 (eMat -> valoresMat - p .)
    )               reduce using rule 177 (eMat -> valoresMat - p .)
    :               reduce using rule 177 (eMat -> valoresMat - p .)
    ,               reduce using rule 177 (eMat -> valoresMat - p .)
    ]               reduce using rule 177 (eMat -> valoresMat - p .)
    }               reduce using rule 177 (eMat -> valoresMat - p .)
    AND             reduce using rule 177 (eMat -> valoresMat - p .)
    OR              reduce using rule 177 (eMat -> valoresMat - p .)
    ?               reduce using rule 177 (eMat -> valoresMat - p .)
    ;               reduce using rule 177 (eMat -> valoresMat - p .)
    *               shift and go to state 223
    /               shift and go to state 224
    %               shift and go to state 222


state 284

    (190) p -> valoresMat / valoresMat .
    (194) exp -> valoresMat . ^ iSing
    (196) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 190 (p -> valoresMat / valoresMat .)
    /               reduce using rule 190 (p -> valoresMat / valoresMat .)
    %               reduce using rule 190 (p -> valoresMat / valoresMat .)
    +               reduce using rule 190 (p -> valoresMat / valoresMat .)
    -               reduce using rule 190 (p -> valoresMat / valoresMat .)
    )               reduce using rule 190 (p -> valoresMat / valoresMat .)
    :               reduce using rule 190 (p -> valoresMat / valoresMat .)
    EQEQ            reduce using rule 190 (p -> valoresMat / valoresMat .)
    DISTINTO        reduce using rule 190 (p -> valoresMat / valoresMat .)
    >               reduce using rule 190 (p -> valoresMat / valoresMat .)
    <               reduce using rule 190 (p -> valoresMat / valoresMat .)
    ,               reduce using rule 190 (p -> valoresMat / valoresMat .)
    }               reduce using rule 190 (p -> valoresMat / valoresMat .)
    ]               reduce using rule 190 (p -> valoresMat / valoresMat .)
    ;               reduce using rule 190 (p -> valoresMat / valoresMat .)
    AND             reduce using rule 190 (p -> valoresMat / valoresMat .)
    OR              reduce using rule 190 (p -> valoresMat / valoresMat .)
    ?               reduce using rule 190 (p -> valoresMat / valoresMat .)
    ^               shift and go to state 177


state 285

    (184) p -> valoresMat / exp .
    (193) exp -> exp . ^ iSing
    (195) exp -> exp . ^ valoresMat

    *               reduce using rule 184 (p -> valoresMat / exp .)
    /               reduce using rule 184 (p -> valoresMat / exp .)
    %               reduce using rule 184 (p -> valoresMat / exp .)
    +               reduce using rule 184 (p -> valoresMat / exp .)
    -               reduce using rule 184 (p -> valoresMat / exp .)
    )               reduce using rule 184 (p -> valoresMat / exp .)
    :               reduce using rule 184 (p -> valoresMat / exp .)
    EQEQ            reduce using rule 184 (p -> valoresMat / exp .)
    DISTINTO        reduce using rule 184 (p -> valoresMat / exp .)
    >               reduce using rule 184 (p -> valoresMat / exp .)
    <               reduce using rule 184 (p -> valoresMat / exp .)
    ,               reduce using rule 184 (p -> valoresMat / exp .)
    }               reduce using rule 184 (p -> valoresMat / exp .)
    ]               reduce using rule 184 (p -> valoresMat / exp .)
    ;               reduce using rule 184 (p -> valoresMat / exp .)
    AND             reduce using rule 184 (p -> valoresMat / exp .)
    OR              reduce using rule 184 (p -> valoresMat / exp .)
    ?               reduce using rule 184 (p -> valoresMat / exp .)
    ^               shift and go to state 233


state 286

    (196) exp -> valoresMat ^ valoresMat .

    ^               reduce using rule 196 (exp -> valoresMat ^ valoresMat .)
    *               reduce using rule 196 (exp -> valoresMat ^ valoresMat .)
    /               reduce using rule 196 (exp -> valoresMat ^ valoresMat .)
    %               reduce using rule 196 (exp -> valoresMat ^ valoresMat .)
    +               reduce using rule 196 (exp -> valoresMat ^ valoresMat .)
    -               reduce using rule 196 (exp -> valoresMat ^ valoresMat .)
    :               reduce using rule 196 (exp -> valoresMat ^ valoresMat .)
    EQEQ            reduce using rule 196 (exp -> valoresMat ^ valoresMat .)
    DISTINTO        reduce using rule 196 (exp -> valoresMat ^ valoresMat .)
    >               reduce using rule 196 (exp -> valoresMat ^ valoresMat .)
    <               reduce using rule 196 (exp -> valoresMat ^ valoresMat .)
    )               reduce using rule 196 (exp -> valoresMat ^ valoresMat .)
    ,               reduce using rule 196 (exp -> valoresMat ^ valoresMat .)
    ]               reduce using rule 196 (exp -> valoresMat ^ valoresMat .)
    ;               reduce using rule 196 (exp -> valoresMat ^ valoresMat .)
    AND             reduce using rule 196 (exp -> valoresMat ^ valoresMat .)
    OR              reduce using rule 196 (exp -> valoresMat ^ valoresMat .)
    ?               reduce using rule 196 (exp -> valoresMat ^ valoresMat .)
    }               reduce using rule 196 (exp -> valoresMat ^ valoresMat .)


state 287

    (194) exp -> valoresMat ^ iSing .

    ^               reduce using rule 194 (exp -> valoresMat ^ iSing .)
    *               reduce using rule 194 (exp -> valoresMat ^ iSing .)
    /               reduce using rule 194 (exp -> valoresMat ^ iSing .)
    %               reduce using rule 194 (exp -> valoresMat ^ iSing .)
    +               reduce using rule 194 (exp -> valoresMat ^ iSing .)
    -               reduce using rule 194 (exp -> valoresMat ^ iSing .)
    :               reduce using rule 194 (exp -> valoresMat ^ iSing .)
    EQEQ            reduce using rule 194 (exp -> valoresMat ^ iSing .)
    DISTINTO        reduce using rule 194 (exp -> valoresMat ^ iSing .)
    >               reduce using rule 194 (exp -> valoresMat ^ iSing .)
    <               reduce using rule 194 (exp -> valoresMat ^ iSing .)
    )               reduce using rule 194 (exp -> valoresMat ^ iSing .)
    ,               reduce using rule 194 (exp -> valoresMat ^ iSing .)
    ]               reduce using rule 194 (exp -> valoresMat ^ iSing .)
    ;               reduce using rule 194 (exp -> valoresMat ^ iSing .)
    AND             reduce using rule 194 (exp -> valoresMat ^ iSing .)
    OR              reduce using rule 194 (exp -> valoresMat ^ iSing .)
    ?               reduce using rule 194 (exp -> valoresMat ^ iSing .)
    }               reduce using rule 194 (exp -> valoresMat ^ iSing .)


state 288

    (231) tCompareEQ -> funcBool .

    EQEQ            reduce using rule 231 (tCompareEQ -> funcBool .)
    DISTINTO        reduce using rule 231 (tCompareEQ -> funcBool .)
    AND             reduce using rule 231 (tCompareEQ -> funcBool .)
    OR              reduce using rule 231 (tCompareEQ -> funcBool .)
    ?               reduce using rule 231 (tCompareEQ -> funcBool .)
    ,               reduce using rule 231 (tCompareEQ -> funcBool .)
    ]               reduce using rule 231 (tCompareEQ -> funcBool .)
    )               reduce using rule 231 (tCompareEQ -> funcBool .)
    ;               reduce using rule 231 (tCompareEQ -> funcBool .)
    :               reduce using rule 231 (tCompareEQ -> funcBool .)
    }               reduce using rule 231 (tCompareEQ -> funcBool .)


state 289

    (221) eq -> eq EQEQ mayor .

    EQEQ            reduce using rule 221 (eq -> eq EQEQ mayor .)
    DISTINTO        reduce using rule 221 (eq -> eq EQEQ mayor .)
    AND             reduce using rule 221 (eq -> eq EQEQ mayor .)
    ?               reduce using rule 221 (eq -> eq EQEQ mayor .)
    OR              reduce using rule 221 (eq -> eq EQEQ mayor .)
    :               reduce using rule 221 (eq -> eq EQEQ mayor .)
    ,               reduce using rule 221 (eq -> eq EQEQ mayor .)
    ]               reduce using rule 221 (eq -> eq EQEQ mayor .)
    )               reduce using rule 221 (eq -> eq EQEQ mayor .)
    ;               reduce using rule 221 (eq -> eq EQEQ mayor .)
    }               reduce using rule 221 (eq -> eq EQEQ mayor .)


state 290

    (237) tCompareEQ -> eMat .
    (240) tCompare -> eMat .
    (171) eMat -> eMat . + p
    (173) eMat -> eMat . + valoresMat
    (176) eMat -> eMat . - p
    (178) eMat -> eMat . - valoresMat

    EQEQ            reduce using rule 237 (tCompareEQ -> eMat .)
    DISTINTO        reduce using rule 237 (tCompareEQ -> eMat .)
    AND             reduce using rule 237 (tCompareEQ -> eMat .)
    OR              reduce using rule 237 (tCompareEQ -> eMat .)
    ?               reduce using rule 237 (tCompareEQ -> eMat .)
    ,               reduce using rule 237 (tCompareEQ -> eMat .)
    ]               reduce using rule 237 (tCompareEQ -> eMat .)
    )               reduce using rule 237 (tCompareEQ -> eMat .)
    ;               reduce using rule 237 (tCompareEQ -> eMat .)
    :               reduce using rule 237 (tCompareEQ -> eMat .)
    }               reduce using rule 237 (tCompareEQ -> eMat .)
    >               reduce using rule 240 (tCompare -> eMat .)
    <               reduce using rule 240 (tCompare -> eMat .)
    +               shift and go to state 184
    -               shift and go to state 185


state 291

    (238) tCompareEQ -> ( . ternarioBool )
    (239) tCompareEQ -> ( . ternarioMat )
    (246) tCompare -> ( . ternarioMat )
    (170) valoresMat -> ( . ternarioMat )
    (254) parenBool -> ( . expBool )
    (203) paren -> ( . eMat )
    (204) paren -> ( . valoresMat )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (53) funcBool -> . COLINEALES ( valores , valores )
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (58) vec -> . [ elem ]
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    STRING          shift and go to state 196
    (               shift and go to state 379
    BOOL            shift and go to state 202
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    COLINEALES      shift and go to state 4
    {               shift and go to state 35
    -               shift and go to state 83
    +               shift and go to state 82
    [               shift and go to state 22
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 189
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 190
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 378
    eMat                           shift and go to state 192
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 380
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    varsOps                        shift and go to state 195
    exp                            shift and go to state 105
    ternarioBool                   shift and go to state 397
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    expBool                        shift and go to state 381
    varYVals                       shift and go to state 205
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 206

state 292

    (225) eq -> eq EQEQ tCompareEQ .

    EQEQ            reduce using rule 225 (eq -> eq EQEQ tCompareEQ .)
    DISTINTO        reduce using rule 225 (eq -> eq EQEQ tCompareEQ .)
    AND             reduce using rule 225 (eq -> eq EQEQ tCompareEQ .)
    ?               reduce using rule 225 (eq -> eq EQEQ tCompareEQ .)
    OR              reduce using rule 225 (eq -> eq EQEQ tCompareEQ .)
    :               reduce using rule 225 (eq -> eq EQEQ tCompareEQ .)
    ,               reduce using rule 225 (eq -> eq EQEQ tCompareEQ .)
    ]               reduce using rule 225 (eq -> eq EQEQ tCompareEQ .)
    )               reduce using rule 225 (eq -> eq EQEQ tCompareEQ .)
    ;               reduce using rule 225 (eq -> eq EQEQ tCompareEQ .)
    }               reduce using rule 225 (eq -> eq EQEQ tCompareEQ .)


state 293

    (230) tCompareEQ -> BOOL .

    EQEQ            reduce using rule 230 (tCompareEQ -> BOOL .)
    DISTINTO        reduce using rule 230 (tCompareEQ -> BOOL .)
    AND             reduce using rule 230 (tCompareEQ -> BOOL .)
    OR              reduce using rule 230 (tCompareEQ -> BOOL .)
    ?               reduce using rule 230 (tCompareEQ -> BOOL .)
    ,               reduce using rule 230 (tCompareEQ -> BOOL .)
    ]               reduce using rule 230 (tCompareEQ -> BOOL .)
    )               reduce using rule 230 (tCompareEQ -> BOOL .)
    ;               reduce using rule 230 (tCompareEQ -> BOOL .)
    :               reduce using rule 230 (tCompareEQ -> BOOL .)
    }               reduce using rule 230 (tCompareEQ -> BOOL .)


state 294

    (233) tCompareEQ -> varsOps .
    (241) tCompare -> varsOps .
    (169) valoresMat -> varsOps .

    EQEQ            reduce using rule 233 (tCompareEQ -> varsOps .)
    DISTINTO        reduce using rule 233 (tCompareEQ -> varsOps .)
    AND             reduce using rule 233 (tCompareEQ -> varsOps .)
    OR              reduce using rule 233 (tCompareEQ -> varsOps .)
    ?               reduce using rule 233 (tCompareEQ -> varsOps .)
    ,               reduce using rule 233 (tCompareEQ -> varsOps .)
    ]               reduce using rule 233 (tCompareEQ -> varsOps .)
    )               reduce using rule 233 (tCompareEQ -> varsOps .)
    ;               reduce using rule 233 (tCompareEQ -> varsOps .)
    :               reduce using rule 233 (tCompareEQ -> varsOps .)
    }               reduce using rule 233 (tCompareEQ -> varsOps .)
    >               reduce using rule 241 (tCompare -> varsOps .)
    <               reduce using rule 241 (tCompare -> varsOps .)
    +               reduce using rule 169 (valoresMat -> varsOps .)
    -               reduce using rule 169 (valoresMat -> varsOps .)
    *               reduce using rule 169 (valoresMat -> varsOps .)
    /               reduce using rule 169 (valoresMat -> varsOps .)
    %               reduce using rule 169 (valoresMat -> varsOps .)
    ^               reduce using rule 169 (valoresMat -> varsOps .)


state 295

    (232) tCompareEQ -> varYVals .
    (242) tCompare -> varYVals .
    (168) valoresMat -> varYVals .

    EQEQ            reduce using rule 232 (tCompareEQ -> varYVals .)
    DISTINTO        reduce using rule 232 (tCompareEQ -> varYVals .)
    AND             reduce using rule 232 (tCompareEQ -> varYVals .)
    OR              reduce using rule 232 (tCompareEQ -> varYVals .)
    ?               reduce using rule 232 (tCompareEQ -> varYVals .)
    ,               reduce using rule 232 (tCompareEQ -> varYVals .)
    ]               reduce using rule 232 (tCompareEQ -> varYVals .)
    )               reduce using rule 232 (tCompareEQ -> varYVals .)
    ;               reduce using rule 232 (tCompareEQ -> varYVals .)
    :               reduce using rule 232 (tCompareEQ -> varYVals .)
    }               reduce using rule 232 (tCompareEQ -> varYVals .)
    >               reduce using rule 242 (tCompare -> varYVals .)
    <               reduce using rule 242 (tCompare -> varYVals .)
    +               reduce using rule 168 (valoresMat -> varYVals .)
    -               reduce using rule 168 (valoresMat -> varYVals .)
    *               reduce using rule 168 (valoresMat -> varYVals .)
    /               reduce using rule 168 (valoresMat -> varYVals .)
    %               reduce using rule 168 (valoresMat -> varYVals .)
    ^               reduce using rule 168 (valoresMat -> varYVals .)


state 296

    (222) eq -> eq DISTINTO mayor .

    EQEQ            reduce using rule 222 (eq -> eq DISTINTO mayor .)
    DISTINTO        reduce using rule 222 (eq -> eq DISTINTO mayor .)
    AND             reduce using rule 222 (eq -> eq DISTINTO mayor .)
    ?               reduce using rule 222 (eq -> eq DISTINTO mayor .)
    OR              reduce using rule 222 (eq -> eq DISTINTO mayor .)
    :               reduce using rule 222 (eq -> eq DISTINTO mayor .)
    ,               reduce using rule 222 (eq -> eq DISTINTO mayor .)
    ]               reduce using rule 222 (eq -> eq DISTINTO mayor .)
    )               reduce using rule 222 (eq -> eq DISTINTO mayor .)
    ;               reduce using rule 222 (eq -> eq DISTINTO mayor .)
    }               reduce using rule 222 (eq -> eq DISTINTO mayor .)


state 297

    (226) eq -> eq DISTINTO tCompareEQ .

    EQEQ            reduce using rule 226 (eq -> eq DISTINTO tCompareEQ .)
    DISTINTO        reduce using rule 226 (eq -> eq DISTINTO tCompareEQ .)
    AND             reduce using rule 226 (eq -> eq DISTINTO tCompareEQ .)
    ?               reduce using rule 226 (eq -> eq DISTINTO tCompareEQ .)
    OR              reduce using rule 226 (eq -> eq DISTINTO tCompareEQ .)
    :               reduce using rule 226 (eq -> eq DISTINTO tCompareEQ .)
    ,               reduce using rule 226 (eq -> eq DISTINTO tCompareEQ .)
    ]               reduce using rule 226 (eq -> eq DISTINTO tCompareEQ .)
    )               reduce using rule 226 (eq -> eq DISTINTO tCompareEQ .)
    ;               reduce using rule 226 (eq -> eq DISTINTO tCompareEQ .)
    }               reduce using rule 226 (eq -> eq DISTINTO tCompareEQ .)


state 298

    (148) varYVals -> vecVal . varYVals .
    (155) variable -> vecVal . varYVals .

    :               reduce using rule 148 (varYVals -> vecVal . varYVals .)
    ?               reduce using rule 148 (varYVals -> vecVal . varYVals .)
    OR              reduce using rule 148 (varYVals -> vecVal . varYVals .)
    AND             reduce using rule 148 (varYVals -> vecVal . varYVals .)
    +               reduce using rule 148 (varYVals -> vecVal . varYVals .)
    -               reduce using rule 148 (varYVals -> vecVal . varYVals .)
    *               reduce using rule 148 (varYVals -> vecVal . varYVals .)
    /               reduce using rule 148 (varYVals -> vecVal . varYVals .)
    %               reduce using rule 148 (varYVals -> vecVal . varYVals .)
    ^               reduce using rule 148 (varYVals -> vecVal . varYVals .)
    EQEQ            reduce using rule 148 (varYVals -> vecVal . varYVals .)
    DISTINTO        reduce using rule 148 (varYVals -> vecVal . varYVals .)
    >               reduce using rule 148 (varYVals -> vecVal . varYVals .)
    <               reduce using rule 148 (varYVals -> vecVal . varYVals .)
    ,               reduce using rule 148 (varYVals -> vecVal . varYVals .)
    ]               reduce using rule 148 (varYVals -> vecVal . varYVals .)
    )               reduce using rule 148 (varYVals -> vecVal . varYVals .)
    ;               reduce using rule 148 (varYVals -> vecVal . varYVals .)
    }               reduce using rule 148 (varYVals -> vecVal . varYVals .)
    MASMAS          reduce using rule 155 (variable -> vecVal . varYVals .)
    MENOSMENOS      reduce using rule 155 (variable -> vecVal . varYVals .)


state 299

    (217) and -> valoresBool AND eq .
    (221) eq -> eq . EQEQ mayor
    (222) eq -> eq . DISTINTO mayor
    (225) eq -> eq . EQEQ tCompareEQ
    (226) eq -> eq . DISTINTO tCompareEQ

    AND             reduce using rule 217 (and -> valoresBool AND eq .)
    ?               reduce using rule 217 (and -> valoresBool AND eq .)
    OR              reduce using rule 217 (and -> valoresBool AND eq .)
    :               reduce using rule 217 (and -> valoresBool AND eq .)
    )               reduce using rule 217 (and -> valoresBool AND eq .)
    ,               reduce using rule 217 (and -> valoresBool AND eq .)
    ]               reduce using rule 217 (and -> valoresBool AND eq .)
    ;               reduce using rule 217 (and -> valoresBool AND eq .)
    }               reduce using rule 217 (and -> valoresBool AND eq .)
    EQEQ            shift and go to state 178
    DISTINTO        shift and go to state 179


state 300

    (219) and -> valoresBool AND valoresBool .

    AND             reduce using rule 219 (and -> valoresBool AND valoresBool .)
    ?               reduce using rule 219 (and -> valoresBool AND valoresBool .)
    OR              reduce using rule 219 (and -> valoresBool AND valoresBool .)
    :               reduce using rule 219 (and -> valoresBool AND valoresBool .)
    )               reduce using rule 219 (and -> valoresBool AND valoresBool .)
    ,               reduce using rule 219 (and -> valoresBool AND valoresBool .)
    ]               reduce using rule 219 (and -> valoresBool AND valoresBool .)
    ;               reduce using rule 219 (and -> valoresBool AND valoresBool .)
    }               reduce using rule 219 (and -> valoresBool AND valoresBool .)


state 301

    (212) expBool -> valoresBool OR and .
    (216) and -> and . AND eq
    (218) and -> and . AND valoresBool

    )               reduce using rule 212 (expBool -> valoresBool OR and .)
    ?               reduce using rule 212 (expBool -> valoresBool OR and .)
    OR              reduce using rule 212 (expBool -> valoresBool OR and .)
    ]               reduce using rule 212 (expBool -> valoresBool OR and .)
    ,               reduce using rule 212 (expBool -> valoresBool OR and .)
    ;               reduce using rule 212 (expBool -> valoresBool OR and .)
    :               reduce using rule 212 (expBool -> valoresBool OR and .)
    }               reduce using rule 212 (expBool -> valoresBool OR and .)
    AND             shift and go to state 170


state 302

    (214) expBool -> valoresBool OR valoresBool .
    (217) and -> valoresBool . AND eq
    (219) and -> valoresBool . AND valoresBool

    )               reduce using rule 214 (expBool -> valoresBool OR valoresBool .)
    ?               reduce using rule 214 (expBool -> valoresBool OR valoresBool .)
    OR              reduce using rule 214 (expBool -> valoresBool OR valoresBool .)
    ]               reduce using rule 214 (expBool -> valoresBool OR valoresBool .)
    ,               reduce using rule 214 (expBool -> valoresBool OR valoresBool .)
    ;               reduce using rule 214 (expBool -> valoresBool OR valoresBool .)
    :               reduce using rule 214 (expBool -> valoresBool OR valoresBool .)
    }               reduce using rule 214 (expBool -> valoresBool OR valoresBool .)
    AND             shift and go to state 181


state 303

    (142) valoresTernarioBool -> funcBool .
    (206) valoresBool -> funcBool .
    (231) tCompareEQ -> funcBool .

    :               reduce using rule 142 (valoresTernarioBool -> funcBool .)
    ,               reduce using rule 142 (valoresTernarioBool -> funcBool .)
    ]               reduce using rule 142 (valoresTernarioBool -> funcBool .)
    )               reduce using rule 142 (valoresTernarioBool -> funcBool .)
    ;               reduce using rule 142 (valoresTernarioBool -> funcBool .)
    }               reduce using rule 142 (valoresTernarioBool -> funcBool .)
    ?               reduce using rule 206 (valoresBool -> funcBool .)
    OR              reduce using rule 206 (valoresBool -> funcBool .)
    AND             reduce using rule 206 (valoresBool -> funcBool .)
    EQEQ            reduce using rule 231 (tCompareEQ -> funcBool .)
    DISTINTO        reduce using rule 231 (tCompareEQ -> funcBool .)


state 304

    (129) valoresTernarioVars -> RES .

    :               reduce using rule 129 (valoresTernarioVars -> RES .)
    ,               reduce using rule 129 (valoresTernarioVars -> RES .)
    ]               reduce using rule 129 (valoresTernarioVars -> RES .)
    )               reduce using rule 129 (valoresTernarioVars -> RES .)
    ;               reduce using rule 129 (valoresTernarioVars -> RES .)
    }               reduce using rule 129 (valoresTernarioVars -> RES .)


state 305

    (134) valoresTernarioMat -> funcInt .
    (164) valoresMat -> funcInt .
    (236) tCompareEQ -> funcInt .
    (244) tCompare -> funcInt .

    ,               reduce using rule 134 (valoresTernarioMat -> funcInt .)
    ]               reduce using rule 134 (valoresTernarioMat -> funcInt .)
    )               reduce using rule 134 (valoresTernarioMat -> funcInt .)
    ;               reduce using rule 134 (valoresTernarioMat -> funcInt .)
    :               reduce using rule 134 (valoresTernarioMat -> funcInt .)
    }               reduce using rule 134 (valoresTernarioMat -> funcInt .)
    +               reduce using rule 164 (valoresMat -> funcInt .)
    -               reduce using rule 164 (valoresMat -> funcInt .)
    *               reduce using rule 164 (valoresMat -> funcInt .)
    /               reduce using rule 164 (valoresMat -> funcInt .)
    %               reduce using rule 164 (valoresMat -> funcInt .)
    ^               reduce using rule 164 (valoresMat -> funcInt .)
    EQEQ            reduce using rule 236 (tCompareEQ -> funcInt .)
    DISTINTO        reduce using rule 236 (tCompareEQ -> funcInt .)
    >               reduce using rule 244 (tCompare -> funcInt .)
    <               reduce using rule 244 (tCompare -> funcInt .)


state 306

    (147) varYVals -> vecVal .
    (148) varYVals -> vecVal . . varYVals
    (154) variable -> vecVal .
    (155) variable -> vecVal . . varYVals
    (63) vecVal -> vecVal . [ expresion ]
    (67) vecVal -> vecVal . [ INT ]

    :               reduce using rule 147 (varYVals -> vecVal .)
    ?               reduce using rule 147 (varYVals -> vecVal .)
    OR              reduce using rule 147 (varYVals -> vecVal .)
    AND             reduce using rule 147 (varYVals -> vecVal .)
    +               reduce using rule 147 (varYVals -> vecVal .)
    -               reduce using rule 147 (varYVals -> vecVal .)
    *               reduce using rule 147 (varYVals -> vecVal .)
    /               reduce using rule 147 (varYVals -> vecVal .)
    %               reduce using rule 147 (varYVals -> vecVal .)
    ^               reduce using rule 147 (varYVals -> vecVal .)
    EQEQ            reduce using rule 147 (varYVals -> vecVal .)
    DISTINTO        reduce using rule 147 (varYVals -> vecVal .)
    >               reduce using rule 147 (varYVals -> vecVal .)
    <               reduce using rule 147 (varYVals -> vecVal .)
    ,               reduce using rule 147 (varYVals -> vecVal .)
    ]               reduce using rule 147 (varYVals -> vecVal .)
    )               reduce using rule 147 (varYVals -> vecVal .)
    ;               reduce using rule 147 (varYVals -> vecVal .)
    }               reduce using rule 147 (varYVals -> vecVal .)
    .               shift and go to state 180
    MASMAS          reduce using rule 154 (variable -> vecVal .)
    MENOSMENOS      reduce using rule 154 (variable -> vecVal .)
    [               shift and go to state 49


state 307

    (130) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (212) expBool -> valoresBool . OR and
    (214) expBool -> valoresBool . OR valoresBool
    (112) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (217) and -> valoresBool . AND eq
    (219) and -> valoresBool . AND valoresBool

    ?               shift and go to state 183
    OR              shift and go to state 182
    AND             shift and go to state 181


state 308

    (136) valoresTernarioMat -> eMat .
    (171) eMat -> eMat . + p
    (173) eMat -> eMat . + valoresMat
    (176) eMat -> eMat . - p
    (178) eMat -> eMat . - valoresMat
    (237) tCompareEQ -> eMat .
    (240) tCompare -> eMat .

    ,               reduce using rule 136 (valoresTernarioMat -> eMat .)
    ]               reduce using rule 136 (valoresTernarioMat -> eMat .)
    )               reduce using rule 136 (valoresTernarioMat -> eMat .)
    ;               reduce using rule 136 (valoresTernarioMat -> eMat .)
    :               reduce using rule 136 (valoresTernarioMat -> eMat .)
    }               reduce using rule 136 (valoresTernarioMat -> eMat .)
    +               shift and go to state 184
    -               shift and go to state 185
    EQEQ            reduce using rule 237 (tCompareEQ -> eMat .)
    DISTINTO        reduce using rule 237 (tCompareEQ -> eMat .)
    >               reduce using rule 240 (tCompare -> eMat .)
    <               reduce using rule 240 (tCompare -> eMat .)


state 309

    (139) ternarioBool -> valoresBool ? valoresTernarioBool . : valoresTernarioBool
    (116) ternarioVars -> valoresBool ? valoresTernarioBool . : valoresTernarioVars

    :               shift and go to state 398


state 310

    (99) atributos -> ID . . valoresCampos
    (146) varYVals -> ID .
    (153) variable -> ID .
    (61) vecVal -> ID . [ expresion ]
    (65) vecVal -> ID . [ INT ]

    .               shift and go to state 159
    :               reduce using rule 146 (varYVals -> ID .)
    ?               reduce using rule 146 (varYVals -> ID .)
    OR              reduce using rule 146 (varYVals -> ID .)
    AND             reduce using rule 146 (varYVals -> ID .)
    +               reduce using rule 146 (varYVals -> ID .)
    -               reduce using rule 146 (varYVals -> ID .)
    *               reduce using rule 146 (varYVals -> ID .)
    /               reduce using rule 146 (varYVals -> ID .)
    %               reduce using rule 146 (varYVals -> ID .)
    ^               reduce using rule 146 (varYVals -> ID .)
    EQEQ            reduce using rule 146 (varYVals -> ID .)
    DISTINTO        reduce using rule 146 (varYVals -> ID .)
    >               reduce using rule 146 (varYVals -> ID .)
    <               reduce using rule 146 (varYVals -> ID .)
    ,               reduce using rule 146 (varYVals -> ID .)
    ]               reduce using rule 146 (varYVals -> ID .)
    )               reduce using rule 146 (varYVals -> ID .)
    ;               reduce using rule 146 (varYVals -> ID .)
    }               reduce using rule 146 (varYVals -> ID .)
    MASMAS          reduce using rule 153 (variable -> ID .)
    MENOSMENOS      reduce using rule 153 (variable -> ID .)
    [               shift and go to state 109


state 311

    (137) valoresTernarioMat -> ternarioMat .

    ,               reduce using rule 137 (valoresTernarioMat -> ternarioMat .)
    ]               reduce using rule 137 (valoresTernarioMat -> ternarioMat .)
    )               reduce using rule 137 (valoresTernarioMat -> ternarioMat .)
    ;               reduce using rule 137 (valoresTernarioMat -> ternarioMat .)
    :               reduce using rule 137 (valoresTernarioMat -> ternarioMat .)
    }               reduce using rule 137 (valoresTernarioMat -> ternarioMat .)


state 312

    (123) valoresTernarioVars -> vec .
    (62) vecVal -> vec . [ expresion ]
    (66) vecVal -> vec . [ INT ]

    :               reduce using rule 123 (valoresTernarioVars -> vec .)
    ,               reduce using rule 123 (valoresTernarioVars -> vec .)
    ]               reduce using rule 123 (valoresTernarioVars -> vec .)
    )               reduce using rule 123 (valoresTernarioVars -> vec .)
    ;               reduce using rule 123 (valoresTernarioVars -> vec .)
    }               reduce using rule 123 (valoresTernarioVars -> vec .)
    [               shift and go to state 121


state 313

    (127) valoresTernarioVars -> varsOps .
    (169) valoresMat -> varsOps .
    (208) valoresBool -> varsOps .
    (233) tCompareEQ -> varsOps .
    (241) tCompare -> varsOps .

    ,               reduce using rule 127 (valoresTernarioVars -> varsOps .)
    ]               reduce using rule 127 (valoresTernarioVars -> varsOps .)
    )               reduce using rule 127 (valoresTernarioVars -> varsOps .)
    ;               reduce using rule 127 (valoresTernarioVars -> varsOps .)
    :               reduce using rule 127 (valoresTernarioVars -> varsOps .)
    }               reduce using rule 127 (valoresTernarioVars -> varsOps .)
    +               reduce using rule 169 (valoresMat -> varsOps .)
    -               reduce using rule 169 (valoresMat -> varsOps .)
    *               reduce using rule 169 (valoresMat -> varsOps .)
    /               reduce using rule 169 (valoresMat -> varsOps .)
    %               reduce using rule 169 (valoresMat -> varsOps .)
    ^               reduce using rule 169 (valoresMat -> varsOps .)
    ?               reduce using rule 208 (valoresBool -> varsOps .)
    OR              reduce using rule 208 (valoresBool -> varsOps .)
    AND             reduce using rule 208 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 233 (tCompareEQ -> varsOps .)
    DISTINTO        reduce using rule 233 (tCompareEQ -> varsOps .)
    >               reduce using rule 241 (tCompare -> varsOps .)
    <               reduce using rule 241 (tCompare -> varsOps .)


state 314

    (122) valoresTernarioVars -> reg .
    (100) atributos -> reg . . valoresCampos

    :               reduce using rule 122 (valoresTernarioVars -> reg .)
    ,               reduce using rule 122 (valoresTernarioVars -> reg .)
    ]               reduce using rule 122 (valoresTernarioVars -> reg .)
    )               reduce using rule 122 (valoresTernarioVars -> reg .)
    ;               reduce using rule 122 (valoresTernarioVars -> reg .)
    }               reduce using rule 122 (valoresTernarioVars -> reg .)
    .               shift and go to state 51


state 315

    (112) ternarioVars -> valoresBool ? valoresTernarioVars . : valoresTernarioVars
    (113) ternarioVars -> valoresBool ? valoresTernarioVars . : valoresTernarioMat
    (115) ternarioVars -> valoresBool ? valoresTernarioVars . : valoresTernarioBool

    :               shift and go to state 399


state 316

    (135) valoresTernarioMat -> STRING .
    (167) valoresMat -> STRING .

    ,               reduce using rule 135 (valoresTernarioMat -> STRING .)
    ]               reduce using rule 135 (valoresTernarioMat -> STRING .)
    )               reduce using rule 135 (valoresTernarioMat -> STRING .)
    ;               reduce using rule 135 (valoresTernarioMat -> STRING .)
    :               reduce using rule 135 (valoresTernarioMat -> STRING .)
    }               reduce using rule 135 (valoresTernarioMat -> STRING .)
    +               reduce using rule 167 (valoresMat -> STRING .)
    -               reduce using rule 167 (valoresMat -> STRING .)
    *               reduce using rule 167 (valoresMat -> STRING .)
    /               reduce using rule 167 (valoresMat -> STRING .)
    %               reduce using rule 167 (valoresMat -> STRING .)
    ^               reduce using rule 167 (valoresMat -> STRING .)


state 317

    (143) valoresTernarioBool -> ternarioBool .

    :               reduce using rule 143 (valoresTernarioBool -> ternarioBool .)
    ,               reduce using rule 143 (valoresTernarioBool -> ternarioBool .)
    ]               reduce using rule 143 (valoresTernarioBool -> ternarioBool .)
    )               reduce using rule 143 (valoresTernarioBool -> ternarioBool .)
    ;               reduce using rule 143 (valoresTernarioBool -> ternarioBool .)
    }               reduce using rule 143 (valoresTernarioBool -> ternarioBool .)


state 318

    (130) ternarioMat -> valoresBool ? valoresTernarioMat . : valoresTernarioMat
    (114) ternarioVars -> valoresBool ? valoresTernarioMat . : valoresTernarioVars

    :               shift and go to state 400


state 319

    (132) valoresTernarioMat -> INT .
    (162) valoresMat -> INT .
    (234) tCompareEQ -> INT .
    (243) tCompare -> INT .

    ,               reduce using rule 132 (valoresTernarioMat -> INT .)
    ]               reduce using rule 132 (valoresTernarioMat -> INT .)
    )               reduce using rule 132 (valoresTernarioMat -> INT .)
    ;               reduce using rule 132 (valoresTernarioMat -> INT .)
    :               reduce using rule 132 (valoresTernarioMat -> INT .)
    }               reduce using rule 132 (valoresTernarioMat -> INT .)
    +               reduce using rule 162 (valoresMat -> INT .)
    -               reduce using rule 162 (valoresMat -> INT .)
    *               reduce using rule 162 (valoresMat -> INT .)
    /               reduce using rule 162 (valoresMat -> INT .)
    %               reduce using rule 162 (valoresMat -> INT .)
    ^               reduce using rule 162 (valoresMat -> INT .)
    EQEQ            reduce using rule 234 (tCompareEQ -> INT .)
    DISTINTO        reduce using rule 234 (tCompareEQ -> INT .)
    >               reduce using rule 243 (tCompare -> INT .)
    <               reduce using rule 243 (tCompare -> INT .)


state 320

    (133) valoresTernarioMat -> FLOAT .
    (163) valoresMat -> FLOAT .
    (235) tCompareEQ -> FLOAT .
    (245) tCompare -> FLOAT .

    ,               reduce using rule 133 (valoresTernarioMat -> FLOAT .)
    ]               reduce using rule 133 (valoresTernarioMat -> FLOAT .)
    )               reduce using rule 133 (valoresTernarioMat -> FLOAT .)
    ;               reduce using rule 133 (valoresTernarioMat -> FLOAT .)
    :               reduce using rule 133 (valoresTernarioMat -> FLOAT .)
    }               reduce using rule 133 (valoresTernarioMat -> FLOAT .)
    +               reduce using rule 163 (valoresMat -> FLOAT .)
    -               reduce using rule 163 (valoresMat -> FLOAT .)
    *               reduce using rule 163 (valoresMat -> FLOAT .)
    /               reduce using rule 163 (valoresMat -> FLOAT .)
    %               reduce using rule 163 (valoresMat -> FLOAT .)
    ^               reduce using rule 163 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 235 (tCompareEQ -> FLOAT .)
    DISTINTO        reduce using rule 235 (tCompareEQ -> FLOAT .)
    >               reduce using rule 245 (tCompare -> FLOAT .)
    <               reduce using rule 245 (tCompare -> FLOAT .)


state 321

    (141) valoresTernarioBool -> BOOL .
    (205) valoresBool -> BOOL .
    (230) tCompareEQ -> BOOL .

    :               reduce using rule 141 (valoresTernarioBool -> BOOL .)
    ,               reduce using rule 141 (valoresTernarioBool -> BOOL .)
    ]               reduce using rule 141 (valoresTernarioBool -> BOOL .)
    )               reduce using rule 141 (valoresTernarioBool -> BOOL .)
    ;               reduce using rule 141 (valoresTernarioBool -> BOOL .)
    }               reduce using rule 141 (valoresTernarioBool -> BOOL .)
    ?               reduce using rule 205 (valoresBool -> BOOL .)
    OR              reduce using rule 205 (valoresBool -> BOOL .)
    AND             reduce using rule 205 (valoresBool -> BOOL .)
    EQEQ            reduce using rule 230 (tCompareEQ -> BOOL .)
    DISTINTO        reduce using rule 230 (tCompareEQ -> BOOL .)


state 322

    (145) valoresTernarioBool -> expBool .
    (131) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (140) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> expBool . OR and
    (213) expBool -> expBool . OR valoresBool
    (117) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars

    :               reduce using rule 145 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 218
    OR              shift and go to state 217


state 323

    (138) valoresTernarioMat -> ( . ternarioMat )
    (144) valoresTernarioBool -> ( . ternarioBool )
    (125) valoresTernarioVars -> ( . ternarioVars )
    (170) valoresMat -> ( . ternarioMat )
    (209) valoresBool -> ( . ternarioBool )
    (238) tCompareEQ -> ( . ternarioBool )
    (239) tCompareEQ -> ( . ternarioMat )
    (203) paren -> ( . eMat )
    (204) paren -> ( . valoresMat )
    (246) tCompare -> ( . ternarioMat )
    (254) parenBool -> ( . expBool )
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (53) funcBool -> . COLINEALES ( valores , valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (58) vec -> . [ elem ]
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    STRING          shift and go to state 196
    (               shift and go to state 193
    BOOL            shift and go to state 202
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    COLINEALES      shift and go to state 4
    {               shift and go to state 35
    -               shift and go to state 83
    +               shift and go to state 82
    [               shift and go to state 22
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 189
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 190
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 191
    eMat                           shift and go to state 192
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 401
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    exp                            shift and go to state 105
    ternarioBool                   shift and go to state 402
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    expBool                        shift and go to state 203
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 195
    ternarioVars                   shift and go to state 403
    varYVals                       shift and go to state 205
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 206

state 324

    (124) valoresTernarioVars -> ternarioVars .

    :               reduce using rule 124 (valoresTernarioVars -> ternarioVars .)
    ,               reduce using rule 124 (valoresTernarioVars -> ternarioVars .)
    ]               reduce using rule 124 (valoresTernarioVars -> ternarioVars .)
    )               reduce using rule 124 (valoresTernarioVars -> ternarioVars .)
    ;               reduce using rule 124 (valoresTernarioVars -> ternarioVars .)
    }               reduce using rule 124 (valoresTernarioVars -> ternarioVars .)


state 325

    (128) valoresTernarioVars -> varYVals .
    (168) valoresMat -> varYVals .
    (207) valoresBool -> varYVals .
    (232) tCompareEQ -> varYVals .
    (242) tCompare -> varYVals .

    ,               reduce using rule 128 (valoresTernarioVars -> varYVals .)
    ]               reduce using rule 128 (valoresTernarioVars -> varYVals .)
    )               reduce using rule 128 (valoresTernarioVars -> varYVals .)
    ;               reduce using rule 128 (valoresTernarioVars -> varYVals .)
    :               reduce using rule 128 (valoresTernarioVars -> varYVals .)
    }               reduce using rule 128 (valoresTernarioVars -> varYVals .)
    +               reduce using rule 168 (valoresMat -> varYVals .)
    -               reduce using rule 168 (valoresMat -> varYVals .)
    *               reduce using rule 168 (valoresMat -> varYVals .)
    /               reduce using rule 168 (valoresMat -> varYVals .)
    %               reduce using rule 168 (valoresMat -> varYVals .)
    ^               reduce using rule 168 (valoresMat -> varYVals .)
    ?               reduce using rule 207 (valoresBool -> varYVals .)
    OR              reduce using rule 207 (valoresBool -> varYVals .)
    AND             reduce using rule 207 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 232 (tCompareEQ -> varYVals .)
    DISTINTO        reduce using rule 232 (tCompareEQ -> varYVals .)
    >               reduce using rule 242 (tCompare -> varYVals .)
    <               reduce using rule 242 (tCompare -> varYVals .)


state 326

    (126) valoresTernarioVars -> atributos .
    (165) valoresMat -> atributos .
    (64) vecVal -> atributos . [ expresion ]
    (68) vecVal -> atributos . [ INT ]

    ,               reduce using rule 126 (valoresTernarioVars -> atributos .)
    ]               reduce using rule 126 (valoresTernarioVars -> atributos .)
    )               reduce using rule 126 (valoresTernarioVars -> atributos .)
    ;               reduce using rule 126 (valoresTernarioVars -> atributos .)
    :               reduce using rule 126 (valoresTernarioVars -> atributos .)
    }               reduce using rule 126 (valoresTernarioVars -> atributos .)
    +               reduce using rule 165 (valoresMat -> atributos .)
    -               reduce using rule 165 (valoresMat -> atributos .)
    *               reduce using rule 165 (valoresMat -> atributos .)
    /               reduce using rule 165 (valoresMat -> atributos .)
    %               reduce using rule 165 (valoresMat -> atributos .)
    ^               reduce using rule 165 (valoresMat -> atributos .)
    [               shift and go to state 45


state 327

    (173) eMat -> eMat + valoresMat .
    (183) p -> valoresMat . * exp
    (184) p -> valoresMat . / exp
    (185) p -> valoresMat . % exp
    (189) p -> valoresMat . * valoresMat
    (190) p -> valoresMat . / valoresMat
    (191) p -> valoresMat . % valoresMat
    (194) exp -> valoresMat . ^ iSing
    (196) exp -> valoresMat . ^ valoresMat

    +               reduce using rule 173 (eMat -> eMat + valoresMat .)
    -               reduce using rule 173 (eMat -> eMat + valoresMat .)
    EQEQ            reduce using rule 173 (eMat -> eMat + valoresMat .)
    DISTINTO        reduce using rule 173 (eMat -> eMat + valoresMat .)
    >               reduce using rule 173 (eMat -> eMat + valoresMat .)
    <               reduce using rule 173 (eMat -> eMat + valoresMat .)
    )               reduce using rule 173 (eMat -> eMat + valoresMat .)
    :               reduce using rule 173 (eMat -> eMat + valoresMat .)
    ,               reduce using rule 173 (eMat -> eMat + valoresMat .)
    ]               reduce using rule 173 (eMat -> eMat + valoresMat .)
    }               reduce using rule 173 (eMat -> eMat + valoresMat .)
    AND             reduce using rule 173 (eMat -> eMat + valoresMat .)
    OR              reduce using rule 173 (eMat -> eMat + valoresMat .)
    ?               reduce using rule 173 (eMat -> eMat + valoresMat .)
    ;               reduce using rule 173 (eMat -> eMat + valoresMat .)
    *               shift and go to state 174
    /               shift and go to state 176
    %               shift and go to state 172
    ^               shift and go to state 177


state 328

    (171) eMat -> eMat + p .
    (180) p -> p . * exp
    (181) p -> p . / exp
    (182) p -> p . % exp
    (186) p -> p . * valoresMat
    (187) p -> p . / valoresMat
    (188) p -> p . % valoresMat

    +               reduce using rule 171 (eMat -> eMat + p .)
    -               reduce using rule 171 (eMat -> eMat + p .)
    EQEQ            reduce using rule 171 (eMat -> eMat + p .)
    DISTINTO        reduce using rule 171 (eMat -> eMat + p .)
    >               reduce using rule 171 (eMat -> eMat + p .)
    <               reduce using rule 171 (eMat -> eMat + p .)
    )               reduce using rule 171 (eMat -> eMat + p .)
    :               reduce using rule 171 (eMat -> eMat + p .)
    ,               reduce using rule 171 (eMat -> eMat + p .)
    ]               reduce using rule 171 (eMat -> eMat + p .)
    }               reduce using rule 171 (eMat -> eMat + p .)
    AND             reduce using rule 171 (eMat -> eMat + p .)
    OR              reduce using rule 171 (eMat -> eMat + p .)
    ?               reduce using rule 171 (eMat -> eMat + p .)
    ;               reduce using rule 171 (eMat -> eMat + p .)
    *               shift and go to state 223
    /               shift and go to state 224
    %               shift and go to state 222


state 329

    (178) eMat -> eMat - valoresMat .
    (183) p -> valoresMat . * exp
    (184) p -> valoresMat . / exp
    (185) p -> valoresMat . % exp
    (189) p -> valoresMat . * valoresMat
    (190) p -> valoresMat . / valoresMat
    (191) p -> valoresMat . % valoresMat
    (194) exp -> valoresMat . ^ iSing
    (196) exp -> valoresMat . ^ valoresMat

    +               reduce using rule 178 (eMat -> eMat - valoresMat .)
    -               reduce using rule 178 (eMat -> eMat - valoresMat .)
    EQEQ            reduce using rule 178 (eMat -> eMat - valoresMat .)
    DISTINTO        reduce using rule 178 (eMat -> eMat - valoresMat .)
    >               reduce using rule 178 (eMat -> eMat - valoresMat .)
    <               reduce using rule 178 (eMat -> eMat - valoresMat .)
    )               reduce using rule 178 (eMat -> eMat - valoresMat .)
    :               reduce using rule 178 (eMat -> eMat - valoresMat .)
    ,               reduce using rule 178 (eMat -> eMat - valoresMat .)
    ]               reduce using rule 178 (eMat -> eMat - valoresMat .)
    }               reduce using rule 178 (eMat -> eMat - valoresMat .)
    AND             reduce using rule 178 (eMat -> eMat - valoresMat .)
    OR              reduce using rule 178 (eMat -> eMat - valoresMat .)
    ?               reduce using rule 178 (eMat -> eMat - valoresMat .)
    ;               reduce using rule 178 (eMat -> eMat - valoresMat .)
    *               shift and go to state 174
    /               shift and go to state 176
    %               shift and go to state 172
    ^               shift and go to state 177


state 330

    (176) eMat -> eMat - p .
    (180) p -> p . * exp
    (181) p -> p . / exp
    (182) p -> p . % exp
    (186) p -> p . * valoresMat
    (187) p -> p . / valoresMat
    (188) p -> p . % valoresMat

    +               reduce using rule 176 (eMat -> eMat - p .)
    -               reduce using rule 176 (eMat -> eMat - p .)
    EQEQ            reduce using rule 176 (eMat -> eMat - p .)
    DISTINTO        reduce using rule 176 (eMat -> eMat - p .)
    >               reduce using rule 176 (eMat -> eMat - p .)
    <               reduce using rule 176 (eMat -> eMat - p .)
    )               reduce using rule 176 (eMat -> eMat - p .)
    :               reduce using rule 176 (eMat -> eMat - p .)
    ,               reduce using rule 176 (eMat -> eMat - p .)
    ]               reduce using rule 176 (eMat -> eMat - p .)
    }               reduce using rule 176 (eMat -> eMat - p .)
    AND             reduce using rule 176 (eMat -> eMat - p .)
    OR              reduce using rule 176 (eMat -> eMat - p .)
    ?               reduce using rule 176 (eMat -> eMat - p .)
    ;               reduce using rule 176 (eMat -> eMat - p .)
    *               shift and go to state 223
    /               shift and go to state 224
    %               shift and go to state 222


state 331

    (223) eq -> tCompareEQ EQEQ mayor .

    EQEQ            reduce using rule 223 (eq -> tCompareEQ EQEQ mayor .)
    DISTINTO        reduce using rule 223 (eq -> tCompareEQ EQEQ mayor .)
    AND             reduce using rule 223 (eq -> tCompareEQ EQEQ mayor .)
    ?               reduce using rule 223 (eq -> tCompareEQ EQEQ mayor .)
    OR              reduce using rule 223 (eq -> tCompareEQ EQEQ mayor .)
    :               reduce using rule 223 (eq -> tCompareEQ EQEQ mayor .)
    ,               reduce using rule 223 (eq -> tCompareEQ EQEQ mayor .)
    ]               reduce using rule 223 (eq -> tCompareEQ EQEQ mayor .)
    )               reduce using rule 223 (eq -> tCompareEQ EQEQ mayor .)
    ;               reduce using rule 223 (eq -> tCompareEQ EQEQ mayor .)
    }               reduce using rule 223 (eq -> tCompareEQ EQEQ mayor .)


state 332

    (227) eq -> tCompareEQ EQEQ tCompareEQ .

    EQEQ            reduce using rule 227 (eq -> tCompareEQ EQEQ tCompareEQ .)
    DISTINTO        reduce using rule 227 (eq -> tCompareEQ EQEQ tCompareEQ .)
    AND             reduce using rule 227 (eq -> tCompareEQ EQEQ tCompareEQ .)
    ?               reduce using rule 227 (eq -> tCompareEQ EQEQ tCompareEQ .)
    OR              reduce using rule 227 (eq -> tCompareEQ EQEQ tCompareEQ .)
    :               reduce using rule 227 (eq -> tCompareEQ EQEQ tCompareEQ .)
    ,               reduce using rule 227 (eq -> tCompareEQ EQEQ tCompareEQ .)
    ]               reduce using rule 227 (eq -> tCompareEQ EQEQ tCompareEQ .)
    )               reduce using rule 227 (eq -> tCompareEQ EQEQ tCompareEQ .)
    ;               reduce using rule 227 (eq -> tCompareEQ EQEQ tCompareEQ .)
    }               reduce using rule 227 (eq -> tCompareEQ EQEQ tCompareEQ .)


state 333

    (224) eq -> tCompareEQ DISTINTO mayor .

    EQEQ            reduce using rule 224 (eq -> tCompareEQ DISTINTO mayor .)
    DISTINTO        reduce using rule 224 (eq -> tCompareEQ DISTINTO mayor .)
    AND             reduce using rule 224 (eq -> tCompareEQ DISTINTO mayor .)
    ?               reduce using rule 224 (eq -> tCompareEQ DISTINTO mayor .)
    OR              reduce using rule 224 (eq -> tCompareEQ DISTINTO mayor .)
    :               reduce using rule 224 (eq -> tCompareEQ DISTINTO mayor .)
    ,               reduce using rule 224 (eq -> tCompareEQ DISTINTO mayor .)
    ]               reduce using rule 224 (eq -> tCompareEQ DISTINTO mayor .)
    )               reduce using rule 224 (eq -> tCompareEQ DISTINTO mayor .)
    ;               reduce using rule 224 (eq -> tCompareEQ DISTINTO mayor .)
    }               reduce using rule 224 (eq -> tCompareEQ DISTINTO mayor .)


state 334

    (228) eq -> tCompareEQ DISTINTO tCompareEQ .

    EQEQ            reduce using rule 228 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    DISTINTO        reduce using rule 228 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    AND             reduce using rule 228 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    ?               reduce using rule 228 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    OR              reduce using rule 228 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    :               reduce using rule 228 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    ,               reduce using rule 228 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    ]               reduce using rule 228 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    )               reduce using rule 228 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    ;               reduce using rule 228 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    }               reduce using rule 228 (eq -> tCompareEQ DISTINTO tCompareEQ .)


state 335

    (204) paren -> ( valoresMat ) .

    ^               reduce using rule 204 (paren -> ( valoresMat ) .)
    *               reduce using rule 204 (paren -> ( valoresMat ) .)
    /               reduce using rule 204 (paren -> ( valoresMat ) .)
    %               reduce using rule 204 (paren -> ( valoresMat ) .)
    +               reduce using rule 204 (paren -> ( valoresMat ) .)
    -               reduce using rule 204 (paren -> ( valoresMat ) .)
    ,               reduce using rule 204 (paren -> ( valoresMat ) .)
    ]               reduce using rule 204 (paren -> ( valoresMat ) .)
    )               reduce using rule 204 (paren -> ( valoresMat ) .)
    ;               reduce using rule 204 (paren -> ( valoresMat ) .)
    :               reduce using rule 204 (paren -> ( valoresMat ) .)
    }               reduce using rule 204 (paren -> ( valoresMat ) .)
    EQEQ            reduce using rule 204 (paren -> ( valoresMat ) .)
    DISTINTO        reduce using rule 204 (paren -> ( valoresMat ) .)
    >               reduce using rule 204 (paren -> ( valoresMat ) .)
    <               reduce using rule 204 (paren -> ( valoresMat ) .)
    AND             reduce using rule 204 (paren -> ( valoresMat ) .)
    OR              reduce using rule 204 (paren -> ( valoresMat ) .)
    ?               reduce using rule 204 (paren -> ( valoresMat ) .)


state 336

    (203) paren -> ( eMat ) .

    ^               reduce using rule 203 (paren -> ( eMat ) .)
    *               reduce using rule 203 (paren -> ( eMat ) .)
    /               reduce using rule 203 (paren -> ( eMat ) .)
    %               reduce using rule 203 (paren -> ( eMat ) .)
    +               reduce using rule 203 (paren -> ( eMat ) .)
    -               reduce using rule 203 (paren -> ( eMat ) .)
    ,               reduce using rule 203 (paren -> ( eMat ) .)
    ]               reduce using rule 203 (paren -> ( eMat ) .)
    )               reduce using rule 203 (paren -> ( eMat ) .)
    ;               reduce using rule 203 (paren -> ( eMat ) .)
    :               reduce using rule 203 (paren -> ( eMat ) .)
    }               reduce using rule 203 (paren -> ( eMat ) .)
    EQEQ            reduce using rule 203 (paren -> ( eMat ) .)
    DISTINTO        reduce using rule 203 (paren -> ( eMat ) .)
    >               reduce using rule 203 (paren -> ( eMat ) .)
    <               reduce using rule 203 (paren -> ( eMat ) .)
    AND             reduce using rule 203 (paren -> ( eMat ) .)
    OR              reduce using rule 203 (paren -> ( eMat ) .)
    ?               reduce using rule 203 (paren -> ( eMat ) .)


state 337

    (130) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (212) expBool -> valoresBool . OR and
    (214) expBool -> valoresBool . OR valoresBool
    (217) and -> valoresBool . AND eq
    (219) and -> valoresBool . AND valoresBool

    ?               shift and go to state 404
    OR              shift and go to state 182
    AND             shift and go to state 181


state 338

    (170) valoresMat -> ( ternarioMat . )
    (239) tCompareEQ -> ( ternarioMat . )
    (246) tCompare -> ( ternarioMat . )

    )               shift and go to state 405


state 339

    (209) valoresBool -> ( ternarioBool . )
    (238) tCompareEQ -> ( ternarioBool . )

    )               shift and go to state 406


state 340

    (254) parenBool -> ( expBool . )
    (131) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (140) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> expBool . OR and
    (213) expBool -> expBool . OR valoresBool

    )               shift and go to state 343
    ?               shift and go to state 407
    OR              shift and go to state 217


state 341

    (108) ternario -> ( ternarioMat ) .
    (170) valoresMat -> ( ternarioMat ) .
    (239) tCompareEQ -> ( ternarioMat ) .
    (246) tCompare -> ( ternarioMat ) .

    ,               reduce using rule 108 (ternario -> ( ternarioMat ) .)
    }               reduce using rule 108 (ternario -> ( ternarioMat ) .)
    ]               reduce using rule 108 (ternario -> ( ternarioMat ) .)
    )               reduce using rule 108 (ternario -> ( ternarioMat ) .)
    ;               reduce using rule 108 (ternario -> ( ternarioMat ) .)
    +               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    ^               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    EQEQ            reduce using rule 239 (tCompareEQ -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 239 (tCompareEQ -> ( ternarioMat ) .)
    >               reduce using rule 246 (tCompare -> ( ternarioMat ) .)
    <               reduce using rule 246 (tCompare -> ( ternarioMat ) .)


state 342

    (109) ternario -> ( ternarioBool ) .
    (209) valoresBool -> ( ternarioBool ) .
    (238) tCompareEQ -> ( ternarioBool ) .

    ,               reduce using rule 109 (ternario -> ( ternarioBool ) .)
    }               reduce using rule 109 (ternario -> ( ternarioBool ) .)
    ]               reduce using rule 109 (ternario -> ( ternarioBool ) .)
    )               reduce using rule 109 (ternario -> ( ternarioBool ) .)
    ;               reduce using rule 109 (ternario -> ( ternarioBool ) .)
    OR              reduce using rule 209 (valoresBool -> ( ternarioBool ) .)
    AND             reduce using rule 209 (valoresBool -> ( ternarioBool ) .)
    ?               reduce using rule 209 (valoresBool -> ( ternarioBool ) .)
    EQEQ            reduce using rule 238 (tCompareEQ -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 238 (tCompareEQ -> ( ternarioBool ) .)


state 343

    (254) parenBool -> ( expBool ) .

    EQEQ            reduce using rule 254 (parenBool -> ( expBool ) .)
    DISTINTO        reduce using rule 254 (parenBool -> ( expBool ) .)
    AND             reduce using rule 254 (parenBool -> ( expBool ) .)
    OR              reduce using rule 254 (parenBool -> ( expBool ) .)
    ?               reduce using rule 254 (parenBool -> ( expBool ) .)
    ,               reduce using rule 254 (parenBool -> ( expBool ) .)
    ]               reduce using rule 254 (parenBool -> ( expBool ) .)
    :               reduce using rule 254 (parenBool -> ( expBool ) .)
    )               reduce using rule 254 (parenBool -> ( expBool ) .)
    ;               reduce using rule 254 (parenBool -> ( expBool ) .)
    }               reduce using rule 254 (parenBool -> ( expBool ) .)


state 344

    (111) ternario -> ( ternarioVars ) .

    ,               reduce using rule 111 (ternario -> ( ternarioVars ) .)
    }               reduce using rule 111 (ternario -> ( ternarioVars ) .)
    ]               reduce using rule 111 (ternario -> ( ternarioVars ) .)
    )               reduce using rule 111 (ternario -> ( ternarioVars ) .)
    ;               reduce using rule 111 (ternario -> ( ternarioVars ) .)


state 345

    (130) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (212) expBool -> valoresBool . OR and
    (214) expBool -> valoresBool . OR valoresBool
    (217) and -> valoresBool . AND eq
    (219) and -> valoresBool . AND valoresBool

    ?               shift and go to state 408
    OR              shift and go to state 182
    AND             shift and go to state 181


state 346

    (170) valoresMat -> ( . ternarioMat )
    (209) valoresBool -> ( . ternarioBool )
    (203) paren -> ( . eMat )
    (204) paren -> ( . valoresMat )
    (238) tCompareEQ -> ( . ternarioBool )
    (239) tCompareEQ -> ( . ternarioMat )
    (246) tCompare -> ( . ternarioMat )
    (254) parenBool -> ( . expBool )
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (53) funcBool -> . COLINEALES ( valores , valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (58) vec -> . [ elem ]
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    STRING          shift and go to state 196
    (               shift and go to state 193
    BOOL            shift and go to state 202
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    COLINEALES      shift and go to state 4
    {               shift and go to state 35
    -               shift and go to state 83
    +               shift and go to state 82
    [               shift and go to state 22
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 189
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 190
    eq                             shift and go to state 75
    vecVal                         shift and go to state 76
    eMat                           shift and go to state 192
    tCompareEQ                     shift and go to state 80
    valoresBool                    shift and go to state 337
    ternarioMat                    shift and go to state 338
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    varsOps                        shift and go to state 195
    exp                            shift and go to state 105
    ternarioBool                   shift and go to state 339
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    expBool                        shift and go to state 340
    varYVals                       shift and go to state 205
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 206

state 347

    (170) valoresMat -> ( ternarioMat . )

    )               shift and go to state 409


state 348

    (131) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (211) expBool -> expBool . OR and
    (213) expBool -> expBool . OR valoresBool

    ?               shift and go to state 410
    OR              shift and go to state 217


state 349

    (211) expBool -> expBool OR and .
    (216) and -> and . AND eq
    (218) and -> and . AND valoresBool

    )               reduce using rule 211 (expBool -> expBool OR and .)
    ?               reduce using rule 211 (expBool -> expBool OR and .)
    OR              reduce using rule 211 (expBool -> expBool OR and .)
    ]               reduce using rule 211 (expBool -> expBool OR and .)
    ,               reduce using rule 211 (expBool -> expBool OR and .)
    ;               reduce using rule 211 (expBool -> expBool OR and .)
    :               reduce using rule 211 (expBool -> expBool OR and .)
    }               reduce using rule 211 (expBool -> expBool OR and .)
    AND             shift and go to state 170


state 350

    (213) expBool -> expBool OR valoresBool .
    (217) and -> valoresBool . AND eq
    (219) and -> valoresBool . AND valoresBool

    )               reduce using rule 213 (expBool -> expBool OR valoresBool .)
    ?               reduce using rule 213 (expBool -> expBool OR valoresBool .)
    OR              reduce using rule 213 (expBool -> expBool OR valoresBool .)
    ]               reduce using rule 213 (expBool -> expBool OR valoresBool .)
    ,               reduce using rule 213 (expBool -> expBool OR valoresBool .)
    ;               reduce using rule 213 (expBool -> expBool OR valoresBool .)
    :               reduce using rule 213 (expBool -> expBool OR valoresBool .)
    }               reduce using rule 213 (expBool -> expBool OR valoresBool .)
    AND             shift and go to state 181


state 351

    (140) ternarioBool -> expBool ? valoresTernarioBool . : valoresTernarioBool
    (121) ternarioVars -> expBool ? valoresTernarioBool . : valoresTernarioVars

    :               shift and go to state 411


state 352

    (117) ternarioVars -> expBool ? valoresTernarioVars . : valoresTernarioVars
    (118) ternarioVars -> expBool ? valoresTernarioVars . : valoresTernarioMat
    (120) ternarioVars -> expBool ? valoresTernarioVars . : valoresTernarioBool

    :               shift and go to state 412


state 353

    (131) ternarioMat -> expBool ? valoresTernarioMat . : valoresTernarioMat
    (119) ternarioVars -> expBool ? valoresTernarioMat . : valoresTernarioVars

    :               shift and go to state 413


state 354

    (244) tCompare -> funcInt .
    (164) valoresMat -> funcInt .

    EQEQ            reduce using rule 244 (tCompare -> funcInt .)
    DISTINTO        reduce using rule 244 (tCompare -> funcInt .)
    AND             reduce using rule 244 (tCompare -> funcInt .)
    OR              reduce using rule 244 (tCompare -> funcInt .)
    ?               reduce using rule 244 (tCompare -> funcInt .)
    ,               reduce using rule 244 (tCompare -> funcInt .)
    ]               reduce using rule 244 (tCompare -> funcInt .)
    )               reduce using rule 244 (tCompare -> funcInt .)
    ;               reduce using rule 244 (tCompare -> funcInt .)
    :               reduce using rule 244 (tCompare -> funcInt .)
    }               reduce using rule 244 (tCompare -> funcInt .)
    +               reduce using rule 164 (valoresMat -> funcInt .)
    -               reduce using rule 164 (valoresMat -> funcInt .)
    *               reduce using rule 164 (valoresMat -> funcInt .)
    /               reduce using rule 164 (valoresMat -> funcInt .)
    %               reduce using rule 164 (valoresMat -> funcInt .)
    ^               reduce using rule 164 (valoresMat -> funcInt .)


state 355

    (240) tCompare -> eMat .
    (171) eMat -> eMat . + p
    (173) eMat -> eMat . + valoresMat
    (176) eMat -> eMat . - p
    (178) eMat -> eMat . - valoresMat

    EQEQ            reduce using rule 240 (tCompare -> eMat .)
    DISTINTO        reduce using rule 240 (tCompare -> eMat .)
    AND             reduce using rule 240 (tCompare -> eMat .)
    OR              reduce using rule 240 (tCompare -> eMat .)
    ?               reduce using rule 240 (tCompare -> eMat .)
    ,               reduce using rule 240 (tCompare -> eMat .)
    ]               reduce using rule 240 (tCompare -> eMat .)
    )               reduce using rule 240 (tCompare -> eMat .)
    ;               reduce using rule 240 (tCompare -> eMat .)
    :               reduce using rule 240 (tCompare -> eMat .)
    }               reduce using rule 240 (tCompare -> eMat .)
    +               shift and go to state 184
    -               shift and go to state 185


state 356

    (246) tCompare -> ( . ternarioMat )
    (170) valoresMat -> ( . ternarioMat )
    (203) paren -> ( . eMat )
    (204) paren -> ( . valoresMat )
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (53) funcBool -> . COLINEALES ( valores , valores )
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (58) vec -> . [ elem ]
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    STRING          shift and go to state 196
    (               shift and go to state 193
    BOOL            shift and go to state 202
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    COLINEALES      shift and go to state 4
    {               shift and go to state 35
    -               shift and go to state 83
    +               shift and go to state 82
    [               shift and go to state 22
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 189
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 190
    eq                             shift and go to state 75
    vecVal                         shift and go to state 76
    eMat                           shift and go to state 192
    tCompareEQ                     shift and go to state 80
    valoresBool                    shift and go to state 345
    ternarioMat                    shift and go to state 414
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    varsOps                        shift and go to state 195
    exp                            shift and go to state 105
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    expBool                        shift and go to state 348
    varYVals                       shift and go to state 205
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 206

state 357

    (249) menor -> tCompare < tCompare .

    EQEQ            reduce using rule 249 (menor -> tCompare < tCompare .)
    DISTINTO        reduce using rule 249 (menor -> tCompare < tCompare .)
    AND             reduce using rule 249 (menor -> tCompare < tCompare .)
    OR              reduce using rule 249 (menor -> tCompare < tCompare .)
    ?               reduce using rule 249 (menor -> tCompare < tCompare .)
    )               reduce using rule 249 (menor -> tCompare < tCompare .)
    ,               reduce using rule 249 (menor -> tCompare < tCompare .)
    ]               reduce using rule 249 (menor -> tCompare < tCompare .)
    ;               reduce using rule 249 (menor -> tCompare < tCompare .)
    :               reduce using rule 249 (menor -> tCompare < tCompare .)
    }               reduce using rule 249 (menor -> tCompare < tCompare .)


state 358

    (146) varYVals -> ID .
    (153) variable -> ID .
    (61) vecVal -> ID . [ expresion ]
    (65) vecVal -> ID . [ INT ]
    (99) atributos -> ID . . valoresCampos

    EQEQ            reduce using rule 146 (varYVals -> ID .)
    DISTINTO        reduce using rule 146 (varYVals -> ID .)
    AND             reduce using rule 146 (varYVals -> ID .)
    OR              reduce using rule 146 (varYVals -> ID .)
    ?               reduce using rule 146 (varYVals -> ID .)
    ,               reduce using rule 146 (varYVals -> ID .)
    ]               reduce using rule 146 (varYVals -> ID .)
    )               reduce using rule 146 (varYVals -> ID .)
    ;               reduce using rule 146 (varYVals -> ID .)
    :               reduce using rule 146 (varYVals -> ID .)
    }               reduce using rule 146 (varYVals -> ID .)
    +               reduce using rule 146 (varYVals -> ID .)
    -               reduce using rule 146 (varYVals -> ID .)
    *               reduce using rule 146 (varYVals -> ID .)
    /               reduce using rule 146 (varYVals -> ID .)
    %               reduce using rule 146 (varYVals -> ID .)
    ^               reduce using rule 146 (varYVals -> ID .)
    MASMAS          reduce using rule 153 (variable -> ID .)
    MENOSMENOS      reduce using rule 153 (variable -> ID .)
    [               shift and go to state 109
    .               shift and go to state 159


state 359

    (243) tCompare -> INT .
    (162) valoresMat -> INT .

    EQEQ            reduce using rule 243 (tCompare -> INT .)
    DISTINTO        reduce using rule 243 (tCompare -> INT .)
    AND             reduce using rule 243 (tCompare -> INT .)
    OR              reduce using rule 243 (tCompare -> INT .)
    ?               reduce using rule 243 (tCompare -> INT .)
    ,               reduce using rule 243 (tCompare -> INT .)
    ]               reduce using rule 243 (tCompare -> INT .)
    )               reduce using rule 243 (tCompare -> INT .)
    ;               reduce using rule 243 (tCompare -> INT .)
    :               reduce using rule 243 (tCompare -> INT .)
    }               reduce using rule 243 (tCompare -> INT .)
    +               reduce using rule 162 (valoresMat -> INT .)
    -               reduce using rule 162 (valoresMat -> INT .)
    *               reduce using rule 162 (valoresMat -> INT .)
    /               reduce using rule 162 (valoresMat -> INT .)
    %               reduce using rule 162 (valoresMat -> INT .)
    ^               reduce using rule 162 (valoresMat -> INT .)


state 360

    (245) tCompare -> FLOAT .
    (163) valoresMat -> FLOAT .

    EQEQ            reduce using rule 245 (tCompare -> FLOAT .)
    DISTINTO        reduce using rule 245 (tCompare -> FLOAT .)
    AND             reduce using rule 245 (tCompare -> FLOAT .)
    OR              reduce using rule 245 (tCompare -> FLOAT .)
    ?               reduce using rule 245 (tCompare -> FLOAT .)
    ,               reduce using rule 245 (tCompare -> FLOAT .)
    ]               reduce using rule 245 (tCompare -> FLOAT .)
    )               reduce using rule 245 (tCompare -> FLOAT .)
    ;               reduce using rule 245 (tCompare -> FLOAT .)
    :               reduce using rule 245 (tCompare -> FLOAT .)
    }               reduce using rule 245 (tCompare -> FLOAT .)
    +               reduce using rule 163 (valoresMat -> FLOAT .)
    -               reduce using rule 163 (valoresMat -> FLOAT .)
    *               reduce using rule 163 (valoresMat -> FLOAT .)
    /               reduce using rule 163 (valoresMat -> FLOAT .)
    %               reduce using rule 163 (valoresMat -> FLOAT .)
    ^               reduce using rule 163 (valoresMat -> FLOAT .)


state 361

    (241) tCompare -> varsOps .
    (169) valoresMat -> varsOps .

    EQEQ            reduce using rule 241 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 241 (tCompare -> varsOps .)
    AND             reduce using rule 241 (tCompare -> varsOps .)
    OR              reduce using rule 241 (tCompare -> varsOps .)
    ?               reduce using rule 241 (tCompare -> varsOps .)
    ,               reduce using rule 241 (tCompare -> varsOps .)
    ]               reduce using rule 241 (tCompare -> varsOps .)
    )               reduce using rule 241 (tCompare -> varsOps .)
    ;               reduce using rule 241 (tCompare -> varsOps .)
    :               reduce using rule 241 (tCompare -> varsOps .)
    }               reduce using rule 241 (tCompare -> varsOps .)
    +               reduce using rule 169 (valoresMat -> varsOps .)
    -               reduce using rule 169 (valoresMat -> varsOps .)
    *               reduce using rule 169 (valoresMat -> varsOps .)
    /               reduce using rule 169 (valoresMat -> varsOps .)
    %               reduce using rule 169 (valoresMat -> varsOps .)
    ^               reduce using rule 169 (valoresMat -> varsOps .)


state 362

    (242) tCompare -> varYVals .
    (168) valoresMat -> varYVals .

    EQEQ            reduce using rule 242 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 242 (tCompare -> varYVals .)
    AND             reduce using rule 242 (tCompare -> varYVals .)
    OR              reduce using rule 242 (tCompare -> varYVals .)
    ?               reduce using rule 242 (tCompare -> varYVals .)
    ,               reduce using rule 242 (tCompare -> varYVals .)
    ]               reduce using rule 242 (tCompare -> varYVals .)
    )               reduce using rule 242 (tCompare -> varYVals .)
    ;               reduce using rule 242 (tCompare -> varYVals .)
    :               reduce using rule 242 (tCompare -> varYVals .)
    }               reduce using rule 242 (tCompare -> varYVals .)
    +               reduce using rule 168 (valoresMat -> varYVals .)
    -               reduce using rule 168 (valoresMat -> varYVals .)
    *               reduce using rule 168 (valoresMat -> varYVals .)
    /               reduce using rule 168 (valoresMat -> varYVals .)
    %               reduce using rule 168 (valoresMat -> varYVals .)
    ^               reduce using rule 168 (valoresMat -> varYVals .)


state 363

    (247) mayor -> tCompare > tCompare .

    EQEQ            reduce using rule 247 (mayor -> tCompare > tCompare .)
    DISTINTO        reduce using rule 247 (mayor -> tCompare > tCompare .)
    AND             reduce using rule 247 (mayor -> tCompare > tCompare .)
    OR              reduce using rule 247 (mayor -> tCompare > tCompare .)
    ?               reduce using rule 247 (mayor -> tCompare > tCompare .)
    ,               reduce using rule 247 (mayor -> tCompare > tCompare .)
    ]               reduce using rule 247 (mayor -> tCompare > tCompare .)
    )               reduce using rule 247 (mayor -> tCompare > tCompare .)
    ;               reduce using rule 247 (mayor -> tCompare > tCompare .)
    :               reduce using rule 247 (mayor -> tCompare > tCompare .)
    }               reduce using rule 247 (mayor -> tCompare > tCompare .)


state 364

    (188) p -> p % valoresMat .
    (194) exp -> valoresMat . ^ iSing
    (196) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 188 (p -> p % valoresMat .)
    /               reduce using rule 188 (p -> p % valoresMat .)
    %               reduce using rule 188 (p -> p % valoresMat .)
    +               reduce using rule 188 (p -> p % valoresMat .)
    -               reduce using rule 188 (p -> p % valoresMat .)
    )               reduce using rule 188 (p -> p % valoresMat .)
    :               reduce using rule 188 (p -> p % valoresMat .)
    EQEQ            reduce using rule 188 (p -> p % valoresMat .)
    DISTINTO        reduce using rule 188 (p -> p % valoresMat .)
    >               reduce using rule 188 (p -> p % valoresMat .)
    <               reduce using rule 188 (p -> p % valoresMat .)
    ,               reduce using rule 188 (p -> p % valoresMat .)
    }               reduce using rule 188 (p -> p % valoresMat .)
    ]               reduce using rule 188 (p -> p % valoresMat .)
    ;               reduce using rule 188 (p -> p % valoresMat .)
    AND             reduce using rule 188 (p -> p % valoresMat .)
    OR              reduce using rule 188 (p -> p % valoresMat .)
    ?               reduce using rule 188 (p -> p % valoresMat .)
    ^               shift and go to state 177


state 365

    (182) p -> p % exp .
    (193) exp -> exp . ^ iSing
    (195) exp -> exp . ^ valoresMat

    *               reduce using rule 182 (p -> p % exp .)
    /               reduce using rule 182 (p -> p % exp .)
    %               reduce using rule 182 (p -> p % exp .)
    +               reduce using rule 182 (p -> p % exp .)
    -               reduce using rule 182 (p -> p % exp .)
    )               reduce using rule 182 (p -> p % exp .)
    :               reduce using rule 182 (p -> p % exp .)
    EQEQ            reduce using rule 182 (p -> p % exp .)
    DISTINTO        reduce using rule 182 (p -> p % exp .)
    >               reduce using rule 182 (p -> p % exp .)
    <               reduce using rule 182 (p -> p % exp .)
    ,               reduce using rule 182 (p -> p % exp .)
    }               reduce using rule 182 (p -> p % exp .)
    ]               reduce using rule 182 (p -> p % exp .)
    ;               reduce using rule 182 (p -> p % exp .)
    AND             reduce using rule 182 (p -> p % exp .)
    OR              reduce using rule 182 (p -> p % exp .)
    ?               reduce using rule 182 (p -> p % exp .)
    ^               shift and go to state 233


state 366

    (186) p -> p * valoresMat .
    (194) exp -> valoresMat . ^ iSing
    (196) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 186 (p -> p * valoresMat .)
    /               reduce using rule 186 (p -> p * valoresMat .)
    %               reduce using rule 186 (p -> p * valoresMat .)
    +               reduce using rule 186 (p -> p * valoresMat .)
    -               reduce using rule 186 (p -> p * valoresMat .)
    )               reduce using rule 186 (p -> p * valoresMat .)
    :               reduce using rule 186 (p -> p * valoresMat .)
    EQEQ            reduce using rule 186 (p -> p * valoresMat .)
    DISTINTO        reduce using rule 186 (p -> p * valoresMat .)
    >               reduce using rule 186 (p -> p * valoresMat .)
    <               reduce using rule 186 (p -> p * valoresMat .)
    ,               reduce using rule 186 (p -> p * valoresMat .)
    }               reduce using rule 186 (p -> p * valoresMat .)
    ]               reduce using rule 186 (p -> p * valoresMat .)
    ;               reduce using rule 186 (p -> p * valoresMat .)
    AND             reduce using rule 186 (p -> p * valoresMat .)
    OR              reduce using rule 186 (p -> p * valoresMat .)
    ?               reduce using rule 186 (p -> p * valoresMat .)
    ^               shift and go to state 177


state 367

    (180) p -> p * exp .
    (193) exp -> exp . ^ iSing
    (195) exp -> exp . ^ valoresMat

    *               reduce using rule 180 (p -> p * exp .)
    /               reduce using rule 180 (p -> p * exp .)
    %               reduce using rule 180 (p -> p * exp .)
    +               reduce using rule 180 (p -> p * exp .)
    -               reduce using rule 180 (p -> p * exp .)
    )               reduce using rule 180 (p -> p * exp .)
    :               reduce using rule 180 (p -> p * exp .)
    EQEQ            reduce using rule 180 (p -> p * exp .)
    DISTINTO        reduce using rule 180 (p -> p * exp .)
    >               reduce using rule 180 (p -> p * exp .)
    <               reduce using rule 180 (p -> p * exp .)
    ,               reduce using rule 180 (p -> p * exp .)
    }               reduce using rule 180 (p -> p * exp .)
    ]               reduce using rule 180 (p -> p * exp .)
    ;               reduce using rule 180 (p -> p * exp .)
    AND             reduce using rule 180 (p -> p * exp .)
    OR              reduce using rule 180 (p -> p * exp .)
    ?               reduce using rule 180 (p -> p * exp .)
    ^               shift and go to state 233


state 368

    (187) p -> p / valoresMat .
    (194) exp -> valoresMat . ^ iSing
    (196) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 187 (p -> p / valoresMat .)
    /               reduce using rule 187 (p -> p / valoresMat .)
    %               reduce using rule 187 (p -> p / valoresMat .)
    +               reduce using rule 187 (p -> p / valoresMat .)
    -               reduce using rule 187 (p -> p / valoresMat .)
    )               reduce using rule 187 (p -> p / valoresMat .)
    :               reduce using rule 187 (p -> p / valoresMat .)
    EQEQ            reduce using rule 187 (p -> p / valoresMat .)
    DISTINTO        reduce using rule 187 (p -> p / valoresMat .)
    >               reduce using rule 187 (p -> p / valoresMat .)
    <               reduce using rule 187 (p -> p / valoresMat .)
    ,               reduce using rule 187 (p -> p / valoresMat .)
    }               reduce using rule 187 (p -> p / valoresMat .)
    ]               reduce using rule 187 (p -> p / valoresMat .)
    ;               reduce using rule 187 (p -> p / valoresMat .)
    AND             reduce using rule 187 (p -> p / valoresMat .)
    OR              reduce using rule 187 (p -> p / valoresMat .)
    ?               reduce using rule 187 (p -> p / valoresMat .)
    ^               shift and go to state 177


state 369

    (181) p -> p / exp .
    (193) exp -> exp . ^ iSing
    (195) exp -> exp . ^ valoresMat

    *               reduce using rule 181 (p -> p / exp .)
    /               reduce using rule 181 (p -> p / exp .)
    %               reduce using rule 181 (p -> p / exp .)
    +               reduce using rule 181 (p -> p / exp .)
    -               reduce using rule 181 (p -> p / exp .)
    )               reduce using rule 181 (p -> p / exp .)
    :               reduce using rule 181 (p -> p / exp .)
    EQEQ            reduce using rule 181 (p -> p / exp .)
    DISTINTO        reduce using rule 181 (p -> p / exp .)
    >               reduce using rule 181 (p -> p / exp .)
    <               reduce using rule 181 (p -> p / exp .)
    ,               reduce using rule 181 (p -> p / exp .)
    }               reduce using rule 181 (p -> p / exp .)
    ]               reduce using rule 181 (p -> p / exp .)
    ;               reduce using rule 181 (p -> p / exp .)
    AND             reduce using rule 181 (p -> p / exp .)
    OR              reduce using rule 181 (p -> p / exp .)
    ?               reduce using rule 181 (p -> p / exp .)
    ^               shift and go to state 233


state 370

    (139) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (212) expBool -> valoresBool . OR and
    (214) expBool -> valoresBool . OR valoresBool
    (217) and -> valoresBool . AND eq
    (219) and -> valoresBool . AND valoresBool

    ?               shift and go to state 415
    OR              shift and go to state 182
    AND             shift and go to state 181


state 371

    (209) valoresBool -> ( ternarioBool . )

    )               shift and go to state 416


state 372

    (254) parenBool -> ( expBool . )
    (140) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> expBool . OR and
    (213) expBool -> expBool . OR valoresBool

    )               shift and go to state 343
    ?               shift and go to state 417
    OR              shift and go to state 217


state 373

    (195) exp -> exp ^ valoresMat .

    ^               reduce using rule 195 (exp -> exp ^ valoresMat .)
    *               reduce using rule 195 (exp -> exp ^ valoresMat .)
    /               reduce using rule 195 (exp -> exp ^ valoresMat .)
    %               reduce using rule 195 (exp -> exp ^ valoresMat .)
    +               reduce using rule 195 (exp -> exp ^ valoresMat .)
    -               reduce using rule 195 (exp -> exp ^ valoresMat .)
    :               reduce using rule 195 (exp -> exp ^ valoresMat .)
    EQEQ            reduce using rule 195 (exp -> exp ^ valoresMat .)
    DISTINTO        reduce using rule 195 (exp -> exp ^ valoresMat .)
    >               reduce using rule 195 (exp -> exp ^ valoresMat .)
    <               reduce using rule 195 (exp -> exp ^ valoresMat .)
    )               reduce using rule 195 (exp -> exp ^ valoresMat .)
    ,               reduce using rule 195 (exp -> exp ^ valoresMat .)
    ]               reduce using rule 195 (exp -> exp ^ valoresMat .)
    ;               reduce using rule 195 (exp -> exp ^ valoresMat .)
    AND             reduce using rule 195 (exp -> exp ^ valoresMat .)
    OR              reduce using rule 195 (exp -> exp ^ valoresMat .)
    ?               reduce using rule 195 (exp -> exp ^ valoresMat .)
    }               reduce using rule 195 (exp -> exp ^ valoresMat .)


state 374

    (193) exp -> exp ^ iSing .

    ^               reduce using rule 193 (exp -> exp ^ iSing .)
    *               reduce using rule 193 (exp -> exp ^ iSing .)
    /               reduce using rule 193 (exp -> exp ^ iSing .)
    %               reduce using rule 193 (exp -> exp ^ iSing .)
    +               reduce using rule 193 (exp -> exp ^ iSing .)
    -               reduce using rule 193 (exp -> exp ^ iSing .)
    :               reduce using rule 193 (exp -> exp ^ iSing .)
    EQEQ            reduce using rule 193 (exp -> exp ^ iSing .)
    DISTINTO        reduce using rule 193 (exp -> exp ^ iSing .)
    >               reduce using rule 193 (exp -> exp ^ iSing .)
    <               reduce using rule 193 (exp -> exp ^ iSing .)
    )               reduce using rule 193 (exp -> exp ^ iSing .)
    ,               reduce using rule 193 (exp -> exp ^ iSing .)
    ]               reduce using rule 193 (exp -> exp ^ iSing .)
    ;               reduce using rule 193 (exp -> exp ^ iSing .)
    AND             reduce using rule 193 (exp -> exp ^ iSing .)
    OR              reduce using rule 193 (exp -> exp ^ iSing .)
    ?               reduce using rule 193 (exp -> exp ^ iSing .)
    }               reduce using rule 193 (exp -> exp ^ iSing .)


state 375

    (161) varAsig -> ID . ID = . valores
    (82) valores -> . varYVals
    (83) valores -> . varsOps
    (84) valores -> . eMat
    (85) valores -> . expBool
    (86) valores -> . funcReturn
    (87) valores -> . reg
    (88) valores -> . INT
    (89) valores -> . FLOAT
    (90) valores -> . STRING
    (91) valores -> . BOOL
    (92) valores -> . ternario
    (93) valores -> . atributos
    (94) valores -> . vec
    (95) valores -> . RES
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (96) reg -> . { campos }
    (106) ternario -> . ternarioMat
    (107) ternario -> . ternarioBool
    (108) ternario -> . ( ternarioMat )
    (109) ternario -> . ( ternarioBool )
    (110) ternario -> . ternarioVars
    (111) ternario -> . ( ternarioVars )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 97
    FLOAT           shift and go to state 99
    STRING          shift and go to state 77
    BOOL            shift and go to state 102
    RES             shift and go to state 68
    ID              shift and go to state 95
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    {               shift and go to state 35
    (               shift and go to state 81
    [               shift and go to state 22
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    ?               reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    ternario                       shift and go to state 66
    funcBool                       shift and go to state 67
    funcInt                        shift and go to state 69
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 79
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 84
    vec                            shift and go to state 85
    paren                          shift and go to state 93
    reg                            shift and go to state 87
    expBool                        shift and go to state 88
    ternarioBool                   shift and go to state 89
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 96
    funcReturn                     shift and go to state 98
    valores                        shift and go to state 418
    p                              shift and go to state 101
    varsOps                        shift and go to state 103
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 73
    varYVals                       shift and go to state 106
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 107

state 376

    (61) vecVal -> ID [ expresion ] .

    .               reduce using rule 61 (vecVal -> ID [ expresion ] .)
    [               reduce using rule 61 (vecVal -> ID [ expresion ] .)
    ,               reduce using rule 61 (vecVal -> ID [ expresion ] .)
    ]               reduce using rule 61 (vecVal -> ID [ expresion ] .)
    )               reduce using rule 61 (vecVal -> ID [ expresion ] .)
    ;               reduce using rule 61 (vecVal -> ID [ expresion ] .)
    :               reduce using rule 61 (vecVal -> ID [ expresion ] .)
    }               reduce using rule 61 (vecVal -> ID [ expresion ] .)
    ?               reduce using rule 61 (vecVal -> ID [ expresion ] .)
    OR              reduce using rule 61 (vecVal -> ID [ expresion ] .)
    AND             reduce using rule 61 (vecVal -> ID [ expresion ] .)
    +               reduce using rule 61 (vecVal -> ID [ expresion ] .)
    -               reduce using rule 61 (vecVal -> ID [ expresion ] .)
    *               reduce using rule 61 (vecVal -> ID [ expresion ] .)
    /               reduce using rule 61 (vecVal -> ID [ expresion ] .)
    %               reduce using rule 61 (vecVal -> ID [ expresion ] .)
    ^               reduce using rule 61 (vecVal -> ID [ expresion ] .)
    EQEQ            reduce using rule 61 (vecVal -> ID [ expresion ] .)
    DISTINTO        reduce using rule 61 (vecVal -> ID [ expresion ] .)
    >               reduce using rule 61 (vecVal -> ID [ expresion ] .)
    <               reduce using rule 61 (vecVal -> ID [ expresion ] .)
    MASMAS          reduce using rule 61 (vecVal -> ID [ expresion ] .)
    MENOSMENOS      reduce using rule 61 (vecVal -> ID [ expresion ] .)
    MULEQ           reduce using rule 61 (vecVal -> ID [ expresion ] .)
    DIVEQ           reduce using rule 61 (vecVal -> ID [ expresion ] .)
    MASEQ           reduce using rule 61 (vecVal -> ID [ expresion ] .)
    MENOSEQ         reduce using rule 61 (vecVal -> ID [ expresion ] .)
    =               reduce using rule 61 (vecVal -> ID [ expresion ] .)


state 377

    (65) vecVal -> ID [ INT ] .

    .               reduce using rule 65 (vecVal -> ID [ INT ] .)
    [               reduce using rule 65 (vecVal -> ID [ INT ] .)
    ,               reduce using rule 65 (vecVal -> ID [ INT ] .)
    ]               reduce using rule 65 (vecVal -> ID [ INT ] .)
    )               reduce using rule 65 (vecVal -> ID [ INT ] .)
    ;               reduce using rule 65 (vecVal -> ID [ INT ] .)
    :               reduce using rule 65 (vecVal -> ID [ INT ] .)
    }               reduce using rule 65 (vecVal -> ID [ INT ] .)
    ?               reduce using rule 65 (vecVal -> ID [ INT ] .)
    OR              reduce using rule 65 (vecVal -> ID [ INT ] .)
    AND             reduce using rule 65 (vecVal -> ID [ INT ] .)
    +               reduce using rule 65 (vecVal -> ID [ INT ] .)
    -               reduce using rule 65 (vecVal -> ID [ INT ] .)
    *               reduce using rule 65 (vecVal -> ID [ INT ] .)
    /               reduce using rule 65 (vecVal -> ID [ INT ] .)
    %               reduce using rule 65 (vecVal -> ID [ INT ] .)
    ^               reduce using rule 65 (vecVal -> ID [ INT ] .)
    EQEQ            reduce using rule 65 (vecVal -> ID [ INT ] .)
    DISTINTO        reduce using rule 65 (vecVal -> ID [ INT ] .)
    >               reduce using rule 65 (vecVal -> ID [ INT ] .)
    <               reduce using rule 65 (vecVal -> ID [ INT ] .)
    MASMAS          reduce using rule 65 (vecVal -> ID [ INT ] .)
    MENOSMENOS      reduce using rule 65 (vecVal -> ID [ INT ] .)
    MULEQ           reduce using rule 65 (vecVal -> ID [ INT ] .)
    DIVEQ           reduce using rule 65 (vecVal -> ID [ INT ] .)
    MASEQ           reduce using rule 65 (vecVal -> ID [ INT ] .)
    MENOSEQ         reduce using rule 65 (vecVal -> ID [ INT ] .)
    =               reduce using rule 65 (vecVal -> ID [ INT ] .)


state 378

    (139) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (130) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (212) expBool -> valoresBool . OR and
    (214) expBool -> valoresBool . OR valoresBool
    (217) and -> valoresBool . AND eq
    (219) and -> valoresBool . AND valoresBool

    ?               shift and go to state 419
    OR              shift and go to state 182
    AND             shift and go to state 181


state 379

    (170) valoresMat -> ( . ternarioMat )
    (209) valoresBool -> ( . ternarioBool )
    (238) tCompareEQ -> ( . ternarioBool )
    (239) tCompareEQ -> ( . ternarioMat )
    (246) tCompare -> ( . ternarioMat )
    (203) paren -> ( . eMat )
    (204) paren -> ( . valoresMat )
    (254) parenBool -> ( . expBool )
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (53) funcBool -> . COLINEALES ( valores , valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (58) vec -> . [ elem ]
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    STRING          shift and go to state 196
    (               shift and go to state 193
    BOOL            shift and go to state 202
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    COLINEALES      shift and go to state 4
    {               shift and go to state 35
    -               shift and go to state 83
    +               shift and go to state 82
    [               shift and go to state 22
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 189
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 190
    eq                             shift and go to state 75
    vecVal                         shift and go to state 76
    eMat                           shift and go to state 192
    tCompareEQ                     shift and go to state 80
    valoresBool                    shift and go to state 337
    ternarioMat                    shift and go to state 338
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    varsOps                        shift and go to state 195
    exp                            shift and go to state 105
    ternarioBool                   shift and go to state 339
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    expBool                        shift and go to state 340
    varYVals                       shift and go to state 205
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 206

state 380

    (239) tCompareEQ -> ( ternarioMat . )
    (246) tCompare -> ( ternarioMat . )
    (170) valoresMat -> ( ternarioMat . )

    )               shift and go to state 420


state 381

    (254) parenBool -> ( expBool . )
    (140) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (131) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (211) expBool -> expBool . OR and
    (213) expBool -> expBool . OR valoresBool

    )               shift and go to state 343
    ?               shift and go to state 421
    OR              shift and go to state 217


state 382

    (6) lAbierta -> IF ( cosaBooleana ) . linea
    (7) lAbierta -> IF ( cosaBooleana ) . COMMENT com linea
    (8) lAbierta -> IF ( cosaBooleana ) . { g } ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> IF ( cosaBooleana ) . lCerrada ELSE lAbierta
    (11) lAbierta -> IF ( cosaBooleana ) . { g }
    (16) lCerrada -> IF ( cosaBooleana ) . { g } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE { g }
    (18) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) . { g } ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE COMMENT com lCerrada
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (156) varAsig -> . variable MULEQ valores
    (157) varAsig -> . variable DIVEQ valores
    (158) varAsig -> . variable MASEQ valores
    (159) varAsig -> . variable MENOSEQ valores
    (160) varAsig -> . variable = valores
    (161) varAsig -> . ID . ID = valores
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    COMMENT         shift and go to state 423
    {               shift and go to state 426
    IF              shift and go to state 424
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 7
    FOR             shift and go to state 18
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    ID              shift and go to state 23
    PRINT           shift and go to state 8
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    [               shift and go to state 22

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 9
    sentencia                      shift and go to state 11
    atributos                      shift and go to state 6
    vec                            shift and go to state 36
    reg                            shift and go to state 13
    varsOps                        shift and go to state 15
    funcVoid                       shift and go to state 16
    func                           shift and go to state 20
    variable                       shift and go to state 21
    varAsig                        shift and go to state 25
    funcString                     shift and go to state 27
    funcReturn                     shift and go to state 28
    lCerrada                       shift and go to state 425
    lAbierta                       shift and go to state 32
    linea                          shift and go to state 422
    loop                           shift and go to state 427

state 383

    (52) funcString -> CAPITALIZAR ( valores ) .

    +               reduce using rule 52 (funcString -> CAPITALIZAR ( valores ) .)
    -               reduce using rule 52 (funcString -> CAPITALIZAR ( valores ) .)
    *               reduce using rule 52 (funcString -> CAPITALIZAR ( valores ) .)
    /               reduce using rule 52 (funcString -> CAPITALIZAR ( valores ) .)
    %               reduce using rule 52 (funcString -> CAPITALIZAR ( valores ) .)
    ^               reduce using rule 52 (funcString -> CAPITALIZAR ( valores ) .)
    )               reduce using rule 52 (funcString -> CAPITALIZAR ( valores ) .)
    ,               reduce using rule 52 (funcString -> CAPITALIZAR ( valores ) .)
    ]               reduce using rule 52 (funcString -> CAPITALIZAR ( valores ) .)
    EQEQ            reduce using rule 52 (funcString -> CAPITALIZAR ( valores ) .)
    DISTINTO        reduce using rule 52 (funcString -> CAPITALIZAR ( valores ) .)
    >               reduce using rule 52 (funcString -> CAPITALIZAR ( valores ) .)
    <               reduce using rule 52 (funcString -> CAPITALIZAR ( valores ) .)
    ;               reduce using rule 52 (funcString -> CAPITALIZAR ( valores ) .)
    AND             reduce using rule 52 (funcString -> CAPITALIZAR ( valores ) .)
    OR              reduce using rule 52 (funcString -> CAPITALIZAR ( valores ) .)
    ?               reduce using rule 52 (funcString -> CAPITALIZAR ( valores ) .)
    :               reduce using rule 52 (funcString -> CAPITALIZAR ( valores ) .)
    }               reduce using rule 52 (funcString -> CAPITALIZAR ( valores ) .)


state 384

    (50) funcInt -> MULTIESCALAR ( valores , . valores param )
    (82) valores -> . varYVals
    (83) valores -> . varsOps
    (84) valores -> . eMat
    (85) valores -> . expBool
    (86) valores -> . funcReturn
    (87) valores -> . reg
    (88) valores -> . INT
    (89) valores -> . FLOAT
    (90) valores -> . STRING
    (91) valores -> . BOOL
    (92) valores -> . ternario
    (93) valores -> . atributos
    (94) valores -> . vec
    (95) valores -> . RES
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (96) reg -> . { campos }
    (106) ternario -> . ternarioMat
    (107) ternario -> . ternarioBool
    (108) ternario -> . ( ternarioMat )
    (109) ternario -> . ( ternarioBool )
    (110) ternario -> . ternarioVars
    (111) ternario -> . ( ternarioVars )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 97
    FLOAT           shift and go to state 99
    STRING          shift and go to state 77
    BOOL            shift and go to state 102
    RES             shift and go to state 68
    ID              shift and go to state 95
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    {               shift and go to state 35
    (               shift and go to state 81
    [               shift and go to state 22
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    ?               reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    ternario                       shift and go to state 66
    funcBool                       shift and go to state 67
    funcInt                        shift and go to state 69
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    vecVal                         shift and go to state 76
    eMat                           shift and go to state 79
    tCompareEQ                     shift and go to state 80
    valoresBool                    shift and go to state 78
    ternarioMat                    shift and go to state 84
    vec                            shift and go to state 85
    paren                          shift and go to state 93
    reg                            shift and go to state 87
    expBool                        shift and go to state 88
    ternarioBool                   shift and go to state 89
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 96
    funcReturn                     shift and go to state 98
    valores                        shift and go to state 428
    p                              shift and go to state 101
    varsOps                        shift and go to state 103
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 73
    varYVals                       shift and go to state 106
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 107

state 385

    (26) lCerrada -> loop COMMENT com lCerrada .

    COMMENT         reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)
    IF              reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)
    DO              reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)
    WHILE           reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)
    FOR             reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)
    RETURN          reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)
    ;               reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)
    MENOSMENOS      reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)
    MASMAS          reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)
    ID              reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)
    PRINT           reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)
    MULTIESCALAR    reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)
    LENGTH          reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)
    CAPITALIZAR     reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)
    COLINEALES      reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)
    [               reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)
    {               reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)
    }               reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)
    $end            reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)
    ELSE            reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)


state 386

    (24) lCerrada -> loop { g } .

    COMMENT         reduce using rule 24 (lCerrada -> loop { g } .)
    IF              reduce using rule 24 (lCerrada -> loop { g } .)
    DO              reduce using rule 24 (lCerrada -> loop { g } .)
    WHILE           reduce using rule 24 (lCerrada -> loop { g } .)
    FOR             reduce using rule 24 (lCerrada -> loop { g } .)
    RETURN          reduce using rule 24 (lCerrada -> loop { g } .)
    ;               reduce using rule 24 (lCerrada -> loop { g } .)
    MENOSMENOS      reduce using rule 24 (lCerrada -> loop { g } .)
    MASMAS          reduce using rule 24 (lCerrada -> loop { g } .)
    ID              reduce using rule 24 (lCerrada -> loop { g } .)
    PRINT           reduce using rule 24 (lCerrada -> loop { g } .)
    MULTIESCALAR    reduce using rule 24 (lCerrada -> loop { g } .)
    LENGTH          reduce using rule 24 (lCerrada -> loop { g } .)
    CAPITALIZAR     reduce using rule 24 (lCerrada -> loop { g } .)
    COLINEALES      reduce using rule 24 (lCerrada -> loop { g } .)
    [               reduce using rule 24 (lCerrada -> loop { g } .)
    {               reduce using rule 24 (lCerrada -> loop { g } .)
    }               reduce using rule 24 (lCerrada -> loop { g } .)
    $end            reduce using rule 24 (lCerrada -> loop { g } .)
    ELSE            reduce using rule 24 (lCerrada -> loop { g } .)


state 387

    (97) campos -> ID : valores . , campos
    (98) campos -> ID : valores .

    ,               shift and go to state 429
    }               reduce using rule 98 (campos -> ID : valores .)


state 388

    (62) vecVal -> vec [ expresion ] .

    .               reduce using rule 62 (vecVal -> vec [ expresion ] .)
    [               reduce using rule 62 (vecVal -> vec [ expresion ] .)
    ,               reduce using rule 62 (vecVal -> vec [ expresion ] .)
    ]               reduce using rule 62 (vecVal -> vec [ expresion ] .)
    )               reduce using rule 62 (vecVal -> vec [ expresion ] .)
    ;               reduce using rule 62 (vecVal -> vec [ expresion ] .)
    :               reduce using rule 62 (vecVal -> vec [ expresion ] .)
    }               reduce using rule 62 (vecVal -> vec [ expresion ] .)
    ?               reduce using rule 62 (vecVal -> vec [ expresion ] .)
    OR              reduce using rule 62 (vecVal -> vec [ expresion ] .)
    AND             reduce using rule 62 (vecVal -> vec [ expresion ] .)
    +               reduce using rule 62 (vecVal -> vec [ expresion ] .)
    -               reduce using rule 62 (vecVal -> vec [ expresion ] .)
    *               reduce using rule 62 (vecVal -> vec [ expresion ] .)
    /               reduce using rule 62 (vecVal -> vec [ expresion ] .)
    %               reduce using rule 62 (vecVal -> vec [ expresion ] .)
    ^               reduce using rule 62 (vecVal -> vec [ expresion ] .)
    EQEQ            reduce using rule 62 (vecVal -> vec [ expresion ] .)
    DISTINTO        reduce using rule 62 (vecVal -> vec [ expresion ] .)
    >               reduce using rule 62 (vecVal -> vec [ expresion ] .)
    <               reduce using rule 62 (vecVal -> vec [ expresion ] .)
    MASMAS          reduce using rule 62 (vecVal -> vec [ expresion ] .)
    MENOSMENOS      reduce using rule 62 (vecVal -> vec [ expresion ] .)
    MULEQ           reduce using rule 62 (vecVal -> vec [ expresion ] .)
    DIVEQ           reduce using rule 62 (vecVal -> vec [ expresion ] .)
    MASEQ           reduce using rule 62 (vecVal -> vec [ expresion ] .)
    MENOSEQ         reduce using rule 62 (vecVal -> vec [ expresion ] .)
    =               reduce using rule 62 (vecVal -> vec [ expresion ] .)


state 389

    (66) vecVal -> vec [ INT ] .

    .               reduce using rule 66 (vecVal -> vec [ INT ] .)
    [               reduce using rule 66 (vecVal -> vec [ INT ] .)
    ,               reduce using rule 66 (vecVal -> vec [ INT ] .)
    ]               reduce using rule 66 (vecVal -> vec [ INT ] .)
    )               reduce using rule 66 (vecVal -> vec [ INT ] .)
    ;               reduce using rule 66 (vecVal -> vec [ INT ] .)
    :               reduce using rule 66 (vecVal -> vec [ INT ] .)
    }               reduce using rule 66 (vecVal -> vec [ INT ] .)
    ?               reduce using rule 66 (vecVal -> vec [ INT ] .)
    OR              reduce using rule 66 (vecVal -> vec [ INT ] .)
    AND             reduce using rule 66 (vecVal -> vec [ INT ] .)
    +               reduce using rule 66 (vecVal -> vec [ INT ] .)
    -               reduce using rule 66 (vecVal -> vec [ INT ] .)
    *               reduce using rule 66 (vecVal -> vec [ INT ] .)
    /               reduce using rule 66 (vecVal -> vec [ INT ] .)
    %               reduce using rule 66 (vecVal -> vec [ INT ] .)
    ^               reduce using rule 66 (vecVal -> vec [ INT ] .)
    EQEQ            reduce using rule 66 (vecVal -> vec [ INT ] .)
    DISTINTO        reduce using rule 66 (vecVal -> vec [ INT ] .)
    >               reduce using rule 66 (vecVal -> vec [ INT ] .)
    <               reduce using rule 66 (vecVal -> vec [ INT ] .)
    MASMAS          reduce using rule 66 (vecVal -> vec [ INT ] .)
    MENOSMENOS      reduce using rule 66 (vecVal -> vec [ INT ] .)
    MULEQ           reduce using rule 66 (vecVal -> vec [ INT ] .)
    DIVEQ           reduce using rule 66 (vecVal -> vec [ INT ] .)
    MASEQ           reduce using rule 66 (vecVal -> vec [ INT ] .)
    MENOSEQ         reduce using rule 66 (vecVal -> vec [ INT ] .)
    =               reduce using rule 66 (vecVal -> vec [ INT ] .)


state 390

    (29) lCerrada -> DO COMMENT com lCerrada WHILE . ( valores ) ;

    (               shift and go to state 430


state 391

    (16) lCerrada -> IF ( cosaBooleana ) . { g } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE { g }
    (18) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) . { g } ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE COMMENT com lCerrada
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (156) varAsig -> . variable MULEQ valores
    (157) varAsig -> . variable DIVEQ valores
    (158) varAsig -> . variable MASEQ valores
    (159) varAsig -> . variable MENOSEQ valores
    (160) varAsig -> . variable = valores
    (161) varAsig -> . ID . ID = valores
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    {               shift and go to state 433
    COMMENT         shift and go to state 431
    IF              shift and go to state 39
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 7
    FOR             shift and go to state 18
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    ID              shift and go to state 23
    PRINT           shift and go to state 8
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    [               shift and go to state 22

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 9
    sentencia                      shift and go to state 11
    atributos                      shift and go to state 6
    vec                            shift and go to state 36
    reg                            shift and go to state 13
    funcVoid                       shift and go to state 16
    func                           shift and go to state 20
    variable                       shift and go to state 21
    varAsig                        shift and go to state 25
    funcString                     shift and go to state 27
    funcReturn                     shift and go to state 28
    lCerrada                       shift and go to state 432
    varsOps                        shift and go to state 15
    loop                           shift and go to state 42

state 392

    (28) lCerrada -> DO lCerrada WHILE ( valores . ) ;

    )               shift and go to state 434


state 393

    (27) lCerrada -> DO { g } WHILE . ( valores ) ;

    (               shift and go to state 435


state 394

    (53) funcBool -> COLINEALES ( valores , valores . )

    )               shift and go to state 436


state 395

    (148) varYVals -> vecVal . varYVals .

    MASMAS          reduce using rule 148 (varYVals -> vecVal . varYVals .)
    MENOSMENOS      reduce using rule 148 (varYVals -> vecVal . varYVals .)
    MULEQ           reduce using rule 148 (varYVals -> vecVal . varYVals .)
    DIVEQ           reduce using rule 148 (varYVals -> vecVal . varYVals .)
    MASEQ           reduce using rule 148 (varYVals -> vecVal . varYVals .)
    MENOSEQ         reduce using rule 148 (varYVals -> vecVal . varYVals .)
    =               reduce using rule 148 (varYVals -> vecVal . varYVals .)
    ;               reduce using rule 148 (varYVals -> vecVal . varYVals .)
    ,               reduce using rule 148 (varYVals -> vecVal . varYVals .)
    ]               reduce using rule 148 (varYVals -> vecVal . varYVals .)
    +               reduce using rule 148 (varYVals -> vecVal . varYVals .)
    -               reduce using rule 148 (varYVals -> vecVal . varYVals .)
    *               reduce using rule 148 (varYVals -> vecVal . varYVals .)
    /               reduce using rule 148 (varYVals -> vecVal . varYVals .)
    %               reduce using rule 148 (varYVals -> vecVal . varYVals .)
    ^               reduce using rule 148 (varYVals -> vecVal . varYVals .)
    OR              reduce using rule 148 (varYVals -> vecVal . varYVals .)
    AND             reduce using rule 148 (varYVals -> vecVal . varYVals .)
    ?               reduce using rule 148 (varYVals -> vecVal . varYVals .)
    EQEQ            reduce using rule 148 (varYVals -> vecVal . varYVals .)
    DISTINTO        reduce using rule 148 (varYVals -> vecVal . varYVals .)
    >               reduce using rule 148 (varYVals -> vecVal . varYVals .)
    <               reduce using rule 148 (varYVals -> vecVal . varYVals .)
    )               reduce using rule 148 (varYVals -> vecVal . varYVals .)
    :               reduce using rule 148 (varYVals -> vecVal . varYVals .)
    }               reduce using rule 148 (varYVals -> vecVal . varYVals .)


state 396

    (36) loop -> FOR ( primParam ; valores . ; tercerParam )

    ;               shift and go to state 437


state 397

    (238) tCompareEQ -> ( ternarioBool . )

    )               shift and go to state 438


state 398

    (139) ternarioBool -> valoresBool ? valoresTernarioBool : . valoresTernarioBool
    (116) ternarioVars -> valoresBool ? valoresTernarioBool : . valoresTernarioVars
    (141) valoresTernarioBool -> . BOOL
    (142) valoresTernarioBool -> . funcBool
    (143) valoresTernarioBool -> . ternarioBool
    (144) valoresTernarioBool -> . ( ternarioBool )
    (145) valoresTernarioBool -> . expBool
    (122) valoresTernarioVars -> . reg
    (123) valoresTernarioVars -> . vec
    (124) valoresTernarioVars -> . ternarioVars
    (125) valoresTernarioVars -> . ( ternarioVars )
    (126) valoresTernarioVars -> . atributos
    (127) valoresTernarioVars -> . varsOps
    (128) valoresTernarioVars -> . varYVals
    (129) valoresTernarioVars -> . RES
    (53) funcBool -> . COLINEALES ( valores , valores )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (96) reg -> . { campos }
    (58) vec -> . [ elem ]
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (254) parenBool -> . ( expBool )
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )

    BOOL            shift and go to state 321
    (               shift and go to state 444
    RES             shift and go to state 304
    COLINEALES      shift and go to state 4
    {               shift and go to state 35
    [               shift and go to state 22
    ID              shift and go to state 310
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    INT             shift and go to state 244
    FLOAT           shift and go to state 245
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    STRING          shift and go to state 196
    NOT             shift and go to state 104
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82

    and                            shift and go to state 65
    funcBool                       shift and go to state 303
    funcInt                        shift and go to state 239
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    vecVal                         shift and go to state 306
    eMat                           shift and go to state 241
    p                              shift and go to state 101
    valoresTernarioBool            shift and go to state 440
    valoresBool                    shift and go to state 439
    vec                            shift and go to state 312
    paren                          shift and go to state 93
    reg                            shift and go to state 314
    valoresTernarioVars            shift and go to state 441
    expBool                        shift and go to state 442
    ternarioBool                   shift and go to state 317
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    tCompareEQ                     shift and go to state 80
    varsOps                        shift and go to state 443
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 324
    varYVals                       shift and go to state 445
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 446

state 399

    (112) ternarioVars -> valoresBool ? valoresTernarioVars : . valoresTernarioVars
    (113) ternarioVars -> valoresBool ? valoresTernarioVars : . valoresTernarioMat
    (115) ternarioVars -> valoresBool ? valoresTernarioVars : . valoresTernarioBool
    (122) valoresTernarioVars -> . reg
    (123) valoresTernarioVars -> . vec
    (124) valoresTernarioVars -> . ternarioVars
    (125) valoresTernarioVars -> . ( ternarioVars )
    (126) valoresTernarioVars -> . atributos
    (127) valoresTernarioVars -> . varsOps
    (128) valoresTernarioVars -> . varYVals
    (129) valoresTernarioVars -> . RES
    (132) valoresTernarioMat -> . INT
    (133) valoresTernarioMat -> . FLOAT
    (134) valoresTernarioMat -> . funcInt
    (135) valoresTernarioMat -> . STRING
    (136) valoresTernarioMat -> . eMat
    (137) valoresTernarioMat -> . ternarioMat
    (138) valoresTernarioMat -> . ( ternarioMat )
    (141) valoresTernarioBool -> . BOOL
    (142) valoresTernarioBool -> . funcBool
    (143) valoresTernarioBool -> . ternarioBool
    (144) valoresTernarioBool -> . ( ternarioBool )
    (145) valoresTernarioBool -> . expBool
    (96) reg -> . { campos }
    (58) vec -> . [ elem ]
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (53) funcBool -> . COLINEALES ( valores , valores )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    (               shift and go to state 453
    RES             shift and go to state 304
    INT             shift and go to state 319
    FLOAT           shift and go to state 320
    STRING          shift and go to state 316
    BOOL            shift and go to state 321
    {               shift and go to state 35
    [               shift and go to state 22
    ID              shift and go to state 310
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    COLINEALES      shift and go to state 4
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    atributos                      shift and go to state 446
    funcBool                       shift and go to state 303
    funcInt                        shift and go to state 305
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 447
    eMat                           shift and go to state 308
    tCompareEQ                     shift and go to state 80
    valoresTernarioBool            shift and go to state 448
    vecVal                         shift and go to state 306
    ternarioMat                    shift and go to state 311
    vec                            shift and go to state 312
    paren                          shift and go to state 93
    reg                            shift and go to state 314
    valoresTernarioVars            shift and go to state 449
    exp                            shift and go to state 105
    ternarioBool                   shift and go to state 317
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    valoresTernarioMat             shift and go to state 450
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 452
    ternarioVars                   shift and go to state 324
    varYVals                       shift and go to state 454
    parenBool                      shift and go to state 91
    expBool                        shift and go to state 451

state 400

    (130) ternarioMat -> valoresBool ? valoresTernarioMat : . valoresTernarioMat
    (114) ternarioVars -> valoresBool ? valoresTernarioMat : . valoresTernarioVars
    (132) valoresTernarioMat -> . INT
    (133) valoresTernarioMat -> . FLOAT
    (134) valoresTernarioMat -> . funcInt
    (135) valoresTernarioMat -> . STRING
    (136) valoresTernarioMat -> . eMat
    (137) valoresTernarioMat -> . ternarioMat
    (138) valoresTernarioMat -> . ( ternarioMat )
    (122) valoresTernarioVars -> . reg
    (123) valoresTernarioVars -> . vec
    (124) valoresTernarioVars -> . ternarioVars
    (125) valoresTernarioVars -> . ( ternarioVars )
    (126) valoresTernarioVars -> . atributos
    (127) valoresTernarioVars -> . varsOps
    (128) valoresTernarioVars -> . varYVals
    (129) valoresTernarioVars -> . RES
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (96) reg -> . { campos }
    (58) vec -> . [ elem ]
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (53) funcBool -> . COLINEALES ( valores , valores )
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 319
    FLOAT           shift and go to state 320
    STRING          shift and go to state 316
    (               shift and go to state 456
    RES             shift and go to state 304
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    {               shift and go to state 35
    [               shift and go to state 22
    ID              shift and go to state 310
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    BOOL            shift and go to state 202
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    atributos                      shift and go to state 326
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 305
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 455
    eMat                           shift and go to state 308
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 306
    ternarioMat                    shift and go to state 311
    vec                            shift and go to state 312
    paren                          shift and go to state 93
    reg                            shift and go to state 314
    valoresTernarioVars            shift and go to state 457
    exp                            shift and go to state 105
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    valoresTernarioMat             shift and go to state 458
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 313
    ternarioVars                   shift and go to state 324
    varYVals                       shift and go to state 325
    parenBool                      shift and go to state 91
    expBool                        shift and go to state 459

state 401

    (138) valoresTernarioMat -> ( ternarioMat . )
    (170) valoresMat -> ( ternarioMat . )
    (239) tCompareEQ -> ( ternarioMat . )
    (246) tCompare -> ( ternarioMat . )

    )               shift and go to state 460


state 402

    (144) valoresTernarioBool -> ( ternarioBool . )
    (209) valoresBool -> ( ternarioBool . )
    (238) tCompareEQ -> ( ternarioBool . )

    )               shift and go to state 461


state 403

    (125) valoresTernarioVars -> ( ternarioVars . )

    )               shift and go to state 462


state 404

    (130) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (132) valoresTernarioMat -> . INT
    (133) valoresTernarioMat -> . FLOAT
    (134) valoresTernarioMat -> . funcInt
    (135) valoresTernarioMat -> . STRING
    (136) valoresTernarioMat -> . eMat
    (137) valoresTernarioMat -> . ternarioMat
    (138) valoresTernarioMat -> . ( ternarioMat )
    (141) valoresTernarioBool -> . BOOL
    (142) valoresTernarioBool -> . funcBool
    (143) valoresTernarioBool -> . ternarioBool
    (144) valoresTernarioBool -> . ( ternarioBool )
    (145) valoresTernarioBool -> . expBool
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (53) funcBool -> . COLINEALES ( valores , valores )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (58) vec -> . [ elem ]
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 319
    FLOAT           shift and go to state 320
    STRING          shift and go to state 316
    (               shift and go to state 465
    BOOL            shift and go to state 321
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    COLINEALES      shift and go to state 4
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    {               shift and go to state 35
    -               shift and go to state 83
    +               shift and go to state 82
    [               shift and go to state 22
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 303
    funcInt                        shift and go to state 305
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 337
    eMat                           shift and go to state 308
    tCompareEQ                     shift and go to state 80
    valoresTernarioBool            shift and go to state 463
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 311
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    varsOps                        shift and go to state 195
    exp                            shift and go to state 105
    ternarioBool                   shift and go to state 317
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    valoresTernarioMat             shift and go to state 464
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    expBool                        shift and go to state 466
    varYVals                       shift and go to state 205
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 206

state 405

    (170) valoresMat -> ( ternarioMat ) .
    (239) tCompareEQ -> ( ternarioMat ) .
    (246) tCompare -> ( ternarioMat ) .

    )               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    +               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    ^               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    EQEQ            reduce using rule 239 (tCompareEQ -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 239 (tCompareEQ -> ( ternarioMat ) .)
    >               reduce using rule 246 (tCompare -> ( ternarioMat ) .)
    <               reduce using rule 246 (tCompare -> ( ternarioMat ) .)


state 406

    (209) valoresBool -> ( ternarioBool ) .
    (238) tCompareEQ -> ( ternarioBool ) .

    AND             reduce using rule 209 (valoresBool -> ( ternarioBool ) .)
    OR              reduce using rule 209 (valoresBool -> ( ternarioBool ) .)
    ?               reduce using rule 209 (valoresBool -> ( ternarioBool ) .)
    ,               reduce using rule 209 (valoresBool -> ( ternarioBool ) .)
    ]               reduce using rule 209 (valoresBool -> ( ternarioBool ) .)
    )               reduce using rule 209 (valoresBool -> ( ternarioBool ) .)
    ;               reduce using rule 209 (valoresBool -> ( ternarioBool ) .)
    :               reduce using rule 209 (valoresBool -> ( ternarioBool ) .)
    }               reduce using rule 209 (valoresBool -> ( ternarioBool ) .)
    EQEQ            reduce using rule 238 (tCompareEQ -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 238 (tCompareEQ -> ( ternarioBool ) .)


state 407

    (131) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (140) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (132) valoresTernarioMat -> . INT
    (133) valoresTernarioMat -> . FLOAT
    (134) valoresTernarioMat -> . funcInt
    (135) valoresTernarioMat -> . STRING
    (136) valoresTernarioMat -> . eMat
    (137) valoresTernarioMat -> . ternarioMat
    (138) valoresTernarioMat -> . ( ternarioMat )
    (141) valoresTernarioBool -> . BOOL
    (142) valoresTernarioBool -> . funcBool
    (143) valoresTernarioBool -> . ternarioBool
    (144) valoresTernarioBool -> . ( ternarioBool )
    (145) valoresTernarioBool -> . expBool
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (53) funcBool -> . COLINEALES ( valores , valores )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (58) vec -> . [ elem ]
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 319
    FLOAT           shift and go to state 320
    STRING          shift and go to state 316
    (               shift and go to state 465
    BOOL            shift and go to state 321
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    COLINEALES      shift and go to state 4
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    {               shift and go to state 35
    -               shift and go to state 83
    +               shift and go to state 82
    [               shift and go to state 22
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 303
    funcInt                        shift and go to state 305
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 337
    eMat                           shift and go to state 308
    tCompareEQ                     shift and go to state 80
    valoresTernarioBool            shift and go to state 467
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 311
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    varsOps                        shift and go to state 195
    exp                            shift and go to state 105
    ternarioBool                   shift and go to state 317
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    valoresTernarioMat             shift and go to state 468
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    expBool                        shift and go to state 466
    varYVals                       shift and go to state 205
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 206

state 408

    (130) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (132) valoresTernarioMat -> . INT
    (133) valoresTernarioMat -> . FLOAT
    (134) valoresTernarioMat -> . funcInt
    (135) valoresTernarioMat -> . STRING
    (136) valoresTernarioMat -> . eMat
    (137) valoresTernarioMat -> . ternarioMat
    (138) valoresTernarioMat -> . ( ternarioMat )
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (53) funcBool -> . COLINEALES ( valores , valores )
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (58) vec -> . [ elem ]
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 319
    FLOAT           shift and go to state 320
    STRING          shift and go to state 316
    (               shift and go to state 469
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    BOOL            shift and go to state 202
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    COLINEALES      shift and go to state 4
    {               shift and go to state 35
    -               shift and go to state 83
    +               shift and go to state 82
    [               shift and go to state 22
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 305
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    vecVal                         shift and go to state 76
    eMat                           shift and go to state 308
    tCompareEQ                     shift and go to state 80
    valoresBool                    shift and go to state 345
    ternarioMat                    shift and go to state 311
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    varsOps                        shift and go to state 195
    exp                            shift and go to state 105
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    valoresTernarioMat             shift and go to state 464
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    expBool                        shift and go to state 348
    varYVals                       shift and go to state 205
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 206

state 409

    (170) valoresMat -> ( ternarioMat ) .

    ^               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    +               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    ,               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    ]               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    EQEQ            reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    >               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    <               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    )               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    ;               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    AND             reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    OR              reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    ?               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    :               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    }               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)


state 410

    (131) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (132) valoresTernarioMat -> . INT
    (133) valoresTernarioMat -> . FLOAT
    (134) valoresTernarioMat -> . funcInt
    (135) valoresTernarioMat -> . STRING
    (136) valoresTernarioMat -> . eMat
    (137) valoresTernarioMat -> . ternarioMat
    (138) valoresTernarioMat -> . ( ternarioMat )
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (53) funcBool -> . COLINEALES ( valores , valores )
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (58) vec -> . [ elem ]
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 319
    FLOAT           shift and go to state 320
    STRING          shift and go to state 316
    (               shift and go to state 469
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    BOOL            shift and go to state 202
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    COLINEALES      shift and go to state 4
    {               shift and go to state 35
    -               shift and go to state 83
    +               shift and go to state 82
    [               shift and go to state 22
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 305
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    vecVal                         shift and go to state 76
    eMat                           shift and go to state 308
    tCompareEQ                     shift and go to state 80
    valoresBool                    shift and go to state 345
    ternarioMat                    shift and go to state 311
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    varsOps                        shift and go to state 195
    exp                            shift and go to state 105
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    valoresTernarioMat             shift and go to state 468
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    expBool                        shift and go to state 348
    varYVals                       shift and go to state 205
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 206

state 411

    (140) ternarioBool -> expBool ? valoresTernarioBool : . valoresTernarioBool
    (121) ternarioVars -> expBool ? valoresTernarioBool : . valoresTernarioVars
    (141) valoresTernarioBool -> . BOOL
    (142) valoresTernarioBool -> . funcBool
    (143) valoresTernarioBool -> . ternarioBool
    (144) valoresTernarioBool -> . ( ternarioBool )
    (145) valoresTernarioBool -> . expBool
    (122) valoresTernarioVars -> . reg
    (123) valoresTernarioVars -> . vec
    (124) valoresTernarioVars -> . ternarioVars
    (125) valoresTernarioVars -> . ( ternarioVars )
    (126) valoresTernarioVars -> . atributos
    (127) valoresTernarioVars -> . varsOps
    (128) valoresTernarioVars -> . varYVals
    (129) valoresTernarioVars -> . RES
    (53) funcBool -> . COLINEALES ( valores , valores )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (96) reg -> . { campos }
    (58) vec -> . [ elem ]
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (254) parenBool -> . ( expBool )
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )

    BOOL            shift and go to state 321
    (               shift and go to state 444
    RES             shift and go to state 304
    COLINEALES      shift and go to state 4
    {               shift and go to state 35
    [               shift and go to state 22
    ID              shift and go to state 310
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    INT             shift and go to state 244
    FLOAT           shift and go to state 245
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    STRING          shift and go to state 196
    NOT             shift and go to state 104
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82

    and                            shift and go to state 65
    funcBool                       shift and go to state 303
    funcInt                        shift and go to state 239
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 439
    eMat                           shift and go to state 241
    p                              shift and go to state 101
    valoresTernarioBool            shift and go to state 470
    vecVal                         shift and go to state 306
    vec                            shift and go to state 312
    paren                          shift and go to state 93
    reg                            shift and go to state 314
    valoresTernarioVars            shift and go to state 471
    expBool                        shift and go to state 442
    ternarioBool                   shift and go to state 317
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    tCompareEQ                     shift and go to state 80
    varsOps                        shift and go to state 443
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 324
    varYVals                       shift and go to state 445
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 446

state 412

    (117) ternarioVars -> expBool ? valoresTernarioVars : . valoresTernarioVars
    (118) ternarioVars -> expBool ? valoresTernarioVars : . valoresTernarioMat
    (120) ternarioVars -> expBool ? valoresTernarioVars : . valoresTernarioBool
    (122) valoresTernarioVars -> . reg
    (123) valoresTernarioVars -> . vec
    (124) valoresTernarioVars -> . ternarioVars
    (125) valoresTernarioVars -> . ( ternarioVars )
    (126) valoresTernarioVars -> . atributos
    (127) valoresTernarioVars -> . varsOps
    (128) valoresTernarioVars -> . varYVals
    (129) valoresTernarioVars -> . RES
    (132) valoresTernarioMat -> . INT
    (133) valoresTernarioMat -> . FLOAT
    (134) valoresTernarioMat -> . funcInt
    (135) valoresTernarioMat -> . STRING
    (136) valoresTernarioMat -> . eMat
    (137) valoresTernarioMat -> . ternarioMat
    (138) valoresTernarioMat -> . ( ternarioMat )
    (141) valoresTernarioBool -> . BOOL
    (142) valoresTernarioBool -> . funcBool
    (143) valoresTernarioBool -> . ternarioBool
    (144) valoresTernarioBool -> . ( ternarioBool )
    (145) valoresTernarioBool -> . expBool
    (96) reg -> . { campos }
    (58) vec -> . [ elem ]
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (53) funcBool -> . COLINEALES ( valores , valores )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    (               shift and go to state 453
    RES             shift and go to state 304
    INT             shift and go to state 319
    FLOAT           shift and go to state 320
    STRING          shift and go to state 316
    BOOL            shift and go to state 321
    {               shift and go to state 35
    [               shift and go to state 22
    ID              shift and go to state 310
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    COLINEALES      shift and go to state 4
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 303
    funcInt                        shift and go to state 305
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 447
    eMat                           shift and go to state 308
    tCompareEQ                     shift and go to state 80
    valoresTernarioBool            shift and go to state 472
    vecVal                         shift and go to state 306
    ternarioMat                    shift and go to state 311
    vec                            shift and go to state 312
    paren                          shift and go to state 93
    reg                            shift and go to state 314
    valoresTernarioVars            shift and go to state 473
    expBool                        shift and go to state 451
    ternarioBool                   shift and go to state 317
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    valoresTernarioMat             shift and go to state 474
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 452
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 324
    varYVals                       shift and go to state 454
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 446

state 413

    (131) ternarioMat -> expBool ? valoresTernarioMat : . valoresTernarioMat
    (119) ternarioVars -> expBool ? valoresTernarioMat : . valoresTernarioVars
    (132) valoresTernarioMat -> . INT
    (133) valoresTernarioMat -> . FLOAT
    (134) valoresTernarioMat -> . funcInt
    (135) valoresTernarioMat -> . STRING
    (136) valoresTernarioMat -> . eMat
    (137) valoresTernarioMat -> . ternarioMat
    (138) valoresTernarioMat -> . ( ternarioMat )
    (122) valoresTernarioVars -> . reg
    (123) valoresTernarioVars -> . vec
    (124) valoresTernarioVars -> . ternarioVars
    (125) valoresTernarioVars -> . ( ternarioVars )
    (126) valoresTernarioVars -> . atributos
    (127) valoresTernarioVars -> . varsOps
    (128) valoresTernarioVars -> . varYVals
    (129) valoresTernarioVars -> . RES
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (96) reg -> . { campos }
    (58) vec -> . [ elem ]
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (53) funcBool -> . COLINEALES ( valores , valores )
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 319
    FLOAT           shift and go to state 320
    STRING          shift and go to state 316
    (               shift and go to state 456
    RES             shift and go to state 304
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    {               shift and go to state 35
    [               shift and go to state 22
    ID              shift and go to state 310
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    BOOL            shift and go to state 202
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 305
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 455
    eMat                           shift and go to state 308
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 306
    ternarioMat                    shift and go to state 311
    vec                            shift and go to state 312
    paren                          shift and go to state 93
    reg                            shift and go to state 314
    valoresTernarioVars            shift and go to state 476
    expBool                        shift and go to state 459
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    valoresTernarioMat             shift and go to state 475
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 313
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 324
    varYVals                       shift and go to state 325
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 326

state 414

    (246) tCompare -> ( ternarioMat . )
    (170) valoresMat -> ( ternarioMat . )

    )               shift and go to state 477


state 415

    (139) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (141) valoresTernarioBool -> . BOOL
    (142) valoresTernarioBool -> . funcBool
    (143) valoresTernarioBool -> . ternarioBool
    (144) valoresTernarioBool -> . ( ternarioBool )
    (145) valoresTernarioBool -> . expBool
    (53) funcBool -> . COLINEALES ( valores , valores )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (96) reg -> . { campos }
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (254) parenBool -> . ( expBool )
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )

    BOOL            shift and go to state 321
    (               shift and go to state 478
    COLINEALES      shift and go to state 4
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    ID              shift and go to state 229
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    INT             shift and go to state 244
    FLOAT           shift and go to state 245
    [               shift and go to state 22
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    {               shift and go to state 35
    STRING          shift and go to state 196
    NOT             shift and go to state 104
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82

    and                            shift and go to state 65
    funcBool                       shift and go to state 303
    funcInt                        shift and go to state 239
    not                            shift and go to state 71
    menor                          shift and go to state 72
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    vecVal                         shift and go to state 76
    valoresBool                    shift and go to state 370
    eMat                           shift and go to state 241
    p                              shift and go to state 101
    valoresTernarioBool            shift and go to state 463
    mayor                          shift and go to state 86
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    iSing                          shift and go to state 90
    expBool                        shift and go to state 479
    ternarioBool                   shift and go to state 317
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    tCompareEQ                     shift and go to state 80
    varsOps                        shift and go to state 246
    exp                            shift and go to state 105
    varYVals                       shift and go to state 247
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 238

state 416

    (209) valoresBool -> ( ternarioBool ) .

    EQEQ            reduce using rule 209 (valoresBool -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 209 (valoresBool -> ( ternarioBool ) .)
    AND             reduce using rule 209 (valoresBool -> ( ternarioBool ) .)
    OR              reduce using rule 209 (valoresBool -> ( ternarioBool ) .)
    ?               reduce using rule 209 (valoresBool -> ( ternarioBool ) .)
    ,               reduce using rule 209 (valoresBool -> ( ternarioBool ) .)
    ]               reduce using rule 209 (valoresBool -> ( ternarioBool ) .)
    )               reduce using rule 209 (valoresBool -> ( ternarioBool ) .)
    ;               reduce using rule 209 (valoresBool -> ( ternarioBool ) .)
    :               reduce using rule 209 (valoresBool -> ( ternarioBool ) .)
    }               reduce using rule 209 (valoresBool -> ( ternarioBool ) .)


state 417

    (140) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (141) valoresTernarioBool -> . BOOL
    (142) valoresTernarioBool -> . funcBool
    (143) valoresTernarioBool -> . ternarioBool
    (144) valoresTernarioBool -> . ( ternarioBool )
    (145) valoresTernarioBool -> . expBool
    (53) funcBool -> . COLINEALES ( valores , valores )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (96) reg -> . { campos }
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (254) parenBool -> . ( expBool )
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )

    BOOL            shift and go to state 321
    (               shift and go to state 478
    COLINEALES      shift and go to state 4
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    ID              shift and go to state 229
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    INT             shift and go to state 244
    FLOAT           shift and go to state 245
    [               shift and go to state 22
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    {               shift and go to state 35
    STRING          shift and go to state 196
    NOT             shift and go to state 104
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82

    and                            shift and go to state 65
    funcBool                       shift and go to state 303
    funcInt                        shift and go to state 239
    not                            shift and go to state 71
    menor                          shift and go to state 72
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    vecVal                         shift and go to state 76
    valoresBool                    shift and go to state 370
    eMat                           shift and go to state 241
    p                              shift and go to state 101
    valoresTernarioBool            shift and go to state 467
    mayor                          shift and go to state 86
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    iSing                          shift and go to state 90
    expBool                        shift and go to state 479
    ternarioBool                   shift and go to state 317
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    tCompareEQ                     shift and go to state 80
    varsOps                        shift and go to state 246
    exp                            shift and go to state 105
    varYVals                       shift and go to state 247
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 238

state 418

    (161) varAsig -> ID . ID = valores .

    )               reduce using rule 161 (varAsig -> ID . ID = valores .)
    ;               reduce using rule 161 (varAsig -> ID . ID = valores .)


state 419

    (139) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (130) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (141) valoresTernarioBool -> . BOOL
    (142) valoresTernarioBool -> . funcBool
    (143) valoresTernarioBool -> . ternarioBool
    (144) valoresTernarioBool -> . ( ternarioBool )
    (145) valoresTernarioBool -> . expBool
    (132) valoresTernarioMat -> . INT
    (133) valoresTernarioMat -> . FLOAT
    (134) valoresTernarioMat -> . funcInt
    (135) valoresTernarioMat -> . STRING
    (136) valoresTernarioMat -> . eMat
    (137) valoresTernarioMat -> . ternarioMat
    (138) valoresTernarioMat -> . ( ternarioMat )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (96) reg -> . { campos }
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (58) vec -> . [ elem ]
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    BOOL            shift and go to state 321
    (               shift and go to state 482
    INT             shift and go to state 319
    FLOAT           shift and go to state 320
    STRING          shift and go to state 316
    COLINEALES      shift and go to state 4
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    ID              shift and go to state 95
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    CAPITALIZAR     shift and go to state 29
    {               shift and go to state 35
    -               shift and go to state 83
    +               shift and go to state 82
    [               shift and go to state 22
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 303
    funcInt                        shift and go to state 305
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    vecVal                         shift and go to state 76
    eMat                           shift and go to state 308
    tCompareEQ                     shift and go to state 80
    valoresTernarioBool            shift and go to state 463
    valoresBool                    shift and go to state 480
    ternarioMat                    shift and go to state 311
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    iSing                          shift and go to state 90
    expBool                        shift and go to state 484
    ternarioBool                   shift and go to state 317
    tCompare                       shift and go to state 92
    valoresTernarioMat             shift and go to state 464
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 481
    exp                            shift and go to state 105
    varYVals                       shift and go to state 483
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 206

state 420

    (239) tCompareEQ -> ( ternarioMat ) .
    (246) tCompare -> ( ternarioMat ) .
    (170) valoresMat -> ( ternarioMat ) .

    EQEQ            reduce using rule 239 (tCompareEQ -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 239 (tCompareEQ -> ( ternarioMat ) .)
    AND             reduce using rule 239 (tCompareEQ -> ( ternarioMat ) .)
    OR              reduce using rule 239 (tCompareEQ -> ( ternarioMat ) .)
    ?               reduce using rule 239 (tCompareEQ -> ( ternarioMat ) .)
    ,               reduce using rule 239 (tCompareEQ -> ( ternarioMat ) .)
    ]               reduce using rule 239 (tCompareEQ -> ( ternarioMat ) .)
    )               reduce using rule 239 (tCompareEQ -> ( ternarioMat ) .)
    ;               reduce using rule 239 (tCompareEQ -> ( ternarioMat ) .)
    :               reduce using rule 239 (tCompareEQ -> ( ternarioMat ) .)
    }               reduce using rule 239 (tCompareEQ -> ( ternarioMat ) .)
    >               reduce using rule 246 (tCompare -> ( ternarioMat ) .)
    <               reduce using rule 246 (tCompare -> ( ternarioMat ) .)
    +               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    ^               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)


state 421

    (140) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (131) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (141) valoresTernarioBool -> . BOOL
    (142) valoresTernarioBool -> . funcBool
    (143) valoresTernarioBool -> . ternarioBool
    (144) valoresTernarioBool -> . ( ternarioBool )
    (145) valoresTernarioBool -> . expBool
    (132) valoresTernarioMat -> . INT
    (133) valoresTernarioMat -> . FLOAT
    (134) valoresTernarioMat -> . funcInt
    (135) valoresTernarioMat -> . STRING
    (136) valoresTernarioMat -> . eMat
    (137) valoresTernarioMat -> . ternarioMat
    (138) valoresTernarioMat -> . ( ternarioMat )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (96) reg -> . { campos }
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (58) vec -> . [ elem ]
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    BOOL            shift and go to state 321
    (               shift and go to state 482
    INT             shift and go to state 319
    FLOAT           shift and go to state 320
    STRING          shift and go to state 316
    COLINEALES      shift and go to state 4
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    ID              shift and go to state 95
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    CAPITALIZAR     shift and go to state 29
    {               shift and go to state 35
    -               shift and go to state 83
    +               shift and go to state 82
    [               shift and go to state 22
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 303
    funcInt                        shift and go to state 305
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    vecVal                         shift and go to state 76
    eMat                           shift and go to state 308
    tCompareEQ                     shift and go to state 80
    valoresTernarioBool            shift and go to state 467
    valoresBool                    shift and go to state 480
    ternarioMat                    shift and go to state 311
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    iSing                          shift and go to state 90
    expBool                        shift and go to state 484
    ternarioBool                   shift and go to state 317
    tCompare                       shift and go to state 92
    valoresTernarioMat             shift and go to state 468
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 481
    exp                            shift and go to state 105
    varYVals                       shift and go to state 483
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 206

state 422

    (6) lAbierta -> IF ( cosaBooleana ) linea .

    COMMENT         reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    IF              reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    DO              reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    WHILE           reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    FOR             reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    RETURN          reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    ;               reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    MENOSMENOS      reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    MASMAS          reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    ID              reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    PRINT           reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    MULTIESCALAR    reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    LENGTH          reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    CAPITALIZAR     reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    COLINEALES      reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    [               reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    {               reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    $end            reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    }               reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)


state 423

    (7) lAbierta -> IF ( cosaBooleana ) COMMENT . com linea
    (9) lAbierta -> IF ( cosaBooleana ) COMMENT . com lCerrada ELSE lAbierta
    (18) lCerrada -> IF ( cosaBooleana ) COMMENT . com lCerrada ELSE { g }
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT . com lCerrada ELSE lCerrada
    (23) lCerrada -> IF ( cosaBooleana ) COMMENT . com lCerrada ELSE COMMENT com lCerrada
    (14) com -> . COMMENT com
    (15) com -> . empty
    (57) empty -> .

    COMMENT         shift and go to state 123
    IF              reduce using rule 57 (empty -> .)
    DO              reduce using rule 57 (empty -> .)
    RETURN          reduce using rule 57 (empty -> .)
    ;               reduce using rule 57 (empty -> .)
    WHILE           reduce using rule 57 (empty -> .)
    FOR             reduce using rule 57 (empty -> .)
    MENOSMENOS      reduce using rule 57 (empty -> .)
    MASMAS          reduce using rule 57 (empty -> .)
    ID              reduce using rule 57 (empty -> .)
    PRINT           reduce using rule 57 (empty -> .)
    MULTIESCALAR    reduce using rule 57 (empty -> .)
    LENGTH          reduce using rule 57 (empty -> .)
    CAPITALIZAR     reduce using rule 57 (empty -> .)
    COLINEALES      reduce using rule 57 (empty -> .)
    [               reduce using rule 57 (empty -> .)
    {               reduce using rule 57 (empty -> .)

    empty                          shift and go to state 125
    com                            shift and go to state 485

state 424

    (16) lCerrada -> IF . ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> IF . ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (6) lAbierta -> IF . ( cosaBooleana ) linea
    (7) lAbierta -> IF . ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> IF . ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> IF . ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> IF . ( cosaBooleana ) { g }

    (               shift and go to state 486


state 425

    (10) lAbierta -> IF ( cosaBooleana ) lCerrada . ELSE lAbierta
    (17) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE { g }
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE lCerrada
    (22) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE COMMENT com lCerrada
    (5) linea -> lCerrada .

    ELSE            shift and go to state 487
    COMMENT         reduce using rule 5 (linea -> lCerrada .)
    IF              reduce using rule 5 (linea -> lCerrada .)
    DO              reduce using rule 5 (linea -> lCerrada .)
    WHILE           reduce using rule 5 (linea -> lCerrada .)
    FOR             reduce using rule 5 (linea -> lCerrada .)
    RETURN          reduce using rule 5 (linea -> lCerrada .)
    ;               reduce using rule 5 (linea -> lCerrada .)
    MENOSMENOS      reduce using rule 5 (linea -> lCerrada .)
    MASMAS          reduce using rule 5 (linea -> lCerrada .)
    ID              reduce using rule 5 (linea -> lCerrada .)
    PRINT           reduce using rule 5 (linea -> lCerrada .)
    MULTIESCALAR    reduce using rule 5 (linea -> lCerrada .)
    LENGTH          reduce using rule 5 (linea -> lCerrada .)
    CAPITALIZAR     reduce using rule 5 (linea -> lCerrada .)
    COLINEALES      reduce using rule 5 (linea -> lCerrada .)
    [               reduce using rule 5 (linea -> lCerrada .)
    {               reduce using rule 5 (linea -> lCerrada .)
    $end            reduce using rule 5 (linea -> lCerrada .)
    }               reduce using rule 5 (linea -> lCerrada .)


state 426

    (8) lAbierta -> IF ( cosaBooleana ) { . g } ELSE lAbierta
    (11) lAbierta -> IF ( cosaBooleana ) { . g }
    (16) lCerrada -> IF ( cosaBooleana ) { . g } ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) { . g } ELSE lCerrada
    (96) reg -> { . campos }
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (97) campos -> . ID : valores , campos
    (98) campos -> . ID : valores
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (57) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (156) varAsig -> . variable MULEQ valores
    (157) varAsig -> . variable DIVEQ valores
    (158) varAsig -> . variable MASEQ valores
    (159) varAsig -> . variable MENOSEQ valores
    (160) varAsig -> . variable = valores
    (161) varAsig -> . ID . ID = valores
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    COMMENT         shift and go to state 10
    ID              shift and go to state 128
    }               reduce using rule 57 (empty -> .)
    IF              shift and go to state 24
    DO              shift and go to state 1
    WHILE           shift and go to state 7
    FOR             shift and go to state 18
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    PRINT           shift and go to state 8
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    [               shift and go to state 22
    {               shift and go to state 35

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    linea                          shift and go to state 37
    vecVal                         shift and go to state 9
    sentencia                      shift and go to state 11
    atributos                      shift and go to state 6
    vec                            shift and go to state 36
    reg                            shift and go to state 13
    empty                          shift and go to state 14
    funcVoid                       shift and go to state 16
    campos                         shift and go to state 119
    func                           shift and go to state 20
    variable                       shift and go to state 21
    varAsig                        shift and go to state 25
    g                              shift and go to state 488
    funcString                     shift and go to state 27
    funcReturn                     shift and go to state 28
    lCerrada                       shift and go to state 30
    lAbierta                       shift and go to state 32
    varsOps                        shift and go to state 15
    loop                           shift and go to state 34

state 427

    (24) lCerrada -> loop . { g }
    (25) lCerrada -> loop . lCerrada
    (26) lCerrada -> loop . COMMENT com lCerrada
    (12) lAbierta -> loop . lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (156) varAsig -> . variable MULEQ valores
    (157) varAsig -> . variable DIVEQ valores
    (158) varAsig -> . variable MASEQ valores
    (159) varAsig -> . variable MENOSEQ valores
    (160) varAsig -> . variable = valores
    (161) varAsig -> . ID . ID = valores
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    {               shift and go to state 118
    COMMENT         shift and go to state 115
    IF              shift and go to state 424
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 7
    FOR             shift and go to state 18
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    ID              shift and go to state 23
    PRINT           shift and go to state 8
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    [               shift and go to state 22

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 9
    sentencia                      shift and go to state 11
    atributos                      shift and go to state 6
    vec                            shift and go to state 36
    reg                            shift and go to state 13
    varsOps                        shift and go to state 15
    funcVoid                       shift and go to state 16
    func                           shift and go to state 20
    variable                       shift and go to state 21
    varAsig                        shift and go to state 25
    funcString                     shift and go to state 27
    funcReturn                     shift and go to state 28
    lCerrada                       shift and go to state 116
    lAbierta                       shift and go to state 117
    loop                           shift and go to state 427

state 428

    (50) funcInt -> MULTIESCALAR ( valores , valores . param )
    (55) param -> . , valores
    (56) param -> . empty
    (57) empty -> .

    ,               shift and go to state 490
    )               reduce using rule 57 (empty -> .)

    empty                          shift and go to state 491
    param                          shift and go to state 489

state 429

    (97) campos -> ID : valores , . campos
    (97) campos -> . ID : valores , campos
    (98) campos -> . ID : valores

    ID              shift and go to state 120

    campos                         shift and go to state 492

state 430

    (29) lCerrada -> DO COMMENT com lCerrada WHILE ( . valores ) ;
    (82) valores -> . varYVals
    (83) valores -> . varsOps
    (84) valores -> . eMat
    (85) valores -> . expBool
    (86) valores -> . funcReturn
    (87) valores -> . reg
    (88) valores -> . INT
    (89) valores -> . FLOAT
    (90) valores -> . STRING
    (91) valores -> . BOOL
    (92) valores -> . ternario
    (93) valores -> . atributos
    (94) valores -> . vec
    (95) valores -> . RES
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (96) reg -> . { campos }
    (106) ternario -> . ternarioMat
    (107) ternario -> . ternarioBool
    (108) ternario -> . ( ternarioMat )
    (109) ternario -> . ( ternarioBool )
    (110) ternario -> . ternarioVars
    (111) ternario -> . ( ternarioVars )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 97
    FLOAT           shift and go to state 99
    STRING          shift and go to state 77
    BOOL            shift and go to state 102
    RES             shift and go to state 68
    ID              shift and go to state 95
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    {               shift and go to state 35
    (               shift and go to state 81
    [               shift and go to state 22
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    ?               reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    ternario                       shift and go to state 66
    funcBool                       shift and go to state 67
    funcInt                        shift and go to state 69
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 79
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 84
    vec                            shift and go to state 85
    paren                          shift and go to state 93
    reg                            shift and go to state 87
    expBool                        shift and go to state 88
    ternarioBool                   shift and go to state 89
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 96
    varYVals                       shift and go to state 106
    funcReturn                     shift and go to state 98
    valores                        shift and go to state 493
    p                              shift and go to state 101
    varsOps                        shift and go to state 103
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 73
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 107

state 431

    (18) lCerrada -> IF ( cosaBooleana ) COMMENT . com lCerrada ELSE { g }
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT . com lCerrada ELSE lCerrada
    (23) lCerrada -> IF ( cosaBooleana ) COMMENT . com lCerrada ELSE COMMENT com lCerrada
    (14) com -> . COMMENT com
    (15) com -> . empty
    (57) empty -> .

    COMMENT         shift and go to state 123
    IF              reduce using rule 57 (empty -> .)
    DO              reduce using rule 57 (empty -> .)
    RETURN          reduce using rule 57 (empty -> .)
    ;               reduce using rule 57 (empty -> .)
    WHILE           reduce using rule 57 (empty -> .)
    FOR             reduce using rule 57 (empty -> .)
    MENOSMENOS      reduce using rule 57 (empty -> .)
    MASMAS          reduce using rule 57 (empty -> .)
    ID              reduce using rule 57 (empty -> .)
    PRINT           reduce using rule 57 (empty -> .)
    MULTIESCALAR    reduce using rule 57 (empty -> .)
    LENGTH          reduce using rule 57 (empty -> .)
    CAPITALIZAR     reduce using rule 57 (empty -> .)
    COLINEALES      reduce using rule 57 (empty -> .)
    [               reduce using rule 57 (empty -> .)
    {               reduce using rule 57 (empty -> .)

    com                            shift and go to state 494
    empty                          shift and go to state 125

state 432

    (17) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE { g }
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE lCerrada
    (22) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE COMMENT com lCerrada

    ELSE            shift and go to state 495


state 433

    (16) lCerrada -> IF ( cosaBooleana ) { . g } ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) { . g } ELSE lCerrada
    (96) reg -> { . campos }
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (97) campos -> . ID : valores , campos
    (98) campos -> . ID : valores
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (57) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (156) varAsig -> . variable MULEQ valores
    (157) varAsig -> . variable DIVEQ valores
    (158) varAsig -> . variable MASEQ valores
    (159) varAsig -> . variable MENOSEQ valores
    (160) varAsig -> . variable = valores
    (161) varAsig -> . ID . ID = valores
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    COMMENT         shift and go to state 10
    ID              shift and go to state 128
    }               reduce using rule 57 (empty -> .)
    IF              shift and go to state 24
    DO              shift and go to state 1
    WHILE           shift and go to state 7
    FOR             shift and go to state 18
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    PRINT           shift and go to state 8
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    [               shift and go to state 22
    {               shift and go to state 35

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    linea                          shift and go to state 37
    vecVal                         shift and go to state 9
    sentencia                      shift and go to state 11
    atributos                      shift and go to state 6
    vec                            shift and go to state 36
    reg                            shift and go to state 13
    empty                          shift and go to state 14
    funcVoid                       shift and go to state 16
    campos                         shift and go to state 119
    func                           shift and go to state 20
    variable                       shift and go to state 21
    varAsig                        shift and go to state 25
    g                              shift and go to state 496
    funcString                     shift and go to state 27
    funcReturn                     shift and go to state 28
    lCerrada                       shift and go to state 30
    lAbierta                       shift and go to state 32
    varsOps                        shift and go to state 15
    loop                           shift and go to state 34

state 434

    (28) lCerrada -> DO lCerrada WHILE ( valores ) . ;

    ;               shift and go to state 497


state 435

    (27) lCerrada -> DO { g } WHILE ( . valores ) ;
    (82) valores -> . varYVals
    (83) valores -> . varsOps
    (84) valores -> . eMat
    (85) valores -> . expBool
    (86) valores -> . funcReturn
    (87) valores -> . reg
    (88) valores -> . INT
    (89) valores -> . FLOAT
    (90) valores -> . STRING
    (91) valores -> . BOOL
    (92) valores -> . ternario
    (93) valores -> . atributos
    (94) valores -> . vec
    (95) valores -> . RES
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (96) reg -> . { campos }
    (106) ternario -> . ternarioMat
    (107) ternario -> . ternarioBool
    (108) ternario -> . ( ternarioMat )
    (109) ternario -> . ( ternarioBool )
    (110) ternario -> . ternarioVars
    (111) ternario -> . ( ternarioVars )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 97
    FLOAT           shift and go to state 99
    STRING          shift and go to state 77
    BOOL            shift and go to state 102
    RES             shift and go to state 68
    ID              shift and go to state 95
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    {               shift and go to state 35
    (               shift and go to state 81
    [               shift and go to state 22
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    ?               reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    ternario                       shift and go to state 66
    funcBool                       shift and go to state 67
    funcInt                        shift and go to state 69
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 79
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 84
    vec                            shift and go to state 85
    paren                          shift and go to state 93
    reg                            shift and go to state 87
    expBool                        shift and go to state 88
    ternarioBool                   shift and go to state 89
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 96
    funcReturn                     shift and go to state 98
    valores                        shift and go to state 498
    p                              shift and go to state 101
    varsOps                        shift and go to state 103
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 73
    varYVals                       shift and go to state 106
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 107

state 436

    (53) funcBool -> COLINEALES ( valores , valores ) .

    ?               reduce using rule 53 (funcBool -> COLINEALES ( valores , valores ) .)
    OR              reduce using rule 53 (funcBool -> COLINEALES ( valores , valores ) .)
    AND             reduce using rule 53 (funcBool -> COLINEALES ( valores , valores ) .)
    EQEQ            reduce using rule 53 (funcBool -> COLINEALES ( valores , valores ) .)
    DISTINTO        reduce using rule 53 (funcBool -> COLINEALES ( valores , valores ) .)
    ;               reduce using rule 53 (funcBool -> COLINEALES ( valores , valores ) .)
    )               reduce using rule 53 (funcBool -> COLINEALES ( valores , valores ) .)
    :               reduce using rule 53 (funcBool -> COLINEALES ( valores , valores ) .)
    ,               reduce using rule 53 (funcBool -> COLINEALES ( valores , valores ) .)
    ]               reduce using rule 53 (funcBool -> COLINEALES ( valores , valores ) .)
    }               reduce using rule 53 (funcBool -> COLINEALES ( valores , valores ) .)


state 437

    (36) loop -> FOR ( primParam ; valores ; . tercerParam )
    (39) tercerParam -> . varsOps
    (40) tercerParam -> . varAsig
    (41) tercerParam -> . func
    (42) tercerParam -> . empty
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (156) varAsig -> . variable MULEQ valores
    (157) varAsig -> . variable DIVEQ valores
    (158) varAsig -> . variable MASEQ valores
    (159) varAsig -> . variable MENOSEQ valores
    (160) varAsig -> . variable = valores
    (161) varAsig -> . ID . ID = valores
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (57) empty -> .
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    ID              shift and go to state 23
    )               reduce using rule 57 (empty -> .)
    PRINT           shift and go to state 8
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    [               shift and go to state 22
    {               shift and go to state 35

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 9
    vec                            shift and go to state 36
    reg                            shift and go to state 13
    empty                          shift and go to state 502
    funcVoid                       shift and go to state 16
    func                           shift and go to state 499
    variable                       shift and go to state 21
    tercerParam                    shift and go to state 500
    varAsig                        shift and go to state 501
    funcString                     shift and go to state 27
    funcReturn                     shift and go to state 28
    varsOps                        shift and go to state 503
    atributos                      shift and go to state 6

state 438

    (238) tCompareEQ -> ( ternarioBool ) .

    EQEQ            reduce using rule 238 (tCompareEQ -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 238 (tCompareEQ -> ( ternarioBool ) .)
    AND             reduce using rule 238 (tCompareEQ -> ( ternarioBool ) .)
    OR              reduce using rule 238 (tCompareEQ -> ( ternarioBool ) .)
    ?               reduce using rule 238 (tCompareEQ -> ( ternarioBool ) .)
    ,               reduce using rule 238 (tCompareEQ -> ( ternarioBool ) .)
    ]               reduce using rule 238 (tCompareEQ -> ( ternarioBool ) .)
    )               reduce using rule 238 (tCompareEQ -> ( ternarioBool ) .)
    ;               reduce using rule 238 (tCompareEQ -> ( ternarioBool ) .)
    :               reduce using rule 238 (tCompareEQ -> ( ternarioBool ) .)
    }               reduce using rule 238 (tCompareEQ -> ( ternarioBool ) .)


state 439

    (139) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (212) expBool -> valoresBool . OR and
    (214) expBool -> valoresBool . OR valoresBool
    (112) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (217) and -> valoresBool . AND eq
    (219) and -> valoresBool . AND valoresBool

    ?               shift and go to state 504
    OR              shift and go to state 182
    AND             shift and go to state 181


state 440

    (139) ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .

    )               reduce using rule 139 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    ;               reduce using rule 139 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    :               reduce using rule 139 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    ]               reduce using rule 139 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    ,               reduce using rule 139 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    }               reduce using rule 139 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)


state 441

    (116) ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .

    ,               reduce using rule 116 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    }               reduce using rule 116 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    ]               reduce using rule 116 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    )               reduce using rule 116 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    ;               reduce using rule 116 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    :               reduce using rule 116 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)


state 442

    (145) valoresTernarioBool -> expBool .
    (140) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> expBool . OR and
    (213) expBool -> expBool . OR valoresBool
    (117) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars

    ,               reduce using rule 145 (valoresTernarioBool -> expBool .)
    ]               reduce using rule 145 (valoresTernarioBool -> expBool .)
    )               reduce using rule 145 (valoresTernarioBool -> expBool .)
    ;               reduce using rule 145 (valoresTernarioBool -> expBool .)
    :               reduce using rule 145 (valoresTernarioBool -> expBool .)
    }               reduce using rule 145 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 505
    OR              shift and go to state 217


state 443

    (127) valoresTernarioVars -> varsOps .
    (208) valoresBool -> varsOps .
    (233) tCompareEQ -> varsOps .
    (241) tCompare -> varsOps .
    (169) valoresMat -> varsOps .

    ,               reduce using rule 127 (valoresTernarioVars -> varsOps .)
    ]               reduce using rule 127 (valoresTernarioVars -> varsOps .)
    )               reduce using rule 127 (valoresTernarioVars -> varsOps .)
    ;               reduce using rule 127 (valoresTernarioVars -> varsOps .)
    :               reduce using rule 127 (valoresTernarioVars -> varsOps .)
    }               reduce using rule 127 (valoresTernarioVars -> varsOps .)
    ?               reduce using rule 208 (valoresBool -> varsOps .)
    OR              reduce using rule 208 (valoresBool -> varsOps .)
    AND             reduce using rule 208 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 233 (tCompareEQ -> varsOps .)
    DISTINTO        reduce using rule 233 (tCompareEQ -> varsOps .)
    >               reduce using rule 241 (tCompare -> varsOps .)
    <               reduce using rule 241 (tCompare -> varsOps .)
    +               reduce using rule 169 (valoresMat -> varsOps .)
    -               reduce using rule 169 (valoresMat -> varsOps .)
    *               reduce using rule 169 (valoresMat -> varsOps .)
    /               reduce using rule 169 (valoresMat -> varsOps .)
    %               reduce using rule 169 (valoresMat -> varsOps .)
    ^               reduce using rule 169 (valoresMat -> varsOps .)


state 444

    (144) valoresTernarioBool -> ( . ternarioBool )
    (125) valoresTernarioVars -> ( . ternarioVars )
    (209) valoresBool -> ( . ternarioBool )
    (238) tCompareEQ -> ( . ternarioBool )
    (239) tCompareEQ -> ( . ternarioMat )
    (246) tCompare -> ( . ternarioMat )
    (170) valoresMat -> ( . ternarioMat )
    (254) parenBool -> ( . expBool )
    (203) paren -> ( . eMat )
    (204) paren -> ( . valoresMat )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (53) funcBool -> . COLINEALES ( valores , valores )
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (58) vec -> . [ elem ]
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    STRING          shift and go to state 196
    (               shift and go to state 379
    BOOL            shift and go to state 202
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    COLINEALES      shift and go to state 4
    {               shift and go to state 35
    -               shift and go to state 83
    +               shift and go to state 82
    [               shift and go to state 22
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 189
    not                            shift and go to state 71
    menor                          shift and go to state 72
    valoresMat                     shift and go to state 190
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 506
    eMat                           shift and go to state 192
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 380
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    expBool                        shift and go to state 507
    ternarioBool                   shift and go to state 402
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 195
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 403
    mayor                          shift and go to state 86
    varYVals                       shift and go to state 205
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 206

state 445

    (128) valoresTernarioVars -> varYVals .
    (207) valoresBool -> varYVals .
    (232) tCompareEQ -> varYVals .
    (242) tCompare -> varYVals .
    (168) valoresMat -> varYVals .

    ,               reduce using rule 128 (valoresTernarioVars -> varYVals .)
    ]               reduce using rule 128 (valoresTernarioVars -> varYVals .)
    )               reduce using rule 128 (valoresTernarioVars -> varYVals .)
    ;               reduce using rule 128 (valoresTernarioVars -> varYVals .)
    :               reduce using rule 128 (valoresTernarioVars -> varYVals .)
    }               reduce using rule 128 (valoresTernarioVars -> varYVals .)
    ?               reduce using rule 207 (valoresBool -> varYVals .)
    OR              reduce using rule 207 (valoresBool -> varYVals .)
    AND             reduce using rule 207 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 232 (tCompareEQ -> varYVals .)
    DISTINTO        reduce using rule 232 (tCompareEQ -> varYVals .)
    >               reduce using rule 242 (tCompare -> varYVals .)
    <               reduce using rule 242 (tCompare -> varYVals .)
    +               reduce using rule 168 (valoresMat -> varYVals .)
    -               reduce using rule 168 (valoresMat -> varYVals .)
    *               reduce using rule 168 (valoresMat -> varYVals .)
    /               reduce using rule 168 (valoresMat -> varYVals .)
    %               reduce using rule 168 (valoresMat -> varYVals .)
    ^               reduce using rule 168 (valoresMat -> varYVals .)


state 446

    (126) valoresTernarioVars -> atributos .
    (64) vecVal -> atributos . [ expresion ]
    (68) vecVal -> atributos . [ INT ]
    (165) valoresMat -> atributos .

    :               reduce using rule 126 (valoresTernarioVars -> atributos .)
    ,               reduce using rule 126 (valoresTernarioVars -> atributos .)
    ]               reduce using rule 126 (valoresTernarioVars -> atributos .)
    )               reduce using rule 126 (valoresTernarioVars -> atributos .)
    ;               reduce using rule 126 (valoresTernarioVars -> atributos .)
    }               reduce using rule 126 (valoresTernarioVars -> atributos .)
    [               shift and go to state 45
    +               reduce using rule 165 (valoresMat -> atributos .)
    -               reduce using rule 165 (valoresMat -> atributos .)
    *               reduce using rule 165 (valoresMat -> atributos .)
    /               reduce using rule 165 (valoresMat -> atributos .)
    %               reduce using rule 165 (valoresMat -> atributos .)
    ^               reduce using rule 165 (valoresMat -> atributos .)


state 447

    (112) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (130) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (212) expBool -> valoresBool . OR and
    (214) expBool -> valoresBool . OR valoresBool
    (217) and -> valoresBool . AND eq
    (219) and -> valoresBool . AND valoresBool

    ?               shift and go to state 508
    OR              shift and go to state 182
    AND             shift and go to state 181


state 448

    (115) ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .

    ,               reduce using rule 115 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    }               reduce using rule 115 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    ]               reduce using rule 115 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    )               reduce using rule 115 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    ;               reduce using rule 115 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    :               reduce using rule 115 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)


state 449

    (112) ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .

    ,               reduce using rule 112 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    }               reduce using rule 112 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    ]               reduce using rule 112 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    )               reduce using rule 112 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    ;               reduce using rule 112 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    :               reduce using rule 112 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)


state 450

    (113) ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .

    ,               reduce using rule 113 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    }               reduce using rule 113 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    ]               reduce using rule 113 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    )               reduce using rule 113 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    ;               reduce using rule 113 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    :               reduce using rule 113 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)


state 451

    (145) valoresTernarioBool -> expBool .
    (117) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (131) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (140) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> expBool . OR and
    (213) expBool -> expBool . OR valoresBool

    :               reduce using rule 145 (valoresTernarioBool -> expBool .)
    ,               reduce using rule 145 (valoresTernarioBool -> expBool .)
    ]               reduce using rule 145 (valoresTernarioBool -> expBool .)
    )               reduce using rule 145 (valoresTernarioBool -> expBool .)
    ;               reduce using rule 145 (valoresTernarioBool -> expBool .)
    }               reduce using rule 145 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 509
    OR              shift and go to state 217


state 452

    (127) valoresTernarioVars -> varsOps .
    (208) valoresBool -> varsOps .
    (169) valoresMat -> varsOps .
    (233) tCompareEQ -> varsOps .
    (241) tCompare -> varsOps .

    :               reduce using rule 127 (valoresTernarioVars -> varsOps .)
    ,               reduce using rule 127 (valoresTernarioVars -> varsOps .)
    ]               reduce using rule 127 (valoresTernarioVars -> varsOps .)
    )               reduce using rule 127 (valoresTernarioVars -> varsOps .)
    ;               reduce using rule 127 (valoresTernarioVars -> varsOps .)
    }               reduce using rule 127 (valoresTernarioVars -> varsOps .)
    ?               reduce using rule 208 (valoresBool -> varsOps .)
    OR              reduce using rule 208 (valoresBool -> varsOps .)
    AND             reduce using rule 208 (valoresBool -> varsOps .)
    +               reduce using rule 169 (valoresMat -> varsOps .)
    -               reduce using rule 169 (valoresMat -> varsOps .)
    *               reduce using rule 169 (valoresMat -> varsOps .)
    /               reduce using rule 169 (valoresMat -> varsOps .)
    %               reduce using rule 169 (valoresMat -> varsOps .)
    ^               reduce using rule 169 (valoresMat -> varsOps .)
    EQEQ            reduce using rule 233 (tCompareEQ -> varsOps .)
    DISTINTO        reduce using rule 233 (tCompareEQ -> varsOps .)
    >               reduce using rule 241 (tCompare -> varsOps .)
    <               reduce using rule 241 (tCompare -> varsOps .)


state 453

    (125) valoresTernarioVars -> ( . ternarioVars )
    (138) valoresTernarioMat -> ( . ternarioMat )
    (144) valoresTernarioBool -> ( . ternarioBool )
    (209) valoresBool -> ( . ternarioBool )
    (170) valoresMat -> ( . ternarioMat )
    (238) tCompareEQ -> ( . ternarioBool )
    (239) tCompareEQ -> ( . ternarioMat )
    (203) paren -> ( . eMat )
    (204) paren -> ( . valoresMat )
    (246) tCompare -> ( . ternarioMat )
    (254) parenBool -> ( . expBool )
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (53) funcBool -> . COLINEALES ( valores , valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (58) vec -> . [ elem ]
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    STRING          shift and go to state 196
    (               shift and go to state 193
    BOOL            shift and go to state 202
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    COLINEALES      shift and go to state 4
    {               shift and go to state 35
    -               shift and go to state 83
    +               shift and go to state 82
    [               shift and go to state 22
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 189
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 190
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 447
    eMat                           shift and go to state 192
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 401
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    exp                            shift and go to state 105
    ternarioBool                   shift and go to state 402
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    expBool                        shift and go to state 510
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 195
    ternarioVars                   shift and go to state 403
    varYVals                       shift and go to state 205
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 206

state 454

    (128) valoresTernarioVars -> varYVals .
    (207) valoresBool -> varYVals .
    (168) valoresMat -> varYVals .
    (232) tCompareEQ -> varYVals .
    (242) tCompare -> varYVals .

    :               reduce using rule 128 (valoresTernarioVars -> varYVals .)
    ,               reduce using rule 128 (valoresTernarioVars -> varYVals .)
    ]               reduce using rule 128 (valoresTernarioVars -> varYVals .)
    )               reduce using rule 128 (valoresTernarioVars -> varYVals .)
    ;               reduce using rule 128 (valoresTernarioVars -> varYVals .)
    }               reduce using rule 128 (valoresTernarioVars -> varYVals .)
    ?               reduce using rule 207 (valoresBool -> varYVals .)
    OR              reduce using rule 207 (valoresBool -> varYVals .)
    AND             reduce using rule 207 (valoresBool -> varYVals .)
    +               reduce using rule 168 (valoresMat -> varYVals .)
    -               reduce using rule 168 (valoresMat -> varYVals .)
    *               reduce using rule 168 (valoresMat -> varYVals .)
    /               reduce using rule 168 (valoresMat -> varYVals .)
    %               reduce using rule 168 (valoresMat -> varYVals .)
    ^               reduce using rule 168 (valoresMat -> varYVals .)
    EQEQ            reduce using rule 232 (tCompareEQ -> varYVals .)
    DISTINTO        reduce using rule 232 (tCompareEQ -> varYVals .)
    >               reduce using rule 242 (tCompare -> varYVals .)
    <               reduce using rule 242 (tCompare -> varYVals .)


state 455

    (130) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (112) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (212) expBool -> valoresBool . OR and
    (214) expBool -> valoresBool . OR valoresBool
    (217) and -> valoresBool . AND eq
    (219) and -> valoresBool . AND valoresBool

    ?               shift and go to state 511
    OR              shift and go to state 182
    AND             shift and go to state 181


state 456

    (138) valoresTernarioMat -> ( . ternarioMat )
    (125) valoresTernarioVars -> ( . ternarioVars )
    (170) valoresMat -> ( . ternarioMat )
    (209) valoresBool -> ( . ternarioBool )
    (203) paren -> ( . eMat )
    (204) paren -> ( . valoresMat )
    (238) tCompareEQ -> ( . ternarioBool )
    (239) tCompareEQ -> ( . ternarioMat )
    (246) tCompare -> ( . ternarioMat )
    (254) parenBool -> ( . expBool )
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (53) funcBool -> . COLINEALES ( valores , valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (58) vec -> . [ elem ]
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    STRING          shift and go to state 196
    (               shift and go to state 193
    BOOL            shift and go to state 202
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    COLINEALES      shift and go to state 4
    {               shift and go to state 35
    -               shift and go to state 83
    +               shift and go to state 82
    [               shift and go to state 22
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 189
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 190
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 512
    eMat                           shift and go to state 192
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 401
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    exp                            shift and go to state 105
    ternarioBool                   shift and go to state 339
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    expBool                        shift and go to state 513
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 195
    ternarioVars                   shift and go to state 403
    varYVals                       shift and go to state 205
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 206

state 457

    (114) ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .

    ,               reduce using rule 114 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    }               reduce using rule 114 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    ]               reduce using rule 114 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    )               reduce using rule 114 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    ;               reduce using rule 114 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    :               reduce using rule 114 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)


state 458

    (130) ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .

    )               reduce using rule 130 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    :               reduce using rule 130 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    ]               reduce using rule 130 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    ;               reduce using rule 130 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    ,               reduce using rule 130 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    }               reduce using rule 130 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)


state 459

    (131) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (117) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (211) expBool -> expBool . OR and
    (213) expBool -> expBool . OR valoresBool

    ?               shift and go to state 514
    OR              shift and go to state 217


state 460

    (138) valoresTernarioMat -> ( ternarioMat ) .
    (170) valoresMat -> ( ternarioMat ) .
    (239) tCompareEQ -> ( ternarioMat ) .
    (246) tCompare -> ( ternarioMat ) .

    ,               reduce using rule 138 (valoresTernarioMat -> ( ternarioMat ) .)
    ]               reduce using rule 138 (valoresTernarioMat -> ( ternarioMat ) .)
    )               reduce using rule 138 (valoresTernarioMat -> ( ternarioMat ) .)
    ;               reduce using rule 138 (valoresTernarioMat -> ( ternarioMat ) .)
    :               reduce using rule 138 (valoresTernarioMat -> ( ternarioMat ) .)
    }               reduce using rule 138 (valoresTernarioMat -> ( ternarioMat ) .)
    +               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    ^               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    EQEQ            reduce using rule 239 (tCompareEQ -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 239 (tCompareEQ -> ( ternarioMat ) .)
    >               reduce using rule 246 (tCompare -> ( ternarioMat ) .)
    <               reduce using rule 246 (tCompare -> ( ternarioMat ) .)


state 461

    (144) valoresTernarioBool -> ( ternarioBool ) .
    (209) valoresBool -> ( ternarioBool ) .
    (238) tCompareEQ -> ( ternarioBool ) .

    :               reduce using rule 144 (valoresTernarioBool -> ( ternarioBool ) .)
    ,               reduce using rule 144 (valoresTernarioBool -> ( ternarioBool ) .)
    ]               reduce using rule 144 (valoresTernarioBool -> ( ternarioBool ) .)
    )               reduce using rule 144 (valoresTernarioBool -> ( ternarioBool ) .)
    ;               reduce using rule 144 (valoresTernarioBool -> ( ternarioBool ) .)
    }               reduce using rule 144 (valoresTernarioBool -> ( ternarioBool ) .)
    ?               reduce using rule 209 (valoresBool -> ( ternarioBool ) .)
    OR              reduce using rule 209 (valoresBool -> ( ternarioBool ) .)
    AND             reduce using rule 209 (valoresBool -> ( ternarioBool ) .)
    EQEQ            reduce using rule 238 (tCompareEQ -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 238 (tCompareEQ -> ( ternarioBool ) .)


state 462

    (125) valoresTernarioVars -> ( ternarioVars ) .

    :               reduce using rule 125 (valoresTernarioVars -> ( ternarioVars ) .)
    ,               reduce using rule 125 (valoresTernarioVars -> ( ternarioVars ) .)
    ]               reduce using rule 125 (valoresTernarioVars -> ( ternarioVars ) .)
    )               reduce using rule 125 (valoresTernarioVars -> ( ternarioVars ) .)
    ;               reduce using rule 125 (valoresTernarioVars -> ( ternarioVars ) .)
    }               reduce using rule 125 (valoresTernarioVars -> ( ternarioVars ) .)


state 463

    (139) ternarioBool -> valoresBool ? valoresTernarioBool . : valoresTernarioBool

    :               shift and go to state 515


state 464

    (130) ternarioMat -> valoresBool ? valoresTernarioMat . : valoresTernarioMat

    :               shift and go to state 516


state 465

    (138) valoresTernarioMat -> ( . ternarioMat )
    (144) valoresTernarioBool -> ( . ternarioBool )
    (170) valoresMat -> ( . ternarioMat )
    (209) valoresBool -> ( . ternarioBool )
    (238) tCompareEQ -> ( . ternarioBool )
    (239) tCompareEQ -> ( . ternarioMat )
    (203) paren -> ( . eMat )
    (204) paren -> ( . valoresMat )
    (246) tCompare -> ( . ternarioMat )
    (254) parenBool -> ( . expBool )
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (53) funcBool -> . COLINEALES ( valores , valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (58) vec -> . [ elem ]
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    STRING          shift and go to state 196
    (               shift and go to state 193
    BOOL            shift and go to state 202
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    COLINEALES      shift and go to state 4
    {               shift and go to state 35
    -               shift and go to state 83
    +               shift and go to state 82
    [               shift and go to state 22
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 189
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 190
    eq                             shift and go to state 75
    vecVal                         shift and go to state 76
    eMat                           shift and go to state 192
    tCompareEQ                     shift and go to state 80
    valoresBool                    shift and go to state 337
    ternarioMat                    shift and go to state 401
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    varsOps                        shift and go to state 195
    exp                            shift and go to state 105
    ternarioBool                   shift and go to state 402
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    expBool                        shift and go to state 340
    varYVals                       shift and go to state 205
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 206

state 466

    (145) valoresTernarioBool -> expBool .
    (131) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (140) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> expBool . OR and
    (213) expBool -> expBool . OR valoresBool

    :               reduce using rule 145 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 407
    OR              shift and go to state 217


state 467

    (140) ternarioBool -> expBool ? valoresTernarioBool . : valoresTernarioBool

    :               shift and go to state 517


state 468

    (131) ternarioMat -> expBool ? valoresTernarioMat . : valoresTernarioMat

    :               shift and go to state 518


state 469

    (138) valoresTernarioMat -> ( . ternarioMat )
    (170) valoresMat -> ( . ternarioMat )
    (209) valoresBool -> ( . ternarioBool )
    (203) paren -> ( . eMat )
    (204) paren -> ( . valoresMat )
    (238) tCompareEQ -> ( . ternarioBool )
    (239) tCompareEQ -> ( . ternarioMat )
    (246) tCompare -> ( . ternarioMat )
    (254) parenBool -> ( . expBool )
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (53) funcBool -> . COLINEALES ( valores , valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (58) vec -> . [ elem ]
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    STRING          shift and go to state 196
    (               shift and go to state 193
    BOOL            shift and go to state 202
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    COLINEALES      shift and go to state 4
    {               shift and go to state 35
    -               shift and go to state 83
    +               shift and go to state 82
    [               shift and go to state 22
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 189
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 190
    eq                             shift and go to state 75
    vecVal                         shift and go to state 76
    eMat                           shift and go to state 192
    tCompareEQ                     shift and go to state 80
    valoresBool                    shift and go to state 337
    ternarioMat                    shift and go to state 401
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    varsOps                        shift and go to state 195
    exp                            shift and go to state 105
    ternarioBool                   shift and go to state 339
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    expBool                        shift and go to state 340
    varYVals                       shift and go to state 205
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 206

state 470

    (140) ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .

    )               reduce using rule 140 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    ;               reduce using rule 140 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    :               reduce using rule 140 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    ]               reduce using rule 140 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    ,               reduce using rule 140 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    }               reduce using rule 140 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)


state 471

    (121) ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .

    ,               reduce using rule 121 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    }               reduce using rule 121 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    ]               reduce using rule 121 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    )               reduce using rule 121 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    ;               reduce using rule 121 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    :               reduce using rule 121 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)


state 472

    (120) ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .

    ,               reduce using rule 120 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    }               reduce using rule 120 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    ]               reduce using rule 120 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    )               reduce using rule 120 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    ;               reduce using rule 120 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    :               reduce using rule 120 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)


state 473

    (117) ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .

    ,               reduce using rule 117 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    }               reduce using rule 117 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    ]               reduce using rule 117 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    )               reduce using rule 117 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    ;               reduce using rule 117 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    :               reduce using rule 117 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)


state 474

    (118) ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .

    ,               reduce using rule 118 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    }               reduce using rule 118 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    ]               reduce using rule 118 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    )               reduce using rule 118 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    ;               reduce using rule 118 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    :               reduce using rule 118 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)


state 475

    (131) ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .

    )               reduce using rule 131 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    :               reduce using rule 131 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    ]               reduce using rule 131 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    ;               reduce using rule 131 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    ,               reduce using rule 131 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    }               reduce using rule 131 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)


state 476

    (119) ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .

    ,               reduce using rule 119 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    }               reduce using rule 119 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    ]               reduce using rule 119 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    )               reduce using rule 119 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    ;               reduce using rule 119 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    :               reduce using rule 119 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)


state 477

    (246) tCompare -> ( ternarioMat ) .
    (170) valoresMat -> ( ternarioMat ) .

    EQEQ            reduce using rule 246 (tCompare -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 246 (tCompare -> ( ternarioMat ) .)
    AND             reduce using rule 246 (tCompare -> ( ternarioMat ) .)
    OR              reduce using rule 246 (tCompare -> ( ternarioMat ) .)
    ?               reduce using rule 246 (tCompare -> ( ternarioMat ) .)
    ,               reduce using rule 246 (tCompare -> ( ternarioMat ) .)
    ]               reduce using rule 246 (tCompare -> ( ternarioMat ) .)
    )               reduce using rule 246 (tCompare -> ( ternarioMat ) .)
    ;               reduce using rule 246 (tCompare -> ( ternarioMat ) .)
    :               reduce using rule 246 (tCompare -> ( ternarioMat ) .)
    }               reduce using rule 246 (tCompare -> ( ternarioMat ) .)
    +               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)
    ^               reduce using rule 170 (valoresMat -> ( ternarioMat ) .)


state 478

    (144) valoresTernarioBool -> ( . ternarioBool )
    (209) valoresBool -> ( . ternarioBool )
    (238) tCompareEQ -> ( . ternarioBool )
    (239) tCompareEQ -> ( . ternarioMat )
    (246) tCompare -> ( . ternarioMat )
    (170) valoresMat -> ( . ternarioMat )
    (254) parenBool -> ( . expBool )
    (203) paren -> ( . eMat )
    (204) paren -> ( . valoresMat )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (53) funcBool -> . COLINEALES ( valores , valores )
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (58) vec -> . [ elem ]
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    STRING          shift and go to state 196
    (               shift and go to state 379
    BOOL            shift and go to state 202
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    COLINEALES      shift and go to state 4
    {               shift and go to state 35
    -               shift and go to state 83
    +               shift and go to state 82
    [               shift and go to state 22
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 189
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 190
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 378
    eMat                           shift and go to state 192
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 380
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    varsOps                        shift and go to state 195
    exp                            shift and go to state 105
    ternarioBool                   shift and go to state 402
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    expBool                        shift and go to state 381
    varYVals                       shift and go to state 205
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 206

state 479

    (145) valoresTernarioBool -> expBool .
    (140) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> expBool . OR and
    (213) expBool -> expBool . OR valoresBool

    )               reduce using rule 145 (valoresTernarioBool -> expBool .)
    :               reduce using rule 145 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 417
    OR              shift and go to state 217


state 480

    (139) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (212) expBool -> valoresBool . OR and
    (214) expBool -> valoresBool . OR valoresBool
    (130) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (217) and -> valoresBool . AND eq
    (219) and -> valoresBool . AND valoresBool

    ?               shift and go to state 419
    OR              shift and go to state 182
    AND             shift and go to state 181


state 481

    (208) valoresBool -> varsOps .
    (169) valoresMat -> varsOps .
    (233) tCompareEQ -> varsOps .
    (241) tCompare -> varsOps .

    ?               reduce using rule 208 (valoresBool -> varsOps .)
    OR              reduce using rule 208 (valoresBool -> varsOps .)
    AND             reduce using rule 208 (valoresBool -> varsOps .)
    +               reduce using rule 169 (valoresMat -> varsOps .)
    -               reduce using rule 169 (valoresMat -> varsOps .)
    *               reduce using rule 169 (valoresMat -> varsOps .)
    /               reduce using rule 169 (valoresMat -> varsOps .)
    %               reduce using rule 169 (valoresMat -> varsOps .)
    ^               reduce using rule 169 (valoresMat -> varsOps .)
    EQEQ            reduce using rule 233 (tCompareEQ -> varsOps .)
    DISTINTO        reduce using rule 233 (tCompareEQ -> varsOps .)
    >               reduce using rule 241 (tCompare -> varsOps .)
    <               reduce using rule 241 (tCompare -> varsOps .)


state 482

    (144) valoresTernarioBool -> ( . ternarioBool )
    (138) valoresTernarioMat -> ( . ternarioMat )
    (209) valoresBool -> ( . ternarioBool )
    (170) valoresMat -> ( . ternarioMat )
    (238) tCompareEQ -> ( . ternarioBool )
    (239) tCompareEQ -> ( . ternarioMat )
    (246) tCompare -> ( . ternarioMat )
    (203) paren -> ( . eMat )
    (204) paren -> ( . valoresMat )
    (254) parenBool -> ( . expBool )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (53) funcBool -> . COLINEALES ( valores , valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (58) vec -> . [ elem ]
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    STRING          shift and go to state 196
    (               shift and go to state 193
    BOOL            shift and go to state 202
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    COLINEALES      shift and go to state 4
    {               shift and go to state 35
    -               shift and go to state 83
    +               shift and go to state 82
    [               shift and go to state 22
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 189
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 190
    eq                             shift and go to state 75
    vecVal                         shift and go to state 76
    eMat                           shift and go to state 192
    tCompareEQ                     shift and go to state 80
    valoresBool                    shift and go to state 378
    ternarioMat                    shift and go to state 401
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    varsOps                        shift and go to state 195
    exp                            shift and go to state 105
    ternarioBool                   shift and go to state 402
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    expBool                        shift and go to state 381
    varYVals                       shift and go to state 205
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 206

state 483

    (207) valoresBool -> varYVals .
    (168) valoresMat -> varYVals .
    (232) tCompareEQ -> varYVals .
    (242) tCompare -> varYVals .

    ?               reduce using rule 207 (valoresBool -> varYVals .)
    OR              reduce using rule 207 (valoresBool -> varYVals .)
    AND             reduce using rule 207 (valoresBool -> varYVals .)
    +               reduce using rule 168 (valoresMat -> varYVals .)
    -               reduce using rule 168 (valoresMat -> varYVals .)
    *               reduce using rule 168 (valoresMat -> varYVals .)
    /               reduce using rule 168 (valoresMat -> varYVals .)
    %               reduce using rule 168 (valoresMat -> varYVals .)
    ^               reduce using rule 168 (valoresMat -> varYVals .)
    EQEQ            reduce using rule 232 (tCompareEQ -> varYVals .)
    DISTINTO        reduce using rule 232 (tCompareEQ -> varYVals .)
    >               reduce using rule 242 (tCompare -> varYVals .)
    <               reduce using rule 242 (tCompare -> varYVals .)


state 484

    (145) valoresTernarioBool -> expBool .
    (140) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> expBool . OR and
    (213) expBool -> expBool . OR valoresBool
    (131) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat

    :               reduce using rule 145 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 421
    OR              shift and go to state 217


state 485

    (7) lAbierta -> IF ( cosaBooleana ) COMMENT com . linea
    (9) lAbierta -> IF ( cosaBooleana ) COMMENT com . lCerrada ELSE lAbierta
    (18) lCerrada -> IF ( cosaBooleana ) COMMENT com . lCerrada ELSE { g }
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com . lCerrada ELSE lCerrada
    (23) lCerrada -> IF ( cosaBooleana ) COMMENT com . lCerrada ELSE COMMENT com lCerrada
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (156) varAsig -> . variable MULEQ valores
    (157) varAsig -> . variable DIVEQ valores
    (158) varAsig -> . variable MASEQ valores
    (159) varAsig -> . variable MENOSEQ valores
    (160) varAsig -> . variable = valores
    (161) varAsig -> . ID . ID = valores
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    IF              shift and go to state 424
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 7
    FOR             shift and go to state 18
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    ID              shift and go to state 23
    PRINT           shift and go to state 8
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    [               shift and go to state 22
    {               shift and go to state 35

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 9
    sentencia                      shift and go to state 11
    atributos                      shift and go to state 6
    vec                            shift and go to state 36
    reg                            shift and go to state 13
    varsOps                        shift and go to state 15
    funcVoid                       shift and go to state 16
    func                           shift and go to state 20
    variable                       shift and go to state 21
    varAsig                        shift and go to state 25
    funcString                     shift and go to state 27
    funcReturn                     shift and go to state 28
    lCerrada                       shift and go to state 520
    lAbierta                       shift and go to state 32
    linea                          shift and go to state 519
    loop                           shift and go to state 427

state 486

    (16) lCerrada -> IF ( . cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> IF ( . cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (6) lAbierta -> IF ( . cosaBooleana ) linea
    (7) lAbierta -> IF ( . cosaBooleana ) COMMENT com linea
    (8) lAbierta -> IF ( . cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> IF ( . cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> IF ( . cosaBooleana ) { g }
    (43) cosaBooleana -> . expBool
    (44) cosaBooleana -> . valoresBool
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (53) funcBool -> . COLINEALES ( valores , valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (96) reg -> . { campos }
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (254) parenBool -> . ( expBool )
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )

    BOOL            shift and go to state 202
    (               shift and go to state 242
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    )               reduce using rule 210 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 229
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    INT             shift and go to state 244
    FLOAT           shift and go to state 245
    [               shift and go to state 22
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    {               shift and go to state 35
    STRING          shift and go to state 196
    NOT             shift and go to state 104
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82

    and                            shift and go to state 65
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 239
    not                            shift and go to state 71
    menor                          shift and go to state 72
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    vecVal                         shift and go to state 76
    valoresBool                    shift and go to state 240
    eMat                           shift and go to state 241
    p                              shift and go to state 101
    mayor                          shift and go to state 86
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    varsOps                        shift and go to state 246
    exp                            shift and go to state 105
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    cosaBooleana                   shift and go to state 521
    funcString                     shift and go to state 199
    tCompareEQ                     shift and go to state 80
    expBool                        shift and go to state 248
    varYVals                       shift and go to state 247
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 238

state 487

    (10) lAbierta -> IF ( cosaBooleana ) lCerrada ELSE . lAbierta
    (17) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . { g }
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . lCerrada
    (22) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . COMMENT com lCerrada
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (156) varAsig -> . variable MULEQ valores
    (157) varAsig -> . variable DIVEQ valores
    (158) varAsig -> . variable MASEQ valores
    (159) varAsig -> . variable MENOSEQ valores
    (160) varAsig -> . variable = valores
    (161) varAsig -> . ID . ID = valores
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    {               shift and go to state 525
    COMMENT         shift and go to state 522
    IF              shift and go to state 24
    DO              shift and go to state 1
    WHILE           shift and go to state 7
    FOR             shift and go to state 18
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    ID              shift and go to state 23
    PRINT           shift and go to state 8
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    [               shift and go to state 22

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 9
    sentencia                      shift and go to state 11
    atributos                      shift and go to state 6
    vec                            shift and go to state 36
    reg                            shift and go to state 13
    funcVoid                       shift and go to state 16
    func                           shift and go to state 20
    variable                       shift and go to state 21
    varAsig                        shift and go to state 25
    funcString                     shift and go to state 27
    funcReturn                     shift and go to state 28
    lCerrada                       shift and go to state 523
    lAbierta                       shift and go to state 524
    varsOps                        shift and go to state 15
    loop                           shift and go to state 34

state 488

    (8) lAbierta -> IF ( cosaBooleana ) { g . } ELSE lAbierta
    (11) lAbierta -> IF ( cosaBooleana ) { g . }
    (16) lCerrada -> IF ( cosaBooleana ) { g . } ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) { g . } ELSE lCerrada

    }               shift and go to state 526


state 489

    (50) funcInt -> MULTIESCALAR ( valores , valores param . )

    )               shift and go to state 527


state 490

    (55) param -> , . valores
    (82) valores -> . varYVals
    (83) valores -> . varsOps
    (84) valores -> . eMat
    (85) valores -> . expBool
    (86) valores -> . funcReturn
    (87) valores -> . reg
    (88) valores -> . INT
    (89) valores -> . FLOAT
    (90) valores -> . STRING
    (91) valores -> . BOOL
    (92) valores -> . ternario
    (93) valores -> . atributos
    (94) valores -> . vec
    (95) valores -> . RES
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (96) reg -> . { campos }
    (106) ternario -> . ternarioMat
    (107) ternario -> . ternarioBool
    (108) ternario -> . ( ternarioMat )
    (109) ternario -> . ( ternarioBool )
    (110) ternario -> . ternarioVars
    (111) ternario -> . ( ternarioVars )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 97
    FLOAT           shift and go to state 99
    STRING          shift and go to state 77
    BOOL            shift and go to state 102
    RES             shift and go to state 68
    ID              shift and go to state 95
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    {               shift and go to state 35
    (               shift and go to state 81
    [               shift and go to state 22
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    ?               reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    ternario                       shift and go to state 66
    funcBool                       shift and go to state 67
    funcInt                        shift and go to state 69
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 79
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 84
    vec                            shift and go to state 85
    paren                          shift and go to state 93
    reg                            shift and go to state 87
    expBool                        shift and go to state 88
    ternarioBool                   shift and go to state 89
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 96
    funcReturn                     shift and go to state 98
    valores                        shift and go to state 528
    p                              shift and go to state 101
    varsOps                        shift and go to state 103
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 73
    varYVals                       shift and go to state 106
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 107

state 491

    (56) param -> empty .

    )               reduce using rule 56 (param -> empty .)


state 492

    (97) campos -> ID : valores , campos .

    }               reduce using rule 97 (campos -> ID : valores , campos .)


state 493

    (29) lCerrada -> DO COMMENT com lCerrada WHILE ( valores . ) ;

    )               shift and go to state 529


state 494

    (18) lCerrada -> IF ( cosaBooleana ) COMMENT com . lCerrada ELSE { g }
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com . lCerrada ELSE lCerrada
    (23) lCerrada -> IF ( cosaBooleana ) COMMENT com . lCerrada ELSE COMMENT com lCerrada
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (156) varAsig -> . variable MULEQ valores
    (157) varAsig -> . variable DIVEQ valores
    (158) varAsig -> . variable MASEQ valores
    (159) varAsig -> . variable MENOSEQ valores
    (160) varAsig -> . variable = valores
    (161) varAsig -> . ID . ID = valores
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    IF              shift and go to state 39
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 7
    FOR             shift and go to state 18
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    ID              shift and go to state 23
    PRINT           shift and go to state 8
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    [               shift and go to state 22
    {               shift and go to state 35

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 9
    sentencia                      shift and go to state 11
    atributos                      shift and go to state 6
    vec                            shift and go to state 36
    reg                            shift and go to state 13
    funcVoid                       shift and go to state 16
    func                           shift and go to state 20
    variable                       shift and go to state 21
    varAsig                        shift and go to state 25
    funcString                     shift and go to state 27
    funcReturn                     shift and go to state 28
    lCerrada                       shift and go to state 530
    varsOps                        shift and go to state 15
    loop                           shift and go to state 42

state 495

    (17) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . { g }
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . lCerrada
    (22) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . COMMENT com lCerrada
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (156) varAsig -> . variable MULEQ valores
    (157) varAsig -> . variable DIVEQ valores
    (158) varAsig -> . variable MASEQ valores
    (159) varAsig -> . variable MENOSEQ valores
    (160) varAsig -> . variable = valores
    (161) varAsig -> . ID . ID = valores
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    {               shift and go to state 525
    COMMENT         shift and go to state 522
    IF              shift and go to state 39
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 7
    FOR             shift and go to state 18
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    ID              shift and go to state 23
    PRINT           shift and go to state 8
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    [               shift and go to state 22

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 9
    sentencia                      shift and go to state 11
    atributos                      shift and go to state 6
    vec                            shift and go to state 36
    reg                            shift and go to state 13
    funcVoid                       shift and go to state 16
    func                           shift and go to state 20
    variable                       shift and go to state 21
    varAsig                        shift and go to state 25
    funcString                     shift and go to state 27
    funcReturn                     shift and go to state 28
    lCerrada                       shift and go to state 523
    varsOps                        shift and go to state 15
    loop                           shift and go to state 42

state 496

    (16) lCerrada -> IF ( cosaBooleana ) { g . } ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) { g . } ELSE lCerrada

    }               shift and go to state 531


state 497

    (28) lCerrada -> DO lCerrada WHILE ( valores ) ; .

    COMMENT         reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    IF              reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    DO              reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    WHILE           reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    FOR             reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    RETURN          reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    ;               reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    MENOSMENOS      reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    MASMAS          reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    ID              reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    PRINT           reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    MULTIESCALAR    reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    LENGTH          reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    CAPITALIZAR     reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    COLINEALES      reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    [               reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    {               reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    }               reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    $end            reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    ELSE            reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)


state 498

    (27) lCerrada -> DO { g } WHILE ( valores . ) ;

    )               shift and go to state 532


state 499

    (41) tercerParam -> func .

    )               reduce using rule 41 (tercerParam -> func .)


state 500

    (36) loop -> FOR ( primParam ; valores ; tercerParam . )

    )               shift and go to state 533


state 501

    (40) tercerParam -> varAsig .

    )               reduce using rule 40 (tercerParam -> varAsig .)


state 502

    (42) tercerParam -> empty .

    )               reduce using rule 42 (tercerParam -> empty .)


state 503

    (39) tercerParam -> varsOps .

    )               reduce using rule 39 (tercerParam -> varsOps .)


state 504

    (139) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (112) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (141) valoresTernarioBool -> . BOOL
    (142) valoresTernarioBool -> . funcBool
    (143) valoresTernarioBool -> . ternarioBool
    (144) valoresTernarioBool -> . ( ternarioBool )
    (145) valoresTernarioBool -> . expBool
    (122) valoresTernarioVars -> . reg
    (123) valoresTernarioVars -> . vec
    (124) valoresTernarioVars -> . ternarioVars
    (125) valoresTernarioVars -> . ( ternarioVars )
    (126) valoresTernarioVars -> . atributos
    (127) valoresTernarioVars -> . varsOps
    (128) valoresTernarioVars -> . varYVals
    (129) valoresTernarioVars -> . RES
    (132) valoresTernarioMat -> . INT
    (133) valoresTernarioMat -> . FLOAT
    (134) valoresTernarioMat -> . funcInt
    (135) valoresTernarioMat -> . STRING
    (136) valoresTernarioMat -> . eMat
    (137) valoresTernarioMat -> . ternarioMat
    (138) valoresTernarioMat -> . ( ternarioMat )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (96) reg -> . { campos }
    (58) vec -> . [ elem ]
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    BOOL            shift and go to state 321
    (               shift and go to state 537
    RES             shift and go to state 304
    INT             shift and go to state 319
    FLOAT           shift and go to state 320
    STRING          shift and go to state 316
    COLINEALES      shift and go to state 4
    {               shift and go to state 35
    [               shift and go to state 22
    ID              shift and go to state 310
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 303
    funcInt                        shift and go to state 305
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 534
    eMat                           shift and go to state 308
    tCompareEQ                     shift and go to state 80
    valoresTernarioBool            shift and go to state 309
    vecVal                         shift and go to state 306
    ternarioMat                    shift and go to state 311
    vec                            shift and go to state 312
    paren                          shift and go to state 93
    reg                            shift and go to state 314
    valoresTernarioVars            shift and go to state 315
    expBool                        shift and go to state 535
    ternarioBool                   shift and go to state 317
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    valoresTernarioMat             shift and go to state 536
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 452
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 324
    varYVals                       shift and go to state 454
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 446

state 505

    (140) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (117) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (141) valoresTernarioBool -> . BOOL
    (142) valoresTernarioBool -> . funcBool
    (143) valoresTernarioBool -> . ternarioBool
    (144) valoresTernarioBool -> . ( ternarioBool )
    (145) valoresTernarioBool -> . expBool
    (122) valoresTernarioVars -> . reg
    (123) valoresTernarioVars -> . vec
    (124) valoresTernarioVars -> . ternarioVars
    (125) valoresTernarioVars -> . ( ternarioVars )
    (126) valoresTernarioVars -> . atributos
    (127) valoresTernarioVars -> . varsOps
    (128) valoresTernarioVars -> . varYVals
    (129) valoresTernarioVars -> . RES
    (132) valoresTernarioMat -> . INT
    (133) valoresTernarioMat -> . FLOAT
    (134) valoresTernarioMat -> . funcInt
    (135) valoresTernarioMat -> . STRING
    (136) valoresTernarioMat -> . eMat
    (137) valoresTernarioMat -> . ternarioMat
    (138) valoresTernarioMat -> . ( ternarioMat )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (96) reg -> . { campos }
    (58) vec -> . [ elem ]
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    BOOL            shift and go to state 321
    (               shift and go to state 537
    RES             shift and go to state 304
    INT             shift and go to state 319
    FLOAT           shift and go to state 320
    STRING          shift and go to state 316
    COLINEALES      shift and go to state 4
    {               shift and go to state 35
    [               shift and go to state 22
    ID              shift and go to state 310
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 303
    funcInt                        shift and go to state 305
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 534
    eMat                           shift and go to state 308
    tCompareEQ                     shift and go to state 80
    valoresTernarioBool            shift and go to state 351
    vecVal                         shift and go to state 306
    ternarioMat                    shift and go to state 311
    vec                            shift and go to state 312
    paren                          shift and go to state 93
    reg                            shift and go to state 314
    valoresTernarioVars            shift and go to state 352
    expBool                        shift and go to state 535
    ternarioBool                   shift and go to state 317
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    valoresTernarioMat             shift and go to state 538
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 452
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 324
    varYVals                       shift and go to state 454
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 446

state 506

    (139) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (112) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (130) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (212) expBool -> valoresBool . OR and
    (214) expBool -> valoresBool . OR valoresBool
    (217) and -> valoresBool . AND eq
    (219) and -> valoresBool . AND valoresBool

    ?               shift and go to state 539
    OR              shift and go to state 182
    AND             shift and go to state 181


state 507

    (254) parenBool -> ( expBool . )
    (140) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (117) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (131) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (211) expBool -> expBool . OR and
    (213) expBool -> expBool . OR valoresBool

    )               shift and go to state 343
    ?               shift and go to state 540
    OR              shift and go to state 217


state 508

    (112) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (130) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (122) valoresTernarioVars -> . reg
    (123) valoresTernarioVars -> . vec
    (124) valoresTernarioVars -> . ternarioVars
    (125) valoresTernarioVars -> . ( ternarioVars )
    (126) valoresTernarioVars -> . atributos
    (127) valoresTernarioVars -> . varsOps
    (128) valoresTernarioVars -> . varYVals
    (129) valoresTernarioVars -> . RES
    (132) valoresTernarioMat -> . INT
    (133) valoresTernarioMat -> . FLOAT
    (134) valoresTernarioMat -> . funcInt
    (135) valoresTernarioMat -> . STRING
    (136) valoresTernarioMat -> . eMat
    (137) valoresTernarioMat -> . ternarioMat
    (138) valoresTernarioMat -> . ( ternarioMat )
    (141) valoresTernarioBool -> . BOOL
    (142) valoresTernarioBool -> . funcBool
    (143) valoresTernarioBool -> . ternarioBool
    (144) valoresTernarioBool -> . ( ternarioBool )
    (145) valoresTernarioBool -> . expBool
    (96) reg -> . { campos }
    (58) vec -> . [ elem ]
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (53) funcBool -> . COLINEALES ( valores , valores )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    (               shift and go to state 453
    RES             shift and go to state 304
    INT             shift and go to state 319
    FLOAT           shift and go to state 320
    STRING          shift and go to state 316
    BOOL            shift and go to state 321
    {               shift and go to state 35
    [               shift and go to state 22
    ID              shift and go to state 310
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    COLINEALES      shift and go to state 4
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    atributos                      shift and go to state 446
    funcBool                       shift and go to state 303
    funcInt                        shift and go to state 305
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 447
    eMat                           shift and go to state 308
    tCompareEQ                     shift and go to state 80
    valoresTernarioBool            shift and go to state 541
    vecVal                         shift and go to state 306
    ternarioMat                    shift and go to state 311
    vec                            shift and go to state 312
    paren                          shift and go to state 93
    reg                            shift and go to state 314
    valoresTernarioVars            shift and go to state 315
    exp                            shift and go to state 105
    ternarioBool                   shift and go to state 317
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    valoresTernarioMat             shift and go to state 542
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 452
    ternarioVars                   shift and go to state 324
    varYVals                       shift and go to state 454
    parenBool                      shift and go to state 91
    expBool                        shift and go to state 451

state 509

    (117) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (131) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (140) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (122) valoresTernarioVars -> . reg
    (123) valoresTernarioVars -> . vec
    (124) valoresTernarioVars -> . ternarioVars
    (125) valoresTernarioVars -> . ( ternarioVars )
    (126) valoresTernarioVars -> . atributos
    (127) valoresTernarioVars -> . varsOps
    (128) valoresTernarioVars -> . varYVals
    (129) valoresTernarioVars -> . RES
    (132) valoresTernarioMat -> . INT
    (133) valoresTernarioMat -> . FLOAT
    (134) valoresTernarioMat -> . funcInt
    (135) valoresTernarioMat -> . STRING
    (136) valoresTernarioMat -> . eMat
    (137) valoresTernarioMat -> . ternarioMat
    (138) valoresTernarioMat -> . ( ternarioMat )
    (141) valoresTernarioBool -> . BOOL
    (142) valoresTernarioBool -> . funcBool
    (143) valoresTernarioBool -> . ternarioBool
    (144) valoresTernarioBool -> . ( ternarioBool )
    (145) valoresTernarioBool -> . expBool
    (96) reg -> . { campos }
    (58) vec -> . [ elem ]
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (53) funcBool -> . COLINEALES ( valores , valores )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    (               shift and go to state 453
    RES             shift and go to state 304
    INT             shift and go to state 319
    FLOAT           shift and go to state 320
    STRING          shift and go to state 316
    BOOL            shift and go to state 321
    {               shift and go to state 35
    [               shift and go to state 22
    ID              shift and go to state 310
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    COLINEALES      shift and go to state 4
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 303
    funcInt                        shift and go to state 305
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 447
    eMat                           shift and go to state 308
    tCompareEQ                     shift and go to state 80
    valoresTernarioBool            shift and go to state 543
    vecVal                         shift and go to state 306
    ternarioMat                    shift and go to state 311
    vec                            shift and go to state 312
    paren                          shift and go to state 93
    reg                            shift and go to state 314
    valoresTernarioVars            shift and go to state 352
    expBool                        shift and go to state 451
    ternarioBool                   shift and go to state 317
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    valoresTernarioMat             shift and go to state 544
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 452
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 324
    varYVals                       shift and go to state 454
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 446

state 510

    (254) parenBool -> ( expBool . )
    (117) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (131) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (140) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> expBool . OR and
    (213) expBool -> expBool . OR valoresBool

    )               shift and go to state 343
    ?               shift and go to state 509
    OR              shift and go to state 217


state 511

    (130) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (112) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (132) valoresTernarioMat -> . INT
    (133) valoresTernarioMat -> . FLOAT
    (134) valoresTernarioMat -> . funcInt
    (135) valoresTernarioMat -> . STRING
    (136) valoresTernarioMat -> . eMat
    (137) valoresTernarioMat -> . ternarioMat
    (138) valoresTernarioMat -> . ( ternarioMat )
    (122) valoresTernarioVars -> . reg
    (123) valoresTernarioVars -> . vec
    (124) valoresTernarioVars -> . ternarioVars
    (125) valoresTernarioVars -> . ( ternarioVars )
    (126) valoresTernarioVars -> . atributos
    (127) valoresTernarioVars -> . varsOps
    (128) valoresTernarioVars -> . varYVals
    (129) valoresTernarioVars -> . RES
    (141) valoresTernarioBool -> . BOOL
    (142) valoresTernarioBool -> . funcBool
    (143) valoresTernarioBool -> . ternarioBool
    (144) valoresTernarioBool -> . ( ternarioBool )
    (145) valoresTernarioBool -> . expBool
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (96) reg -> . { campos }
    (58) vec -> . [ elem ]
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (53) funcBool -> . COLINEALES ( valores , valores )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 319
    FLOAT           shift and go to state 320
    STRING          shift and go to state 316
    (               shift and go to state 547
    RES             shift and go to state 304
    BOOL            shift and go to state 321
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    {               shift and go to state 35
    [               shift and go to state 22
    ID              shift and go to state 310
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    COLINEALES      shift and go to state 4
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    atributos                      shift and go to state 326
    funcBool                       shift and go to state 303
    funcInt                        shift and go to state 305
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 512
    eMat                           shift and go to state 308
    tCompareEQ                     shift and go to state 80
    valoresTernarioBool            shift and go to state 545
    vecVal                         shift and go to state 306
    ternarioMat                    shift and go to state 311
    vec                            shift and go to state 312
    paren                          shift and go to state 93
    reg                            shift and go to state 314
    valoresTernarioVars            shift and go to state 315
    exp                            shift and go to state 105
    ternarioBool                   shift and go to state 317
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    valoresTernarioMat             shift and go to state 318
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 313
    ternarioVars                   shift and go to state 324
    varYVals                       shift and go to state 325
    parenBool                      shift and go to state 91
    expBool                        shift and go to state 546

state 512

    (130) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (112) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (139) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (212) expBool -> valoresBool . OR and
    (214) expBool -> valoresBool . OR valoresBool
    (217) and -> valoresBool . AND eq
    (219) and -> valoresBool . AND valoresBool

    ?               shift and go to state 548
    OR              shift and go to state 182
    AND             shift and go to state 181


state 513

    (254) parenBool -> ( expBool . )
    (131) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (117) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (140) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> expBool . OR and
    (213) expBool -> expBool . OR valoresBool

    )               shift and go to state 343
    ?               shift and go to state 549
    OR              shift and go to state 217


state 514

    (131) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (117) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (132) valoresTernarioMat -> . INT
    (133) valoresTernarioMat -> . FLOAT
    (134) valoresTernarioMat -> . funcInt
    (135) valoresTernarioMat -> . STRING
    (136) valoresTernarioMat -> . eMat
    (137) valoresTernarioMat -> . ternarioMat
    (138) valoresTernarioMat -> . ( ternarioMat )
    (122) valoresTernarioVars -> . reg
    (123) valoresTernarioVars -> . vec
    (124) valoresTernarioVars -> . ternarioVars
    (125) valoresTernarioVars -> . ( ternarioVars )
    (126) valoresTernarioVars -> . atributos
    (127) valoresTernarioVars -> . varsOps
    (128) valoresTernarioVars -> . varYVals
    (129) valoresTernarioVars -> . RES
    (141) valoresTernarioBool -> . BOOL
    (142) valoresTernarioBool -> . funcBool
    (143) valoresTernarioBool -> . ternarioBool
    (144) valoresTernarioBool -> . ( ternarioBool )
    (145) valoresTernarioBool -> . expBool
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (96) reg -> . { campos }
    (58) vec -> . [ elem ]
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (53) funcBool -> . COLINEALES ( valores , valores )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 319
    FLOAT           shift and go to state 320
    STRING          shift and go to state 316
    (               shift and go to state 547
    RES             shift and go to state 304
    BOOL            shift and go to state 321
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    {               shift and go to state 35
    [               shift and go to state 22
    ID              shift and go to state 310
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    COLINEALES      shift and go to state 4
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 303
    funcInt                        shift and go to state 305
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 512
    eMat                           shift and go to state 308
    tCompareEQ                     shift and go to state 80
    valoresTernarioBool            shift and go to state 550
    vecVal                         shift and go to state 306
    ternarioMat                    shift and go to state 311
    vec                            shift and go to state 312
    paren                          shift and go to state 93
    reg                            shift and go to state 314
    valoresTernarioVars            shift and go to state 352
    expBool                        shift and go to state 546
    ternarioBool                   shift and go to state 317
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    valoresTernarioMat             shift and go to state 353
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 313
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 324
    varYVals                       shift and go to state 325
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 326

state 515

    (139) ternarioBool -> valoresBool ? valoresTernarioBool : . valoresTernarioBool
    (141) valoresTernarioBool -> . BOOL
    (142) valoresTernarioBool -> . funcBool
    (143) valoresTernarioBool -> . ternarioBool
    (144) valoresTernarioBool -> . ( ternarioBool )
    (145) valoresTernarioBool -> . expBool
    (53) funcBool -> . COLINEALES ( valores , valores )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (96) reg -> . { campos }
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (254) parenBool -> . ( expBool )
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )

    BOOL            shift and go to state 321
    (               shift and go to state 478
    COLINEALES      shift and go to state 4
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    ID              shift and go to state 229
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    INT             shift and go to state 244
    FLOAT           shift and go to state 245
    [               shift and go to state 22
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    {               shift and go to state 35
    STRING          shift and go to state 196
    NOT             shift and go to state 104
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82

    and                            shift and go to state 65
    funcBool                       shift and go to state 303
    funcInt                        shift and go to state 239
    not                            shift and go to state 71
    menor                          shift and go to state 72
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    vecVal                         shift and go to state 76
    valoresBool                    shift and go to state 370
    eMat                           shift and go to state 241
    p                              shift and go to state 101
    valoresTernarioBool            shift and go to state 440
    mayor                          shift and go to state 86
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    iSing                          shift and go to state 90
    expBool                        shift and go to state 479
    ternarioBool                   shift and go to state 317
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    tCompareEQ                     shift and go to state 80
    varsOps                        shift and go to state 246
    exp                            shift and go to state 105
    varYVals                       shift and go to state 247
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 238

state 516

    (130) ternarioMat -> valoresBool ? valoresTernarioMat : . valoresTernarioMat
    (132) valoresTernarioMat -> . INT
    (133) valoresTernarioMat -> . FLOAT
    (134) valoresTernarioMat -> . funcInt
    (135) valoresTernarioMat -> . STRING
    (136) valoresTernarioMat -> . eMat
    (137) valoresTernarioMat -> . ternarioMat
    (138) valoresTernarioMat -> . ( ternarioMat )
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (53) funcBool -> . COLINEALES ( valores , valores )
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (58) vec -> . [ elem ]
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 319
    FLOAT           shift and go to state 320
    STRING          shift and go to state 316
    (               shift and go to state 469
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    BOOL            shift and go to state 202
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    COLINEALES      shift and go to state 4
    {               shift and go to state 35
    -               shift and go to state 83
    +               shift and go to state 82
    [               shift and go to state 22
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 305
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    vecVal                         shift and go to state 76
    eMat                           shift and go to state 308
    tCompareEQ                     shift and go to state 80
    valoresBool                    shift and go to state 345
    ternarioMat                    shift and go to state 311
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    varsOps                        shift and go to state 195
    exp                            shift and go to state 105
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    valoresTernarioMat             shift and go to state 458
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    expBool                        shift and go to state 348
    varYVals                       shift and go to state 205
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 206

state 517

    (140) ternarioBool -> expBool ? valoresTernarioBool : . valoresTernarioBool
    (141) valoresTernarioBool -> . BOOL
    (142) valoresTernarioBool -> . funcBool
    (143) valoresTernarioBool -> . ternarioBool
    (144) valoresTernarioBool -> . ( ternarioBool )
    (145) valoresTernarioBool -> . expBool
    (53) funcBool -> . COLINEALES ( valores , valores )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (96) reg -> . { campos }
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (254) parenBool -> . ( expBool )
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )

    BOOL            shift and go to state 321
    (               shift and go to state 478
    COLINEALES      shift and go to state 4
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    ID              shift and go to state 229
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    INT             shift and go to state 244
    FLOAT           shift and go to state 245
    [               shift and go to state 22
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    {               shift and go to state 35
    STRING          shift and go to state 196
    NOT             shift and go to state 104
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82

    and                            shift and go to state 65
    funcBool                       shift and go to state 303
    funcInt                        shift and go to state 239
    not                            shift and go to state 71
    menor                          shift and go to state 72
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    vecVal                         shift and go to state 76
    valoresBool                    shift and go to state 370
    eMat                           shift and go to state 241
    p                              shift and go to state 101
    valoresTernarioBool            shift and go to state 470
    mayor                          shift and go to state 86
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    iSing                          shift and go to state 90
    expBool                        shift and go to state 479
    ternarioBool                   shift and go to state 317
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    tCompareEQ                     shift and go to state 80
    varsOps                        shift and go to state 246
    exp                            shift and go to state 105
    varYVals                       shift and go to state 247
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 238

state 518

    (131) ternarioMat -> expBool ? valoresTernarioMat : . valoresTernarioMat
    (132) valoresTernarioMat -> . INT
    (133) valoresTernarioMat -> . FLOAT
    (134) valoresTernarioMat -> . funcInt
    (135) valoresTernarioMat -> . STRING
    (136) valoresTernarioMat -> . eMat
    (137) valoresTernarioMat -> . ternarioMat
    (138) valoresTernarioMat -> . ( ternarioMat )
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (53) funcBool -> . COLINEALES ( valores , valores )
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (58) vec -> . [ elem ]
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 319
    FLOAT           shift and go to state 320
    STRING          shift and go to state 316
    (               shift and go to state 469
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    BOOL            shift and go to state 202
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    COLINEALES      shift and go to state 4
    {               shift and go to state 35
    -               shift and go to state 83
    +               shift and go to state 82
    [               shift and go to state 22
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 305
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    vecVal                         shift and go to state 76
    eMat                           shift and go to state 308
    tCompareEQ                     shift and go to state 80
    valoresBool                    shift and go to state 345
    ternarioMat                    shift and go to state 311
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    varsOps                        shift and go to state 195
    exp                            shift and go to state 105
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    valoresTernarioMat             shift and go to state 475
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    expBool                        shift and go to state 348
    varYVals                       shift and go to state 205
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 206

state 519

    (7) lAbierta -> IF ( cosaBooleana ) COMMENT com linea .

    COMMENT         reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) COMMENT com linea .)
    IF              reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) COMMENT com linea .)
    DO              reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) COMMENT com linea .)
    WHILE           reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) COMMENT com linea .)
    FOR             reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) COMMENT com linea .)
    RETURN          reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) COMMENT com linea .)
    ;               reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) COMMENT com linea .)
    MENOSMENOS      reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) COMMENT com linea .)
    MASMAS          reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) COMMENT com linea .)
    ID              reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) COMMENT com linea .)
    PRINT           reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) COMMENT com linea .)
    MULTIESCALAR    reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) COMMENT com linea .)
    LENGTH          reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) COMMENT com linea .)
    CAPITALIZAR     reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) COMMENT com linea .)
    COLINEALES      reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) COMMENT com linea .)
    [               reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) COMMENT com linea .)
    {               reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) COMMENT com linea .)
    $end            reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) COMMENT com linea .)
    }               reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) COMMENT com linea .)


state 520

    (9) lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada . ELSE lAbierta
    (18) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada . ELSE { g }
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada . ELSE lCerrada
    (23) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada . ELSE COMMENT com lCerrada
    (5) linea -> lCerrada .

    ELSE            shift and go to state 551
    COMMENT         reduce using rule 5 (linea -> lCerrada .)
    IF              reduce using rule 5 (linea -> lCerrada .)
    DO              reduce using rule 5 (linea -> lCerrada .)
    WHILE           reduce using rule 5 (linea -> lCerrada .)
    FOR             reduce using rule 5 (linea -> lCerrada .)
    RETURN          reduce using rule 5 (linea -> lCerrada .)
    ;               reduce using rule 5 (linea -> lCerrada .)
    MENOSMENOS      reduce using rule 5 (linea -> lCerrada .)
    MASMAS          reduce using rule 5 (linea -> lCerrada .)
    ID              reduce using rule 5 (linea -> lCerrada .)
    PRINT           reduce using rule 5 (linea -> lCerrada .)
    MULTIESCALAR    reduce using rule 5 (linea -> lCerrada .)
    LENGTH          reduce using rule 5 (linea -> lCerrada .)
    CAPITALIZAR     reduce using rule 5 (linea -> lCerrada .)
    COLINEALES      reduce using rule 5 (linea -> lCerrada .)
    [               reduce using rule 5 (linea -> lCerrada .)
    {               reduce using rule 5 (linea -> lCerrada .)
    $end            reduce using rule 5 (linea -> lCerrada .)
    }               reduce using rule 5 (linea -> lCerrada .)


state 521

    (16) lCerrada -> IF ( cosaBooleana . ) { g } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE { g }
    (18) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana . ) { g } ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE lCerrada
    (21) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (6) lAbierta -> IF ( cosaBooleana . ) linea
    (7) lAbierta -> IF ( cosaBooleana . ) COMMENT com linea
    (8) lAbierta -> IF ( cosaBooleana . ) { g } ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> IF ( cosaBooleana . ) lCerrada ELSE lAbierta
    (11) lAbierta -> IF ( cosaBooleana . ) { g }

    )               shift and go to state 552


state 522

    (22) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT . com lCerrada
    (14) com -> . COMMENT com
    (15) com -> . empty
    (57) empty -> .

    COMMENT         shift and go to state 123
    IF              reduce using rule 57 (empty -> .)
    DO              reduce using rule 57 (empty -> .)
    RETURN          reduce using rule 57 (empty -> .)
    ;               reduce using rule 57 (empty -> .)
    WHILE           reduce using rule 57 (empty -> .)
    FOR             reduce using rule 57 (empty -> .)
    MENOSMENOS      reduce using rule 57 (empty -> .)
    MASMAS          reduce using rule 57 (empty -> .)
    ID              reduce using rule 57 (empty -> .)
    PRINT           reduce using rule 57 (empty -> .)
    MULTIESCALAR    reduce using rule 57 (empty -> .)
    LENGTH          reduce using rule 57 (empty -> .)
    CAPITALIZAR     reduce using rule 57 (empty -> .)
    COLINEALES      reduce using rule 57 (empty -> .)
    [               reduce using rule 57 (empty -> .)
    {               reduce using rule 57 (empty -> .)

    com                            shift and go to state 553
    empty                          shift and go to state 125

state 523

    (20) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .

    COMMENT         reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    IF              reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    DO              reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    WHILE           reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    FOR             reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    RETURN          reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    ;               reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    MENOSMENOS      reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    MASMAS          reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    ID              reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    PRINT           reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    MULTIESCALAR    reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    LENGTH          reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    CAPITALIZAR     reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    COLINEALES      reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    [               reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    {               reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    }               reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    $end            reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    ELSE            reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)


state 524

    (10) lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .

    COMMENT         reduce using rule 10 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    IF              reduce using rule 10 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    DO              reduce using rule 10 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    WHILE           reduce using rule 10 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    FOR             reduce using rule 10 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    RETURN          reduce using rule 10 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    ;               reduce using rule 10 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    MENOSMENOS      reduce using rule 10 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    MASMAS          reduce using rule 10 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    ID              reduce using rule 10 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    PRINT           reduce using rule 10 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    MULTIESCALAR    reduce using rule 10 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    LENGTH          reduce using rule 10 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    CAPITALIZAR     reduce using rule 10 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    COLINEALES      reduce using rule 10 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    [               reduce using rule 10 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    {               reduce using rule 10 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    $end            reduce using rule 10 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    }               reduce using rule 10 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)


state 525

    (17) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { . g }
    (96) reg -> { . campos }
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (97) campos -> . ID : valores , campos
    (98) campos -> . ID : valores
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (57) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (156) varAsig -> . variable MULEQ valores
    (157) varAsig -> . variable DIVEQ valores
    (158) varAsig -> . variable MASEQ valores
    (159) varAsig -> . variable MENOSEQ valores
    (160) varAsig -> . variable = valores
    (161) varAsig -> . ID . ID = valores
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    COMMENT         shift and go to state 10
    ID              shift and go to state 128
    }               reduce using rule 57 (empty -> .)
    IF              shift and go to state 24
    DO              shift and go to state 1
    WHILE           shift and go to state 7
    FOR             shift and go to state 18
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    PRINT           shift and go to state 8
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    [               shift and go to state 22
    {               shift and go to state 35

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    linea                          shift and go to state 37
    vecVal                         shift and go to state 9
    sentencia                      shift and go to state 11
    atributos                      shift and go to state 6
    vec                            shift and go to state 36
    reg                            shift and go to state 13
    empty                          shift and go to state 14
    funcVoid                       shift and go to state 16
    campos                         shift and go to state 119
    func                           shift and go to state 20
    variable                       shift and go to state 21
    varAsig                        shift and go to state 25
    g                              shift and go to state 554
    funcString                     shift and go to state 27
    funcReturn                     shift and go to state 28
    lCerrada                       shift and go to state 30
    lAbierta                       shift and go to state 32
    varsOps                        shift and go to state 15
    loop                           shift and go to state 34

state 526

    (8) lAbierta -> IF ( cosaBooleana ) { g } . ELSE lAbierta
    (11) lAbierta -> IF ( cosaBooleana ) { g } .
    (16) lCerrada -> IF ( cosaBooleana ) { g } . ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) { g } . ELSE lCerrada

    ELSE            shift and go to state 555
    COMMENT         reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    IF              reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    DO              reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    WHILE           reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    FOR             reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    RETURN          reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    ;               reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MENOSMENOS      reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MASMAS          reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    ID              reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    PRINT           reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MULTIESCALAR    reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    LENGTH          reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    CAPITALIZAR     reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    COLINEALES      reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    [               reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    {               reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    $end            reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    }               reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)


state 527

    (50) funcInt -> MULTIESCALAR ( valores , valores param ) .

    ;               reduce using rule 50 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ,               reduce using rule 50 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ]               reduce using rule 50 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    )               reduce using rule 50 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    :               reduce using rule 50 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    }               reduce using rule 50 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    +               reduce using rule 50 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    -               reduce using rule 50 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    *               reduce using rule 50 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    /               reduce using rule 50 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    %               reduce using rule 50 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ^               reduce using rule 50 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    EQEQ            reduce using rule 50 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    DISTINTO        reduce using rule 50 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    >               reduce using rule 50 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    <               reduce using rule 50 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    AND             reduce using rule 50 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    OR              reduce using rule 50 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ?               reduce using rule 50 (funcInt -> MULTIESCALAR ( valores , valores param ) .)


state 528

    (55) param -> , valores .

    )               reduce using rule 55 (param -> , valores .)


state 529

    (29) lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) . ;

    ;               shift and go to state 556


state 530

    (18) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada . ELSE { g }
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada . ELSE lCerrada
    (23) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada . ELSE COMMENT com lCerrada

    ELSE            shift and go to state 557


state 531

    (16) lCerrada -> IF ( cosaBooleana ) { g } . ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) { g } . ELSE lCerrada

    ELSE            shift and go to state 558


state 532

    (27) lCerrada -> DO { g } WHILE ( valores ) . ;

    ;               shift and go to state 559


state 533

    (36) loop -> FOR ( primParam ; valores ; tercerParam ) .

    {               reduce using rule 36 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    COMMENT         reduce using rule 36 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    IF              reduce using rule 36 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    DO              reduce using rule 36 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    RETURN          reduce using rule 36 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    ;               reduce using rule 36 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    WHILE           reduce using rule 36 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    FOR             reduce using rule 36 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    MENOSMENOS      reduce using rule 36 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    MASMAS          reduce using rule 36 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    ID              reduce using rule 36 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    PRINT           reduce using rule 36 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    MULTIESCALAR    reduce using rule 36 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    LENGTH          reduce using rule 36 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    CAPITALIZAR     reduce using rule 36 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    COLINEALES      reduce using rule 36 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    [               reduce using rule 36 (loop -> FOR ( primParam ; valores ; tercerParam ) .)


state 534

    (139) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (212) expBool -> valoresBool . OR and
    (214) expBool -> valoresBool . OR valoresBool
    (112) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (130) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (217) and -> valoresBool . AND eq
    (219) and -> valoresBool . AND valoresBool

    ?               shift and go to state 539
    OR              shift and go to state 182
    AND             shift and go to state 181


state 535

    (145) valoresTernarioBool -> expBool .
    (140) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> expBool . OR and
    (213) expBool -> expBool . OR valoresBool
    (117) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (131) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat

    :               reduce using rule 145 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 540
    OR              shift and go to state 217


state 536

    (114) ternarioVars -> valoresBool ? valoresTernarioMat . : valoresTernarioVars

    :               shift and go to state 560


state 537

    (144) valoresTernarioBool -> ( . ternarioBool )
    (125) valoresTernarioVars -> ( . ternarioVars )
    (138) valoresTernarioMat -> ( . ternarioMat )
    (209) valoresBool -> ( . ternarioBool )
    (170) valoresMat -> ( . ternarioMat )
    (238) tCompareEQ -> ( . ternarioBool )
    (239) tCompareEQ -> ( . ternarioMat )
    (246) tCompare -> ( . ternarioMat )
    (203) paren -> ( . eMat )
    (204) paren -> ( . valoresMat )
    (254) parenBool -> ( . expBool )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (53) funcBool -> . COLINEALES ( valores , valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (58) vec -> . [ elem ]
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    STRING          shift and go to state 196
    (               shift and go to state 193
    BOOL            shift and go to state 202
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    COLINEALES      shift and go to state 4
    {               shift and go to state 35
    -               shift and go to state 83
    +               shift and go to state 82
    [               shift and go to state 22
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 189
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 190
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 506
    eMat                           shift and go to state 192
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 401
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    exp                            shift and go to state 105
    ternarioBool                   shift and go to state 402
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    expBool                        shift and go to state 507
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 195
    ternarioVars                   shift and go to state 403
    varYVals                       shift and go to state 205
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 206

state 538

    (119) ternarioVars -> expBool ? valoresTernarioMat . : valoresTernarioVars

    :               shift and go to state 561


state 539

    (139) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (112) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (130) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (141) valoresTernarioBool -> . BOOL
    (142) valoresTernarioBool -> . funcBool
    (143) valoresTernarioBool -> . ternarioBool
    (144) valoresTernarioBool -> . ( ternarioBool )
    (145) valoresTernarioBool -> . expBool
    (122) valoresTernarioVars -> . reg
    (123) valoresTernarioVars -> . vec
    (124) valoresTernarioVars -> . ternarioVars
    (125) valoresTernarioVars -> . ( ternarioVars )
    (126) valoresTernarioVars -> . atributos
    (127) valoresTernarioVars -> . varsOps
    (128) valoresTernarioVars -> . varYVals
    (129) valoresTernarioVars -> . RES
    (132) valoresTernarioMat -> . INT
    (133) valoresTernarioMat -> . FLOAT
    (134) valoresTernarioMat -> . funcInt
    (135) valoresTernarioMat -> . STRING
    (136) valoresTernarioMat -> . eMat
    (137) valoresTernarioMat -> . ternarioMat
    (138) valoresTernarioMat -> . ( ternarioMat )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (96) reg -> . { campos }
    (58) vec -> . [ elem ]
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    BOOL            shift and go to state 321
    (               shift and go to state 537
    RES             shift and go to state 304
    INT             shift and go to state 319
    FLOAT           shift and go to state 320
    STRING          shift and go to state 316
    COLINEALES      shift and go to state 4
    {               shift and go to state 35
    [               shift and go to state 22
    ID              shift and go to state 310
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 303
    funcInt                        shift and go to state 305
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 534
    eMat                           shift and go to state 308
    tCompareEQ                     shift and go to state 80
    valoresTernarioBool            shift and go to state 309
    vecVal                         shift and go to state 306
    ternarioMat                    shift and go to state 311
    vec                            shift and go to state 312
    paren                          shift and go to state 93
    reg                            shift and go to state 314
    valoresTernarioVars            shift and go to state 315
    expBool                        shift and go to state 535
    ternarioBool                   shift and go to state 317
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    valoresTernarioMat             shift and go to state 542
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 452
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 324
    varYVals                       shift and go to state 454
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 446

state 540

    (140) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (117) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (131) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (141) valoresTernarioBool -> . BOOL
    (142) valoresTernarioBool -> . funcBool
    (143) valoresTernarioBool -> . ternarioBool
    (144) valoresTernarioBool -> . ( ternarioBool )
    (145) valoresTernarioBool -> . expBool
    (122) valoresTernarioVars -> . reg
    (123) valoresTernarioVars -> . vec
    (124) valoresTernarioVars -> . ternarioVars
    (125) valoresTernarioVars -> . ( ternarioVars )
    (126) valoresTernarioVars -> . atributos
    (127) valoresTernarioVars -> . varsOps
    (128) valoresTernarioVars -> . varYVals
    (129) valoresTernarioVars -> . RES
    (132) valoresTernarioMat -> . INT
    (133) valoresTernarioMat -> . FLOAT
    (134) valoresTernarioMat -> . funcInt
    (135) valoresTernarioMat -> . STRING
    (136) valoresTernarioMat -> . eMat
    (137) valoresTernarioMat -> . ternarioMat
    (138) valoresTernarioMat -> . ( ternarioMat )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (96) reg -> . { campos }
    (58) vec -> . [ elem ]
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    BOOL            shift and go to state 321
    (               shift and go to state 537
    RES             shift and go to state 304
    INT             shift and go to state 319
    FLOAT           shift and go to state 320
    STRING          shift and go to state 316
    COLINEALES      shift and go to state 4
    {               shift and go to state 35
    [               shift and go to state 22
    ID              shift and go to state 310
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 303
    funcInt                        shift and go to state 305
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 534
    eMat                           shift and go to state 308
    tCompareEQ                     shift and go to state 80
    valoresTernarioBool            shift and go to state 351
    vecVal                         shift and go to state 306
    ternarioMat                    shift and go to state 311
    vec                            shift and go to state 312
    paren                          shift and go to state 93
    reg                            shift and go to state 314
    valoresTernarioVars            shift and go to state 352
    expBool                        shift and go to state 535
    ternarioBool                   shift and go to state 317
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    valoresTernarioMat             shift and go to state 544
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 452
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 324
    varYVals                       shift and go to state 454
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 446

state 541

    (116) ternarioVars -> valoresBool ? valoresTernarioBool . : valoresTernarioVars
    (139) ternarioBool -> valoresBool ? valoresTernarioBool . : valoresTernarioBool

    :               shift and go to state 562


state 542

    (114) ternarioVars -> valoresBool ? valoresTernarioMat . : valoresTernarioVars
    (130) ternarioMat -> valoresBool ? valoresTernarioMat . : valoresTernarioMat

    :               shift and go to state 563


state 543

    (121) ternarioVars -> expBool ? valoresTernarioBool . : valoresTernarioVars
    (140) ternarioBool -> expBool ? valoresTernarioBool . : valoresTernarioBool

    :               shift and go to state 564


state 544

    (119) ternarioVars -> expBool ? valoresTernarioMat . : valoresTernarioVars
    (131) ternarioMat -> expBool ? valoresTernarioMat . : valoresTernarioMat

    :               shift and go to state 565


state 545

    (116) ternarioVars -> valoresBool ? valoresTernarioBool . : valoresTernarioVars

    :               shift and go to state 566


state 546

    (145) valoresTernarioBool -> expBool .
    (131) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (117) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (140) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> expBool . OR and
    (213) expBool -> expBool . OR valoresBool

    :               reduce using rule 145 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 549
    OR              shift and go to state 217


state 547

    (138) valoresTernarioMat -> ( . ternarioMat )
    (125) valoresTernarioVars -> ( . ternarioVars )
    (144) valoresTernarioBool -> ( . ternarioBool )
    (170) valoresMat -> ( . ternarioMat )
    (209) valoresBool -> ( . ternarioBool )
    (238) tCompareEQ -> ( . ternarioBool )
    (239) tCompareEQ -> ( . ternarioMat )
    (203) paren -> ( . eMat )
    (204) paren -> ( . valoresMat )
    (246) tCompare -> ( . ternarioMat )
    (254) parenBool -> ( . expBool )
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (53) funcBool -> . COLINEALES ( valores , valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (58) vec -> . [ elem ]
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    STRING          shift and go to state 196
    (               shift and go to state 193
    BOOL            shift and go to state 202
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    COLINEALES      shift and go to state 4
    {               shift and go to state 35
    -               shift and go to state 83
    +               shift and go to state 82
    [               shift and go to state 22
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 189
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 190
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 512
    eMat                           shift and go to state 192
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 401
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    exp                            shift and go to state 105
    ternarioBool                   shift and go to state 402
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    expBool                        shift and go to state 513
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 195
    ternarioVars                   shift and go to state 403
    varYVals                       shift and go to state 205
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 206

state 548

    (130) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (112) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (139) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (132) valoresTernarioMat -> . INT
    (133) valoresTernarioMat -> . FLOAT
    (134) valoresTernarioMat -> . funcInt
    (135) valoresTernarioMat -> . STRING
    (136) valoresTernarioMat -> . eMat
    (137) valoresTernarioMat -> . ternarioMat
    (138) valoresTernarioMat -> . ( ternarioMat )
    (122) valoresTernarioVars -> . reg
    (123) valoresTernarioVars -> . vec
    (124) valoresTernarioVars -> . ternarioVars
    (125) valoresTernarioVars -> . ( ternarioVars )
    (126) valoresTernarioVars -> . atributos
    (127) valoresTernarioVars -> . varsOps
    (128) valoresTernarioVars -> . varYVals
    (129) valoresTernarioVars -> . RES
    (141) valoresTernarioBool -> . BOOL
    (142) valoresTernarioBool -> . funcBool
    (143) valoresTernarioBool -> . ternarioBool
    (144) valoresTernarioBool -> . ( ternarioBool )
    (145) valoresTernarioBool -> . expBool
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (96) reg -> . { campos }
    (58) vec -> . [ elem ]
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (53) funcBool -> . COLINEALES ( valores , valores )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 319
    FLOAT           shift and go to state 320
    STRING          shift and go to state 316
    (               shift and go to state 547
    RES             shift and go to state 304
    BOOL            shift and go to state 321
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    {               shift and go to state 35
    [               shift and go to state 22
    ID              shift and go to state 310
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    COLINEALES      shift and go to state 4
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    atributos                      shift and go to state 326
    funcBool                       shift and go to state 303
    funcInt                        shift and go to state 305
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 512
    eMat                           shift and go to state 308
    tCompareEQ                     shift and go to state 80
    valoresTernarioBool            shift and go to state 541
    vecVal                         shift and go to state 306
    ternarioMat                    shift and go to state 311
    vec                            shift and go to state 312
    paren                          shift and go to state 93
    reg                            shift and go to state 314
    valoresTernarioVars            shift and go to state 315
    exp                            shift and go to state 105
    ternarioBool                   shift and go to state 317
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    valoresTernarioMat             shift and go to state 318
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 313
    ternarioVars                   shift and go to state 324
    varYVals                       shift and go to state 325
    parenBool                      shift and go to state 91
    expBool                        shift and go to state 546

state 549

    (131) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (117) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (140) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (132) valoresTernarioMat -> . INT
    (133) valoresTernarioMat -> . FLOAT
    (134) valoresTernarioMat -> . funcInt
    (135) valoresTernarioMat -> . STRING
    (136) valoresTernarioMat -> . eMat
    (137) valoresTernarioMat -> . ternarioMat
    (138) valoresTernarioMat -> . ( ternarioMat )
    (122) valoresTernarioVars -> . reg
    (123) valoresTernarioVars -> . vec
    (124) valoresTernarioVars -> . ternarioVars
    (125) valoresTernarioVars -> . ( ternarioVars )
    (126) valoresTernarioVars -> . atributos
    (127) valoresTernarioVars -> . varsOps
    (128) valoresTernarioVars -> . varYVals
    (129) valoresTernarioVars -> . RES
    (141) valoresTernarioBool -> . BOOL
    (142) valoresTernarioBool -> . funcBool
    (143) valoresTernarioBool -> . ternarioBool
    (144) valoresTernarioBool -> . ( ternarioBool )
    (145) valoresTernarioBool -> . expBool
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (96) reg -> . { campos }
    (58) vec -> . [ elem ]
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (53) funcBool -> . COLINEALES ( valores , valores )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 319
    FLOAT           shift and go to state 320
    STRING          shift and go to state 316
    (               shift and go to state 547
    RES             shift and go to state 304
    BOOL            shift and go to state 321
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    {               shift and go to state 35
    [               shift and go to state 22
    ID              shift and go to state 310
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    COLINEALES      shift and go to state 4
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 303
    funcInt                        shift and go to state 305
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 512
    eMat                           shift and go to state 308
    tCompareEQ                     shift and go to state 80
    valoresTernarioBool            shift and go to state 543
    vecVal                         shift and go to state 306
    ternarioMat                    shift and go to state 311
    vec                            shift and go to state 312
    paren                          shift and go to state 93
    reg                            shift and go to state 314
    valoresTernarioVars            shift and go to state 352
    expBool                        shift and go to state 546
    ternarioBool                   shift and go to state 317
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    valoresTernarioMat             shift and go to state 353
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 313
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 324
    varYVals                       shift and go to state 325
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 326

state 550

    (121) ternarioVars -> expBool ? valoresTernarioBool . : valoresTernarioVars

    :               shift and go to state 567


state 551

    (9) lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE . lAbierta
    (18) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE . { g }
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE . lCerrada
    (23) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE . COMMENT com lCerrada
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (156) varAsig -> . variable MULEQ valores
    (157) varAsig -> . variable DIVEQ valores
    (158) varAsig -> . variable MASEQ valores
    (159) varAsig -> . variable MENOSEQ valores
    (160) varAsig -> . variable = valores
    (161) varAsig -> . ID . ID = valores
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    {               shift and go to state 571
    COMMENT         shift and go to state 568
    IF              shift and go to state 24
    DO              shift and go to state 1
    WHILE           shift and go to state 7
    FOR             shift and go to state 18
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    ID              shift and go to state 23
    PRINT           shift and go to state 8
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    [               shift and go to state 22

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 9
    sentencia                      shift and go to state 11
    atributos                      shift and go to state 6
    vec                            shift and go to state 36
    reg                            shift and go to state 13
    funcVoid                       shift and go to state 16
    func                           shift and go to state 20
    variable                       shift and go to state 21
    varAsig                        shift and go to state 25
    funcString                     shift and go to state 27
    funcReturn                     shift and go to state 28
    lCerrada                       shift and go to state 569
    lAbierta                       shift and go to state 570
    varsOps                        shift and go to state 15
    loop                           shift and go to state 34

state 552

    (16) lCerrada -> IF ( cosaBooleana ) . { g } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE { g }
    (18) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) . { g } ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE COMMENT com lCerrada
    (6) lAbierta -> IF ( cosaBooleana ) . linea
    (7) lAbierta -> IF ( cosaBooleana ) . COMMENT com linea
    (8) lAbierta -> IF ( cosaBooleana ) . { g } ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> IF ( cosaBooleana ) . lCerrada ELSE lAbierta
    (11) lAbierta -> IF ( cosaBooleana ) . { g }
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (156) varAsig -> . variable MULEQ valores
    (157) varAsig -> . variable DIVEQ valores
    (158) varAsig -> . variable MASEQ valores
    (159) varAsig -> . variable MENOSEQ valores
    (160) varAsig -> . variable = valores
    (161) varAsig -> . ID . ID = valores
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    {               shift and go to state 574
    COMMENT         shift and go to state 572
    IF              shift and go to state 424
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 7
    FOR             shift and go to state 18
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    ID              shift and go to state 23
    PRINT           shift and go to state 8
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    [               shift and go to state 22

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 9
    sentencia                      shift and go to state 11
    atributos                      shift and go to state 6
    vec                            shift and go to state 36
    reg                            shift and go to state 13
    varsOps                        shift and go to state 15
    funcVoid                       shift and go to state 16
    func                           shift and go to state 20
    variable                       shift and go to state 21
    varAsig                        shift and go to state 25
    funcString                     shift and go to state 27
    funcReturn                     shift and go to state 28
    lCerrada                       shift and go to state 573
    lAbierta                       shift and go to state 32
    linea                          shift and go to state 422
    loop                           shift and go to state 427

state 553

    (22) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com . lCerrada
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (156) varAsig -> . variable MULEQ valores
    (157) varAsig -> . variable DIVEQ valores
    (158) varAsig -> . variable MASEQ valores
    (159) varAsig -> . variable MENOSEQ valores
    (160) varAsig -> . variable = valores
    (161) varAsig -> . ID . ID = valores
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    IF              shift and go to state 39
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 7
    FOR             shift and go to state 18
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    ID              shift and go to state 23
    PRINT           shift and go to state 8
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    [               shift and go to state 22
    {               shift and go to state 35

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 9
    sentencia                      shift and go to state 11
    atributos                      shift and go to state 6
    vec                            shift and go to state 36
    reg                            shift and go to state 13
    funcVoid                       shift and go to state 16
    func                           shift and go to state 20
    variable                       shift and go to state 21
    varAsig                        shift and go to state 25
    funcString                     shift and go to state 27
    funcReturn                     shift and go to state 28
    lCerrada                       shift and go to state 575
    varsOps                        shift and go to state 15
    loop                           shift and go to state 42

state 554

    (17) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g . }

    }               shift and go to state 576


state 555

    (8) lAbierta -> IF ( cosaBooleana ) { g } ELSE . lAbierta
    (16) lCerrada -> IF ( cosaBooleana ) { g } ELSE . { g }
    (19) lCerrada -> IF ( cosaBooleana ) { g } ELSE . lCerrada
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (156) varAsig -> . variable MULEQ valores
    (157) varAsig -> . variable DIVEQ valores
    (158) varAsig -> . variable MASEQ valores
    (159) varAsig -> . variable MENOSEQ valores
    (160) varAsig -> . variable = valores
    (161) varAsig -> . ID . ID = valores
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    {               shift and go to state 579
    IF              shift and go to state 24
    DO              shift and go to state 1
    WHILE           shift and go to state 7
    FOR             shift and go to state 18
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    ID              shift and go to state 23
    PRINT           shift and go to state 8
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    [               shift and go to state 22

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 9
    sentencia                      shift and go to state 11
    atributos                      shift and go to state 6
    vec                            shift and go to state 36
    reg                            shift and go to state 13
    funcVoid                       shift and go to state 16
    func                           shift and go to state 20
    variable                       shift and go to state 21
    varAsig                        shift and go to state 25
    funcString                     shift and go to state 27
    funcReturn                     shift and go to state 28
    lCerrada                       shift and go to state 577
    lAbierta                       shift and go to state 578
    varsOps                        shift and go to state 15
    loop                           shift and go to state 34

state 556

    (29) lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .

    COMMENT         reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    IF              reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    DO              reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    WHILE           reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    FOR             reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    RETURN          reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    ;               reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    MENOSMENOS      reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    MASMAS          reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    ID              reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    PRINT           reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    MULTIESCALAR    reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    LENGTH          reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    CAPITALIZAR     reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    COLINEALES      reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    [               reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    {               reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    }               reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    $end            reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    ELSE            reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)


state 557

    (18) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE . { g }
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE . lCerrada
    (23) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE . COMMENT com lCerrada
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (156) varAsig -> . variable MULEQ valores
    (157) varAsig -> . variable DIVEQ valores
    (158) varAsig -> . variable MASEQ valores
    (159) varAsig -> . variable MENOSEQ valores
    (160) varAsig -> . variable = valores
    (161) varAsig -> . ID . ID = valores
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    {               shift and go to state 571
    COMMENT         shift and go to state 568
    IF              shift and go to state 39
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 7
    FOR             shift and go to state 18
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    ID              shift and go to state 23
    PRINT           shift and go to state 8
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    [               shift and go to state 22

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 9
    sentencia                      shift and go to state 11
    atributos                      shift and go to state 6
    vec                            shift and go to state 36
    reg                            shift and go to state 13
    funcVoid                       shift and go to state 16
    func                           shift and go to state 20
    variable                       shift and go to state 21
    varAsig                        shift and go to state 25
    funcString                     shift and go to state 27
    funcReturn                     shift and go to state 28
    lCerrada                       shift and go to state 569
    varsOps                        shift and go to state 15
    loop                           shift and go to state 42

state 558

    (16) lCerrada -> IF ( cosaBooleana ) { g } ELSE . { g }
    (19) lCerrada -> IF ( cosaBooleana ) { g } ELSE . lCerrada
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (156) varAsig -> . variable MULEQ valores
    (157) varAsig -> . variable DIVEQ valores
    (158) varAsig -> . variable MASEQ valores
    (159) varAsig -> . variable MENOSEQ valores
    (160) varAsig -> . variable = valores
    (161) varAsig -> . ID . ID = valores
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    {               shift and go to state 579
    IF              shift and go to state 39
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 7
    FOR             shift and go to state 18
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    ID              shift and go to state 23
    PRINT           shift and go to state 8
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    [               shift and go to state 22

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 9
    sentencia                      shift and go to state 11
    atributos                      shift and go to state 6
    vec                            shift and go to state 36
    reg                            shift and go to state 13
    funcVoid                       shift and go to state 16
    func                           shift and go to state 20
    variable                       shift and go to state 21
    varAsig                        shift and go to state 25
    funcString                     shift and go to state 27
    funcReturn                     shift and go to state 28
    lCerrada                       shift and go to state 577
    varsOps                        shift and go to state 15
    loop                           shift and go to state 42

state 559

    (27) lCerrada -> DO { g } WHILE ( valores ) ; .

    COMMENT         reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    IF              reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    DO              reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    WHILE           reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    FOR             reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    RETURN          reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    ;               reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    MENOSMENOS      reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    MASMAS          reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    ID              reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    PRINT           reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    MULTIESCALAR    reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    LENGTH          reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    CAPITALIZAR     reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    COLINEALES      reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    [               reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    {               reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    }               reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    $end            reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    ELSE            reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)


state 560

    (114) ternarioVars -> valoresBool ? valoresTernarioMat : . valoresTernarioVars
    (122) valoresTernarioVars -> . reg
    (123) valoresTernarioVars -> . vec
    (124) valoresTernarioVars -> . ternarioVars
    (125) valoresTernarioVars -> . ( ternarioVars )
    (126) valoresTernarioVars -> . atributos
    (127) valoresTernarioVars -> . varsOps
    (128) valoresTernarioVars -> . varYVals
    (129) valoresTernarioVars -> . RES
    (96) reg -> . { campos }
    (58) vec -> . [ elem ]
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (53) funcBool -> . COLINEALES ( valores , valores )
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (254) parenBool -> . ( expBool )
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )

    (               shift and go to state 582
    RES             shift and go to state 304
    {               shift and go to state 35
    [               shift and go to state 22
    ID              shift and go to state 310
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    BOOL            shift and go to state 202
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    INT             shift and go to state 244
    FLOAT           shift and go to state 245
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    STRING          shift and go to state 196
    NOT             shift and go to state 104
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82

    and                            shift and go to state 65
    atributos                      shift and go to state 446
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 239
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 580
    eMat                           shift and go to state 241
    p                              shift and go to state 101
    vecVal                         shift and go to state 306
    vec                            shift and go to state 312
    paren                          shift and go to state 93
    reg                            shift and go to state 314
    valoresTernarioVars            shift and go to state 457
    exp                            shift and go to state 105
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    tCompareEQ                     shift and go to state 80
    varsOps                        shift and go to state 443
    ternarioVars                   shift and go to state 324
    varYVals                       shift and go to state 445
    parenBool                      shift and go to state 91
    expBool                        shift and go to state 581

state 561

    (119) ternarioVars -> expBool ? valoresTernarioMat : . valoresTernarioVars
    (122) valoresTernarioVars -> . reg
    (123) valoresTernarioVars -> . vec
    (124) valoresTernarioVars -> . ternarioVars
    (125) valoresTernarioVars -> . ( ternarioVars )
    (126) valoresTernarioVars -> . atributos
    (127) valoresTernarioVars -> . varsOps
    (128) valoresTernarioVars -> . varYVals
    (129) valoresTernarioVars -> . RES
    (96) reg -> . { campos }
    (58) vec -> . [ elem ]
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (53) funcBool -> . COLINEALES ( valores , valores )
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (254) parenBool -> . ( expBool )
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )

    (               shift and go to state 582
    RES             shift and go to state 304
    {               shift and go to state 35
    [               shift and go to state 22
    ID              shift and go to state 310
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    BOOL            shift and go to state 202
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    INT             shift and go to state 244
    FLOAT           shift and go to state 245
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    STRING          shift and go to state 196
    NOT             shift and go to state 104
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82

    and                            shift and go to state 65
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 239
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    vecVal                         shift and go to state 306
    eMat                           shift and go to state 241
    p                              shift and go to state 101
    valoresBool                    shift and go to state 580
    vec                            shift and go to state 312
    paren                          shift and go to state 93
    reg                            shift and go to state 314
    valoresTernarioVars            shift and go to state 476
    expBool                        shift and go to state 581
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    tCompareEQ                     shift and go to state 80
    varsOps                        shift and go to state 443
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 324
    varYVals                       shift and go to state 445
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 446

state 562

    (116) ternarioVars -> valoresBool ? valoresTernarioBool : . valoresTernarioVars
    (139) ternarioBool -> valoresBool ? valoresTernarioBool : . valoresTernarioBool
    (122) valoresTernarioVars -> . reg
    (123) valoresTernarioVars -> . vec
    (124) valoresTernarioVars -> . ternarioVars
    (125) valoresTernarioVars -> . ( ternarioVars )
    (126) valoresTernarioVars -> . atributos
    (127) valoresTernarioVars -> . varsOps
    (128) valoresTernarioVars -> . varYVals
    (129) valoresTernarioVars -> . RES
    (141) valoresTernarioBool -> . BOOL
    (142) valoresTernarioBool -> . funcBool
    (143) valoresTernarioBool -> . ternarioBool
    (144) valoresTernarioBool -> . ( ternarioBool )
    (145) valoresTernarioBool -> . expBool
    (96) reg -> . { campos }
    (58) vec -> . [ elem ]
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (53) funcBool -> . COLINEALES ( valores , valores )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (254) parenBool -> . ( expBool )
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )

    (               shift and go to state 585
    RES             shift and go to state 304
    BOOL            shift and go to state 321
    {               shift and go to state 35
    [               shift and go to state 22
    ID              shift and go to state 310
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    COLINEALES      shift and go to state 4
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    INT             shift and go to state 244
    FLOAT           shift and go to state 245
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    STRING          shift and go to state 196
    NOT             shift and go to state 104
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82

    and                            shift and go to state 65
    atributos                      shift and go to state 446
    funcBool                       shift and go to state 303
    funcInt                        shift and go to state 239
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 583
    eMat                           shift and go to state 241
    p                              shift and go to state 101
    valoresTernarioBool            shift and go to state 440
    vecVal                         shift and go to state 306
    vec                            shift and go to state 312
    paren                          shift and go to state 93
    reg                            shift and go to state 314
    valoresTernarioVars            shift and go to state 441
    exp                            shift and go to state 105
    ternarioBool                   shift and go to state 317
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    tCompareEQ                     shift and go to state 80
    varsOps                        shift and go to state 443
    ternarioVars                   shift and go to state 324
    varYVals                       shift and go to state 445
    parenBool                      shift and go to state 91
    expBool                        shift and go to state 584

state 563

    (114) ternarioVars -> valoresBool ? valoresTernarioMat : . valoresTernarioVars
    (130) ternarioMat -> valoresBool ? valoresTernarioMat : . valoresTernarioMat
    (122) valoresTernarioVars -> . reg
    (123) valoresTernarioVars -> . vec
    (124) valoresTernarioVars -> . ternarioVars
    (125) valoresTernarioVars -> . ( ternarioVars )
    (126) valoresTernarioVars -> . atributos
    (127) valoresTernarioVars -> . varsOps
    (128) valoresTernarioVars -> . varYVals
    (129) valoresTernarioVars -> . RES
    (132) valoresTernarioMat -> . INT
    (133) valoresTernarioMat -> . FLOAT
    (134) valoresTernarioMat -> . funcInt
    (135) valoresTernarioMat -> . STRING
    (136) valoresTernarioMat -> . eMat
    (137) valoresTernarioMat -> . ternarioMat
    (138) valoresTernarioMat -> . ( ternarioMat )
    (96) reg -> . { campos }
    (58) vec -> . [ elem ]
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (53) funcBool -> . COLINEALES ( valores , valores )
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    (               shift and go to state 587
    RES             shift and go to state 304
    INT             shift and go to state 319
    FLOAT           shift and go to state 320
    STRING          shift and go to state 316
    {               shift and go to state 35
    [               shift and go to state 22
    ID              shift and go to state 310
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    BOOL            shift and go to state 202
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    atributos                      shift and go to state 446
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 305
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 586
    eMat                           shift and go to state 308
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 306
    ternarioMat                    shift and go to state 311
    vec                            shift and go to state 312
    paren                          shift and go to state 93
    reg                            shift and go to state 314
    valoresTernarioVars            shift and go to state 457
    exp                            shift and go to state 105
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    valoresTernarioMat             shift and go to state 458
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 452
    ternarioVars                   shift and go to state 324
    varYVals                       shift and go to state 454
    parenBool                      shift and go to state 91
    expBool                        shift and go to state 588

state 564

    (121) ternarioVars -> expBool ? valoresTernarioBool : . valoresTernarioVars
    (140) ternarioBool -> expBool ? valoresTernarioBool : . valoresTernarioBool
    (122) valoresTernarioVars -> . reg
    (123) valoresTernarioVars -> . vec
    (124) valoresTernarioVars -> . ternarioVars
    (125) valoresTernarioVars -> . ( ternarioVars )
    (126) valoresTernarioVars -> . atributos
    (127) valoresTernarioVars -> . varsOps
    (128) valoresTernarioVars -> . varYVals
    (129) valoresTernarioVars -> . RES
    (141) valoresTernarioBool -> . BOOL
    (142) valoresTernarioBool -> . funcBool
    (143) valoresTernarioBool -> . ternarioBool
    (144) valoresTernarioBool -> . ( ternarioBool )
    (145) valoresTernarioBool -> . expBool
    (96) reg -> . { campos }
    (58) vec -> . [ elem ]
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (53) funcBool -> . COLINEALES ( valores , valores )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (254) parenBool -> . ( expBool )
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )

    (               shift and go to state 585
    RES             shift and go to state 304
    BOOL            shift and go to state 321
    {               shift and go to state 35
    [               shift and go to state 22
    ID              shift and go to state 310
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    COLINEALES      shift and go to state 4
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    INT             shift and go to state 244
    FLOAT           shift and go to state 245
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    STRING          shift and go to state 196
    NOT             shift and go to state 104
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82

    and                            shift and go to state 65
    funcBool                       shift and go to state 303
    funcInt                        shift and go to state 239
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 583
    eMat                           shift and go to state 241
    p                              shift and go to state 101
    valoresTernarioBool            shift and go to state 470
    vecVal                         shift and go to state 306
    vec                            shift and go to state 312
    paren                          shift and go to state 93
    reg                            shift and go to state 314
    valoresTernarioVars            shift and go to state 471
    expBool                        shift and go to state 584
    ternarioBool                   shift and go to state 317
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    tCompareEQ                     shift and go to state 80
    varsOps                        shift and go to state 443
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 324
    varYVals                       shift and go to state 445
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 446

state 565

    (119) ternarioVars -> expBool ? valoresTernarioMat : . valoresTernarioVars
    (131) ternarioMat -> expBool ? valoresTernarioMat : . valoresTernarioMat
    (122) valoresTernarioVars -> . reg
    (123) valoresTernarioVars -> . vec
    (124) valoresTernarioVars -> . ternarioVars
    (125) valoresTernarioVars -> . ( ternarioVars )
    (126) valoresTernarioVars -> . atributos
    (127) valoresTernarioVars -> . varsOps
    (128) valoresTernarioVars -> . varYVals
    (129) valoresTernarioVars -> . RES
    (132) valoresTernarioMat -> . INT
    (133) valoresTernarioMat -> . FLOAT
    (134) valoresTernarioMat -> . funcInt
    (135) valoresTernarioMat -> . STRING
    (136) valoresTernarioMat -> . eMat
    (137) valoresTernarioMat -> . ternarioMat
    (138) valoresTernarioMat -> . ( ternarioMat )
    (96) reg -> . { campos }
    (58) vec -> . [ elem ]
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (53) funcBool -> . COLINEALES ( valores , valores )
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    (               shift and go to state 587
    RES             shift and go to state 304
    INT             shift and go to state 319
    FLOAT           shift and go to state 320
    STRING          shift and go to state 316
    {               shift and go to state 35
    [               shift and go to state 22
    ID              shift and go to state 310
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    BOOL            shift and go to state 202
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 305
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    vecVal                         shift and go to state 306
    eMat                           shift and go to state 308
    tCompareEQ                     shift and go to state 80
    valoresBool                    shift and go to state 586
    ternarioMat                    shift and go to state 311
    vec                            shift and go to state 312
    paren                          shift and go to state 93
    reg                            shift and go to state 314
    valoresTernarioVars            shift and go to state 476
    expBool                        shift and go to state 588
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    valoresTernarioMat             shift and go to state 475
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 452
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 324
    varYVals                       shift and go to state 454
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 446

state 566

    (116) ternarioVars -> valoresBool ? valoresTernarioBool : . valoresTernarioVars
    (122) valoresTernarioVars -> . reg
    (123) valoresTernarioVars -> . vec
    (124) valoresTernarioVars -> . ternarioVars
    (125) valoresTernarioVars -> . ( ternarioVars )
    (126) valoresTernarioVars -> . atributos
    (127) valoresTernarioVars -> . varsOps
    (128) valoresTernarioVars -> . varYVals
    (129) valoresTernarioVars -> . RES
    (96) reg -> . { campos }
    (58) vec -> . [ elem ]
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (53) funcBool -> . COLINEALES ( valores , valores )
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (254) parenBool -> . ( expBool )
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )

    (               shift and go to state 582
    RES             shift and go to state 304
    {               shift and go to state 35
    [               shift and go to state 22
    ID              shift and go to state 310
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    BOOL            shift and go to state 202
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    INT             shift and go to state 244
    FLOAT           shift and go to state 245
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    STRING          shift and go to state 196
    NOT             shift and go to state 104
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82

    and                            shift and go to state 65
    atributos                      shift and go to state 446
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 239
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 580
    eMat                           shift and go to state 241
    p                              shift and go to state 101
    vecVal                         shift and go to state 306
    vec                            shift and go to state 312
    paren                          shift and go to state 93
    reg                            shift and go to state 314
    valoresTernarioVars            shift and go to state 441
    exp                            shift and go to state 105
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    tCompareEQ                     shift and go to state 80
    varsOps                        shift and go to state 443
    ternarioVars                   shift and go to state 324
    varYVals                       shift and go to state 445
    parenBool                      shift and go to state 91
    expBool                        shift and go to state 581

state 567

    (121) ternarioVars -> expBool ? valoresTernarioBool : . valoresTernarioVars
    (122) valoresTernarioVars -> . reg
    (123) valoresTernarioVars -> . vec
    (124) valoresTernarioVars -> . ternarioVars
    (125) valoresTernarioVars -> . ( ternarioVars )
    (126) valoresTernarioVars -> . atributos
    (127) valoresTernarioVars -> . varsOps
    (128) valoresTernarioVars -> . varYVals
    (129) valoresTernarioVars -> . RES
    (96) reg -> . { campos }
    (58) vec -> . [ elem ]
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (53) funcBool -> . COLINEALES ( valores , valores )
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (254) parenBool -> . ( expBool )
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )

    (               shift and go to state 582
    RES             shift and go to state 304
    {               shift and go to state 35
    [               shift and go to state 22
    ID              shift and go to state 310
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    BOOL            shift and go to state 202
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    INT             shift and go to state 244
    FLOAT           shift and go to state 245
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    STRING          shift and go to state 196
    NOT             shift and go to state 104
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82

    and                            shift and go to state 65
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 239
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 580
    eMat                           shift and go to state 241
    p                              shift and go to state 101
    vecVal                         shift and go to state 306
    vec                            shift and go to state 312
    paren                          shift and go to state 93
    reg                            shift and go to state 314
    valoresTernarioVars            shift and go to state 471
    expBool                        shift and go to state 581
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    tCompareEQ                     shift and go to state 80
    varsOps                        shift and go to state 443
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 324
    varYVals                       shift and go to state 445
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 446

state 568

    (23) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT . com lCerrada
    (14) com -> . COMMENT com
    (15) com -> . empty
    (57) empty -> .

    COMMENT         shift and go to state 123
    IF              reduce using rule 57 (empty -> .)
    DO              reduce using rule 57 (empty -> .)
    RETURN          reduce using rule 57 (empty -> .)
    ;               reduce using rule 57 (empty -> .)
    WHILE           reduce using rule 57 (empty -> .)
    FOR             reduce using rule 57 (empty -> .)
    MENOSMENOS      reduce using rule 57 (empty -> .)
    MASMAS          reduce using rule 57 (empty -> .)
    ID              reduce using rule 57 (empty -> .)
    PRINT           reduce using rule 57 (empty -> .)
    MULTIESCALAR    reduce using rule 57 (empty -> .)
    LENGTH          reduce using rule 57 (empty -> .)
    CAPITALIZAR     reduce using rule 57 (empty -> .)
    COLINEALES      reduce using rule 57 (empty -> .)
    [               reduce using rule 57 (empty -> .)
    {               reduce using rule 57 (empty -> .)

    com                            shift and go to state 589
    empty                          shift and go to state 125

state 569

    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .

    COMMENT         reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    IF              reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    DO              reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    WHILE           reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    FOR             reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    RETURN          reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    ;               reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    MENOSMENOS      reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    MASMAS          reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    ID              reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    PRINT           reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    MULTIESCALAR    reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    LENGTH          reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    CAPITALIZAR     reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    COLINEALES      reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    [               reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    {               reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    }               reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    $end            reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    ELSE            reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)


state 570

    (9) lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .

    COMMENT         reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .)
    IF              reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .)
    DO              reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .)
    WHILE           reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .)
    FOR             reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .)
    RETURN          reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .)
    ;               reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .)
    MENOSMENOS      reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .)
    MASMAS          reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .)
    ID              reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .)
    PRINT           reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .)
    MULTIESCALAR    reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .)
    LENGTH          reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .)
    CAPITALIZAR     reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .)
    COLINEALES      reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .)
    [               reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .)
    {               reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .)
    $end            reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .)
    }               reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .)


state 571

    (18) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { . g }
    (96) reg -> { . campos }
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (97) campos -> . ID : valores , campos
    (98) campos -> . ID : valores
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (57) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (156) varAsig -> . variable MULEQ valores
    (157) varAsig -> . variable DIVEQ valores
    (158) varAsig -> . variable MASEQ valores
    (159) varAsig -> . variable MENOSEQ valores
    (160) varAsig -> . variable = valores
    (161) varAsig -> . ID . ID = valores
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    COMMENT         shift and go to state 10
    ID              shift and go to state 128
    }               reduce using rule 57 (empty -> .)
    IF              shift and go to state 24
    DO              shift and go to state 1
    WHILE           shift and go to state 7
    FOR             shift and go to state 18
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    PRINT           shift and go to state 8
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    [               shift and go to state 22
    {               shift and go to state 35

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    linea                          shift and go to state 37
    vecVal                         shift and go to state 9
    sentencia                      shift and go to state 11
    atributos                      shift and go to state 6
    vec                            shift and go to state 36
    reg                            shift and go to state 13
    empty                          shift and go to state 14
    funcVoid                       shift and go to state 16
    campos                         shift and go to state 119
    func                           shift and go to state 20
    variable                       shift and go to state 21
    varAsig                        shift and go to state 25
    g                              shift and go to state 590
    funcString                     shift and go to state 27
    funcReturn                     shift and go to state 28
    lCerrada                       shift and go to state 30
    lAbierta                       shift and go to state 32
    varsOps                        shift and go to state 15
    loop                           shift and go to state 34

state 572

    (18) lCerrada -> IF ( cosaBooleana ) COMMENT . com lCerrada ELSE { g }
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT . com lCerrada ELSE lCerrada
    (23) lCerrada -> IF ( cosaBooleana ) COMMENT . com lCerrada ELSE COMMENT com lCerrada
    (7) lAbierta -> IF ( cosaBooleana ) COMMENT . com linea
    (9) lAbierta -> IF ( cosaBooleana ) COMMENT . com lCerrada ELSE lAbierta
    (14) com -> . COMMENT com
    (15) com -> . empty
    (57) empty -> .

    COMMENT         shift and go to state 123
    IF              reduce using rule 57 (empty -> .)
    DO              reduce using rule 57 (empty -> .)
    RETURN          reduce using rule 57 (empty -> .)
    ;               reduce using rule 57 (empty -> .)
    WHILE           reduce using rule 57 (empty -> .)
    FOR             reduce using rule 57 (empty -> .)
    MENOSMENOS      reduce using rule 57 (empty -> .)
    MASMAS          reduce using rule 57 (empty -> .)
    ID              reduce using rule 57 (empty -> .)
    PRINT           reduce using rule 57 (empty -> .)
    MULTIESCALAR    reduce using rule 57 (empty -> .)
    LENGTH          reduce using rule 57 (empty -> .)
    CAPITALIZAR     reduce using rule 57 (empty -> .)
    COLINEALES      reduce using rule 57 (empty -> .)
    [               reduce using rule 57 (empty -> .)
    {               reduce using rule 57 (empty -> .)

    empty                          shift and go to state 125
    com                            shift and go to state 591

state 573

    (17) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE { g }
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE lCerrada
    (22) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE COMMENT com lCerrada
    (10) lAbierta -> IF ( cosaBooleana ) lCerrada . ELSE lAbierta
    (5) linea -> lCerrada .

    ELSE            shift and go to state 592
    COMMENT         reduce using rule 5 (linea -> lCerrada .)
    IF              reduce using rule 5 (linea -> lCerrada .)
    DO              reduce using rule 5 (linea -> lCerrada .)
    WHILE           reduce using rule 5 (linea -> lCerrada .)
    FOR             reduce using rule 5 (linea -> lCerrada .)
    RETURN          reduce using rule 5 (linea -> lCerrada .)
    ;               reduce using rule 5 (linea -> lCerrada .)
    MENOSMENOS      reduce using rule 5 (linea -> lCerrada .)
    MASMAS          reduce using rule 5 (linea -> lCerrada .)
    ID              reduce using rule 5 (linea -> lCerrada .)
    PRINT           reduce using rule 5 (linea -> lCerrada .)
    MULTIESCALAR    reduce using rule 5 (linea -> lCerrada .)
    LENGTH          reduce using rule 5 (linea -> lCerrada .)
    CAPITALIZAR     reduce using rule 5 (linea -> lCerrada .)
    COLINEALES      reduce using rule 5 (linea -> lCerrada .)
    [               reduce using rule 5 (linea -> lCerrada .)
    {               reduce using rule 5 (linea -> lCerrada .)
    $end            reduce using rule 5 (linea -> lCerrada .)
    }               reduce using rule 5 (linea -> lCerrada .)


state 574

    (16) lCerrada -> IF ( cosaBooleana ) { . g } ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) { . g } ELSE lCerrada
    (8) lAbierta -> IF ( cosaBooleana ) { . g } ELSE lAbierta
    (11) lAbierta -> IF ( cosaBooleana ) { . g }
    (96) reg -> { . campos }
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (97) campos -> . ID : valores , campos
    (98) campos -> . ID : valores
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (57) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (156) varAsig -> . variable MULEQ valores
    (157) varAsig -> . variable DIVEQ valores
    (158) varAsig -> . variable MASEQ valores
    (159) varAsig -> . variable MENOSEQ valores
    (160) varAsig -> . variable = valores
    (161) varAsig -> . ID . ID = valores
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    COMMENT         shift and go to state 10
    ID              shift and go to state 128
    }               reduce using rule 57 (empty -> .)
    IF              shift and go to state 24
    DO              shift and go to state 1
    WHILE           shift and go to state 7
    FOR             shift and go to state 18
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    PRINT           shift and go to state 8
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    [               shift and go to state 22
    {               shift and go to state 35

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    linea                          shift and go to state 37
    vecVal                         shift and go to state 9
    sentencia                      shift and go to state 11
    atributos                      shift and go to state 6
    vec                            shift and go to state 36
    reg                            shift and go to state 13
    empty                          shift and go to state 14
    funcVoid                       shift and go to state 16
    campos                         shift and go to state 119
    func                           shift and go to state 20
    variable                       shift and go to state 21
    varAsig                        shift and go to state 25
    g                              shift and go to state 593
    funcString                     shift and go to state 27
    funcReturn                     shift and go to state 28
    lCerrada                       shift and go to state 30
    lAbierta                       shift and go to state 32
    varsOps                        shift and go to state 15
    loop                           shift and go to state 34

state 575

    (22) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .

    COMMENT         reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    IF              reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    DO              reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    WHILE           reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    FOR             reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    RETURN          reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    ;               reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    MENOSMENOS      reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    MASMAS          reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    ID              reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    PRINT           reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    MULTIESCALAR    reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    LENGTH          reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    CAPITALIZAR     reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    COLINEALES      reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    [               reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    {               reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    }               reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    $end            reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    ELSE            reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)


state 576

    (17) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .

    COMMENT         reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    IF              reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    DO              reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    WHILE           reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    FOR             reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    RETURN          reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    ;               reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    MENOSMENOS      reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    MASMAS          reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    ID              reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    PRINT           reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    MULTIESCALAR    reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    LENGTH          reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    CAPITALIZAR     reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    COLINEALES      reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    [               reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    {               reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    }               reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    $end            reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    ELSE            reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)


state 577

    (19) lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .

    COMMENT         reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    IF              reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    DO              reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    WHILE           reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    FOR             reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    RETURN          reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    ;               reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    MENOSMENOS      reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    MASMAS          reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    ID              reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    PRINT           reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    MULTIESCALAR    reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    LENGTH          reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    CAPITALIZAR     reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    COLINEALES      reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    [               reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    {               reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    }               reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    $end            reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    ELSE            reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)


state 578

    (8) lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .

    COMMENT         reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    IF              reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    DO              reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    WHILE           reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    FOR             reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    RETURN          reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    ;               reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    MENOSMENOS      reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    MASMAS          reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    ID              reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    PRINT           reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    MULTIESCALAR    reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    LENGTH          reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    CAPITALIZAR     reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    COLINEALES      reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    [               reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    {               reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    $end            reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    }               reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)


state 579

    (16) lCerrada -> IF ( cosaBooleana ) { g } ELSE { . g }
    (96) reg -> { . campos }
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (97) campos -> . ID : valores , campos
    (98) campos -> . ID : valores
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (57) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (156) varAsig -> . variable MULEQ valores
    (157) varAsig -> . variable DIVEQ valores
    (158) varAsig -> . variable MASEQ valores
    (159) varAsig -> . variable MENOSEQ valores
    (160) varAsig -> . variable = valores
    (161) varAsig -> . ID . ID = valores
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    COMMENT         shift and go to state 10
    ID              shift and go to state 128
    }               reduce using rule 57 (empty -> .)
    IF              shift and go to state 24
    DO              shift and go to state 1
    WHILE           shift and go to state 7
    FOR             shift and go to state 18
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    PRINT           shift and go to state 8
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    [               shift and go to state 22
    {               shift and go to state 35

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 9
    sentencia                      shift and go to state 11
    atributos                      shift and go to state 6
    vec                            shift and go to state 36
    reg                            shift and go to state 13
    empty                          shift and go to state 14
    varsOps                        shift and go to state 15
    funcVoid                       shift and go to state 16
    campos                         shift and go to state 119
    func                           shift and go to state 20
    variable                       shift and go to state 21
    varAsig                        shift and go to state 25
    g                              shift and go to state 594
    funcString                     shift and go to state 27
    funcReturn                     shift and go to state 28
    lCerrada                       shift and go to state 30
    lAbierta                       shift and go to state 32
    loop                           shift and go to state 34
    linea                          shift and go to state 37

state 580

    (112) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (212) expBool -> valoresBool . OR and
    (214) expBool -> valoresBool . OR valoresBool
    (217) and -> valoresBool . AND eq
    (219) and -> valoresBool . AND valoresBool

    ?               shift and go to state 595
    OR              shift and go to state 182
    AND             shift and go to state 181


state 581

    (117) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (211) expBool -> expBool . OR and
    (213) expBool -> expBool . OR valoresBool

    ?               shift and go to state 596
    OR              shift and go to state 217


state 582

    (125) valoresTernarioVars -> ( . ternarioVars )
    (209) valoresBool -> ( . ternarioBool )
    (238) tCompareEQ -> ( . ternarioBool )
    (239) tCompareEQ -> ( . ternarioMat )
    (246) tCompare -> ( . ternarioMat )
    (170) valoresMat -> ( . ternarioMat )
    (254) parenBool -> ( . expBool )
    (203) paren -> ( . eMat )
    (204) paren -> ( . valoresMat )
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (53) funcBool -> . COLINEALES ( valores , valores )
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (58) vec -> . [ elem ]
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    STRING          shift and go to state 196
    (               shift and go to state 379
    BOOL            shift and go to state 202
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    COLINEALES      shift and go to state 4
    {               shift and go to state 35
    -               shift and go to state 83
    +               shift and go to state 82
    [               shift and go to state 22
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 189
    not                            shift and go to state 71
    menor                          shift and go to state 72
    valoresMat                     shift and go to state 190
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 597
    eMat                           shift and go to state 192
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 380
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    expBool                        shift and go to state 598
    ternarioBool                   shift and go to state 339
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 195
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 403
    mayor                          shift and go to state 86
    varYVals                       shift and go to state 205
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 206

state 583

    (112) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (139) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (212) expBool -> valoresBool . OR and
    (214) expBool -> valoresBool . OR valoresBool
    (217) and -> valoresBool . AND eq
    (219) and -> valoresBool . AND valoresBool

    ?               shift and go to state 599
    OR              shift and go to state 182
    AND             shift and go to state 181


state 584

    (145) valoresTernarioBool -> expBool .
    (117) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (140) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> expBool . OR and
    (213) expBool -> expBool . OR valoresBool

    ,               reduce using rule 145 (valoresTernarioBool -> expBool .)
    ]               reduce using rule 145 (valoresTernarioBool -> expBool .)
    )               reduce using rule 145 (valoresTernarioBool -> expBool .)
    ;               reduce using rule 145 (valoresTernarioBool -> expBool .)
    :               reduce using rule 145 (valoresTernarioBool -> expBool .)
    }               reduce using rule 145 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 600
    OR              shift and go to state 217


state 585

    (125) valoresTernarioVars -> ( . ternarioVars )
    (144) valoresTernarioBool -> ( . ternarioBool )
    (209) valoresBool -> ( . ternarioBool )
    (238) tCompareEQ -> ( . ternarioBool )
    (239) tCompareEQ -> ( . ternarioMat )
    (246) tCompare -> ( . ternarioMat )
    (170) valoresMat -> ( . ternarioMat )
    (254) parenBool -> ( . expBool )
    (203) paren -> ( . eMat )
    (204) paren -> ( . valoresMat )
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (53) funcBool -> . COLINEALES ( valores , valores )
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (58) vec -> . [ elem ]
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    STRING          shift and go to state 196
    (               shift and go to state 379
    BOOL            shift and go to state 202
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    COLINEALES      shift and go to state 4
    {               shift and go to state 35
    -               shift and go to state 83
    +               shift and go to state 82
    [               shift and go to state 22
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 189
    not                            shift and go to state 71
    menor                          shift and go to state 72
    valoresMat                     shift and go to state 190
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 597
    eMat                           shift and go to state 192
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 380
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    expBool                        shift and go to state 598
    ternarioBool                   shift and go to state 402
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 195
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 403
    mayor                          shift and go to state 86
    varYVals                       shift and go to state 205
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 206

state 586

    (112) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (130) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (212) expBool -> valoresBool . OR and
    (214) expBool -> valoresBool . OR valoresBool
    (217) and -> valoresBool . AND eq
    (219) and -> valoresBool . AND valoresBool

    ?               shift and go to state 601
    OR              shift and go to state 182
    AND             shift and go to state 181


state 587

    (125) valoresTernarioVars -> ( . ternarioVars )
    (138) valoresTernarioMat -> ( . ternarioMat )
    (209) valoresBool -> ( . ternarioBool )
    (170) valoresMat -> ( . ternarioMat )
    (238) tCompareEQ -> ( . ternarioBool )
    (239) tCompareEQ -> ( . ternarioMat )
    (203) paren -> ( . eMat )
    (204) paren -> ( . valoresMat )
    (246) tCompare -> ( . ternarioMat )
    (254) parenBool -> ( . expBool )
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (53) funcBool -> . COLINEALES ( valores , valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (96) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (58) vec -> . [ elem ]
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    STRING          shift and go to state 196
    (               shift and go to state 193
    BOOL            shift and go to state 202
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    ID              shift and go to state 198
    CAPITALIZAR     shift and go to state 29
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    COLINEALES      shift and go to state 4
    {               shift and go to state 35
    -               shift and go to state 83
    +               shift and go to state 82
    [               shift and go to state 22
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 188
    funcInt                        shift and go to state 189
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 190
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 447
    eMat                           shift and go to state 192
    tCompareEQ                     shift and go to state 80
    vecVal                         shift and go to state 76
    ternarioMat                    shift and go to state 401
    vec                            shift and go to state 36
    paren                          shift and go to state 93
    reg                            shift and go to state 13
    exp                            shift and go to state 105
    ternarioBool                   shift and go to state 339
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    variable                       shift and go to state 94
    expBool                        shift and go to state 510
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 195
    ternarioVars                   shift and go to state 403
    varYVals                       shift and go to state 205
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 206

state 588

    (117) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (131) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (211) expBool -> expBool . OR and
    (213) expBool -> expBool . OR valoresBool

    ?               shift and go to state 602
    OR              shift and go to state 217


state 589

    (23) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com . lCerrada
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (156) varAsig -> . variable MULEQ valores
    (157) varAsig -> . variable DIVEQ valores
    (158) varAsig -> . variable MASEQ valores
    (159) varAsig -> . variable MENOSEQ valores
    (160) varAsig -> . variable = valores
    (161) varAsig -> . ID . ID = valores
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    IF              shift and go to state 39
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 7
    FOR             shift and go to state 18
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    ID              shift and go to state 23
    PRINT           shift and go to state 8
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    [               shift and go to state 22
    {               shift and go to state 35

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 9
    sentencia                      shift and go to state 11
    atributos                      shift and go to state 6
    vec                            shift and go to state 36
    reg                            shift and go to state 13
    funcVoid                       shift and go to state 16
    func                           shift and go to state 20
    variable                       shift and go to state 21
    varAsig                        shift and go to state 25
    funcString                     shift and go to state 27
    funcReturn                     shift and go to state 28
    lCerrada                       shift and go to state 603
    varsOps                        shift and go to state 15
    loop                           shift and go to state 42

state 590

    (18) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g . }

    }               shift and go to state 604


state 591

    (18) lCerrada -> IF ( cosaBooleana ) COMMENT com . lCerrada ELSE { g }
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com . lCerrada ELSE lCerrada
    (23) lCerrada -> IF ( cosaBooleana ) COMMENT com . lCerrada ELSE COMMENT com lCerrada
    (7) lAbierta -> IF ( cosaBooleana ) COMMENT com . linea
    (9) lAbierta -> IF ( cosaBooleana ) COMMENT com . lCerrada ELSE lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (156) varAsig -> . variable MULEQ valores
    (157) varAsig -> . variable DIVEQ valores
    (158) varAsig -> . variable MASEQ valores
    (159) varAsig -> . variable MENOSEQ valores
    (160) varAsig -> . variable = valores
    (161) varAsig -> . ID . ID = valores
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    IF              shift and go to state 424
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 7
    FOR             shift and go to state 18
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    ID              shift and go to state 23
    PRINT           shift and go to state 8
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    [               shift and go to state 22
    {               shift and go to state 35

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 9
    sentencia                      shift and go to state 11
    atributos                      shift and go to state 6
    vec                            shift and go to state 36
    reg                            shift and go to state 13
    varsOps                        shift and go to state 15
    funcVoid                       shift and go to state 16
    func                           shift and go to state 20
    variable                       shift and go to state 21
    varAsig                        shift and go to state 25
    funcString                     shift and go to state 27
    funcReturn                     shift and go to state 28
    lCerrada                       shift and go to state 605
    lAbierta                       shift and go to state 32
    linea                          shift and go to state 519
    loop                           shift and go to state 427

state 592

    (17) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . { g }
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . lCerrada
    (22) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . COMMENT com lCerrada
    (10) lAbierta -> IF ( cosaBooleana ) lCerrada ELSE . lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (156) varAsig -> . variable MULEQ valores
    (157) varAsig -> . variable DIVEQ valores
    (158) varAsig -> . variable MASEQ valores
    (159) varAsig -> . variable MENOSEQ valores
    (160) varAsig -> . variable = valores
    (161) varAsig -> . ID . ID = valores
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    {               shift and go to state 525
    COMMENT         shift and go to state 522
    IF              shift and go to state 424
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 7
    FOR             shift and go to state 18
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    ID              shift and go to state 23
    PRINT           shift and go to state 8
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    [               shift and go to state 22

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 9
    sentencia                      shift and go to state 11
    atributos                      shift and go to state 6
    vec                            shift and go to state 36
    reg                            shift and go to state 13
    varsOps                        shift and go to state 15
    funcVoid                       shift and go to state 16
    func                           shift and go to state 20
    variable                       shift and go to state 21
    varAsig                        shift and go to state 25
    funcString                     shift and go to state 27
    funcReturn                     shift and go to state 28
    lCerrada                       shift and go to state 523
    lAbierta                       shift and go to state 524
    loop                           shift and go to state 427

state 593

    (16) lCerrada -> IF ( cosaBooleana ) { g . } ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) { g . } ELSE lCerrada
    (8) lAbierta -> IF ( cosaBooleana ) { g . } ELSE lAbierta
    (11) lAbierta -> IF ( cosaBooleana ) { g . }

    }               shift and go to state 606


state 594

    (16) lCerrada -> IF ( cosaBooleana ) { g } ELSE { g . }

    }               shift and go to state 607


state 595

    (112) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (122) valoresTernarioVars -> . reg
    (123) valoresTernarioVars -> . vec
    (124) valoresTernarioVars -> . ternarioVars
    (125) valoresTernarioVars -> . ( ternarioVars )
    (126) valoresTernarioVars -> . atributos
    (127) valoresTernarioVars -> . varsOps
    (128) valoresTernarioVars -> . varYVals
    (129) valoresTernarioVars -> . RES
    (132) valoresTernarioMat -> . INT
    (133) valoresTernarioMat -> . FLOAT
    (134) valoresTernarioMat -> . funcInt
    (135) valoresTernarioMat -> . STRING
    (136) valoresTernarioMat -> . eMat
    (137) valoresTernarioMat -> . ternarioMat
    (138) valoresTernarioMat -> . ( ternarioMat )
    (141) valoresTernarioBool -> . BOOL
    (142) valoresTernarioBool -> . funcBool
    (143) valoresTernarioBool -> . ternarioBool
    (144) valoresTernarioBool -> . ( ternarioBool )
    (145) valoresTernarioBool -> . expBool
    (96) reg -> . { campos }
    (58) vec -> . [ elem ]
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (53) funcBool -> . COLINEALES ( valores , valores )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    (               shift and go to state 453
    RES             shift and go to state 304
    INT             shift and go to state 319
    FLOAT           shift and go to state 320
    STRING          shift and go to state 316
    BOOL            shift and go to state 321
    {               shift and go to state 35
    [               shift and go to state 22
    ID              shift and go to state 310
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    COLINEALES      shift and go to state 4
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    atributos                      shift and go to state 446
    funcBool                       shift and go to state 303
    funcInt                        shift and go to state 305
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 447
    eMat                           shift and go to state 308
    tCompareEQ                     shift and go to state 80
    valoresTernarioBool            shift and go to state 545
    vecVal                         shift and go to state 306
    ternarioMat                    shift and go to state 311
    vec                            shift and go to state 312
    paren                          shift and go to state 93
    reg                            shift and go to state 314
    valoresTernarioVars            shift and go to state 315
    exp                            shift and go to state 105
    ternarioBool                   shift and go to state 317
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    valoresTernarioMat             shift and go to state 536
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 452
    ternarioVars                   shift and go to state 324
    varYVals                       shift and go to state 454
    parenBool                      shift and go to state 91
    expBool                        shift and go to state 451

state 596

    (117) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (122) valoresTernarioVars -> . reg
    (123) valoresTernarioVars -> . vec
    (124) valoresTernarioVars -> . ternarioVars
    (125) valoresTernarioVars -> . ( ternarioVars )
    (126) valoresTernarioVars -> . atributos
    (127) valoresTernarioVars -> . varsOps
    (128) valoresTernarioVars -> . varYVals
    (129) valoresTernarioVars -> . RES
    (132) valoresTernarioMat -> . INT
    (133) valoresTernarioMat -> . FLOAT
    (134) valoresTernarioMat -> . funcInt
    (135) valoresTernarioMat -> . STRING
    (136) valoresTernarioMat -> . eMat
    (137) valoresTernarioMat -> . ternarioMat
    (138) valoresTernarioMat -> . ( ternarioMat )
    (141) valoresTernarioBool -> . BOOL
    (142) valoresTernarioBool -> . funcBool
    (143) valoresTernarioBool -> . ternarioBool
    (144) valoresTernarioBool -> . ( ternarioBool )
    (145) valoresTernarioBool -> . expBool
    (96) reg -> . { campos }
    (58) vec -> . [ elem ]
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (53) funcBool -> . COLINEALES ( valores , valores )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    (               shift and go to state 453
    RES             shift and go to state 304
    INT             shift and go to state 319
    FLOAT           shift and go to state 320
    STRING          shift and go to state 316
    BOOL            shift and go to state 321
    {               shift and go to state 35
    [               shift and go to state 22
    ID              shift and go to state 310
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    COLINEALES      shift and go to state 4
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 303
    funcInt                        shift and go to state 305
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 447
    eMat                           shift and go to state 308
    tCompareEQ                     shift and go to state 80
    valoresTernarioBool            shift and go to state 550
    vecVal                         shift and go to state 306
    ternarioMat                    shift and go to state 311
    vec                            shift and go to state 312
    paren                          shift and go to state 93
    reg                            shift and go to state 314
    valoresTernarioVars            shift and go to state 352
    expBool                        shift and go to state 451
    ternarioBool                   shift and go to state 317
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    valoresTernarioMat             shift and go to state 538
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 452
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 324
    varYVals                       shift and go to state 454
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 446

state 597

    (112) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (139) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (130) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (212) expBool -> valoresBool . OR and
    (214) expBool -> valoresBool . OR valoresBool
    (217) and -> valoresBool . AND eq
    (219) and -> valoresBool . AND valoresBool

    ?               shift and go to state 608
    OR              shift and go to state 182
    AND             shift and go to state 181


state 598

    (254) parenBool -> ( expBool . )
    (117) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (140) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (131) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (211) expBool -> expBool . OR and
    (213) expBool -> expBool . OR valoresBool

    )               shift and go to state 343
    ?               shift and go to state 609
    OR              shift and go to state 217


state 599

    (112) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (139) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (122) valoresTernarioVars -> . reg
    (123) valoresTernarioVars -> . vec
    (124) valoresTernarioVars -> . ternarioVars
    (125) valoresTernarioVars -> . ( ternarioVars )
    (126) valoresTernarioVars -> . atributos
    (127) valoresTernarioVars -> . varsOps
    (128) valoresTernarioVars -> . varYVals
    (129) valoresTernarioVars -> . RES
    (132) valoresTernarioMat -> . INT
    (133) valoresTernarioMat -> . FLOAT
    (134) valoresTernarioMat -> . funcInt
    (135) valoresTernarioMat -> . STRING
    (136) valoresTernarioMat -> . eMat
    (137) valoresTernarioMat -> . ternarioMat
    (138) valoresTernarioMat -> . ( ternarioMat )
    (141) valoresTernarioBool -> . BOOL
    (142) valoresTernarioBool -> . funcBool
    (143) valoresTernarioBool -> . ternarioBool
    (144) valoresTernarioBool -> . ( ternarioBool )
    (145) valoresTernarioBool -> . expBool
    (96) reg -> . { campos }
    (58) vec -> . [ elem ]
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (53) funcBool -> . COLINEALES ( valores , valores )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    (               shift and go to state 453
    RES             shift and go to state 304
    INT             shift and go to state 319
    FLOAT           shift and go to state 320
    STRING          shift and go to state 316
    BOOL            shift and go to state 321
    {               shift and go to state 35
    [               shift and go to state 22
    ID              shift and go to state 310
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    COLINEALES      shift and go to state 4
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    atributos                      shift and go to state 446
    funcBool                       shift and go to state 303
    funcInt                        shift and go to state 305
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 447
    eMat                           shift and go to state 308
    tCompareEQ                     shift and go to state 80
    valoresTernarioBool            shift and go to state 541
    vecVal                         shift and go to state 306
    ternarioMat                    shift and go to state 311
    vec                            shift and go to state 312
    paren                          shift and go to state 93
    reg                            shift and go to state 314
    valoresTernarioVars            shift and go to state 315
    exp                            shift and go to state 105
    ternarioBool                   shift and go to state 317
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    valoresTernarioMat             shift and go to state 536
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 452
    ternarioVars                   shift and go to state 324
    varYVals                       shift and go to state 454
    parenBool                      shift and go to state 91
    expBool                        shift and go to state 451

state 600

    (117) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (140) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (122) valoresTernarioVars -> . reg
    (123) valoresTernarioVars -> . vec
    (124) valoresTernarioVars -> . ternarioVars
    (125) valoresTernarioVars -> . ( ternarioVars )
    (126) valoresTernarioVars -> . atributos
    (127) valoresTernarioVars -> . varsOps
    (128) valoresTernarioVars -> . varYVals
    (129) valoresTernarioVars -> . RES
    (132) valoresTernarioMat -> . INT
    (133) valoresTernarioMat -> . FLOAT
    (134) valoresTernarioMat -> . funcInt
    (135) valoresTernarioMat -> . STRING
    (136) valoresTernarioMat -> . eMat
    (137) valoresTernarioMat -> . ternarioMat
    (138) valoresTernarioMat -> . ( ternarioMat )
    (141) valoresTernarioBool -> . BOOL
    (142) valoresTernarioBool -> . funcBool
    (143) valoresTernarioBool -> . ternarioBool
    (144) valoresTernarioBool -> . ( ternarioBool )
    (145) valoresTernarioBool -> . expBool
    (96) reg -> . { campos }
    (58) vec -> . [ elem ]
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (53) funcBool -> . COLINEALES ( valores , valores )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    (               shift and go to state 453
    RES             shift and go to state 304
    INT             shift and go to state 319
    FLOAT           shift and go to state 320
    STRING          shift and go to state 316
    BOOL            shift and go to state 321
    {               shift and go to state 35
    [               shift and go to state 22
    ID              shift and go to state 310
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    COLINEALES      shift and go to state 4
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 303
    funcInt                        shift and go to state 305
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 447
    eMat                           shift and go to state 308
    tCompareEQ                     shift and go to state 80
    valoresTernarioBool            shift and go to state 543
    vecVal                         shift and go to state 306
    ternarioMat                    shift and go to state 311
    vec                            shift and go to state 312
    paren                          shift and go to state 93
    reg                            shift and go to state 314
    valoresTernarioVars            shift and go to state 352
    expBool                        shift and go to state 451
    ternarioBool                   shift and go to state 317
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    valoresTernarioMat             shift and go to state 538
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 452
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 324
    varYVals                       shift and go to state 454
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 446

state 601

    (112) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (130) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (122) valoresTernarioVars -> . reg
    (123) valoresTernarioVars -> . vec
    (124) valoresTernarioVars -> . ternarioVars
    (125) valoresTernarioVars -> . ( ternarioVars )
    (126) valoresTernarioVars -> . atributos
    (127) valoresTernarioVars -> . varsOps
    (128) valoresTernarioVars -> . varYVals
    (129) valoresTernarioVars -> . RES
    (132) valoresTernarioMat -> . INT
    (133) valoresTernarioMat -> . FLOAT
    (134) valoresTernarioMat -> . funcInt
    (135) valoresTernarioMat -> . STRING
    (136) valoresTernarioMat -> . eMat
    (137) valoresTernarioMat -> . ternarioMat
    (138) valoresTernarioMat -> . ( ternarioMat )
    (141) valoresTernarioBool -> . BOOL
    (142) valoresTernarioBool -> . funcBool
    (143) valoresTernarioBool -> . ternarioBool
    (144) valoresTernarioBool -> . ( ternarioBool )
    (145) valoresTernarioBool -> . expBool
    (96) reg -> . { campos }
    (58) vec -> . [ elem ]
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (53) funcBool -> . COLINEALES ( valores , valores )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    (               shift and go to state 453
    RES             shift and go to state 304
    INT             shift and go to state 319
    FLOAT           shift and go to state 320
    STRING          shift and go to state 316
    BOOL            shift and go to state 321
    {               shift and go to state 35
    [               shift and go to state 22
    ID              shift and go to state 310
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    COLINEALES      shift and go to state 4
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    atributos                      shift and go to state 446
    funcBool                       shift and go to state 303
    funcInt                        shift and go to state 305
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 447
    eMat                           shift and go to state 308
    tCompareEQ                     shift and go to state 80
    valoresTernarioBool            shift and go to state 545
    vecVal                         shift and go to state 306
    ternarioMat                    shift and go to state 311
    vec                            shift and go to state 312
    paren                          shift and go to state 93
    reg                            shift and go to state 314
    valoresTernarioVars            shift and go to state 315
    exp                            shift and go to state 105
    ternarioBool                   shift and go to state 317
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    valoresTernarioMat             shift and go to state 542
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 452
    ternarioVars                   shift and go to state 324
    varYVals                       shift and go to state 454
    parenBool                      shift and go to state 91
    expBool                        shift and go to state 451

state 602

    (117) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (131) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (122) valoresTernarioVars -> . reg
    (123) valoresTernarioVars -> . vec
    (124) valoresTernarioVars -> . ternarioVars
    (125) valoresTernarioVars -> . ( ternarioVars )
    (126) valoresTernarioVars -> . atributos
    (127) valoresTernarioVars -> . varsOps
    (128) valoresTernarioVars -> . varYVals
    (129) valoresTernarioVars -> . RES
    (132) valoresTernarioMat -> . INT
    (133) valoresTernarioMat -> . FLOAT
    (134) valoresTernarioMat -> . funcInt
    (135) valoresTernarioMat -> . STRING
    (136) valoresTernarioMat -> . eMat
    (137) valoresTernarioMat -> . ternarioMat
    (138) valoresTernarioMat -> . ( ternarioMat )
    (141) valoresTernarioBool -> . BOOL
    (142) valoresTernarioBool -> . funcBool
    (143) valoresTernarioBool -> . ternarioBool
    (144) valoresTernarioBool -> . ( ternarioBool )
    (145) valoresTernarioBool -> . expBool
    (96) reg -> . { campos }
    (58) vec -> . [ elem ]
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (53) funcBool -> . COLINEALES ( valores , valores )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    (               shift and go to state 453
    RES             shift and go to state 304
    INT             shift and go to state 319
    FLOAT           shift and go to state 320
    STRING          shift and go to state 316
    BOOL            shift and go to state 321
    {               shift and go to state 35
    [               shift and go to state 22
    ID              shift and go to state 310
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    COLINEALES      shift and go to state 4
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 303
    funcInt                        shift and go to state 305
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 447
    eMat                           shift and go to state 308
    tCompareEQ                     shift and go to state 80
    valoresTernarioBool            shift and go to state 550
    vecVal                         shift and go to state 306
    ternarioMat                    shift and go to state 311
    vec                            shift and go to state 312
    paren                          shift and go to state 93
    reg                            shift and go to state 314
    valoresTernarioVars            shift and go to state 352
    expBool                        shift and go to state 451
    ternarioBool                   shift and go to state 317
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    valoresTernarioMat             shift and go to state 544
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 452
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 324
    varYVals                       shift and go to state 454
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 446

state 603

    (23) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .

    COMMENT         reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    IF              reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    DO              reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    WHILE           reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    FOR             reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    RETURN          reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    ;               reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    MENOSMENOS      reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    MASMAS          reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    ID              reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    PRINT           reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    MULTIESCALAR    reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    LENGTH          reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    CAPITALIZAR     reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    COLINEALES      reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    [               reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    {               reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    }               reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    $end            reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    ELSE            reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)


state 604

    (18) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .

    COMMENT         reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    IF              reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    DO              reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    WHILE           reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    FOR             reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    RETURN          reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    ;               reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    MENOSMENOS      reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    MASMAS          reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    ID              reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    PRINT           reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    MULTIESCALAR    reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    LENGTH          reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    CAPITALIZAR     reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    COLINEALES      reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    [               reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    {               reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    }               reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    $end            reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    ELSE            reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)


state 605

    (18) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada . ELSE { g }
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada . ELSE lCerrada
    (23) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada . ELSE COMMENT com lCerrada
    (9) lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada . ELSE lAbierta
    (5) linea -> lCerrada .

    ELSE            shift and go to state 610
    COMMENT         reduce using rule 5 (linea -> lCerrada .)
    IF              reduce using rule 5 (linea -> lCerrada .)
    DO              reduce using rule 5 (linea -> lCerrada .)
    WHILE           reduce using rule 5 (linea -> lCerrada .)
    FOR             reduce using rule 5 (linea -> lCerrada .)
    RETURN          reduce using rule 5 (linea -> lCerrada .)
    ;               reduce using rule 5 (linea -> lCerrada .)
    MENOSMENOS      reduce using rule 5 (linea -> lCerrada .)
    MASMAS          reduce using rule 5 (linea -> lCerrada .)
    ID              reduce using rule 5 (linea -> lCerrada .)
    PRINT           reduce using rule 5 (linea -> lCerrada .)
    MULTIESCALAR    reduce using rule 5 (linea -> lCerrada .)
    LENGTH          reduce using rule 5 (linea -> lCerrada .)
    CAPITALIZAR     reduce using rule 5 (linea -> lCerrada .)
    COLINEALES      reduce using rule 5 (linea -> lCerrada .)
    [               reduce using rule 5 (linea -> lCerrada .)
    {               reduce using rule 5 (linea -> lCerrada .)
    $end            reduce using rule 5 (linea -> lCerrada .)
    }               reduce using rule 5 (linea -> lCerrada .)


state 606

    (16) lCerrada -> IF ( cosaBooleana ) { g } . ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) { g } . ELSE lCerrada
    (8) lAbierta -> IF ( cosaBooleana ) { g } . ELSE lAbierta
    (11) lAbierta -> IF ( cosaBooleana ) { g } .

    ELSE            shift and go to state 611
    COMMENT         reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    IF              reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    DO              reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    WHILE           reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    FOR             reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    RETURN          reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    ;               reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MENOSMENOS      reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MASMAS          reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    ID              reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    PRINT           reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MULTIESCALAR    reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    LENGTH          reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    CAPITALIZAR     reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    COLINEALES      reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    [               reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    {               reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    $end            reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    }               reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)


state 607

    (16) lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .

    COMMENT         reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    IF              reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    DO              reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    WHILE           reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    FOR             reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    RETURN          reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    ;               reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    MENOSMENOS      reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    MASMAS          reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    ID              reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    PRINT           reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    MULTIESCALAR    reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    LENGTH          reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    CAPITALIZAR     reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    COLINEALES      reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    [               reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    {               reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    }               reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    $end            reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    ELSE            reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)


state 608

    (112) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (139) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (130) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (122) valoresTernarioVars -> . reg
    (123) valoresTernarioVars -> . vec
    (124) valoresTernarioVars -> . ternarioVars
    (125) valoresTernarioVars -> . ( ternarioVars )
    (126) valoresTernarioVars -> . atributos
    (127) valoresTernarioVars -> . varsOps
    (128) valoresTernarioVars -> . varYVals
    (129) valoresTernarioVars -> . RES
    (132) valoresTernarioMat -> . INT
    (133) valoresTernarioMat -> . FLOAT
    (134) valoresTernarioMat -> . funcInt
    (135) valoresTernarioMat -> . STRING
    (136) valoresTernarioMat -> . eMat
    (137) valoresTernarioMat -> . ternarioMat
    (138) valoresTernarioMat -> . ( ternarioMat )
    (141) valoresTernarioBool -> . BOOL
    (142) valoresTernarioBool -> . funcBool
    (143) valoresTernarioBool -> . ternarioBool
    (144) valoresTernarioBool -> . ( ternarioBool )
    (145) valoresTernarioBool -> . expBool
    (96) reg -> . { campos }
    (58) vec -> . [ elem ]
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (53) funcBool -> . COLINEALES ( valores , valores )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    (               shift and go to state 453
    RES             shift and go to state 304
    INT             shift and go to state 319
    FLOAT           shift and go to state 320
    STRING          shift and go to state 316
    BOOL            shift and go to state 321
    {               shift and go to state 35
    [               shift and go to state 22
    ID              shift and go to state 310
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    COLINEALES      shift and go to state 4
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    atributos                      shift and go to state 446
    funcBool                       shift and go to state 303
    funcInt                        shift and go to state 305
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 447
    eMat                           shift and go to state 308
    tCompareEQ                     shift and go to state 80
    valoresTernarioBool            shift and go to state 541
    vecVal                         shift and go to state 306
    ternarioMat                    shift and go to state 311
    vec                            shift and go to state 312
    paren                          shift and go to state 93
    reg                            shift and go to state 314
    valoresTernarioVars            shift and go to state 315
    exp                            shift and go to state 105
    ternarioBool                   shift and go to state 317
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    valoresTernarioMat             shift and go to state 542
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 452
    ternarioVars                   shift and go to state 324
    varYVals                       shift and go to state 454
    parenBool                      shift and go to state 91
    expBool                        shift and go to state 451

state 609

    (117) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (140) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (131) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (122) valoresTernarioVars -> . reg
    (123) valoresTernarioVars -> . vec
    (124) valoresTernarioVars -> . ternarioVars
    (125) valoresTernarioVars -> . ( ternarioVars )
    (126) valoresTernarioVars -> . atributos
    (127) valoresTernarioVars -> . varsOps
    (128) valoresTernarioVars -> . varYVals
    (129) valoresTernarioVars -> . RES
    (132) valoresTernarioMat -> . INT
    (133) valoresTernarioMat -> . FLOAT
    (134) valoresTernarioMat -> . funcInt
    (135) valoresTernarioMat -> . STRING
    (136) valoresTernarioMat -> . eMat
    (137) valoresTernarioMat -> . ternarioMat
    (138) valoresTernarioMat -> . ( ternarioMat )
    (141) valoresTernarioBool -> . BOOL
    (142) valoresTernarioBool -> . funcBool
    (143) valoresTernarioBool -> . ternarioBool
    (144) valoresTernarioBool -> . ( ternarioBool )
    (145) valoresTernarioBool -> . expBool
    (96) reg -> . { campos }
    (58) vec -> . [ elem ]
    (112) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (113) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (114) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (115) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (116) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (117) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (118) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (119) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (120) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (121) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (146) varYVals -> . ID
    (147) varYVals -> . vecVal
    (148) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (171) eMat -> . eMat + p
    (172) eMat -> . valoresMat + p
    (173) eMat -> . eMat + valoresMat
    (174) eMat -> . valoresMat + valoresMat
    (175) eMat -> . p
    (176) eMat -> . eMat - p
    (177) eMat -> . valoresMat - p
    (178) eMat -> . eMat - valoresMat
    (179) eMat -> . valoresMat - valoresMat
    (130) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (53) funcBool -> . COLINEALES ( valores , valores )
    (139) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (140) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (211) expBool -> . expBool OR and
    (212) expBool -> . valoresBool OR and
    (213) expBool -> . expBool OR valoresBool
    (214) expBool -> . valoresBool OR valoresBool
    (215) expBool -> . and
    (205) valoresBool -> . BOOL
    (206) valoresBool -> . funcBool
    (207) valoresBool -> . varYVals
    (208) valoresBool -> . varsOps
    (209) valoresBool -> . ( ternarioBool )
    (210) valoresBool -> .
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (162) valoresMat -> . INT
    (163) valoresMat -> . FLOAT
    (164) valoresMat -> . funcInt
    (165) valoresMat -> . atributos
    (166) valoresMat -> . funcString
    (167) valoresMat -> . STRING
    (168) valoresMat -> . varYVals
    (169) valoresMat -> . varsOps
    (170) valoresMat -> . ( ternarioMat )
    (180) p -> . p * exp
    (181) p -> . p / exp
    (182) p -> . p % exp
    (183) p -> . valoresMat * exp
    (184) p -> . valoresMat / exp
    (185) p -> . valoresMat % exp
    (186) p -> . p * valoresMat
    (187) p -> . p / valoresMat
    (188) p -> . p % valoresMat
    (189) p -> . valoresMat * valoresMat
    (190) p -> . valoresMat / valoresMat
    (191) p -> . valoresMat % valoresMat
    (192) p -> . exp
    (216) and -> . and AND eq
    (217) and -> . valoresBool AND eq
    (218) and -> . and AND valoresBool
    (219) and -> . valoresBool AND valoresBool
    (220) and -> . eq
    (52) funcString -> . CAPITALIZAR ( valores )
    (193) exp -> . exp ^ iSing
    (194) exp -> . valoresMat ^ iSing
    (195) exp -> . exp ^ valoresMat
    (196) exp -> . valoresMat ^ valoresMat
    (197) exp -> . iSing
    (221) eq -> . eq EQEQ mayor
    (222) eq -> . eq DISTINTO mayor
    (223) eq -> . tCompareEQ EQEQ mayor
    (224) eq -> . tCompareEQ DISTINTO mayor
    (225) eq -> . eq EQEQ tCompareEQ
    (226) eq -> . eq DISTINTO tCompareEQ
    (227) eq -> . tCompareEQ EQEQ tCompareEQ
    (228) eq -> . tCompareEQ DISTINTO tCompareEQ
    (229) eq -> . mayor
    (198) iSing -> . - paren
    (199) iSing -> . + paren
    (200) iSing -> . - valoresMat
    (201) iSing -> . + valoresMat
    (202) iSing -> . paren
    (230) tCompareEQ -> . BOOL
    (231) tCompareEQ -> . funcBool
    (232) tCompareEQ -> . varYVals
    (233) tCompareEQ -> . varsOps
    (234) tCompareEQ -> . INT
    (235) tCompareEQ -> . FLOAT
    (236) tCompareEQ -> . funcInt
    (237) tCompareEQ -> . eMat
    (238) tCompareEQ -> . ( ternarioBool )
    (239) tCompareEQ -> . ( ternarioMat )
    (247) mayor -> . tCompare > tCompare
    (248) mayor -> . menor
    (203) paren -> . ( eMat )
    (204) paren -> . ( valoresMat )
    (240) tCompare -> . eMat
    (241) tCompare -> . varsOps
    (242) tCompare -> . varYVals
    (243) tCompare -> . INT
    (244) tCompare -> . funcInt
    (245) tCompare -> . FLOAT
    (246) tCompare -> . ( ternarioMat )
    (249) menor -> . tCompare < tCompare
    (250) menor -> . not
    (251) not -> . NOT not
    (252) not -> . NOT valoresBool
    (253) not -> . parenBool
    (254) parenBool -> . ( expBool )

    (               shift and go to state 453
    RES             shift and go to state 304
    INT             shift and go to state 319
    FLOAT           shift and go to state 320
    STRING          shift and go to state 316
    BOOL            shift and go to state 321
    {               shift and go to state 35
    [               shift and go to state 22
    ID              shift and go to state 310
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    COLINEALES      shift and go to state 4
    ?               reduce using rule 210 (valoresBool -> .)
    OR              reduce using rule 210 (valoresBool -> .)
    AND             reduce using rule 210 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 104

    and                            shift and go to state 65
    funcBool                       shift and go to state 303
    funcInt                        shift and go to state 305
    not                            shift and go to state 71
    menor                          shift and go to state 72
    mayor                          shift and go to state 86
    valoresMat                     shift and go to state 74
    eq                             shift and go to state 75
    valoresBool                    shift and go to state 447
    eMat                           shift and go to state 308
    tCompareEQ                     shift and go to state 80
    valoresTernarioBool            shift and go to state 543
    vecVal                         shift and go to state 306
    ternarioMat                    shift and go to state 311
    vec                            shift and go to state 312
    paren                          shift and go to state 93
    reg                            shift and go to state 314
    valoresTernarioVars            shift and go to state 352
    expBool                        shift and go to state 451
    ternarioBool                   shift and go to state 317
    iSing                          shift and go to state 90
    tCompare                       shift and go to state 92
    valoresTernarioMat             shift and go to state 544
    variable                       shift and go to state 94
    funcString                     shift and go to state 199
    p                              shift and go to state 101
    varsOps                        shift and go to state 452
    exp                            shift and go to state 105
    ternarioVars                   shift and go to state 324
    varYVals                       shift and go to state 454
    parenBool                      shift and go to state 91
    atributos                      shift and go to state 446

state 610

    (18) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE . { g }
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE . lCerrada
    (23) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE . COMMENT com lCerrada
    (9) lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE . lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (156) varAsig -> . variable MULEQ valores
    (157) varAsig -> . variable DIVEQ valores
    (158) varAsig -> . variable MASEQ valores
    (159) varAsig -> . variable MENOSEQ valores
    (160) varAsig -> . variable = valores
    (161) varAsig -> . ID . ID = valores
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    {               shift and go to state 571
    COMMENT         shift and go to state 568
    IF              shift and go to state 424
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 7
    FOR             shift and go to state 18
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    ID              shift and go to state 23
    PRINT           shift and go to state 8
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    [               shift and go to state 22

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 9
    sentencia                      shift and go to state 11
    atributos                      shift and go to state 6
    vec                            shift and go to state 36
    reg                            shift and go to state 13
    varsOps                        shift and go to state 15
    funcVoid                       shift and go to state 16
    func                           shift and go to state 20
    variable                       shift and go to state 21
    varAsig                        shift and go to state 25
    funcString                     shift and go to state 27
    funcReturn                     shift and go to state 28
    lCerrada                       shift and go to state 569
    lAbierta                       shift and go to state 570
    loop                           shift and go to state 427

state 611

    (16) lCerrada -> IF ( cosaBooleana ) { g } ELSE . { g }
    (19) lCerrada -> IF ( cosaBooleana ) { g } ELSE . lCerrada
    (8) lAbierta -> IF ( cosaBooleana ) { g } ELSE . lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (149) varsOps -> . MENOSMENOS variable
    (150) varsOps -> . MASMAS variable
    (151) varsOps -> . variable MASMAS
    (152) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (156) varAsig -> . variable MULEQ valores
    (157) varAsig -> . variable DIVEQ valores
    (158) varAsig -> . variable MASEQ valores
    (159) varAsig -> . variable MENOSEQ valores
    (160) varAsig -> . variable = valores
    (161) varAsig -> . ID . ID = valores
    (153) variable -> . ID
    (154) variable -> . vecVal
    (155) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . atributos [ expresion ]
    (65) vecVal -> . ID [ INT ]
    (66) vecVal -> . vec [ INT ]
    (67) vecVal -> . vecVal [ INT ]
    (68) vecVal -> . atributos [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]
    (99) atributos -> . ID . valoresCampos
    (100) atributos -> . reg . valoresCampos
    (96) reg -> . { campos }

    {               shift and go to state 579
    IF              shift and go to state 424
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 7
    FOR             shift and go to state 18
    MENOSMENOS      shift and go to state 17
    MASMAS          shift and go to state 33
    ID              shift and go to state 23
    PRINT           shift and go to state 8
    MULTIESCALAR    shift and go to state 31
    LENGTH          shift and go to state 19
    CAPITALIZAR     shift and go to state 29
    COLINEALES      shift and go to state 4
    [               shift and go to state 22

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 9
    sentencia                      shift and go to state 11
    atributos                      shift and go to state 6
    vec                            shift and go to state 36
    reg                            shift and go to state 13
    varsOps                        shift and go to state 15
    funcVoid                       shift and go to state 16
    func                           shift and go to state 20
    variable                       shift and go to state 21
    varAsig                        shift and go to state 25
    funcString                     shift and go to state 27
    funcReturn                     shift and go to state 28
    lCerrada                       shift and go to state 577
    lAbierta                       shift and go to state 578
    loop                           shift and go to state 427
