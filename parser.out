Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> g
Rule 1     g -> linea g
Rule 2     g -> COMMENT g
Rule 3     g -> empty
Rule 4     linea -> lAbierta
Rule 5     linea -> lCerrada
Rule 6     lAbierta -> IF ( cosaBooleana ) linea
Rule 7     lAbierta -> IF ( cosaBooleana ) COMMENT com linea
Rule 8     lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta
Rule 9     lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
Rule 10    lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta
Rule 11    lAbierta -> IF ( cosaBooleana ) { g }
Rule 12    lAbierta -> loop lAbierta
Rule 13    lCerrada -> sentencia
Rule 14    com -> COMMENT com
Rule 15    com -> empty
Rule 16    lCerrada -> IF ( cosaBooleana ) { g } ELSE { g }
Rule 17    lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g }
Rule 18    lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
Rule 19    lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada
Rule 20    lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada
Rule 21    lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
Rule 22    lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
Rule 23    lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
Rule 24    lCerrada -> loop { g }
Rule 25    lCerrada -> loop lCerrada
Rule 26    lCerrada -> loop COMMENT com lCerrada
Rule 27    lCerrada -> DO { g } WHILE ( valores ) ;
Rule 28    lCerrada -> DO lCerrada WHILE ( valores ) ;
Rule 29    lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ;
Rule 30    sentencia -> varsOps ;
Rule 31    sentencia -> func ;
Rule 32    sentencia -> varAsig ;
Rule 33    sentencia -> RETURN ;
Rule 34    sentencia -> ;
Rule 35    loop -> WHILE ( valores )
Rule 36    loop -> FOR ( primParam ; valores ; tercerParam )
Rule 37    primParam -> varAsig
Rule 38    primParam -> empty
Rule 39    tercerParam -> varsOps
Rule 40    tercerParam -> varAsig
Rule 41    tercerParam -> func
Rule 42    tercerParam -> empty
Rule 43    cosaBooleana -> expBool
Rule 44    cosaBooleana -> valoresBool
Rule 45    func -> funcReturn
Rule 46    func -> funcVoid
Rule 47    funcReturn -> funcInt
Rule 48    funcReturn -> funcString
Rule 49    funcReturn -> funcBool
Rule 50    funcInt -> MULTIESCALAR ( valores , valores param )
Rule 51    funcInt -> LENGTH ( valores )
Rule 52    funcString -> CAPITALIZAR ( valores )
Rule 53    funcBool -> COLINEALES ( valores , valores )
Rule 54    funcVoid -> PRINT ( valores )
Rule 55    param -> , valores
Rule 56    param -> empty
Rule 57    empty -> <empty>
Rule 58    vec -> [ elem ]
Rule 59    elem -> valores , elem
Rule 60    elem -> valores
Rule 61    vecVal -> ID [ expresion ]
Rule 62    vecVal -> vec [ expresion ]
Rule 63    vecVal -> vecVal [ expresion ]
Rule 64    vecVal -> ID [ INT ]
Rule 65    vecVal -> vec [ INT ]
Rule 66    vecVal -> vecVal [ INT ]
Rule 67    expresion -> eMat
Rule 68    expresion -> expBool
Rule 69    expresion -> funcReturn
Rule 70    expresion -> reg
Rule 71    expresion -> FLOAT
Rule 72    expresion -> STRING
Rule 73    expresion -> BOOL
Rule 74    expresion -> varYVals
Rule 75    expresion -> varsOps
Rule 76    expresion -> vec
Rule 77    expresion -> ternario
Rule 78    expresion -> atributos
Rule 79    expresion -> RES
Rule 80    valores -> varYVals
Rule 81    valores -> varsOps
Rule 82    valores -> eMat
Rule 83    valores -> expBool
Rule 84    valores -> funcReturn
Rule 85    valores -> reg
Rule 86    valores -> INT
Rule 87    valores -> FLOAT
Rule 88    valores -> STRING
Rule 89    valores -> BOOL
Rule 90    valores -> ternario
Rule 91    valores -> atributos
Rule 92    valores -> vec
Rule 93    valores -> RES
Rule 94    reg -> { campos }
Rule 95    campos -> ID : valores , campos
Rule 96    campos -> ID : valores
Rule 97    atributos -> ID . valoresCampos
Rule 98    atributos -> reg . valoresCampos
Rule 99    valoresCampos -> varYVals
Rule 100   valoresCampos -> END
Rule 101   valoresCampos -> BEGIN
Rule 102   ternario -> ternarioMat
Rule 103   ternario -> ternarioBool
Rule 104   ternario -> ( ternarioMat )
Rule 105   ternario -> ( ternarioBool )
Rule 106   ternario -> ternarioVars
Rule 107   ternario -> ( ternarioVars )
Rule 108   ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars
Rule 109   ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat
Rule 110   ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars
Rule 111   ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool
Rule 112   ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars
Rule 113   ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars
Rule 114   ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat
Rule 115   ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars
Rule 116   ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool
Rule 117   ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars
Rule 118   valoresTernarioVars -> reg
Rule 119   valoresTernarioVars -> vec
Rule 120   valoresTernarioVars -> ternarioVars
Rule 121   valoresTernarioVars -> ( ternarioVars )
Rule 122   valoresTernarioVars -> atributos
Rule 123   valoresTernarioVars -> varsOps
Rule 124   valoresTernarioVars -> varYVals
Rule 125   valoresTernarioVars -> RES
Rule 126   ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat
Rule 127   ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat
Rule 128   valoresTernarioMat -> INT
Rule 129   valoresTernarioMat -> FLOAT
Rule 130   valoresTernarioMat -> funcInt
Rule 131   valoresTernarioMat -> STRING
Rule 132   valoresTernarioMat -> eMat
Rule 133   valoresTernarioMat -> ternarioMat
Rule 134   valoresTernarioMat -> ( ternarioMat )
Rule 135   ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool
Rule 136   ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool
Rule 137   valoresTernarioBool -> BOOL
Rule 138   valoresTernarioBool -> funcBool
Rule 139   valoresTernarioBool -> ternarioBool
Rule 140   valoresTernarioBool -> ( ternarioBool )
Rule 141   valoresTernarioBool -> expBool
Rule 142   varYVals -> ID
Rule 143   varYVals -> vecVal
Rule 144   varYVals -> vecVal . varYVals
Rule 145   varsOps -> MENOSMENOS variable
Rule 146   varsOps -> MASMAS variable
Rule 147   varsOps -> variable MASMAS
Rule 148   varsOps -> variable MENOSMENOS
Rule 149   variable -> ID
Rule 150   variable -> vecVal
Rule 151   variable -> vecVal . varYVals
Rule 152   varAsig -> variable MULEQ valores
Rule 153   varAsig -> variable DIVEQ valores
Rule 154   varAsig -> variable MASEQ valores
Rule 155   varAsig -> variable MENOSEQ valores
Rule 156   varAsig -> variable = valores
Rule 157   varAsig -> ID . ID = valores
Rule 158   valoresMat -> INT
Rule 159   valoresMat -> FLOAT
Rule 160   valoresMat -> funcInt
Rule 161   valoresMat -> atributos
Rule 162   valoresMat -> funcString
Rule 163   valoresMat -> STRING
Rule 164   valoresMat -> varYVals
Rule 165   valoresMat -> varsOps
Rule 166   valoresMat -> ( ternarioMat )
Rule 167   eMat -> eMat + p
Rule 168   eMat -> valoresMat + p
Rule 169   eMat -> eMat + valoresMat
Rule 170   eMat -> valoresMat + valoresMat
Rule 171   eMat -> p
Rule 172   eMat -> eMat - p
Rule 173   eMat -> valoresMat - p
Rule 174   eMat -> eMat - valoresMat
Rule 175   eMat -> valoresMat - valoresMat
Rule 176   p -> p * exp
Rule 177   p -> p / exp
Rule 178   p -> p % exp
Rule 179   p -> valoresMat * exp
Rule 180   p -> valoresMat / exp
Rule 181   p -> valoresMat % exp
Rule 182   p -> p * valoresMat
Rule 183   p -> p / valoresMat
Rule 184   p -> p % valoresMat
Rule 185   p -> valoresMat * valoresMat
Rule 186   p -> valoresMat / valoresMat
Rule 187   p -> valoresMat % valoresMat
Rule 188   p -> exp
Rule 189   exp -> exp ^ iSing
Rule 190   exp -> valoresMat ^ iSing
Rule 191   exp -> exp ^ valoresMat
Rule 192   exp -> valoresMat ^ valoresMat
Rule 193   exp -> iSing
Rule 194   iSing -> - paren
Rule 195   iSing -> + paren
Rule 196   iSing -> - valoresMat
Rule 197   iSing -> + valoresMat
Rule 198   iSing -> paren
Rule 199   paren -> ( eMat )
Rule 200   paren -> ( valoresMat )
Rule 201   valoresBool -> BOOL
Rule 202   valoresBool -> funcBool
Rule 203   valoresBool -> varYVals
Rule 204   valoresBool -> varsOps
Rule 205   valoresBool -> ( ternarioBool )
Rule 206   valoresBool -> <empty>
Rule 207   expBool -> expBool OR and
Rule 208   expBool -> valoresBool OR and
Rule 209   expBool -> expBool OR valoresBool
Rule 210   expBool -> valoresBool OR valoresBool
Rule 211   expBool -> and
Rule 212   and -> and AND eq
Rule 213   and -> valoresBool AND eq
Rule 214   and -> and AND valoresBool
Rule 215   and -> valoresBool AND valoresBool
Rule 216   and -> eq
Rule 217   eq -> eq EQEQ mayor
Rule 218   eq -> eq DISTINTO mayor
Rule 219   eq -> tCompareEQ EQEQ mayor
Rule 220   eq -> tCompareEQ DISTINTO mayor
Rule 221   eq -> eq EQEQ tCompareEQ
Rule 222   eq -> eq DISTINTO tCompareEQ
Rule 223   eq -> tCompareEQ EQEQ tCompareEQ
Rule 224   eq -> tCompareEQ DISTINTO tCompareEQ
Rule 225   eq -> mayor
Rule 226   tCompareEQ -> BOOL
Rule 227   tCompareEQ -> funcBool
Rule 228   tCompareEQ -> varYVals
Rule 229   tCompareEQ -> varsOps
Rule 230   tCompareEQ -> INT
Rule 231   tCompareEQ -> FLOAT
Rule 232   tCompareEQ -> funcInt
Rule 233   tCompareEQ -> eMat
Rule 234   tCompareEQ -> ( ternarioBool )
Rule 235   tCompareEQ -> ( ternarioMat )
Rule 236   tCompare -> eMat
Rule 237   tCompare -> varsOps
Rule 238   tCompare -> varYVals
Rule 239   tCompare -> INT
Rule 240   tCompare -> funcInt
Rule 241   tCompare -> FLOAT
Rule 242   tCompare -> ( ternarioMat )
Rule 243   mayor -> tCompare > tCompare
Rule 244   mayor -> menor
Rule 245   menor -> tCompare < tCompare
Rule 246   menor -> not
Rule 247   not -> NOT not
Rule 248   not -> NOT valoresBool
Rule 249   not -> parenBool
Rule 250   parenBool -> ( expBool )

Terminals, with rules where they appear

%                    : 178 181 184 187
(                    : 6 7 8 9 10 11 16 17 18 19 20 21 22 23 27 28 29 35 36 50 51 52 53 54 104 105 107 121 134 140 166 199 200 205 234 235 242 250
)                    : 6 7 8 9 10 11 16 17 18 19 20 21 22 23 27 28 29 35 36 50 51 52 53 54 104 105 107 121 134 140 166 199 200 205 234 235 242 250
*                    : 176 179 182 185
+                    : 167 168 169 170 195 197
,                    : 50 53 55 59 95
-                    : 172 173 174 175 194 196
.                    : 97 98 144 151 157
/                    : 177 180 183 186
:                    : 95 96 108 109 110 111 112 113 114 115 116 117 126 127 135 136
;                    : 27 28 29 30 31 32 33 34 36 36
<                    : 245
=                    : 156 157
>                    : 243
?                    : 108 109 110 111 112 113 114 115 116 117 126 127 135 136
AND                  : 212 213 214 215
BEGIN                : 101
BOOL                 : 73 89 137 201 226
CAPITALIZAR          : 52
COLINEALES           : 53
COMMENT              : 2 7 9 14 18 21 22 23 23 26 29
DISTINTO             : 218 220 222 224
DIVEQ                : 153
DO                   : 27 28 29
ELSE                 : 8 9 10 16 17 18 19 20 21 22 23
END                  : 100
EQEQ                 : 217 219 221 223
FLOAT                : 71 87 129 159 231 241
FOR                  : 36
ID                   : 61 64 95 96 97 142 149 157 157
IF                   : 6 7 8 9 10 11 16 17 18 19 20 21 22 23
INT                  : 64 65 66 86 128 158 230 239
LENGTH               : 51
MASEQ                : 154
MASMAS               : 146 147
MENOSEQ              : 155
MENOSMENOS           : 145 148
MULEQ                : 152
MULTIESCALAR         : 50
NOT                  : 247 248
OR                   : 207 208 209 210
PRINT                : 54
RES                  : 79 93 125
RETURN               : 33
STRING               : 72 88 131 163
WHILE                : 27 28 29 35
[                    : 58 61 62 63 64 65 66
]                    : 58 61 62 63 64 65 66
^                    : 189 190 191 192
error                : 
{                    : 8 11 16 16 17 18 19 24 27 94
}                    : 8 11 16 16 17 18 19 24 27 94

Nonterminals, with rules where they appear

and                  : 207 208 211 212 214
atributos            : 78 91 122 161
campos               : 94 95
com                  : 7 9 14 18 21 22 23 23 26 29
cosaBooleana         : 6 7 8 9 10 11 16 17 18 19 20 21 22 23
eMat                 : 67 82 132 167 169 172 174 199 233 236
elem                 : 58 59
empty                : 3 15 38 42 56
eq                   : 212 213 216 217 218 221 222
exp                  : 176 177 178 179 180 181 188 189 191
expBool              : 43 68 83 113 114 115 116 117 127 136 141 207 209 250
expresion            : 61 62 63
func                 : 31 41
funcBool             : 49 138 202 227
funcInt              : 47 130 160 232 240
funcReturn           : 45 69 84
funcString           : 48 162
funcVoid             : 46
g                    : 1 2 8 11 16 16 17 18 19 24 27 0
iSing                : 189 190 193
lAbierta             : 4 8 9 10 12
lCerrada             : 5 9 10 17 18 19 20 20 21 21 22 22 23 23 25 26 28 29
linea                : 1 6 7
loop                 : 12 24 25 26
mayor                : 217 218 219 220 225
menor                : 244
not                  : 246 247
p                    : 167 168 171 172 173 176 177 178 182 183 184
param                : 50
paren                : 194 195 198
parenBool            : 249
primParam            : 36
reg                  : 70 85 98 118
sentencia            : 13
tCompare             : 243 243 245 245
tCompareEQ           : 219 220 221 222 223 223 224 224
tercerParam          : 36
ternario             : 77 90
ternarioBool         : 103 105 139 140 205 234
ternarioMat          : 102 104 133 134 166 235 242
ternarioVars         : 106 107 120 121
valores              : 27 28 29 35 36 50 50 51 52 53 53 54 55 59 60 95 96 152 153 154 155 156 157
valoresBool          : 44 108 109 110 111 112 126 135 208 209 210 210 213 214 215 215 248
valoresCampos        : 97 98
valoresMat           : 168 169 170 170 173 174 175 175 179 180 181 182 183 184 185 185 186 186 187 187 190 191 192 192 196 197 200
valoresTernarioBool  : 111 112 116 117 135 135 136 136
valoresTernarioMat   : 109 110 114 115 126 126 127 127
valoresTernarioVars  : 108 108 109 110 111 112 113 113 114 115 116 117
varAsig              : 32 37 40
varYVals             : 74 80 99 124 144 151 164 203 228 238
variable             : 145 146 147 148 152 153 154 155 156
varsOps              : 30 39 75 81 123 165 204 229 237
vec                  : 62 65 76 92 119
vecVal               : 63 66 143 144 150 151

Parsing method: LALR

state 0

    (0) S' -> . g
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (57) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (152) varAsig -> . variable MULEQ valores
    (153) varAsig -> . variable DIVEQ valores
    (154) varAsig -> . variable MASEQ valores
    (155) varAsig -> . variable MENOSEQ valores
    (156) varAsig -> . variable = valores
    (157) varAsig -> . ID . ID = valores
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    $end            reduce using rule 57 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 12
    varsOps                        shift and go to state 13
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 24
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 30
    loop                           shift and go to state 32
    linea                          shift and go to state 34

state 1

    (27) lCerrada -> DO . { g } WHILE ( valores ) ;
    (28) lCerrada -> DO . lCerrada WHILE ( valores ) ;
    (29) lCerrada -> DO . COMMENT com lCerrada WHILE ( valores ) ;
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (152) varAsig -> . variable MULEQ valores
    (153) varAsig -> . variable DIVEQ valores
    (154) varAsig -> . variable MASEQ valores
    (155) varAsig -> . variable MENOSEQ valores
    (156) varAsig -> . variable = valores
    (157) varAsig -> . ID . ID = valores
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]

    {               shift and go to state 38
    COMMENT         shift and go to state 35
    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 37
    varsOps                        shift and go to state 13
    loop                           shift and go to state 39

state 2

    (33) sentencia -> RETURN . ;

    ;               shift and go to state 40


state 3

    (49) funcReturn -> funcBool .

    ;               reduce using rule 49 (funcReturn -> funcBool .)
    )               reduce using rule 49 (funcReturn -> funcBool .)


state 4

    (53) funcBool -> COLINEALES . ( valores , valores )

    (               shift and go to state 41


state 5

    (47) funcReturn -> funcInt .

    ;               reduce using rule 47 (funcReturn -> funcInt .)
    )               reduce using rule 47 (funcReturn -> funcInt .)


state 6

    (35) loop -> WHILE . ( valores )

    (               shift and go to state 42


state 7

    (54) funcVoid -> PRINT . ( valores )

    (               shift and go to state 43


state 8

    (150) variable -> vecVal .
    (151) variable -> vecVal . . varYVals
    (63) vecVal -> vecVal . [ expresion ]
    (66) vecVal -> vecVal . [ INT ]

    MASMAS          reduce using rule 150 (variable -> vecVal .)
    MENOSMENOS      reduce using rule 150 (variable -> vecVal .)
    MULEQ           reduce using rule 150 (variable -> vecVal .)
    DIVEQ           reduce using rule 150 (variable -> vecVal .)
    MASEQ           reduce using rule 150 (variable -> vecVal .)
    MENOSEQ         reduce using rule 150 (variable -> vecVal .)
    =               reduce using rule 150 (variable -> vecVal .)
    ;               reduce using rule 150 (variable -> vecVal .)
    ,               reduce using rule 150 (variable -> vecVal .)
    ]               reduce using rule 150 (variable -> vecVal .)
    +               reduce using rule 150 (variable -> vecVal .)
    -               reduce using rule 150 (variable -> vecVal .)
    *               reduce using rule 150 (variable -> vecVal .)
    /               reduce using rule 150 (variable -> vecVal .)
    %               reduce using rule 150 (variable -> vecVal .)
    ^               reduce using rule 150 (variable -> vecVal .)
    OR              reduce using rule 150 (variable -> vecVal .)
    AND             reduce using rule 150 (variable -> vecVal .)
    ?               reduce using rule 150 (variable -> vecVal .)
    EQEQ            reduce using rule 150 (variable -> vecVal .)
    DISTINTO        reduce using rule 150 (variable -> vecVal .)
    >               reduce using rule 150 (variable -> vecVal .)
    <               reduce using rule 150 (variable -> vecVal .)
    )               reduce using rule 150 (variable -> vecVal .)
    :               reduce using rule 150 (variable -> vecVal .)
    }               reduce using rule 150 (variable -> vecVal .)
    .               shift and go to state 44
    [               shift and go to state 45


state 9

    (2) g -> COMMENT . g
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (57) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (152) varAsig -> . variable MULEQ valores
    (153) varAsig -> . variable DIVEQ valores
    (154) varAsig -> . variable MASEQ valores
    (155) varAsig -> . variable MENOSEQ valores
    (156) varAsig -> . variable = valores
    (157) varAsig -> . ID . ID = valores
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    $end            reduce using rule 57 (empty -> .)
    }               reduce using rule 57 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 12
    varsOps                        shift and go to state 13
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 46
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 30
    loop                           shift and go to state 32
    linea                          shift and go to state 34

state 10

    (13) lCerrada -> sentencia .

    WHILE           reduce using rule 13 (lCerrada -> sentencia .)
    COMMENT         reduce using rule 13 (lCerrada -> sentencia .)
    IF              reduce using rule 13 (lCerrada -> sentencia .)
    DO              reduce using rule 13 (lCerrada -> sentencia .)
    FOR             reduce using rule 13 (lCerrada -> sentencia .)
    RETURN          reduce using rule 13 (lCerrada -> sentencia .)
    ;               reduce using rule 13 (lCerrada -> sentencia .)
    MENOSMENOS      reduce using rule 13 (lCerrada -> sentencia .)
    MASMAS          reduce using rule 13 (lCerrada -> sentencia .)
    ID              reduce using rule 13 (lCerrada -> sentencia .)
    PRINT           reduce using rule 13 (lCerrada -> sentencia .)
    MULTIESCALAR    reduce using rule 13 (lCerrada -> sentencia .)
    LENGTH          reduce using rule 13 (lCerrada -> sentencia .)
    CAPITALIZAR     reduce using rule 13 (lCerrada -> sentencia .)
    COLINEALES      reduce using rule 13 (lCerrada -> sentencia .)
    [               reduce using rule 13 (lCerrada -> sentencia .)
    $end            reduce using rule 13 (lCerrada -> sentencia .)
    }               reduce using rule 13 (lCerrada -> sentencia .)
    ELSE            reduce using rule 13 (lCerrada -> sentencia .)


state 11

    (34) sentencia -> ; .

    ELSE            reduce using rule 34 (sentencia -> ; .)
    COMMENT         reduce using rule 34 (sentencia -> ; .)
    IF              reduce using rule 34 (sentencia -> ; .)
    DO              reduce using rule 34 (sentencia -> ; .)
    WHILE           reduce using rule 34 (sentencia -> ; .)
    FOR             reduce using rule 34 (sentencia -> ; .)
    RETURN          reduce using rule 34 (sentencia -> ; .)
    ;               reduce using rule 34 (sentencia -> ; .)
    MENOSMENOS      reduce using rule 34 (sentencia -> ; .)
    MASMAS          reduce using rule 34 (sentencia -> ; .)
    ID              reduce using rule 34 (sentencia -> ; .)
    PRINT           reduce using rule 34 (sentencia -> ; .)
    MULTIESCALAR    reduce using rule 34 (sentencia -> ; .)
    LENGTH          reduce using rule 34 (sentencia -> ; .)
    CAPITALIZAR     reduce using rule 34 (sentencia -> ; .)
    COLINEALES      reduce using rule 34 (sentencia -> ; .)
    [               reduce using rule 34 (sentencia -> ; .)
    $end            reduce using rule 34 (sentencia -> ; .)
    }               reduce using rule 34 (sentencia -> ; .)


state 12

    (3) g -> empty .

    }               reduce using rule 3 (g -> empty .)
    $end            reduce using rule 3 (g -> empty .)


state 13

    (30) sentencia -> varsOps . ;

    ;               shift and go to state 47


state 14

    (46) func -> funcVoid .

    ;               reduce using rule 46 (func -> funcVoid .)
    )               reduce using rule 46 (func -> funcVoid .)


state 15

    (145) varsOps -> MENOSMENOS . variable
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (58) vec -> . [ elem ]

    ID              shift and go to state 49
    [               shift and go to state 20

    vec                            shift and go to state 33
    variable                       shift and go to state 48
    vecVal                         shift and go to state 8

state 16

    (36) loop -> FOR . ( primParam ; valores ; tercerParam )

    (               shift and go to state 50


state 17

    (51) funcInt -> LENGTH . ( valores )

    (               shift and go to state 51


state 18

    (31) sentencia -> func . ;

    ;               shift and go to state 52


state 19

    (147) varsOps -> variable . MASMAS
    (148) varsOps -> variable . MENOSMENOS
    (152) varAsig -> variable . MULEQ valores
    (153) varAsig -> variable . DIVEQ valores
    (154) varAsig -> variable . MASEQ valores
    (155) varAsig -> variable . MENOSEQ valores
    (156) varAsig -> variable . = valores

    MASMAS          shift and go to state 56
    MENOSMENOS      shift and go to state 54
    MULEQ           shift and go to state 57
    DIVEQ           shift and go to state 59
    MASEQ           shift and go to state 55
    MENOSEQ         shift and go to state 53
    =               shift and go to state 58


state 20

    (58) vec -> [ . elem ]
    (59) elem -> . valores , elem
    (60) elem -> . valores
    (80) valores -> . varYVals
    (81) valores -> . varsOps
    (82) valores -> . eMat
    (83) valores -> . expBool
    (84) valores -> . funcReturn
    (85) valores -> . reg
    (86) valores -> . INT
    (87) valores -> . FLOAT
    (88) valores -> . STRING
    (89) valores -> . BOOL
    (90) valores -> . ternario
    (91) valores -> . atributos
    (92) valores -> . vec
    (93) valores -> . RES
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (94) reg -> . { campos }
    (102) ternario -> . ternarioMat
    (103) ternario -> . ternarioBool
    (104) ternario -> . ( ternarioMat )
    (105) ternario -> . ( ternarioBool )
    (106) ternario -> . ternarioVars
    (107) ternario -> . ( ternarioVars )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    ?               reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    valores                        shift and go to state 65
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    elem                           shift and go to state 95
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 21

    (157) varAsig -> ID . . ID = valores
    (149) variable -> ID .
    (61) vecVal -> ID . [ expresion ]
    (64) vecVal -> ID . [ INT ]

    .               shift and go to state 104
    MASMAS          reduce using rule 149 (variable -> ID .)
    MENOSMENOS      reduce using rule 149 (variable -> ID .)
    MULEQ           reduce using rule 149 (variable -> ID .)
    DIVEQ           reduce using rule 149 (variable -> ID .)
    MASEQ           reduce using rule 149 (variable -> ID .)
    MENOSEQ         reduce using rule 149 (variable -> ID .)
    =               reduce using rule 149 (variable -> ID .)
    [               shift and go to state 105


state 22

    (6) lAbierta -> IF . ( cosaBooleana ) linea
    (7) lAbierta -> IF . ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> IF . ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> IF . ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> IF . ( cosaBooleana ) { g }
    (16) lCerrada -> IF . ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> IF . ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada

    (               shift and go to state 106


state 23

    (32) sentencia -> varAsig . ;

    ;               shift and go to state 107


state 24

    (0) S' -> g .



state 25

    (48) funcReturn -> funcString .

    ;               reduce using rule 48 (funcReturn -> funcString .)
    )               reduce using rule 48 (funcReturn -> funcString .)


state 26

    (45) func -> funcReturn .

    ;               reduce using rule 45 (func -> funcReturn .)
    )               reduce using rule 45 (func -> funcReturn .)


state 27

    (52) funcString -> CAPITALIZAR . ( valores )

    (               shift and go to state 108


state 28

    (5) linea -> lCerrada .

    COMMENT         reduce using rule 5 (linea -> lCerrada .)
    IF              reduce using rule 5 (linea -> lCerrada .)
    DO              reduce using rule 5 (linea -> lCerrada .)
    WHILE           reduce using rule 5 (linea -> lCerrada .)
    FOR             reduce using rule 5 (linea -> lCerrada .)
    RETURN          reduce using rule 5 (linea -> lCerrada .)
    ;               reduce using rule 5 (linea -> lCerrada .)
    MENOSMENOS      reduce using rule 5 (linea -> lCerrada .)
    MASMAS          reduce using rule 5 (linea -> lCerrada .)
    ID              reduce using rule 5 (linea -> lCerrada .)
    PRINT           reduce using rule 5 (linea -> lCerrada .)
    MULTIESCALAR    reduce using rule 5 (linea -> lCerrada .)
    LENGTH          reduce using rule 5 (linea -> lCerrada .)
    CAPITALIZAR     reduce using rule 5 (linea -> lCerrada .)
    COLINEALES      reduce using rule 5 (linea -> lCerrada .)
    [               reduce using rule 5 (linea -> lCerrada .)
    }               reduce using rule 5 (linea -> lCerrada .)
    $end            reduce using rule 5 (linea -> lCerrada .)


state 29

    (50) funcInt -> MULTIESCALAR . ( valores , valores param )

    (               shift and go to state 109


state 30

    (4) linea -> lAbierta .

    COMMENT         reduce using rule 4 (linea -> lAbierta .)
    IF              reduce using rule 4 (linea -> lAbierta .)
    DO              reduce using rule 4 (linea -> lAbierta .)
    WHILE           reduce using rule 4 (linea -> lAbierta .)
    FOR             reduce using rule 4 (linea -> lAbierta .)
    RETURN          reduce using rule 4 (linea -> lAbierta .)
    ;               reduce using rule 4 (linea -> lAbierta .)
    MENOSMENOS      reduce using rule 4 (linea -> lAbierta .)
    MASMAS          reduce using rule 4 (linea -> lAbierta .)
    ID              reduce using rule 4 (linea -> lAbierta .)
    PRINT           reduce using rule 4 (linea -> lAbierta .)
    MULTIESCALAR    reduce using rule 4 (linea -> lAbierta .)
    LENGTH          reduce using rule 4 (linea -> lAbierta .)
    CAPITALIZAR     reduce using rule 4 (linea -> lAbierta .)
    COLINEALES      reduce using rule 4 (linea -> lAbierta .)
    [               reduce using rule 4 (linea -> lAbierta .)
    }               reduce using rule 4 (linea -> lAbierta .)
    $end            reduce using rule 4 (linea -> lAbierta .)


state 31

    (146) varsOps -> MASMAS . variable
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (58) vec -> . [ elem ]

    ID              shift and go to state 49
    [               shift and go to state 20

    vec                            shift and go to state 33
    variable                       shift and go to state 110
    vecVal                         shift and go to state 8

state 32

    (12) lAbierta -> loop . lAbierta
    (24) lCerrada -> loop . { g }
    (25) lCerrada -> loop . lCerrada
    (26) lCerrada -> loop . COMMENT com lCerrada
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (152) varAsig -> . variable MULEQ valores
    (153) varAsig -> . variable DIVEQ valores
    (154) varAsig -> . variable MASEQ valores
    (155) varAsig -> . variable MENOSEQ valores
    (156) varAsig -> . variable = valores
    (157) varAsig -> . ID . ID = valores
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]

    {               shift and go to state 114
    COMMENT         shift and go to state 111
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    loop                           shift and go to state 32
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 112
    lAbierta                       shift and go to state 113
    varsOps                        shift and go to state 13

state 33

    (62) vecVal -> vec . [ expresion ]
    (65) vecVal -> vec . [ INT ]

    [               shift and go to state 115


state 34

    (1) g -> linea . g
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (57) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (152) varAsig -> . variable MULEQ valores
    (153) varAsig -> . variable DIVEQ valores
    (154) varAsig -> . variable MASEQ valores
    (155) varAsig -> . variable MENOSEQ valores
    (156) varAsig -> . variable = valores
    (157) varAsig -> . ID . ID = valores
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    $end            reduce using rule 57 (empty -> .)
    }               reduce using rule 57 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 12
    varsOps                        shift and go to state 13
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 116
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 30
    loop                           shift and go to state 32
    linea                          shift and go to state 34

state 35

    (29) lCerrada -> DO COMMENT . com lCerrada WHILE ( valores ) ;
    (14) com -> . COMMENT com
    (15) com -> . empty
    (57) empty -> .

    COMMENT         shift and go to state 117
    IF              reduce using rule 57 (empty -> .)
    DO              reduce using rule 57 (empty -> .)
    RETURN          reduce using rule 57 (empty -> .)
    ;               reduce using rule 57 (empty -> .)
    WHILE           reduce using rule 57 (empty -> .)
    FOR             reduce using rule 57 (empty -> .)
    MENOSMENOS      reduce using rule 57 (empty -> .)
    MASMAS          reduce using rule 57 (empty -> .)
    ID              reduce using rule 57 (empty -> .)
    PRINT           reduce using rule 57 (empty -> .)
    MULTIESCALAR    reduce using rule 57 (empty -> .)
    LENGTH          reduce using rule 57 (empty -> .)
    CAPITALIZAR     reduce using rule 57 (empty -> .)
    COLINEALES      reduce using rule 57 (empty -> .)
    [               reduce using rule 57 (empty -> .)

    com                            shift and go to state 118
    empty                          shift and go to state 119

state 36

    (16) lCerrada -> IF . ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> IF . ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada

    (               shift and go to state 120


state 37

    (28) lCerrada -> DO lCerrada . WHILE ( valores ) ;

    WHILE           shift and go to state 121


state 38

    (27) lCerrada -> DO { . g } WHILE ( valores ) ;
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (57) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (152) varAsig -> . variable MULEQ valores
    (153) varAsig -> . variable DIVEQ valores
    (154) varAsig -> . variable MASEQ valores
    (155) varAsig -> . variable MENOSEQ valores
    (156) varAsig -> . variable = valores
    (157) varAsig -> . ID . ID = valores
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 57 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    linea                          shift and go to state 34
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 12
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 122
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 30
    varsOps                        shift and go to state 13
    loop                           shift and go to state 32

state 39

    (24) lCerrada -> loop . { g }
    (25) lCerrada -> loop . lCerrada
    (26) lCerrada -> loop . COMMENT com lCerrada
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (152) varAsig -> . variable MULEQ valores
    (153) varAsig -> . variable DIVEQ valores
    (154) varAsig -> . variable MASEQ valores
    (155) varAsig -> . variable MENOSEQ valores
    (156) varAsig -> . variable = valores
    (157) varAsig -> . ID . ID = valores
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]

    {               shift and go to state 114
    COMMENT         shift and go to state 111
    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 112
    varsOps                        shift and go to state 13
    loop                           shift and go to state 39

state 40

    (33) sentencia -> RETURN ; .

    ELSE            reduce using rule 33 (sentencia -> RETURN ; .)
    COMMENT         reduce using rule 33 (sentencia -> RETURN ; .)
    IF              reduce using rule 33 (sentencia -> RETURN ; .)
    DO              reduce using rule 33 (sentencia -> RETURN ; .)
    WHILE           reduce using rule 33 (sentencia -> RETURN ; .)
    FOR             reduce using rule 33 (sentencia -> RETURN ; .)
    RETURN          reduce using rule 33 (sentencia -> RETURN ; .)
    ;               reduce using rule 33 (sentencia -> RETURN ; .)
    MENOSMENOS      reduce using rule 33 (sentencia -> RETURN ; .)
    MASMAS          reduce using rule 33 (sentencia -> RETURN ; .)
    ID              reduce using rule 33 (sentencia -> RETURN ; .)
    PRINT           reduce using rule 33 (sentencia -> RETURN ; .)
    MULTIESCALAR    reduce using rule 33 (sentencia -> RETURN ; .)
    LENGTH          reduce using rule 33 (sentencia -> RETURN ; .)
    CAPITALIZAR     reduce using rule 33 (sentencia -> RETURN ; .)
    COLINEALES      reduce using rule 33 (sentencia -> RETURN ; .)
    [               reduce using rule 33 (sentencia -> RETURN ; .)
    $end            reduce using rule 33 (sentencia -> RETURN ; .)
    }               reduce using rule 33 (sentencia -> RETURN ; .)


state 41

    (53) funcBool -> COLINEALES ( . valores , valores )
    (80) valores -> . varYVals
    (81) valores -> . varsOps
    (82) valores -> . eMat
    (83) valores -> . expBool
    (84) valores -> . funcReturn
    (85) valores -> . reg
    (86) valores -> . INT
    (87) valores -> . FLOAT
    (88) valores -> . STRING
    (89) valores -> . BOOL
    (90) valores -> . ternario
    (91) valores -> . atributos
    (92) valores -> . vec
    (93) valores -> . RES
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (94) reg -> . { campos }
    (102) ternario -> . ternarioMat
    (103) ternario -> . ternarioBool
    (104) ternario -> . ( ternarioMat )
    (105) ternario -> . ( ternarioBool )
    (106) ternario -> . ternarioVars
    (107) ternario -> . ( ternarioVars )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    ?               reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 123
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 42

    (35) loop -> WHILE ( . valores )
    (80) valores -> . varYVals
    (81) valores -> . varsOps
    (82) valores -> . eMat
    (83) valores -> . expBool
    (84) valores -> . funcReturn
    (85) valores -> . reg
    (86) valores -> . INT
    (87) valores -> . FLOAT
    (88) valores -> . STRING
    (89) valores -> . BOOL
    (90) valores -> . ternario
    (91) valores -> . atributos
    (92) valores -> . vec
    (93) valores -> . RES
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (94) reg -> . { campos }
    (102) ternario -> . ternarioMat
    (103) ternario -> . ternarioBool
    (104) ternario -> . ( ternarioMat )
    (105) ternario -> . ( ternarioBool )
    (106) ternario -> . ternarioVars
    (107) ternario -> . ( ternarioVars )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    ?               reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 124
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 43

    (54) funcVoid -> PRINT ( . valores )
    (80) valores -> . varYVals
    (81) valores -> . varsOps
    (82) valores -> . eMat
    (83) valores -> . expBool
    (84) valores -> . funcReturn
    (85) valores -> . reg
    (86) valores -> . INT
    (87) valores -> . FLOAT
    (88) valores -> . STRING
    (89) valores -> . BOOL
    (90) valores -> . ternario
    (91) valores -> . atributos
    (92) valores -> . vec
    (93) valores -> . RES
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (94) reg -> . { campos }
    (102) ternario -> . ternarioMat
    (103) ternario -> . ternarioBool
    (104) ternario -> . ( ternarioMat )
    (105) ternario -> . ( ternarioBool )
    (106) ternario -> . ternarioVars
    (107) ternario -> . ( ternarioVars )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    ?               reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 125
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 44

    (151) variable -> vecVal . . varYVals
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (58) vec -> . [ elem ]

    ID              shift and go to state 128
    [               shift and go to state 20

    varYVals                       shift and go to state 127
    vecVal                         shift and go to state 126
    vec                            shift and go to state 33

state 45

    (63) vecVal -> vecVal [ . expresion ]
    (66) vecVal -> vecVal [ . INT ]
    (67) expresion -> . eMat
    (68) expresion -> . expBool
    (69) expresion -> . funcReturn
    (70) expresion -> . reg
    (71) expresion -> . FLOAT
    (72) expresion -> . STRING
    (73) expresion -> . BOOL
    (74) expresion -> . varYVals
    (75) expresion -> . varsOps
    (76) expresion -> . vec
    (77) expresion -> . ternario
    (78) expresion -> . atributos
    (79) expresion -> . RES
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (94) reg -> . { campos }
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (58) vec -> . [ elem ]
    (102) ternario -> . ternarioMat
    (103) ternario -> . ternarioBool
    (104) ternario -> . ( ternarioMat )
    (105) ternario -> . ( ternarioBool )
    (106) ternario -> . ternarioVars
    (107) ternario -> . ( ternarioVars )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 137
    FLOAT           shift and go to state 139
    STRING          shift and go to state 131
    BOOL            shift and go to state 140
    RES             shift and go to state 130
    {               shift and go to state 101
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 76
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    ?               reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 129
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 132
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 133
    paren                          shift and go to state 88
    reg                            shift and go to state 134
    expBool                        shift and go to state 135
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    expresion                      shift and go to state 136
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 138
    p                              shift and go to state 96
    varsOps                        shift and go to state 141
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 142
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 143

state 46

    (2) g -> COMMENT g .

    }               reduce using rule 2 (g -> COMMENT g .)
    $end            reduce using rule 2 (g -> COMMENT g .)


state 47

    (30) sentencia -> varsOps ; .

    ELSE            reduce using rule 30 (sentencia -> varsOps ; .)
    COMMENT         reduce using rule 30 (sentencia -> varsOps ; .)
    IF              reduce using rule 30 (sentencia -> varsOps ; .)
    DO              reduce using rule 30 (sentencia -> varsOps ; .)
    WHILE           reduce using rule 30 (sentencia -> varsOps ; .)
    FOR             reduce using rule 30 (sentencia -> varsOps ; .)
    RETURN          reduce using rule 30 (sentencia -> varsOps ; .)
    ;               reduce using rule 30 (sentencia -> varsOps ; .)
    MENOSMENOS      reduce using rule 30 (sentencia -> varsOps ; .)
    MASMAS          reduce using rule 30 (sentencia -> varsOps ; .)
    ID              reduce using rule 30 (sentencia -> varsOps ; .)
    PRINT           reduce using rule 30 (sentencia -> varsOps ; .)
    MULTIESCALAR    reduce using rule 30 (sentencia -> varsOps ; .)
    LENGTH          reduce using rule 30 (sentencia -> varsOps ; .)
    CAPITALIZAR     reduce using rule 30 (sentencia -> varsOps ; .)
    COLINEALES      reduce using rule 30 (sentencia -> varsOps ; .)
    [               reduce using rule 30 (sentencia -> varsOps ; .)
    $end            reduce using rule 30 (sentencia -> varsOps ; .)
    }               reduce using rule 30 (sentencia -> varsOps ; .)


state 48

    (145) varsOps -> MENOSMENOS variable .

    :               reduce using rule 145 (varsOps -> MENOSMENOS variable .)
    ?               reduce using rule 145 (varsOps -> MENOSMENOS variable .)
    OR              reduce using rule 145 (varsOps -> MENOSMENOS variable .)
    AND             reduce using rule 145 (varsOps -> MENOSMENOS variable .)
    +               reduce using rule 145 (varsOps -> MENOSMENOS variable .)
    -               reduce using rule 145 (varsOps -> MENOSMENOS variable .)
    *               reduce using rule 145 (varsOps -> MENOSMENOS variable .)
    /               reduce using rule 145 (varsOps -> MENOSMENOS variable .)
    %               reduce using rule 145 (varsOps -> MENOSMENOS variable .)
    ^               reduce using rule 145 (varsOps -> MENOSMENOS variable .)
    EQEQ            reduce using rule 145 (varsOps -> MENOSMENOS variable .)
    DISTINTO        reduce using rule 145 (varsOps -> MENOSMENOS variable .)
    >               reduce using rule 145 (varsOps -> MENOSMENOS variable .)
    <               reduce using rule 145 (varsOps -> MENOSMENOS variable .)
    ;               reduce using rule 145 (varsOps -> MENOSMENOS variable .)
    ,               reduce using rule 145 (varsOps -> MENOSMENOS variable .)
    )               reduce using rule 145 (varsOps -> MENOSMENOS variable .)
    ]               reduce using rule 145 (varsOps -> MENOSMENOS variable .)
    }               reduce using rule 145 (varsOps -> MENOSMENOS variable .)


state 49

    (149) variable -> ID .
    (61) vecVal -> ID . [ expresion ]
    (64) vecVal -> ID . [ INT ]

    ;               reduce using rule 149 (variable -> ID .)
    ,               reduce using rule 149 (variable -> ID .)
    ]               reduce using rule 149 (variable -> ID .)
    +               reduce using rule 149 (variable -> ID .)
    -               reduce using rule 149 (variable -> ID .)
    *               reduce using rule 149 (variable -> ID .)
    /               reduce using rule 149 (variable -> ID .)
    %               reduce using rule 149 (variable -> ID .)
    ^               reduce using rule 149 (variable -> ID .)
    OR              reduce using rule 149 (variable -> ID .)
    AND             reduce using rule 149 (variable -> ID .)
    ?               reduce using rule 149 (variable -> ID .)
    EQEQ            reduce using rule 149 (variable -> ID .)
    DISTINTO        reduce using rule 149 (variable -> ID .)
    >               reduce using rule 149 (variable -> ID .)
    <               reduce using rule 149 (variable -> ID .)
    )               reduce using rule 149 (variable -> ID .)
    :               reduce using rule 149 (variable -> ID .)
    }               reduce using rule 149 (variable -> ID .)
    [               shift and go to state 105


state 50

    (36) loop -> FOR ( . primParam ; valores ; tercerParam )
    (37) primParam -> . varAsig
    (38) primParam -> . empty
    (152) varAsig -> . variable MULEQ valores
    (153) varAsig -> . variable DIVEQ valores
    (154) varAsig -> . variable MASEQ valores
    (155) varAsig -> . variable MENOSEQ valores
    (156) varAsig -> . variable = valores
    (157) varAsig -> . ID . ID = valores
    (57) empty -> .
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (58) vec -> . [ elem ]

    ID              shift and go to state 21
    ;               reduce using rule 57 (empty -> .)
    [               shift and go to state 20

    varAsig                        shift and go to state 146
    primParam                      shift and go to state 144
    vec                            shift and go to state 33
    variable                       shift and go to state 145
    vecVal                         shift and go to state 8
    empty                          shift and go to state 147

state 51

    (51) funcInt -> LENGTH ( . valores )
    (80) valores -> . varYVals
    (81) valores -> . varsOps
    (82) valores -> . eMat
    (83) valores -> . expBool
    (84) valores -> . funcReturn
    (85) valores -> . reg
    (86) valores -> . INT
    (87) valores -> . FLOAT
    (88) valores -> . STRING
    (89) valores -> . BOOL
    (90) valores -> . ternario
    (91) valores -> . atributos
    (92) valores -> . vec
    (93) valores -> . RES
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (94) reg -> . { campos }
    (102) ternario -> . ternarioMat
    (103) ternario -> . ternarioBool
    (104) ternario -> . ( ternarioMat )
    (105) ternario -> . ( ternarioBool )
    (106) ternario -> . ternarioVars
    (107) ternario -> . ( ternarioVars )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    ?               reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 148
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 52

    (31) sentencia -> func ; .

    ELSE            reduce using rule 31 (sentencia -> func ; .)
    COMMENT         reduce using rule 31 (sentencia -> func ; .)
    IF              reduce using rule 31 (sentencia -> func ; .)
    DO              reduce using rule 31 (sentencia -> func ; .)
    WHILE           reduce using rule 31 (sentencia -> func ; .)
    FOR             reduce using rule 31 (sentencia -> func ; .)
    RETURN          reduce using rule 31 (sentencia -> func ; .)
    ;               reduce using rule 31 (sentencia -> func ; .)
    MENOSMENOS      reduce using rule 31 (sentencia -> func ; .)
    MASMAS          reduce using rule 31 (sentencia -> func ; .)
    ID              reduce using rule 31 (sentencia -> func ; .)
    PRINT           reduce using rule 31 (sentencia -> func ; .)
    MULTIESCALAR    reduce using rule 31 (sentencia -> func ; .)
    LENGTH          reduce using rule 31 (sentencia -> func ; .)
    CAPITALIZAR     reduce using rule 31 (sentencia -> func ; .)
    COLINEALES      reduce using rule 31 (sentencia -> func ; .)
    [               reduce using rule 31 (sentencia -> func ; .)
    $end            reduce using rule 31 (sentencia -> func ; .)
    }               reduce using rule 31 (sentencia -> func ; .)


state 53

    (155) varAsig -> variable MENOSEQ . valores
    (80) valores -> . varYVals
    (81) valores -> . varsOps
    (82) valores -> . eMat
    (83) valores -> . expBool
    (84) valores -> . funcReturn
    (85) valores -> . reg
    (86) valores -> . INT
    (87) valores -> . FLOAT
    (88) valores -> . STRING
    (89) valores -> . BOOL
    (90) valores -> . ternario
    (91) valores -> . atributos
    (92) valores -> . vec
    (93) valores -> . RES
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (94) reg -> . { campos }
    (102) ternario -> . ternarioMat
    (103) ternario -> . ternarioBool
    (104) ternario -> . ( ternarioMat )
    (105) ternario -> . ( ternarioBool )
    (106) ternario -> . ternarioVars
    (107) ternario -> . ( ternarioVars )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    ?               reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 149
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 54

    (148) varsOps -> variable MENOSMENOS .

    :               reduce using rule 148 (varsOps -> variable MENOSMENOS .)
    ?               reduce using rule 148 (varsOps -> variable MENOSMENOS .)
    OR              reduce using rule 148 (varsOps -> variable MENOSMENOS .)
    AND             reduce using rule 148 (varsOps -> variable MENOSMENOS .)
    +               reduce using rule 148 (varsOps -> variable MENOSMENOS .)
    -               reduce using rule 148 (varsOps -> variable MENOSMENOS .)
    *               reduce using rule 148 (varsOps -> variable MENOSMENOS .)
    /               reduce using rule 148 (varsOps -> variable MENOSMENOS .)
    %               reduce using rule 148 (varsOps -> variable MENOSMENOS .)
    ^               reduce using rule 148 (varsOps -> variable MENOSMENOS .)
    EQEQ            reduce using rule 148 (varsOps -> variable MENOSMENOS .)
    DISTINTO        reduce using rule 148 (varsOps -> variable MENOSMENOS .)
    >               reduce using rule 148 (varsOps -> variable MENOSMENOS .)
    <               reduce using rule 148 (varsOps -> variable MENOSMENOS .)
    ;               reduce using rule 148 (varsOps -> variable MENOSMENOS .)
    ,               reduce using rule 148 (varsOps -> variable MENOSMENOS .)
    )               reduce using rule 148 (varsOps -> variable MENOSMENOS .)
    ]               reduce using rule 148 (varsOps -> variable MENOSMENOS .)
    }               reduce using rule 148 (varsOps -> variable MENOSMENOS .)


state 55

    (154) varAsig -> variable MASEQ . valores
    (80) valores -> . varYVals
    (81) valores -> . varsOps
    (82) valores -> . eMat
    (83) valores -> . expBool
    (84) valores -> . funcReturn
    (85) valores -> . reg
    (86) valores -> . INT
    (87) valores -> . FLOAT
    (88) valores -> . STRING
    (89) valores -> . BOOL
    (90) valores -> . ternario
    (91) valores -> . atributos
    (92) valores -> . vec
    (93) valores -> . RES
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (94) reg -> . { campos }
    (102) ternario -> . ternarioMat
    (103) ternario -> . ternarioBool
    (104) ternario -> . ( ternarioMat )
    (105) ternario -> . ( ternarioBool )
    (106) ternario -> . ternarioVars
    (107) ternario -> . ( ternarioVars )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    ?               reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 150
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 56

    (147) varsOps -> variable MASMAS .

    :               reduce using rule 147 (varsOps -> variable MASMAS .)
    ?               reduce using rule 147 (varsOps -> variable MASMAS .)
    OR              reduce using rule 147 (varsOps -> variable MASMAS .)
    AND             reduce using rule 147 (varsOps -> variable MASMAS .)
    +               reduce using rule 147 (varsOps -> variable MASMAS .)
    -               reduce using rule 147 (varsOps -> variable MASMAS .)
    *               reduce using rule 147 (varsOps -> variable MASMAS .)
    /               reduce using rule 147 (varsOps -> variable MASMAS .)
    %               reduce using rule 147 (varsOps -> variable MASMAS .)
    ^               reduce using rule 147 (varsOps -> variable MASMAS .)
    EQEQ            reduce using rule 147 (varsOps -> variable MASMAS .)
    DISTINTO        reduce using rule 147 (varsOps -> variable MASMAS .)
    >               reduce using rule 147 (varsOps -> variable MASMAS .)
    <               reduce using rule 147 (varsOps -> variable MASMAS .)
    ;               reduce using rule 147 (varsOps -> variable MASMAS .)
    ,               reduce using rule 147 (varsOps -> variable MASMAS .)
    )               reduce using rule 147 (varsOps -> variable MASMAS .)
    ]               reduce using rule 147 (varsOps -> variable MASMAS .)
    }               reduce using rule 147 (varsOps -> variable MASMAS .)


state 57

    (152) varAsig -> variable MULEQ . valores
    (80) valores -> . varYVals
    (81) valores -> . varsOps
    (82) valores -> . eMat
    (83) valores -> . expBool
    (84) valores -> . funcReturn
    (85) valores -> . reg
    (86) valores -> . INT
    (87) valores -> . FLOAT
    (88) valores -> . STRING
    (89) valores -> . BOOL
    (90) valores -> . ternario
    (91) valores -> . atributos
    (92) valores -> . vec
    (93) valores -> . RES
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (94) reg -> . { campos }
    (102) ternario -> . ternarioMat
    (103) ternario -> . ternarioBool
    (104) ternario -> . ( ternarioMat )
    (105) ternario -> . ( ternarioBool )
    (106) ternario -> . ternarioVars
    (107) ternario -> . ( ternarioVars )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    ?               reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 151
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 58

    (156) varAsig -> variable = . valores
    (80) valores -> . varYVals
    (81) valores -> . varsOps
    (82) valores -> . eMat
    (83) valores -> . expBool
    (84) valores -> . funcReturn
    (85) valores -> . reg
    (86) valores -> . INT
    (87) valores -> . FLOAT
    (88) valores -> . STRING
    (89) valores -> . BOOL
    (90) valores -> . ternario
    (91) valores -> . atributos
    (92) valores -> . vec
    (93) valores -> . RES
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (94) reg -> . { campos }
    (102) ternario -> . ternarioMat
    (103) ternario -> . ternarioBool
    (104) ternario -> . ( ternarioMat )
    (105) ternario -> . ( ternarioBool )
    (106) ternario -> . ternarioVars
    (107) ternario -> . ( ternarioVars )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    ?               reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 152
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 59

    (153) varAsig -> variable DIVEQ . valores
    (80) valores -> . varYVals
    (81) valores -> . varsOps
    (82) valores -> . eMat
    (83) valores -> . expBool
    (84) valores -> . funcReturn
    (85) valores -> . reg
    (86) valores -> . INT
    (87) valores -> . FLOAT
    (88) valores -> . STRING
    (89) valores -> . BOOL
    (90) valores -> . ternario
    (91) valores -> . atributos
    (92) valores -> . vec
    (93) valores -> . RES
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (94) reg -> . { campos }
    (102) ternario -> . ternarioMat
    (103) ternario -> . ternarioBool
    (104) ternario -> . ( ternarioMat )
    (105) ternario -> . ( ternarioBool )
    (106) ternario -> . ternarioVars
    (107) ternario -> . ( ternarioVars )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    ?               reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 153
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 60

    (211) expBool -> and .
    (212) and -> and . AND eq
    (214) and -> and . AND valoresBool

    )               reduce using rule 211 (expBool -> and .)
    ?               reduce using rule 211 (expBool -> and .)
    OR              reduce using rule 211 (expBool -> and .)
    :               reduce using rule 211 (expBool -> and .)
    ]               reduce using rule 211 (expBool -> and .)
    ,               reduce using rule 211 (expBool -> and .)
    }               reduce using rule 211 (expBool -> and .)
    ;               reduce using rule 211 (expBool -> and .)
    AND             shift and go to state 154


state 61

    (90) valores -> ternario .

    )               reduce using rule 90 (valores -> ternario .)
    ;               reduce using rule 90 (valores -> ternario .)
    ,               reduce using rule 90 (valores -> ternario .)
    ]               reduce using rule 90 (valores -> ternario .)
    }               reduce using rule 90 (valores -> ternario .)


state 62

    (49) funcReturn -> funcBool .
    (202) valoresBool -> funcBool .
    (227) tCompareEQ -> funcBool .

    )               reduce using rule 49 (funcReturn -> funcBool .)
    ,               reduce using rule 49 (funcReturn -> funcBool .)
    ]               reduce using rule 49 (funcReturn -> funcBool .)
    ;               reduce using rule 49 (funcReturn -> funcBool .)
    }               reduce using rule 49 (funcReturn -> funcBool .)
    OR              reduce using rule 202 (valoresBool -> funcBool .)
    AND             reduce using rule 202 (valoresBool -> funcBool .)
    ?               reduce using rule 202 (valoresBool -> funcBool .)
    EQEQ            reduce using rule 227 (tCompareEQ -> funcBool .)
    DISTINTO        reduce using rule 227 (tCompareEQ -> funcBool .)


state 63

    (93) valores -> RES .

    )               reduce using rule 93 (valores -> RES .)
    ;               reduce using rule 93 (valores -> RES .)
    ,               reduce using rule 93 (valores -> RES .)
    ]               reduce using rule 93 (valores -> RES .)
    }               reduce using rule 93 (valores -> RES .)


state 64

    (47) funcReturn -> funcInt .
    (160) valoresMat -> funcInt .
    (232) tCompareEQ -> funcInt .
    (240) tCompare -> funcInt .

    )               reduce using rule 47 (funcReturn -> funcInt .)
    ,               reduce using rule 47 (funcReturn -> funcInt .)
    ]               reduce using rule 47 (funcReturn -> funcInt .)
    ;               reduce using rule 47 (funcReturn -> funcInt .)
    }               reduce using rule 47 (funcReturn -> funcInt .)
    +               reduce using rule 160 (valoresMat -> funcInt .)
    -               reduce using rule 160 (valoresMat -> funcInt .)
    *               reduce using rule 160 (valoresMat -> funcInt .)
    /               reduce using rule 160 (valoresMat -> funcInt .)
    %               reduce using rule 160 (valoresMat -> funcInt .)
    ^               reduce using rule 160 (valoresMat -> funcInt .)
    EQEQ            reduce using rule 232 (tCompareEQ -> funcInt .)
    DISTINTO        reduce using rule 232 (tCompareEQ -> funcInt .)
    >               reduce using rule 240 (tCompare -> funcInt .)
    <               reduce using rule 240 (tCompare -> funcInt .)


state 65

    (59) elem -> valores . , elem
    (60) elem -> valores .

    ,               shift and go to state 155
    ]               reduce using rule 60 (elem -> valores .)


state 66

    (246) menor -> not .

    EQEQ            reduce using rule 246 (menor -> not .)
    DISTINTO        reduce using rule 246 (menor -> not .)
    AND             reduce using rule 246 (menor -> not .)
    ?               reduce using rule 246 (menor -> not .)
    OR              reduce using rule 246 (menor -> not .)
    ,               reduce using rule 246 (menor -> not .)
    ]               reduce using rule 246 (menor -> not .)
    )               reduce using rule 246 (menor -> not .)
    ;               reduce using rule 246 (menor -> not .)
    :               reduce using rule 246 (menor -> not .)
    }               reduce using rule 246 (menor -> not .)


state 67

    (244) mayor -> menor .

    EQEQ            reduce using rule 244 (mayor -> menor .)
    DISTINTO        reduce using rule 244 (mayor -> menor .)
    AND             reduce using rule 244 (mayor -> menor .)
    ?               reduce using rule 244 (mayor -> menor .)
    OR              reduce using rule 244 (mayor -> menor .)
    :               reduce using rule 244 (mayor -> menor .)
    ,               reduce using rule 244 (mayor -> menor .)
    ;               reduce using rule 244 (mayor -> menor .)
    )               reduce using rule 244 (mayor -> menor .)
    ]               reduce using rule 244 (mayor -> menor .)
    }               reduce using rule 244 (mayor -> menor .)


state 68

    (106) ternario -> ternarioVars .

    ;               reduce using rule 106 (ternario -> ternarioVars .)
    ,               reduce using rule 106 (ternario -> ternarioVars .)
    )               reduce using rule 106 (ternario -> ternarioVars .)
    }               reduce using rule 106 (ternario -> ternarioVars .)
    ]               reduce using rule 106 (ternario -> ternarioVars .)


state 69

    (168) eMat -> valoresMat . + p
    (170) eMat -> valoresMat . + valoresMat
    (173) eMat -> valoresMat . - p
    (175) eMat -> valoresMat . - valoresMat
    (179) p -> valoresMat . * exp
    (180) p -> valoresMat . / exp
    (181) p -> valoresMat . % exp
    (185) p -> valoresMat . * valoresMat
    (186) p -> valoresMat . / valoresMat
    (187) p -> valoresMat . % valoresMat
    (190) exp -> valoresMat . ^ iSing
    (192) exp -> valoresMat . ^ valoresMat

    +               shift and go to state 157
    -               shift and go to state 159
    *               shift and go to state 158
    /               shift and go to state 160
    %               shift and go to state 156
    ^               shift and go to state 161


state 70

    (216) and -> eq .
    (217) eq -> eq . EQEQ mayor
    (218) eq -> eq . DISTINTO mayor
    (221) eq -> eq . EQEQ tCompareEQ
    (222) eq -> eq . DISTINTO tCompareEQ

    AND             reduce using rule 216 (and -> eq .)
    )               reduce using rule 216 (and -> eq .)
    ?               reduce using rule 216 (and -> eq .)
    OR              reduce using rule 216 (and -> eq .)
    ,               reduce using rule 216 (and -> eq .)
    ]               reduce using rule 216 (and -> eq .)
    ;               reduce using rule 216 (and -> eq .)
    :               reduce using rule 216 (and -> eq .)
    }               reduce using rule 216 (and -> eq .)
    EQEQ            shift and go to state 162
    DISTINTO        shift and go to state 163


state 71

    (143) varYVals -> vecVal .
    (144) varYVals -> vecVal . . varYVals
    (63) vecVal -> vecVal . [ expresion ]
    (66) vecVal -> vecVal . [ INT ]
    (150) variable -> vecVal .
    (151) variable -> vecVal . . varYVals

    ?               reduce using rule 143 (varYVals -> vecVal .)
    OR              reduce using rule 143 (varYVals -> vecVal .)
    AND             reduce using rule 143 (varYVals -> vecVal .)
    +               reduce using rule 143 (varYVals -> vecVal .)
    -               reduce using rule 143 (varYVals -> vecVal .)
    *               reduce using rule 143 (varYVals -> vecVal .)
    /               reduce using rule 143 (varYVals -> vecVal .)
    %               reduce using rule 143 (varYVals -> vecVal .)
    ^               reduce using rule 143 (varYVals -> vecVal .)
    EQEQ            reduce using rule 143 (varYVals -> vecVal .)
    DISTINTO        reduce using rule 143 (varYVals -> vecVal .)
    >               reduce using rule 143 (varYVals -> vecVal .)
    <               reduce using rule 143 (varYVals -> vecVal .)
    )               reduce using rule 143 (varYVals -> vecVal .)
    ,               reduce using rule 143 (varYVals -> vecVal .)
    ]               reduce using rule 143 (varYVals -> vecVal .)
    ;               reduce using rule 143 (varYVals -> vecVal .)
    :               reduce using rule 143 (varYVals -> vecVal .)
    }               reduce using rule 143 (varYVals -> vecVal .)
    .               shift and go to state 164
    [               shift and go to state 45
    MASMAS          reduce using rule 150 (variable -> vecVal .)
    MENOSMENOS      reduce using rule 150 (variable -> vecVal .)


state 72

    (88) valores -> STRING .
    (163) valoresMat -> STRING .

    )               reduce using rule 88 (valores -> STRING .)
    ;               reduce using rule 88 (valores -> STRING .)
    ,               reduce using rule 88 (valores -> STRING .)
    ]               reduce using rule 88 (valores -> STRING .)
    }               reduce using rule 88 (valores -> STRING .)
    +               reduce using rule 163 (valoresMat -> STRING .)
    -               reduce using rule 163 (valoresMat -> STRING .)
    *               reduce using rule 163 (valoresMat -> STRING .)
    /               reduce using rule 163 (valoresMat -> STRING .)
    %               reduce using rule 163 (valoresMat -> STRING .)
    ^               reduce using rule 163 (valoresMat -> STRING .)


state 73

    (208) expBool -> valoresBool . OR and
    (210) expBool -> valoresBool . OR valoresBool
    (213) and -> valoresBool . AND eq
    (215) and -> valoresBool . AND valoresBool
    (126) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars

    OR              shift and go to state 166
    AND             shift and go to state 165
    ?               shift and go to state 167


state 74

    (82) valores -> eMat .
    (167) eMat -> eMat . + p
    (169) eMat -> eMat . + valoresMat
    (172) eMat -> eMat . - p
    (174) eMat -> eMat . - valoresMat
    (233) tCompareEQ -> eMat .
    (236) tCompare -> eMat .

    )               reduce using rule 82 (valores -> eMat .)
    ;               reduce using rule 82 (valores -> eMat .)
    ,               reduce using rule 82 (valores -> eMat .)
    ]               reduce using rule 82 (valores -> eMat .)
    }               reduce using rule 82 (valores -> eMat .)
    +               shift and go to state 168
    -               shift and go to state 169
    EQEQ            reduce using rule 233 (tCompareEQ -> eMat .)
    DISTINTO        reduce using rule 233 (tCompareEQ -> eMat .)
    >               reduce using rule 236 (tCompare -> eMat .)
    <               reduce using rule 236 (tCompare -> eMat .)


state 75

    (219) eq -> tCompareEQ . EQEQ mayor
    (220) eq -> tCompareEQ . DISTINTO mayor
    (223) eq -> tCompareEQ . EQEQ tCompareEQ
    (224) eq -> tCompareEQ . DISTINTO tCompareEQ

    EQEQ            shift and go to state 170
    DISTINTO        shift and go to state 171


state 76

    (104) ternario -> ( . ternarioMat )
    (105) ternario -> ( . ternarioBool )
    (107) ternario -> ( . ternarioVars )
    (166) valoresMat -> ( . ternarioMat )
    (205) valoresBool -> ( . ternarioBool )
    (234) tCompareEQ -> ( . ternarioBool )
    (235) tCompareEQ -> ( . ternarioMat )
    (199) paren -> ( . eMat )
    (200) paren -> ( . valoresMat )
    (242) tCompare -> ( . ternarioMat )
    (250) parenBool -> ( . expBool )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (53) funcBool -> . COLINEALES ( valores , valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (58) vec -> . [ elem ]
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 177
    BOOL            shift and go to state 187
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 175
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 178
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 182
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    expBool                        shift and go to state 188
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 179
    ternarioVars                   shift and go to state 189
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 77

    (195) iSing -> + . paren
    (197) iSing -> + . valoresMat
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (58) vec -> . [ elem ]

    (               shift and go to state 194
    INT             shift and go to state 197
    FLOAT           shift and go to state 196
    STRING          shift and go to state 181
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    [               shift and go to state 20

    funcString                     shift and go to state 184
    funcInt                        shift and go to state 192
    vecVal                         shift and go to state 71
    varsOps                        shift and go to state 198
    valoresMat                     shift and go to state 193
    variable                       shift and go to state 89
    paren                          shift and go to state 195
    varYVals                       shift and go to state 199
    reg                            shift and go to state 180
    atributos                      shift and go to state 191
    vec                            shift and go to state 33

state 78

    (194) iSing -> - . paren
    (196) iSing -> - . valoresMat
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (58) vec -> . [ elem ]

    (               shift and go to state 194
    INT             shift and go to state 197
    FLOAT           shift and go to state 196
    STRING          shift and go to state 181
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    [               shift and go to state 20

    funcString                     shift and go to state 184
    funcInt                        shift and go to state 192
    vecVal                         shift and go to state 71
    varsOps                        shift and go to state 198
    valoresMat                     shift and go to state 200
    variable                       shift and go to state 89
    paren                          shift and go to state 201
    varYVals                       shift and go to state 199
    reg                            shift and go to state 180
    atributos                      shift and go to state 191
    vec                            shift and go to state 33

state 79

    (102) ternario -> ternarioMat .

    ;               reduce using rule 102 (ternario -> ternarioMat .)
    ,               reduce using rule 102 (ternario -> ternarioMat .)
    )               reduce using rule 102 (ternario -> ternarioMat .)
    }               reduce using rule 102 (ternario -> ternarioMat .)
    ]               reduce using rule 102 (ternario -> ternarioMat .)


state 80

    (92) valores -> vec .
    (62) vecVal -> vec . [ expresion ]
    (65) vecVal -> vec . [ INT ]

    )               reduce using rule 92 (valores -> vec .)
    ;               reduce using rule 92 (valores -> vec .)
    ,               reduce using rule 92 (valores -> vec .)
    ]               reduce using rule 92 (valores -> vec .)
    }               reduce using rule 92 (valores -> vec .)
    [               shift and go to state 115


state 81

    (225) eq -> mayor .

    EQEQ            reduce using rule 225 (eq -> mayor .)
    DISTINTO        reduce using rule 225 (eq -> mayor .)
    AND             reduce using rule 225 (eq -> mayor .)
    ?               reduce using rule 225 (eq -> mayor .)
    OR              reduce using rule 225 (eq -> mayor .)
    )               reduce using rule 225 (eq -> mayor .)
    :               reduce using rule 225 (eq -> mayor .)
    ,               reduce using rule 225 (eq -> mayor .)
    ]               reduce using rule 225 (eq -> mayor .)
    ;               reduce using rule 225 (eq -> mayor .)
    }               reduce using rule 225 (eq -> mayor .)


state 82

    (85) valores -> reg .
    (98) atributos -> reg . . valoresCampos

    )               reduce using rule 85 (valores -> reg .)
    ;               reduce using rule 85 (valores -> reg .)
    ,               reduce using rule 85 (valores -> reg .)
    ]               reduce using rule 85 (valores -> reg .)
    }               reduce using rule 85 (valores -> reg .)
    .               shift and go to state 202


state 83

    (83) valores -> expBool .
    (207) expBool -> expBool . OR and
    (209) expBool -> expBool . OR valoresBool
    (127) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (136) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (113) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars

    )               reduce using rule 83 (valores -> expBool .)
    ;               reduce using rule 83 (valores -> expBool .)
    ,               reduce using rule 83 (valores -> expBool .)
    ]               reduce using rule 83 (valores -> expBool .)
    }               reduce using rule 83 (valores -> expBool .)
    OR              shift and go to state 203
    ?               shift and go to state 204


state 84

    (103) ternario -> ternarioBool .

    ;               reduce using rule 103 (ternario -> ternarioBool .)
    ,               reduce using rule 103 (ternario -> ternarioBool .)
    )               reduce using rule 103 (ternario -> ternarioBool .)
    }               reduce using rule 103 (ternario -> ternarioBool .)
    ]               reduce using rule 103 (ternario -> ternarioBool .)


state 85

    (193) exp -> iSing .

    ^               reduce using rule 193 (exp -> iSing .)
    *               reduce using rule 193 (exp -> iSing .)
    /               reduce using rule 193 (exp -> iSing .)
    %               reduce using rule 193 (exp -> iSing .)
    +               reduce using rule 193 (exp -> iSing .)
    -               reduce using rule 193 (exp -> iSing .)
    ,               reduce using rule 193 (exp -> iSing .)
    }               reduce using rule 193 (exp -> iSing .)
    EQEQ            reduce using rule 193 (exp -> iSing .)
    DISTINTO        reduce using rule 193 (exp -> iSing .)
    >               reduce using rule 193 (exp -> iSing .)
    <               reduce using rule 193 (exp -> iSing .)
    )               reduce using rule 193 (exp -> iSing .)
    :               reduce using rule 193 (exp -> iSing .)
    ]               reduce using rule 193 (exp -> iSing .)
    ;               reduce using rule 193 (exp -> iSing .)
    AND             reduce using rule 193 (exp -> iSing .)
    OR              reduce using rule 193 (exp -> iSing .)
    ?               reduce using rule 193 (exp -> iSing .)


state 86

    (249) not -> parenBool .

    EQEQ            reduce using rule 249 (not -> parenBool .)
    DISTINTO        reduce using rule 249 (not -> parenBool .)
    AND             reduce using rule 249 (not -> parenBool .)
    OR              reduce using rule 249 (not -> parenBool .)
    ?               reduce using rule 249 (not -> parenBool .)
    ]               reduce using rule 249 (not -> parenBool .)
    :               reduce using rule 249 (not -> parenBool .)
    )               reduce using rule 249 (not -> parenBool .)
    ,               reduce using rule 249 (not -> parenBool .)
    ;               reduce using rule 249 (not -> parenBool .)
    }               reduce using rule 249 (not -> parenBool .)


state 87

    (243) mayor -> tCompare . > tCompare
    (245) menor -> tCompare . < tCompare

    >               shift and go to state 206
    <               shift and go to state 205


state 88

    (198) iSing -> paren .

    ^               reduce using rule 198 (iSing -> paren .)
    *               reduce using rule 198 (iSing -> paren .)
    /               reduce using rule 198 (iSing -> paren .)
    %               reduce using rule 198 (iSing -> paren .)
    +               reduce using rule 198 (iSing -> paren .)
    -               reduce using rule 198 (iSing -> paren .)
    )               reduce using rule 198 (iSing -> paren .)
    EQEQ            reduce using rule 198 (iSing -> paren .)
    DISTINTO        reduce using rule 198 (iSing -> paren .)
    >               reduce using rule 198 (iSing -> paren .)
    <               reduce using rule 198 (iSing -> paren .)
    :               reduce using rule 198 (iSing -> paren .)
    ,               reduce using rule 198 (iSing -> paren .)
    ]               reduce using rule 198 (iSing -> paren .)
    ;               reduce using rule 198 (iSing -> paren .)
    AND             reduce using rule 198 (iSing -> paren .)
    OR              reduce using rule 198 (iSing -> paren .)
    ?               reduce using rule 198 (iSing -> paren .)
    }               reduce using rule 198 (iSing -> paren .)


state 89

    (147) varsOps -> variable . MASMAS
    (148) varsOps -> variable . MENOSMENOS

    MASMAS          shift and go to state 56
    MENOSMENOS      shift and go to state 54


state 90

    (142) varYVals -> ID .
    (97) atributos -> ID . . valoresCampos
    (61) vecVal -> ID . [ expresion ]
    (64) vecVal -> ID . [ INT ]
    (149) variable -> ID .

    ?               reduce using rule 142 (varYVals -> ID .)
    OR              reduce using rule 142 (varYVals -> ID .)
    AND             reduce using rule 142 (varYVals -> ID .)
    +               reduce using rule 142 (varYVals -> ID .)
    -               reduce using rule 142 (varYVals -> ID .)
    *               reduce using rule 142 (varYVals -> ID .)
    /               reduce using rule 142 (varYVals -> ID .)
    %               reduce using rule 142 (varYVals -> ID .)
    ^               reduce using rule 142 (varYVals -> ID .)
    EQEQ            reduce using rule 142 (varYVals -> ID .)
    DISTINTO        reduce using rule 142 (varYVals -> ID .)
    >               reduce using rule 142 (varYVals -> ID .)
    <               reduce using rule 142 (varYVals -> ID .)
    )               reduce using rule 142 (varYVals -> ID .)
    ;               reduce using rule 142 (varYVals -> ID .)
    ,               reduce using rule 142 (varYVals -> ID .)
    ]               reduce using rule 142 (varYVals -> ID .)
    }               reduce using rule 142 (varYVals -> ID .)
    .               shift and go to state 207
    [               shift and go to state 105
    MASMAS          reduce using rule 149 (variable -> ID .)
    MENOSMENOS      reduce using rule 149 (variable -> ID .)


state 91

    (48) funcReturn -> funcString .
    (162) valoresMat -> funcString .

    )               reduce using rule 48 (funcReturn -> funcString .)
    ,               reduce using rule 48 (funcReturn -> funcString .)
    ]               reduce using rule 48 (funcReturn -> funcString .)
    ;               reduce using rule 48 (funcReturn -> funcString .)
    }               reduce using rule 48 (funcReturn -> funcString .)
    +               reduce using rule 162 (valoresMat -> funcString .)
    -               reduce using rule 162 (valoresMat -> funcString .)
    *               reduce using rule 162 (valoresMat -> funcString .)
    /               reduce using rule 162 (valoresMat -> funcString .)
    %               reduce using rule 162 (valoresMat -> funcString .)
    ^               reduce using rule 162 (valoresMat -> funcString .)


state 92

    (86) valores -> INT .
    (158) valoresMat -> INT .
    (230) tCompareEQ -> INT .
    (239) tCompare -> INT .

    )               reduce using rule 86 (valores -> INT .)
    ;               reduce using rule 86 (valores -> INT .)
    ,               reduce using rule 86 (valores -> INT .)
    ]               reduce using rule 86 (valores -> INT .)
    }               reduce using rule 86 (valores -> INT .)
    +               reduce using rule 158 (valoresMat -> INT .)
    -               reduce using rule 158 (valoresMat -> INT .)
    *               reduce using rule 158 (valoresMat -> INT .)
    /               reduce using rule 158 (valoresMat -> INT .)
    %               reduce using rule 158 (valoresMat -> INT .)
    ^               reduce using rule 158 (valoresMat -> INT .)
    EQEQ            reduce using rule 230 (tCompareEQ -> INT .)
    DISTINTO        reduce using rule 230 (tCompareEQ -> INT .)
    >               reduce using rule 239 (tCompare -> INT .)
    <               reduce using rule 239 (tCompare -> INT .)


state 93

    (84) valores -> funcReturn .

    )               reduce using rule 84 (valores -> funcReturn .)
    ;               reduce using rule 84 (valores -> funcReturn .)
    ,               reduce using rule 84 (valores -> funcReturn .)
    ]               reduce using rule 84 (valores -> funcReturn .)
    }               reduce using rule 84 (valores -> funcReturn .)


state 94

    (87) valores -> FLOAT .
    (159) valoresMat -> FLOAT .
    (231) tCompareEQ -> FLOAT .
    (241) tCompare -> FLOAT .

    )               reduce using rule 87 (valores -> FLOAT .)
    ;               reduce using rule 87 (valores -> FLOAT .)
    ,               reduce using rule 87 (valores -> FLOAT .)
    ]               reduce using rule 87 (valores -> FLOAT .)
    }               reduce using rule 87 (valores -> FLOAT .)
    +               reduce using rule 159 (valoresMat -> FLOAT .)
    -               reduce using rule 159 (valoresMat -> FLOAT .)
    *               reduce using rule 159 (valoresMat -> FLOAT .)
    /               reduce using rule 159 (valoresMat -> FLOAT .)
    %               reduce using rule 159 (valoresMat -> FLOAT .)
    ^               reduce using rule 159 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 231 (tCompareEQ -> FLOAT .)
    DISTINTO        reduce using rule 231 (tCompareEQ -> FLOAT .)
    >               reduce using rule 241 (tCompare -> FLOAT .)
    <               reduce using rule 241 (tCompare -> FLOAT .)


state 95

    (58) vec -> [ elem . ]

    ]               shift and go to state 208


state 96

    (171) eMat -> p .
    (176) p -> p . * exp
    (177) p -> p . / exp
    (178) p -> p . % exp
    (182) p -> p . * valoresMat
    (183) p -> p . / valoresMat
    (184) p -> p . % valoresMat

    )               reduce using rule 171 (eMat -> p .)
    +               reduce using rule 171 (eMat -> p .)
    -               reduce using rule 171 (eMat -> p .)
    EQEQ            reduce using rule 171 (eMat -> p .)
    DISTINTO        reduce using rule 171 (eMat -> p .)
    >               reduce using rule 171 (eMat -> p .)
    <               reduce using rule 171 (eMat -> p .)
    ,               reduce using rule 171 (eMat -> p .)
    ]               reduce using rule 171 (eMat -> p .)
    ;               reduce using rule 171 (eMat -> p .)
    :               reduce using rule 171 (eMat -> p .)
    }               reduce using rule 171 (eMat -> p .)
    AND             reduce using rule 171 (eMat -> p .)
    OR              reduce using rule 171 (eMat -> p .)
    ?               reduce using rule 171 (eMat -> p .)
    *               shift and go to state 210
    /               shift and go to state 211
    %               shift and go to state 209


state 97

    (89) valores -> BOOL .
    (201) valoresBool -> BOOL .
    (226) tCompareEQ -> BOOL .

    )               reduce using rule 89 (valores -> BOOL .)
    ;               reduce using rule 89 (valores -> BOOL .)
    ,               reduce using rule 89 (valores -> BOOL .)
    ]               reduce using rule 89 (valores -> BOOL .)
    }               reduce using rule 89 (valores -> BOOL .)
    OR              reduce using rule 201 (valoresBool -> BOOL .)
    AND             reduce using rule 201 (valoresBool -> BOOL .)
    ?               reduce using rule 201 (valoresBool -> BOOL .)
    EQEQ            reduce using rule 226 (tCompareEQ -> BOOL .)
    DISTINTO        reduce using rule 226 (tCompareEQ -> BOOL .)


state 98

    (81) valores -> varsOps .
    (165) valoresMat -> varsOps .
    (204) valoresBool -> varsOps .
    (229) tCompareEQ -> varsOps .
    (237) tCompare -> varsOps .

    )               reduce using rule 81 (valores -> varsOps .)
    ;               reduce using rule 81 (valores -> varsOps .)
    ,               reduce using rule 81 (valores -> varsOps .)
    ]               reduce using rule 81 (valores -> varsOps .)
    }               reduce using rule 81 (valores -> varsOps .)
    +               reduce using rule 165 (valoresMat -> varsOps .)
    -               reduce using rule 165 (valoresMat -> varsOps .)
    *               reduce using rule 165 (valoresMat -> varsOps .)
    /               reduce using rule 165 (valoresMat -> varsOps .)
    %               reduce using rule 165 (valoresMat -> varsOps .)
    ^               reduce using rule 165 (valoresMat -> varsOps .)
    OR              reduce using rule 204 (valoresBool -> varsOps .)
    AND             reduce using rule 204 (valoresBool -> varsOps .)
    ?               reduce using rule 204 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 229 (tCompareEQ -> varsOps .)
    DISTINTO        reduce using rule 229 (tCompareEQ -> varsOps .)
    >               reduce using rule 237 (tCompare -> varsOps .)
    <               reduce using rule 237 (tCompare -> varsOps .)


state 99

    (247) not -> NOT . not
    (248) not -> NOT . valoresBool
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (250) parenBool -> . ( expBool )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (58) vec -> . [ elem ]

    NOT             shift and go to state 99
    BOOL            shift and go to state 217
    (               shift and go to state 214
    EQEQ            reduce using rule 206 (valoresBool -> .)
    DISTINTO        reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    ?               reduce using rule 206 (valoresBool -> .)
    ,               reduce using rule 206 (valoresBool -> .)
    ]               reduce using rule 206 (valoresBool -> .)
    )               reduce using rule 206 (valoresBool -> .)
    ;               reduce using rule 206 (valoresBool -> .)
    :               reduce using rule 206 (valoresBool -> .)
    }               reduce using rule 206 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 216
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    [               shift and go to state 20

    funcBool                       shift and go to state 212
    parenBool                      shift and go to state 86
    variable                       shift and go to state 89
    varsOps                        shift and go to state 218
    vecVal                         shift and go to state 71
    not                            shift and go to state 215
    varYVals                       shift and go to state 219
    valoresBool                    shift and go to state 213
    vec                            shift and go to state 33

state 100

    (188) p -> exp .
    (189) exp -> exp . ^ iSing
    (191) exp -> exp . ^ valoresMat

    *               reduce using rule 188 (p -> exp .)
    /               reduce using rule 188 (p -> exp .)
    %               reduce using rule 188 (p -> exp .)
    +               reduce using rule 188 (p -> exp .)
    -               reduce using rule 188 (p -> exp .)
    EQEQ            reduce using rule 188 (p -> exp .)
    DISTINTO        reduce using rule 188 (p -> exp .)
    >               reduce using rule 188 (p -> exp .)
    <               reduce using rule 188 (p -> exp .)
    :               reduce using rule 188 (p -> exp .)
    ,               reduce using rule 188 (p -> exp .)
    ]               reduce using rule 188 (p -> exp .)
    )               reduce using rule 188 (p -> exp .)
    ;               reduce using rule 188 (p -> exp .)
    }               reduce using rule 188 (p -> exp .)
    AND             reduce using rule 188 (p -> exp .)
    OR              reduce using rule 188 (p -> exp .)
    ?               reduce using rule 188 (p -> exp .)
    ^               shift and go to state 220


state 101

    (94) reg -> { . campos }
    (95) campos -> . ID : valores , campos
    (96) campos -> . ID : valores

    ID              shift and go to state 222

    campos                         shift and go to state 221

state 102

    (80) valores -> varYVals .
    (164) valoresMat -> varYVals .
    (203) valoresBool -> varYVals .
    (228) tCompareEQ -> varYVals .
    (238) tCompare -> varYVals .

    )               reduce using rule 80 (valores -> varYVals .)
    ;               reduce using rule 80 (valores -> varYVals .)
    ,               reduce using rule 80 (valores -> varYVals .)
    ]               reduce using rule 80 (valores -> varYVals .)
    }               reduce using rule 80 (valores -> varYVals .)
    +               reduce using rule 164 (valoresMat -> varYVals .)
    -               reduce using rule 164 (valoresMat -> varYVals .)
    *               reduce using rule 164 (valoresMat -> varYVals .)
    /               reduce using rule 164 (valoresMat -> varYVals .)
    %               reduce using rule 164 (valoresMat -> varYVals .)
    ^               reduce using rule 164 (valoresMat -> varYVals .)
    OR              reduce using rule 203 (valoresBool -> varYVals .)
    AND             reduce using rule 203 (valoresBool -> varYVals .)
    ?               reduce using rule 203 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 228 (tCompareEQ -> varYVals .)
    DISTINTO        reduce using rule 228 (tCompareEQ -> varYVals .)
    >               reduce using rule 238 (tCompare -> varYVals .)
    <               reduce using rule 238 (tCompare -> varYVals .)


state 103

    (91) valores -> atributos .
    (161) valoresMat -> atributos .

    )               reduce using rule 91 (valores -> atributos .)
    ;               reduce using rule 91 (valores -> atributos .)
    ,               reduce using rule 91 (valores -> atributos .)
    ]               reduce using rule 91 (valores -> atributos .)
    }               reduce using rule 91 (valores -> atributos .)
    +               reduce using rule 161 (valoresMat -> atributos .)
    -               reduce using rule 161 (valoresMat -> atributos .)
    *               reduce using rule 161 (valoresMat -> atributos .)
    /               reduce using rule 161 (valoresMat -> atributos .)
    %               reduce using rule 161 (valoresMat -> atributos .)
    ^               reduce using rule 161 (valoresMat -> atributos .)


state 104

    (157) varAsig -> ID . . ID = valores

    ID              shift and go to state 223


state 105

    (61) vecVal -> ID [ . expresion ]
    (64) vecVal -> ID [ . INT ]
    (67) expresion -> . eMat
    (68) expresion -> . expBool
    (69) expresion -> . funcReturn
    (70) expresion -> . reg
    (71) expresion -> . FLOAT
    (72) expresion -> . STRING
    (73) expresion -> . BOOL
    (74) expresion -> . varYVals
    (75) expresion -> . varsOps
    (76) expresion -> . vec
    (77) expresion -> . ternario
    (78) expresion -> . atributos
    (79) expresion -> . RES
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (94) reg -> . { campos }
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (58) vec -> . [ elem ]
    (102) ternario -> . ternarioMat
    (103) ternario -> . ternarioBool
    (104) ternario -> . ( ternarioMat )
    (105) ternario -> . ( ternarioBool )
    (106) ternario -> . ternarioVars
    (107) ternario -> . ( ternarioVars )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 225
    FLOAT           shift and go to state 139
    STRING          shift and go to state 131
    BOOL            shift and go to state 140
    RES             shift and go to state 130
    {               shift and go to state 101
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 76
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    ?               reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 129
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 132
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 133
    paren                          shift and go to state 88
    reg                            shift and go to state 134
    expBool                        shift and go to state 135
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    expresion                      shift and go to state 224
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 138
    p                              shift and go to state 96
    varsOps                        shift and go to state 141
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 142
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 143

state 106

    (6) lAbierta -> IF ( . cosaBooleana ) linea
    (7) lAbierta -> IF ( . cosaBooleana ) COMMENT com linea
    (8) lAbierta -> IF ( . cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> IF ( . cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> IF ( . cosaBooleana ) { g }
    (16) lCerrada -> IF ( . cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> IF ( . cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (43) cosaBooleana -> . expBool
    (44) cosaBooleana -> . valoresBool
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (53) funcBool -> . COLINEALES ( valores , valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (58) vec -> . [ elem ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (250) parenBool -> . ( expBool )
    (94) reg -> . { campos }
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )

    BOOL            shift and go to state 187
    (               shift and go to state 229
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    )               reduce using rule 206 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 230
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    valoresBool                    shift and go to state 227
    eMat                           shift and go to state 228
    p                              shift and go to state 96
    atributos                      shift and go to state 191
    mayor                          shift and go to state 81
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 234
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    cosaBooleana                   shift and go to state 231
    funcString                     shift and go to state 184
    tCompareEQ                     shift and go to state 75
    exp                            shift and go to state 100
    varYVals                       shift and go to state 235
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 236

state 107

    (32) sentencia -> varAsig ; .

    ELSE            reduce using rule 32 (sentencia -> varAsig ; .)
    COMMENT         reduce using rule 32 (sentencia -> varAsig ; .)
    IF              reduce using rule 32 (sentencia -> varAsig ; .)
    DO              reduce using rule 32 (sentencia -> varAsig ; .)
    WHILE           reduce using rule 32 (sentencia -> varAsig ; .)
    FOR             reduce using rule 32 (sentencia -> varAsig ; .)
    RETURN          reduce using rule 32 (sentencia -> varAsig ; .)
    ;               reduce using rule 32 (sentencia -> varAsig ; .)
    MENOSMENOS      reduce using rule 32 (sentencia -> varAsig ; .)
    MASMAS          reduce using rule 32 (sentencia -> varAsig ; .)
    ID              reduce using rule 32 (sentencia -> varAsig ; .)
    PRINT           reduce using rule 32 (sentencia -> varAsig ; .)
    MULTIESCALAR    reduce using rule 32 (sentencia -> varAsig ; .)
    LENGTH          reduce using rule 32 (sentencia -> varAsig ; .)
    CAPITALIZAR     reduce using rule 32 (sentencia -> varAsig ; .)
    COLINEALES      reduce using rule 32 (sentencia -> varAsig ; .)
    [               reduce using rule 32 (sentencia -> varAsig ; .)
    $end            reduce using rule 32 (sentencia -> varAsig ; .)
    }               reduce using rule 32 (sentencia -> varAsig ; .)


state 108

    (52) funcString -> CAPITALIZAR ( . valores )
    (80) valores -> . varYVals
    (81) valores -> . varsOps
    (82) valores -> . eMat
    (83) valores -> . expBool
    (84) valores -> . funcReturn
    (85) valores -> . reg
    (86) valores -> . INT
    (87) valores -> . FLOAT
    (88) valores -> . STRING
    (89) valores -> . BOOL
    (90) valores -> . ternario
    (91) valores -> . atributos
    (92) valores -> . vec
    (93) valores -> . RES
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (94) reg -> . { campos }
    (102) ternario -> . ternarioMat
    (103) ternario -> . ternarioBool
    (104) ternario -> . ( ternarioMat )
    (105) ternario -> . ( ternarioBool )
    (106) ternario -> . ternarioVars
    (107) ternario -> . ( ternarioVars )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    ?               reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 237
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 109

    (50) funcInt -> MULTIESCALAR ( . valores , valores param )
    (80) valores -> . varYVals
    (81) valores -> . varsOps
    (82) valores -> . eMat
    (83) valores -> . expBool
    (84) valores -> . funcReturn
    (85) valores -> . reg
    (86) valores -> . INT
    (87) valores -> . FLOAT
    (88) valores -> . STRING
    (89) valores -> . BOOL
    (90) valores -> . ternario
    (91) valores -> . atributos
    (92) valores -> . vec
    (93) valores -> . RES
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (94) reg -> . { campos }
    (102) ternario -> . ternarioMat
    (103) ternario -> . ternarioBool
    (104) ternario -> . ( ternarioMat )
    (105) ternario -> . ( ternarioBool )
    (106) ternario -> . ternarioVars
    (107) ternario -> . ( ternarioVars )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    ?               reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    valoresBool                    shift and go to state 73
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 238
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 110

    (146) varsOps -> MASMAS variable .

    :               reduce using rule 146 (varsOps -> MASMAS variable .)
    ?               reduce using rule 146 (varsOps -> MASMAS variable .)
    OR              reduce using rule 146 (varsOps -> MASMAS variable .)
    AND             reduce using rule 146 (varsOps -> MASMAS variable .)
    +               reduce using rule 146 (varsOps -> MASMAS variable .)
    -               reduce using rule 146 (varsOps -> MASMAS variable .)
    *               reduce using rule 146 (varsOps -> MASMAS variable .)
    /               reduce using rule 146 (varsOps -> MASMAS variable .)
    %               reduce using rule 146 (varsOps -> MASMAS variable .)
    ^               reduce using rule 146 (varsOps -> MASMAS variable .)
    EQEQ            reduce using rule 146 (varsOps -> MASMAS variable .)
    DISTINTO        reduce using rule 146 (varsOps -> MASMAS variable .)
    >               reduce using rule 146 (varsOps -> MASMAS variable .)
    <               reduce using rule 146 (varsOps -> MASMAS variable .)
    ;               reduce using rule 146 (varsOps -> MASMAS variable .)
    ,               reduce using rule 146 (varsOps -> MASMAS variable .)
    )               reduce using rule 146 (varsOps -> MASMAS variable .)
    ]               reduce using rule 146 (varsOps -> MASMAS variable .)
    }               reduce using rule 146 (varsOps -> MASMAS variable .)


state 111

    (26) lCerrada -> loop COMMENT . com lCerrada
    (14) com -> . COMMENT com
    (15) com -> . empty
    (57) empty -> .

    COMMENT         shift and go to state 117
    IF              reduce using rule 57 (empty -> .)
    DO              reduce using rule 57 (empty -> .)
    RETURN          reduce using rule 57 (empty -> .)
    ;               reduce using rule 57 (empty -> .)
    WHILE           reduce using rule 57 (empty -> .)
    FOR             reduce using rule 57 (empty -> .)
    MENOSMENOS      reduce using rule 57 (empty -> .)
    MASMAS          reduce using rule 57 (empty -> .)
    ID              reduce using rule 57 (empty -> .)
    PRINT           reduce using rule 57 (empty -> .)
    MULTIESCALAR    reduce using rule 57 (empty -> .)
    LENGTH          reduce using rule 57 (empty -> .)
    CAPITALIZAR     reduce using rule 57 (empty -> .)
    COLINEALES      reduce using rule 57 (empty -> .)
    [               reduce using rule 57 (empty -> .)

    com                            shift and go to state 239
    empty                          shift and go to state 119

state 112

    (25) lCerrada -> loop lCerrada .

    WHILE           reduce using rule 25 (lCerrada -> loop lCerrada .)
    COMMENT         reduce using rule 25 (lCerrada -> loop lCerrada .)
    IF              reduce using rule 25 (lCerrada -> loop lCerrada .)
    DO              reduce using rule 25 (lCerrada -> loop lCerrada .)
    FOR             reduce using rule 25 (lCerrada -> loop lCerrada .)
    RETURN          reduce using rule 25 (lCerrada -> loop lCerrada .)
    ;               reduce using rule 25 (lCerrada -> loop lCerrada .)
    MENOSMENOS      reduce using rule 25 (lCerrada -> loop lCerrada .)
    MASMAS          reduce using rule 25 (lCerrada -> loop lCerrada .)
    ID              reduce using rule 25 (lCerrada -> loop lCerrada .)
    PRINT           reduce using rule 25 (lCerrada -> loop lCerrada .)
    MULTIESCALAR    reduce using rule 25 (lCerrada -> loop lCerrada .)
    LENGTH          reduce using rule 25 (lCerrada -> loop lCerrada .)
    CAPITALIZAR     reduce using rule 25 (lCerrada -> loop lCerrada .)
    COLINEALES      reduce using rule 25 (lCerrada -> loop lCerrada .)
    [               reduce using rule 25 (lCerrada -> loop lCerrada .)
    $end            reduce using rule 25 (lCerrada -> loop lCerrada .)
    }               reduce using rule 25 (lCerrada -> loop lCerrada .)
    ELSE            reduce using rule 25 (lCerrada -> loop lCerrada .)


state 113

    (12) lAbierta -> loop lAbierta .

    COMMENT         reduce using rule 12 (lAbierta -> loop lAbierta .)
    IF              reduce using rule 12 (lAbierta -> loop lAbierta .)
    DO              reduce using rule 12 (lAbierta -> loop lAbierta .)
    WHILE           reduce using rule 12 (lAbierta -> loop lAbierta .)
    FOR             reduce using rule 12 (lAbierta -> loop lAbierta .)
    RETURN          reduce using rule 12 (lAbierta -> loop lAbierta .)
    ;               reduce using rule 12 (lAbierta -> loop lAbierta .)
    MENOSMENOS      reduce using rule 12 (lAbierta -> loop lAbierta .)
    MASMAS          reduce using rule 12 (lAbierta -> loop lAbierta .)
    ID              reduce using rule 12 (lAbierta -> loop lAbierta .)
    PRINT           reduce using rule 12 (lAbierta -> loop lAbierta .)
    MULTIESCALAR    reduce using rule 12 (lAbierta -> loop lAbierta .)
    LENGTH          reduce using rule 12 (lAbierta -> loop lAbierta .)
    CAPITALIZAR     reduce using rule 12 (lAbierta -> loop lAbierta .)
    COLINEALES      reduce using rule 12 (lAbierta -> loop lAbierta .)
    [               reduce using rule 12 (lAbierta -> loop lAbierta .)
    $end            reduce using rule 12 (lAbierta -> loop lAbierta .)
    }               reduce using rule 12 (lAbierta -> loop lAbierta .)


state 114

    (24) lCerrada -> loop { . g }
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (57) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (152) varAsig -> . variable MULEQ valores
    (153) varAsig -> . variable DIVEQ valores
    (154) varAsig -> . variable MASEQ valores
    (155) varAsig -> . variable MENOSEQ valores
    (156) varAsig -> . variable = valores
    (157) varAsig -> . ID . ID = valores
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 57 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    linea                          shift and go to state 34
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 12
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 240
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 30
    varsOps                        shift and go to state 13
    loop                           shift and go to state 32

state 115

    (62) vecVal -> vec [ . expresion ]
    (65) vecVal -> vec [ . INT ]
    (67) expresion -> . eMat
    (68) expresion -> . expBool
    (69) expresion -> . funcReturn
    (70) expresion -> . reg
    (71) expresion -> . FLOAT
    (72) expresion -> . STRING
    (73) expresion -> . BOOL
    (74) expresion -> . varYVals
    (75) expresion -> . varsOps
    (76) expresion -> . vec
    (77) expresion -> . ternario
    (78) expresion -> . atributos
    (79) expresion -> . RES
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (94) reg -> . { campos }
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (58) vec -> . [ elem ]
    (102) ternario -> . ternarioMat
    (103) ternario -> . ternarioBool
    (104) ternario -> . ( ternarioMat )
    (105) ternario -> . ( ternarioBool )
    (106) ternario -> . ternarioVars
    (107) ternario -> . ( ternarioVars )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 242
    FLOAT           shift and go to state 139
    STRING          shift and go to state 131
    BOOL            shift and go to state 140
    RES             shift and go to state 130
    {               shift and go to state 101
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 76
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    ?               reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 129
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 132
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 133
    paren                          shift and go to state 88
    reg                            shift and go to state 134
    varsOps                        shift and go to state 141
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    expresion                      shift and go to state 241
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 138
    p                              shift and go to state 96
    expBool                        shift and go to state 135
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 142
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 143

state 116

    (1) g -> linea g .

    }               reduce using rule 1 (g -> linea g .)
    $end            reduce using rule 1 (g -> linea g .)


state 117

    (14) com -> COMMENT . com
    (14) com -> . COMMENT com
    (15) com -> . empty
    (57) empty -> .

    COMMENT         shift and go to state 117
    IF              reduce using rule 57 (empty -> .)
    DO              reduce using rule 57 (empty -> .)
    RETURN          reduce using rule 57 (empty -> .)
    ;               reduce using rule 57 (empty -> .)
    WHILE           reduce using rule 57 (empty -> .)
    FOR             reduce using rule 57 (empty -> .)
    MENOSMENOS      reduce using rule 57 (empty -> .)
    MASMAS          reduce using rule 57 (empty -> .)
    ID              reduce using rule 57 (empty -> .)
    PRINT           reduce using rule 57 (empty -> .)
    MULTIESCALAR    reduce using rule 57 (empty -> .)
    LENGTH          reduce using rule 57 (empty -> .)
    CAPITALIZAR     reduce using rule 57 (empty -> .)
    COLINEALES      reduce using rule 57 (empty -> .)
    [               reduce using rule 57 (empty -> .)

    com                            shift and go to state 243
    empty                          shift and go to state 119

state 118

    (29) lCerrada -> DO COMMENT com . lCerrada WHILE ( valores ) ;
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (152) varAsig -> . variable MULEQ valores
    (153) varAsig -> . variable DIVEQ valores
    (154) varAsig -> . variable MASEQ valores
    (155) varAsig -> . variable MENOSEQ valores
    (156) varAsig -> . variable = valores
    (157) varAsig -> . ID . ID = valores
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]

    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 244
    varsOps                        shift and go to state 13
    loop                           shift and go to state 39

state 119

    (15) com -> empty .

    IF              reduce using rule 15 (com -> empty .)
    DO              reduce using rule 15 (com -> empty .)
    RETURN          reduce using rule 15 (com -> empty .)
    ;               reduce using rule 15 (com -> empty .)
    WHILE           reduce using rule 15 (com -> empty .)
    FOR             reduce using rule 15 (com -> empty .)
    MENOSMENOS      reduce using rule 15 (com -> empty .)
    MASMAS          reduce using rule 15 (com -> empty .)
    ID              reduce using rule 15 (com -> empty .)
    PRINT           reduce using rule 15 (com -> empty .)
    MULTIESCALAR    reduce using rule 15 (com -> empty .)
    LENGTH          reduce using rule 15 (com -> empty .)
    CAPITALIZAR     reduce using rule 15 (com -> empty .)
    COLINEALES      reduce using rule 15 (com -> empty .)
    [               reduce using rule 15 (com -> empty .)


state 120

    (16) lCerrada -> IF ( . cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> IF ( . cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (43) cosaBooleana -> . expBool
    (44) cosaBooleana -> . valoresBool
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (53) funcBool -> . COLINEALES ( valores , valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (58) vec -> . [ elem ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (250) parenBool -> . ( expBool )
    (94) reg -> . { campos }
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )

    BOOL            shift and go to state 187
    (               shift and go to state 229
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    )               reduce using rule 206 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 230
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    valoresBool                    shift and go to state 227
    eMat                           shift and go to state 228
    p                              shift and go to state 96
    atributos                      shift and go to state 191
    mayor                          shift and go to state 81
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    cosaBooleana                   shift and go to state 245
    funcString                     shift and go to state 184
    tCompareEQ                     shift and go to state 75
    varsOps                        shift and go to state 234
    exp                            shift and go to state 100
    varYVals                       shift and go to state 235
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 236

state 121

    (28) lCerrada -> DO lCerrada WHILE . ( valores ) ;

    (               shift and go to state 246


state 122

    (27) lCerrada -> DO { g . } WHILE ( valores ) ;

    }               shift and go to state 247


state 123

    (53) funcBool -> COLINEALES ( valores . , valores )

    ,               shift and go to state 248


state 124

    (35) loop -> WHILE ( valores . )

    )               shift and go to state 249


state 125

    (54) funcVoid -> PRINT ( valores . )

    )               shift and go to state 250


state 126

    (143) varYVals -> vecVal .
    (144) varYVals -> vecVal . . varYVals
    (63) vecVal -> vecVal . [ expresion ]
    (66) vecVal -> vecVal . [ INT ]

    MASMAS          reduce using rule 143 (varYVals -> vecVal .)
    MENOSMENOS      reduce using rule 143 (varYVals -> vecVal .)
    MULEQ           reduce using rule 143 (varYVals -> vecVal .)
    DIVEQ           reduce using rule 143 (varYVals -> vecVal .)
    MASEQ           reduce using rule 143 (varYVals -> vecVal .)
    MENOSEQ         reduce using rule 143 (varYVals -> vecVal .)
    =               reduce using rule 143 (varYVals -> vecVal .)
    ;               reduce using rule 143 (varYVals -> vecVal .)
    ,               reduce using rule 143 (varYVals -> vecVal .)
    ]               reduce using rule 143 (varYVals -> vecVal .)
    +               reduce using rule 143 (varYVals -> vecVal .)
    -               reduce using rule 143 (varYVals -> vecVal .)
    *               reduce using rule 143 (varYVals -> vecVal .)
    /               reduce using rule 143 (varYVals -> vecVal .)
    %               reduce using rule 143 (varYVals -> vecVal .)
    ^               reduce using rule 143 (varYVals -> vecVal .)
    OR              reduce using rule 143 (varYVals -> vecVal .)
    AND             reduce using rule 143 (varYVals -> vecVal .)
    ?               reduce using rule 143 (varYVals -> vecVal .)
    EQEQ            reduce using rule 143 (varYVals -> vecVal .)
    DISTINTO        reduce using rule 143 (varYVals -> vecVal .)
    >               reduce using rule 143 (varYVals -> vecVal .)
    <               reduce using rule 143 (varYVals -> vecVal .)
    )               reduce using rule 143 (varYVals -> vecVal .)
    :               reduce using rule 143 (varYVals -> vecVal .)
    }               reduce using rule 143 (varYVals -> vecVal .)
    .               shift and go to state 251
    [               shift and go to state 45


state 127

    (151) variable -> vecVal . varYVals .

    MASMAS          reduce using rule 151 (variable -> vecVal . varYVals .)
    MENOSMENOS      reduce using rule 151 (variable -> vecVal . varYVals .)
    MULEQ           reduce using rule 151 (variable -> vecVal . varYVals .)
    DIVEQ           reduce using rule 151 (variable -> vecVal . varYVals .)
    MASEQ           reduce using rule 151 (variable -> vecVal . varYVals .)
    MENOSEQ         reduce using rule 151 (variable -> vecVal . varYVals .)
    =               reduce using rule 151 (variable -> vecVal . varYVals .)
    ;               reduce using rule 151 (variable -> vecVal . varYVals .)
    ,               reduce using rule 151 (variable -> vecVal . varYVals .)
    ]               reduce using rule 151 (variable -> vecVal . varYVals .)
    +               reduce using rule 151 (variable -> vecVal . varYVals .)
    -               reduce using rule 151 (variable -> vecVal . varYVals .)
    *               reduce using rule 151 (variable -> vecVal . varYVals .)
    /               reduce using rule 151 (variable -> vecVal . varYVals .)
    %               reduce using rule 151 (variable -> vecVal . varYVals .)
    ^               reduce using rule 151 (variable -> vecVal . varYVals .)
    OR              reduce using rule 151 (variable -> vecVal . varYVals .)
    AND             reduce using rule 151 (variable -> vecVal . varYVals .)
    ?               reduce using rule 151 (variable -> vecVal . varYVals .)
    EQEQ            reduce using rule 151 (variable -> vecVal . varYVals .)
    DISTINTO        reduce using rule 151 (variable -> vecVal . varYVals .)
    >               reduce using rule 151 (variable -> vecVal . varYVals .)
    <               reduce using rule 151 (variable -> vecVal . varYVals .)
    )               reduce using rule 151 (variable -> vecVal . varYVals .)
    :               reduce using rule 151 (variable -> vecVal . varYVals .)
    }               reduce using rule 151 (variable -> vecVal . varYVals .)


state 128

    (142) varYVals -> ID .
    (61) vecVal -> ID . [ expresion ]
    (64) vecVal -> ID . [ INT ]

    MASMAS          reduce using rule 142 (varYVals -> ID .)
    MENOSMENOS      reduce using rule 142 (varYVals -> ID .)
    MULEQ           reduce using rule 142 (varYVals -> ID .)
    DIVEQ           reduce using rule 142 (varYVals -> ID .)
    MASEQ           reduce using rule 142 (varYVals -> ID .)
    MENOSEQ         reduce using rule 142 (varYVals -> ID .)
    =               reduce using rule 142 (varYVals -> ID .)
    ;               reduce using rule 142 (varYVals -> ID .)
    ,               reduce using rule 142 (varYVals -> ID .)
    ]               reduce using rule 142 (varYVals -> ID .)
    +               reduce using rule 142 (varYVals -> ID .)
    -               reduce using rule 142 (varYVals -> ID .)
    *               reduce using rule 142 (varYVals -> ID .)
    /               reduce using rule 142 (varYVals -> ID .)
    %               reduce using rule 142 (varYVals -> ID .)
    ^               reduce using rule 142 (varYVals -> ID .)
    OR              reduce using rule 142 (varYVals -> ID .)
    AND             reduce using rule 142 (varYVals -> ID .)
    ?               reduce using rule 142 (varYVals -> ID .)
    EQEQ            reduce using rule 142 (varYVals -> ID .)
    DISTINTO        reduce using rule 142 (varYVals -> ID .)
    >               reduce using rule 142 (varYVals -> ID .)
    <               reduce using rule 142 (varYVals -> ID .)
    )               reduce using rule 142 (varYVals -> ID .)
    :               reduce using rule 142 (varYVals -> ID .)
    }               reduce using rule 142 (varYVals -> ID .)
    [               shift and go to state 105


state 129

    (77) expresion -> ternario .

    ]               reduce using rule 77 (expresion -> ternario .)


state 130

    (79) expresion -> RES .

    ]               reduce using rule 79 (expresion -> RES .)


state 131

    (72) expresion -> STRING .
    (163) valoresMat -> STRING .

    ]               reduce using rule 72 (expresion -> STRING .)
    +               reduce using rule 163 (valoresMat -> STRING .)
    -               reduce using rule 163 (valoresMat -> STRING .)
    *               reduce using rule 163 (valoresMat -> STRING .)
    /               reduce using rule 163 (valoresMat -> STRING .)
    %               reduce using rule 163 (valoresMat -> STRING .)
    ^               reduce using rule 163 (valoresMat -> STRING .)


state 132

    (67) expresion -> eMat .
    (167) eMat -> eMat . + p
    (169) eMat -> eMat . + valoresMat
    (172) eMat -> eMat . - p
    (174) eMat -> eMat . - valoresMat
    (233) tCompareEQ -> eMat .
    (236) tCompare -> eMat .

    ]               reduce using rule 67 (expresion -> eMat .)
    +               shift and go to state 168
    -               shift and go to state 169
    EQEQ            reduce using rule 233 (tCompareEQ -> eMat .)
    DISTINTO        reduce using rule 233 (tCompareEQ -> eMat .)
    >               reduce using rule 236 (tCompare -> eMat .)
    <               reduce using rule 236 (tCompare -> eMat .)


state 133

    (76) expresion -> vec .
    (62) vecVal -> vec . [ expresion ]
    (65) vecVal -> vec . [ INT ]

    ]               reduce using rule 76 (expresion -> vec .)
    [               shift and go to state 115


state 134

    (70) expresion -> reg .
    (98) atributos -> reg . . valoresCampos

    ]               reduce using rule 70 (expresion -> reg .)
    .               shift and go to state 202


state 135

    (68) expresion -> expBool .
    (207) expBool -> expBool . OR and
    (209) expBool -> expBool . OR valoresBool
    (127) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (136) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (113) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars

    ]               reduce using rule 68 (expresion -> expBool .)
    OR              shift and go to state 203
    ?               shift and go to state 204


state 136

    (63) vecVal -> vecVal [ expresion . ]

    ]               shift and go to state 252


state 137

    (66) vecVal -> vecVal [ INT . ]
    (158) valoresMat -> INT .
    (230) tCompareEQ -> INT .
    (239) tCompare -> INT .

    ]               shift and go to state 253
    +               reduce using rule 158 (valoresMat -> INT .)
    -               reduce using rule 158 (valoresMat -> INT .)
    *               reduce using rule 158 (valoresMat -> INT .)
    /               reduce using rule 158 (valoresMat -> INT .)
    %               reduce using rule 158 (valoresMat -> INT .)
    ^               reduce using rule 158 (valoresMat -> INT .)
    EQEQ            reduce using rule 230 (tCompareEQ -> INT .)
    DISTINTO        reduce using rule 230 (tCompareEQ -> INT .)
    >               reduce using rule 239 (tCompare -> INT .)
    <               reduce using rule 239 (tCompare -> INT .)


state 138

    (69) expresion -> funcReturn .

    ]               reduce using rule 69 (expresion -> funcReturn .)


state 139

    (71) expresion -> FLOAT .
    (159) valoresMat -> FLOAT .
    (231) tCompareEQ -> FLOAT .
    (241) tCompare -> FLOAT .

    ]               reduce using rule 71 (expresion -> FLOAT .)
    +               reduce using rule 159 (valoresMat -> FLOAT .)
    -               reduce using rule 159 (valoresMat -> FLOAT .)
    *               reduce using rule 159 (valoresMat -> FLOAT .)
    /               reduce using rule 159 (valoresMat -> FLOAT .)
    %               reduce using rule 159 (valoresMat -> FLOAT .)
    ^               reduce using rule 159 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 231 (tCompareEQ -> FLOAT .)
    DISTINTO        reduce using rule 231 (tCompareEQ -> FLOAT .)
    >               reduce using rule 241 (tCompare -> FLOAT .)
    <               reduce using rule 241 (tCompare -> FLOAT .)


state 140

    (73) expresion -> BOOL .
    (201) valoresBool -> BOOL .
    (226) tCompareEQ -> BOOL .

    ]               reduce using rule 73 (expresion -> BOOL .)
    OR              reduce using rule 201 (valoresBool -> BOOL .)
    AND             reduce using rule 201 (valoresBool -> BOOL .)
    ?               reduce using rule 201 (valoresBool -> BOOL .)
    EQEQ            reduce using rule 226 (tCompareEQ -> BOOL .)
    DISTINTO        reduce using rule 226 (tCompareEQ -> BOOL .)


state 141

    (75) expresion -> varsOps .
    (165) valoresMat -> varsOps .
    (204) valoresBool -> varsOps .
    (229) tCompareEQ -> varsOps .
    (237) tCompare -> varsOps .

    ]               reduce using rule 75 (expresion -> varsOps .)
    +               reduce using rule 165 (valoresMat -> varsOps .)
    -               reduce using rule 165 (valoresMat -> varsOps .)
    *               reduce using rule 165 (valoresMat -> varsOps .)
    /               reduce using rule 165 (valoresMat -> varsOps .)
    %               reduce using rule 165 (valoresMat -> varsOps .)
    ^               reduce using rule 165 (valoresMat -> varsOps .)
    OR              reduce using rule 204 (valoresBool -> varsOps .)
    AND             reduce using rule 204 (valoresBool -> varsOps .)
    ?               reduce using rule 204 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 229 (tCompareEQ -> varsOps .)
    DISTINTO        reduce using rule 229 (tCompareEQ -> varsOps .)
    >               reduce using rule 237 (tCompare -> varsOps .)
    <               reduce using rule 237 (tCompare -> varsOps .)


state 142

    (74) expresion -> varYVals .
    (164) valoresMat -> varYVals .
    (203) valoresBool -> varYVals .
    (228) tCompareEQ -> varYVals .
    (238) tCompare -> varYVals .

    ]               reduce using rule 74 (expresion -> varYVals .)
    +               reduce using rule 164 (valoresMat -> varYVals .)
    -               reduce using rule 164 (valoresMat -> varYVals .)
    *               reduce using rule 164 (valoresMat -> varYVals .)
    /               reduce using rule 164 (valoresMat -> varYVals .)
    %               reduce using rule 164 (valoresMat -> varYVals .)
    ^               reduce using rule 164 (valoresMat -> varYVals .)
    OR              reduce using rule 203 (valoresBool -> varYVals .)
    AND             reduce using rule 203 (valoresBool -> varYVals .)
    ?               reduce using rule 203 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 228 (tCompareEQ -> varYVals .)
    DISTINTO        reduce using rule 228 (tCompareEQ -> varYVals .)
    >               reduce using rule 238 (tCompare -> varYVals .)
    <               reduce using rule 238 (tCompare -> varYVals .)


state 143

    (78) expresion -> atributos .
    (161) valoresMat -> atributos .

    ]               reduce using rule 78 (expresion -> atributos .)
    +               reduce using rule 161 (valoresMat -> atributos .)
    -               reduce using rule 161 (valoresMat -> atributos .)
    *               reduce using rule 161 (valoresMat -> atributos .)
    /               reduce using rule 161 (valoresMat -> atributos .)
    %               reduce using rule 161 (valoresMat -> atributos .)
    ^               reduce using rule 161 (valoresMat -> atributos .)


state 144

    (36) loop -> FOR ( primParam . ; valores ; tercerParam )

    ;               shift and go to state 254


state 145

    (152) varAsig -> variable . MULEQ valores
    (153) varAsig -> variable . DIVEQ valores
    (154) varAsig -> variable . MASEQ valores
    (155) varAsig -> variable . MENOSEQ valores
    (156) varAsig -> variable . = valores

    MULEQ           shift and go to state 57
    DIVEQ           shift and go to state 59
    MASEQ           shift and go to state 55
    MENOSEQ         shift and go to state 53
    =               shift and go to state 58


state 146

    (37) primParam -> varAsig .

    ;               reduce using rule 37 (primParam -> varAsig .)


state 147

    (38) primParam -> empty .

    ;               reduce using rule 38 (primParam -> empty .)


state 148

    (51) funcInt -> LENGTH ( valores . )

    )               shift and go to state 255


state 149

    (155) varAsig -> variable MENOSEQ valores .

    )               reduce using rule 155 (varAsig -> variable MENOSEQ valores .)
    ;               reduce using rule 155 (varAsig -> variable MENOSEQ valores .)


state 150

    (154) varAsig -> variable MASEQ valores .

    )               reduce using rule 154 (varAsig -> variable MASEQ valores .)
    ;               reduce using rule 154 (varAsig -> variable MASEQ valores .)


state 151

    (152) varAsig -> variable MULEQ valores .

    )               reduce using rule 152 (varAsig -> variable MULEQ valores .)
    ;               reduce using rule 152 (varAsig -> variable MULEQ valores .)


state 152

    (156) varAsig -> variable = valores .

    )               reduce using rule 156 (varAsig -> variable = valores .)
    ;               reduce using rule 156 (varAsig -> variable = valores .)


state 153

    (153) varAsig -> variable DIVEQ valores .

    )               reduce using rule 153 (varAsig -> variable DIVEQ valores .)
    ;               reduce using rule 153 (varAsig -> variable DIVEQ valores .)


state 154

    (212) and -> and AND . eq
    (214) and -> and AND . valoresBool
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (53) funcBool -> . COLINEALES ( valores , valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (58) vec -> . [ elem ]
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (250) parenBool -> . ( expBool )
    (94) reg -> . { campos }
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )

    BOOL            shift and go to state 187
    (               shift and go to state 229
    AND             reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    ?               reduce using rule 206 (valoresBool -> .)
    ,               reduce using rule 206 (valoresBool -> .)
    ]               reduce using rule 206 (valoresBool -> .)
    )               reduce using rule 206 (valoresBool -> .)
    ;               reduce using rule 206 (valoresBool -> .)
    :               reduce using rule 206 (valoresBool -> .)
    }               reduce using rule 206 (valoresBool -> .)
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    COLINEALES      shift and go to state 4
    ID              shift and go to state 230
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    [               shift and go to state 20
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77

    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 226
    variable                       shift and go to state 89
    menor                          shift and go to state 67
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 256
    mayor                          shift and go to state 81
    valoresBool                    shift and go to state 257
    eMat                           shift and go to state 228
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    not                            shift and go to state 66
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 234
    exp                            shift and go to state 100
    varYVals                       shift and go to state 235
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 155

    (59) elem -> valores , . elem
    (59) elem -> . valores , elem
    (60) elem -> . valores
    (80) valores -> . varYVals
    (81) valores -> . varsOps
    (82) valores -> . eMat
    (83) valores -> . expBool
    (84) valores -> . funcReturn
    (85) valores -> . reg
    (86) valores -> . INT
    (87) valores -> . FLOAT
    (88) valores -> . STRING
    (89) valores -> . BOOL
    (90) valores -> . ternario
    (91) valores -> . atributos
    (92) valores -> . vec
    (93) valores -> . RES
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (94) reg -> . { campos }
    (102) ternario -> . ternarioMat
    (103) ternario -> . ternarioBool
    (104) ternario -> . ( ternarioMat )
    (105) ternario -> . ( ternarioBool )
    (106) ternario -> . ternarioVars
    (107) ternario -> . ( ternarioVars )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    ?               reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    elem                           shift and go to state 258
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 65
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 156

    (181) p -> valoresMat % . exp
    (187) p -> valoresMat % . valoresMat
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (58) vec -> . [ elem ]

    INT             shift and go to state 197
    FLOAT           shift and go to state 196
    STRING          shift and go to state 181
    (               shift and go to state 260
    -               shift and go to state 78
    +               shift and go to state 77
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    [               shift and go to state 20

    valoresMat                     shift and go to state 259
    funcString                     shift and go to state 184
    funcInt                        shift and go to state 192
    vecVal                         shift and go to state 71
    vec                            shift and go to state 33
    iSing                          shift and go to state 85
    exp                            shift and go to state 261
    variable                       shift and go to state 89
    paren                          shift and go to state 88
    varYVals                       shift and go to state 199
    reg                            shift and go to state 180
    atributos                      shift and go to state 191
    varsOps                        shift and go to state 198

state 157

    (168) eMat -> valoresMat + . p
    (170) eMat -> valoresMat + . valoresMat
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (58) vec -> . [ elem ]

    INT             shift and go to state 197
    FLOAT           shift and go to state 196
    STRING          shift and go to state 181
    (               shift and go to state 260
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    -               shift and go to state 78
    +               shift and go to state 77
    {               shift and go to state 101
    [               shift and go to state 20

    funcInt                        shift and go to state 192
    valoresMat                     shift and go to state 262
    vecVal                         shift and go to state 71
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    exp                            shift and go to state 100
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 263
    varsOps                        shift and go to state 198
    varYVals                       shift and go to state 199
    atributos                      shift and go to state 191

state 158

    (179) p -> valoresMat * . exp
    (185) p -> valoresMat * . valoresMat
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (58) vec -> . [ elem ]

    INT             shift and go to state 197
    FLOAT           shift and go to state 196
    STRING          shift and go to state 181
    (               shift and go to state 260
    -               shift and go to state 78
    +               shift and go to state 77
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    [               shift and go to state 20

    valoresMat                     shift and go to state 264
    funcString                     shift and go to state 184
    funcInt                        shift and go to state 192
    vecVal                         shift and go to state 71
    vec                            shift and go to state 33
    iSing                          shift and go to state 85
    exp                            shift and go to state 265
    variable                       shift and go to state 89
    paren                          shift and go to state 88
    varYVals                       shift and go to state 199
    reg                            shift and go to state 180
    atributos                      shift and go to state 191
    varsOps                        shift and go to state 198

state 159

    (173) eMat -> valoresMat - . p
    (175) eMat -> valoresMat - . valoresMat
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (58) vec -> . [ elem ]

    INT             shift and go to state 197
    FLOAT           shift and go to state 196
    STRING          shift and go to state 181
    (               shift and go to state 260
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    -               shift and go to state 78
    +               shift and go to state 77
    {               shift and go to state 101
    [               shift and go to state 20

    funcInt                        shift and go to state 192
    valoresMat                     shift and go to state 266
    vecVal                         shift and go to state 71
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    exp                            shift and go to state 100
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 267
    varsOps                        shift and go to state 198
    varYVals                       shift and go to state 199
    atributos                      shift and go to state 191

state 160

    (180) p -> valoresMat / . exp
    (186) p -> valoresMat / . valoresMat
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (58) vec -> . [ elem ]

    INT             shift and go to state 197
    FLOAT           shift and go to state 196
    STRING          shift and go to state 181
    (               shift and go to state 260
    -               shift and go to state 78
    +               shift and go to state 77
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    [               shift and go to state 20

    valoresMat                     shift and go to state 268
    funcString                     shift and go to state 184
    funcInt                        shift and go to state 192
    vecVal                         shift and go to state 71
    vec                            shift and go to state 33
    iSing                          shift and go to state 85
    exp                            shift and go to state 269
    variable                       shift and go to state 89
    paren                          shift and go to state 88
    varYVals                       shift and go to state 199
    reg                            shift and go to state 180
    atributos                      shift and go to state 191
    varsOps                        shift and go to state 198

state 161

    (190) exp -> valoresMat ^ . iSing
    (192) exp -> valoresMat ^ . valoresMat
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (58) vec -> . [ elem ]

    -               shift and go to state 78
    +               shift and go to state 77
    INT             shift and go to state 197
    FLOAT           shift and go to state 196
    STRING          shift and go to state 181
    (               shift and go to state 260
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    [               shift and go to state 20

    funcString                     shift and go to state 184
    funcInt                        shift and go to state 192
    vecVal                         shift and go to state 71
    vec                            shift and go to state 33
    iSing                          shift and go to state 271
    valoresMat                     shift and go to state 270
    variable                       shift and go to state 89
    paren                          shift and go to state 88
    varYVals                       shift and go to state 199
    reg                            shift and go to state 180
    atributos                      shift and go to state 191
    varsOps                        shift and go to state 198

state 162

    (217) eq -> eq EQEQ . mayor
    (221) eq -> eq EQEQ . tCompareEQ
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (53) funcBool -> . COLINEALES ( valores , valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (250) parenBool -> . ( expBool )
    (58) vec -> . [ elem ]
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (94) reg -> . { campos }
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )

    BOOL            shift and go to state 277
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    (               shift and go to state 275
    COLINEALES      shift and go to state 4
    ID              shift and go to state 230
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    NOT             shift and go to state 99
    STRING          shift and go to state 181
    [               shift and go to state 20
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77

    funcBool                       shift and go to state 272
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    valoresMat                     shift and go to state 69
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 274
    tCompareEQ                     shift and go to state 276
    mayor                          shift and go to state 273
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 278
    exp                            shift and go to state 100
    varYVals                       shift and go to state 279
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 163

    (218) eq -> eq DISTINTO . mayor
    (222) eq -> eq DISTINTO . tCompareEQ
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (53) funcBool -> . COLINEALES ( valores , valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (250) parenBool -> . ( expBool )
    (58) vec -> . [ elem ]
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (94) reg -> . { campos }
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )

    BOOL            shift and go to state 277
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    (               shift and go to state 275
    COLINEALES      shift and go to state 4
    ID              shift and go to state 230
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    NOT             shift and go to state 99
    STRING          shift and go to state 181
    [               shift and go to state 20
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77

    funcBool                       shift and go to state 272
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    valoresMat                     shift and go to state 69
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 274
    tCompareEQ                     shift and go to state 281
    mayor                          shift and go to state 280
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 278
    exp                            shift and go to state 100
    varYVals                       shift and go to state 279
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 164

    (144) varYVals -> vecVal . . varYVals
    (151) variable -> vecVal . . varYVals
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (58) vec -> . [ elem ]

    ID              shift and go to state 128
    [               shift and go to state 20

    varYVals                       shift and go to state 282
    vecVal                         shift and go to state 126
    vec                            shift and go to state 33

state 165

    (213) and -> valoresBool AND . eq
    (215) and -> valoresBool AND . valoresBool
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (53) funcBool -> . COLINEALES ( valores , valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (58) vec -> . [ elem ]
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (250) parenBool -> . ( expBool )
    (94) reg -> . { campos }
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )

    BOOL            shift and go to state 187
    (               shift and go to state 229
    AND             reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    ?               reduce using rule 206 (valoresBool -> .)
    ,               reduce using rule 206 (valoresBool -> .)
    ]               reduce using rule 206 (valoresBool -> .)
    )               reduce using rule 206 (valoresBool -> .)
    ;               reduce using rule 206 (valoresBool -> .)
    :               reduce using rule 206 (valoresBool -> .)
    }               reduce using rule 206 (valoresBool -> .)
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    COLINEALES      shift and go to state 4
    ID              shift and go to state 230
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    [               shift and go to state 20
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77

    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 226
    variable                       shift and go to state 89
    menor                          shift and go to state 67
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 283
    mayor                          shift and go to state 81
    valoresBool                    shift and go to state 284
    eMat                           shift and go to state 228
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    not                            shift and go to state 66
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 234
    exp                            shift and go to state 100
    varYVals                       shift and go to state 235
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 166

    (208) expBool -> valoresBool OR . and
    (210) expBool -> valoresBool OR . valoresBool
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (53) funcBool -> . COLINEALES ( valores , valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (58) vec -> . [ elem ]
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (250) parenBool -> . ( expBool )
    (94) reg -> . { campos }
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )

    BOOL            shift and go to state 187
    (               shift and go to state 229
    AND             reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    ?               reduce using rule 206 (valoresBool -> .)
    ,               reduce using rule 206 (valoresBool -> .)
    ]               reduce using rule 206 (valoresBool -> .)
    )               reduce using rule 206 (valoresBool -> .)
    ;               reduce using rule 206 (valoresBool -> .)
    :               reduce using rule 206 (valoresBool -> .)
    }               reduce using rule 206 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 230
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    [               shift and go to state 20
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77

    and                            shift and go to state 285
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    mayor                          shift and go to state 81
    valoresBool                    shift and go to state 286
    eMat                           shift and go to state 228
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 234
    exp                            shift and go to state 100
    varYVals                       shift and go to state 235
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 167

    (126) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (137) valoresTernarioBool -> . BOOL
    (138) valoresTernarioBool -> . funcBool
    (139) valoresTernarioBool -> . ternarioBool
    (140) valoresTernarioBool -> . ( ternarioBool )
    (141) valoresTernarioBool -> . expBool
    (118) valoresTernarioVars -> . reg
    (119) valoresTernarioVars -> . vec
    (120) valoresTernarioVars -> . ternarioVars
    (121) valoresTernarioVars -> . ( ternarioVars )
    (122) valoresTernarioVars -> . atributos
    (123) valoresTernarioVars -> . varsOps
    (124) valoresTernarioVars -> . varYVals
    (125) valoresTernarioVars -> . RES
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (53) funcBool -> . COLINEALES ( valores , valores )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (94) reg -> . { campos }
    (58) vec -> . [ elem ]
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    (               shift and go to state 307
    BOOL            shift and go to state 305
    RES             shift and go to state 288
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 291
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 293
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 299
    expBool                        shift and go to state 306
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 302
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 297
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 309
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 168

    (167) eMat -> eMat + . p
    (169) eMat -> eMat + . valoresMat
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (58) vec -> . [ elem ]

    INT             shift and go to state 197
    FLOAT           shift and go to state 196
    STRING          shift and go to state 181
    (               shift and go to state 260
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    -               shift and go to state 78
    +               shift and go to state 77
    {               shift and go to state 101
    [               shift and go to state 20

    funcInt                        shift and go to state 192
    valoresMat                     shift and go to state 311
    vecVal                         shift and go to state 71
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    exp                            shift and go to state 100
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 312
    varsOps                        shift and go to state 198
    varYVals                       shift and go to state 199
    atributos                      shift and go to state 191

state 169

    (172) eMat -> eMat - . p
    (174) eMat -> eMat - . valoresMat
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (58) vec -> . [ elem ]

    INT             shift and go to state 197
    FLOAT           shift and go to state 196
    STRING          shift and go to state 181
    (               shift and go to state 260
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    -               shift and go to state 78
    +               shift and go to state 77
    {               shift and go to state 101
    [               shift and go to state 20

    funcInt                        shift and go to state 192
    valoresMat                     shift and go to state 313
    vecVal                         shift and go to state 71
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    exp                            shift and go to state 100
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 314
    varsOps                        shift and go to state 198
    varYVals                       shift and go to state 199
    atributos                      shift and go to state 191

state 170

    (219) eq -> tCompareEQ EQEQ . mayor
    (223) eq -> tCompareEQ EQEQ . tCompareEQ
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (53) funcBool -> . COLINEALES ( valores , valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (250) parenBool -> . ( expBool )
    (58) vec -> . [ elem ]
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (94) reg -> . { campos }
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )

    BOOL            shift and go to state 277
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    (               shift and go to state 275
    COLINEALES      shift and go to state 4
    ID              shift and go to state 230
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    NOT             shift and go to state 99
    STRING          shift and go to state 181
    [               shift and go to state 20
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77

    funcBool                       shift and go to state 272
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    valoresMat                     shift and go to state 69
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 274
    tCompareEQ                     shift and go to state 316
    mayor                          shift and go to state 315
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 278
    exp                            shift and go to state 100
    varYVals                       shift and go to state 279
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 171

    (220) eq -> tCompareEQ DISTINTO . mayor
    (224) eq -> tCompareEQ DISTINTO . tCompareEQ
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (53) funcBool -> . COLINEALES ( valores , valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (250) parenBool -> . ( expBool )
    (58) vec -> . [ elem ]
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (94) reg -> . { campos }
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )

    BOOL            shift and go to state 277
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    (               shift and go to state 275
    COLINEALES      shift and go to state 4
    ID              shift and go to state 230
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    NOT             shift and go to state 99
    STRING          shift and go to state 181
    [               shift and go to state 20
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77

    funcBool                       shift and go to state 272
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    valoresMat                     shift and go to state 69
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 274
    tCompareEQ                     shift and go to state 318
    mayor                          shift and go to state 317
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 278
    exp                            shift and go to state 100
    varYVals                       shift and go to state 279
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 172

    (202) valoresBool -> funcBool .
    (227) tCompareEQ -> funcBool .

    ?               reduce using rule 202 (valoresBool -> funcBool .)
    OR              reduce using rule 202 (valoresBool -> funcBool .)
    AND             reduce using rule 202 (valoresBool -> funcBool .)
    ,               reduce using rule 202 (valoresBool -> funcBool .)
    ]               reduce using rule 202 (valoresBool -> funcBool .)
    )               reduce using rule 202 (valoresBool -> funcBool .)
    ;               reduce using rule 202 (valoresBool -> funcBool .)
    :               reduce using rule 202 (valoresBool -> funcBool .)
    }               reduce using rule 202 (valoresBool -> funcBool .)
    EQEQ            reduce using rule 227 (tCompareEQ -> funcBool .)
    DISTINTO        reduce using rule 227 (tCompareEQ -> funcBool .)


state 173

    (160) valoresMat -> funcInt .
    (232) tCompareEQ -> funcInt .
    (240) tCompare -> funcInt .

    )               reduce using rule 160 (valoresMat -> funcInt .)
    +               reduce using rule 160 (valoresMat -> funcInt .)
    -               reduce using rule 160 (valoresMat -> funcInt .)
    *               reduce using rule 160 (valoresMat -> funcInt .)
    /               reduce using rule 160 (valoresMat -> funcInt .)
    %               reduce using rule 160 (valoresMat -> funcInt .)
    ^               reduce using rule 160 (valoresMat -> funcInt .)
    EQEQ            reduce using rule 232 (tCompareEQ -> funcInt .)
    DISTINTO        reduce using rule 232 (tCompareEQ -> funcInt .)
    >               reduce using rule 240 (tCompare -> funcInt .)
    <               reduce using rule 240 (tCompare -> funcInt .)


state 174

    (200) paren -> ( valoresMat . )
    (168) eMat -> valoresMat . + p
    (170) eMat -> valoresMat . + valoresMat
    (173) eMat -> valoresMat . - p
    (175) eMat -> valoresMat . - valoresMat
    (179) p -> valoresMat . * exp
    (180) p -> valoresMat . / exp
    (181) p -> valoresMat . % exp
    (185) p -> valoresMat . * valoresMat
    (186) p -> valoresMat . / valoresMat
    (187) p -> valoresMat . % valoresMat
    (190) exp -> valoresMat . ^ iSing
    (192) exp -> valoresMat . ^ valoresMat

    )               shift and go to state 319
    +               shift and go to state 157
    -               shift and go to state 159
    *               shift and go to state 158
    /               shift and go to state 160
    %               shift and go to state 156
    ^               shift and go to state 161


state 175

    (126) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (208) expBool -> valoresBool . OR and
    (210) expBool -> valoresBool . OR valoresBool
    (213) and -> valoresBool . AND eq
    (215) and -> valoresBool . AND valoresBool

    ?               shift and go to state 167
    OR              shift and go to state 166
    AND             shift and go to state 165


state 176

    (199) paren -> ( eMat . )
    (167) eMat -> eMat . + p
    (169) eMat -> eMat . + valoresMat
    (172) eMat -> eMat . - p
    (174) eMat -> eMat . - valoresMat
    (233) tCompareEQ -> eMat .
    (236) tCompare -> eMat .

    )               shift and go to state 320
    +               shift and go to state 168
    -               shift and go to state 169
    EQEQ            reduce using rule 233 (tCompareEQ -> eMat .)
    DISTINTO        reduce using rule 233 (tCompareEQ -> eMat .)
    >               reduce using rule 236 (tCompare -> eMat .)
    <               reduce using rule 236 (tCompare -> eMat .)


state 177

    (166) valoresMat -> ( . ternarioMat )
    (205) valoresBool -> ( . ternarioBool )
    (234) tCompareEQ -> ( . ternarioBool )
    (235) tCompareEQ -> ( . ternarioMat )
    (199) paren -> ( . eMat )
    (200) paren -> ( . valoresMat )
    (242) tCompare -> ( . ternarioMat )
    (250) parenBool -> ( . expBool )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (53) funcBool -> . COLINEALES ( valores , valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (58) vec -> . [ elem ]
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 177
    BOOL            shift and go to state 187
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    valoresBool                    shift and go to state 321
    ternarioMat                    shift and go to state 322
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 323
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    expBool                        shift and go to state 324
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 178

    (104) ternario -> ( ternarioMat . )
    (166) valoresMat -> ( ternarioMat . )
    (235) tCompareEQ -> ( ternarioMat . )
    (242) tCompare -> ( ternarioMat . )

    )               shift and go to state 325


state 179

    (165) valoresMat -> varsOps .
    (204) valoresBool -> varsOps .
    (229) tCompareEQ -> varsOps .
    (237) tCompare -> varsOps .

    )               reduce using rule 165 (valoresMat -> varsOps .)
    +               reduce using rule 165 (valoresMat -> varsOps .)
    -               reduce using rule 165 (valoresMat -> varsOps .)
    *               reduce using rule 165 (valoresMat -> varsOps .)
    /               reduce using rule 165 (valoresMat -> varsOps .)
    %               reduce using rule 165 (valoresMat -> varsOps .)
    ^               reduce using rule 165 (valoresMat -> varsOps .)
    ?               reduce using rule 204 (valoresBool -> varsOps .)
    OR              reduce using rule 204 (valoresBool -> varsOps .)
    AND             reduce using rule 204 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 229 (tCompareEQ -> varsOps .)
    DISTINTO        reduce using rule 229 (tCompareEQ -> varsOps .)
    >               reduce using rule 237 (tCompare -> varsOps .)
    <               reduce using rule 237 (tCompare -> varsOps .)


state 180

    (98) atributos -> reg . . valoresCampos

    .               shift and go to state 202


state 181

    (163) valoresMat -> STRING .

    +               reduce using rule 163 (valoresMat -> STRING .)
    -               reduce using rule 163 (valoresMat -> STRING .)
    *               reduce using rule 163 (valoresMat -> STRING .)
    /               reduce using rule 163 (valoresMat -> STRING .)
    %               reduce using rule 163 (valoresMat -> STRING .)
    ^               reduce using rule 163 (valoresMat -> STRING .)
    )               reduce using rule 163 (valoresMat -> STRING .)
    ,               reduce using rule 163 (valoresMat -> STRING .)
    ]               reduce using rule 163 (valoresMat -> STRING .)
    EQEQ            reduce using rule 163 (valoresMat -> STRING .)
    DISTINTO        reduce using rule 163 (valoresMat -> STRING .)
    >               reduce using rule 163 (valoresMat -> STRING .)
    <               reduce using rule 163 (valoresMat -> STRING .)
    ;               reduce using rule 163 (valoresMat -> STRING .)
    AND             reduce using rule 163 (valoresMat -> STRING .)
    OR              reduce using rule 163 (valoresMat -> STRING .)
    ?               reduce using rule 163 (valoresMat -> STRING .)
    :               reduce using rule 163 (valoresMat -> STRING .)
    }               reduce using rule 163 (valoresMat -> STRING .)


state 182

    (105) ternario -> ( ternarioBool . )
    (205) valoresBool -> ( ternarioBool . )
    (234) tCompareEQ -> ( ternarioBool . )

    )               shift and go to state 326


state 183

    (97) atributos -> ID . . valoresCampos
    (142) varYVals -> ID .
    (61) vecVal -> ID . [ expresion ]
    (64) vecVal -> ID . [ INT ]
    (149) variable -> ID .

    .               shift and go to state 207
    )               reduce using rule 142 (varYVals -> ID .)
    +               reduce using rule 142 (varYVals -> ID .)
    -               reduce using rule 142 (varYVals -> ID .)
    *               reduce using rule 142 (varYVals -> ID .)
    /               reduce using rule 142 (varYVals -> ID .)
    %               reduce using rule 142 (varYVals -> ID .)
    ^               reduce using rule 142 (varYVals -> ID .)
    ?               reduce using rule 142 (varYVals -> ID .)
    OR              reduce using rule 142 (varYVals -> ID .)
    AND             reduce using rule 142 (varYVals -> ID .)
    EQEQ            reduce using rule 142 (varYVals -> ID .)
    DISTINTO        reduce using rule 142 (varYVals -> ID .)
    >               reduce using rule 142 (varYVals -> ID .)
    <               reduce using rule 142 (varYVals -> ID .)
    ,               reduce using rule 142 (varYVals -> ID .)
    ]               reduce using rule 142 (varYVals -> ID .)
    ;               reduce using rule 142 (varYVals -> ID .)
    :               reduce using rule 142 (varYVals -> ID .)
    }               reduce using rule 142 (varYVals -> ID .)
    [               shift and go to state 105
    MASMAS          reduce using rule 149 (variable -> ID .)
    MENOSMENOS      reduce using rule 149 (variable -> ID .)


state 184

    (162) valoresMat -> funcString .

    +               reduce using rule 162 (valoresMat -> funcString .)
    -               reduce using rule 162 (valoresMat -> funcString .)
    *               reduce using rule 162 (valoresMat -> funcString .)
    /               reduce using rule 162 (valoresMat -> funcString .)
    %               reduce using rule 162 (valoresMat -> funcString .)
    ^               reduce using rule 162 (valoresMat -> funcString .)
    )               reduce using rule 162 (valoresMat -> funcString .)
    ,               reduce using rule 162 (valoresMat -> funcString .)
    ]               reduce using rule 162 (valoresMat -> funcString .)
    EQEQ            reduce using rule 162 (valoresMat -> funcString .)
    DISTINTO        reduce using rule 162 (valoresMat -> funcString .)
    >               reduce using rule 162 (valoresMat -> funcString .)
    <               reduce using rule 162 (valoresMat -> funcString .)
    ;               reduce using rule 162 (valoresMat -> funcString .)
    AND             reduce using rule 162 (valoresMat -> funcString .)
    OR              reduce using rule 162 (valoresMat -> funcString .)
    ?               reduce using rule 162 (valoresMat -> funcString .)
    :               reduce using rule 162 (valoresMat -> funcString .)
    }               reduce using rule 162 (valoresMat -> funcString .)


state 185

    (158) valoresMat -> INT .
    (230) tCompareEQ -> INT .
    (239) tCompare -> INT .

    )               reduce using rule 158 (valoresMat -> INT .)
    +               reduce using rule 158 (valoresMat -> INT .)
    -               reduce using rule 158 (valoresMat -> INT .)
    *               reduce using rule 158 (valoresMat -> INT .)
    /               reduce using rule 158 (valoresMat -> INT .)
    %               reduce using rule 158 (valoresMat -> INT .)
    ^               reduce using rule 158 (valoresMat -> INT .)
    EQEQ            reduce using rule 230 (tCompareEQ -> INT .)
    DISTINTO        reduce using rule 230 (tCompareEQ -> INT .)
    >               reduce using rule 239 (tCompare -> INT .)
    <               reduce using rule 239 (tCompare -> INT .)


state 186

    (159) valoresMat -> FLOAT .
    (231) tCompareEQ -> FLOAT .
    (241) tCompare -> FLOAT .

    )               reduce using rule 159 (valoresMat -> FLOAT .)
    +               reduce using rule 159 (valoresMat -> FLOAT .)
    -               reduce using rule 159 (valoresMat -> FLOAT .)
    *               reduce using rule 159 (valoresMat -> FLOAT .)
    /               reduce using rule 159 (valoresMat -> FLOAT .)
    %               reduce using rule 159 (valoresMat -> FLOAT .)
    ^               reduce using rule 159 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 231 (tCompareEQ -> FLOAT .)
    DISTINTO        reduce using rule 231 (tCompareEQ -> FLOAT .)
    >               reduce using rule 241 (tCompare -> FLOAT .)
    <               reduce using rule 241 (tCompare -> FLOAT .)


state 187

    (201) valoresBool -> BOOL .
    (226) tCompareEQ -> BOOL .

    ?               reduce using rule 201 (valoresBool -> BOOL .)
    OR              reduce using rule 201 (valoresBool -> BOOL .)
    AND             reduce using rule 201 (valoresBool -> BOOL .)
    ,               reduce using rule 201 (valoresBool -> BOOL .)
    ]               reduce using rule 201 (valoresBool -> BOOL .)
    )               reduce using rule 201 (valoresBool -> BOOL .)
    ;               reduce using rule 201 (valoresBool -> BOOL .)
    :               reduce using rule 201 (valoresBool -> BOOL .)
    }               reduce using rule 201 (valoresBool -> BOOL .)
    EQEQ            reduce using rule 226 (tCompareEQ -> BOOL .)
    DISTINTO        reduce using rule 226 (tCompareEQ -> BOOL .)


state 188

    (250) parenBool -> ( expBool . )
    (127) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (136) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (113) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (207) expBool -> expBool . OR and
    (209) expBool -> expBool . OR valoresBool

    )               shift and go to state 327
    ?               shift and go to state 204
    OR              shift and go to state 203


state 189

    (107) ternario -> ( ternarioVars . )

    )               shift and go to state 328


state 190

    (164) valoresMat -> varYVals .
    (203) valoresBool -> varYVals .
    (228) tCompareEQ -> varYVals .
    (238) tCompare -> varYVals .

    )               reduce using rule 164 (valoresMat -> varYVals .)
    +               reduce using rule 164 (valoresMat -> varYVals .)
    -               reduce using rule 164 (valoresMat -> varYVals .)
    *               reduce using rule 164 (valoresMat -> varYVals .)
    /               reduce using rule 164 (valoresMat -> varYVals .)
    %               reduce using rule 164 (valoresMat -> varYVals .)
    ^               reduce using rule 164 (valoresMat -> varYVals .)
    ?               reduce using rule 203 (valoresBool -> varYVals .)
    OR              reduce using rule 203 (valoresBool -> varYVals .)
    AND             reduce using rule 203 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 228 (tCompareEQ -> varYVals .)
    DISTINTO        reduce using rule 228 (tCompareEQ -> varYVals .)
    >               reduce using rule 238 (tCompare -> varYVals .)
    <               reduce using rule 238 (tCompare -> varYVals .)


state 191

    (161) valoresMat -> atributos .

    +               reduce using rule 161 (valoresMat -> atributos .)
    -               reduce using rule 161 (valoresMat -> atributos .)
    *               reduce using rule 161 (valoresMat -> atributos .)
    /               reduce using rule 161 (valoresMat -> atributos .)
    %               reduce using rule 161 (valoresMat -> atributos .)
    ^               reduce using rule 161 (valoresMat -> atributos .)
    )               reduce using rule 161 (valoresMat -> atributos .)
    ,               reduce using rule 161 (valoresMat -> atributos .)
    ]               reduce using rule 161 (valoresMat -> atributos .)
    EQEQ            reduce using rule 161 (valoresMat -> atributos .)
    DISTINTO        reduce using rule 161 (valoresMat -> atributos .)
    >               reduce using rule 161 (valoresMat -> atributos .)
    <               reduce using rule 161 (valoresMat -> atributos .)
    ;               reduce using rule 161 (valoresMat -> atributos .)
    AND             reduce using rule 161 (valoresMat -> atributos .)
    OR              reduce using rule 161 (valoresMat -> atributos .)
    ?               reduce using rule 161 (valoresMat -> atributos .)
    :               reduce using rule 161 (valoresMat -> atributos .)
    }               reduce using rule 161 (valoresMat -> atributos .)


state 192

    (160) valoresMat -> funcInt .

    ^               reduce using rule 160 (valoresMat -> funcInt .)
    *               reduce using rule 160 (valoresMat -> funcInt .)
    /               reduce using rule 160 (valoresMat -> funcInt .)
    %               reduce using rule 160 (valoresMat -> funcInt .)
    +               reduce using rule 160 (valoresMat -> funcInt .)
    -               reduce using rule 160 (valoresMat -> funcInt .)
    ,               reduce using rule 160 (valoresMat -> funcInt .)
    ]               reduce using rule 160 (valoresMat -> funcInt .)
    EQEQ            reduce using rule 160 (valoresMat -> funcInt .)
    DISTINTO        reduce using rule 160 (valoresMat -> funcInt .)
    >               reduce using rule 160 (valoresMat -> funcInt .)
    <               reduce using rule 160 (valoresMat -> funcInt .)
    )               reduce using rule 160 (valoresMat -> funcInt .)
    ;               reduce using rule 160 (valoresMat -> funcInt .)
    AND             reduce using rule 160 (valoresMat -> funcInt .)
    OR              reduce using rule 160 (valoresMat -> funcInt .)
    ?               reduce using rule 160 (valoresMat -> funcInt .)
    :               reduce using rule 160 (valoresMat -> funcInt .)
    }               reduce using rule 160 (valoresMat -> funcInt .)


state 193

    (197) iSing -> + valoresMat .

    ^               reduce using rule 197 (iSing -> + valoresMat .)
    *               reduce using rule 197 (iSing -> + valoresMat .)
    /               reduce using rule 197 (iSing -> + valoresMat .)
    %               reduce using rule 197 (iSing -> + valoresMat .)
    +               reduce using rule 197 (iSing -> + valoresMat .)
    -               reduce using rule 197 (iSing -> + valoresMat .)
    )               reduce using rule 197 (iSing -> + valoresMat .)
    EQEQ            reduce using rule 197 (iSing -> + valoresMat .)
    DISTINTO        reduce using rule 197 (iSing -> + valoresMat .)
    >               reduce using rule 197 (iSing -> + valoresMat .)
    <               reduce using rule 197 (iSing -> + valoresMat .)
    :               reduce using rule 197 (iSing -> + valoresMat .)
    ,               reduce using rule 197 (iSing -> + valoresMat .)
    ]               reduce using rule 197 (iSing -> + valoresMat .)
    ;               reduce using rule 197 (iSing -> + valoresMat .)
    AND             reduce using rule 197 (iSing -> + valoresMat .)
    OR              reduce using rule 197 (iSing -> + valoresMat .)
    ?               reduce using rule 197 (iSing -> + valoresMat .)
    }               reduce using rule 197 (iSing -> + valoresMat .)


state 194

    (199) paren -> ( . eMat )
    (200) paren -> ( . valoresMat )
    (166) valoresMat -> ( . ternarioMat )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (53) funcBool -> . COLINEALES ( valores , valores )
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (58) vec -> . [ elem ]
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 330
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    BOOL            shift and go to state 187
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    {               shift and go to state 101
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    atributos                      shift and go to state 191
    valoresBool                    shift and go to state 329
    ternarioMat                    shift and go to state 331
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    exp                            shift and go to state 100
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 179
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 332

state 195

    (195) iSing -> + paren .

    ^               reduce using rule 195 (iSing -> + paren .)
    *               reduce using rule 195 (iSing -> + paren .)
    /               reduce using rule 195 (iSing -> + paren .)
    %               reduce using rule 195 (iSing -> + paren .)
    +               reduce using rule 195 (iSing -> + paren .)
    -               reduce using rule 195 (iSing -> + paren .)
    )               reduce using rule 195 (iSing -> + paren .)
    EQEQ            reduce using rule 195 (iSing -> + paren .)
    DISTINTO        reduce using rule 195 (iSing -> + paren .)
    >               reduce using rule 195 (iSing -> + paren .)
    <               reduce using rule 195 (iSing -> + paren .)
    :               reduce using rule 195 (iSing -> + paren .)
    ,               reduce using rule 195 (iSing -> + paren .)
    ]               reduce using rule 195 (iSing -> + paren .)
    ;               reduce using rule 195 (iSing -> + paren .)
    AND             reduce using rule 195 (iSing -> + paren .)
    OR              reduce using rule 195 (iSing -> + paren .)
    ?               reduce using rule 195 (iSing -> + paren .)
    }               reduce using rule 195 (iSing -> + paren .)


state 196

    (159) valoresMat -> FLOAT .

    ^               reduce using rule 159 (valoresMat -> FLOAT .)
    *               reduce using rule 159 (valoresMat -> FLOAT .)
    /               reduce using rule 159 (valoresMat -> FLOAT .)
    %               reduce using rule 159 (valoresMat -> FLOAT .)
    +               reduce using rule 159 (valoresMat -> FLOAT .)
    -               reduce using rule 159 (valoresMat -> FLOAT .)
    ,               reduce using rule 159 (valoresMat -> FLOAT .)
    ]               reduce using rule 159 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 159 (valoresMat -> FLOAT .)
    DISTINTO        reduce using rule 159 (valoresMat -> FLOAT .)
    >               reduce using rule 159 (valoresMat -> FLOAT .)
    <               reduce using rule 159 (valoresMat -> FLOAT .)
    )               reduce using rule 159 (valoresMat -> FLOAT .)
    ;               reduce using rule 159 (valoresMat -> FLOAT .)
    AND             reduce using rule 159 (valoresMat -> FLOAT .)
    OR              reduce using rule 159 (valoresMat -> FLOAT .)
    ?               reduce using rule 159 (valoresMat -> FLOAT .)
    :               reduce using rule 159 (valoresMat -> FLOAT .)
    }               reduce using rule 159 (valoresMat -> FLOAT .)


state 197

    (158) valoresMat -> INT .

    ^               reduce using rule 158 (valoresMat -> INT .)
    *               reduce using rule 158 (valoresMat -> INT .)
    /               reduce using rule 158 (valoresMat -> INT .)
    %               reduce using rule 158 (valoresMat -> INT .)
    +               reduce using rule 158 (valoresMat -> INT .)
    -               reduce using rule 158 (valoresMat -> INT .)
    ,               reduce using rule 158 (valoresMat -> INT .)
    ]               reduce using rule 158 (valoresMat -> INT .)
    EQEQ            reduce using rule 158 (valoresMat -> INT .)
    DISTINTO        reduce using rule 158 (valoresMat -> INT .)
    >               reduce using rule 158 (valoresMat -> INT .)
    <               reduce using rule 158 (valoresMat -> INT .)
    )               reduce using rule 158 (valoresMat -> INT .)
    ;               reduce using rule 158 (valoresMat -> INT .)
    AND             reduce using rule 158 (valoresMat -> INT .)
    OR              reduce using rule 158 (valoresMat -> INT .)
    ?               reduce using rule 158 (valoresMat -> INT .)
    :               reduce using rule 158 (valoresMat -> INT .)
    }               reduce using rule 158 (valoresMat -> INT .)


state 198

    (165) valoresMat -> varsOps .

    ^               reduce using rule 165 (valoresMat -> varsOps .)
    *               reduce using rule 165 (valoresMat -> varsOps .)
    /               reduce using rule 165 (valoresMat -> varsOps .)
    %               reduce using rule 165 (valoresMat -> varsOps .)
    +               reduce using rule 165 (valoresMat -> varsOps .)
    -               reduce using rule 165 (valoresMat -> varsOps .)
    ,               reduce using rule 165 (valoresMat -> varsOps .)
    ]               reduce using rule 165 (valoresMat -> varsOps .)
    EQEQ            reduce using rule 165 (valoresMat -> varsOps .)
    DISTINTO        reduce using rule 165 (valoresMat -> varsOps .)
    >               reduce using rule 165 (valoresMat -> varsOps .)
    <               reduce using rule 165 (valoresMat -> varsOps .)
    )               reduce using rule 165 (valoresMat -> varsOps .)
    ;               reduce using rule 165 (valoresMat -> varsOps .)
    AND             reduce using rule 165 (valoresMat -> varsOps .)
    OR              reduce using rule 165 (valoresMat -> varsOps .)
    ?               reduce using rule 165 (valoresMat -> varsOps .)
    :               reduce using rule 165 (valoresMat -> varsOps .)
    }               reduce using rule 165 (valoresMat -> varsOps .)


state 199

    (164) valoresMat -> varYVals .

    ^               reduce using rule 164 (valoresMat -> varYVals .)
    *               reduce using rule 164 (valoresMat -> varYVals .)
    /               reduce using rule 164 (valoresMat -> varYVals .)
    %               reduce using rule 164 (valoresMat -> varYVals .)
    +               reduce using rule 164 (valoresMat -> varYVals .)
    -               reduce using rule 164 (valoresMat -> varYVals .)
    ,               reduce using rule 164 (valoresMat -> varYVals .)
    ]               reduce using rule 164 (valoresMat -> varYVals .)
    EQEQ            reduce using rule 164 (valoresMat -> varYVals .)
    DISTINTO        reduce using rule 164 (valoresMat -> varYVals .)
    >               reduce using rule 164 (valoresMat -> varYVals .)
    <               reduce using rule 164 (valoresMat -> varYVals .)
    )               reduce using rule 164 (valoresMat -> varYVals .)
    ;               reduce using rule 164 (valoresMat -> varYVals .)
    AND             reduce using rule 164 (valoresMat -> varYVals .)
    OR              reduce using rule 164 (valoresMat -> varYVals .)
    ?               reduce using rule 164 (valoresMat -> varYVals .)
    :               reduce using rule 164 (valoresMat -> varYVals .)
    }               reduce using rule 164 (valoresMat -> varYVals .)


state 200

    (196) iSing -> - valoresMat .

    ^               reduce using rule 196 (iSing -> - valoresMat .)
    *               reduce using rule 196 (iSing -> - valoresMat .)
    /               reduce using rule 196 (iSing -> - valoresMat .)
    %               reduce using rule 196 (iSing -> - valoresMat .)
    +               reduce using rule 196 (iSing -> - valoresMat .)
    -               reduce using rule 196 (iSing -> - valoresMat .)
    )               reduce using rule 196 (iSing -> - valoresMat .)
    EQEQ            reduce using rule 196 (iSing -> - valoresMat .)
    DISTINTO        reduce using rule 196 (iSing -> - valoresMat .)
    >               reduce using rule 196 (iSing -> - valoresMat .)
    <               reduce using rule 196 (iSing -> - valoresMat .)
    :               reduce using rule 196 (iSing -> - valoresMat .)
    ,               reduce using rule 196 (iSing -> - valoresMat .)
    ]               reduce using rule 196 (iSing -> - valoresMat .)
    ;               reduce using rule 196 (iSing -> - valoresMat .)
    AND             reduce using rule 196 (iSing -> - valoresMat .)
    OR              reduce using rule 196 (iSing -> - valoresMat .)
    ?               reduce using rule 196 (iSing -> - valoresMat .)
    }               reduce using rule 196 (iSing -> - valoresMat .)


state 201

    (194) iSing -> - paren .

    ^               reduce using rule 194 (iSing -> - paren .)
    *               reduce using rule 194 (iSing -> - paren .)
    /               reduce using rule 194 (iSing -> - paren .)
    %               reduce using rule 194 (iSing -> - paren .)
    +               reduce using rule 194 (iSing -> - paren .)
    -               reduce using rule 194 (iSing -> - paren .)
    )               reduce using rule 194 (iSing -> - paren .)
    EQEQ            reduce using rule 194 (iSing -> - paren .)
    DISTINTO        reduce using rule 194 (iSing -> - paren .)
    >               reduce using rule 194 (iSing -> - paren .)
    <               reduce using rule 194 (iSing -> - paren .)
    :               reduce using rule 194 (iSing -> - paren .)
    ,               reduce using rule 194 (iSing -> - paren .)
    ]               reduce using rule 194 (iSing -> - paren .)
    ;               reduce using rule 194 (iSing -> - paren .)
    AND             reduce using rule 194 (iSing -> - paren .)
    OR              reduce using rule 194 (iSing -> - paren .)
    ?               reduce using rule 194 (iSing -> - paren .)
    }               reduce using rule 194 (iSing -> - paren .)


state 202

    (98) atributos -> reg . . valoresCampos
    (99) valoresCampos -> . varYVals
    (100) valoresCampos -> . END
    (101) valoresCampos -> . BEGIN
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (58) vec -> . [ elem ]

    END             shift and go to state 334
    BEGIN           shift and go to state 333
    ID              shift and go to state 128
    [               shift and go to state 20

    vecVal                         shift and go to state 126
    vec                            shift and go to state 33
    valoresCampos                  shift and go to state 335
    varYVals                       shift and go to state 336

state 203

    (207) expBool -> expBool OR . and
    (209) expBool -> expBool OR . valoresBool
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (53) funcBool -> . COLINEALES ( valores , valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (58) vec -> . [ elem ]
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (250) parenBool -> . ( expBool )
    (94) reg -> . { campos }
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )

    BOOL            shift and go to state 187
    (               shift and go to state 229
    AND             reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    ?               reduce using rule 206 (valoresBool -> .)
    ,               reduce using rule 206 (valoresBool -> .)
    ]               reduce using rule 206 (valoresBool -> .)
    )               reduce using rule 206 (valoresBool -> .)
    ;               reduce using rule 206 (valoresBool -> .)
    :               reduce using rule 206 (valoresBool -> .)
    }               reduce using rule 206 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 230
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    [               shift and go to state 20
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77

    and                            shift and go to state 337
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    mayor                          shift and go to state 81
    valoresBool                    shift and go to state 338
    eMat                           shift and go to state 228
    tCompareEQ                     shift and go to state 75
    atributos                      shift and go to state 191
    vecVal                         shift and go to state 71
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 234
    exp                            shift and go to state 100
    varYVals                       shift and go to state 235
    parenBool                      shift and go to state 86

state 204

    (127) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (136) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (113) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (137) valoresTernarioBool -> . BOOL
    (138) valoresTernarioBool -> . funcBool
    (139) valoresTernarioBool -> . ternarioBool
    (140) valoresTernarioBool -> . ( ternarioBool )
    (141) valoresTernarioBool -> . expBool
    (118) valoresTernarioVars -> . reg
    (119) valoresTernarioVars -> . vec
    (120) valoresTernarioVars -> . ternarioVars
    (121) valoresTernarioVars -> . ( ternarioVars )
    (122) valoresTernarioVars -> . atributos
    (123) valoresTernarioVars -> . varsOps
    (124) valoresTernarioVars -> . varYVals
    (125) valoresTernarioVars -> . RES
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (53) funcBool -> . COLINEALES ( valores , valores )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (94) reg -> . { campos }
    (58) vec -> . [ elem ]
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    (               shift and go to state 307
    BOOL            shift and go to state 305
    RES             shift and go to state 288
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 291
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 339
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 340
    expBool                        shift and go to state 306
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 341
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 297
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 309
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 205

    (245) menor -> tCompare < . tCompare
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (58) vec -> . [ elem ]
    (94) reg -> . { campos }
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )

    INT             shift and go to state 347
    FLOAT           shift and go to state 348
    (               shift and go to state 344
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 346
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    CAPITALIZAR     shift and go to state 27
    [               shift and go to state 20
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77

    funcInt                        shift and go to state 342
    valoresMat                     shift and go to state 69
    vecVal                         shift and go to state 290
    eMat                           shift and go to state 343
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 349
    exp                            shift and go to state 100
    tCompare                       shift and go to state 345
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    iSing                          shift and go to state 85
    varYVals                       shift and go to state 350
    atributos                      shift and go to state 191

state 206

    (243) mayor -> tCompare > . tCompare
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (58) vec -> . [ elem ]
    (94) reg -> . { campos }
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )

    INT             shift and go to state 347
    FLOAT           shift and go to state 348
    (               shift and go to state 344
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 346
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    CAPITALIZAR     shift and go to state 27
    [               shift and go to state 20
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77

    funcInt                        shift and go to state 342
    valoresMat                     shift and go to state 69
    vecVal                         shift and go to state 290
    eMat                           shift and go to state 343
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 349
    exp                            shift and go to state 100
    tCompare                       shift and go to state 351
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    iSing                          shift and go to state 85
    varYVals                       shift and go to state 350
    atributos                      shift and go to state 191

state 207

    (97) atributos -> ID . . valoresCampos
    (99) valoresCampos -> . varYVals
    (100) valoresCampos -> . END
    (101) valoresCampos -> . BEGIN
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (58) vec -> . [ elem ]

    END             shift and go to state 334
    BEGIN           shift and go to state 333
    ID              shift and go to state 128
    [               shift and go to state 20

    vec                            shift and go to state 33
    valoresCampos                  shift and go to state 352
    varYVals                       shift and go to state 336
    vecVal                         shift and go to state 126

state 208

    (58) vec -> [ elem ] .

    [               reduce using rule 58 (vec -> [ elem ] .)
    :               reduce using rule 58 (vec -> [ elem ] .)
    ,               reduce using rule 58 (vec -> [ elem ] .)
    ]               reduce using rule 58 (vec -> [ elem ] .)
    )               reduce using rule 58 (vec -> [ elem ] .)
    ;               reduce using rule 58 (vec -> [ elem ] .)
    }               reduce using rule 58 (vec -> [ elem ] .)


state 209

    (178) p -> p % . exp
    (184) p -> p % . valoresMat
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (58) vec -> . [ elem ]

    INT             shift and go to state 197
    FLOAT           shift and go to state 196
    STRING          shift and go to state 181
    (               shift and go to state 260
    -               shift and go to state 78
    +               shift and go to state 77
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    [               shift and go to state 20

    funcInt                        shift and go to state 192
    valoresMat                     shift and go to state 353
    vecVal                         shift and go to state 71
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 198
    exp                            shift and go to state 354
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    iSing                          shift and go to state 85
    varYVals                       shift and go to state 199
    atributos                      shift and go to state 191

state 210

    (176) p -> p * . exp
    (182) p -> p * . valoresMat
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (58) vec -> . [ elem ]

    INT             shift and go to state 197
    FLOAT           shift and go to state 196
    STRING          shift and go to state 181
    (               shift and go to state 260
    -               shift and go to state 78
    +               shift and go to state 77
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    [               shift and go to state 20

    funcInt                        shift and go to state 192
    valoresMat                     shift and go to state 355
    vecVal                         shift and go to state 71
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 198
    exp                            shift and go to state 356
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    iSing                          shift and go to state 85
    varYVals                       shift and go to state 199
    atributos                      shift and go to state 191

state 211

    (177) p -> p / . exp
    (183) p -> p / . valoresMat
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (58) vec -> . [ elem ]

    INT             shift and go to state 197
    FLOAT           shift and go to state 196
    STRING          shift and go to state 181
    (               shift and go to state 260
    -               shift and go to state 78
    +               shift and go to state 77
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    [               shift and go to state 20

    funcInt                        shift and go to state 192
    valoresMat                     shift and go to state 357
    vecVal                         shift and go to state 71
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 198
    exp                            shift and go to state 358
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    iSing                          shift and go to state 85
    varYVals                       shift and go to state 199
    atributos                      shift and go to state 191

state 212

    (202) valoresBool -> funcBool .

    EQEQ            reduce using rule 202 (valoresBool -> funcBool .)
    DISTINTO        reduce using rule 202 (valoresBool -> funcBool .)
    AND             reduce using rule 202 (valoresBool -> funcBool .)
    OR              reduce using rule 202 (valoresBool -> funcBool .)
    ?               reduce using rule 202 (valoresBool -> funcBool .)
    ,               reduce using rule 202 (valoresBool -> funcBool .)
    ]               reduce using rule 202 (valoresBool -> funcBool .)
    )               reduce using rule 202 (valoresBool -> funcBool .)
    ;               reduce using rule 202 (valoresBool -> funcBool .)
    :               reduce using rule 202 (valoresBool -> funcBool .)
    }               reduce using rule 202 (valoresBool -> funcBool .)


state 213

    (248) not -> NOT valoresBool .

    EQEQ            reduce using rule 248 (not -> NOT valoresBool .)
    DISTINTO        reduce using rule 248 (not -> NOT valoresBool .)
    AND             reduce using rule 248 (not -> NOT valoresBool .)
    OR              reduce using rule 248 (not -> NOT valoresBool .)
    ?               reduce using rule 248 (not -> NOT valoresBool .)
    ]               reduce using rule 248 (not -> NOT valoresBool .)
    :               reduce using rule 248 (not -> NOT valoresBool .)
    )               reduce using rule 248 (not -> NOT valoresBool .)
    ,               reduce using rule 248 (not -> NOT valoresBool .)
    ;               reduce using rule 248 (not -> NOT valoresBool .)
    }               reduce using rule 248 (not -> NOT valoresBool .)


state 214

    (205) valoresBool -> ( . ternarioBool )
    (250) parenBool -> ( . expBool )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (53) funcBool -> . COLINEALES ( valores , valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (58) vec -> . [ elem ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (250) parenBool -> . ( expBool )
    (94) reg -> . { campos }
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )

    BOOL            shift and go to state 187
    (               shift and go to state 229
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 230
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77

    and                            shift and go to state 60
    atributos                      shift and go to state 191
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    valoresBool                    shift and go to state 359
    eMat                           shift and go to state 228
    p                              shift and go to state 96
    mayor                          shift and go to state 81
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    ternarioBool                   shift and go to state 360
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    tCompareEQ                     shift and go to state 75
    varsOps                        shift and go to state 234
    exp                            shift and go to state 100
    varYVals                       shift and go to state 235
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 361

state 215

    (247) not -> NOT not .

    EQEQ            reduce using rule 247 (not -> NOT not .)
    DISTINTO        reduce using rule 247 (not -> NOT not .)
    AND             reduce using rule 247 (not -> NOT not .)
    OR              reduce using rule 247 (not -> NOT not .)
    ?               reduce using rule 247 (not -> NOT not .)
    ]               reduce using rule 247 (not -> NOT not .)
    :               reduce using rule 247 (not -> NOT not .)
    )               reduce using rule 247 (not -> NOT not .)
    ,               reduce using rule 247 (not -> NOT not .)
    ;               reduce using rule 247 (not -> NOT not .)
    }               reduce using rule 247 (not -> NOT not .)


state 216

    (142) varYVals -> ID .
    (61) vecVal -> ID . [ expresion ]
    (64) vecVal -> ID . [ INT ]
    (149) variable -> ID .

    EQEQ            reduce using rule 142 (varYVals -> ID .)
    DISTINTO        reduce using rule 142 (varYVals -> ID .)
    AND             reduce using rule 142 (varYVals -> ID .)
    OR              reduce using rule 142 (varYVals -> ID .)
    ?               reduce using rule 142 (varYVals -> ID .)
    ,               reduce using rule 142 (varYVals -> ID .)
    ]               reduce using rule 142 (varYVals -> ID .)
    )               reduce using rule 142 (varYVals -> ID .)
    ;               reduce using rule 142 (varYVals -> ID .)
    :               reduce using rule 142 (varYVals -> ID .)
    }               reduce using rule 142 (varYVals -> ID .)
    [               shift and go to state 105
    MASMAS          reduce using rule 149 (variable -> ID .)
    MENOSMENOS      reduce using rule 149 (variable -> ID .)


state 217

    (201) valoresBool -> BOOL .

    EQEQ            reduce using rule 201 (valoresBool -> BOOL .)
    DISTINTO        reduce using rule 201 (valoresBool -> BOOL .)
    AND             reduce using rule 201 (valoresBool -> BOOL .)
    OR              reduce using rule 201 (valoresBool -> BOOL .)
    ?               reduce using rule 201 (valoresBool -> BOOL .)
    ,               reduce using rule 201 (valoresBool -> BOOL .)
    ]               reduce using rule 201 (valoresBool -> BOOL .)
    )               reduce using rule 201 (valoresBool -> BOOL .)
    ;               reduce using rule 201 (valoresBool -> BOOL .)
    :               reduce using rule 201 (valoresBool -> BOOL .)
    }               reduce using rule 201 (valoresBool -> BOOL .)


state 218

    (204) valoresBool -> varsOps .

    EQEQ            reduce using rule 204 (valoresBool -> varsOps .)
    DISTINTO        reduce using rule 204 (valoresBool -> varsOps .)
    AND             reduce using rule 204 (valoresBool -> varsOps .)
    OR              reduce using rule 204 (valoresBool -> varsOps .)
    ?               reduce using rule 204 (valoresBool -> varsOps .)
    ,               reduce using rule 204 (valoresBool -> varsOps .)
    ]               reduce using rule 204 (valoresBool -> varsOps .)
    )               reduce using rule 204 (valoresBool -> varsOps .)
    ;               reduce using rule 204 (valoresBool -> varsOps .)
    :               reduce using rule 204 (valoresBool -> varsOps .)
    }               reduce using rule 204 (valoresBool -> varsOps .)


state 219

    (203) valoresBool -> varYVals .

    EQEQ            reduce using rule 203 (valoresBool -> varYVals .)
    DISTINTO        reduce using rule 203 (valoresBool -> varYVals .)
    AND             reduce using rule 203 (valoresBool -> varYVals .)
    OR              reduce using rule 203 (valoresBool -> varYVals .)
    ?               reduce using rule 203 (valoresBool -> varYVals .)
    ,               reduce using rule 203 (valoresBool -> varYVals .)
    ]               reduce using rule 203 (valoresBool -> varYVals .)
    )               reduce using rule 203 (valoresBool -> varYVals .)
    ;               reduce using rule 203 (valoresBool -> varYVals .)
    :               reduce using rule 203 (valoresBool -> varYVals .)
    }               reduce using rule 203 (valoresBool -> varYVals .)


state 220

    (189) exp -> exp ^ . iSing
    (191) exp -> exp ^ . valoresMat
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (58) vec -> . [ elem ]

    -               shift and go to state 78
    +               shift and go to state 77
    INT             shift and go to state 197
    FLOAT           shift and go to state 196
    STRING          shift and go to state 181
    (               shift and go to state 260
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    [               shift and go to state 20

    funcString                     shift and go to state 184
    funcInt                        shift and go to state 192
    vecVal                         shift and go to state 71
    vec                            shift and go to state 33
    iSing                          shift and go to state 363
    valoresMat                     shift and go to state 362
    variable                       shift and go to state 89
    paren                          shift and go to state 88
    varYVals                       shift and go to state 199
    reg                            shift and go to state 180
    atributos                      shift and go to state 191
    varsOps                        shift and go to state 198

state 221

    (94) reg -> { campos . }

    }               shift and go to state 364


state 222

    (95) campos -> ID . : valores , campos
    (96) campos -> ID . : valores

    :               shift and go to state 365


state 223

    (157) varAsig -> ID . ID . = valores

    =               shift and go to state 366


state 224

    (61) vecVal -> ID [ expresion . ]

    ]               shift and go to state 367


state 225

    (64) vecVal -> ID [ INT . ]
    (158) valoresMat -> INT .
    (230) tCompareEQ -> INT .
    (239) tCompare -> INT .

    ]               shift and go to state 368
    +               reduce using rule 158 (valoresMat -> INT .)
    -               reduce using rule 158 (valoresMat -> INT .)
    *               reduce using rule 158 (valoresMat -> INT .)
    /               reduce using rule 158 (valoresMat -> INT .)
    %               reduce using rule 158 (valoresMat -> INT .)
    ^               reduce using rule 158 (valoresMat -> INT .)
    EQEQ            reduce using rule 230 (tCompareEQ -> INT .)
    DISTINTO        reduce using rule 230 (tCompareEQ -> INT .)
    >               reduce using rule 239 (tCompare -> INT .)
    <               reduce using rule 239 (tCompare -> INT .)


state 226

    (232) tCompareEQ -> funcInt .
    (240) tCompare -> funcInt .
    (160) valoresMat -> funcInt .

    EQEQ            reduce using rule 232 (tCompareEQ -> funcInt .)
    DISTINTO        reduce using rule 232 (tCompareEQ -> funcInt .)
    AND             reduce using rule 232 (tCompareEQ -> funcInt .)
    OR              reduce using rule 232 (tCompareEQ -> funcInt .)
    ?               reduce using rule 232 (tCompareEQ -> funcInt .)
    ,               reduce using rule 232 (tCompareEQ -> funcInt .)
    ]               reduce using rule 232 (tCompareEQ -> funcInt .)
    )               reduce using rule 232 (tCompareEQ -> funcInt .)
    ;               reduce using rule 232 (tCompareEQ -> funcInt .)
    :               reduce using rule 232 (tCompareEQ -> funcInt .)
    }               reduce using rule 232 (tCompareEQ -> funcInt .)
    >               reduce using rule 240 (tCompare -> funcInt .)
    <               reduce using rule 240 (tCompare -> funcInt .)
    +               reduce using rule 160 (valoresMat -> funcInt .)
    -               reduce using rule 160 (valoresMat -> funcInt .)
    *               reduce using rule 160 (valoresMat -> funcInt .)
    /               reduce using rule 160 (valoresMat -> funcInt .)
    %               reduce using rule 160 (valoresMat -> funcInt .)
    ^               reduce using rule 160 (valoresMat -> funcInt .)


state 227

    (44) cosaBooleana -> valoresBool .
    (208) expBool -> valoresBool . OR and
    (210) expBool -> valoresBool . OR valoresBool
    (213) and -> valoresBool . AND eq
    (215) and -> valoresBool . AND valoresBool

    )               reduce using rule 44 (cosaBooleana -> valoresBool .)
    OR              shift and go to state 166
    AND             shift and go to state 165


state 228

    (233) tCompareEQ -> eMat .
    (167) eMat -> eMat . + p
    (169) eMat -> eMat . + valoresMat
    (172) eMat -> eMat . - p
    (174) eMat -> eMat . - valoresMat
    (236) tCompare -> eMat .

    EQEQ            reduce using rule 233 (tCompareEQ -> eMat .)
    DISTINTO        reduce using rule 233 (tCompareEQ -> eMat .)
    +               shift and go to state 168
    -               shift and go to state 169
    >               reduce using rule 236 (tCompare -> eMat .)
    <               reduce using rule 236 (tCompare -> eMat .)


state 229

    (205) valoresBool -> ( . ternarioBool )
    (234) tCompareEQ -> ( . ternarioBool )
    (235) tCompareEQ -> ( . ternarioMat )
    (242) tCompare -> ( . ternarioMat )
    (166) valoresMat -> ( . ternarioMat )
    (250) parenBool -> ( . expBool )
    (199) paren -> ( . eMat )
    (200) paren -> ( . valoresMat )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (53) funcBool -> . COLINEALES ( valores , valores )
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (58) vec -> . [ elem ]
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 370
    BOOL            shift and go to state 187
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 369
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 371
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 323
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    expBool                        shift and go to state 372
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 230

    (142) varYVals -> ID .
    (61) vecVal -> ID . [ expresion ]
    (64) vecVal -> ID . [ INT ]
    (149) variable -> ID .
    (97) atributos -> ID . . valoresCampos

    ?               reduce using rule 142 (varYVals -> ID .)
    OR              reduce using rule 142 (varYVals -> ID .)
    AND             reduce using rule 142 (varYVals -> ID .)
    EQEQ            reduce using rule 142 (varYVals -> ID .)
    DISTINTO        reduce using rule 142 (varYVals -> ID .)
    >               reduce using rule 142 (varYVals -> ID .)
    <               reduce using rule 142 (varYVals -> ID .)
    +               reduce using rule 142 (varYVals -> ID .)
    -               reduce using rule 142 (varYVals -> ID .)
    *               reduce using rule 142 (varYVals -> ID .)
    /               reduce using rule 142 (varYVals -> ID .)
    %               reduce using rule 142 (varYVals -> ID .)
    ^               reduce using rule 142 (varYVals -> ID .)
    ,               reduce using rule 142 (varYVals -> ID .)
    ]               reduce using rule 142 (varYVals -> ID .)
    )               reduce using rule 142 (varYVals -> ID .)
    ;               reduce using rule 142 (varYVals -> ID .)
    :               reduce using rule 142 (varYVals -> ID .)
    }               reduce using rule 142 (varYVals -> ID .)
    [               shift and go to state 105
    MASMAS          reduce using rule 149 (variable -> ID .)
    MENOSMENOS      reduce using rule 149 (variable -> ID .)
    .               shift and go to state 207


state 231

    (6) lAbierta -> IF ( cosaBooleana . ) linea
    (7) lAbierta -> IF ( cosaBooleana . ) COMMENT com linea
    (8) lAbierta -> IF ( cosaBooleana . ) { g } ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> IF ( cosaBooleana . ) lCerrada ELSE lAbierta
    (11) lAbierta -> IF ( cosaBooleana . ) { g }
    (16) lCerrada -> IF ( cosaBooleana . ) { g } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE { g }
    (18) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana . ) { g } ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE lCerrada
    (21) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE COMMENT com lCerrada

    )               shift and go to state 373


state 232

    (230) tCompareEQ -> INT .
    (239) tCompare -> INT .
    (158) valoresMat -> INT .

    EQEQ            reduce using rule 230 (tCompareEQ -> INT .)
    DISTINTO        reduce using rule 230 (tCompareEQ -> INT .)
    AND             reduce using rule 230 (tCompareEQ -> INT .)
    OR              reduce using rule 230 (tCompareEQ -> INT .)
    ?               reduce using rule 230 (tCompareEQ -> INT .)
    ,               reduce using rule 230 (tCompareEQ -> INT .)
    ]               reduce using rule 230 (tCompareEQ -> INT .)
    )               reduce using rule 230 (tCompareEQ -> INT .)
    ;               reduce using rule 230 (tCompareEQ -> INT .)
    :               reduce using rule 230 (tCompareEQ -> INT .)
    }               reduce using rule 230 (tCompareEQ -> INT .)
    >               reduce using rule 239 (tCompare -> INT .)
    <               reduce using rule 239 (tCompare -> INT .)
    +               reduce using rule 158 (valoresMat -> INT .)
    -               reduce using rule 158 (valoresMat -> INT .)
    *               reduce using rule 158 (valoresMat -> INT .)
    /               reduce using rule 158 (valoresMat -> INT .)
    %               reduce using rule 158 (valoresMat -> INT .)
    ^               reduce using rule 158 (valoresMat -> INT .)


state 233

    (231) tCompareEQ -> FLOAT .
    (241) tCompare -> FLOAT .
    (159) valoresMat -> FLOAT .

    EQEQ            reduce using rule 231 (tCompareEQ -> FLOAT .)
    DISTINTO        reduce using rule 231 (tCompareEQ -> FLOAT .)
    AND             reduce using rule 231 (tCompareEQ -> FLOAT .)
    OR              reduce using rule 231 (tCompareEQ -> FLOAT .)
    ?               reduce using rule 231 (tCompareEQ -> FLOAT .)
    ,               reduce using rule 231 (tCompareEQ -> FLOAT .)
    ]               reduce using rule 231 (tCompareEQ -> FLOAT .)
    )               reduce using rule 231 (tCompareEQ -> FLOAT .)
    ;               reduce using rule 231 (tCompareEQ -> FLOAT .)
    :               reduce using rule 231 (tCompareEQ -> FLOAT .)
    }               reduce using rule 231 (tCompareEQ -> FLOAT .)
    >               reduce using rule 241 (tCompare -> FLOAT .)
    <               reduce using rule 241 (tCompare -> FLOAT .)
    +               reduce using rule 159 (valoresMat -> FLOAT .)
    -               reduce using rule 159 (valoresMat -> FLOAT .)
    *               reduce using rule 159 (valoresMat -> FLOAT .)
    /               reduce using rule 159 (valoresMat -> FLOAT .)
    %               reduce using rule 159 (valoresMat -> FLOAT .)
    ^               reduce using rule 159 (valoresMat -> FLOAT .)


state 234

    (204) valoresBool -> varsOps .
    (229) tCompareEQ -> varsOps .
    (237) tCompare -> varsOps .
    (165) valoresMat -> varsOps .

    AND             reduce using rule 204 (valoresBool -> varsOps .)
    OR              reduce using rule 204 (valoresBool -> varsOps .)
    ?               reduce using rule 204 (valoresBool -> varsOps .)
    ,               reduce using rule 204 (valoresBool -> varsOps .)
    ]               reduce using rule 204 (valoresBool -> varsOps .)
    )               reduce using rule 204 (valoresBool -> varsOps .)
    ;               reduce using rule 204 (valoresBool -> varsOps .)
    :               reduce using rule 204 (valoresBool -> varsOps .)
    }               reduce using rule 204 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 229 (tCompareEQ -> varsOps .)
    DISTINTO        reduce using rule 229 (tCompareEQ -> varsOps .)
    >               reduce using rule 237 (tCompare -> varsOps .)
    <               reduce using rule 237 (tCompare -> varsOps .)
    +               reduce using rule 165 (valoresMat -> varsOps .)
    -               reduce using rule 165 (valoresMat -> varsOps .)
    *               reduce using rule 165 (valoresMat -> varsOps .)
    /               reduce using rule 165 (valoresMat -> varsOps .)
    %               reduce using rule 165 (valoresMat -> varsOps .)
    ^               reduce using rule 165 (valoresMat -> varsOps .)


state 235

    (203) valoresBool -> varYVals .
    (228) tCompareEQ -> varYVals .
    (238) tCompare -> varYVals .
    (164) valoresMat -> varYVals .

    AND             reduce using rule 203 (valoresBool -> varYVals .)
    OR              reduce using rule 203 (valoresBool -> varYVals .)
    ?               reduce using rule 203 (valoresBool -> varYVals .)
    ,               reduce using rule 203 (valoresBool -> varYVals .)
    ]               reduce using rule 203 (valoresBool -> varYVals .)
    )               reduce using rule 203 (valoresBool -> varYVals .)
    ;               reduce using rule 203 (valoresBool -> varYVals .)
    :               reduce using rule 203 (valoresBool -> varYVals .)
    }               reduce using rule 203 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 228 (tCompareEQ -> varYVals .)
    DISTINTO        reduce using rule 228 (tCompareEQ -> varYVals .)
    >               reduce using rule 238 (tCompare -> varYVals .)
    <               reduce using rule 238 (tCompare -> varYVals .)
    +               reduce using rule 164 (valoresMat -> varYVals .)
    -               reduce using rule 164 (valoresMat -> varYVals .)
    *               reduce using rule 164 (valoresMat -> varYVals .)
    /               reduce using rule 164 (valoresMat -> varYVals .)
    %               reduce using rule 164 (valoresMat -> varYVals .)
    ^               reduce using rule 164 (valoresMat -> varYVals .)


state 236

    (43) cosaBooleana -> expBool .
    (207) expBool -> expBool . OR and
    (209) expBool -> expBool . OR valoresBool

    )               reduce using rule 43 (cosaBooleana -> expBool .)
    OR              shift and go to state 203


state 237

    (52) funcString -> CAPITALIZAR ( valores . )

    )               shift and go to state 374


state 238

    (50) funcInt -> MULTIESCALAR ( valores . , valores param )

    ,               shift and go to state 375


state 239

    (26) lCerrada -> loop COMMENT com . lCerrada
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (152) varAsig -> . variable MULEQ valores
    (153) varAsig -> . variable DIVEQ valores
    (154) varAsig -> . variable MASEQ valores
    (155) varAsig -> . variable MENOSEQ valores
    (156) varAsig -> . variable = valores
    (157) varAsig -> . ID . ID = valores
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]

    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 376
    varsOps                        shift and go to state 13
    loop                           shift and go to state 39

state 240

    (24) lCerrada -> loop { g . }

    }               shift and go to state 377


state 241

    (62) vecVal -> vec [ expresion . ]

    ]               shift and go to state 378


state 242

    (65) vecVal -> vec [ INT . ]
    (158) valoresMat -> INT .
    (230) tCompareEQ -> INT .
    (239) tCompare -> INT .

    ]               shift and go to state 379
    +               reduce using rule 158 (valoresMat -> INT .)
    -               reduce using rule 158 (valoresMat -> INT .)
    *               reduce using rule 158 (valoresMat -> INT .)
    /               reduce using rule 158 (valoresMat -> INT .)
    %               reduce using rule 158 (valoresMat -> INT .)
    ^               reduce using rule 158 (valoresMat -> INT .)
    EQEQ            reduce using rule 230 (tCompareEQ -> INT .)
    DISTINTO        reduce using rule 230 (tCompareEQ -> INT .)
    >               reduce using rule 239 (tCompare -> INT .)
    <               reduce using rule 239 (tCompare -> INT .)


state 243

    (14) com -> COMMENT com .

    IF              reduce using rule 14 (com -> COMMENT com .)
    DO              reduce using rule 14 (com -> COMMENT com .)
    RETURN          reduce using rule 14 (com -> COMMENT com .)
    ;               reduce using rule 14 (com -> COMMENT com .)
    WHILE           reduce using rule 14 (com -> COMMENT com .)
    FOR             reduce using rule 14 (com -> COMMENT com .)
    MENOSMENOS      reduce using rule 14 (com -> COMMENT com .)
    MASMAS          reduce using rule 14 (com -> COMMENT com .)
    ID              reduce using rule 14 (com -> COMMENT com .)
    PRINT           reduce using rule 14 (com -> COMMENT com .)
    MULTIESCALAR    reduce using rule 14 (com -> COMMENT com .)
    LENGTH          reduce using rule 14 (com -> COMMENT com .)
    CAPITALIZAR     reduce using rule 14 (com -> COMMENT com .)
    COLINEALES      reduce using rule 14 (com -> COMMENT com .)
    [               reduce using rule 14 (com -> COMMENT com .)


state 244

    (29) lCerrada -> DO COMMENT com lCerrada . WHILE ( valores ) ;

    WHILE           shift and go to state 380


state 245

    (16) lCerrada -> IF ( cosaBooleana . ) { g } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE { g }
    (18) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana . ) { g } ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE lCerrada
    (21) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE COMMENT com lCerrada

    )               shift and go to state 381


state 246

    (28) lCerrada -> DO lCerrada WHILE ( . valores ) ;
    (80) valores -> . varYVals
    (81) valores -> . varsOps
    (82) valores -> . eMat
    (83) valores -> . expBool
    (84) valores -> . funcReturn
    (85) valores -> . reg
    (86) valores -> . INT
    (87) valores -> . FLOAT
    (88) valores -> . STRING
    (89) valores -> . BOOL
    (90) valores -> . ternario
    (91) valores -> . atributos
    (92) valores -> . vec
    (93) valores -> . RES
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (94) reg -> . { campos }
    (102) ternario -> . ternarioMat
    (103) ternario -> . ternarioBool
    (104) ternario -> . ( ternarioMat )
    (105) ternario -> . ( ternarioBool )
    (106) ternario -> . ternarioVars
    (107) ternario -> . ( ternarioVars )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    ?               reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 382
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 247

    (27) lCerrada -> DO { g } . WHILE ( valores ) ;

    WHILE           shift and go to state 383


state 248

    (53) funcBool -> COLINEALES ( valores , . valores )
    (80) valores -> . varYVals
    (81) valores -> . varsOps
    (82) valores -> . eMat
    (83) valores -> . expBool
    (84) valores -> . funcReturn
    (85) valores -> . reg
    (86) valores -> . INT
    (87) valores -> . FLOAT
    (88) valores -> . STRING
    (89) valores -> . BOOL
    (90) valores -> . ternario
    (91) valores -> . atributos
    (92) valores -> . vec
    (93) valores -> . RES
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (94) reg -> . { campos }
    (102) ternario -> . ternarioMat
    (103) ternario -> . ternarioBool
    (104) ternario -> . ( ternarioMat )
    (105) ternario -> . ( ternarioBool )
    (106) ternario -> . ternarioVars
    (107) ternario -> . ( ternarioVars )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    ?               reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 384
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 249

    (35) loop -> WHILE ( valores ) .

    {               reduce using rule 35 (loop -> WHILE ( valores ) .)
    COMMENT         reduce using rule 35 (loop -> WHILE ( valores ) .)
    IF              reduce using rule 35 (loop -> WHILE ( valores ) .)
    DO              reduce using rule 35 (loop -> WHILE ( valores ) .)
    RETURN          reduce using rule 35 (loop -> WHILE ( valores ) .)
    ;               reduce using rule 35 (loop -> WHILE ( valores ) .)
    WHILE           reduce using rule 35 (loop -> WHILE ( valores ) .)
    FOR             reduce using rule 35 (loop -> WHILE ( valores ) .)
    MENOSMENOS      reduce using rule 35 (loop -> WHILE ( valores ) .)
    MASMAS          reduce using rule 35 (loop -> WHILE ( valores ) .)
    ID              reduce using rule 35 (loop -> WHILE ( valores ) .)
    PRINT           reduce using rule 35 (loop -> WHILE ( valores ) .)
    MULTIESCALAR    reduce using rule 35 (loop -> WHILE ( valores ) .)
    LENGTH          reduce using rule 35 (loop -> WHILE ( valores ) .)
    CAPITALIZAR     reduce using rule 35 (loop -> WHILE ( valores ) .)
    COLINEALES      reduce using rule 35 (loop -> WHILE ( valores ) .)
    [               reduce using rule 35 (loop -> WHILE ( valores ) .)


state 250

    (54) funcVoid -> PRINT ( valores ) .

    ;               reduce using rule 54 (funcVoid -> PRINT ( valores ) .)
    )               reduce using rule 54 (funcVoid -> PRINT ( valores ) .)


state 251

    (144) varYVals -> vecVal . . varYVals
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (58) vec -> . [ elem ]

    ID              shift and go to state 128
    [               shift and go to state 20

    varYVals                       shift and go to state 385
    vecVal                         shift and go to state 126
    vec                            shift and go to state 33

state 252

    (63) vecVal -> vecVal [ expresion ] .

    .               reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    [               reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    ?               reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    OR              reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    AND             reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    +               reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    -               reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    *               reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    /               reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    %               reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    ^               reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    EQEQ            reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    DISTINTO        reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    >               reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    <               reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    MASMAS          reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    MENOSMENOS      reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    )               reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    ;               reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    ,               reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    ]               reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    :               reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    }               reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    MULEQ           reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    DIVEQ           reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    MASEQ           reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    MENOSEQ         reduce using rule 63 (vecVal -> vecVal [ expresion ] .)
    =               reduce using rule 63 (vecVal -> vecVal [ expresion ] .)


state 253

    (66) vecVal -> vecVal [ INT ] .

    .               reduce using rule 66 (vecVal -> vecVal [ INT ] .)
    [               reduce using rule 66 (vecVal -> vecVal [ INT ] .)
    ?               reduce using rule 66 (vecVal -> vecVal [ INT ] .)
    OR              reduce using rule 66 (vecVal -> vecVal [ INT ] .)
    AND             reduce using rule 66 (vecVal -> vecVal [ INT ] .)
    +               reduce using rule 66 (vecVal -> vecVal [ INT ] .)
    -               reduce using rule 66 (vecVal -> vecVal [ INT ] .)
    *               reduce using rule 66 (vecVal -> vecVal [ INT ] .)
    /               reduce using rule 66 (vecVal -> vecVal [ INT ] .)
    %               reduce using rule 66 (vecVal -> vecVal [ INT ] .)
    ^               reduce using rule 66 (vecVal -> vecVal [ INT ] .)
    EQEQ            reduce using rule 66 (vecVal -> vecVal [ INT ] .)
    DISTINTO        reduce using rule 66 (vecVal -> vecVal [ INT ] .)
    >               reduce using rule 66 (vecVal -> vecVal [ INT ] .)
    <               reduce using rule 66 (vecVal -> vecVal [ INT ] .)
    MASMAS          reduce using rule 66 (vecVal -> vecVal [ INT ] .)
    MENOSMENOS      reduce using rule 66 (vecVal -> vecVal [ INT ] .)
    )               reduce using rule 66 (vecVal -> vecVal [ INT ] .)
    ;               reduce using rule 66 (vecVal -> vecVal [ INT ] .)
    ,               reduce using rule 66 (vecVal -> vecVal [ INT ] .)
    ]               reduce using rule 66 (vecVal -> vecVal [ INT ] .)
    :               reduce using rule 66 (vecVal -> vecVal [ INT ] .)
    }               reduce using rule 66 (vecVal -> vecVal [ INT ] .)
    MULEQ           reduce using rule 66 (vecVal -> vecVal [ INT ] .)
    DIVEQ           reduce using rule 66 (vecVal -> vecVal [ INT ] .)
    MASEQ           reduce using rule 66 (vecVal -> vecVal [ INT ] .)
    MENOSEQ         reduce using rule 66 (vecVal -> vecVal [ INT ] .)
    =               reduce using rule 66 (vecVal -> vecVal [ INT ] .)


state 254

    (36) loop -> FOR ( primParam ; . valores ; tercerParam )
    (80) valores -> . varYVals
    (81) valores -> . varsOps
    (82) valores -> . eMat
    (83) valores -> . expBool
    (84) valores -> . funcReturn
    (85) valores -> . reg
    (86) valores -> . INT
    (87) valores -> . FLOAT
    (88) valores -> . STRING
    (89) valores -> . BOOL
    (90) valores -> . ternario
    (91) valores -> . atributos
    (92) valores -> . vec
    (93) valores -> . RES
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (94) reg -> . { campos }
    (102) ternario -> . ternarioMat
    (103) ternario -> . ternarioBool
    (104) ternario -> . ( ternarioMat )
    (105) ternario -> . ( ternarioBool )
    (106) ternario -> . ternarioVars
    (107) ternario -> . ( ternarioVars )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    ?               reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 386
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 255

    (51) funcInt -> LENGTH ( valores ) .

    )               reduce using rule 51 (funcInt -> LENGTH ( valores ) .)
    +               reduce using rule 51 (funcInt -> LENGTH ( valores ) .)
    -               reduce using rule 51 (funcInt -> LENGTH ( valores ) .)
    *               reduce using rule 51 (funcInt -> LENGTH ( valores ) .)
    /               reduce using rule 51 (funcInt -> LENGTH ( valores ) .)
    %               reduce using rule 51 (funcInt -> LENGTH ( valores ) .)
    ^               reduce using rule 51 (funcInt -> LENGTH ( valores ) .)
    EQEQ            reduce using rule 51 (funcInt -> LENGTH ( valores ) .)
    DISTINTO        reduce using rule 51 (funcInt -> LENGTH ( valores ) .)
    >               reduce using rule 51 (funcInt -> LENGTH ( valores ) .)
    <               reduce using rule 51 (funcInt -> LENGTH ( valores ) .)
    ,               reduce using rule 51 (funcInt -> LENGTH ( valores ) .)
    ]               reduce using rule 51 (funcInt -> LENGTH ( valores ) .)
    ;               reduce using rule 51 (funcInt -> LENGTH ( valores ) .)
    :               reduce using rule 51 (funcInt -> LENGTH ( valores ) .)
    }               reduce using rule 51 (funcInt -> LENGTH ( valores ) .)
    AND             reduce using rule 51 (funcInt -> LENGTH ( valores ) .)
    OR              reduce using rule 51 (funcInt -> LENGTH ( valores ) .)
    ?               reduce using rule 51 (funcInt -> LENGTH ( valores ) .)


state 256

    (212) and -> and AND eq .
    (217) eq -> eq . EQEQ mayor
    (218) eq -> eq . DISTINTO mayor
    (221) eq -> eq . EQEQ tCompareEQ
    (222) eq -> eq . DISTINTO tCompareEQ

    AND             reduce using rule 212 (and -> and AND eq .)
    )               reduce using rule 212 (and -> and AND eq .)
    ?               reduce using rule 212 (and -> and AND eq .)
    OR              reduce using rule 212 (and -> and AND eq .)
    ,               reduce using rule 212 (and -> and AND eq .)
    ]               reduce using rule 212 (and -> and AND eq .)
    ;               reduce using rule 212 (and -> and AND eq .)
    :               reduce using rule 212 (and -> and AND eq .)
    }               reduce using rule 212 (and -> and AND eq .)
    EQEQ            shift and go to state 162
    DISTINTO        shift and go to state 163


state 257

    (214) and -> and AND valoresBool .

    AND             reduce using rule 214 (and -> and AND valoresBool .)
    )               reduce using rule 214 (and -> and AND valoresBool .)
    ?               reduce using rule 214 (and -> and AND valoresBool .)
    OR              reduce using rule 214 (and -> and AND valoresBool .)
    ,               reduce using rule 214 (and -> and AND valoresBool .)
    ]               reduce using rule 214 (and -> and AND valoresBool .)
    ;               reduce using rule 214 (and -> and AND valoresBool .)
    :               reduce using rule 214 (and -> and AND valoresBool .)
    }               reduce using rule 214 (and -> and AND valoresBool .)


state 258

    (59) elem -> valores , elem .

    ]               reduce using rule 59 (elem -> valores , elem .)


state 259

    (187) p -> valoresMat % valoresMat .
    (190) exp -> valoresMat . ^ iSing
    (192) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 187 (p -> valoresMat % valoresMat .)
    /               reduce using rule 187 (p -> valoresMat % valoresMat .)
    %               reduce using rule 187 (p -> valoresMat % valoresMat .)
    +               reduce using rule 187 (p -> valoresMat % valoresMat .)
    -               reduce using rule 187 (p -> valoresMat % valoresMat .)
    EQEQ            reduce using rule 187 (p -> valoresMat % valoresMat .)
    DISTINTO        reduce using rule 187 (p -> valoresMat % valoresMat .)
    >               reduce using rule 187 (p -> valoresMat % valoresMat .)
    <               reduce using rule 187 (p -> valoresMat % valoresMat .)
    :               reduce using rule 187 (p -> valoresMat % valoresMat .)
    ,               reduce using rule 187 (p -> valoresMat % valoresMat .)
    ]               reduce using rule 187 (p -> valoresMat % valoresMat .)
    )               reduce using rule 187 (p -> valoresMat % valoresMat .)
    ;               reduce using rule 187 (p -> valoresMat % valoresMat .)
    }               reduce using rule 187 (p -> valoresMat % valoresMat .)
    AND             reduce using rule 187 (p -> valoresMat % valoresMat .)
    OR              reduce using rule 187 (p -> valoresMat % valoresMat .)
    ?               reduce using rule 187 (p -> valoresMat % valoresMat .)
    ^               shift and go to state 161


state 260

    (166) valoresMat -> ( . ternarioMat )
    (199) paren -> ( . eMat )
    (200) paren -> ( . valoresMat )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (53) funcBool -> . COLINEALES ( valores , valores )
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (58) vec -> . [ elem ]
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 177
    BOOL            shift and go to state 187
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    valoresBool                    shift and go to state 329
    ternarioMat                    shift and go to state 331
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    expBool                        shift and go to state 332
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 261

    (181) p -> valoresMat % exp .
    (189) exp -> exp . ^ iSing
    (191) exp -> exp . ^ valoresMat

    *               reduce using rule 181 (p -> valoresMat % exp .)
    /               reduce using rule 181 (p -> valoresMat % exp .)
    %               reduce using rule 181 (p -> valoresMat % exp .)
    +               reduce using rule 181 (p -> valoresMat % exp .)
    -               reduce using rule 181 (p -> valoresMat % exp .)
    EQEQ            reduce using rule 181 (p -> valoresMat % exp .)
    DISTINTO        reduce using rule 181 (p -> valoresMat % exp .)
    >               reduce using rule 181 (p -> valoresMat % exp .)
    <               reduce using rule 181 (p -> valoresMat % exp .)
    :               reduce using rule 181 (p -> valoresMat % exp .)
    ,               reduce using rule 181 (p -> valoresMat % exp .)
    ]               reduce using rule 181 (p -> valoresMat % exp .)
    )               reduce using rule 181 (p -> valoresMat % exp .)
    ;               reduce using rule 181 (p -> valoresMat % exp .)
    }               reduce using rule 181 (p -> valoresMat % exp .)
    AND             reduce using rule 181 (p -> valoresMat % exp .)
    OR              reduce using rule 181 (p -> valoresMat % exp .)
    ?               reduce using rule 181 (p -> valoresMat % exp .)
    ^               shift and go to state 220


state 262

    (170) eMat -> valoresMat + valoresMat .
    (179) p -> valoresMat . * exp
    (180) p -> valoresMat . / exp
    (181) p -> valoresMat . % exp
    (185) p -> valoresMat . * valoresMat
    (186) p -> valoresMat . / valoresMat
    (187) p -> valoresMat . % valoresMat
    (190) exp -> valoresMat . ^ iSing
    (192) exp -> valoresMat . ^ valoresMat

    )               reduce using rule 170 (eMat -> valoresMat + valoresMat .)
    +               reduce using rule 170 (eMat -> valoresMat + valoresMat .)
    -               reduce using rule 170 (eMat -> valoresMat + valoresMat .)
    EQEQ            reduce using rule 170 (eMat -> valoresMat + valoresMat .)
    DISTINTO        reduce using rule 170 (eMat -> valoresMat + valoresMat .)
    >               reduce using rule 170 (eMat -> valoresMat + valoresMat .)
    <               reduce using rule 170 (eMat -> valoresMat + valoresMat .)
    ,               reduce using rule 170 (eMat -> valoresMat + valoresMat .)
    ]               reduce using rule 170 (eMat -> valoresMat + valoresMat .)
    ;               reduce using rule 170 (eMat -> valoresMat + valoresMat .)
    :               reduce using rule 170 (eMat -> valoresMat + valoresMat .)
    }               reduce using rule 170 (eMat -> valoresMat + valoresMat .)
    AND             reduce using rule 170 (eMat -> valoresMat + valoresMat .)
    OR              reduce using rule 170 (eMat -> valoresMat + valoresMat .)
    ?               reduce using rule 170 (eMat -> valoresMat + valoresMat .)
    *               shift and go to state 158
    /               shift and go to state 160
    %               shift and go to state 156
    ^               shift and go to state 161


state 263

    (168) eMat -> valoresMat + p .
    (176) p -> p . * exp
    (177) p -> p . / exp
    (178) p -> p . % exp
    (182) p -> p . * valoresMat
    (183) p -> p . / valoresMat
    (184) p -> p . % valoresMat

    )               reduce using rule 168 (eMat -> valoresMat + p .)
    +               reduce using rule 168 (eMat -> valoresMat + p .)
    -               reduce using rule 168 (eMat -> valoresMat + p .)
    EQEQ            reduce using rule 168 (eMat -> valoresMat + p .)
    DISTINTO        reduce using rule 168 (eMat -> valoresMat + p .)
    >               reduce using rule 168 (eMat -> valoresMat + p .)
    <               reduce using rule 168 (eMat -> valoresMat + p .)
    ,               reduce using rule 168 (eMat -> valoresMat + p .)
    ]               reduce using rule 168 (eMat -> valoresMat + p .)
    ;               reduce using rule 168 (eMat -> valoresMat + p .)
    :               reduce using rule 168 (eMat -> valoresMat + p .)
    }               reduce using rule 168 (eMat -> valoresMat + p .)
    AND             reduce using rule 168 (eMat -> valoresMat + p .)
    OR              reduce using rule 168 (eMat -> valoresMat + p .)
    ?               reduce using rule 168 (eMat -> valoresMat + p .)
    *               shift and go to state 210
    /               shift and go to state 211
    %               shift and go to state 209


state 264

    (185) p -> valoresMat * valoresMat .
    (190) exp -> valoresMat . ^ iSing
    (192) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 185 (p -> valoresMat * valoresMat .)
    /               reduce using rule 185 (p -> valoresMat * valoresMat .)
    %               reduce using rule 185 (p -> valoresMat * valoresMat .)
    +               reduce using rule 185 (p -> valoresMat * valoresMat .)
    -               reduce using rule 185 (p -> valoresMat * valoresMat .)
    EQEQ            reduce using rule 185 (p -> valoresMat * valoresMat .)
    DISTINTO        reduce using rule 185 (p -> valoresMat * valoresMat .)
    >               reduce using rule 185 (p -> valoresMat * valoresMat .)
    <               reduce using rule 185 (p -> valoresMat * valoresMat .)
    :               reduce using rule 185 (p -> valoresMat * valoresMat .)
    ,               reduce using rule 185 (p -> valoresMat * valoresMat .)
    ]               reduce using rule 185 (p -> valoresMat * valoresMat .)
    )               reduce using rule 185 (p -> valoresMat * valoresMat .)
    ;               reduce using rule 185 (p -> valoresMat * valoresMat .)
    }               reduce using rule 185 (p -> valoresMat * valoresMat .)
    AND             reduce using rule 185 (p -> valoresMat * valoresMat .)
    OR              reduce using rule 185 (p -> valoresMat * valoresMat .)
    ?               reduce using rule 185 (p -> valoresMat * valoresMat .)
    ^               shift and go to state 161


state 265

    (179) p -> valoresMat * exp .
    (189) exp -> exp . ^ iSing
    (191) exp -> exp . ^ valoresMat

    *               reduce using rule 179 (p -> valoresMat * exp .)
    /               reduce using rule 179 (p -> valoresMat * exp .)
    %               reduce using rule 179 (p -> valoresMat * exp .)
    +               reduce using rule 179 (p -> valoresMat * exp .)
    -               reduce using rule 179 (p -> valoresMat * exp .)
    EQEQ            reduce using rule 179 (p -> valoresMat * exp .)
    DISTINTO        reduce using rule 179 (p -> valoresMat * exp .)
    >               reduce using rule 179 (p -> valoresMat * exp .)
    <               reduce using rule 179 (p -> valoresMat * exp .)
    :               reduce using rule 179 (p -> valoresMat * exp .)
    ,               reduce using rule 179 (p -> valoresMat * exp .)
    ]               reduce using rule 179 (p -> valoresMat * exp .)
    )               reduce using rule 179 (p -> valoresMat * exp .)
    ;               reduce using rule 179 (p -> valoresMat * exp .)
    }               reduce using rule 179 (p -> valoresMat * exp .)
    AND             reduce using rule 179 (p -> valoresMat * exp .)
    OR              reduce using rule 179 (p -> valoresMat * exp .)
    ?               reduce using rule 179 (p -> valoresMat * exp .)
    ^               shift and go to state 220


state 266

    (175) eMat -> valoresMat - valoresMat .
    (179) p -> valoresMat . * exp
    (180) p -> valoresMat . / exp
    (181) p -> valoresMat . % exp
    (185) p -> valoresMat . * valoresMat
    (186) p -> valoresMat . / valoresMat
    (187) p -> valoresMat . % valoresMat
    (190) exp -> valoresMat . ^ iSing
    (192) exp -> valoresMat . ^ valoresMat

    )               reduce using rule 175 (eMat -> valoresMat - valoresMat .)
    +               reduce using rule 175 (eMat -> valoresMat - valoresMat .)
    -               reduce using rule 175 (eMat -> valoresMat - valoresMat .)
    EQEQ            reduce using rule 175 (eMat -> valoresMat - valoresMat .)
    DISTINTO        reduce using rule 175 (eMat -> valoresMat - valoresMat .)
    >               reduce using rule 175 (eMat -> valoresMat - valoresMat .)
    <               reduce using rule 175 (eMat -> valoresMat - valoresMat .)
    ,               reduce using rule 175 (eMat -> valoresMat - valoresMat .)
    ]               reduce using rule 175 (eMat -> valoresMat - valoresMat .)
    ;               reduce using rule 175 (eMat -> valoresMat - valoresMat .)
    :               reduce using rule 175 (eMat -> valoresMat - valoresMat .)
    }               reduce using rule 175 (eMat -> valoresMat - valoresMat .)
    AND             reduce using rule 175 (eMat -> valoresMat - valoresMat .)
    OR              reduce using rule 175 (eMat -> valoresMat - valoresMat .)
    ?               reduce using rule 175 (eMat -> valoresMat - valoresMat .)
    *               shift and go to state 158
    /               shift and go to state 160
    %               shift and go to state 156
    ^               shift and go to state 161


state 267

    (173) eMat -> valoresMat - p .
    (176) p -> p . * exp
    (177) p -> p . / exp
    (178) p -> p . % exp
    (182) p -> p . * valoresMat
    (183) p -> p . / valoresMat
    (184) p -> p . % valoresMat

    )               reduce using rule 173 (eMat -> valoresMat - p .)
    +               reduce using rule 173 (eMat -> valoresMat - p .)
    -               reduce using rule 173 (eMat -> valoresMat - p .)
    EQEQ            reduce using rule 173 (eMat -> valoresMat - p .)
    DISTINTO        reduce using rule 173 (eMat -> valoresMat - p .)
    >               reduce using rule 173 (eMat -> valoresMat - p .)
    <               reduce using rule 173 (eMat -> valoresMat - p .)
    ,               reduce using rule 173 (eMat -> valoresMat - p .)
    ]               reduce using rule 173 (eMat -> valoresMat - p .)
    ;               reduce using rule 173 (eMat -> valoresMat - p .)
    :               reduce using rule 173 (eMat -> valoresMat - p .)
    }               reduce using rule 173 (eMat -> valoresMat - p .)
    AND             reduce using rule 173 (eMat -> valoresMat - p .)
    OR              reduce using rule 173 (eMat -> valoresMat - p .)
    ?               reduce using rule 173 (eMat -> valoresMat - p .)
    *               shift and go to state 210
    /               shift and go to state 211
    %               shift and go to state 209


state 268

    (186) p -> valoresMat / valoresMat .
    (190) exp -> valoresMat . ^ iSing
    (192) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 186 (p -> valoresMat / valoresMat .)
    /               reduce using rule 186 (p -> valoresMat / valoresMat .)
    %               reduce using rule 186 (p -> valoresMat / valoresMat .)
    +               reduce using rule 186 (p -> valoresMat / valoresMat .)
    -               reduce using rule 186 (p -> valoresMat / valoresMat .)
    EQEQ            reduce using rule 186 (p -> valoresMat / valoresMat .)
    DISTINTO        reduce using rule 186 (p -> valoresMat / valoresMat .)
    >               reduce using rule 186 (p -> valoresMat / valoresMat .)
    <               reduce using rule 186 (p -> valoresMat / valoresMat .)
    :               reduce using rule 186 (p -> valoresMat / valoresMat .)
    ,               reduce using rule 186 (p -> valoresMat / valoresMat .)
    ]               reduce using rule 186 (p -> valoresMat / valoresMat .)
    )               reduce using rule 186 (p -> valoresMat / valoresMat .)
    ;               reduce using rule 186 (p -> valoresMat / valoresMat .)
    }               reduce using rule 186 (p -> valoresMat / valoresMat .)
    AND             reduce using rule 186 (p -> valoresMat / valoresMat .)
    OR              reduce using rule 186 (p -> valoresMat / valoresMat .)
    ?               reduce using rule 186 (p -> valoresMat / valoresMat .)
    ^               shift and go to state 161


state 269

    (180) p -> valoresMat / exp .
    (189) exp -> exp . ^ iSing
    (191) exp -> exp . ^ valoresMat

    *               reduce using rule 180 (p -> valoresMat / exp .)
    /               reduce using rule 180 (p -> valoresMat / exp .)
    %               reduce using rule 180 (p -> valoresMat / exp .)
    +               reduce using rule 180 (p -> valoresMat / exp .)
    -               reduce using rule 180 (p -> valoresMat / exp .)
    EQEQ            reduce using rule 180 (p -> valoresMat / exp .)
    DISTINTO        reduce using rule 180 (p -> valoresMat / exp .)
    >               reduce using rule 180 (p -> valoresMat / exp .)
    <               reduce using rule 180 (p -> valoresMat / exp .)
    :               reduce using rule 180 (p -> valoresMat / exp .)
    ,               reduce using rule 180 (p -> valoresMat / exp .)
    ]               reduce using rule 180 (p -> valoresMat / exp .)
    )               reduce using rule 180 (p -> valoresMat / exp .)
    ;               reduce using rule 180 (p -> valoresMat / exp .)
    }               reduce using rule 180 (p -> valoresMat / exp .)
    AND             reduce using rule 180 (p -> valoresMat / exp .)
    OR              reduce using rule 180 (p -> valoresMat / exp .)
    ?               reduce using rule 180 (p -> valoresMat / exp .)
    ^               shift and go to state 220


state 270

    (192) exp -> valoresMat ^ valoresMat .

    ^               reduce using rule 192 (exp -> valoresMat ^ valoresMat .)
    *               reduce using rule 192 (exp -> valoresMat ^ valoresMat .)
    /               reduce using rule 192 (exp -> valoresMat ^ valoresMat .)
    %               reduce using rule 192 (exp -> valoresMat ^ valoresMat .)
    +               reduce using rule 192 (exp -> valoresMat ^ valoresMat .)
    -               reduce using rule 192 (exp -> valoresMat ^ valoresMat .)
    ,               reduce using rule 192 (exp -> valoresMat ^ valoresMat .)
    }               reduce using rule 192 (exp -> valoresMat ^ valoresMat .)
    EQEQ            reduce using rule 192 (exp -> valoresMat ^ valoresMat .)
    DISTINTO        reduce using rule 192 (exp -> valoresMat ^ valoresMat .)
    >               reduce using rule 192 (exp -> valoresMat ^ valoresMat .)
    <               reduce using rule 192 (exp -> valoresMat ^ valoresMat .)
    )               reduce using rule 192 (exp -> valoresMat ^ valoresMat .)
    :               reduce using rule 192 (exp -> valoresMat ^ valoresMat .)
    ]               reduce using rule 192 (exp -> valoresMat ^ valoresMat .)
    ;               reduce using rule 192 (exp -> valoresMat ^ valoresMat .)
    AND             reduce using rule 192 (exp -> valoresMat ^ valoresMat .)
    OR              reduce using rule 192 (exp -> valoresMat ^ valoresMat .)
    ?               reduce using rule 192 (exp -> valoresMat ^ valoresMat .)


state 271

    (190) exp -> valoresMat ^ iSing .

    ^               reduce using rule 190 (exp -> valoresMat ^ iSing .)
    *               reduce using rule 190 (exp -> valoresMat ^ iSing .)
    /               reduce using rule 190 (exp -> valoresMat ^ iSing .)
    %               reduce using rule 190 (exp -> valoresMat ^ iSing .)
    +               reduce using rule 190 (exp -> valoresMat ^ iSing .)
    -               reduce using rule 190 (exp -> valoresMat ^ iSing .)
    ,               reduce using rule 190 (exp -> valoresMat ^ iSing .)
    }               reduce using rule 190 (exp -> valoresMat ^ iSing .)
    EQEQ            reduce using rule 190 (exp -> valoresMat ^ iSing .)
    DISTINTO        reduce using rule 190 (exp -> valoresMat ^ iSing .)
    >               reduce using rule 190 (exp -> valoresMat ^ iSing .)
    <               reduce using rule 190 (exp -> valoresMat ^ iSing .)
    )               reduce using rule 190 (exp -> valoresMat ^ iSing .)
    :               reduce using rule 190 (exp -> valoresMat ^ iSing .)
    ]               reduce using rule 190 (exp -> valoresMat ^ iSing .)
    ;               reduce using rule 190 (exp -> valoresMat ^ iSing .)
    AND             reduce using rule 190 (exp -> valoresMat ^ iSing .)
    OR              reduce using rule 190 (exp -> valoresMat ^ iSing .)
    ?               reduce using rule 190 (exp -> valoresMat ^ iSing .)


state 272

    (227) tCompareEQ -> funcBool .

    EQEQ            reduce using rule 227 (tCompareEQ -> funcBool .)
    DISTINTO        reduce using rule 227 (tCompareEQ -> funcBool .)
    AND             reduce using rule 227 (tCompareEQ -> funcBool .)
    OR              reduce using rule 227 (tCompareEQ -> funcBool .)
    ?               reduce using rule 227 (tCompareEQ -> funcBool .)
    ,               reduce using rule 227 (tCompareEQ -> funcBool .)
    ]               reduce using rule 227 (tCompareEQ -> funcBool .)
    )               reduce using rule 227 (tCompareEQ -> funcBool .)
    ;               reduce using rule 227 (tCompareEQ -> funcBool .)
    :               reduce using rule 227 (tCompareEQ -> funcBool .)
    }               reduce using rule 227 (tCompareEQ -> funcBool .)


state 273

    (217) eq -> eq EQEQ mayor .

    EQEQ            reduce using rule 217 (eq -> eq EQEQ mayor .)
    DISTINTO        reduce using rule 217 (eq -> eq EQEQ mayor .)
    AND             reduce using rule 217 (eq -> eq EQEQ mayor .)
    ?               reduce using rule 217 (eq -> eq EQEQ mayor .)
    OR              reduce using rule 217 (eq -> eq EQEQ mayor .)
    )               reduce using rule 217 (eq -> eq EQEQ mayor .)
    :               reduce using rule 217 (eq -> eq EQEQ mayor .)
    ,               reduce using rule 217 (eq -> eq EQEQ mayor .)
    ]               reduce using rule 217 (eq -> eq EQEQ mayor .)
    ;               reduce using rule 217 (eq -> eq EQEQ mayor .)
    }               reduce using rule 217 (eq -> eq EQEQ mayor .)


state 274

    (233) tCompareEQ -> eMat .
    (236) tCompare -> eMat .
    (167) eMat -> eMat . + p
    (169) eMat -> eMat . + valoresMat
    (172) eMat -> eMat . - p
    (174) eMat -> eMat . - valoresMat

    EQEQ            reduce using rule 233 (tCompareEQ -> eMat .)
    DISTINTO        reduce using rule 233 (tCompareEQ -> eMat .)
    AND             reduce using rule 233 (tCompareEQ -> eMat .)
    OR              reduce using rule 233 (tCompareEQ -> eMat .)
    ?               reduce using rule 233 (tCompareEQ -> eMat .)
    ,               reduce using rule 233 (tCompareEQ -> eMat .)
    ]               reduce using rule 233 (tCompareEQ -> eMat .)
    )               reduce using rule 233 (tCompareEQ -> eMat .)
    ;               reduce using rule 233 (tCompareEQ -> eMat .)
    :               reduce using rule 233 (tCompareEQ -> eMat .)
    }               reduce using rule 233 (tCompareEQ -> eMat .)
    >               reduce using rule 236 (tCompare -> eMat .)
    <               reduce using rule 236 (tCompare -> eMat .)
    +               shift and go to state 168
    -               shift and go to state 169


state 275

    (234) tCompareEQ -> ( . ternarioBool )
    (235) tCompareEQ -> ( . ternarioMat )
    (242) tCompare -> ( . ternarioMat )
    (166) valoresMat -> ( . ternarioMat )
    (250) parenBool -> ( . expBool )
    (199) paren -> ( . eMat )
    (200) paren -> ( . valoresMat )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (53) funcBool -> . COLINEALES ( valores , valores )
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (58) vec -> . [ elem ]
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 370
    BOOL            shift and go to state 187
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 369
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 371
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 387
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    expBool                        shift and go to state 372
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 276

    (221) eq -> eq EQEQ tCompareEQ .

    EQEQ            reduce using rule 221 (eq -> eq EQEQ tCompareEQ .)
    DISTINTO        reduce using rule 221 (eq -> eq EQEQ tCompareEQ .)
    AND             reduce using rule 221 (eq -> eq EQEQ tCompareEQ .)
    ?               reduce using rule 221 (eq -> eq EQEQ tCompareEQ .)
    OR              reduce using rule 221 (eq -> eq EQEQ tCompareEQ .)
    )               reduce using rule 221 (eq -> eq EQEQ tCompareEQ .)
    :               reduce using rule 221 (eq -> eq EQEQ tCompareEQ .)
    ,               reduce using rule 221 (eq -> eq EQEQ tCompareEQ .)
    ]               reduce using rule 221 (eq -> eq EQEQ tCompareEQ .)
    ;               reduce using rule 221 (eq -> eq EQEQ tCompareEQ .)
    }               reduce using rule 221 (eq -> eq EQEQ tCompareEQ .)


state 277

    (226) tCompareEQ -> BOOL .

    EQEQ            reduce using rule 226 (tCompareEQ -> BOOL .)
    DISTINTO        reduce using rule 226 (tCompareEQ -> BOOL .)
    AND             reduce using rule 226 (tCompareEQ -> BOOL .)
    OR              reduce using rule 226 (tCompareEQ -> BOOL .)
    ?               reduce using rule 226 (tCompareEQ -> BOOL .)
    ,               reduce using rule 226 (tCompareEQ -> BOOL .)
    ]               reduce using rule 226 (tCompareEQ -> BOOL .)
    )               reduce using rule 226 (tCompareEQ -> BOOL .)
    ;               reduce using rule 226 (tCompareEQ -> BOOL .)
    :               reduce using rule 226 (tCompareEQ -> BOOL .)
    }               reduce using rule 226 (tCompareEQ -> BOOL .)


state 278

    (229) tCompareEQ -> varsOps .
    (237) tCompare -> varsOps .
    (165) valoresMat -> varsOps .

    EQEQ            reduce using rule 229 (tCompareEQ -> varsOps .)
    DISTINTO        reduce using rule 229 (tCompareEQ -> varsOps .)
    AND             reduce using rule 229 (tCompareEQ -> varsOps .)
    OR              reduce using rule 229 (tCompareEQ -> varsOps .)
    ?               reduce using rule 229 (tCompareEQ -> varsOps .)
    ,               reduce using rule 229 (tCompareEQ -> varsOps .)
    ]               reduce using rule 229 (tCompareEQ -> varsOps .)
    )               reduce using rule 229 (tCompareEQ -> varsOps .)
    ;               reduce using rule 229 (tCompareEQ -> varsOps .)
    :               reduce using rule 229 (tCompareEQ -> varsOps .)
    }               reduce using rule 229 (tCompareEQ -> varsOps .)
    >               reduce using rule 237 (tCompare -> varsOps .)
    <               reduce using rule 237 (tCompare -> varsOps .)
    +               reduce using rule 165 (valoresMat -> varsOps .)
    -               reduce using rule 165 (valoresMat -> varsOps .)
    *               reduce using rule 165 (valoresMat -> varsOps .)
    /               reduce using rule 165 (valoresMat -> varsOps .)
    %               reduce using rule 165 (valoresMat -> varsOps .)
    ^               reduce using rule 165 (valoresMat -> varsOps .)


state 279

    (228) tCompareEQ -> varYVals .
    (238) tCompare -> varYVals .
    (164) valoresMat -> varYVals .

    EQEQ            reduce using rule 228 (tCompareEQ -> varYVals .)
    DISTINTO        reduce using rule 228 (tCompareEQ -> varYVals .)
    AND             reduce using rule 228 (tCompareEQ -> varYVals .)
    OR              reduce using rule 228 (tCompareEQ -> varYVals .)
    ?               reduce using rule 228 (tCompareEQ -> varYVals .)
    ,               reduce using rule 228 (tCompareEQ -> varYVals .)
    ]               reduce using rule 228 (tCompareEQ -> varYVals .)
    )               reduce using rule 228 (tCompareEQ -> varYVals .)
    ;               reduce using rule 228 (tCompareEQ -> varYVals .)
    :               reduce using rule 228 (tCompareEQ -> varYVals .)
    }               reduce using rule 228 (tCompareEQ -> varYVals .)
    >               reduce using rule 238 (tCompare -> varYVals .)
    <               reduce using rule 238 (tCompare -> varYVals .)
    +               reduce using rule 164 (valoresMat -> varYVals .)
    -               reduce using rule 164 (valoresMat -> varYVals .)
    *               reduce using rule 164 (valoresMat -> varYVals .)
    /               reduce using rule 164 (valoresMat -> varYVals .)
    %               reduce using rule 164 (valoresMat -> varYVals .)
    ^               reduce using rule 164 (valoresMat -> varYVals .)


state 280

    (218) eq -> eq DISTINTO mayor .

    EQEQ            reduce using rule 218 (eq -> eq DISTINTO mayor .)
    DISTINTO        reduce using rule 218 (eq -> eq DISTINTO mayor .)
    AND             reduce using rule 218 (eq -> eq DISTINTO mayor .)
    ?               reduce using rule 218 (eq -> eq DISTINTO mayor .)
    OR              reduce using rule 218 (eq -> eq DISTINTO mayor .)
    )               reduce using rule 218 (eq -> eq DISTINTO mayor .)
    :               reduce using rule 218 (eq -> eq DISTINTO mayor .)
    ,               reduce using rule 218 (eq -> eq DISTINTO mayor .)
    ]               reduce using rule 218 (eq -> eq DISTINTO mayor .)
    ;               reduce using rule 218 (eq -> eq DISTINTO mayor .)
    }               reduce using rule 218 (eq -> eq DISTINTO mayor .)


state 281

    (222) eq -> eq DISTINTO tCompareEQ .

    EQEQ            reduce using rule 222 (eq -> eq DISTINTO tCompareEQ .)
    DISTINTO        reduce using rule 222 (eq -> eq DISTINTO tCompareEQ .)
    AND             reduce using rule 222 (eq -> eq DISTINTO tCompareEQ .)
    ?               reduce using rule 222 (eq -> eq DISTINTO tCompareEQ .)
    OR              reduce using rule 222 (eq -> eq DISTINTO tCompareEQ .)
    )               reduce using rule 222 (eq -> eq DISTINTO tCompareEQ .)
    :               reduce using rule 222 (eq -> eq DISTINTO tCompareEQ .)
    ,               reduce using rule 222 (eq -> eq DISTINTO tCompareEQ .)
    ]               reduce using rule 222 (eq -> eq DISTINTO tCompareEQ .)
    ;               reduce using rule 222 (eq -> eq DISTINTO tCompareEQ .)
    }               reduce using rule 222 (eq -> eq DISTINTO tCompareEQ .)


state 282

    (144) varYVals -> vecVal . varYVals .
    (151) variable -> vecVal . varYVals .

    ?               reduce using rule 144 (varYVals -> vecVal . varYVals .)
    OR              reduce using rule 144 (varYVals -> vecVal . varYVals .)
    AND             reduce using rule 144 (varYVals -> vecVal . varYVals .)
    +               reduce using rule 144 (varYVals -> vecVal . varYVals .)
    -               reduce using rule 144 (varYVals -> vecVal . varYVals .)
    *               reduce using rule 144 (varYVals -> vecVal . varYVals .)
    /               reduce using rule 144 (varYVals -> vecVal . varYVals .)
    %               reduce using rule 144 (varYVals -> vecVal . varYVals .)
    ^               reduce using rule 144 (varYVals -> vecVal . varYVals .)
    EQEQ            reduce using rule 144 (varYVals -> vecVal . varYVals .)
    DISTINTO        reduce using rule 144 (varYVals -> vecVal . varYVals .)
    >               reduce using rule 144 (varYVals -> vecVal . varYVals .)
    <               reduce using rule 144 (varYVals -> vecVal . varYVals .)
    )               reduce using rule 144 (varYVals -> vecVal . varYVals .)
    ,               reduce using rule 144 (varYVals -> vecVal . varYVals .)
    ]               reduce using rule 144 (varYVals -> vecVal . varYVals .)
    ;               reduce using rule 144 (varYVals -> vecVal . varYVals .)
    :               reduce using rule 144 (varYVals -> vecVal . varYVals .)
    }               reduce using rule 144 (varYVals -> vecVal . varYVals .)
    MASMAS          reduce using rule 151 (variable -> vecVal . varYVals .)
    MENOSMENOS      reduce using rule 151 (variable -> vecVal . varYVals .)


state 283

    (213) and -> valoresBool AND eq .
    (217) eq -> eq . EQEQ mayor
    (218) eq -> eq . DISTINTO mayor
    (221) eq -> eq . EQEQ tCompareEQ
    (222) eq -> eq . DISTINTO tCompareEQ

    AND             reduce using rule 213 (and -> valoresBool AND eq .)
    )               reduce using rule 213 (and -> valoresBool AND eq .)
    ?               reduce using rule 213 (and -> valoresBool AND eq .)
    OR              reduce using rule 213 (and -> valoresBool AND eq .)
    ,               reduce using rule 213 (and -> valoresBool AND eq .)
    ]               reduce using rule 213 (and -> valoresBool AND eq .)
    ;               reduce using rule 213 (and -> valoresBool AND eq .)
    :               reduce using rule 213 (and -> valoresBool AND eq .)
    }               reduce using rule 213 (and -> valoresBool AND eq .)
    EQEQ            shift and go to state 162
    DISTINTO        shift and go to state 163


state 284

    (215) and -> valoresBool AND valoresBool .

    AND             reduce using rule 215 (and -> valoresBool AND valoresBool .)
    )               reduce using rule 215 (and -> valoresBool AND valoresBool .)
    ?               reduce using rule 215 (and -> valoresBool AND valoresBool .)
    OR              reduce using rule 215 (and -> valoresBool AND valoresBool .)
    ,               reduce using rule 215 (and -> valoresBool AND valoresBool .)
    ]               reduce using rule 215 (and -> valoresBool AND valoresBool .)
    ;               reduce using rule 215 (and -> valoresBool AND valoresBool .)
    :               reduce using rule 215 (and -> valoresBool AND valoresBool .)
    }               reduce using rule 215 (and -> valoresBool AND valoresBool .)


state 285

    (208) expBool -> valoresBool OR and .
    (212) and -> and . AND eq
    (214) and -> and . AND valoresBool

    )               reduce using rule 208 (expBool -> valoresBool OR and .)
    ?               reduce using rule 208 (expBool -> valoresBool OR and .)
    OR              reduce using rule 208 (expBool -> valoresBool OR and .)
    :               reduce using rule 208 (expBool -> valoresBool OR and .)
    ]               reduce using rule 208 (expBool -> valoresBool OR and .)
    ,               reduce using rule 208 (expBool -> valoresBool OR and .)
    }               reduce using rule 208 (expBool -> valoresBool OR and .)
    ;               reduce using rule 208 (expBool -> valoresBool OR and .)
    AND             shift and go to state 154


state 286

    (210) expBool -> valoresBool OR valoresBool .
    (213) and -> valoresBool . AND eq
    (215) and -> valoresBool . AND valoresBool

    )               reduce using rule 210 (expBool -> valoresBool OR valoresBool .)
    ?               reduce using rule 210 (expBool -> valoresBool OR valoresBool .)
    OR              reduce using rule 210 (expBool -> valoresBool OR valoresBool .)
    :               reduce using rule 210 (expBool -> valoresBool OR valoresBool .)
    ]               reduce using rule 210 (expBool -> valoresBool OR valoresBool .)
    ,               reduce using rule 210 (expBool -> valoresBool OR valoresBool .)
    }               reduce using rule 210 (expBool -> valoresBool OR valoresBool .)
    ;               reduce using rule 210 (expBool -> valoresBool OR valoresBool .)
    AND             shift and go to state 165


state 287

    (138) valoresTernarioBool -> funcBool .
    (202) valoresBool -> funcBool .
    (227) tCompareEQ -> funcBool .

    ,               reduce using rule 138 (valoresTernarioBool -> funcBool .)
    ]               reduce using rule 138 (valoresTernarioBool -> funcBool .)
    )               reduce using rule 138 (valoresTernarioBool -> funcBool .)
    ;               reduce using rule 138 (valoresTernarioBool -> funcBool .)
    :               reduce using rule 138 (valoresTernarioBool -> funcBool .)
    }               reduce using rule 138 (valoresTernarioBool -> funcBool .)
    ?               reduce using rule 202 (valoresBool -> funcBool .)
    OR              reduce using rule 202 (valoresBool -> funcBool .)
    AND             reduce using rule 202 (valoresBool -> funcBool .)
    EQEQ            reduce using rule 227 (tCompareEQ -> funcBool .)
    DISTINTO        reduce using rule 227 (tCompareEQ -> funcBool .)


state 288

    (125) valoresTernarioVars -> RES .

    ,               reduce using rule 125 (valoresTernarioVars -> RES .)
    ]               reduce using rule 125 (valoresTernarioVars -> RES .)
    )               reduce using rule 125 (valoresTernarioVars -> RES .)
    ;               reduce using rule 125 (valoresTernarioVars -> RES .)
    :               reduce using rule 125 (valoresTernarioVars -> RES .)
    }               reduce using rule 125 (valoresTernarioVars -> RES .)


state 289

    (130) valoresTernarioMat -> funcInt .
    (160) valoresMat -> funcInt .
    (232) tCompareEQ -> funcInt .
    (240) tCompare -> funcInt .

    :               reduce using rule 130 (valoresTernarioMat -> funcInt .)
    ,               reduce using rule 130 (valoresTernarioMat -> funcInt .)
    ]               reduce using rule 130 (valoresTernarioMat -> funcInt .)
    )               reduce using rule 130 (valoresTernarioMat -> funcInt .)
    ;               reduce using rule 130 (valoresTernarioMat -> funcInt .)
    }               reduce using rule 130 (valoresTernarioMat -> funcInt .)
    +               reduce using rule 160 (valoresMat -> funcInt .)
    -               reduce using rule 160 (valoresMat -> funcInt .)
    *               reduce using rule 160 (valoresMat -> funcInt .)
    /               reduce using rule 160 (valoresMat -> funcInt .)
    %               reduce using rule 160 (valoresMat -> funcInt .)
    ^               reduce using rule 160 (valoresMat -> funcInt .)
    EQEQ            reduce using rule 232 (tCompareEQ -> funcInt .)
    DISTINTO        reduce using rule 232 (tCompareEQ -> funcInt .)
    >               reduce using rule 240 (tCompare -> funcInt .)
    <               reduce using rule 240 (tCompare -> funcInt .)


state 290

    (143) varYVals -> vecVal .
    (144) varYVals -> vecVal . . varYVals
    (150) variable -> vecVal .
    (151) variable -> vecVal . . varYVals
    (63) vecVal -> vecVal . [ expresion ]
    (66) vecVal -> vecVal . [ INT ]

    :               reduce using rule 143 (varYVals -> vecVal .)
    ?               reduce using rule 143 (varYVals -> vecVal .)
    OR              reduce using rule 143 (varYVals -> vecVal .)
    AND             reduce using rule 143 (varYVals -> vecVal .)
    +               reduce using rule 143 (varYVals -> vecVal .)
    -               reduce using rule 143 (varYVals -> vecVal .)
    *               reduce using rule 143 (varYVals -> vecVal .)
    /               reduce using rule 143 (varYVals -> vecVal .)
    %               reduce using rule 143 (varYVals -> vecVal .)
    ^               reduce using rule 143 (varYVals -> vecVal .)
    EQEQ            reduce using rule 143 (varYVals -> vecVal .)
    DISTINTO        reduce using rule 143 (varYVals -> vecVal .)
    >               reduce using rule 143 (varYVals -> vecVal .)
    <               reduce using rule 143 (varYVals -> vecVal .)
    ,               reduce using rule 143 (varYVals -> vecVal .)
    ]               reduce using rule 143 (varYVals -> vecVal .)
    )               reduce using rule 143 (varYVals -> vecVal .)
    ;               reduce using rule 143 (varYVals -> vecVal .)
    }               reduce using rule 143 (varYVals -> vecVal .)
    .               shift and go to state 164
    MASMAS          reduce using rule 150 (variable -> vecVal .)
    MENOSMENOS      reduce using rule 150 (variable -> vecVal .)
    [               shift and go to state 45


state 291

    (126) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (208) expBool -> valoresBool . OR and
    (210) expBool -> valoresBool . OR valoresBool
    (108) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (213) and -> valoresBool . AND eq
    (215) and -> valoresBool . AND valoresBool

    ?               shift and go to state 167
    OR              shift and go to state 166
    AND             shift and go to state 165


state 292

    (132) valoresTernarioMat -> eMat .
    (167) eMat -> eMat . + p
    (169) eMat -> eMat . + valoresMat
    (172) eMat -> eMat . - p
    (174) eMat -> eMat . - valoresMat
    (233) tCompareEQ -> eMat .
    (236) tCompare -> eMat .

    :               reduce using rule 132 (valoresTernarioMat -> eMat .)
    ,               reduce using rule 132 (valoresTernarioMat -> eMat .)
    ]               reduce using rule 132 (valoresTernarioMat -> eMat .)
    )               reduce using rule 132 (valoresTernarioMat -> eMat .)
    ;               reduce using rule 132 (valoresTernarioMat -> eMat .)
    }               reduce using rule 132 (valoresTernarioMat -> eMat .)
    +               shift and go to state 168
    -               shift and go to state 169
    EQEQ            reduce using rule 233 (tCompareEQ -> eMat .)
    DISTINTO        reduce using rule 233 (tCompareEQ -> eMat .)
    >               reduce using rule 236 (tCompare -> eMat .)
    <               reduce using rule 236 (tCompare -> eMat .)


state 293

    (135) ternarioBool -> valoresBool ? valoresTernarioBool . : valoresTernarioBool
    (112) ternarioVars -> valoresBool ? valoresTernarioBool . : valoresTernarioVars

    :               shift and go to state 388


state 294

    (97) atributos -> ID . . valoresCampos
    (142) varYVals -> ID .
    (149) variable -> ID .
    (61) vecVal -> ID . [ expresion ]
    (64) vecVal -> ID . [ INT ]

    .               shift and go to state 207
    :               reduce using rule 142 (varYVals -> ID .)
    ?               reduce using rule 142 (varYVals -> ID .)
    OR              reduce using rule 142 (varYVals -> ID .)
    AND             reduce using rule 142 (varYVals -> ID .)
    +               reduce using rule 142 (varYVals -> ID .)
    -               reduce using rule 142 (varYVals -> ID .)
    *               reduce using rule 142 (varYVals -> ID .)
    /               reduce using rule 142 (varYVals -> ID .)
    %               reduce using rule 142 (varYVals -> ID .)
    ^               reduce using rule 142 (varYVals -> ID .)
    EQEQ            reduce using rule 142 (varYVals -> ID .)
    DISTINTO        reduce using rule 142 (varYVals -> ID .)
    >               reduce using rule 142 (varYVals -> ID .)
    <               reduce using rule 142 (varYVals -> ID .)
    ,               reduce using rule 142 (varYVals -> ID .)
    ]               reduce using rule 142 (varYVals -> ID .)
    )               reduce using rule 142 (varYVals -> ID .)
    ;               reduce using rule 142 (varYVals -> ID .)
    }               reduce using rule 142 (varYVals -> ID .)
    MASMAS          reduce using rule 149 (variable -> ID .)
    MENOSMENOS      reduce using rule 149 (variable -> ID .)
    [               shift and go to state 105


state 295

    (133) valoresTernarioMat -> ternarioMat .

    :               reduce using rule 133 (valoresTernarioMat -> ternarioMat .)
    ,               reduce using rule 133 (valoresTernarioMat -> ternarioMat .)
    ]               reduce using rule 133 (valoresTernarioMat -> ternarioMat .)
    )               reduce using rule 133 (valoresTernarioMat -> ternarioMat .)
    ;               reduce using rule 133 (valoresTernarioMat -> ternarioMat .)
    }               reduce using rule 133 (valoresTernarioMat -> ternarioMat .)


state 296

    (119) valoresTernarioVars -> vec .
    (62) vecVal -> vec . [ expresion ]
    (65) vecVal -> vec . [ INT ]

    ,               reduce using rule 119 (valoresTernarioVars -> vec .)
    ]               reduce using rule 119 (valoresTernarioVars -> vec .)
    )               reduce using rule 119 (valoresTernarioVars -> vec .)
    ;               reduce using rule 119 (valoresTernarioVars -> vec .)
    :               reduce using rule 119 (valoresTernarioVars -> vec .)
    }               reduce using rule 119 (valoresTernarioVars -> vec .)
    [               shift and go to state 115


state 297

    (123) valoresTernarioVars -> varsOps .
    (165) valoresMat -> varsOps .
    (204) valoresBool -> varsOps .
    (229) tCompareEQ -> varsOps .
    (237) tCompare -> varsOps .

    :               reduce using rule 123 (valoresTernarioVars -> varsOps .)
    ,               reduce using rule 123 (valoresTernarioVars -> varsOps .)
    ]               reduce using rule 123 (valoresTernarioVars -> varsOps .)
    )               reduce using rule 123 (valoresTernarioVars -> varsOps .)
    ;               reduce using rule 123 (valoresTernarioVars -> varsOps .)
    }               reduce using rule 123 (valoresTernarioVars -> varsOps .)
    +               reduce using rule 165 (valoresMat -> varsOps .)
    -               reduce using rule 165 (valoresMat -> varsOps .)
    *               reduce using rule 165 (valoresMat -> varsOps .)
    /               reduce using rule 165 (valoresMat -> varsOps .)
    %               reduce using rule 165 (valoresMat -> varsOps .)
    ^               reduce using rule 165 (valoresMat -> varsOps .)
    ?               reduce using rule 204 (valoresBool -> varsOps .)
    OR              reduce using rule 204 (valoresBool -> varsOps .)
    AND             reduce using rule 204 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 229 (tCompareEQ -> varsOps .)
    DISTINTO        reduce using rule 229 (tCompareEQ -> varsOps .)
    >               reduce using rule 237 (tCompare -> varsOps .)
    <               reduce using rule 237 (tCompare -> varsOps .)


state 298

    (118) valoresTernarioVars -> reg .
    (98) atributos -> reg . . valoresCampos

    ,               reduce using rule 118 (valoresTernarioVars -> reg .)
    ]               reduce using rule 118 (valoresTernarioVars -> reg .)
    )               reduce using rule 118 (valoresTernarioVars -> reg .)
    ;               reduce using rule 118 (valoresTernarioVars -> reg .)
    :               reduce using rule 118 (valoresTernarioVars -> reg .)
    }               reduce using rule 118 (valoresTernarioVars -> reg .)
    .               shift and go to state 202


state 299

    (108) ternarioVars -> valoresBool ? valoresTernarioVars . : valoresTernarioVars
    (109) ternarioVars -> valoresBool ? valoresTernarioVars . : valoresTernarioMat
    (111) ternarioVars -> valoresBool ? valoresTernarioVars . : valoresTernarioBool

    :               shift and go to state 389


state 300

    (131) valoresTernarioMat -> STRING .
    (163) valoresMat -> STRING .

    :               reduce using rule 131 (valoresTernarioMat -> STRING .)
    ,               reduce using rule 131 (valoresTernarioMat -> STRING .)
    ]               reduce using rule 131 (valoresTernarioMat -> STRING .)
    )               reduce using rule 131 (valoresTernarioMat -> STRING .)
    ;               reduce using rule 131 (valoresTernarioMat -> STRING .)
    }               reduce using rule 131 (valoresTernarioMat -> STRING .)
    +               reduce using rule 163 (valoresMat -> STRING .)
    -               reduce using rule 163 (valoresMat -> STRING .)
    *               reduce using rule 163 (valoresMat -> STRING .)
    /               reduce using rule 163 (valoresMat -> STRING .)
    %               reduce using rule 163 (valoresMat -> STRING .)
    ^               reduce using rule 163 (valoresMat -> STRING .)


state 301

    (139) valoresTernarioBool -> ternarioBool .

    ,               reduce using rule 139 (valoresTernarioBool -> ternarioBool .)
    ]               reduce using rule 139 (valoresTernarioBool -> ternarioBool .)
    )               reduce using rule 139 (valoresTernarioBool -> ternarioBool .)
    ;               reduce using rule 139 (valoresTernarioBool -> ternarioBool .)
    :               reduce using rule 139 (valoresTernarioBool -> ternarioBool .)
    }               reduce using rule 139 (valoresTernarioBool -> ternarioBool .)


state 302

    (126) ternarioMat -> valoresBool ? valoresTernarioMat . : valoresTernarioMat
    (110) ternarioVars -> valoresBool ? valoresTernarioMat . : valoresTernarioVars

    :               shift and go to state 390


state 303

    (128) valoresTernarioMat -> INT .
    (158) valoresMat -> INT .
    (230) tCompareEQ -> INT .
    (239) tCompare -> INT .

    :               reduce using rule 128 (valoresTernarioMat -> INT .)
    ,               reduce using rule 128 (valoresTernarioMat -> INT .)
    ]               reduce using rule 128 (valoresTernarioMat -> INT .)
    )               reduce using rule 128 (valoresTernarioMat -> INT .)
    ;               reduce using rule 128 (valoresTernarioMat -> INT .)
    }               reduce using rule 128 (valoresTernarioMat -> INT .)
    +               reduce using rule 158 (valoresMat -> INT .)
    -               reduce using rule 158 (valoresMat -> INT .)
    *               reduce using rule 158 (valoresMat -> INT .)
    /               reduce using rule 158 (valoresMat -> INT .)
    %               reduce using rule 158 (valoresMat -> INT .)
    ^               reduce using rule 158 (valoresMat -> INT .)
    EQEQ            reduce using rule 230 (tCompareEQ -> INT .)
    DISTINTO        reduce using rule 230 (tCompareEQ -> INT .)
    >               reduce using rule 239 (tCompare -> INT .)
    <               reduce using rule 239 (tCompare -> INT .)


state 304

    (129) valoresTernarioMat -> FLOAT .
    (159) valoresMat -> FLOAT .
    (231) tCompareEQ -> FLOAT .
    (241) tCompare -> FLOAT .

    :               reduce using rule 129 (valoresTernarioMat -> FLOAT .)
    ,               reduce using rule 129 (valoresTernarioMat -> FLOAT .)
    ]               reduce using rule 129 (valoresTernarioMat -> FLOAT .)
    )               reduce using rule 129 (valoresTernarioMat -> FLOAT .)
    ;               reduce using rule 129 (valoresTernarioMat -> FLOAT .)
    }               reduce using rule 129 (valoresTernarioMat -> FLOAT .)
    +               reduce using rule 159 (valoresMat -> FLOAT .)
    -               reduce using rule 159 (valoresMat -> FLOAT .)
    *               reduce using rule 159 (valoresMat -> FLOAT .)
    /               reduce using rule 159 (valoresMat -> FLOAT .)
    %               reduce using rule 159 (valoresMat -> FLOAT .)
    ^               reduce using rule 159 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 231 (tCompareEQ -> FLOAT .)
    DISTINTO        reduce using rule 231 (tCompareEQ -> FLOAT .)
    >               reduce using rule 241 (tCompare -> FLOAT .)
    <               reduce using rule 241 (tCompare -> FLOAT .)


state 305

    (137) valoresTernarioBool -> BOOL .
    (201) valoresBool -> BOOL .
    (226) tCompareEQ -> BOOL .

    ,               reduce using rule 137 (valoresTernarioBool -> BOOL .)
    ]               reduce using rule 137 (valoresTernarioBool -> BOOL .)
    )               reduce using rule 137 (valoresTernarioBool -> BOOL .)
    ;               reduce using rule 137 (valoresTernarioBool -> BOOL .)
    :               reduce using rule 137 (valoresTernarioBool -> BOOL .)
    }               reduce using rule 137 (valoresTernarioBool -> BOOL .)
    ?               reduce using rule 201 (valoresBool -> BOOL .)
    OR              reduce using rule 201 (valoresBool -> BOOL .)
    AND             reduce using rule 201 (valoresBool -> BOOL .)
    EQEQ            reduce using rule 226 (tCompareEQ -> BOOL .)
    DISTINTO        reduce using rule 226 (tCompareEQ -> BOOL .)


state 306

    (141) valoresTernarioBool -> expBool .
    (127) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (136) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> expBool . OR and
    (209) expBool -> expBool . OR valoresBool
    (113) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars

    :               reduce using rule 141 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 204
    OR              shift and go to state 203


state 307

    (134) valoresTernarioMat -> ( . ternarioMat )
    (140) valoresTernarioBool -> ( . ternarioBool )
    (121) valoresTernarioVars -> ( . ternarioVars )
    (166) valoresMat -> ( . ternarioMat )
    (205) valoresBool -> ( . ternarioBool )
    (234) tCompareEQ -> ( . ternarioBool )
    (235) tCompareEQ -> ( . ternarioMat )
    (199) paren -> ( . eMat )
    (200) paren -> ( . valoresMat )
    (242) tCompare -> ( . ternarioMat )
    (250) parenBool -> ( . expBool )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (53) funcBool -> . COLINEALES ( valores , valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (58) vec -> . [ elem ]
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 177
    BOOL            shift and go to state 187
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 175
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 391
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 392
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    expBool                        shift and go to state 188
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 179
    ternarioVars                   shift and go to state 393
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 308

    (120) valoresTernarioVars -> ternarioVars .

    ,               reduce using rule 120 (valoresTernarioVars -> ternarioVars .)
    ]               reduce using rule 120 (valoresTernarioVars -> ternarioVars .)
    )               reduce using rule 120 (valoresTernarioVars -> ternarioVars .)
    ;               reduce using rule 120 (valoresTernarioVars -> ternarioVars .)
    :               reduce using rule 120 (valoresTernarioVars -> ternarioVars .)
    }               reduce using rule 120 (valoresTernarioVars -> ternarioVars .)


state 309

    (124) valoresTernarioVars -> varYVals .
    (164) valoresMat -> varYVals .
    (203) valoresBool -> varYVals .
    (228) tCompareEQ -> varYVals .
    (238) tCompare -> varYVals .

    :               reduce using rule 124 (valoresTernarioVars -> varYVals .)
    ,               reduce using rule 124 (valoresTernarioVars -> varYVals .)
    ]               reduce using rule 124 (valoresTernarioVars -> varYVals .)
    )               reduce using rule 124 (valoresTernarioVars -> varYVals .)
    ;               reduce using rule 124 (valoresTernarioVars -> varYVals .)
    }               reduce using rule 124 (valoresTernarioVars -> varYVals .)
    +               reduce using rule 164 (valoresMat -> varYVals .)
    -               reduce using rule 164 (valoresMat -> varYVals .)
    *               reduce using rule 164 (valoresMat -> varYVals .)
    /               reduce using rule 164 (valoresMat -> varYVals .)
    %               reduce using rule 164 (valoresMat -> varYVals .)
    ^               reduce using rule 164 (valoresMat -> varYVals .)
    ?               reduce using rule 203 (valoresBool -> varYVals .)
    OR              reduce using rule 203 (valoresBool -> varYVals .)
    AND             reduce using rule 203 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 228 (tCompareEQ -> varYVals .)
    DISTINTO        reduce using rule 228 (tCompareEQ -> varYVals .)
    >               reduce using rule 238 (tCompare -> varYVals .)
    <               reduce using rule 238 (tCompare -> varYVals .)


state 310

    (122) valoresTernarioVars -> atributos .
    (161) valoresMat -> atributos .

    ,               reduce using rule 122 (valoresTernarioVars -> atributos .)
    ]               reduce using rule 122 (valoresTernarioVars -> atributos .)
    )               reduce using rule 122 (valoresTernarioVars -> atributos .)
    ;               reduce using rule 122 (valoresTernarioVars -> atributos .)
    :               reduce using rule 122 (valoresTernarioVars -> atributos .)
    }               reduce using rule 122 (valoresTernarioVars -> atributos .)
    +               reduce using rule 161 (valoresMat -> atributos .)
    -               reduce using rule 161 (valoresMat -> atributos .)
    *               reduce using rule 161 (valoresMat -> atributos .)
    /               reduce using rule 161 (valoresMat -> atributos .)
    %               reduce using rule 161 (valoresMat -> atributos .)
    ^               reduce using rule 161 (valoresMat -> atributos .)


state 311

    (169) eMat -> eMat + valoresMat .
    (179) p -> valoresMat . * exp
    (180) p -> valoresMat . / exp
    (181) p -> valoresMat . % exp
    (185) p -> valoresMat . * valoresMat
    (186) p -> valoresMat . / valoresMat
    (187) p -> valoresMat . % valoresMat
    (190) exp -> valoresMat . ^ iSing
    (192) exp -> valoresMat . ^ valoresMat

    )               reduce using rule 169 (eMat -> eMat + valoresMat .)
    +               reduce using rule 169 (eMat -> eMat + valoresMat .)
    -               reduce using rule 169 (eMat -> eMat + valoresMat .)
    EQEQ            reduce using rule 169 (eMat -> eMat + valoresMat .)
    DISTINTO        reduce using rule 169 (eMat -> eMat + valoresMat .)
    >               reduce using rule 169 (eMat -> eMat + valoresMat .)
    <               reduce using rule 169 (eMat -> eMat + valoresMat .)
    ,               reduce using rule 169 (eMat -> eMat + valoresMat .)
    ]               reduce using rule 169 (eMat -> eMat + valoresMat .)
    ;               reduce using rule 169 (eMat -> eMat + valoresMat .)
    :               reduce using rule 169 (eMat -> eMat + valoresMat .)
    }               reduce using rule 169 (eMat -> eMat + valoresMat .)
    AND             reduce using rule 169 (eMat -> eMat + valoresMat .)
    OR              reduce using rule 169 (eMat -> eMat + valoresMat .)
    ?               reduce using rule 169 (eMat -> eMat + valoresMat .)
    *               shift and go to state 158
    /               shift and go to state 160
    %               shift and go to state 156
    ^               shift and go to state 161


state 312

    (167) eMat -> eMat + p .
    (176) p -> p . * exp
    (177) p -> p . / exp
    (178) p -> p . % exp
    (182) p -> p . * valoresMat
    (183) p -> p . / valoresMat
    (184) p -> p . % valoresMat

    )               reduce using rule 167 (eMat -> eMat + p .)
    +               reduce using rule 167 (eMat -> eMat + p .)
    -               reduce using rule 167 (eMat -> eMat + p .)
    EQEQ            reduce using rule 167 (eMat -> eMat + p .)
    DISTINTO        reduce using rule 167 (eMat -> eMat + p .)
    >               reduce using rule 167 (eMat -> eMat + p .)
    <               reduce using rule 167 (eMat -> eMat + p .)
    ,               reduce using rule 167 (eMat -> eMat + p .)
    ]               reduce using rule 167 (eMat -> eMat + p .)
    ;               reduce using rule 167 (eMat -> eMat + p .)
    :               reduce using rule 167 (eMat -> eMat + p .)
    }               reduce using rule 167 (eMat -> eMat + p .)
    AND             reduce using rule 167 (eMat -> eMat + p .)
    OR              reduce using rule 167 (eMat -> eMat + p .)
    ?               reduce using rule 167 (eMat -> eMat + p .)
    *               shift and go to state 210
    /               shift and go to state 211
    %               shift and go to state 209


state 313

    (174) eMat -> eMat - valoresMat .
    (179) p -> valoresMat . * exp
    (180) p -> valoresMat . / exp
    (181) p -> valoresMat . % exp
    (185) p -> valoresMat . * valoresMat
    (186) p -> valoresMat . / valoresMat
    (187) p -> valoresMat . % valoresMat
    (190) exp -> valoresMat . ^ iSing
    (192) exp -> valoresMat . ^ valoresMat

    )               reduce using rule 174 (eMat -> eMat - valoresMat .)
    +               reduce using rule 174 (eMat -> eMat - valoresMat .)
    -               reduce using rule 174 (eMat -> eMat - valoresMat .)
    EQEQ            reduce using rule 174 (eMat -> eMat - valoresMat .)
    DISTINTO        reduce using rule 174 (eMat -> eMat - valoresMat .)
    >               reduce using rule 174 (eMat -> eMat - valoresMat .)
    <               reduce using rule 174 (eMat -> eMat - valoresMat .)
    ,               reduce using rule 174 (eMat -> eMat - valoresMat .)
    ]               reduce using rule 174 (eMat -> eMat - valoresMat .)
    ;               reduce using rule 174 (eMat -> eMat - valoresMat .)
    :               reduce using rule 174 (eMat -> eMat - valoresMat .)
    }               reduce using rule 174 (eMat -> eMat - valoresMat .)
    AND             reduce using rule 174 (eMat -> eMat - valoresMat .)
    OR              reduce using rule 174 (eMat -> eMat - valoresMat .)
    ?               reduce using rule 174 (eMat -> eMat - valoresMat .)
    *               shift and go to state 158
    /               shift and go to state 160
    %               shift and go to state 156
    ^               shift and go to state 161


state 314

    (172) eMat -> eMat - p .
    (176) p -> p . * exp
    (177) p -> p . / exp
    (178) p -> p . % exp
    (182) p -> p . * valoresMat
    (183) p -> p . / valoresMat
    (184) p -> p . % valoresMat

    )               reduce using rule 172 (eMat -> eMat - p .)
    +               reduce using rule 172 (eMat -> eMat - p .)
    -               reduce using rule 172 (eMat -> eMat - p .)
    EQEQ            reduce using rule 172 (eMat -> eMat - p .)
    DISTINTO        reduce using rule 172 (eMat -> eMat - p .)
    >               reduce using rule 172 (eMat -> eMat - p .)
    <               reduce using rule 172 (eMat -> eMat - p .)
    ,               reduce using rule 172 (eMat -> eMat - p .)
    ]               reduce using rule 172 (eMat -> eMat - p .)
    ;               reduce using rule 172 (eMat -> eMat - p .)
    :               reduce using rule 172 (eMat -> eMat - p .)
    }               reduce using rule 172 (eMat -> eMat - p .)
    AND             reduce using rule 172 (eMat -> eMat - p .)
    OR              reduce using rule 172 (eMat -> eMat - p .)
    ?               reduce using rule 172 (eMat -> eMat - p .)
    *               shift and go to state 210
    /               shift and go to state 211
    %               shift and go to state 209


state 315

    (219) eq -> tCompareEQ EQEQ mayor .

    EQEQ            reduce using rule 219 (eq -> tCompareEQ EQEQ mayor .)
    DISTINTO        reduce using rule 219 (eq -> tCompareEQ EQEQ mayor .)
    AND             reduce using rule 219 (eq -> tCompareEQ EQEQ mayor .)
    ?               reduce using rule 219 (eq -> tCompareEQ EQEQ mayor .)
    OR              reduce using rule 219 (eq -> tCompareEQ EQEQ mayor .)
    )               reduce using rule 219 (eq -> tCompareEQ EQEQ mayor .)
    :               reduce using rule 219 (eq -> tCompareEQ EQEQ mayor .)
    ,               reduce using rule 219 (eq -> tCompareEQ EQEQ mayor .)
    ]               reduce using rule 219 (eq -> tCompareEQ EQEQ mayor .)
    ;               reduce using rule 219 (eq -> tCompareEQ EQEQ mayor .)
    }               reduce using rule 219 (eq -> tCompareEQ EQEQ mayor .)


state 316

    (223) eq -> tCompareEQ EQEQ tCompareEQ .

    EQEQ            reduce using rule 223 (eq -> tCompareEQ EQEQ tCompareEQ .)
    DISTINTO        reduce using rule 223 (eq -> tCompareEQ EQEQ tCompareEQ .)
    AND             reduce using rule 223 (eq -> tCompareEQ EQEQ tCompareEQ .)
    ?               reduce using rule 223 (eq -> tCompareEQ EQEQ tCompareEQ .)
    OR              reduce using rule 223 (eq -> tCompareEQ EQEQ tCompareEQ .)
    )               reduce using rule 223 (eq -> tCompareEQ EQEQ tCompareEQ .)
    :               reduce using rule 223 (eq -> tCompareEQ EQEQ tCompareEQ .)
    ,               reduce using rule 223 (eq -> tCompareEQ EQEQ tCompareEQ .)
    ]               reduce using rule 223 (eq -> tCompareEQ EQEQ tCompareEQ .)
    ;               reduce using rule 223 (eq -> tCompareEQ EQEQ tCompareEQ .)
    }               reduce using rule 223 (eq -> tCompareEQ EQEQ tCompareEQ .)


state 317

    (220) eq -> tCompareEQ DISTINTO mayor .

    EQEQ            reduce using rule 220 (eq -> tCompareEQ DISTINTO mayor .)
    DISTINTO        reduce using rule 220 (eq -> tCompareEQ DISTINTO mayor .)
    AND             reduce using rule 220 (eq -> tCompareEQ DISTINTO mayor .)
    ?               reduce using rule 220 (eq -> tCompareEQ DISTINTO mayor .)
    OR              reduce using rule 220 (eq -> tCompareEQ DISTINTO mayor .)
    )               reduce using rule 220 (eq -> tCompareEQ DISTINTO mayor .)
    :               reduce using rule 220 (eq -> tCompareEQ DISTINTO mayor .)
    ,               reduce using rule 220 (eq -> tCompareEQ DISTINTO mayor .)
    ]               reduce using rule 220 (eq -> tCompareEQ DISTINTO mayor .)
    ;               reduce using rule 220 (eq -> tCompareEQ DISTINTO mayor .)
    }               reduce using rule 220 (eq -> tCompareEQ DISTINTO mayor .)


state 318

    (224) eq -> tCompareEQ DISTINTO tCompareEQ .

    EQEQ            reduce using rule 224 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    DISTINTO        reduce using rule 224 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    AND             reduce using rule 224 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    ?               reduce using rule 224 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    OR              reduce using rule 224 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    )               reduce using rule 224 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    :               reduce using rule 224 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    ,               reduce using rule 224 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    ]               reduce using rule 224 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    ;               reduce using rule 224 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    }               reduce using rule 224 (eq -> tCompareEQ DISTINTO tCompareEQ .)


state 319

    (200) paren -> ( valoresMat ) .

    ^               reduce using rule 200 (paren -> ( valoresMat ) .)
    *               reduce using rule 200 (paren -> ( valoresMat ) .)
    /               reduce using rule 200 (paren -> ( valoresMat ) .)
    %               reduce using rule 200 (paren -> ( valoresMat ) .)
    +               reduce using rule 200 (paren -> ( valoresMat ) .)
    -               reduce using rule 200 (paren -> ( valoresMat ) .)
    :               reduce using rule 200 (paren -> ( valoresMat ) .)
    EQEQ            reduce using rule 200 (paren -> ( valoresMat ) .)
    DISTINTO        reduce using rule 200 (paren -> ( valoresMat ) .)
    >               reduce using rule 200 (paren -> ( valoresMat ) .)
    <               reduce using rule 200 (paren -> ( valoresMat ) .)
    ,               reduce using rule 200 (paren -> ( valoresMat ) .)
    ]               reduce using rule 200 (paren -> ( valoresMat ) .)
    )               reduce using rule 200 (paren -> ( valoresMat ) .)
    ;               reduce using rule 200 (paren -> ( valoresMat ) .)
    AND             reduce using rule 200 (paren -> ( valoresMat ) .)
    OR              reduce using rule 200 (paren -> ( valoresMat ) .)
    ?               reduce using rule 200 (paren -> ( valoresMat ) .)
    }               reduce using rule 200 (paren -> ( valoresMat ) .)


state 320

    (199) paren -> ( eMat ) .

    ^               reduce using rule 199 (paren -> ( eMat ) .)
    *               reduce using rule 199 (paren -> ( eMat ) .)
    /               reduce using rule 199 (paren -> ( eMat ) .)
    %               reduce using rule 199 (paren -> ( eMat ) .)
    +               reduce using rule 199 (paren -> ( eMat ) .)
    -               reduce using rule 199 (paren -> ( eMat ) .)
    :               reduce using rule 199 (paren -> ( eMat ) .)
    EQEQ            reduce using rule 199 (paren -> ( eMat ) .)
    DISTINTO        reduce using rule 199 (paren -> ( eMat ) .)
    >               reduce using rule 199 (paren -> ( eMat ) .)
    <               reduce using rule 199 (paren -> ( eMat ) .)
    ,               reduce using rule 199 (paren -> ( eMat ) .)
    ]               reduce using rule 199 (paren -> ( eMat ) .)
    )               reduce using rule 199 (paren -> ( eMat ) .)
    ;               reduce using rule 199 (paren -> ( eMat ) .)
    AND             reduce using rule 199 (paren -> ( eMat ) .)
    OR              reduce using rule 199 (paren -> ( eMat ) .)
    ?               reduce using rule 199 (paren -> ( eMat ) .)
    }               reduce using rule 199 (paren -> ( eMat ) .)


state 321

    (126) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (208) expBool -> valoresBool . OR and
    (210) expBool -> valoresBool . OR valoresBool
    (213) and -> valoresBool . AND eq
    (215) and -> valoresBool . AND valoresBool

    ?               shift and go to state 394
    OR              shift and go to state 166
    AND             shift and go to state 165


state 322

    (166) valoresMat -> ( ternarioMat . )
    (235) tCompareEQ -> ( ternarioMat . )
    (242) tCompare -> ( ternarioMat . )

    )               shift and go to state 395


state 323

    (205) valoresBool -> ( ternarioBool . )
    (234) tCompareEQ -> ( ternarioBool . )

    )               shift and go to state 396


state 324

    (250) parenBool -> ( expBool . )
    (127) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (136) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> expBool . OR and
    (209) expBool -> expBool . OR valoresBool

    )               shift and go to state 327
    ?               shift and go to state 397
    OR              shift and go to state 203


state 325

    (104) ternario -> ( ternarioMat ) .
    (166) valoresMat -> ( ternarioMat ) .
    (235) tCompareEQ -> ( ternarioMat ) .
    (242) tCompare -> ( ternarioMat ) .

    ;               reduce using rule 104 (ternario -> ( ternarioMat ) .)
    ,               reduce using rule 104 (ternario -> ( ternarioMat ) .)
    )               reduce using rule 104 (ternario -> ( ternarioMat ) .)
    }               reduce using rule 104 (ternario -> ( ternarioMat ) .)
    ]               reduce using rule 104 (ternario -> ( ternarioMat ) .)
    +               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    ^               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    EQEQ            reduce using rule 235 (tCompareEQ -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 235 (tCompareEQ -> ( ternarioMat ) .)
    >               reduce using rule 242 (tCompare -> ( ternarioMat ) .)
    <               reduce using rule 242 (tCompare -> ( ternarioMat ) .)


state 326

    (105) ternario -> ( ternarioBool ) .
    (205) valoresBool -> ( ternarioBool ) .
    (234) tCompareEQ -> ( ternarioBool ) .

    ;               reduce using rule 105 (ternario -> ( ternarioBool ) .)
    ,               reduce using rule 105 (ternario -> ( ternarioBool ) .)
    )               reduce using rule 105 (ternario -> ( ternarioBool ) .)
    }               reduce using rule 105 (ternario -> ( ternarioBool ) .)
    ]               reduce using rule 105 (ternario -> ( ternarioBool ) .)
    OR              reduce using rule 205 (valoresBool -> ( ternarioBool ) .)
    AND             reduce using rule 205 (valoresBool -> ( ternarioBool ) .)
    ?               reduce using rule 205 (valoresBool -> ( ternarioBool ) .)
    EQEQ            reduce using rule 234 (tCompareEQ -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 234 (tCompareEQ -> ( ternarioBool ) .)


state 327

    (250) parenBool -> ( expBool ) .

    EQEQ            reduce using rule 250 (parenBool -> ( expBool ) .)
    DISTINTO        reduce using rule 250 (parenBool -> ( expBool ) .)
    AND             reduce using rule 250 (parenBool -> ( expBool ) .)
    ?               reduce using rule 250 (parenBool -> ( expBool ) .)
    OR              reduce using rule 250 (parenBool -> ( expBool ) .)
    ,               reduce using rule 250 (parenBool -> ( expBool ) .)
    ]               reduce using rule 250 (parenBool -> ( expBool ) .)
    )               reduce using rule 250 (parenBool -> ( expBool ) .)
    ;               reduce using rule 250 (parenBool -> ( expBool ) .)
    :               reduce using rule 250 (parenBool -> ( expBool ) .)
    }               reduce using rule 250 (parenBool -> ( expBool ) .)


state 328

    (107) ternario -> ( ternarioVars ) .

    ;               reduce using rule 107 (ternario -> ( ternarioVars ) .)
    ,               reduce using rule 107 (ternario -> ( ternarioVars ) .)
    )               reduce using rule 107 (ternario -> ( ternarioVars ) .)
    }               reduce using rule 107 (ternario -> ( ternarioVars ) .)
    ]               reduce using rule 107 (ternario -> ( ternarioVars ) .)


state 329

    (126) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (208) expBool -> valoresBool . OR and
    (210) expBool -> valoresBool . OR valoresBool
    (213) and -> valoresBool . AND eq
    (215) and -> valoresBool . AND valoresBool

    ?               shift and go to state 398
    OR              shift and go to state 166
    AND             shift and go to state 165


state 330

    (166) valoresMat -> ( . ternarioMat )
    (205) valoresBool -> ( . ternarioBool )
    (199) paren -> ( . eMat )
    (200) paren -> ( . valoresMat )
    (234) tCompareEQ -> ( . ternarioBool )
    (235) tCompareEQ -> ( . ternarioMat )
    (242) tCompare -> ( . ternarioMat )
    (250) parenBool -> ( . expBool )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (53) funcBool -> . COLINEALES ( valores , valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (58) vec -> . [ elem ]
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 177
    BOOL            shift and go to state 187
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    valoresBool                    shift and go to state 321
    ternarioMat                    shift and go to state 322
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 323
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    expBool                        shift and go to state 324
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 331

    (166) valoresMat -> ( ternarioMat . )

    )               shift and go to state 399


state 332

    (127) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (207) expBool -> expBool . OR and
    (209) expBool -> expBool . OR valoresBool

    ?               shift and go to state 400
    OR              shift and go to state 203


state 333

    (101) valoresCampos -> BEGIN .

    ,               reduce using rule 101 (valoresCampos -> BEGIN .)
    ]               reduce using rule 101 (valoresCampos -> BEGIN .)
    +               reduce using rule 101 (valoresCampos -> BEGIN .)
    -               reduce using rule 101 (valoresCampos -> BEGIN .)
    *               reduce using rule 101 (valoresCampos -> BEGIN .)
    /               reduce using rule 101 (valoresCampos -> BEGIN .)
    %               reduce using rule 101 (valoresCampos -> BEGIN .)
    ^               reduce using rule 101 (valoresCampos -> BEGIN .)
    )               reduce using rule 101 (valoresCampos -> BEGIN .)
    ;               reduce using rule 101 (valoresCampos -> BEGIN .)
    EQEQ            reduce using rule 101 (valoresCampos -> BEGIN .)
    DISTINTO        reduce using rule 101 (valoresCampos -> BEGIN .)
    >               reduce using rule 101 (valoresCampos -> BEGIN .)
    <               reduce using rule 101 (valoresCampos -> BEGIN .)
    AND             reduce using rule 101 (valoresCampos -> BEGIN .)
    OR              reduce using rule 101 (valoresCampos -> BEGIN .)
    ?               reduce using rule 101 (valoresCampos -> BEGIN .)
    :               reduce using rule 101 (valoresCampos -> BEGIN .)
    }               reduce using rule 101 (valoresCampos -> BEGIN .)


state 334

    (100) valoresCampos -> END .

    ,               reduce using rule 100 (valoresCampos -> END .)
    ]               reduce using rule 100 (valoresCampos -> END .)
    +               reduce using rule 100 (valoresCampos -> END .)
    -               reduce using rule 100 (valoresCampos -> END .)
    *               reduce using rule 100 (valoresCampos -> END .)
    /               reduce using rule 100 (valoresCampos -> END .)
    %               reduce using rule 100 (valoresCampos -> END .)
    ^               reduce using rule 100 (valoresCampos -> END .)
    )               reduce using rule 100 (valoresCampos -> END .)
    ;               reduce using rule 100 (valoresCampos -> END .)
    EQEQ            reduce using rule 100 (valoresCampos -> END .)
    DISTINTO        reduce using rule 100 (valoresCampos -> END .)
    >               reduce using rule 100 (valoresCampos -> END .)
    <               reduce using rule 100 (valoresCampos -> END .)
    AND             reduce using rule 100 (valoresCampos -> END .)
    OR              reduce using rule 100 (valoresCampos -> END .)
    ?               reduce using rule 100 (valoresCampos -> END .)
    :               reduce using rule 100 (valoresCampos -> END .)
    }               reduce using rule 100 (valoresCampos -> END .)


state 335

    (98) atributos -> reg . valoresCampos .

    :               reduce using rule 98 (atributos -> reg . valoresCampos .)
    +               reduce using rule 98 (atributos -> reg . valoresCampos .)
    -               reduce using rule 98 (atributos -> reg . valoresCampos .)
    *               reduce using rule 98 (atributos -> reg . valoresCampos .)
    /               reduce using rule 98 (atributos -> reg . valoresCampos .)
    %               reduce using rule 98 (atributos -> reg . valoresCampos .)
    ^               reduce using rule 98 (atributos -> reg . valoresCampos .)
    ,               reduce using rule 98 (atributos -> reg . valoresCampos .)
    ]               reduce using rule 98 (atributos -> reg . valoresCampos .)
    EQEQ            reduce using rule 98 (atributos -> reg . valoresCampos .)
    DISTINTO        reduce using rule 98 (atributos -> reg . valoresCampos .)
    >               reduce using rule 98 (atributos -> reg . valoresCampos .)
    <               reduce using rule 98 (atributos -> reg . valoresCampos .)
    )               reduce using rule 98 (atributos -> reg . valoresCampos .)
    ;               reduce using rule 98 (atributos -> reg . valoresCampos .)
    AND             reduce using rule 98 (atributos -> reg . valoresCampos .)
    OR              reduce using rule 98 (atributos -> reg . valoresCampos .)
    ?               reduce using rule 98 (atributos -> reg . valoresCampos .)
    }               reduce using rule 98 (atributos -> reg . valoresCampos .)


state 336

    (99) valoresCampos -> varYVals .

    ,               reduce using rule 99 (valoresCampos -> varYVals .)
    ]               reduce using rule 99 (valoresCampos -> varYVals .)
    +               reduce using rule 99 (valoresCampos -> varYVals .)
    -               reduce using rule 99 (valoresCampos -> varYVals .)
    *               reduce using rule 99 (valoresCampos -> varYVals .)
    /               reduce using rule 99 (valoresCampos -> varYVals .)
    %               reduce using rule 99 (valoresCampos -> varYVals .)
    ^               reduce using rule 99 (valoresCampos -> varYVals .)
    )               reduce using rule 99 (valoresCampos -> varYVals .)
    ;               reduce using rule 99 (valoresCampos -> varYVals .)
    EQEQ            reduce using rule 99 (valoresCampos -> varYVals .)
    DISTINTO        reduce using rule 99 (valoresCampos -> varYVals .)
    >               reduce using rule 99 (valoresCampos -> varYVals .)
    <               reduce using rule 99 (valoresCampos -> varYVals .)
    AND             reduce using rule 99 (valoresCampos -> varYVals .)
    OR              reduce using rule 99 (valoresCampos -> varYVals .)
    ?               reduce using rule 99 (valoresCampos -> varYVals .)
    :               reduce using rule 99 (valoresCampos -> varYVals .)
    }               reduce using rule 99 (valoresCampos -> varYVals .)


state 337

    (207) expBool -> expBool OR and .
    (212) and -> and . AND eq
    (214) and -> and . AND valoresBool

    )               reduce using rule 207 (expBool -> expBool OR and .)
    ?               reduce using rule 207 (expBool -> expBool OR and .)
    OR              reduce using rule 207 (expBool -> expBool OR and .)
    :               reduce using rule 207 (expBool -> expBool OR and .)
    ]               reduce using rule 207 (expBool -> expBool OR and .)
    ,               reduce using rule 207 (expBool -> expBool OR and .)
    }               reduce using rule 207 (expBool -> expBool OR and .)
    ;               reduce using rule 207 (expBool -> expBool OR and .)
    AND             shift and go to state 154


state 338

    (209) expBool -> expBool OR valoresBool .
    (213) and -> valoresBool . AND eq
    (215) and -> valoresBool . AND valoresBool

    )               reduce using rule 209 (expBool -> expBool OR valoresBool .)
    ?               reduce using rule 209 (expBool -> expBool OR valoresBool .)
    OR              reduce using rule 209 (expBool -> expBool OR valoresBool .)
    :               reduce using rule 209 (expBool -> expBool OR valoresBool .)
    ]               reduce using rule 209 (expBool -> expBool OR valoresBool .)
    ,               reduce using rule 209 (expBool -> expBool OR valoresBool .)
    }               reduce using rule 209 (expBool -> expBool OR valoresBool .)
    ;               reduce using rule 209 (expBool -> expBool OR valoresBool .)
    AND             shift and go to state 165


state 339

    (136) ternarioBool -> expBool ? valoresTernarioBool . : valoresTernarioBool
    (117) ternarioVars -> expBool ? valoresTernarioBool . : valoresTernarioVars

    :               shift and go to state 401


state 340

    (113) ternarioVars -> expBool ? valoresTernarioVars . : valoresTernarioVars
    (114) ternarioVars -> expBool ? valoresTernarioVars . : valoresTernarioMat
    (116) ternarioVars -> expBool ? valoresTernarioVars . : valoresTernarioBool

    :               shift and go to state 402


state 341

    (127) ternarioMat -> expBool ? valoresTernarioMat . : valoresTernarioMat
    (115) ternarioVars -> expBool ? valoresTernarioMat . : valoresTernarioVars

    :               shift and go to state 403


state 342

    (240) tCompare -> funcInt .
    (160) valoresMat -> funcInt .

    EQEQ            reduce using rule 240 (tCompare -> funcInt .)
    DISTINTO        reduce using rule 240 (tCompare -> funcInt .)
    AND             reduce using rule 240 (tCompare -> funcInt .)
    OR              reduce using rule 240 (tCompare -> funcInt .)
    ?               reduce using rule 240 (tCompare -> funcInt .)
    ,               reduce using rule 240 (tCompare -> funcInt .)
    ]               reduce using rule 240 (tCompare -> funcInt .)
    )               reduce using rule 240 (tCompare -> funcInt .)
    ;               reduce using rule 240 (tCompare -> funcInt .)
    :               reduce using rule 240 (tCompare -> funcInt .)
    }               reduce using rule 240 (tCompare -> funcInt .)
    +               reduce using rule 160 (valoresMat -> funcInt .)
    -               reduce using rule 160 (valoresMat -> funcInt .)
    *               reduce using rule 160 (valoresMat -> funcInt .)
    /               reduce using rule 160 (valoresMat -> funcInt .)
    %               reduce using rule 160 (valoresMat -> funcInt .)
    ^               reduce using rule 160 (valoresMat -> funcInt .)


state 343

    (236) tCompare -> eMat .
    (167) eMat -> eMat . + p
    (169) eMat -> eMat . + valoresMat
    (172) eMat -> eMat . - p
    (174) eMat -> eMat . - valoresMat

    EQEQ            reduce using rule 236 (tCompare -> eMat .)
    DISTINTO        reduce using rule 236 (tCompare -> eMat .)
    AND             reduce using rule 236 (tCompare -> eMat .)
    OR              reduce using rule 236 (tCompare -> eMat .)
    ?               reduce using rule 236 (tCompare -> eMat .)
    ,               reduce using rule 236 (tCompare -> eMat .)
    ]               reduce using rule 236 (tCompare -> eMat .)
    )               reduce using rule 236 (tCompare -> eMat .)
    ;               reduce using rule 236 (tCompare -> eMat .)
    :               reduce using rule 236 (tCompare -> eMat .)
    }               reduce using rule 236 (tCompare -> eMat .)
    +               shift and go to state 168
    -               shift and go to state 169


state 344

    (242) tCompare -> ( . ternarioMat )
    (166) valoresMat -> ( . ternarioMat )
    (199) paren -> ( . eMat )
    (200) paren -> ( . valoresMat )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (53) funcBool -> . COLINEALES ( valores , valores )
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (58) vec -> . [ elem ]
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 177
    BOOL            shift and go to state 187
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    valoresBool                    shift and go to state 329
    ternarioMat                    shift and go to state 404
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    expBool                        shift and go to state 332
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 345

    (245) menor -> tCompare < tCompare .

    EQEQ            reduce using rule 245 (menor -> tCompare < tCompare .)
    DISTINTO        reduce using rule 245 (menor -> tCompare < tCompare .)
    AND             reduce using rule 245 (menor -> tCompare < tCompare .)
    ?               reduce using rule 245 (menor -> tCompare < tCompare .)
    OR              reduce using rule 245 (menor -> tCompare < tCompare .)
    ,               reduce using rule 245 (menor -> tCompare < tCompare .)
    ]               reduce using rule 245 (menor -> tCompare < tCompare .)
    )               reduce using rule 245 (menor -> tCompare < tCompare .)
    ;               reduce using rule 245 (menor -> tCompare < tCompare .)
    :               reduce using rule 245 (menor -> tCompare < tCompare .)
    }               reduce using rule 245 (menor -> tCompare < tCompare .)


state 346

    (142) varYVals -> ID .
    (149) variable -> ID .
    (61) vecVal -> ID . [ expresion ]
    (64) vecVal -> ID . [ INT ]
    (97) atributos -> ID . . valoresCampos

    EQEQ            reduce using rule 142 (varYVals -> ID .)
    DISTINTO        reduce using rule 142 (varYVals -> ID .)
    AND             reduce using rule 142 (varYVals -> ID .)
    OR              reduce using rule 142 (varYVals -> ID .)
    ?               reduce using rule 142 (varYVals -> ID .)
    ,               reduce using rule 142 (varYVals -> ID .)
    ]               reduce using rule 142 (varYVals -> ID .)
    )               reduce using rule 142 (varYVals -> ID .)
    ;               reduce using rule 142 (varYVals -> ID .)
    :               reduce using rule 142 (varYVals -> ID .)
    }               reduce using rule 142 (varYVals -> ID .)
    +               reduce using rule 142 (varYVals -> ID .)
    -               reduce using rule 142 (varYVals -> ID .)
    *               reduce using rule 142 (varYVals -> ID .)
    /               reduce using rule 142 (varYVals -> ID .)
    %               reduce using rule 142 (varYVals -> ID .)
    ^               reduce using rule 142 (varYVals -> ID .)
    MASMAS          reduce using rule 149 (variable -> ID .)
    MENOSMENOS      reduce using rule 149 (variable -> ID .)
    [               shift and go to state 105
    .               shift and go to state 207


state 347

    (239) tCompare -> INT .
    (158) valoresMat -> INT .

    EQEQ            reduce using rule 239 (tCompare -> INT .)
    DISTINTO        reduce using rule 239 (tCompare -> INT .)
    AND             reduce using rule 239 (tCompare -> INT .)
    OR              reduce using rule 239 (tCompare -> INT .)
    ?               reduce using rule 239 (tCompare -> INT .)
    ,               reduce using rule 239 (tCompare -> INT .)
    ]               reduce using rule 239 (tCompare -> INT .)
    )               reduce using rule 239 (tCompare -> INT .)
    ;               reduce using rule 239 (tCompare -> INT .)
    :               reduce using rule 239 (tCompare -> INT .)
    }               reduce using rule 239 (tCompare -> INT .)
    +               reduce using rule 158 (valoresMat -> INT .)
    -               reduce using rule 158 (valoresMat -> INT .)
    *               reduce using rule 158 (valoresMat -> INT .)
    /               reduce using rule 158 (valoresMat -> INT .)
    %               reduce using rule 158 (valoresMat -> INT .)
    ^               reduce using rule 158 (valoresMat -> INT .)


state 348

    (241) tCompare -> FLOAT .
    (159) valoresMat -> FLOAT .

    EQEQ            reduce using rule 241 (tCompare -> FLOAT .)
    DISTINTO        reduce using rule 241 (tCompare -> FLOAT .)
    AND             reduce using rule 241 (tCompare -> FLOAT .)
    OR              reduce using rule 241 (tCompare -> FLOAT .)
    ?               reduce using rule 241 (tCompare -> FLOAT .)
    ,               reduce using rule 241 (tCompare -> FLOAT .)
    ]               reduce using rule 241 (tCompare -> FLOAT .)
    )               reduce using rule 241 (tCompare -> FLOAT .)
    ;               reduce using rule 241 (tCompare -> FLOAT .)
    :               reduce using rule 241 (tCompare -> FLOAT .)
    }               reduce using rule 241 (tCompare -> FLOAT .)
    +               reduce using rule 159 (valoresMat -> FLOAT .)
    -               reduce using rule 159 (valoresMat -> FLOAT .)
    *               reduce using rule 159 (valoresMat -> FLOAT .)
    /               reduce using rule 159 (valoresMat -> FLOAT .)
    %               reduce using rule 159 (valoresMat -> FLOAT .)
    ^               reduce using rule 159 (valoresMat -> FLOAT .)


state 349

    (237) tCompare -> varsOps .
    (165) valoresMat -> varsOps .

    EQEQ            reduce using rule 237 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 237 (tCompare -> varsOps .)
    AND             reduce using rule 237 (tCompare -> varsOps .)
    OR              reduce using rule 237 (tCompare -> varsOps .)
    ?               reduce using rule 237 (tCompare -> varsOps .)
    ,               reduce using rule 237 (tCompare -> varsOps .)
    ]               reduce using rule 237 (tCompare -> varsOps .)
    )               reduce using rule 237 (tCompare -> varsOps .)
    ;               reduce using rule 237 (tCompare -> varsOps .)
    :               reduce using rule 237 (tCompare -> varsOps .)
    }               reduce using rule 237 (tCompare -> varsOps .)
    +               reduce using rule 165 (valoresMat -> varsOps .)
    -               reduce using rule 165 (valoresMat -> varsOps .)
    *               reduce using rule 165 (valoresMat -> varsOps .)
    /               reduce using rule 165 (valoresMat -> varsOps .)
    %               reduce using rule 165 (valoresMat -> varsOps .)
    ^               reduce using rule 165 (valoresMat -> varsOps .)


state 350

    (238) tCompare -> varYVals .
    (164) valoresMat -> varYVals .

    EQEQ            reduce using rule 238 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 238 (tCompare -> varYVals .)
    AND             reduce using rule 238 (tCompare -> varYVals .)
    OR              reduce using rule 238 (tCompare -> varYVals .)
    ?               reduce using rule 238 (tCompare -> varYVals .)
    ,               reduce using rule 238 (tCompare -> varYVals .)
    ]               reduce using rule 238 (tCompare -> varYVals .)
    )               reduce using rule 238 (tCompare -> varYVals .)
    ;               reduce using rule 238 (tCompare -> varYVals .)
    :               reduce using rule 238 (tCompare -> varYVals .)
    }               reduce using rule 238 (tCompare -> varYVals .)
    +               reduce using rule 164 (valoresMat -> varYVals .)
    -               reduce using rule 164 (valoresMat -> varYVals .)
    *               reduce using rule 164 (valoresMat -> varYVals .)
    /               reduce using rule 164 (valoresMat -> varYVals .)
    %               reduce using rule 164 (valoresMat -> varYVals .)
    ^               reduce using rule 164 (valoresMat -> varYVals .)


state 351

    (243) mayor -> tCompare > tCompare .

    EQEQ            reduce using rule 243 (mayor -> tCompare > tCompare .)
    DISTINTO        reduce using rule 243 (mayor -> tCompare > tCompare .)
    AND             reduce using rule 243 (mayor -> tCompare > tCompare .)
    ?               reduce using rule 243 (mayor -> tCompare > tCompare .)
    OR              reduce using rule 243 (mayor -> tCompare > tCompare .)
    :               reduce using rule 243 (mayor -> tCompare > tCompare .)
    ,               reduce using rule 243 (mayor -> tCompare > tCompare .)
    ;               reduce using rule 243 (mayor -> tCompare > tCompare .)
    )               reduce using rule 243 (mayor -> tCompare > tCompare .)
    ]               reduce using rule 243 (mayor -> tCompare > tCompare .)
    }               reduce using rule 243 (mayor -> tCompare > tCompare .)


state 352

    (97) atributos -> ID . valoresCampos .

    :               reduce using rule 97 (atributos -> ID . valoresCampos .)
    +               reduce using rule 97 (atributos -> ID . valoresCampos .)
    -               reduce using rule 97 (atributos -> ID . valoresCampos .)
    *               reduce using rule 97 (atributos -> ID . valoresCampos .)
    /               reduce using rule 97 (atributos -> ID . valoresCampos .)
    %               reduce using rule 97 (atributos -> ID . valoresCampos .)
    ^               reduce using rule 97 (atributos -> ID . valoresCampos .)
    ,               reduce using rule 97 (atributos -> ID . valoresCampos .)
    ]               reduce using rule 97 (atributos -> ID . valoresCampos .)
    EQEQ            reduce using rule 97 (atributos -> ID . valoresCampos .)
    DISTINTO        reduce using rule 97 (atributos -> ID . valoresCampos .)
    >               reduce using rule 97 (atributos -> ID . valoresCampos .)
    <               reduce using rule 97 (atributos -> ID . valoresCampos .)
    )               reduce using rule 97 (atributos -> ID . valoresCampos .)
    ;               reduce using rule 97 (atributos -> ID . valoresCampos .)
    AND             reduce using rule 97 (atributos -> ID . valoresCampos .)
    OR              reduce using rule 97 (atributos -> ID . valoresCampos .)
    ?               reduce using rule 97 (atributos -> ID . valoresCampos .)
    }               reduce using rule 97 (atributos -> ID . valoresCampos .)


state 353

    (184) p -> p % valoresMat .
    (190) exp -> valoresMat . ^ iSing
    (192) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 184 (p -> p % valoresMat .)
    /               reduce using rule 184 (p -> p % valoresMat .)
    %               reduce using rule 184 (p -> p % valoresMat .)
    +               reduce using rule 184 (p -> p % valoresMat .)
    -               reduce using rule 184 (p -> p % valoresMat .)
    EQEQ            reduce using rule 184 (p -> p % valoresMat .)
    DISTINTO        reduce using rule 184 (p -> p % valoresMat .)
    >               reduce using rule 184 (p -> p % valoresMat .)
    <               reduce using rule 184 (p -> p % valoresMat .)
    :               reduce using rule 184 (p -> p % valoresMat .)
    ,               reduce using rule 184 (p -> p % valoresMat .)
    ]               reduce using rule 184 (p -> p % valoresMat .)
    )               reduce using rule 184 (p -> p % valoresMat .)
    ;               reduce using rule 184 (p -> p % valoresMat .)
    }               reduce using rule 184 (p -> p % valoresMat .)
    AND             reduce using rule 184 (p -> p % valoresMat .)
    OR              reduce using rule 184 (p -> p % valoresMat .)
    ?               reduce using rule 184 (p -> p % valoresMat .)
    ^               shift and go to state 161


state 354

    (178) p -> p % exp .
    (189) exp -> exp . ^ iSing
    (191) exp -> exp . ^ valoresMat

    *               reduce using rule 178 (p -> p % exp .)
    /               reduce using rule 178 (p -> p % exp .)
    %               reduce using rule 178 (p -> p % exp .)
    +               reduce using rule 178 (p -> p % exp .)
    -               reduce using rule 178 (p -> p % exp .)
    EQEQ            reduce using rule 178 (p -> p % exp .)
    DISTINTO        reduce using rule 178 (p -> p % exp .)
    >               reduce using rule 178 (p -> p % exp .)
    <               reduce using rule 178 (p -> p % exp .)
    :               reduce using rule 178 (p -> p % exp .)
    ,               reduce using rule 178 (p -> p % exp .)
    ]               reduce using rule 178 (p -> p % exp .)
    )               reduce using rule 178 (p -> p % exp .)
    ;               reduce using rule 178 (p -> p % exp .)
    }               reduce using rule 178 (p -> p % exp .)
    AND             reduce using rule 178 (p -> p % exp .)
    OR              reduce using rule 178 (p -> p % exp .)
    ?               reduce using rule 178 (p -> p % exp .)
    ^               shift and go to state 220


state 355

    (182) p -> p * valoresMat .
    (190) exp -> valoresMat . ^ iSing
    (192) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 182 (p -> p * valoresMat .)
    /               reduce using rule 182 (p -> p * valoresMat .)
    %               reduce using rule 182 (p -> p * valoresMat .)
    +               reduce using rule 182 (p -> p * valoresMat .)
    -               reduce using rule 182 (p -> p * valoresMat .)
    EQEQ            reduce using rule 182 (p -> p * valoresMat .)
    DISTINTO        reduce using rule 182 (p -> p * valoresMat .)
    >               reduce using rule 182 (p -> p * valoresMat .)
    <               reduce using rule 182 (p -> p * valoresMat .)
    :               reduce using rule 182 (p -> p * valoresMat .)
    ,               reduce using rule 182 (p -> p * valoresMat .)
    ]               reduce using rule 182 (p -> p * valoresMat .)
    )               reduce using rule 182 (p -> p * valoresMat .)
    ;               reduce using rule 182 (p -> p * valoresMat .)
    }               reduce using rule 182 (p -> p * valoresMat .)
    AND             reduce using rule 182 (p -> p * valoresMat .)
    OR              reduce using rule 182 (p -> p * valoresMat .)
    ?               reduce using rule 182 (p -> p * valoresMat .)
    ^               shift and go to state 161


state 356

    (176) p -> p * exp .
    (189) exp -> exp . ^ iSing
    (191) exp -> exp . ^ valoresMat

    *               reduce using rule 176 (p -> p * exp .)
    /               reduce using rule 176 (p -> p * exp .)
    %               reduce using rule 176 (p -> p * exp .)
    +               reduce using rule 176 (p -> p * exp .)
    -               reduce using rule 176 (p -> p * exp .)
    EQEQ            reduce using rule 176 (p -> p * exp .)
    DISTINTO        reduce using rule 176 (p -> p * exp .)
    >               reduce using rule 176 (p -> p * exp .)
    <               reduce using rule 176 (p -> p * exp .)
    :               reduce using rule 176 (p -> p * exp .)
    ,               reduce using rule 176 (p -> p * exp .)
    ]               reduce using rule 176 (p -> p * exp .)
    )               reduce using rule 176 (p -> p * exp .)
    ;               reduce using rule 176 (p -> p * exp .)
    }               reduce using rule 176 (p -> p * exp .)
    AND             reduce using rule 176 (p -> p * exp .)
    OR              reduce using rule 176 (p -> p * exp .)
    ?               reduce using rule 176 (p -> p * exp .)
    ^               shift and go to state 220


state 357

    (183) p -> p / valoresMat .
    (190) exp -> valoresMat . ^ iSing
    (192) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 183 (p -> p / valoresMat .)
    /               reduce using rule 183 (p -> p / valoresMat .)
    %               reduce using rule 183 (p -> p / valoresMat .)
    +               reduce using rule 183 (p -> p / valoresMat .)
    -               reduce using rule 183 (p -> p / valoresMat .)
    EQEQ            reduce using rule 183 (p -> p / valoresMat .)
    DISTINTO        reduce using rule 183 (p -> p / valoresMat .)
    >               reduce using rule 183 (p -> p / valoresMat .)
    <               reduce using rule 183 (p -> p / valoresMat .)
    :               reduce using rule 183 (p -> p / valoresMat .)
    ,               reduce using rule 183 (p -> p / valoresMat .)
    ]               reduce using rule 183 (p -> p / valoresMat .)
    )               reduce using rule 183 (p -> p / valoresMat .)
    ;               reduce using rule 183 (p -> p / valoresMat .)
    }               reduce using rule 183 (p -> p / valoresMat .)
    AND             reduce using rule 183 (p -> p / valoresMat .)
    OR              reduce using rule 183 (p -> p / valoresMat .)
    ?               reduce using rule 183 (p -> p / valoresMat .)
    ^               shift and go to state 161


state 358

    (177) p -> p / exp .
    (189) exp -> exp . ^ iSing
    (191) exp -> exp . ^ valoresMat

    *               reduce using rule 177 (p -> p / exp .)
    /               reduce using rule 177 (p -> p / exp .)
    %               reduce using rule 177 (p -> p / exp .)
    +               reduce using rule 177 (p -> p / exp .)
    -               reduce using rule 177 (p -> p / exp .)
    EQEQ            reduce using rule 177 (p -> p / exp .)
    DISTINTO        reduce using rule 177 (p -> p / exp .)
    >               reduce using rule 177 (p -> p / exp .)
    <               reduce using rule 177 (p -> p / exp .)
    :               reduce using rule 177 (p -> p / exp .)
    ,               reduce using rule 177 (p -> p / exp .)
    ]               reduce using rule 177 (p -> p / exp .)
    )               reduce using rule 177 (p -> p / exp .)
    ;               reduce using rule 177 (p -> p / exp .)
    }               reduce using rule 177 (p -> p / exp .)
    AND             reduce using rule 177 (p -> p / exp .)
    OR              reduce using rule 177 (p -> p / exp .)
    ?               reduce using rule 177 (p -> p / exp .)
    ^               shift and go to state 220


state 359

    (135) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (208) expBool -> valoresBool . OR and
    (210) expBool -> valoresBool . OR valoresBool
    (213) and -> valoresBool . AND eq
    (215) and -> valoresBool . AND valoresBool

    ?               shift and go to state 405
    OR              shift and go to state 166
    AND             shift and go to state 165


state 360

    (205) valoresBool -> ( ternarioBool . )

    )               shift and go to state 406


state 361

    (250) parenBool -> ( expBool . )
    (136) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> expBool . OR and
    (209) expBool -> expBool . OR valoresBool

    )               shift and go to state 327
    ?               shift and go to state 407
    OR              shift and go to state 203


state 362

    (191) exp -> exp ^ valoresMat .

    ^               reduce using rule 191 (exp -> exp ^ valoresMat .)
    *               reduce using rule 191 (exp -> exp ^ valoresMat .)
    /               reduce using rule 191 (exp -> exp ^ valoresMat .)
    %               reduce using rule 191 (exp -> exp ^ valoresMat .)
    +               reduce using rule 191 (exp -> exp ^ valoresMat .)
    -               reduce using rule 191 (exp -> exp ^ valoresMat .)
    ,               reduce using rule 191 (exp -> exp ^ valoresMat .)
    }               reduce using rule 191 (exp -> exp ^ valoresMat .)
    EQEQ            reduce using rule 191 (exp -> exp ^ valoresMat .)
    DISTINTO        reduce using rule 191 (exp -> exp ^ valoresMat .)
    >               reduce using rule 191 (exp -> exp ^ valoresMat .)
    <               reduce using rule 191 (exp -> exp ^ valoresMat .)
    )               reduce using rule 191 (exp -> exp ^ valoresMat .)
    :               reduce using rule 191 (exp -> exp ^ valoresMat .)
    ]               reduce using rule 191 (exp -> exp ^ valoresMat .)
    ;               reduce using rule 191 (exp -> exp ^ valoresMat .)
    AND             reduce using rule 191 (exp -> exp ^ valoresMat .)
    OR              reduce using rule 191 (exp -> exp ^ valoresMat .)
    ?               reduce using rule 191 (exp -> exp ^ valoresMat .)


state 363

    (189) exp -> exp ^ iSing .

    ^               reduce using rule 189 (exp -> exp ^ iSing .)
    *               reduce using rule 189 (exp -> exp ^ iSing .)
    /               reduce using rule 189 (exp -> exp ^ iSing .)
    %               reduce using rule 189 (exp -> exp ^ iSing .)
    +               reduce using rule 189 (exp -> exp ^ iSing .)
    -               reduce using rule 189 (exp -> exp ^ iSing .)
    ,               reduce using rule 189 (exp -> exp ^ iSing .)
    }               reduce using rule 189 (exp -> exp ^ iSing .)
    EQEQ            reduce using rule 189 (exp -> exp ^ iSing .)
    DISTINTO        reduce using rule 189 (exp -> exp ^ iSing .)
    >               reduce using rule 189 (exp -> exp ^ iSing .)
    <               reduce using rule 189 (exp -> exp ^ iSing .)
    )               reduce using rule 189 (exp -> exp ^ iSing .)
    :               reduce using rule 189 (exp -> exp ^ iSing .)
    ]               reduce using rule 189 (exp -> exp ^ iSing .)
    ;               reduce using rule 189 (exp -> exp ^ iSing .)
    AND             reduce using rule 189 (exp -> exp ^ iSing .)
    OR              reduce using rule 189 (exp -> exp ^ iSing .)
    ?               reduce using rule 189 (exp -> exp ^ iSing .)


state 364

    (94) reg -> { campos } .

    .               reduce using rule 94 (reg -> { campos } .)
    :               reduce using rule 94 (reg -> { campos } .)
    ,               reduce using rule 94 (reg -> { campos } .)
    ]               reduce using rule 94 (reg -> { campos } .)
    )               reduce using rule 94 (reg -> { campos } .)
    ;               reduce using rule 94 (reg -> { campos } .)
    }               reduce using rule 94 (reg -> { campos } .)


state 365

    (95) campos -> ID : . valores , campos
    (96) campos -> ID : . valores
    (80) valores -> . varYVals
    (81) valores -> . varsOps
    (82) valores -> . eMat
    (83) valores -> . expBool
    (84) valores -> . funcReturn
    (85) valores -> . reg
    (86) valores -> . INT
    (87) valores -> . FLOAT
    (88) valores -> . STRING
    (89) valores -> . BOOL
    (90) valores -> . ternario
    (91) valores -> . atributos
    (92) valores -> . vec
    (93) valores -> . RES
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (94) reg -> . { campos }
    (102) ternario -> . ternarioMat
    (103) ternario -> . ternarioBool
    (104) ternario -> . ( ternarioMat )
    (105) ternario -> . ( ternarioBool )
    (106) ternario -> . ternarioVars
    (107) ternario -> . ( ternarioVars )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    ?               reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 408
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 366

    (157) varAsig -> ID . ID = . valores
    (80) valores -> . varYVals
    (81) valores -> . varsOps
    (82) valores -> . eMat
    (83) valores -> . expBool
    (84) valores -> . funcReturn
    (85) valores -> . reg
    (86) valores -> . INT
    (87) valores -> . FLOAT
    (88) valores -> . STRING
    (89) valores -> . BOOL
    (90) valores -> . ternario
    (91) valores -> . atributos
    (92) valores -> . vec
    (93) valores -> . RES
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (94) reg -> . { campos }
    (102) ternario -> . ternarioMat
    (103) ternario -> . ternarioBool
    (104) ternario -> . ( ternarioMat )
    (105) ternario -> . ( ternarioBool )
    (106) ternario -> . ternarioVars
    (107) ternario -> . ( ternarioVars )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    ?               reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 409
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 367

    (61) vecVal -> ID [ expresion ] .

    .               reduce using rule 61 (vecVal -> ID [ expresion ] .)
    [               reduce using rule 61 (vecVal -> ID [ expresion ] .)
    ?               reduce using rule 61 (vecVal -> ID [ expresion ] .)
    OR              reduce using rule 61 (vecVal -> ID [ expresion ] .)
    AND             reduce using rule 61 (vecVal -> ID [ expresion ] .)
    +               reduce using rule 61 (vecVal -> ID [ expresion ] .)
    -               reduce using rule 61 (vecVal -> ID [ expresion ] .)
    *               reduce using rule 61 (vecVal -> ID [ expresion ] .)
    /               reduce using rule 61 (vecVal -> ID [ expresion ] .)
    %               reduce using rule 61 (vecVal -> ID [ expresion ] .)
    ^               reduce using rule 61 (vecVal -> ID [ expresion ] .)
    EQEQ            reduce using rule 61 (vecVal -> ID [ expresion ] .)
    DISTINTO        reduce using rule 61 (vecVal -> ID [ expresion ] .)
    >               reduce using rule 61 (vecVal -> ID [ expresion ] .)
    <               reduce using rule 61 (vecVal -> ID [ expresion ] .)
    MASMAS          reduce using rule 61 (vecVal -> ID [ expresion ] .)
    MENOSMENOS      reduce using rule 61 (vecVal -> ID [ expresion ] .)
    )               reduce using rule 61 (vecVal -> ID [ expresion ] .)
    ;               reduce using rule 61 (vecVal -> ID [ expresion ] .)
    ,               reduce using rule 61 (vecVal -> ID [ expresion ] .)
    ]               reduce using rule 61 (vecVal -> ID [ expresion ] .)
    :               reduce using rule 61 (vecVal -> ID [ expresion ] .)
    }               reduce using rule 61 (vecVal -> ID [ expresion ] .)
    MULEQ           reduce using rule 61 (vecVal -> ID [ expresion ] .)
    DIVEQ           reduce using rule 61 (vecVal -> ID [ expresion ] .)
    MASEQ           reduce using rule 61 (vecVal -> ID [ expresion ] .)
    MENOSEQ         reduce using rule 61 (vecVal -> ID [ expresion ] .)
    =               reduce using rule 61 (vecVal -> ID [ expresion ] .)


state 368

    (64) vecVal -> ID [ INT ] .

    .               reduce using rule 64 (vecVal -> ID [ INT ] .)
    [               reduce using rule 64 (vecVal -> ID [ INT ] .)
    ?               reduce using rule 64 (vecVal -> ID [ INT ] .)
    OR              reduce using rule 64 (vecVal -> ID [ INT ] .)
    AND             reduce using rule 64 (vecVal -> ID [ INT ] .)
    +               reduce using rule 64 (vecVal -> ID [ INT ] .)
    -               reduce using rule 64 (vecVal -> ID [ INT ] .)
    *               reduce using rule 64 (vecVal -> ID [ INT ] .)
    /               reduce using rule 64 (vecVal -> ID [ INT ] .)
    %               reduce using rule 64 (vecVal -> ID [ INT ] .)
    ^               reduce using rule 64 (vecVal -> ID [ INT ] .)
    EQEQ            reduce using rule 64 (vecVal -> ID [ INT ] .)
    DISTINTO        reduce using rule 64 (vecVal -> ID [ INT ] .)
    >               reduce using rule 64 (vecVal -> ID [ INT ] .)
    <               reduce using rule 64 (vecVal -> ID [ INT ] .)
    MASMAS          reduce using rule 64 (vecVal -> ID [ INT ] .)
    MENOSMENOS      reduce using rule 64 (vecVal -> ID [ INT ] .)
    )               reduce using rule 64 (vecVal -> ID [ INT ] .)
    ;               reduce using rule 64 (vecVal -> ID [ INT ] .)
    ,               reduce using rule 64 (vecVal -> ID [ INT ] .)
    ]               reduce using rule 64 (vecVal -> ID [ INT ] .)
    :               reduce using rule 64 (vecVal -> ID [ INT ] .)
    }               reduce using rule 64 (vecVal -> ID [ INT ] .)
    MULEQ           reduce using rule 64 (vecVal -> ID [ INT ] .)
    DIVEQ           reduce using rule 64 (vecVal -> ID [ INT ] .)
    MASEQ           reduce using rule 64 (vecVal -> ID [ INT ] .)
    MENOSEQ         reduce using rule 64 (vecVal -> ID [ INT ] .)
    =               reduce using rule 64 (vecVal -> ID [ INT ] .)


state 369

    (135) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (126) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (208) expBool -> valoresBool . OR and
    (210) expBool -> valoresBool . OR valoresBool
    (213) and -> valoresBool . AND eq
    (215) and -> valoresBool . AND valoresBool

    ?               shift and go to state 410
    OR              shift and go to state 166
    AND             shift and go to state 165


state 370

    (166) valoresMat -> ( . ternarioMat )
    (205) valoresBool -> ( . ternarioBool )
    (234) tCompareEQ -> ( . ternarioBool )
    (235) tCompareEQ -> ( . ternarioMat )
    (242) tCompare -> ( . ternarioMat )
    (199) paren -> ( . eMat )
    (200) paren -> ( . valoresMat )
    (250) parenBool -> ( . expBool )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (53) funcBool -> . COLINEALES ( valores , valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (58) vec -> . [ elem ]
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 177
    BOOL            shift and go to state 187
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    valoresBool                    shift and go to state 321
    ternarioMat                    shift and go to state 322
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 323
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    expBool                        shift and go to state 324
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 371

    (235) tCompareEQ -> ( ternarioMat . )
    (242) tCompare -> ( ternarioMat . )
    (166) valoresMat -> ( ternarioMat . )

    )               shift and go to state 411


state 372

    (250) parenBool -> ( expBool . )
    (136) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (127) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (207) expBool -> expBool . OR and
    (209) expBool -> expBool . OR valoresBool

    )               shift and go to state 327
    ?               shift and go to state 412
    OR              shift and go to state 203


state 373

    (6) lAbierta -> IF ( cosaBooleana ) . linea
    (7) lAbierta -> IF ( cosaBooleana ) . COMMENT com linea
    (8) lAbierta -> IF ( cosaBooleana ) . { g } ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> IF ( cosaBooleana ) . lCerrada ELSE lAbierta
    (11) lAbierta -> IF ( cosaBooleana ) . { g }
    (16) lCerrada -> IF ( cosaBooleana ) . { g } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE { g }
    (18) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) . { g } ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE COMMENT com lCerrada
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (152) varAsig -> . variable MULEQ valores
    (153) varAsig -> . variable DIVEQ valores
    (154) varAsig -> . variable MASEQ valores
    (155) varAsig -> . variable MENOSEQ valores
    (156) varAsig -> . variable = valores
    (157) varAsig -> . ID . ID = valores
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]

    COMMENT         shift and go to state 414
    {               shift and go to state 417
    IF              shift and go to state 415
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    varsOps                        shift and go to state 13
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 416
    lAbierta                       shift and go to state 30
    linea                          shift and go to state 413
    loop                           shift and go to state 418

state 374

    (52) funcString -> CAPITALIZAR ( valores ) .

    ;               reduce using rule 52 (funcString -> CAPITALIZAR ( valores ) .)
    +               reduce using rule 52 (funcString -> CAPITALIZAR ( valores ) .)
    -               reduce using rule 52 (funcString -> CAPITALIZAR ( valores ) .)
    *               reduce using rule 52 (funcString -> CAPITALIZAR ( valores ) .)
    /               reduce using rule 52 (funcString -> CAPITALIZAR ( valores ) .)
    %               reduce using rule 52 (funcString -> CAPITALIZAR ( valores ) .)
    ^               reduce using rule 52 (funcString -> CAPITALIZAR ( valores ) .)
    ,               reduce using rule 52 (funcString -> CAPITALIZAR ( valores ) .)
    ]               reduce using rule 52 (funcString -> CAPITALIZAR ( valores ) .)
    EQEQ            reduce using rule 52 (funcString -> CAPITALIZAR ( valores ) .)
    DISTINTO        reduce using rule 52 (funcString -> CAPITALIZAR ( valores ) .)
    >               reduce using rule 52 (funcString -> CAPITALIZAR ( valores ) .)
    <               reduce using rule 52 (funcString -> CAPITALIZAR ( valores ) .)
    )               reduce using rule 52 (funcString -> CAPITALIZAR ( valores ) .)
    AND             reduce using rule 52 (funcString -> CAPITALIZAR ( valores ) .)
    OR              reduce using rule 52 (funcString -> CAPITALIZAR ( valores ) .)
    ?               reduce using rule 52 (funcString -> CAPITALIZAR ( valores ) .)
    :               reduce using rule 52 (funcString -> CAPITALIZAR ( valores ) .)
    }               reduce using rule 52 (funcString -> CAPITALIZAR ( valores ) .)


state 375

    (50) funcInt -> MULTIESCALAR ( valores , . valores param )
    (80) valores -> . varYVals
    (81) valores -> . varsOps
    (82) valores -> . eMat
    (83) valores -> . expBool
    (84) valores -> . funcReturn
    (85) valores -> . reg
    (86) valores -> . INT
    (87) valores -> . FLOAT
    (88) valores -> . STRING
    (89) valores -> . BOOL
    (90) valores -> . ternario
    (91) valores -> . atributos
    (92) valores -> . vec
    (93) valores -> . RES
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (94) reg -> . { campos }
    (102) ternario -> . ternarioMat
    (103) ternario -> . ternarioBool
    (104) ternario -> . ( ternarioMat )
    (105) ternario -> . ( ternarioBool )
    (106) ternario -> . ternarioVars
    (107) ternario -> . ( ternarioVars )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    ?               reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    valoresBool                    shift and go to state 73
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 419
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 376

    (26) lCerrada -> loop COMMENT com lCerrada .

    WHILE           reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)
    COMMENT         reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)
    IF              reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)
    DO              reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)
    FOR             reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)
    RETURN          reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)
    ;               reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)
    MENOSMENOS      reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)
    MASMAS          reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)
    ID              reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)
    PRINT           reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)
    MULTIESCALAR    reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)
    LENGTH          reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)
    CAPITALIZAR     reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)
    COLINEALES      reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)
    [               reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)
    $end            reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)
    }               reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)
    ELSE            reduce using rule 26 (lCerrada -> loop COMMENT com lCerrada .)


state 377

    (24) lCerrada -> loop { g } .

    WHILE           reduce using rule 24 (lCerrada -> loop { g } .)
    COMMENT         reduce using rule 24 (lCerrada -> loop { g } .)
    IF              reduce using rule 24 (lCerrada -> loop { g } .)
    DO              reduce using rule 24 (lCerrada -> loop { g } .)
    FOR             reduce using rule 24 (lCerrada -> loop { g } .)
    RETURN          reduce using rule 24 (lCerrada -> loop { g } .)
    ;               reduce using rule 24 (lCerrada -> loop { g } .)
    MENOSMENOS      reduce using rule 24 (lCerrada -> loop { g } .)
    MASMAS          reduce using rule 24 (lCerrada -> loop { g } .)
    ID              reduce using rule 24 (lCerrada -> loop { g } .)
    PRINT           reduce using rule 24 (lCerrada -> loop { g } .)
    MULTIESCALAR    reduce using rule 24 (lCerrada -> loop { g } .)
    LENGTH          reduce using rule 24 (lCerrada -> loop { g } .)
    CAPITALIZAR     reduce using rule 24 (lCerrada -> loop { g } .)
    COLINEALES      reduce using rule 24 (lCerrada -> loop { g } .)
    [               reduce using rule 24 (lCerrada -> loop { g } .)
    $end            reduce using rule 24 (lCerrada -> loop { g } .)
    }               reduce using rule 24 (lCerrada -> loop { g } .)
    ELSE            reduce using rule 24 (lCerrada -> loop { g } .)


state 378

    (62) vecVal -> vec [ expresion ] .

    .               reduce using rule 62 (vecVal -> vec [ expresion ] .)
    [               reduce using rule 62 (vecVal -> vec [ expresion ] .)
    ?               reduce using rule 62 (vecVal -> vec [ expresion ] .)
    OR              reduce using rule 62 (vecVal -> vec [ expresion ] .)
    AND             reduce using rule 62 (vecVal -> vec [ expresion ] .)
    +               reduce using rule 62 (vecVal -> vec [ expresion ] .)
    -               reduce using rule 62 (vecVal -> vec [ expresion ] .)
    *               reduce using rule 62 (vecVal -> vec [ expresion ] .)
    /               reduce using rule 62 (vecVal -> vec [ expresion ] .)
    %               reduce using rule 62 (vecVal -> vec [ expresion ] .)
    ^               reduce using rule 62 (vecVal -> vec [ expresion ] .)
    EQEQ            reduce using rule 62 (vecVal -> vec [ expresion ] .)
    DISTINTO        reduce using rule 62 (vecVal -> vec [ expresion ] .)
    >               reduce using rule 62 (vecVal -> vec [ expresion ] .)
    <               reduce using rule 62 (vecVal -> vec [ expresion ] .)
    MASMAS          reduce using rule 62 (vecVal -> vec [ expresion ] .)
    MENOSMENOS      reduce using rule 62 (vecVal -> vec [ expresion ] .)
    )               reduce using rule 62 (vecVal -> vec [ expresion ] .)
    ;               reduce using rule 62 (vecVal -> vec [ expresion ] .)
    ,               reduce using rule 62 (vecVal -> vec [ expresion ] .)
    ]               reduce using rule 62 (vecVal -> vec [ expresion ] .)
    :               reduce using rule 62 (vecVal -> vec [ expresion ] .)
    }               reduce using rule 62 (vecVal -> vec [ expresion ] .)
    MULEQ           reduce using rule 62 (vecVal -> vec [ expresion ] .)
    DIVEQ           reduce using rule 62 (vecVal -> vec [ expresion ] .)
    MASEQ           reduce using rule 62 (vecVal -> vec [ expresion ] .)
    MENOSEQ         reduce using rule 62 (vecVal -> vec [ expresion ] .)
    =               reduce using rule 62 (vecVal -> vec [ expresion ] .)


state 379

    (65) vecVal -> vec [ INT ] .

    .               reduce using rule 65 (vecVal -> vec [ INT ] .)
    [               reduce using rule 65 (vecVal -> vec [ INT ] .)
    ?               reduce using rule 65 (vecVal -> vec [ INT ] .)
    OR              reduce using rule 65 (vecVal -> vec [ INT ] .)
    AND             reduce using rule 65 (vecVal -> vec [ INT ] .)
    +               reduce using rule 65 (vecVal -> vec [ INT ] .)
    -               reduce using rule 65 (vecVal -> vec [ INT ] .)
    *               reduce using rule 65 (vecVal -> vec [ INT ] .)
    /               reduce using rule 65 (vecVal -> vec [ INT ] .)
    %               reduce using rule 65 (vecVal -> vec [ INT ] .)
    ^               reduce using rule 65 (vecVal -> vec [ INT ] .)
    EQEQ            reduce using rule 65 (vecVal -> vec [ INT ] .)
    DISTINTO        reduce using rule 65 (vecVal -> vec [ INT ] .)
    >               reduce using rule 65 (vecVal -> vec [ INT ] .)
    <               reduce using rule 65 (vecVal -> vec [ INT ] .)
    MASMAS          reduce using rule 65 (vecVal -> vec [ INT ] .)
    MENOSMENOS      reduce using rule 65 (vecVal -> vec [ INT ] .)
    )               reduce using rule 65 (vecVal -> vec [ INT ] .)
    ;               reduce using rule 65 (vecVal -> vec [ INT ] .)
    ,               reduce using rule 65 (vecVal -> vec [ INT ] .)
    ]               reduce using rule 65 (vecVal -> vec [ INT ] .)
    :               reduce using rule 65 (vecVal -> vec [ INT ] .)
    }               reduce using rule 65 (vecVal -> vec [ INT ] .)
    MULEQ           reduce using rule 65 (vecVal -> vec [ INT ] .)
    DIVEQ           reduce using rule 65 (vecVal -> vec [ INT ] .)
    MASEQ           reduce using rule 65 (vecVal -> vec [ INT ] .)
    MENOSEQ         reduce using rule 65 (vecVal -> vec [ INT ] .)
    =               reduce using rule 65 (vecVal -> vec [ INT ] .)


state 380

    (29) lCerrada -> DO COMMENT com lCerrada WHILE . ( valores ) ;

    (               shift and go to state 420


state 381

    (16) lCerrada -> IF ( cosaBooleana ) . { g } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE { g }
    (18) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) . { g } ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE COMMENT com lCerrada
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (152) varAsig -> . variable MULEQ valores
    (153) varAsig -> . variable DIVEQ valores
    (154) varAsig -> . variable MASEQ valores
    (155) varAsig -> . variable MENOSEQ valores
    (156) varAsig -> . variable = valores
    (157) varAsig -> . ID . ID = valores
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]

    {               shift and go to state 423
    COMMENT         shift and go to state 421
    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 422
    varsOps                        shift and go to state 13
    loop                           shift and go to state 39

state 382

    (28) lCerrada -> DO lCerrada WHILE ( valores . ) ;

    )               shift and go to state 424


state 383

    (27) lCerrada -> DO { g } WHILE . ( valores ) ;

    (               shift and go to state 425


state 384

    (53) funcBool -> COLINEALES ( valores , valores . )

    )               shift and go to state 426


state 385

    (144) varYVals -> vecVal . varYVals .

    MASMAS          reduce using rule 144 (varYVals -> vecVal . varYVals .)
    MENOSMENOS      reduce using rule 144 (varYVals -> vecVal . varYVals .)
    MULEQ           reduce using rule 144 (varYVals -> vecVal . varYVals .)
    DIVEQ           reduce using rule 144 (varYVals -> vecVal . varYVals .)
    MASEQ           reduce using rule 144 (varYVals -> vecVal . varYVals .)
    MENOSEQ         reduce using rule 144 (varYVals -> vecVal . varYVals .)
    =               reduce using rule 144 (varYVals -> vecVal . varYVals .)
    ;               reduce using rule 144 (varYVals -> vecVal . varYVals .)
    ,               reduce using rule 144 (varYVals -> vecVal . varYVals .)
    ]               reduce using rule 144 (varYVals -> vecVal . varYVals .)
    +               reduce using rule 144 (varYVals -> vecVal . varYVals .)
    -               reduce using rule 144 (varYVals -> vecVal . varYVals .)
    *               reduce using rule 144 (varYVals -> vecVal . varYVals .)
    /               reduce using rule 144 (varYVals -> vecVal . varYVals .)
    %               reduce using rule 144 (varYVals -> vecVal . varYVals .)
    ^               reduce using rule 144 (varYVals -> vecVal . varYVals .)
    OR              reduce using rule 144 (varYVals -> vecVal . varYVals .)
    AND             reduce using rule 144 (varYVals -> vecVal . varYVals .)
    ?               reduce using rule 144 (varYVals -> vecVal . varYVals .)
    EQEQ            reduce using rule 144 (varYVals -> vecVal . varYVals .)
    DISTINTO        reduce using rule 144 (varYVals -> vecVal . varYVals .)
    >               reduce using rule 144 (varYVals -> vecVal . varYVals .)
    <               reduce using rule 144 (varYVals -> vecVal . varYVals .)
    )               reduce using rule 144 (varYVals -> vecVal . varYVals .)
    :               reduce using rule 144 (varYVals -> vecVal . varYVals .)
    }               reduce using rule 144 (varYVals -> vecVal . varYVals .)


state 386

    (36) loop -> FOR ( primParam ; valores . ; tercerParam )

    ;               shift and go to state 427


state 387

    (234) tCompareEQ -> ( ternarioBool . )

    )               shift and go to state 428


state 388

    (135) ternarioBool -> valoresBool ? valoresTernarioBool : . valoresTernarioBool
    (112) ternarioVars -> valoresBool ? valoresTernarioBool : . valoresTernarioVars
    (137) valoresTernarioBool -> . BOOL
    (138) valoresTernarioBool -> . funcBool
    (139) valoresTernarioBool -> . ternarioBool
    (140) valoresTernarioBool -> . ( ternarioBool )
    (141) valoresTernarioBool -> . expBool
    (118) valoresTernarioVars -> . reg
    (119) valoresTernarioVars -> . vec
    (120) valoresTernarioVars -> . ternarioVars
    (121) valoresTernarioVars -> . ( ternarioVars )
    (122) valoresTernarioVars -> . atributos
    (123) valoresTernarioVars -> . varsOps
    (124) valoresTernarioVars -> . varYVals
    (125) valoresTernarioVars -> . RES
    (53) funcBool -> . COLINEALES ( valores , valores )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (94) reg -> . { campos }
    (58) vec -> . [ elem ]
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (250) parenBool -> . ( expBool )
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )

    BOOL            shift and go to state 305
    (               shift and go to state 434
    RES             shift and go to state 288
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    vecVal                         shift and go to state 290
    eMat                           shift and go to state 228
    p                              shift and go to state 96
    valoresTernarioBool            shift and go to state 430
    valoresBool                    shift and go to state 429
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 431
    expBool                        shift and go to state 432
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    tCompareEQ                     shift and go to state 75
    varsOps                        shift and go to state 433
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 435
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 389

    (108) ternarioVars -> valoresBool ? valoresTernarioVars : . valoresTernarioVars
    (109) ternarioVars -> valoresBool ? valoresTernarioVars : . valoresTernarioMat
    (111) ternarioVars -> valoresBool ? valoresTernarioVars : . valoresTernarioBool
    (118) valoresTernarioVars -> . reg
    (119) valoresTernarioVars -> . vec
    (120) valoresTernarioVars -> . ternarioVars
    (121) valoresTernarioVars -> . ( ternarioVars )
    (122) valoresTernarioVars -> . atributos
    (123) valoresTernarioVars -> . varsOps
    (124) valoresTernarioVars -> . varYVals
    (125) valoresTernarioVars -> . RES
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (137) valoresTernarioBool -> . BOOL
    (138) valoresTernarioBool -> . funcBool
    (139) valoresTernarioBool -> . ternarioBool
    (140) valoresTernarioBool -> . ( ternarioBool )
    (141) valoresTernarioBool -> . expBool
    (94) reg -> . { campos }
    (58) vec -> . [ elem ]
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (53) funcBool -> . COLINEALES ( valores , valores )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    (               shift and go to state 442
    RES             shift and go to state 288
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    BOOL            shift and go to state 305
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    COLINEALES      shift and go to state 4
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    atributos                      shift and go to state 310
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 436
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 437
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 438
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 439
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 441
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 443
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 440

state 390

    (126) ternarioMat -> valoresBool ? valoresTernarioMat : . valoresTernarioMat
    (110) ternarioVars -> valoresBool ? valoresTernarioMat : . valoresTernarioVars
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (118) valoresTernarioVars -> . reg
    (119) valoresTernarioVars -> . vec
    (120) valoresTernarioVars -> . ternarioVars
    (121) valoresTernarioVars -> . ( ternarioVars )
    (122) valoresTernarioVars -> . atributos
    (123) valoresTernarioVars -> . varsOps
    (124) valoresTernarioVars -> . varYVals
    (125) valoresTernarioVars -> . RES
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (94) reg -> . { campos }
    (58) vec -> . [ elem ]
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (53) funcBool -> . COLINEALES ( valores , valores )
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    (               shift and go to state 445
    RES             shift and go to state 288
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    BOOL            shift and go to state 187
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    atributos                      shift and go to state 310
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 444
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 446
    exp                            shift and go to state 100
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 447
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 297
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 309
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 448

state 391

    (134) valoresTernarioMat -> ( ternarioMat . )
    (166) valoresMat -> ( ternarioMat . )
    (235) tCompareEQ -> ( ternarioMat . )
    (242) tCompare -> ( ternarioMat . )

    )               shift and go to state 449


state 392

    (140) valoresTernarioBool -> ( ternarioBool . )
    (205) valoresBool -> ( ternarioBool . )
    (234) tCompareEQ -> ( ternarioBool . )

    )               shift and go to state 450


state 393

    (121) valoresTernarioVars -> ( ternarioVars . )

    )               shift and go to state 451


state 394

    (126) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (137) valoresTernarioBool -> . BOOL
    (138) valoresTernarioBool -> . funcBool
    (139) valoresTernarioBool -> . ternarioBool
    (140) valoresTernarioBool -> . ( ternarioBool )
    (141) valoresTernarioBool -> . expBool
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (53) funcBool -> . COLINEALES ( valores , valores )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (58) vec -> . [ elem ]
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    (               shift and go to state 454
    BOOL            shift and go to state 305
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    COLINEALES      shift and go to state 4
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 321
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 452
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 453
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    expBool                        shift and go to state 455
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 395

    (166) valoresMat -> ( ternarioMat ) .
    (235) tCompareEQ -> ( ternarioMat ) .
    (242) tCompare -> ( ternarioMat ) .

    )               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    +               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    ^               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    EQEQ            reduce using rule 235 (tCompareEQ -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 235 (tCompareEQ -> ( ternarioMat ) .)
    >               reduce using rule 242 (tCompare -> ( ternarioMat ) .)
    <               reduce using rule 242 (tCompare -> ( ternarioMat ) .)


state 396

    (205) valoresBool -> ( ternarioBool ) .
    (234) tCompareEQ -> ( ternarioBool ) .

    ?               reduce using rule 205 (valoresBool -> ( ternarioBool ) .)
    OR              reduce using rule 205 (valoresBool -> ( ternarioBool ) .)
    AND             reduce using rule 205 (valoresBool -> ( ternarioBool ) .)
    ,               reduce using rule 205 (valoresBool -> ( ternarioBool ) .)
    ]               reduce using rule 205 (valoresBool -> ( ternarioBool ) .)
    )               reduce using rule 205 (valoresBool -> ( ternarioBool ) .)
    ;               reduce using rule 205 (valoresBool -> ( ternarioBool ) .)
    :               reduce using rule 205 (valoresBool -> ( ternarioBool ) .)
    }               reduce using rule 205 (valoresBool -> ( ternarioBool ) .)
    EQEQ            reduce using rule 234 (tCompareEQ -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 234 (tCompareEQ -> ( ternarioBool ) .)


state 397

    (127) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (136) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (137) valoresTernarioBool -> . BOOL
    (138) valoresTernarioBool -> . funcBool
    (139) valoresTernarioBool -> . ternarioBool
    (140) valoresTernarioBool -> . ( ternarioBool )
    (141) valoresTernarioBool -> . expBool
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (53) funcBool -> . COLINEALES ( valores , valores )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (58) vec -> . [ elem ]
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    (               shift and go to state 454
    BOOL            shift and go to state 305
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    COLINEALES      shift and go to state 4
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 321
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 456
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 457
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    expBool                        shift and go to state 455
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 398

    (126) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (53) funcBool -> . COLINEALES ( valores , valores )
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (58) vec -> . [ elem ]
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    (               shift and go to state 458
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    BOOL            shift and go to state 187
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresBool                    shift and go to state 329
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 453
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    expBool                        shift and go to state 332
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 399

    (166) valoresMat -> ( ternarioMat ) .

    ^               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    +               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    ,               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    ]               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    EQEQ            reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    >               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    <               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    )               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    ;               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    AND             reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    OR              reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    ?               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    :               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    }               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)


state 400

    (127) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (53) funcBool -> . COLINEALES ( valores , valores )
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (58) vec -> . [ elem ]
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    (               shift and go to state 458
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    BOOL            shift and go to state 187
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresBool                    shift and go to state 329
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 457
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    expBool                        shift and go to state 332
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 401

    (136) ternarioBool -> expBool ? valoresTernarioBool : . valoresTernarioBool
    (117) ternarioVars -> expBool ? valoresTernarioBool : . valoresTernarioVars
    (137) valoresTernarioBool -> . BOOL
    (138) valoresTernarioBool -> . funcBool
    (139) valoresTernarioBool -> . ternarioBool
    (140) valoresTernarioBool -> . ( ternarioBool )
    (141) valoresTernarioBool -> . expBool
    (118) valoresTernarioVars -> . reg
    (119) valoresTernarioVars -> . vec
    (120) valoresTernarioVars -> . ternarioVars
    (121) valoresTernarioVars -> . ( ternarioVars )
    (122) valoresTernarioVars -> . atributos
    (123) valoresTernarioVars -> . varsOps
    (124) valoresTernarioVars -> . varYVals
    (125) valoresTernarioVars -> . RES
    (53) funcBool -> . COLINEALES ( valores , valores )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (94) reg -> . { campos }
    (58) vec -> . [ elem ]
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (250) parenBool -> . ( expBool )
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )

    BOOL            shift and go to state 305
    (               shift and go to state 434
    RES             shift and go to state 288
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 429
    eMat                           shift and go to state 228
    p                              shift and go to state 96
    valoresTernarioBool            shift and go to state 459
    vecVal                         shift and go to state 290
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 460
    expBool                        shift and go to state 432
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    tCompareEQ                     shift and go to state 75
    varsOps                        shift and go to state 433
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 435
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 402

    (113) ternarioVars -> expBool ? valoresTernarioVars : . valoresTernarioVars
    (114) ternarioVars -> expBool ? valoresTernarioVars : . valoresTernarioMat
    (116) ternarioVars -> expBool ? valoresTernarioVars : . valoresTernarioBool
    (118) valoresTernarioVars -> . reg
    (119) valoresTernarioVars -> . vec
    (120) valoresTernarioVars -> . ternarioVars
    (121) valoresTernarioVars -> . ( ternarioVars )
    (122) valoresTernarioVars -> . atributos
    (123) valoresTernarioVars -> . varsOps
    (124) valoresTernarioVars -> . varYVals
    (125) valoresTernarioVars -> . RES
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (137) valoresTernarioBool -> . BOOL
    (138) valoresTernarioBool -> . funcBool
    (139) valoresTernarioBool -> . ternarioBool
    (140) valoresTernarioBool -> . ( ternarioBool )
    (141) valoresTernarioBool -> . expBool
    (94) reg -> . { campos }
    (58) vec -> . [ elem ]
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (53) funcBool -> . COLINEALES ( valores , valores )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    (               shift and go to state 442
    RES             shift and go to state 288
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    BOOL            shift and go to state 305
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    COLINEALES      shift and go to state 4
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 436
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 461
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 462
    expBool                        shift and go to state 440
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 463
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 441
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 443
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 403

    (127) ternarioMat -> expBool ? valoresTernarioMat : . valoresTernarioMat
    (115) ternarioVars -> expBool ? valoresTernarioMat : . valoresTernarioVars
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (118) valoresTernarioVars -> . reg
    (119) valoresTernarioVars -> . vec
    (120) valoresTernarioVars -> . ternarioVars
    (121) valoresTernarioVars -> . ( ternarioVars )
    (122) valoresTernarioVars -> . atributos
    (123) valoresTernarioVars -> . varsOps
    (124) valoresTernarioVars -> . varYVals
    (125) valoresTernarioVars -> . RES
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (94) reg -> . { campos }
    (58) vec -> . [ elem ]
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (53) funcBool -> . COLINEALES ( valores , valores )
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    (               shift and go to state 445
    RES             shift and go to state 288
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    BOOL            shift and go to state 187
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 444
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 465
    expBool                        shift and go to state 448
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 464
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 297
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 309
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 404

    (242) tCompare -> ( ternarioMat . )
    (166) valoresMat -> ( ternarioMat . )

    )               shift and go to state 466


state 405

    (135) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (137) valoresTernarioBool -> . BOOL
    (138) valoresTernarioBool -> . funcBool
    (139) valoresTernarioBool -> . ternarioBool
    (140) valoresTernarioBool -> . ( ternarioBool )
    (141) valoresTernarioBool -> . expBool
    (53) funcBool -> . COLINEALES ( valores , valores )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (58) vec -> . [ elem ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (250) parenBool -> . ( expBool )
    (94) reg -> . { campos }
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )

    BOOL            shift and go to state 305
    (               shift and go to state 467
    COLINEALES      shift and go to state 4
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    ID              shift and go to state 230
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77

    and                            shift and go to state 60
    atributos                      shift and go to state 191
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    valoresBool                    shift and go to state 359
    eMat                           shift and go to state 228
    p                              shift and go to state 96
    valoresTernarioBool            shift and go to state 452
    mayor                          shift and go to state 81
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    ternarioBool                   shift and go to state 301
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    tCompareEQ                     shift and go to state 75
    varsOps                        shift and go to state 234
    exp                            shift and go to state 100
    varYVals                       shift and go to state 235
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 468

state 406

    (205) valoresBool -> ( ternarioBool ) .

    EQEQ            reduce using rule 205 (valoresBool -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 205 (valoresBool -> ( ternarioBool ) .)
    AND             reduce using rule 205 (valoresBool -> ( ternarioBool ) .)
    OR              reduce using rule 205 (valoresBool -> ( ternarioBool ) .)
    ?               reduce using rule 205 (valoresBool -> ( ternarioBool ) .)
    ,               reduce using rule 205 (valoresBool -> ( ternarioBool ) .)
    ]               reduce using rule 205 (valoresBool -> ( ternarioBool ) .)
    )               reduce using rule 205 (valoresBool -> ( ternarioBool ) .)
    ;               reduce using rule 205 (valoresBool -> ( ternarioBool ) .)
    :               reduce using rule 205 (valoresBool -> ( ternarioBool ) .)
    }               reduce using rule 205 (valoresBool -> ( ternarioBool ) .)


state 407

    (136) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (137) valoresTernarioBool -> . BOOL
    (138) valoresTernarioBool -> . funcBool
    (139) valoresTernarioBool -> . ternarioBool
    (140) valoresTernarioBool -> . ( ternarioBool )
    (141) valoresTernarioBool -> . expBool
    (53) funcBool -> . COLINEALES ( valores , valores )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (58) vec -> . [ elem ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (250) parenBool -> . ( expBool )
    (94) reg -> . { campos }
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )

    BOOL            shift and go to state 305
    (               shift and go to state 467
    COLINEALES      shift and go to state 4
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    ID              shift and go to state 230
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77

    and                            shift and go to state 60
    atributos                      shift and go to state 191
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    valoresBool                    shift and go to state 359
    eMat                           shift and go to state 228
    p                              shift and go to state 96
    valoresTernarioBool            shift and go to state 456
    mayor                          shift and go to state 81
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    ternarioBool                   shift and go to state 301
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    tCompareEQ                     shift and go to state 75
    varsOps                        shift and go to state 234
    exp                            shift and go to state 100
    varYVals                       shift and go to state 235
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 468

state 408

    (95) campos -> ID : valores . , campos
    (96) campos -> ID : valores .

    ,               shift and go to state 469
    }               reduce using rule 96 (campos -> ID : valores .)


state 409

    (157) varAsig -> ID . ID = valores .

    )               reduce using rule 157 (varAsig -> ID . ID = valores .)
    ;               reduce using rule 157 (varAsig -> ID . ID = valores .)


state 410

    (135) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (126) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (137) valoresTernarioBool -> . BOOL
    (138) valoresTernarioBool -> . funcBool
    (139) valoresTernarioBool -> . ternarioBool
    (140) valoresTernarioBool -> . ( ternarioBool )
    (141) valoresTernarioBool -> . expBool
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (94) reg -> . { campos }
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (58) vec -> . [ elem ]
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    BOOL            shift and go to state 305
    (               shift and go to state 472
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    COLINEALES      shift and go to state 4
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 452
    valoresBool                    shift and go to state 470
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    expBool                        shift and go to state 474
    ternarioBool                   shift and go to state 301
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 453
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 471
    exp                            shift and go to state 100
    varYVals                       shift and go to state 473
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 411

    (235) tCompareEQ -> ( ternarioMat ) .
    (242) tCompare -> ( ternarioMat ) .
    (166) valoresMat -> ( ternarioMat ) .

    EQEQ            reduce using rule 235 (tCompareEQ -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 235 (tCompareEQ -> ( ternarioMat ) .)
    AND             reduce using rule 235 (tCompareEQ -> ( ternarioMat ) .)
    OR              reduce using rule 235 (tCompareEQ -> ( ternarioMat ) .)
    ?               reduce using rule 235 (tCompareEQ -> ( ternarioMat ) .)
    ,               reduce using rule 235 (tCompareEQ -> ( ternarioMat ) .)
    ]               reduce using rule 235 (tCompareEQ -> ( ternarioMat ) .)
    )               reduce using rule 235 (tCompareEQ -> ( ternarioMat ) .)
    ;               reduce using rule 235 (tCompareEQ -> ( ternarioMat ) .)
    :               reduce using rule 235 (tCompareEQ -> ( ternarioMat ) .)
    }               reduce using rule 235 (tCompareEQ -> ( ternarioMat ) .)
    >               reduce using rule 242 (tCompare -> ( ternarioMat ) .)
    <               reduce using rule 242 (tCompare -> ( ternarioMat ) .)
    +               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    ^               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)


state 412

    (136) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (127) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (137) valoresTernarioBool -> . BOOL
    (138) valoresTernarioBool -> . funcBool
    (139) valoresTernarioBool -> . ternarioBool
    (140) valoresTernarioBool -> . ( ternarioBool )
    (141) valoresTernarioBool -> . expBool
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (94) reg -> . { campos }
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (58) vec -> . [ elem ]
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    BOOL            shift and go to state 305
    (               shift and go to state 472
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    COLINEALES      shift and go to state 4
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 456
    valoresBool                    shift and go to state 470
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    expBool                        shift and go to state 474
    ternarioBool                   shift and go to state 301
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 457
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 471
    exp                            shift and go to state 100
    varYVals                       shift and go to state 473
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 413

    (6) lAbierta -> IF ( cosaBooleana ) linea .

    COMMENT         reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    IF              reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    DO              reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    WHILE           reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    FOR             reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    RETURN          reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    ;               reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    MENOSMENOS      reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    MASMAS          reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    ID              reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    PRINT           reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    MULTIESCALAR    reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    LENGTH          reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    CAPITALIZAR     reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    COLINEALES      reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    [               reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    $end            reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    }               reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)


state 414

    (7) lAbierta -> IF ( cosaBooleana ) COMMENT . com linea
    (9) lAbierta -> IF ( cosaBooleana ) COMMENT . com lCerrada ELSE lAbierta
    (18) lCerrada -> IF ( cosaBooleana ) COMMENT . com lCerrada ELSE { g }
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT . com lCerrada ELSE lCerrada
    (23) lCerrada -> IF ( cosaBooleana ) COMMENT . com lCerrada ELSE COMMENT com lCerrada
    (14) com -> . COMMENT com
    (15) com -> . empty
    (57) empty -> .

    COMMENT         shift and go to state 117
    IF              reduce using rule 57 (empty -> .)
    DO              reduce using rule 57 (empty -> .)
    RETURN          reduce using rule 57 (empty -> .)
    ;               reduce using rule 57 (empty -> .)
    WHILE           reduce using rule 57 (empty -> .)
    FOR             reduce using rule 57 (empty -> .)
    MENOSMENOS      reduce using rule 57 (empty -> .)
    MASMAS          reduce using rule 57 (empty -> .)
    ID              reduce using rule 57 (empty -> .)
    PRINT           reduce using rule 57 (empty -> .)
    MULTIESCALAR    reduce using rule 57 (empty -> .)
    LENGTH          reduce using rule 57 (empty -> .)
    CAPITALIZAR     reduce using rule 57 (empty -> .)
    COLINEALES      reduce using rule 57 (empty -> .)
    [               reduce using rule 57 (empty -> .)

    empty                          shift and go to state 119
    com                            shift and go to state 475

state 415

    (16) lCerrada -> IF . ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> IF . ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (6) lAbierta -> IF . ( cosaBooleana ) linea
    (7) lAbierta -> IF . ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> IF . ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> IF . ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> IF . ( cosaBooleana ) { g }

    (               shift and go to state 476


state 416

    (10) lAbierta -> IF ( cosaBooleana ) lCerrada . ELSE lAbierta
    (17) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE { g }
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE lCerrada
    (22) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE COMMENT com lCerrada
    (5) linea -> lCerrada .

    ELSE            shift and go to state 477
    COMMENT         reduce using rule 5 (linea -> lCerrada .)
    IF              reduce using rule 5 (linea -> lCerrada .)
    DO              reduce using rule 5 (linea -> lCerrada .)
    WHILE           reduce using rule 5 (linea -> lCerrada .)
    FOR             reduce using rule 5 (linea -> lCerrada .)
    RETURN          reduce using rule 5 (linea -> lCerrada .)
    ;               reduce using rule 5 (linea -> lCerrada .)
    MENOSMENOS      reduce using rule 5 (linea -> lCerrada .)
    MASMAS          reduce using rule 5 (linea -> lCerrada .)
    ID              reduce using rule 5 (linea -> lCerrada .)
    PRINT           reduce using rule 5 (linea -> lCerrada .)
    MULTIESCALAR    reduce using rule 5 (linea -> lCerrada .)
    LENGTH          reduce using rule 5 (linea -> lCerrada .)
    CAPITALIZAR     reduce using rule 5 (linea -> lCerrada .)
    COLINEALES      reduce using rule 5 (linea -> lCerrada .)
    [               reduce using rule 5 (linea -> lCerrada .)
    $end            reduce using rule 5 (linea -> lCerrada .)
    }               reduce using rule 5 (linea -> lCerrada .)


state 417

    (8) lAbierta -> IF ( cosaBooleana ) { . g } ELSE lAbierta
    (11) lAbierta -> IF ( cosaBooleana ) { . g }
    (16) lCerrada -> IF ( cosaBooleana ) { . g } ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) { . g } ELSE lCerrada
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (57) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (152) varAsig -> . variable MULEQ valores
    (153) varAsig -> . variable DIVEQ valores
    (154) varAsig -> . variable MASEQ valores
    (155) varAsig -> . variable MENOSEQ valores
    (156) varAsig -> . variable = valores
    (157) varAsig -> . ID . ID = valores
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 57 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    linea                          shift and go to state 34
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 12
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 478
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 30
    varsOps                        shift and go to state 13
    loop                           shift and go to state 32

state 418

    (24) lCerrada -> loop . { g }
    (25) lCerrada -> loop . lCerrada
    (26) lCerrada -> loop . COMMENT com lCerrada
    (12) lAbierta -> loop . lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (152) varAsig -> . variable MULEQ valores
    (153) varAsig -> . variable DIVEQ valores
    (154) varAsig -> . variable MASEQ valores
    (155) varAsig -> . variable MENOSEQ valores
    (156) varAsig -> . variable = valores
    (157) varAsig -> . ID . ID = valores
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]

    {               shift and go to state 114
    COMMENT         shift and go to state 111
    IF              shift and go to state 415
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    varsOps                        shift and go to state 13
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 112
    lAbierta                       shift and go to state 113
    loop                           shift and go to state 418

state 419

    (50) funcInt -> MULTIESCALAR ( valores , valores . param )
    (55) param -> . , valores
    (56) param -> . empty
    (57) empty -> .

    ,               shift and go to state 480
    )               reduce using rule 57 (empty -> .)

    empty                          shift and go to state 481
    param                          shift and go to state 479

state 420

    (29) lCerrada -> DO COMMENT com lCerrada WHILE ( . valores ) ;
    (80) valores -> . varYVals
    (81) valores -> . varsOps
    (82) valores -> . eMat
    (83) valores -> . expBool
    (84) valores -> . funcReturn
    (85) valores -> . reg
    (86) valores -> . INT
    (87) valores -> . FLOAT
    (88) valores -> . STRING
    (89) valores -> . BOOL
    (90) valores -> . ternario
    (91) valores -> . atributos
    (92) valores -> . vec
    (93) valores -> . RES
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (94) reg -> . { campos }
    (102) ternario -> . ternarioMat
    (103) ternario -> . ternarioBool
    (104) ternario -> . ( ternarioMat )
    (105) ternario -> . ( ternarioBool )
    (106) ternario -> . ternarioVars
    (107) ternario -> . ( ternarioVars )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    ?               reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    varYVals                       shift and go to state 102
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 482
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 421

    (18) lCerrada -> IF ( cosaBooleana ) COMMENT . com lCerrada ELSE { g }
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT . com lCerrada ELSE lCerrada
    (23) lCerrada -> IF ( cosaBooleana ) COMMENT . com lCerrada ELSE COMMENT com lCerrada
    (14) com -> . COMMENT com
    (15) com -> . empty
    (57) empty -> .

    COMMENT         shift and go to state 117
    IF              reduce using rule 57 (empty -> .)
    DO              reduce using rule 57 (empty -> .)
    RETURN          reduce using rule 57 (empty -> .)
    ;               reduce using rule 57 (empty -> .)
    WHILE           reduce using rule 57 (empty -> .)
    FOR             reduce using rule 57 (empty -> .)
    MENOSMENOS      reduce using rule 57 (empty -> .)
    MASMAS          reduce using rule 57 (empty -> .)
    ID              reduce using rule 57 (empty -> .)
    PRINT           reduce using rule 57 (empty -> .)
    MULTIESCALAR    reduce using rule 57 (empty -> .)
    LENGTH          reduce using rule 57 (empty -> .)
    CAPITALIZAR     reduce using rule 57 (empty -> .)
    COLINEALES      reduce using rule 57 (empty -> .)
    [               reduce using rule 57 (empty -> .)

    com                            shift and go to state 483
    empty                          shift and go to state 119

state 422

    (17) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE { g }
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE lCerrada
    (22) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE COMMENT com lCerrada

    ELSE            shift and go to state 484


state 423

    (16) lCerrada -> IF ( cosaBooleana ) { . g } ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) { . g } ELSE lCerrada
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (57) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (152) varAsig -> . variable MULEQ valores
    (153) varAsig -> . variable DIVEQ valores
    (154) varAsig -> . variable MASEQ valores
    (155) varAsig -> . variable MENOSEQ valores
    (156) varAsig -> . variable = valores
    (157) varAsig -> . ID . ID = valores
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 57 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 12
    varsOps                        shift and go to state 13
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 485
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 30
    loop                           shift and go to state 32
    linea                          shift and go to state 34

state 424

    (28) lCerrada -> DO lCerrada WHILE ( valores ) . ;

    ;               shift and go to state 486


state 425

    (27) lCerrada -> DO { g } WHILE ( . valores ) ;
    (80) valores -> . varYVals
    (81) valores -> . varsOps
    (82) valores -> . eMat
    (83) valores -> . expBool
    (84) valores -> . funcReturn
    (85) valores -> . reg
    (86) valores -> . INT
    (87) valores -> . FLOAT
    (88) valores -> . STRING
    (89) valores -> . BOOL
    (90) valores -> . ternario
    (91) valores -> . atributos
    (92) valores -> . vec
    (93) valores -> . RES
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (94) reg -> . { campos }
    (102) ternario -> . ternarioMat
    (103) ternario -> . ternarioBool
    (104) ternario -> . ( ternarioMat )
    (105) ternario -> . ( ternarioBool )
    (106) ternario -> . ternarioVars
    (107) ternario -> . ( ternarioVars )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    ?               reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 487
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 426

    (53) funcBool -> COLINEALES ( valores , valores ) .

    ;               reduce using rule 53 (funcBool -> COLINEALES ( valores , valores ) .)
    :               reduce using rule 53 (funcBool -> COLINEALES ( valores , valores ) .)
    ?               reduce using rule 53 (funcBool -> COLINEALES ( valores , valores ) .)
    OR              reduce using rule 53 (funcBool -> COLINEALES ( valores , valores ) .)
    AND             reduce using rule 53 (funcBool -> COLINEALES ( valores , valores ) .)
    EQEQ            reduce using rule 53 (funcBool -> COLINEALES ( valores , valores ) .)
    DISTINTO        reduce using rule 53 (funcBool -> COLINEALES ( valores , valores ) .)
    ]               reduce using rule 53 (funcBool -> COLINEALES ( valores , valores ) .)
    ,               reduce using rule 53 (funcBool -> COLINEALES ( valores , valores ) .)
    )               reduce using rule 53 (funcBool -> COLINEALES ( valores , valores ) .)
    }               reduce using rule 53 (funcBool -> COLINEALES ( valores , valores ) .)


state 427

    (36) loop -> FOR ( primParam ; valores ; . tercerParam )
    (39) tercerParam -> . varsOps
    (40) tercerParam -> . varAsig
    (41) tercerParam -> . func
    (42) tercerParam -> . empty
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (152) varAsig -> . variable MULEQ valores
    (153) varAsig -> . variable DIVEQ valores
    (154) varAsig -> . variable MASEQ valores
    (155) varAsig -> . variable MENOSEQ valores
    (156) varAsig -> . variable = valores
    (157) varAsig -> . ID . ID = valores
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (57) empty -> .
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]

    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    )               reduce using rule 57 (empty -> .)
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    varAsig                        shift and go to state 490
    funcVoid                       shift and go to state 14
    funcBool                       shift and go to state 3
    funcString                     shift and go to state 25
    funcInt                        shift and go to state 5
    funcReturn                     shift and go to state 26
    vec                            shift and go to state 33
    varsOps                        shift and go to state 492
    func                           shift and go to state 488
    variable                       shift and go to state 19
    vecVal                         shift and go to state 8
    empty                          shift and go to state 491
    tercerParam                    shift and go to state 489

state 428

    (234) tCompareEQ -> ( ternarioBool ) .

    EQEQ            reduce using rule 234 (tCompareEQ -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 234 (tCompareEQ -> ( ternarioBool ) .)
    AND             reduce using rule 234 (tCompareEQ -> ( ternarioBool ) .)
    OR              reduce using rule 234 (tCompareEQ -> ( ternarioBool ) .)
    ?               reduce using rule 234 (tCompareEQ -> ( ternarioBool ) .)
    ,               reduce using rule 234 (tCompareEQ -> ( ternarioBool ) .)
    ]               reduce using rule 234 (tCompareEQ -> ( ternarioBool ) .)
    )               reduce using rule 234 (tCompareEQ -> ( ternarioBool ) .)
    ;               reduce using rule 234 (tCompareEQ -> ( ternarioBool ) .)
    :               reduce using rule 234 (tCompareEQ -> ( ternarioBool ) .)
    }               reduce using rule 234 (tCompareEQ -> ( ternarioBool ) .)


state 429

    (135) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (208) expBool -> valoresBool . OR and
    (210) expBool -> valoresBool . OR valoresBool
    (108) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (213) and -> valoresBool . AND eq
    (215) and -> valoresBool . AND valoresBool

    ?               shift and go to state 493
    OR              shift and go to state 166
    AND             shift and go to state 165


state 430

    (135) ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .

    ,               reduce using rule 135 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    ]               reduce using rule 135 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    )               reduce using rule 135 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    ;               reduce using rule 135 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    :               reduce using rule 135 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    }               reduce using rule 135 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)


state 431

    (112) ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .

    ,               reduce using rule 112 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    }               reduce using rule 112 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    :               reduce using rule 112 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    ]               reduce using rule 112 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    )               reduce using rule 112 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    ;               reduce using rule 112 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)


state 432

    (141) valoresTernarioBool -> expBool .
    (136) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> expBool . OR and
    (209) expBool -> expBool . OR valoresBool
    (113) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars

    ,               reduce using rule 141 (valoresTernarioBool -> expBool .)
    ]               reduce using rule 141 (valoresTernarioBool -> expBool .)
    )               reduce using rule 141 (valoresTernarioBool -> expBool .)
    ;               reduce using rule 141 (valoresTernarioBool -> expBool .)
    :               reduce using rule 141 (valoresTernarioBool -> expBool .)
    }               reduce using rule 141 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 494
    OR              shift and go to state 203


state 433

    (123) valoresTernarioVars -> varsOps .
    (204) valoresBool -> varsOps .
    (229) tCompareEQ -> varsOps .
    (237) tCompare -> varsOps .
    (165) valoresMat -> varsOps .

    ,               reduce using rule 123 (valoresTernarioVars -> varsOps .)
    ]               reduce using rule 123 (valoresTernarioVars -> varsOps .)
    )               reduce using rule 123 (valoresTernarioVars -> varsOps .)
    ;               reduce using rule 123 (valoresTernarioVars -> varsOps .)
    :               reduce using rule 123 (valoresTernarioVars -> varsOps .)
    }               reduce using rule 123 (valoresTernarioVars -> varsOps .)
    ?               reduce using rule 204 (valoresBool -> varsOps .)
    OR              reduce using rule 204 (valoresBool -> varsOps .)
    AND             reduce using rule 204 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 229 (tCompareEQ -> varsOps .)
    DISTINTO        reduce using rule 229 (tCompareEQ -> varsOps .)
    >               reduce using rule 237 (tCompare -> varsOps .)
    <               reduce using rule 237 (tCompare -> varsOps .)
    +               reduce using rule 165 (valoresMat -> varsOps .)
    -               reduce using rule 165 (valoresMat -> varsOps .)
    *               reduce using rule 165 (valoresMat -> varsOps .)
    /               reduce using rule 165 (valoresMat -> varsOps .)
    %               reduce using rule 165 (valoresMat -> varsOps .)
    ^               reduce using rule 165 (valoresMat -> varsOps .)


state 434

    (140) valoresTernarioBool -> ( . ternarioBool )
    (121) valoresTernarioVars -> ( . ternarioVars )
    (205) valoresBool -> ( . ternarioBool )
    (234) tCompareEQ -> ( . ternarioBool )
    (235) tCompareEQ -> ( . ternarioMat )
    (242) tCompare -> ( . ternarioMat )
    (166) valoresMat -> ( . ternarioMat )
    (250) parenBool -> ( . expBool )
    (199) paren -> ( . eMat )
    (200) paren -> ( . valoresMat )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (53) funcBool -> . COLINEALES ( valores , valores )
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (58) vec -> . [ elem ]
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 370
    BOOL            shift and go to state 187
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 495
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 371
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    expBool                        shift and go to state 496
    ternarioBool                   shift and go to state 392
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 393
    mayor                          shift and go to state 81
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 435

    (124) valoresTernarioVars -> varYVals .
    (203) valoresBool -> varYVals .
    (228) tCompareEQ -> varYVals .
    (238) tCompare -> varYVals .
    (164) valoresMat -> varYVals .

    ,               reduce using rule 124 (valoresTernarioVars -> varYVals .)
    ]               reduce using rule 124 (valoresTernarioVars -> varYVals .)
    )               reduce using rule 124 (valoresTernarioVars -> varYVals .)
    ;               reduce using rule 124 (valoresTernarioVars -> varYVals .)
    :               reduce using rule 124 (valoresTernarioVars -> varYVals .)
    }               reduce using rule 124 (valoresTernarioVars -> varYVals .)
    ?               reduce using rule 203 (valoresBool -> varYVals .)
    OR              reduce using rule 203 (valoresBool -> varYVals .)
    AND             reduce using rule 203 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 228 (tCompareEQ -> varYVals .)
    DISTINTO        reduce using rule 228 (tCompareEQ -> varYVals .)
    >               reduce using rule 238 (tCompare -> varYVals .)
    <               reduce using rule 238 (tCompare -> varYVals .)
    +               reduce using rule 164 (valoresMat -> varYVals .)
    -               reduce using rule 164 (valoresMat -> varYVals .)
    *               reduce using rule 164 (valoresMat -> varYVals .)
    /               reduce using rule 164 (valoresMat -> varYVals .)
    %               reduce using rule 164 (valoresMat -> varYVals .)
    ^               reduce using rule 164 (valoresMat -> varYVals .)


state 436

    (108) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (126) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (208) expBool -> valoresBool . OR and
    (210) expBool -> valoresBool . OR valoresBool
    (213) and -> valoresBool . AND eq
    (215) and -> valoresBool . AND valoresBool

    ?               shift and go to state 497
    OR              shift and go to state 166
    AND             shift and go to state 165


state 437

    (111) ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .

    ,               reduce using rule 111 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    }               reduce using rule 111 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    :               reduce using rule 111 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    ]               reduce using rule 111 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    )               reduce using rule 111 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    ;               reduce using rule 111 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)


state 438

    (108) ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .

    ,               reduce using rule 108 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    }               reduce using rule 108 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    :               reduce using rule 108 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    ]               reduce using rule 108 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    )               reduce using rule 108 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    ;               reduce using rule 108 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)


state 439

    (109) ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .

    ,               reduce using rule 109 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    }               reduce using rule 109 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    :               reduce using rule 109 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    ]               reduce using rule 109 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    )               reduce using rule 109 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    ;               reduce using rule 109 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)


state 440

    (141) valoresTernarioBool -> expBool .
    (113) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (127) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (136) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> expBool . OR and
    (209) expBool -> expBool . OR valoresBool

    ,               reduce using rule 141 (valoresTernarioBool -> expBool .)
    ]               reduce using rule 141 (valoresTernarioBool -> expBool .)
    )               reduce using rule 141 (valoresTernarioBool -> expBool .)
    ;               reduce using rule 141 (valoresTernarioBool -> expBool .)
    :               reduce using rule 141 (valoresTernarioBool -> expBool .)
    }               reduce using rule 141 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 498
    OR              shift and go to state 203


state 441

    (123) valoresTernarioVars -> varsOps .
    (204) valoresBool -> varsOps .
    (165) valoresMat -> varsOps .
    (229) tCompareEQ -> varsOps .
    (237) tCompare -> varsOps .

    ,               reduce using rule 123 (valoresTernarioVars -> varsOps .)
    ]               reduce using rule 123 (valoresTernarioVars -> varsOps .)
    )               reduce using rule 123 (valoresTernarioVars -> varsOps .)
    ;               reduce using rule 123 (valoresTernarioVars -> varsOps .)
    :               reduce using rule 123 (valoresTernarioVars -> varsOps .)
    }               reduce using rule 123 (valoresTernarioVars -> varsOps .)
    ?               reduce using rule 204 (valoresBool -> varsOps .)
    OR              reduce using rule 204 (valoresBool -> varsOps .)
    AND             reduce using rule 204 (valoresBool -> varsOps .)
    +               reduce using rule 165 (valoresMat -> varsOps .)
    -               reduce using rule 165 (valoresMat -> varsOps .)
    *               reduce using rule 165 (valoresMat -> varsOps .)
    /               reduce using rule 165 (valoresMat -> varsOps .)
    %               reduce using rule 165 (valoresMat -> varsOps .)
    ^               reduce using rule 165 (valoresMat -> varsOps .)
    EQEQ            reduce using rule 229 (tCompareEQ -> varsOps .)
    DISTINTO        reduce using rule 229 (tCompareEQ -> varsOps .)
    >               reduce using rule 237 (tCompare -> varsOps .)
    <               reduce using rule 237 (tCompare -> varsOps .)


state 442

    (121) valoresTernarioVars -> ( . ternarioVars )
    (134) valoresTernarioMat -> ( . ternarioMat )
    (140) valoresTernarioBool -> ( . ternarioBool )
    (205) valoresBool -> ( . ternarioBool )
    (166) valoresMat -> ( . ternarioMat )
    (234) tCompareEQ -> ( . ternarioBool )
    (235) tCompareEQ -> ( . ternarioMat )
    (199) paren -> ( . eMat )
    (200) paren -> ( . valoresMat )
    (242) tCompare -> ( . ternarioMat )
    (250) parenBool -> ( . expBool )
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (53) funcBool -> . COLINEALES ( valores , valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (58) vec -> . [ elem ]
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 177
    BOOL            shift and go to state 187
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 436
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 391
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 392
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    expBool                        shift and go to state 499
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 179
    ternarioVars                   shift and go to state 393
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 443

    (124) valoresTernarioVars -> varYVals .
    (203) valoresBool -> varYVals .
    (164) valoresMat -> varYVals .
    (228) tCompareEQ -> varYVals .
    (238) tCompare -> varYVals .

    ,               reduce using rule 124 (valoresTernarioVars -> varYVals .)
    ]               reduce using rule 124 (valoresTernarioVars -> varYVals .)
    )               reduce using rule 124 (valoresTernarioVars -> varYVals .)
    ;               reduce using rule 124 (valoresTernarioVars -> varYVals .)
    :               reduce using rule 124 (valoresTernarioVars -> varYVals .)
    }               reduce using rule 124 (valoresTernarioVars -> varYVals .)
    ?               reduce using rule 203 (valoresBool -> varYVals .)
    OR              reduce using rule 203 (valoresBool -> varYVals .)
    AND             reduce using rule 203 (valoresBool -> varYVals .)
    +               reduce using rule 164 (valoresMat -> varYVals .)
    -               reduce using rule 164 (valoresMat -> varYVals .)
    *               reduce using rule 164 (valoresMat -> varYVals .)
    /               reduce using rule 164 (valoresMat -> varYVals .)
    %               reduce using rule 164 (valoresMat -> varYVals .)
    ^               reduce using rule 164 (valoresMat -> varYVals .)
    EQEQ            reduce using rule 228 (tCompareEQ -> varYVals .)
    DISTINTO        reduce using rule 228 (tCompareEQ -> varYVals .)
    >               reduce using rule 238 (tCompare -> varYVals .)
    <               reduce using rule 238 (tCompare -> varYVals .)


state 444

    (126) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (108) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (208) expBool -> valoresBool . OR and
    (210) expBool -> valoresBool . OR valoresBool
    (213) and -> valoresBool . AND eq
    (215) and -> valoresBool . AND valoresBool

    ?               shift and go to state 500
    OR              shift and go to state 166
    AND             shift and go to state 165


state 445

    (134) valoresTernarioMat -> ( . ternarioMat )
    (121) valoresTernarioVars -> ( . ternarioVars )
    (166) valoresMat -> ( . ternarioMat )
    (205) valoresBool -> ( . ternarioBool )
    (199) paren -> ( . eMat )
    (200) paren -> ( . valoresMat )
    (234) tCompareEQ -> ( . ternarioBool )
    (235) tCompareEQ -> ( . ternarioMat )
    (242) tCompare -> ( . ternarioMat )
    (250) parenBool -> ( . expBool )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (53) funcBool -> . COLINEALES ( valores , valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (58) vec -> . [ elem ]
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 177
    BOOL            shift and go to state 187
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 501
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 391
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 323
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    expBool                        shift and go to state 502
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 179
    ternarioVars                   shift and go to state 393
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 446

    (110) ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .

    ,               reduce using rule 110 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    }               reduce using rule 110 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    :               reduce using rule 110 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    ]               reduce using rule 110 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    )               reduce using rule 110 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    ;               reduce using rule 110 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)


state 447

    (126) ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .

    :               reduce using rule 126 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    ]               reduce using rule 126 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    ,               reduce using rule 126 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    )               reduce using rule 126 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    ;               reduce using rule 126 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    }               reduce using rule 126 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)


state 448

    (127) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (113) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (207) expBool -> expBool . OR and
    (209) expBool -> expBool . OR valoresBool

    ?               shift and go to state 503
    OR              shift and go to state 203


state 449

    (134) valoresTernarioMat -> ( ternarioMat ) .
    (166) valoresMat -> ( ternarioMat ) .
    (235) tCompareEQ -> ( ternarioMat ) .
    (242) tCompare -> ( ternarioMat ) .

    :               reduce using rule 134 (valoresTernarioMat -> ( ternarioMat ) .)
    ,               reduce using rule 134 (valoresTernarioMat -> ( ternarioMat ) .)
    ]               reduce using rule 134 (valoresTernarioMat -> ( ternarioMat ) .)
    )               reduce using rule 134 (valoresTernarioMat -> ( ternarioMat ) .)
    ;               reduce using rule 134 (valoresTernarioMat -> ( ternarioMat ) .)
    }               reduce using rule 134 (valoresTernarioMat -> ( ternarioMat ) .)
    +               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    ^               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    EQEQ            reduce using rule 235 (tCompareEQ -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 235 (tCompareEQ -> ( ternarioMat ) .)
    >               reduce using rule 242 (tCompare -> ( ternarioMat ) .)
    <               reduce using rule 242 (tCompare -> ( ternarioMat ) .)


state 450

    (140) valoresTernarioBool -> ( ternarioBool ) .
    (205) valoresBool -> ( ternarioBool ) .
    (234) tCompareEQ -> ( ternarioBool ) .

    ,               reduce using rule 140 (valoresTernarioBool -> ( ternarioBool ) .)
    ]               reduce using rule 140 (valoresTernarioBool -> ( ternarioBool ) .)
    )               reduce using rule 140 (valoresTernarioBool -> ( ternarioBool ) .)
    ;               reduce using rule 140 (valoresTernarioBool -> ( ternarioBool ) .)
    :               reduce using rule 140 (valoresTernarioBool -> ( ternarioBool ) .)
    }               reduce using rule 140 (valoresTernarioBool -> ( ternarioBool ) .)
    ?               reduce using rule 205 (valoresBool -> ( ternarioBool ) .)
    OR              reduce using rule 205 (valoresBool -> ( ternarioBool ) .)
    AND             reduce using rule 205 (valoresBool -> ( ternarioBool ) .)
    EQEQ            reduce using rule 234 (tCompareEQ -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 234 (tCompareEQ -> ( ternarioBool ) .)


state 451

    (121) valoresTernarioVars -> ( ternarioVars ) .

    ,               reduce using rule 121 (valoresTernarioVars -> ( ternarioVars ) .)
    ]               reduce using rule 121 (valoresTernarioVars -> ( ternarioVars ) .)
    )               reduce using rule 121 (valoresTernarioVars -> ( ternarioVars ) .)
    ;               reduce using rule 121 (valoresTernarioVars -> ( ternarioVars ) .)
    :               reduce using rule 121 (valoresTernarioVars -> ( ternarioVars ) .)
    }               reduce using rule 121 (valoresTernarioVars -> ( ternarioVars ) .)


state 452

    (135) ternarioBool -> valoresBool ? valoresTernarioBool . : valoresTernarioBool

    :               shift and go to state 504


state 453

    (126) ternarioMat -> valoresBool ? valoresTernarioMat . : valoresTernarioMat

    :               shift and go to state 505


state 454

    (134) valoresTernarioMat -> ( . ternarioMat )
    (140) valoresTernarioBool -> ( . ternarioBool )
    (166) valoresMat -> ( . ternarioMat )
    (205) valoresBool -> ( . ternarioBool )
    (234) tCompareEQ -> ( . ternarioBool )
    (235) tCompareEQ -> ( . ternarioMat )
    (199) paren -> ( . eMat )
    (200) paren -> ( . valoresMat )
    (242) tCompare -> ( . ternarioMat )
    (250) parenBool -> ( . expBool )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (53) funcBool -> . COLINEALES ( valores , valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (58) vec -> . [ elem ]
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 177
    BOOL            shift and go to state 187
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    valoresBool                    shift and go to state 321
    ternarioMat                    shift and go to state 391
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 392
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    expBool                        shift and go to state 324
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 455

    (141) valoresTernarioBool -> expBool .
    (127) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (136) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> expBool . OR and
    (209) expBool -> expBool . OR valoresBool

    :               reduce using rule 141 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 397
    OR              shift and go to state 203


state 456

    (136) ternarioBool -> expBool ? valoresTernarioBool . : valoresTernarioBool

    :               shift and go to state 506


state 457

    (127) ternarioMat -> expBool ? valoresTernarioMat . : valoresTernarioMat

    :               shift and go to state 507


state 458

    (134) valoresTernarioMat -> ( . ternarioMat )
    (166) valoresMat -> ( . ternarioMat )
    (205) valoresBool -> ( . ternarioBool )
    (199) paren -> ( . eMat )
    (200) paren -> ( . valoresMat )
    (234) tCompareEQ -> ( . ternarioBool )
    (235) tCompareEQ -> ( . ternarioMat )
    (242) tCompare -> ( . ternarioMat )
    (250) parenBool -> ( . expBool )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (53) funcBool -> . COLINEALES ( valores , valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (58) vec -> . [ elem ]
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 177
    BOOL            shift and go to state 187
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    valoresBool                    shift and go to state 321
    ternarioMat                    shift and go to state 391
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 323
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    expBool                        shift and go to state 324
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 459

    (136) ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .

    ,               reduce using rule 136 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    ]               reduce using rule 136 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    )               reduce using rule 136 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    ;               reduce using rule 136 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    :               reduce using rule 136 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    }               reduce using rule 136 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)


state 460

    (117) ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .

    ,               reduce using rule 117 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    }               reduce using rule 117 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    :               reduce using rule 117 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    ]               reduce using rule 117 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    )               reduce using rule 117 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    ;               reduce using rule 117 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)


state 461

    (116) ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .

    ,               reduce using rule 116 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    }               reduce using rule 116 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    :               reduce using rule 116 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    ]               reduce using rule 116 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    )               reduce using rule 116 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    ;               reduce using rule 116 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)


state 462

    (113) ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .

    ,               reduce using rule 113 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    }               reduce using rule 113 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    :               reduce using rule 113 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    ]               reduce using rule 113 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    )               reduce using rule 113 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    ;               reduce using rule 113 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)


state 463

    (114) ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .

    ,               reduce using rule 114 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    }               reduce using rule 114 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    :               reduce using rule 114 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    ]               reduce using rule 114 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    )               reduce using rule 114 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    ;               reduce using rule 114 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)


state 464

    (127) ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .

    :               reduce using rule 127 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    ]               reduce using rule 127 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    ,               reduce using rule 127 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    )               reduce using rule 127 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    ;               reduce using rule 127 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    }               reduce using rule 127 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)


state 465

    (115) ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .

    ,               reduce using rule 115 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    }               reduce using rule 115 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    :               reduce using rule 115 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    ]               reduce using rule 115 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    )               reduce using rule 115 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    ;               reduce using rule 115 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)


state 466

    (242) tCompare -> ( ternarioMat ) .
    (166) valoresMat -> ( ternarioMat ) .

    EQEQ            reduce using rule 242 (tCompare -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 242 (tCompare -> ( ternarioMat ) .)
    AND             reduce using rule 242 (tCompare -> ( ternarioMat ) .)
    OR              reduce using rule 242 (tCompare -> ( ternarioMat ) .)
    ?               reduce using rule 242 (tCompare -> ( ternarioMat ) .)
    ,               reduce using rule 242 (tCompare -> ( ternarioMat ) .)
    ]               reduce using rule 242 (tCompare -> ( ternarioMat ) .)
    )               reduce using rule 242 (tCompare -> ( ternarioMat ) .)
    ;               reduce using rule 242 (tCompare -> ( ternarioMat ) .)
    :               reduce using rule 242 (tCompare -> ( ternarioMat ) .)
    }               reduce using rule 242 (tCompare -> ( ternarioMat ) .)
    +               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)
    ^               reduce using rule 166 (valoresMat -> ( ternarioMat ) .)


state 467

    (140) valoresTernarioBool -> ( . ternarioBool )
    (205) valoresBool -> ( . ternarioBool )
    (234) tCompareEQ -> ( . ternarioBool )
    (235) tCompareEQ -> ( . ternarioMat )
    (242) tCompare -> ( . ternarioMat )
    (166) valoresMat -> ( . ternarioMat )
    (250) parenBool -> ( . expBool )
    (199) paren -> ( . eMat )
    (200) paren -> ( . valoresMat )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (53) funcBool -> . COLINEALES ( valores , valores )
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (58) vec -> . [ elem ]
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 370
    BOOL            shift and go to state 187
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 369
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 371
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 392
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    expBool                        shift and go to state 372
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 468

    (141) valoresTernarioBool -> expBool .
    (136) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> expBool . OR and
    (209) expBool -> expBool . OR valoresBool

    :               reduce using rule 141 (valoresTernarioBool -> expBool .)
    )               reduce using rule 141 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 407
    OR              shift and go to state 203


state 469

    (95) campos -> ID : valores , . campos
    (95) campos -> . ID : valores , campos
    (96) campos -> . ID : valores

    ID              shift and go to state 222

    campos                         shift and go to state 508

state 470

    (135) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (208) expBool -> valoresBool . OR and
    (210) expBool -> valoresBool . OR valoresBool
    (126) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (213) and -> valoresBool . AND eq
    (215) and -> valoresBool . AND valoresBool

    ?               shift and go to state 410
    OR              shift and go to state 166
    AND             shift and go to state 165


state 471

    (204) valoresBool -> varsOps .
    (165) valoresMat -> varsOps .
    (229) tCompareEQ -> varsOps .
    (237) tCompare -> varsOps .

    ?               reduce using rule 204 (valoresBool -> varsOps .)
    OR              reduce using rule 204 (valoresBool -> varsOps .)
    AND             reduce using rule 204 (valoresBool -> varsOps .)
    +               reduce using rule 165 (valoresMat -> varsOps .)
    -               reduce using rule 165 (valoresMat -> varsOps .)
    *               reduce using rule 165 (valoresMat -> varsOps .)
    /               reduce using rule 165 (valoresMat -> varsOps .)
    %               reduce using rule 165 (valoresMat -> varsOps .)
    ^               reduce using rule 165 (valoresMat -> varsOps .)
    EQEQ            reduce using rule 229 (tCompareEQ -> varsOps .)
    DISTINTO        reduce using rule 229 (tCompareEQ -> varsOps .)
    >               reduce using rule 237 (tCompare -> varsOps .)
    <               reduce using rule 237 (tCompare -> varsOps .)


state 472

    (140) valoresTernarioBool -> ( . ternarioBool )
    (134) valoresTernarioMat -> ( . ternarioMat )
    (205) valoresBool -> ( . ternarioBool )
    (166) valoresMat -> ( . ternarioMat )
    (234) tCompareEQ -> ( . ternarioBool )
    (235) tCompareEQ -> ( . ternarioMat )
    (242) tCompare -> ( . ternarioMat )
    (199) paren -> ( . eMat )
    (200) paren -> ( . valoresMat )
    (250) parenBool -> ( . expBool )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (53) funcBool -> . COLINEALES ( valores , valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (58) vec -> . [ elem ]
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 177
    BOOL            shift and go to state 187
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    valoresBool                    shift and go to state 369
    ternarioMat                    shift and go to state 391
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 392
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    expBool                        shift and go to state 372
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 473

    (203) valoresBool -> varYVals .
    (164) valoresMat -> varYVals .
    (228) tCompareEQ -> varYVals .
    (238) tCompare -> varYVals .

    ?               reduce using rule 203 (valoresBool -> varYVals .)
    OR              reduce using rule 203 (valoresBool -> varYVals .)
    AND             reduce using rule 203 (valoresBool -> varYVals .)
    +               reduce using rule 164 (valoresMat -> varYVals .)
    -               reduce using rule 164 (valoresMat -> varYVals .)
    *               reduce using rule 164 (valoresMat -> varYVals .)
    /               reduce using rule 164 (valoresMat -> varYVals .)
    %               reduce using rule 164 (valoresMat -> varYVals .)
    ^               reduce using rule 164 (valoresMat -> varYVals .)
    EQEQ            reduce using rule 228 (tCompareEQ -> varYVals .)
    DISTINTO        reduce using rule 228 (tCompareEQ -> varYVals .)
    >               reduce using rule 238 (tCompare -> varYVals .)
    <               reduce using rule 238 (tCompare -> varYVals .)


state 474

    (141) valoresTernarioBool -> expBool .
    (136) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> expBool . OR and
    (209) expBool -> expBool . OR valoresBool
    (127) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat

    :               reduce using rule 141 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 412
    OR              shift and go to state 203


state 475

    (7) lAbierta -> IF ( cosaBooleana ) COMMENT com . linea
    (9) lAbierta -> IF ( cosaBooleana ) COMMENT com . lCerrada ELSE lAbierta
    (18) lCerrada -> IF ( cosaBooleana ) COMMENT com . lCerrada ELSE { g }
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com . lCerrada ELSE lCerrada
    (23) lCerrada -> IF ( cosaBooleana ) COMMENT com . lCerrada ELSE COMMENT com lCerrada
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (152) varAsig -> . variable MULEQ valores
    (153) varAsig -> . variable DIVEQ valores
    (154) varAsig -> . variable MASEQ valores
    (155) varAsig -> . variable MENOSEQ valores
    (156) varAsig -> . variable = valores
    (157) varAsig -> . ID . ID = valores
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]

    IF              shift and go to state 415
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    varsOps                        shift and go to state 13
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 510
    lAbierta                       shift and go to state 30
    linea                          shift and go to state 509
    loop                           shift and go to state 418

state 476

    (16) lCerrada -> IF ( . cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> IF ( . cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (6) lAbierta -> IF ( . cosaBooleana ) linea
    (7) lAbierta -> IF ( . cosaBooleana ) COMMENT com linea
    (8) lAbierta -> IF ( . cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> IF ( . cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> IF ( . cosaBooleana ) { g }
    (43) cosaBooleana -> . expBool
    (44) cosaBooleana -> . valoresBool
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (53) funcBool -> . COLINEALES ( valores , valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (58) vec -> . [ elem ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (250) parenBool -> . ( expBool )
    (94) reg -> . { campos }
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )

    BOOL            shift and go to state 187
    (               shift and go to state 229
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    )               reduce using rule 206 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 230
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    valoresBool                    shift and go to state 227
    eMat                           shift and go to state 228
    p                              shift and go to state 96
    atributos                      shift and go to state 191
    mayor                          shift and go to state 81
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 234
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    cosaBooleana                   shift and go to state 511
    funcString                     shift and go to state 184
    tCompareEQ                     shift and go to state 75
    exp                            shift and go to state 100
    varYVals                       shift and go to state 235
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 236

state 477

    (10) lAbierta -> IF ( cosaBooleana ) lCerrada ELSE . lAbierta
    (17) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . { g }
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . lCerrada
    (22) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . COMMENT com lCerrada
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (152) varAsig -> . variable MULEQ valores
    (153) varAsig -> . variable DIVEQ valores
    (154) varAsig -> . variable MASEQ valores
    (155) varAsig -> . variable MENOSEQ valores
    (156) varAsig -> . variable = valores
    (157) varAsig -> . ID . ID = valores
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]

    {               shift and go to state 515
    COMMENT         shift and go to state 512
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 513
    lAbierta                       shift and go to state 514
    varsOps                        shift and go to state 13
    loop                           shift and go to state 32

state 478

    (8) lAbierta -> IF ( cosaBooleana ) { g . } ELSE lAbierta
    (11) lAbierta -> IF ( cosaBooleana ) { g . }
    (16) lCerrada -> IF ( cosaBooleana ) { g . } ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) { g . } ELSE lCerrada

    }               shift and go to state 516


state 479

    (50) funcInt -> MULTIESCALAR ( valores , valores param . )

    )               shift and go to state 517


state 480

    (55) param -> , . valores
    (80) valores -> . varYVals
    (81) valores -> . varsOps
    (82) valores -> . eMat
    (83) valores -> . expBool
    (84) valores -> . funcReturn
    (85) valores -> . reg
    (86) valores -> . INT
    (87) valores -> . FLOAT
    (88) valores -> . STRING
    (89) valores -> . BOOL
    (90) valores -> . ternario
    (91) valores -> . atributos
    (92) valores -> . vec
    (93) valores -> . RES
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (94) reg -> . { campos }
    (102) ternario -> . ternarioMat
    (103) ternario -> . ternarioBool
    (104) ternario -> . ( ternarioMat )
    (105) ternario -> . ( ternarioBool )
    (106) ternario -> . ternarioVars
    (107) ternario -> . ( ternarioVars )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (58) vec -> . [ elem ]
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 92
    FLOAT           shift and go to state 94
    STRING          shift and go to state 72
    BOOL            shift and go to state 97
    RES             shift and go to state 63
    ID              shift and go to state 90
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    {               shift and go to state 101
    (               shift and go to state 76
    [               shift and go to state 20
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    ?               reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 73
    eMat                           shift and go to state 74
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 79
    vec                            shift and go to state 80
    paren                          shift and go to state 88
    reg                            shift and go to state 82
    expBool                        shift and go to state 83
    ternarioBool                   shift and go to state 84
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 91
    funcReturn                     shift and go to state 93
    valores                        shift and go to state 518
    p                              shift and go to state 96
    varsOps                        shift and go to state 98
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 68
    varYVals                       shift and go to state 102
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 103

state 481

    (56) param -> empty .

    )               reduce using rule 56 (param -> empty .)


state 482

    (29) lCerrada -> DO COMMENT com lCerrada WHILE ( valores . ) ;

    )               shift and go to state 519


state 483

    (18) lCerrada -> IF ( cosaBooleana ) COMMENT com . lCerrada ELSE { g }
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com . lCerrada ELSE lCerrada
    (23) lCerrada -> IF ( cosaBooleana ) COMMENT com . lCerrada ELSE COMMENT com lCerrada
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (152) varAsig -> . variable MULEQ valores
    (153) varAsig -> . variable DIVEQ valores
    (154) varAsig -> . variable MASEQ valores
    (155) varAsig -> . variable MENOSEQ valores
    (156) varAsig -> . variable = valores
    (157) varAsig -> . ID . ID = valores
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]

    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 520
    varsOps                        shift and go to state 13
    loop                           shift and go to state 39

state 484

    (17) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . { g }
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . lCerrada
    (22) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . COMMENT com lCerrada
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (152) varAsig -> . variable MULEQ valores
    (153) varAsig -> . variable DIVEQ valores
    (154) varAsig -> . variable MASEQ valores
    (155) varAsig -> . variable MENOSEQ valores
    (156) varAsig -> . variable = valores
    (157) varAsig -> . ID . ID = valores
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]

    {               shift and go to state 515
    COMMENT         shift and go to state 512
    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 513
    varsOps                        shift and go to state 13
    loop                           shift and go to state 39

state 485

    (16) lCerrada -> IF ( cosaBooleana ) { g . } ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) { g . } ELSE lCerrada

    }               shift and go to state 521


state 486

    (28) lCerrada -> DO lCerrada WHILE ( valores ) ; .

    WHILE           reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    COMMENT         reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    IF              reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    DO              reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    FOR             reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    RETURN          reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    ;               reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    MENOSMENOS      reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    MASMAS          reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    ID              reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    PRINT           reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    MULTIESCALAR    reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    LENGTH          reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    CAPITALIZAR     reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    COLINEALES      reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    [               reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    $end            reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    }               reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    ELSE            reduce using rule 28 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)


state 487

    (27) lCerrada -> DO { g } WHILE ( valores . ) ;

    )               shift and go to state 522


state 488

    (41) tercerParam -> func .

    )               reduce using rule 41 (tercerParam -> func .)


state 489

    (36) loop -> FOR ( primParam ; valores ; tercerParam . )

    )               shift and go to state 523


state 490

    (40) tercerParam -> varAsig .

    )               reduce using rule 40 (tercerParam -> varAsig .)


state 491

    (42) tercerParam -> empty .

    )               reduce using rule 42 (tercerParam -> empty .)


state 492

    (39) tercerParam -> varsOps .

    )               reduce using rule 39 (tercerParam -> varsOps .)


state 493

    (135) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (137) valoresTernarioBool -> . BOOL
    (138) valoresTernarioBool -> . funcBool
    (139) valoresTernarioBool -> . ternarioBool
    (140) valoresTernarioBool -> . ( ternarioBool )
    (141) valoresTernarioBool -> . expBool
    (118) valoresTernarioVars -> . reg
    (119) valoresTernarioVars -> . vec
    (120) valoresTernarioVars -> . ternarioVars
    (121) valoresTernarioVars -> . ( ternarioVars )
    (122) valoresTernarioVars -> . atributos
    (123) valoresTernarioVars -> . varsOps
    (124) valoresTernarioVars -> . varYVals
    (125) valoresTernarioVars -> . RES
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (94) reg -> . { campos }
    (58) vec -> . [ elem ]
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    BOOL            shift and go to state 305
    (               shift and go to state 527
    RES             shift and go to state 288
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 524
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 293
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 299
    expBool                        shift and go to state 525
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 526
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 441
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 443
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 494

    (136) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (113) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (137) valoresTernarioBool -> . BOOL
    (138) valoresTernarioBool -> . funcBool
    (139) valoresTernarioBool -> . ternarioBool
    (140) valoresTernarioBool -> . ( ternarioBool )
    (141) valoresTernarioBool -> . expBool
    (118) valoresTernarioVars -> . reg
    (119) valoresTernarioVars -> . vec
    (120) valoresTernarioVars -> . ternarioVars
    (121) valoresTernarioVars -> . ( ternarioVars )
    (122) valoresTernarioVars -> . atributos
    (123) valoresTernarioVars -> . varsOps
    (124) valoresTernarioVars -> . varYVals
    (125) valoresTernarioVars -> . RES
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (94) reg -> . { campos }
    (58) vec -> . [ elem ]
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    BOOL            shift and go to state 305
    (               shift and go to state 527
    RES             shift and go to state 288
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 524
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 339
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 340
    expBool                        shift and go to state 525
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 528
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 441
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 443
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 495

    (135) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (126) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (208) expBool -> valoresBool . OR and
    (210) expBool -> valoresBool . OR valoresBool
    (213) and -> valoresBool . AND eq
    (215) and -> valoresBool . AND valoresBool

    ?               shift and go to state 529
    OR              shift and go to state 166
    AND             shift and go to state 165


state 496

    (250) parenBool -> ( expBool . )
    (136) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (113) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (127) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (207) expBool -> expBool . OR and
    (209) expBool -> expBool . OR valoresBool

    )               shift and go to state 327
    ?               shift and go to state 530
    OR              shift and go to state 203


state 497

    (108) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (126) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (118) valoresTernarioVars -> . reg
    (119) valoresTernarioVars -> . vec
    (120) valoresTernarioVars -> . ternarioVars
    (121) valoresTernarioVars -> . ( ternarioVars )
    (122) valoresTernarioVars -> . atributos
    (123) valoresTernarioVars -> . varsOps
    (124) valoresTernarioVars -> . varYVals
    (125) valoresTernarioVars -> . RES
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (137) valoresTernarioBool -> . BOOL
    (138) valoresTernarioBool -> . funcBool
    (139) valoresTernarioBool -> . ternarioBool
    (140) valoresTernarioBool -> . ( ternarioBool )
    (141) valoresTernarioBool -> . expBool
    (94) reg -> . { campos }
    (58) vec -> . [ elem ]
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (53) funcBool -> . COLINEALES ( valores , valores )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    (               shift and go to state 442
    RES             shift and go to state 288
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    BOOL            shift and go to state 305
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    COLINEALES      shift and go to state 4
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    atributos                      shift and go to state 310
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 436
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 531
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 299
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 532
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 441
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 443
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 440

state 498

    (113) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (127) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (136) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (118) valoresTernarioVars -> . reg
    (119) valoresTernarioVars -> . vec
    (120) valoresTernarioVars -> . ternarioVars
    (121) valoresTernarioVars -> . ( ternarioVars )
    (122) valoresTernarioVars -> . atributos
    (123) valoresTernarioVars -> . varsOps
    (124) valoresTernarioVars -> . varYVals
    (125) valoresTernarioVars -> . RES
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (137) valoresTernarioBool -> . BOOL
    (138) valoresTernarioBool -> . funcBool
    (139) valoresTernarioBool -> . ternarioBool
    (140) valoresTernarioBool -> . ( ternarioBool )
    (141) valoresTernarioBool -> . expBool
    (94) reg -> . { campos }
    (58) vec -> . [ elem ]
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (53) funcBool -> . COLINEALES ( valores , valores )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    (               shift and go to state 442
    RES             shift and go to state 288
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    BOOL            shift and go to state 305
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    COLINEALES      shift and go to state 4
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 436
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 533
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 340
    expBool                        shift and go to state 440
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 534
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 441
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 443
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 499

    (250) parenBool -> ( expBool . )
    (113) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (127) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (136) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> expBool . OR and
    (209) expBool -> expBool . OR valoresBool

    )               shift and go to state 327
    ?               shift and go to state 498
    OR              shift and go to state 203


state 500

    (126) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (108) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (118) valoresTernarioVars -> . reg
    (119) valoresTernarioVars -> . vec
    (120) valoresTernarioVars -> . ternarioVars
    (121) valoresTernarioVars -> . ( ternarioVars )
    (122) valoresTernarioVars -> . atributos
    (123) valoresTernarioVars -> . varsOps
    (124) valoresTernarioVars -> . varYVals
    (125) valoresTernarioVars -> . RES
    (137) valoresTernarioBool -> . BOOL
    (138) valoresTernarioBool -> . funcBool
    (139) valoresTernarioBool -> . ternarioBool
    (140) valoresTernarioBool -> . ( ternarioBool )
    (141) valoresTernarioBool -> . expBool
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (94) reg -> . { campos }
    (58) vec -> . [ elem ]
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (53) funcBool -> . COLINEALES ( valores , valores )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    (               shift and go to state 537
    RES             shift and go to state 288
    BOOL            shift and go to state 305
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    atributos                      shift and go to state 310
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 501
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 535
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 299
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 302
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 297
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 309
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 536

state 501

    (126) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (108) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (135) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (208) expBool -> valoresBool . OR and
    (210) expBool -> valoresBool . OR valoresBool
    (213) and -> valoresBool . AND eq
    (215) and -> valoresBool . AND valoresBool

    ?               shift and go to state 538
    OR              shift and go to state 166
    AND             shift and go to state 165


state 502

    (250) parenBool -> ( expBool . )
    (127) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (113) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (136) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> expBool . OR and
    (209) expBool -> expBool . OR valoresBool

    )               shift and go to state 327
    ?               shift and go to state 539
    OR              shift and go to state 203


state 503

    (127) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (113) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (118) valoresTernarioVars -> . reg
    (119) valoresTernarioVars -> . vec
    (120) valoresTernarioVars -> . ternarioVars
    (121) valoresTernarioVars -> . ( ternarioVars )
    (122) valoresTernarioVars -> . atributos
    (123) valoresTernarioVars -> . varsOps
    (124) valoresTernarioVars -> . varYVals
    (125) valoresTernarioVars -> . RES
    (137) valoresTernarioBool -> . BOOL
    (138) valoresTernarioBool -> . funcBool
    (139) valoresTernarioBool -> . ternarioBool
    (140) valoresTernarioBool -> . ( ternarioBool )
    (141) valoresTernarioBool -> . expBool
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (94) reg -> . { campos }
    (58) vec -> . [ elem ]
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (53) funcBool -> . COLINEALES ( valores , valores )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    (               shift and go to state 537
    RES             shift and go to state 288
    BOOL            shift and go to state 305
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 501
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 540
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 340
    expBool                        shift and go to state 536
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 341
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 297
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 309
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 504

    (135) ternarioBool -> valoresBool ? valoresTernarioBool : . valoresTernarioBool
    (137) valoresTernarioBool -> . BOOL
    (138) valoresTernarioBool -> . funcBool
    (139) valoresTernarioBool -> . ternarioBool
    (140) valoresTernarioBool -> . ( ternarioBool )
    (141) valoresTernarioBool -> . expBool
    (53) funcBool -> . COLINEALES ( valores , valores )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (58) vec -> . [ elem ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (250) parenBool -> . ( expBool )
    (94) reg -> . { campos }
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )

    BOOL            shift and go to state 305
    (               shift and go to state 467
    COLINEALES      shift and go to state 4
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    ID              shift and go to state 230
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77

    and                            shift and go to state 60
    atributos                      shift and go to state 191
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    valoresBool                    shift and go to state 359
    eMat                           shift and go to state 228
    p                              shift and go to state 96
    valoresTernarioBool            shift and go to state 430
    mayor                          shift and go to state 81
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    ternarioBool                   shift and go to state 301
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    tCompareEQ                     shift and go to state 75
    varsOps                        shift and go to state 234
    exp                            shift and go to state 100
    varYVals                       shift and go to state 235
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 468

state 505

    (126) ternarioMat -> valoresBool ? valoresTernarioMat : . valoresTernarioMat
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (53) funcBool -> . COLINEALES ( valores , valores )
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (58) vec -> . [ elem ]
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    (               shift and go to state 458
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    BOOL            shift and go to state 187
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresBool                    shift and go to state 329
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 447
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    expBool                        shift and go to state 332
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 506

    (136) ternarioBool -> expBool ? valoresTernarioBool : . valoresTernarioBool
    (137) valoresTernarioBool -> . BOOL
    (138) valoresTernarioBool -> . funcBool
    (139) valoresTernarioBool -> . ternarioBool
    (140) valoresTernarioBool -> . ( ternarioBool )
    (141) valoresTernarioBool -> . expBool
    (53) funcBool -> . COLINEALES ( valores , valores )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (58) vec -> . [ elem ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (250) parenBool -> . ( expBool )
    (94) reg -> . { campos }
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )

    BOOL            shift and go to state 305
    (               shift and go to state 467
    COLINEALES      shift and go to state 4
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    ID              shift and go to state 230
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77

    and                            shift and go to state 60
    atributos                      shift and go to state 191
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    valoresBool                    shift and go to state 359
    eMat                           shift and go to state 228
    p                              shift and go to state 96
    valoresTernarioBool            shift and go to state 459
    mayor                          shift and go to state 81
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    iSing                          shift and go to state 85
    ternarioBool                   shift and go to state 301
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    tCompareEQ                     shift and go to state 75
    varsOps                        shift and go to state 234
    exp                            shift and go to state 100
    varYVals                       shift and go to state 235
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 468

state 507

    (127) ternarioMat -> expBool ? valoresTernarioMat : . valoresTernarioMat
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (53) funcBool -> . COLINEALES ( valores , valores )
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (58) vec -> . [ elem ]
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    (               shift and go to state 458
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    BOOL            shift and go to state 187
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    vecVal                         shift and go to state 71
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresBool                    shift and go to state 329
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 464
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    expBool                        shift and go to state 332
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 508

    (95) campos -> ID : valores , campos .

    }               reduce using rule 95 (campos -> ID : valores , campos .)


state 509

    (7) lAbierta -> IF ( cosaBooleana ) COMMENT com linea .

    COMMENT         reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) COMMENT com linea .)
    IF              reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) COMMENT com linea .)
    DO              reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) COMMENT com linea .)
    WHILE           reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) COMMENT com linea .)
    FOR             reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) COMMENT com linea .)
    RETURN          reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) COMMENT com linea .)
    ;               reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) COMMENT com linea .)
    MENOSMENOS      reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) COMMENT com linea .)
    MASMAS          reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) COMMENT com linea .)
    ID              reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) COMMENT com linea .)
    PRINT           reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) COMMENT com linea .)
    MULTIESCALAR    reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) COMMENT com linea .)
    LENGTH          reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) COMMENT com linea .)
    CAPITALIZAR     reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) COMMENT com linea .)
    COLINEALES      reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) COMMENT com linea .)
    [               reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) COMMENT com linea .)
    $end            reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) COMMENT com linea .)
    }               reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) COMMENT com linea .)


state 510

    (9) lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada . ELSE lAbierta
    (18) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada . ELSE { g }
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada . ELSE lCerrada
    (23) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada . ELSE COMMENT com lCerrada
    (5) linea -> lCerrada .

    ELSE            shift and go to state 541
    COMMENT         reduce using rule 5 (linea -> lCerrada .)
    IF              reduce using rule 5 (linea -> lCerrada .)
    DO              reduce using rule 5 (linea -> lCerrada .)
    WHILE           reduce using rule 5 (linea -> lCerrada .)
    FOR             reduce using rule 5 (linea -> lCerrada .)
    RETURN          reduce using rule 5 (linea -> lCerrada .)
    ;               reduce using rule 5 (linea -> lCerrada .)
    MENOSMENOS      reduce using rule 5 (linea -> lCerrada .)
    MASMAS          reduce using rule 5 (linea -> lCerrada .)
    ID              reduce using rule 5 (linea -> lCerrada .)
    PRINT           reduce using rule 5 (linea -> lCerrada .)
    MULTIESCALAR    reduce using rule 5 (linea -> lCerrada .)
    LENGTH          reduce using rule 5 (linea -> lCerrada .)
    CAPITALIZAR     reduce using rule 5 (linea -> lCerrada .)
    COLINEALES      reduce using rule 5 (linea -> lCerrada .)
    [               reduce using rule 5 (linea -> lCerrada .)
    $end            reduce using rule 5 (linea -> lCerrada .)
    }               reduce using rule 5 (linea -> lCerrada .)


state 511

    (16) lCerrada -> IF ( cosaBooleana . ) { g } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE { g }
    (18) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana . ) { g } ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE lCerrada
    (21) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (6) lAbierta -> IF ( cosaBooleana . ) linea
    (7) lAbierta -> IF ( cosaBooleana . ) COMMENT com linea
    (8) lAbierta -> IF ( cosaBooleana . ) { g } ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> IF ( cosaBooleana . ) lCerrada ELSE lAbierta
    (11) lAbierta -> IF ( cosaBooleana . ) { g }

    )               shift and go to state 542


state 512

    (22) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT . com lCerrada
    (14) com -> . COMMENT com
    (15) com -> . empty
    (57) empty -> .

    COMMENT         shift and go to state 117
    IF              reduce using rule 57 (empty -> .)
    DO              reduce using rule 57 (empty -> .)
    RETURN          reduce using rule 57 (empty -> .)
    ;               reduce using rule 57 (empty -> .)
    WHILE           reduce using rule 57 (empty -> .)
    FOR             reduce using rule 57 (empty -> .)
    MENOSMENOS      reduce using rule 57 (empty -> .)
    MASMAS          reduce using rule 57 (empty -> .)
    ID              reduce using rule 57 (empty -> .)
    PRINT           reduce using rule 57 (empty -> .)
    MULTIESCALAR    reduce using rule 57 (empty -> .)
    LENGTH          reduce using rule 57 (empty -> .)
    CAPITALIZAR     reduce using rule 57 (empty -> .)
    COLINEALES      reduce using rule 57 (empty -> .)
    [               reduce using rule 57 (empty -> .)

    com                            shift and go to state 543
    empty                          shift and go to state 119

state 513

    (20) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .

    WHILE           reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    COMMENT         reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    IF              reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    DO              reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    FOR             reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    RETURN          reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    ;               reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    MENOSMENOS      reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    MASMAS          reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    ID              reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    PRINT           reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    MULTIESCALAR    reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    LENGTH          reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    CAPITALIZAR     reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    COLINEALES      reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    [               reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    $end            reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    }               reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    ELSE            reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)


state 514

    (10) lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .

    COMMENT         reduce using rule 10 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    IF              reduce using rule 10 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    DO              reduce using rule 10 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    WHILE           reduce using rule 10 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    FOR             reduce using rule 10 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    RETURN          reduce using rule 10 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    ;               reduce using rule 10 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    MENOSMENOS      reduce using rule 10 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    MASMAS          reduce using rule 10 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    ID              reduce using rule 10 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    PRINT           reduce using rule 10 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    MULTIESCALAR    reduce using rule 10 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    LENGTH          reduce using rule 10 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    CAPITALIZAR     reduce using rule 10 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    COLINEALES      reduce using rule 10 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    [               reduce using rule 10 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    $end            reduce using rule 10 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    }               reduce using rule 10 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)


state 515

    (17) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { . g }
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (57) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (152) varAsig -> . variable MULEQ valores
    (153) varAsig -> . variable DIVEQ valores
    (154) varAsig -> . variable MASEQ valores
    (155) varAsig -> . variable MENOSEQ valores
    (156) varAsig -> . variable = valores
    (157) varAsig -> . ID . ID = valores
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 57 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 12
    varsOps                        shift and go to state 13
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 544
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 30
    loop                           shift and go to state 32
    linea                          shift and go to state 34

state 516

    (8) lAbierta -> IF ( cosaBooleana ) { g } . ELSE lAbierta
    (11) lAbierta -> IF ( cosaBooleana ) { g } .
    (16) lCerrada -> IF ( cosaBooleana ) { g } . ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) { g } . ELSE lCerrada

    ELSE            shift and go to state 545
    COMMENT         reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    IF              reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    DO              reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    WHILE           reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    FOR             reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    RETURN          reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    ;               reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MENOSMENOS      reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MASMAS          reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    ID              reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    PRINT           reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MULTIESCALAR    reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    LENGTH          reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    CAPITALIZAR     reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    COLINEALES      reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    [               reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    $end            reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    }               reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)


state 517

    (50) funcInt -> MULTIESCALAR ( valores , valores param ) .

    )               reduce using rule 50 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    +               reduce using rule 50 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    -               reduce using rule 50 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    *               reduce using rule 50 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    /               reduce using rule 50 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    %               reduce using rule 50 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ^               reduce using rule 50 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    EQEQ            reduce using rule 50 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    DISTINTO        reduce using rule 50 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    >               reduce using rule 50 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    <               reduce using rule 50 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ,               reduce using rule 50 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ]               reduce using rule 50 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ;               reduce using rule 50 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    :               reduce using rule 50 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    }               reduce using rule 50 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    AND             reduce using rule 50 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    OR              reduce using rule 50 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ?               reduce using rule 50 (funcInt -> MULTIESCALAR ( valores , valores param ) .)


state 518

    (55) param -> , valores .

    )               reduce using rule 55 (param -> , valores .)


state 519

    (29) lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) . ;

    ;               shift and go to state 546


state 520

    (18) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada . ELSE { g }
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada . ELSE lCerrada
    (23) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada . ELSE COMMENT com lCerrada

    ELSE            shift and go to state 547


state 521

    (16) lCerrada -> IF ( cosaBooleana ) { g } . ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) { g } . ELSE lCerrada

    ELSE            shift and go to state 548


state 522

    (27) lCerrada -> DO { g } WHILE ( valores ) . ;

    ;               shift and go to state 549


state 523

    (36) loop -> FOR ( primParam ; valores ; tercerParam ) .

    {               reduce using rule 36 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    COMMENT         reduce using rule 36 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    IF              reduce using rule 36 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    DO              reduce using rule 36 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    RETURN          reduce using rule 36 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    ;               reduce using rule 36 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    WHILE           reduce using rule 36 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    FOR             reduce using rule 36 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    MENOSMENOS      reduce using rule 36 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    MASMAS          reduce using rule 36 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    ID              reduce using rule 36 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    PRINT           reduce using rule 36 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    MULTIESCALAR    reduce using rule 36 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    LENGTH          reduce using rule 36 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    CAPITALIZAR     reduce using rule 36 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    COLINEALES      reduce using rule 36 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    [               reduce using rule 36 (loop -> FOR ( primParam ; valores ; tercerParam ) .)


state 524

    (135) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (208) expBool -> valoresBool . OR and
    (210) expBool -> valoresBool . OR valoresBool
    (108) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (126) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (213) and -> valoresBool . AND eq
    (215) and -> valoresBool . AND valoresBool

    ?               shift and go to state 529
    OR              shift and go to state 166
    AND             shift and go to state 165


state 525

    (141) valoresTernarioBool -> expBool .
    (136) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> expBool . OR and
    (209) expBool -> expBool . OR valoresBool
    (113) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (127) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat

    :               reduce using rule 141 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 530
    OR              shift and go to state 203


state 526

    (110) ternarioVars -> valoresBool ? valoresTernarioMat . : valoresTernarioVars

    :               shift and go to state 550


state 527

    (140) valoresTernarioBool -> ( . ternarioBool )
    (121) valoresTernarioVars -> ( . ternarioVars )
    (134) valoresTernarioMat -> ( . ternarioMat )
    (205) valoresBool -> ( . ternarioBool )
    (166) valoresMat -> ( . ternarioMat )
    (234) tCompareEQ -> ( . ternarioBool )
    (235) tCompareEQ -> ( . ternarioMat )
    (242) tCompare -> ( . ternarioMat )
    (199) paren -> ( . eMat )
    (200) paren -> ( . valoresMat )
    (250) parenBool -> ( . expBool )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (53) funcBool -> . COLINEALES ( valores , valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (58) vec -> . [ elem ]
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 177
    BOOL            shift and go to state 187
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 495
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 391
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 392
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    expBool                        shift and go to state 496
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 179
    ternarioVars                   shift and go to state 393
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 528

    (115) ternarioVars -> expBool ? valoresTernarioMat . : valoresTernarioVars

    :               shift and go to state 551


state 529

    (135) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (126) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (137) valoresTernarioBool -> . BOOL
    (138) valoresTernarioBool -> . funcBool
    (139) valoresTernarioBool -> . ternarioBool
    (140) valoresTernarioBool -> . ( ternarioBool )
    (141) valoresTernarioBool -> . expBool
    (118) valoresTernarioVars -> . reg
    (119) valoresTernarioVars -> . vec
    (120) valoresTernarioVars -> . ternarioVars
    (121) valoresTernarioVars -> . ( ternarioVars )
    (122) valoresTernarioVars -> . atributos
    (123) valoresTernarioVars -> . varsOps
    (124) valoresTernarioVars -> . varYVals
    (125) valoresTernarioVars -> . RES
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (94) reg -> . { campos }
    (58) vec -> . [ elem ]
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    BOOL            shift and go to state 305
    (               shift and go to state 527
    RES             shift and go to state 288
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 524
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 293
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 299
    expBool                        shift and go to state 525
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 532
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 441
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 443
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 530

    (136) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (113) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (127) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (137) valoresTernarioBool -> . BOOL
    (138) valoresTernarioBool -> . funcBool
    (139) valoresTernarioBool -> . ternarioBool
    (140) valoresTernarioBool -> . ( ternarioBool )
    (141) valoresTernarioBool -> . expBool
    (118) valoresTernarioVars -> . reg
    (119) valoresTernarioVars -> . vec
    (120) valoresTernarioVars -> . ternarioVars
    (121) valoresTernarioVars -> . ( ternarioVars )
    (122) valoresTernarioVars -> . atributos
    (123) valoresTernarioVars -> . varsOps
    (124) valoresTernarioVars -> . varYVals
    (125) valoresTernarioVars -> . RES
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (94) reg -> . { campos }
    (58) vec -> . [ elem ]
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    BOOL            shift and go to state 305
    (               shift and go to state 527
    RES             shift and go to state 288
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 524
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 339
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 340
    expBool                        shift and go to state 525
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 534
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 441
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 443
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 531

    (112) ternarioVars -> valoresBool ? valoresTernarioBool . : valoresTernarioVars
    (135) ternarioBool -> valoresBool ? valoresTernarioBool . : valoresTernarioBool

    :               shift and go to state 552


state 532

    (110) ternarioVars -> valoresBool ? valoresTernarioMat . : valoresTernarioVars
    (126) ternarioMat -> valoresBool ? valoresTernarioMat . : valoresTernarioMat

    :               shift and go to state 553


state 533

    (117) ternarioVars -> expBool ? valoresTernarioBool . : valoresTernarioVars
    (136) ternarioBool -> expBool ? valoresTernarioBool . : valoresTernarioBool

    :               shift and go to state 554


state 534

    (115) ternarioVars -> expBool ? valoresTernarioMat . : valoresTernarioVars
    (127) ternarioMat -> expBool ? valoresTernarioMat . : valoresTernarioMat

    :               shift and go to state 555


state 535

    (112) ternarioVars -> valoresBool ? valoresTernarioBool . : valoresTernarioVars

    :               shift and go to state 556


state 536

    (141) valoresTernarioBool -> expBool .
    (127) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (113) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (136) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> expBool . OR and
    (209) expBool -> expBool . OR valoresBool

    :               reduce using rule 141 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 539
    OR              shift and go to state 203


state 537

    (134) valoresTernarioMat -> ( . ternarioMat )
    (121) valoresTernarioVars -> ( . ternarioVars )
    (140) valoresTernarioBool -> ( . ternarioBool )
    (166) valoresMat -> ( . ternarioMat )
    (205) valoresBool -> ( . ternarioBool )
    (234) tCompareEQ -> ( . ternarioBool )
    (235) tCompareEQ -> ( . ternarioMat )
    (199) paren -> ( . eMat )
    (200) paren -> ( . valoresMat )
    (242) tCompare -> ( . ternarioMat )
    (250) parenBool -> ( . expBool )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (53) funcBool -> . COLINEALES ( valores , valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (58) vec -> . [ elem ]
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 177
    BOOL            shift and go to state 187
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 501
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 391
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 392
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    expBool                        shift and go to state 502
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 179
    ternarioVars                   shift and go to state 393
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 538

    (126) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (108) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (135) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (118) valoresTernarioVars -> . reg
    (119) valoresTernarioVars -> . vec
    (120) valoresTernarioVars -> . ternarioVars
    (121) valoresTernarioVars -> . ( ternarioVars )
    (122) valoresTernarioVars -> . atributos
    (123) valoresTernarioVars -> . varsOps
    (124) valoresTernarioVars -> . varYVals
    (125) valoresTernarioVars -> . RES
    (137) valoresTernarioBool -> . BOOL
    (138) valoresTernarioBool -> . funcBool
    (139) valoresTernarioBool -> . ternarioBool
    (140) valoresTernarioBool -> . ( ternarioBool )
    (141) valoresTernarioBool -> . expBool
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (94) reg -> . { campos }
    (58) vec -> . [ elem ]
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (53) funcBool -> . COLINEALES ( valores , valores )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    (               shift and go to state 537
    RES             shift and go to state 288
    BOOL            shift and go to state 305
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    atributos                      shift and go to state 310
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 501
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 531
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 299
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 302
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 297
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 309
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 536

state 539

    (127) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (113) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (136) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (118) valoresTernarioVars -> . reg
    (119) valoresTernarioVars -> . vec
    (120) valoresTernarioVars -> . ternarioVars
    (121) valoresTernarioVars -> . ( ternarioVars )
    (122) valoresTernarioVars -> . atributos
    (123) valoresTernarioVars -> . varsOps
    (124) valoresTernarioVars -> . varYVals
    (125) valoresTernarioVars -> . RES
    (137) valoresTernarioBool -> . BOOL
    (138) valoresTernarioBool -> . funcBool
    (139) valoresTernarioBool -> . ternarioBool
    (140) valoresTernarioBool -> . ( ternarioBool )
    (141) valoresTernarioBool -> . expBool
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (94) reg -> . { campos }
    (58) vec -> . [ elem ]
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (53) funcBool -> . COLINEALES ( valores , valores )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    (               shift and go to state 537
    RES             shift and go to state 288
    BOOL            shift and go to state 305
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 501
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 533
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 340
    expBool                        shift and go to state 536
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 341
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 297
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 309
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 540

    (117) ternarioVars -> expBool ? valoresTernarioBool . : valoresTernarioVars

    :               shift and go to state 557


state 541

    (9) lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE . lAbierta
    (18) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE . { g }
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE . lCerrada
    (23) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE . COMMENT com lCerrada
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (152) varAsig -> . variable MULEQ valores
    (153) varAsig -> . variable DIVEQ valores
    (154) varAsig -> . variable MASEQ valores
    (155) varAsig -> . variable MENOSEQ valores
    (156) varAsig -> . variable = valores
    (157) varAsig -> . ID . ID = valores
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]

    {               shift and go to state 561
    COMMENT         shift and go to state 558
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 559
    lAbierta                       shift and go to state 560
    varsOps                        shift and go to state 13
    loop                           shift and go to state 32

state 542

    (16) lCerrada -> IF ( cosaBooleana ) . { g } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE { g }
    (18) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) . { g } ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE COMMENT com lCerrada
    (6) lAbierta -> IF ( cosaBooleana ) . linea
    (7) lAbierta -> IF ( cosaBooleana ) . COMMENT com linea
    (8) lAbierta -> IF ( cosaBooleana ) . { g } ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> IF ( cosaBooleana ) . lCerrada ELSE lAbierta
    (11) lAbierta -> IF ( cosaBooleana ) . { g }
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (152) varAsig -> . variable MULEQ valores
    (153) varAsig -> . variable DIVEQ valores
    (154) varAsig -> . variable MASEQ valores
    (155) varAsig -> . variable MENOSEQ valores
    (156) varAsig -> . variable = valores
    (157) varAsig -> . ID . ID = valores
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]

    {               shift and go to state 564
    COMMENT         shift and go to state 562
    IF              shift and go to state 415
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    varsOps                        shift and go to state 13
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 563
    lAbierta                       shift and go to state 30
    linea                          shift and go to state 413
    loop                           shift and go to state 418

state 543

    (22) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com . lCerrada
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (152) varAsig -> . variable MULEQ valores
    (153) varAsig -> . variable DIVEQ valores
    (154) varAsig -> . variable MASEQ valores
    (155) varAsig -> . variable MENOSEQ valores
    (156) varAsig -> . variable = valores
    (157) varAsig -> . ID . ID = valores
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]

    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 565
    varsOps                        shift and go to state 13
    loop                           shift and go to state 39

state 544

    (17) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g . }

    }               shift and go to state 566


state 545

    (8) lAbierta -> IF ( cosaBooleana ) { g } ELSE . lAbierta
    (16) lCerrada -> IF ( cosaBooleana ) { g } ELSE . { g }
    (19) lCerrada -> IF ( cosaBooleana ) { g } ELSE . lCerrada
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (152) varAsig -> . variable MULEQ valores
    (153) varAsig -> . variable DIVEQ valores
    (154) varAsig -> . variable MASEQ valores
    (155) varAsig -> . variable MENOSEQ valores
    (156) varAsig -> . variable = valores
    (157) varAsig -> . ID . ID = valores
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]

    {               shift and go to state 569
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 567
    lAbierta                       shift and go to state 568
    varsOps                        shift and go to state 13
    loop                           shift and go to state 32

state 546

    (29) lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .

    WHILE           reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    COMMENT         reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    IF              reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    DO              reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    FOR             reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    RETURN          reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    ;               reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    MENOSMENOS      reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    MASMAS          reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    ID              reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    PRINT           reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    MULTIESCALAR    reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    LENGTH          reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    CAPITALIZAR     reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    COLINEALES      reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    [               reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    $end            reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    }               reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    ELSE            reduce using rule 29 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)


state 547

    (18) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE . { g }
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE . lCerrada
    (23) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE . COMMENT com lCerrada
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (152) varAsig -> . variable MULEQ valores
    (153) varAsig -> . variable DIVEQ valores
    (154) varAsig -> . variable MASEQ valores
    (155) varAsig -> . variable MENOSEQ valores
    (156) varAsig -> . variable = valores
    (157) varAsig -> . ID . ID = valores
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]

    {               shift and go to state 561
    COMMENT         shift and go to state 558
    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 559
    varsOps                        shift and go to state 13
    loop                           shift and go to state 39

state 548

    (16) lCerrada -> IF ( cosaBooleana ) { g } ELSE . { g }
    (19) lCerrada -> IF ( cosaBooleana ) { g } ELSE . lCerrada
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (152) varAsig -> . variable MULEQ valores
    (153) varAsig -> . variable DIVEQ valores
    (154) varAsig -> . variable MASEQ valores
    (155) varAsig -> . variable MENOSEQ valores
    (156) varAsig -> . variable = valores
    (157) varAsig -> . ID . ID = valores
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]

    {               shift and go to state 569
    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 567
    varsOps                        shift and go to state 13
    loop                           shift and go to state 39

state 549

    (27) lCerrada -> DO { g } WHILE ( valores ) ; .

    WHILE           reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    COMMENT         reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    IF              reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    DO              reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    FOR             reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    RETURN          reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    ;               reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    MENOSMENOS      reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    MASMAS          reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    ID              reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    PRINT           reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    MULTIESCALAR    reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    LENGTH          reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    CAPITALIZAR     reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    COLINEALES      reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    [               reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    $end            reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    }               reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    ELSE            reduce using rule 27 (lCerrada -> DO { g } WHILE ( valores ) ; .)


state 550

    (110) ternarioVars -> valoresBool ? valoresTernarioMat : . valoresTernarioVars
    (118) valoresTernarioVars -> . reg
    (119) valoresTernarioVars -> . vec
    (120) valoresTernarioVars -> . ternarioVars
    (121) valoresTernarioVars -> . ( ternarioVars )
    (122) valoresTernarioVars -> . atributos
    (123) valoresTernarioVars -> . varsOps
    (124) valoresTernarioVars -> . varYVals
    (125) valoresTernarioVars -> . RES
    (94) reg -> . { campos }
    (58) vec -> . [ elem ]
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (53) funcBool -> . COLINEALES ( valores , valores )
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (250) parenBool -> . ( expBool )
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )

    (               shift and go to state 572
    RES             shift and go to state 288
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    BOOL            shift and go to state 187
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77

    and                            shift and go to state 60
    atributos                      shift and go to state 310
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 570
    eMat                           shift and go to state 228
    p                              shift and go to state 96
    vecVal                         shift and go to state 290
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 446
    exp                            shift and go to state 100
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    tCompareEQ                     shift and go to state 75
    varsOps                        shift and go to state 433
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 435
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 571

state 551

    (115) ternarioVars -> expBool ? valoresTernarioMat : . valoresTernarioVars
    (118) valoresTernarioVars -> . reg
    (119) valoresTernarioVars -> . vec
    (120) valoresTernarioVars -> . ternarioVars
    (121) valoresTernarioVars -> . ( ternarioVars )
    (122) valoresTernarioVars -> . atributos
    (123) valoresTernarioVars -> . varsOps
    (124) valoresTernarioVars -> . varYVals
    (125) valoresTernarioVars -> . RES
    (94) reg -> . { campos }
    (58) vec -> . [ elem ]
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (53) funcBool -> . COLINEALES ( valores , valores )
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (250) parenBool -> . ( expBool )
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )

    (               shift and go to state 572
    RES             shift and go to state 288
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    BOOL            shift and go to state 187
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    vecVal                         shift and go to state 290
    eMat                           shift and go to state 228
    p                              shift and go to state 96
    valoresBool                    shift and go to state 570
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 465
    expBool                        shift and go to state 571
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    tCompareEQ                     shift and go to state 75
    varsOps                        shift and go to state 433
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 435
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 552

    (112) ternarioVars -> valoresBool ? valoresTernarioBool : . valoresTernarioVars
    (135) ternarioBool -> valoresBool ? valoresTernarioBool : . valoresTernarioBool
    (118) valoresTernarioVars -> . reg
    (119) valoresTernarioVars -> . vec
    (120) valoresTernarioVars -> . ternarioVars
    (121) valoresTernarioVars -> . ( ternarioVars )
    (122) valoresTernarioVars -> . atributos
    (123) valoresTernarioVars -> . varsOps
    (124) valoresTernarioVars -> . varYVals
    (125) valoresTernarioVars -> . RES
    (137) valoresTernarioBool -> . BOOL
    (138) valoresTernarioBool -> . funcBool
    (139) valoresTernarioBool -> . ternarioBool
    (140) valoresTernarioBool -> . ( ternarioBool )
    (141) valoresTernarioBool -> . expBool
    (94) reg -> . { campos }
    (58) vec -> . [ elem ]
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (53) funcBool -> . COLINEALES ( valores , valores )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (250) parenBool -> . ( expBool )
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )

    (               shift and go to state 575
    RES             shift and go to state 288
    BOOL            shift and go to state 305
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77

    and                            shift and go to state 60
    atributos                      shift and go to state 310
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 573
    eMat                           shift and go to state 228
    p                              shift and go to state 96
    valoresTernarioBool            shift and go to state 430
    vecVal                         shift and go to state 290
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 431
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    tCompareEQ                     shift and go to state 75
    varsOps                        shift and go to state 433
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 435
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 574

state 553

    (110) ternarioVars -> valoresBool ? valoresTernarioMat : . valoresTernarioVars
    (126) ternarioMat -> valoresBool ? valoresTernarioMat : . valoresTernarioMat
    (118) valoresTernarioVars -> . reg
    (119) valoresTernarioVars -> . vec
    (120) valoresTernarioVars -> . ternarioVars
    (121) valoresTernarioVars -> . ( ternarioVars )
    (122) valoresTernarioVars -> . atributos
    (123) valoresTernarioVars -> . varsOps
    (124) valoresTernarioVars -> . varYVals
    (125) valoresTernarioVars -> . RES
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (94) reg -> . { campos }
    (58) vec -> . [ elem ]
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (53) funcBool -> . COLINEALES ( valores , valores )
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    (               shift and go to state 577
    RES             shift and go to state 288
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    BOOL            shift and go to state 187
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    atributos                      shift and go to state 310
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 576
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 446
    exp                            shift and go to state 100
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 447
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 441
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 443
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 578

state 554

    (117) ternarioVars -> expBool ? valoresTernarioBool : . valoresTernarioVars
    (136) ternarioBool -> expBool ? valoresTernarioBool : . valoresTernarioBool
    (118) valoresTernarioVars -> . reg
    (119) valoresTernarioVars -> . vec
    (120) valoresTernarioVars -> . ternarioVars
    (121) valoresTernarioVars -> . ( ternarioVars )
    (122) valoresTernarioVars -> . atributos
    (123) valoresTernarioVars -> . varsOps
    (124) valoresTernarioVars -> . varYVals
    (125) valoresTernarioVars -> . RES
    (137) valoresTernarioBool -> . BOOL
    (138) valoresTernarioBool -> . funcBool
    (139) valoresTernarioBool -> . ternarioBool
    (140) valoresTernarioBool -> . ( ternarioBool )
    (141) valoresTernarioBool -> . expBool
    (94) reg -> . { campos }
    (58) vec -> . [ elem ]
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (53) funcBool -> . COLINEALES ( valores , valores )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (250) parenBool -> . ( expBool )
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )

    (               shift and go to state 575
    RES             shift and go to state 288
    BOOL            shift and go to state 305
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 573
    eMat                           shift and go to state 228
    p                              shift and go to state 96
    valoresTernarioBool            shift and go to state 459
    vecVal                         shift and go to state 290
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 460
    expBool                        shift and go to state 574
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    tCompareEQ                     shift and go to state 75
    varsOps                        shift and go to state 433
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 435
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 555

    (115) ternarioVars -> expBool ? valoresTernarioMat : . valoresTernarioVars
    (127) ternarioMat -> expBool ? valoresTernarioMat : . valoresTernarioMat
    (118) valoresTernarioVars -> . reg
    (119) valoresTernarioVars -> . vec
    (120) valoresTernarioVars -> . ternarioVars
    (121) valoresTernarioVars -> . ( ternarioVars )
    (122) valoresTernarioVars -> . atributos
    (123) valoresTernarioVars -> . varsOps
    (124) valoresTernarioVars -> . varYVals
    (125) valoresTernarioVars -> . RES
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (94) reg -> . { campos }
    (58) vec -> . [ elem ]
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (53) funcBool -> . COLINEALES ( valores , valores )
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    (               shift and go to state 577
    RES             shift and go to state 288
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    BOOL            shift and go to state 187
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    vecVal                         shift and go to state 290
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresBool                    shift and go to state 576
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 465
    expBool                        shift and go to state 578
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 464
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 441
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 443
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 556

    (112) ternarioVars -> valoresBool ? valoresTernarioBool : . valoresTernarioVars
    (118) valoresTernarioVars -> . reg
    (119) valoresTernarioVars -> . vec
    (120) valoresTernarioVars -> . ternarioVars
    (121) valoresTernarioVars -> . ( ternarioVars )
    (122) valoresTernarioVars -> . atributos
    (123) valoresTernarioVars -> . varsOps
    (124) valoresTernarioVars -> . varYVals
    (125) valoresTernarioVars -> . RES
    (94) reg -> . { campos }
    (58) vec -> . [ elem ]
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (53) funcBool -> . COLINEALES ( valores , valores )
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (250) parenBool -> . ( expBool )
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )

    (               shift and go to state 572
    RES             shift and go to state 288
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    BOOL            shift and go to state 187
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77

    and                            shift and go to state 60
    atributos                      shift and go to state 310
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 570
    eMat                           shift and go to state 228
    p                              shift and go to state 96
    vecVal                         shift and go to state 290
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 431
    exp                            shift and go to state 100
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    tCompareEQ                     shift and go to state 75
    varsOps                        shift and go to state 433
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 435
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 571

state 557

    (117) ternarioVars -> expBool ? valoresTernarioBool : . valoresTernarioVars
    (118) valoresTernarioVars -> . reg
    (119) valoresTernarioVars -> . vec
    (120) valoresTernarioVars -> . ternarioVars
    (121) valoresTernarioVars -> . ( ternarioVars )
    (122) valoresTernarioVars -> . atributos
    (123) valoresTernarioVars -> . varsOps
    (124) valoresTernarioVars -> . varYVals
    (125) valoresTernarioVars -> . RES
    (94) reg -> . { campos }
    (58) vec -> . [ elem ]
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (53) funcBool -> . COLINEALES ( valores , valores )
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (250) parenBool -> . ( expBool )
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )

    (               shift and go to state 572
    RES             shift and go to state 288
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    BOOL            shift and go to state 187
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    STRING          shift and go to state 181
    NOT             shift and go to state 99
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 226
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 570
    eMat                           shift and go to state 228
    p                              shift and go to state 96
    vecVal                         shift and go to state 290
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 460
    expBool                        shift and go to state 571
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    tCompareEQ                     shift and go to state 75
    varsOps                        shift and go to state 433
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 435
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 558

    (23) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT . com lCerrada
    (14) com -> . COMMENT com
    (15) com -> . empty
    (57) empty -> .

    COMMENT         shift and go to state 117
    IF              reduce using rule 57 (empty -> .)
    DO              reduce using rule 57 (empty -> .)
    RETURN          reduce using rule 57 (empty -> .)
    ;               reduce using rule 57 (empty -> .)
    WHILE           reduce using rule 57 (empty -> .)
    FOR             reduce using rule 57 (empty -> .)
    MENOSMENOS      reduce using rule 57 (empty -> .)
    MASMAS          reduce using rule 57 (empty -> .)
    ID              reduce using rule 57 (empty -> .)
    PRINT           reduce using rule 57 (empty -> .)
    MULTIESCALAR    reduce using rule 57 (empty -> .)
    LENGTH          reduce using rule 57 (empty -> .)
    CAPITALIZAR     reduce using rule 57 (empty -> .)
    COLINEALES      reduce using rule 57 (empty -> .)
    [               reduce using rule 57 (empty -> .)

    com                            shift and go to state 579
    empty                          shift and go to state 119

state 559

    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .

    WHILE           reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    COMMENT         reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    IF              reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    DO              reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    FOR             reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    RETURN          reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    ;               reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    MENOSMENOS      reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    MASMAS          reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    ID              reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    PRINT           reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    MULTIESCALAR    reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    LENGTH          reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    CAPITALIZAR     reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    COLINEALES      reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    [               reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    $end            reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    }               reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    ELSE            reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)


state 560

    (9) lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .

    COMMENT         reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .)
    IF              reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .)
    DO              reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .)
    WHILE           reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .)
    FOR             reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .)
    RETURN          reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .)
    ;               reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .)
    MENOSMENOS      reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .)
    MASMAS          reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .)
    ID              reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .)
    PRINT           reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .)
    MULTIESCALAR    reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .)
    LENGTH          reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .)
    CAPITALIZAR     reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .)
    COLINEALES      reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .)
    [               reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .)
    $end            reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .)
    }               reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta .)


state 561

    (18) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { . g }
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (57) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (152) varAsig -> . variable MULEQ valores
    (153) varAsig -> . variable DIVEQ valores
    (154) varAsig -> . variable MASEQ valores
    (155) varAsig -> . variable MENOSEQ valores
    (156) varAsig -> . variable = valores
    (157) varAsig -> . ID . ID = valores
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 57 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 12
    varsOps                        shift and go to state 13
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 580
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 30
    loop                           shift and go to state 32
    linea                          shift and go to state 34

state 562

    (18) lCerrada -> IF ( cosaBooleana ) COMMENT . com lCerrada ELSE { g }
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT . com lCerrada ELSE lCerrada
    (23) lCerrada -> IF ( cosaBooleana ) COMMENT . com lCerrada ELSE COMMENT com lCerrada
    (7) lAbierta -> IF ( cosaBooleana ) COMMENT . com linea
    (9) lAbierta -> IF ( cosaBooleana ) COMMENT . com lCerrada ELSE lAbierta
    (14) com -> . COMMENT com
    (15) com -> . empty
    (57) empty -> .

    COMMENT         shift and go to state 117
    IF              reduce using rule 57 (empty -> .)
    DO              reduce using rule 57 (empty -> .)
    RETURN          reduce using rule 57 (empty -> .)
    ;               reduce using rule 57 (empty -> .)
    WHILE           reduce using rule 57 (empty -> .)
    FOR             reduce using rule 57 (empty -> .)
    MENOSMENOS      reduce using rule 57 (empty -> .)
    MASMAS          reduce using rule 57 (empty -> .)
    ID              reduce using rule 57 (empty -> .)
    PRINT           reduce using rule 57 (empty -> .)
    MULTIESCALAR    reduce using rule 57 (empty -> .)
    LENGTH          reduce using rule 57 (empty -> .)
    CAPITALIZAR     reduce using rule 57 (empty -> .)
    COLINEALES      reduce using rule 57 (empty -> .)
    [               reduce using rule 57 (empty -> .)

    empty                          shift and go to state 119
    com                            shift and go to state 581

state 563

    (17) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE { g }
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE lCerrada
    (22) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE COMMENT com lCerrada
    (10) lAbierta -> IF ( cosaBooleana ) lCerrada . ELSE lAbierta
    (5) linea -> lCerrada .

    ELSE            shift and go to state 582
    COMMENT         reduce using rule 5 (linea -> lCerrada .)
    IF              reduce using rule 5 (linea -> lCerrada .)
    DO              reduce using rule 5 (linea -> lCerrada .)
    WHILE           reduce using rule 5 (linea -> lCerrada .)
    FOR             reduce using rule 5 (linea -> lCerrada .)
    RETURN          reduce using rule 5 (linea -> lCerrada .)
    ;               reduce using rule 5 (linea -> lCerrada .)
    MENOSMENOS      reduce using rule 5 (linea -> lCerrada .)
    MASMAS          reduce using rule 5 (linea -> lCerrada .)
    ID              reduce using rule 5 (linea -> lCerrada .)
    PRINT           reduce using rule 5 (linea -> lCerrada .)
    MULTIESCALAR    reduce using rule 5 (linea -> lCerrada .)
    LENGTH          reduce using rule 5 (linea -> lCerrada .)
    CAPITALIZAR     reduce using rule 5 (linea -> lCerrada .)
    COLINEALES      reduce using rule 5 (linea -> lCerrada .)
    [               reduce using rule 5 (linea -> lCerrada .)
    $end            reduce using rule 5 (linea -> lCerrada .)
    }               reduce using rule 5 (linea -> lCerrada .)


state 564

    (16) lCerrada -> IF ( cosaBooleana ) { . g } ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) { . g } ELSE lCerrada
    (8) lAbierta -> IF ( cosaBooleana ) { . g } ELSE lAbierta
    (11) lAbierta -> IF ( cosaBooleana ) { . g }
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (57) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (152) varAsig -> . variable MULEQ valores
    (153) varAsig -> . variable DIVEQ valores
    (154) varAsig -> . variable MASEQ valores
    (155) varAsig -> . variable MENOSEQ valores
    (156) varAsig -> . variable = valores
    (157) varAsig -> . ID . ID = valores
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 57 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    linea                          shift and go to state 34
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 12
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 583
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 30
    varsOps                        shift and go to state 13
    loop                           shift and go to state 32

state 565

    (22) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .

    WHILE           reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    COMMENT         reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    IF              reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    DO              reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    FOR             reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    RETURN          reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    ;               reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    MENOSMENOS      reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    MASMAS          reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    ID              reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    PRINT           reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    MULTIESCALAR    reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    LENGTH          reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    CAPITALIZAR     reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    COLINEALES      reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    [               reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    $end            reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    }               reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    ELSE            reduce using rule 22 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)


state 566

    (17) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .

    WHILE           reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    COMMENT         reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    IF              reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    DO              reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    FOR             reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    RETURN          reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    ;               reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    MENOSMENOS      reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    MASMAS          reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    ID              reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    PRINT           reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    MULTIESCALAR    reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    LENGTH          reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    CAPITALIZAR     reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    COLINEALES      reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    [               reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    $end            reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    }               reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    ELSE            reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)


state 567

    (19) lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .

    WHILE           reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    COMMENT         reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    IF              reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    DO              reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    FOR             reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    RETURN          reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    ;               reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    MENOSMENOS      reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    MASMAS          reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    ID              reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    PRINT           reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    MULTIESCALAR    reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    LENGTH          reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    CAPITALIZAR     reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    COLINEALES      reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    [               reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    $end            reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    }               reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    ELSE            reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)


state 568

    (8) lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .

    COMMENT         reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    IF              reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    DO              reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    WHILE           reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    FOR             reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    RETURN          reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    ;               reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    MENOSMENOS      reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    MASMAS          reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    ID              reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    PRINT           reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    MULTIESCALAR    reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    LENGTH          reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    CAPITALIZAR     reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    COLINEALES      reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    [               reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    $end            reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    }               reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)


state 569

    (16) lCerrada -> IF ( cosaBooleana ) { g } ELSE { . g }
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (57) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (152) varAsig -> . variable MULEQ valores
    (153) varAsig -> . variable DIVEQ valores
    (154) varAsig -> . variable MASEQ valores
    (155) varAsig -> . variable MENOSEQ valores
    (156) varAsig -> . variable = valores
    (157) varAsig -> . ID . ID = valores
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 57 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 12
    varsOps                        shift and go to state 13
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 584
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 30
    loop                           shift and go to state 32
    linea                          shift and go to state 34

state 570

    (108) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (208) expBool -> valoresBool . OR and
    (210) expBool -> valoresBool . OR valoresBool
    (213) and -> valoresBool . AND eq
    (215) and -> valoresBool . AND valoresBool

    ?               shift and go to state 585
    OR              shift and go to state 166
    AND             shift and go to state 165


state 571

    (113) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (207) expBool -> expBool . OR and
    (209) expBool -> expBool . OR valoresBool

    ?               shift and go to state 586
    OR              shift and go to state 203


state 572

    (121) valoresTernarioVars -> ( . ternarioVars )
    (205) valoresBool -> ( . ternarioBool )
    (234) tCompareEQ -> ( . ternarioBool )
    (235) tCompareEQ -> ( . ternarioMat )
    (242) tCompare -> ( . ternarioMat )
    (166) valoresMat -> ( . ternarioMat )
    (250) parenBool -> ( . expBool )
    (199) paren -> ( . eMat )
    (200) paren -> ( . valoresMat )
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (53) funcBool -> . COLINEALES ( valores , valores )
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (58) vec -> . [ elem ]
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 370
    BOOL            shift and go to state 187
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 587
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 371
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    expBool                        shift and go to state 588
    ternarioBool                   shift and go to state 323
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 393
    mayor                          shift and go to state 81
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 573

    (108) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (135) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (208) expBool -> valoresBool . OR and
    (210) expBool -> valoresBool . OR valoresBool
    (213) and -> valoresBool . AND eq
    (215) and -> valoresBool . AND valoresBool

    ?               shift and go to state 589
    OR              shift and go to state 166
    AND             shift and go to state 165


state 574

    (141) valoresTernarioBool -> expBool .
    (113) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (136) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> expBool . OR and
    (209) expBool -> expBool . OR valoresBool

    ,               reduce using rule 141 (valoresTernarioBool -> expBool .)
    ]               reduce using rule 141 (valoresTernarioBool -> expBool .)
    )               reduce using rule 141 (valoresTernarioBool -> expBool .)
    ;               reduce using rule 141 (valoresTernarioBool -> expBool .)
    :               reduce using rule 141 (valoresTernarioBool -> expBool .)
    }               reduce using rule 141 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 590
    OR              shift and go to state 203


state 575

    (121) valoresTernarioVars -> ( . ternarioVars )
    (140) valoresTernarioBool -> ( . ternarioBool )
    (205) valoresBool -> ( . ternarioBool )
    (234) tCompareEQ -> ( . ternarioBool )
    (235) tCompareEQ -> ( . ternarioMat )
    (242) tCompare -> ( . ternarioMat )
    (166) valoresMat -> ( . ternarioMat )
    (250) parenBool -> ( . expBool )
    (199) paren -> ( . eMat )
    (200) paren -> ( . valoresMat )
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (53) funcBool -> . COLINEALES ( valores , valores )
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (58) vec -> . [ elem ]
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 370
    BOOL            shift and go to state 187
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 587
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 371
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    expBool                        shift and go to state 588
    ternarioBool                   shift and go to state 392
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 179
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 393
    mayor                          shift and go to state 81
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 576

    (108) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (126) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (208) expBool -> valoresBool . OR and
    (210) expBool -> valoresBool . OR valoresBool
    (213) and -> valoresBool . AND eq
    (215) and -> valoresBool . AND valoresBool

    ?               shift and go to state 591
    OR              shift and go to state 166
    AND             shift and go to state 165


state 577

    (121) valoresTernarioVars -> ( . ternarioVars )
    (134) valoresTernarioMat -> ( . ternarioMat )
    (205) valoresBool -> ( . ternarioBool )
    (166) valoresMat -> ( . ternarioMat )
    (234) tCompareEQ -> ( . ternarioBool )
    (235) tCompareEQ -> ( . ternarioMat )
    (199) paren -> ( . eMat )
    (200) paren -> ( . valoresMat )
    (242) tCompare -> ( . ternarioMat )
    (250) parenBool -> ( . expBool )
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (52) funcString -> . CAPITALIZAR ( valores )
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (53) funcBool -> . COLINEALES ( valores , valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (94) reg -> . { campos }
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (58) vec -> . [ elem ]
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    INT             shift and go to state 185
    FLOAT           shift and go to state 186
    STRING          shift and go to state 181
    (               shift and go to state 177
    BOOL            shift and go to state 187
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    ID              shift and go to state 183
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 101
    -               shift and go to state 78
    +               shift and go to state 77
    [               shift and go to state 20
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 172
    funcInt                        shift and go to state 173
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 174
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 436
    eMat                           shift and go to state 176
    tCompareEQ                     shift and go to state 75
    vecVal                         shift and go to state 71
    ternarioMat                    shift and go to state 391
    vec                            shift and go to state 33
    paren                          shift and go to state 88
    reg                            shift and go to state 180
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 323
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    variable                       shift and go to state 89
    expBool                        shift and go to state 499
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 179
    ternarioVars                   shift and go to state 393
    varYVals                       shift and go to state 190
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 191

state 578

    (113) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (127) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (207) expBool -> expBool . OR and
    (209) expBool -> expBool . OR valoresBool

    ?               shift and go to state 592
    OR              shift and go to state 203


state 579

    (23) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com . lCerrada
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (152) varAsig -> . variable MULEQ valores
    (153) varAsig -> . variable DIVEQ valores
    (154) varAsig -> . variable MASEQ valores
    (155) varAsig -> . variable MENOSEQ valores
    (156) varAsig -> . variable = valores
    (157) varAsig -> . ID . ID = valores
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]

    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 593
    varsOps                        shift and go to state 13
    loop                           shift and go to state 39

state 580

    (18) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g . }

    }               shift and go to state 594


state 581

    (18) lCerrada -> IF ( cosaBooleana ) COMMENT com . lCerrada ELSE { g }
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com . lCerrada ELSE lCerrada
    (23) lCerrada -> IF ( cosaBooleana ) COMMENT com . lCerrada ELSE COMMENT com lCerrada
    (7) lAbierta -> IF ( cosaBooleana ) COMMENT com . linea
    (9) lAbierta -> IF ( cosaBooleana ) COMMENT com . lCerrada ELSE lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (152) varAsig -> . variable MULEQ valores
    (153) varAsig -> . variable DIVEQ valores
    (154) varAsig -> . variable MASEQ valores
    (155) varAsig -> . variable MENOSEQ valores
    (156) varAsig -> . variable = valores
    (157) varAsig -> . ID . ID = valores
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]

    IF              shift and go to state 415
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    varsOps                        shift and go to state 13
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 595
    lAbierta                       shift and go to state 30
    linea                          shift and go to state 509
    loop                           shift and go to state 418

state 582

    (17) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . { g }
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . lCerrada
    (22) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . COMMENT com lCerrada
    (10) lAbierta -> IF ( cosaBooleana ) lCerrada ELSE . lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (152) varAsig -> . variable MULEQ valores
    (153) varAsig -> . variable DIVEQ valores
    (154) varAsig -> . variable MASEQ valores
    (155) varAsig -> . variable MENOSEQ valores
    (156) varAsig -> . variable = valores
    (157) varAsig -> . ID . ID = valores
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]

    {               shift and go to state 515
    COMMENT         shift and go to state 512
    IF              shift and go to state 415
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    varsOps                        shift and go to state 13
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 513
    lAbierta                       shift and go to state 514
    loop                           shift and go to state 418

state 583

    (16) lCerrada -> IF ( cosaBooleana ) { g . } ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) { g . } ELSE lCerrada
    (8) lAbierta -> IF ( cosaBooleana ) { g . } ELSE lAbierta
    (11) lAbierta -> IF ( cosaBooleana ) { g . }

    }               shift and go to state 596


state 584

    (16) lCerrada -> IF ( cosaBooleana ) { g } ELSE { g . }

    }               shift and go to state 597


state 585

    (108) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (118) valoresTernarioVars -> . reg
    (119) valoresTernarioVars -> . vec
    (120) valoresTernarioVars -> . ternarioVars
    (121) valoresTernarioVars -> . ( ternarioVars )
    (122) valoresTernarioVars -> . atributos
    (123) valoresTernarioVars -> . varsOps
    (124) valoresTernarioVars -> . varYVals
    (125) valoresTernarioVars -> . RES
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (137) valoresTernarioBool -> . BOOL
    (138) valoresTernarioBool -> . funcBool
    (139) valoresTernarioBool -> . ternarioBool
    (140) valoresTernarioBool -> . ( ternarioBool )
    (141) valoresTernarioBool -> . expBool
    (94) reg -> . { campos }
    (58) vec -> . [ elem ]
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (53) funcBool -> . COLINEALES ( valores , valores )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    (               shift and go to state 442
    RES             shift and go to state 288
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    BOOL            shift and go to state 305
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    COLINEALES      shift and go to state 4
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    atributos                      shift and go to state 310
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 436
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 535
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 299
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 526
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 441
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 443
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 440

state 586

    (113) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (118) valoresTernarioVars -> . reg
    (119) valoresTernarioVars -> . vec
    (120) valoresTernarioVars -> . ternarioVars
    (121) valoresTernarioVars -> . ( ternarioVars )
    (122) valoresTernarioVars -> . atributos
    (123) valoresTernarioVars -> . varsOps
    (124) valoresTernarioVars -> . varYVals
    (125) valoresTernarioVars -> . RES
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (137) valoresTernarioBool -> . BOOL
    (138) valoresTernarioBool -> . funcBool
    (139) valoresTernarioBool -> . ternarioBool
    (140) valoresTernarioBool -> . ( ternarioBool )
    (141) valoresTernarioBool -> . expBool
    (94) reg -> . { campos }
    (58) vec -> . [ elem ]
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (53) funcBool -> . COLINEALES ( valores , valores )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    (               shift and go to state 442
    RES             shift and go to state 288
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    BOOL            shift and go to state 305
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    COLINEALES      shift and go to state 4
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 436
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 540
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 340
    expBool                        shift and go to state 440
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 528
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 441
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 443
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 587

    (108) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (135) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (126) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (208) expBool -> valoresBool . OR and
    (210) expBool -> valoresBool . OR valoresBool
    (213) and -> valoresBool . AND eq
    (215) and -> valoresBool . AND valoresBool

    ?               shift and go to state 598
    OR              shift and go to state 166
    AND             shift and go to state 165


state 588

    (250) parenBool -> ( expBool . )
    (113) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (136) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (127) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (207) expBool -> expBool . OR and
    (209) expBool -> expBool . OR valoresBool

    )               shift and go to state 327
    ?               shift and go to state 599
    OR              shift and go to state 203


state 589

    (108) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (135) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (118) valoresTernarioVars -> . reg
    (119) valoresTernarioVars -> . vec
    (120) valoresTernarioVars -> . ternarioVars
    (121) valoresTernarioVars -> . ( ternarioVars )
    (122) valoresTernarioVars -> . atributos
    (123) valoresTernarioVars -> . varsOps
    (124) valoresTernarioVars -> . varYVals
    (125) valoresTernarioVars -> . RES
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (137) valoresTernarioBool -> . BOOL
    (138) valoresTernarioBool -> . funcBool
    (139) valoresTernarioBool -> . ternarioBool
    (140) valoresTernarioBool -> . ( ternarioBool )
    (141) valoresTernarioBool -> . expBool
    (94) reg -> . { campos }
    (58) vec -> . [ elem ]
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (53) funcBool -> . COLINEALES ( valores , valores )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    (               shift and go to state 442
    RES             shift and go to state 288
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    BOOL            shift and go to state 305
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    COLINEALES      shift and go to state 4
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    atributos                      shift and go to state 310
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 436
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 531
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 299
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 526
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 441
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 443
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 440

state 590

    (113) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (136) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (118) valoresTernarioVars -> . reg
    (119) valoresTernarioVars -> . vec
    (120) valoresTernarioVars -> . ternarioVars
    (121) valoresTernarioVars -> . ( ternarioVars )
    (122) valoresTernarioVars -> . atributos
    (123) valoresTernarioVars -> . varsOps
    (124) valoresTernarioVars -> . varYVals
    (125) valoresTernarioVars -> . RES
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (137) valoresTernarioBool -> . BOOL
    (138) valoresTernarioBool -> . funcBool
    (139) valoresTernarioBool -> . ternarioBool
    (140) valoresTernarioBool -> . ( ternarioBool )
    (141) valoresTernarioBool -> . expBool
    (94) reg -> . { campos }
    (58) vec -> . [ elem ]
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (53) funcBool -> . COLINEALES ( valores , valores )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    (               shift and go to state 442
    RES             shift and go to state 288
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    BOOL            shift and go to state 305
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    COLINEALES      shift and go to state 4
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 436
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 533
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 340
    expBool                        shift and go to state 440
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 528
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 441
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 443
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 591

    (108) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (126) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (118) valoresTernarioVars -> . reg
    (119) valoresTernarioVars -> . vec
    (120) valoresTernarioVars -> . ternarioVars
    (121) valoresTernarioVars -> . ( ternarioVars )
    (122) valoresTernarioVars -> . atributos
    (123) valoresTernarioVars -> . varsOps
    (124) valoresTernarioVars -> . varYVals
    (125) valoresTernarioVars -> . RES
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (137) valoresTernarioBool -> . BOOL
    (138) valoresTernarioBool -> . funcBool
    (139) valoresTernarioBool -> . ternarioBool
    (140) valoresTernarioBool -> . ( ternarioBool )
    (141) valoresTernarioBool -> . expBool
    (94) reg -> . { campos }
    (58) vec -> . [ elem ]
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (53) funcBool -> . COLINEALES ( valores , valores )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    (               shift and go to state 442
    RES             shift and go to state 288
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    BOOL            shift and go to state 305
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    COLINEALES      shift and go to state 4
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    atributos                      shift and go to state 310
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 436
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 535
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 299
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 532
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 441
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 443
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 440

state 592

    (113) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (127) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (118) valoresTernarioVars -> . reg
    (119) valoresTernarioVars -> . vec
    (120) valoresTernarioVars -> . ternarioVars
    (121) valoresTernarioVars -> . ( ternarioVars )
    (122) valoresTernarioVars -> . atributos
    (123) valoresTernarioVars -> . varsOps
    (124) valoresTernarioVars -> . varYVals
    (125) valoresTernarioVars -> . RES
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (137) valoresTernarioBool -> . BOOL
    (138) valoresTernarioBool -> . funcBool
    (139) valoresTernarioBool -> . ternarioBool
    (140) valoresTernarioBool -> . ( ternarioBool )
    (141) valoresTernarioBool -> . expBool
    (94) reg -> . { campos }
    (58) vec -> . [ elem ]
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (53) funcBool -> . COLINEALES ( valores , valores )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    (               shift and go to state 442
    RES             shift and go to state 288
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    BOOL            shift and go to state 305
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    COLINEALES      shift and go to state 4
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 436
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 540
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 340
    expBool                        shift and go to state 440
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 534
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 441
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 443
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 593

    (23) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .

    WHILE           reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    COMMENT         reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    IF              reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    DO              reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    FOR             reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    RETURN          reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    ;               reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    MENOSMENOS      reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    MASMAS          reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    ID              reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    PRINT           reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    MULTIESCALAR    reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    LENGTH          reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    CAPITALIZAR     reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    COLINEALES      reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    [               reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    $end            reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    }               reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    ELSE            reduce using rule 23 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)


state 594

    (18) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .

    WHILE           reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    COMMENT         reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    IF              reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    DO              reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    FOR             reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    RETURN          reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    ;               reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    MENOSMENOS      reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    MASMAS          reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    ID              reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    PRINT           reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    MULTIESCALAR    reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    LENGTH          reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    CAPITALIZAR     reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    COLINEALES      reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    [               reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    $end            reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    }               reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    ELSE            reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)


state 595

    (18) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada . ELSE { g }
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada . ELSE lCerrada
    (23) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada . ELSE COMMENT com lCerrada
    (9) lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada . ELSE lAbierta
    (5) linea -> lCerrada .

    ELSE            shift and go to state 600
    COMMENT         reduce using rule 5 (linea -> lCerrada .)
    IF              reduce using rule 5 (linea -> lCerrada .)
    DO              reduce using rule 5 (linea -> lCerrada .)
    WHILE           reduce using rule 5 (linea -> lCerrada .)
    FOR             reduce using rule 5 (linea -> lCerrada .)
    RETURN          reduce using rule 5 (linea -> lCerrada .)
    ;               reduce using rule 5 (linea -> lCerrada .)
    MENOSMENOS      reduce using rule 5 (linea -> lCerrada .)
    MASMAS          reduce using rule 5 (linea -> lCerrada .)
    ID              reduce using rule 5 (linea -> lCerrada .)
    PRINT           reduce using rule 5 (linea -> lCerrada .)
    MULTIESCALAR    reduce using rule 5 (linea -> lCerrada .)
    LENGTH          reduce using rule 5 (linea -> lCerrada .)
    CAPITALIZAR     reduce using rule 5 (linea -> lCerrada .)
    COLINEALES      reduce using rule 5 (linea -> lCerrada .)
    [               reduce using rule 5 (linea -> lCerrada .)
    $end            reduce using rule 5 (linea -> lCerrada .)
    }               reduce using rule 5 (linea -> lCerrada .)


state 596

    (16) lCerrada -> IF ( cosaBooleana ) { g } . ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) { g } . ELSE lCerrada
    (8) lAbierta -> IF ( cosaBooleana ) { g } . ELSE lAbierta
    (11) lAbierta -> IF ( cosaBooleana ) { g } .

    ELSE            shift and go to state 601
    COMMENT         reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    IF              reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    DO              reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    WHILE           reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    FOR             reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    RETURN          reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    ;               reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MENOSMENOS      reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MASMAS          reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    ID              reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    PRINT           reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MULTIESCALAR    reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    LENGTH          reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    CAPITALIZAR     reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    COLINEALES      reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    [               reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    $end            reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)
    }               reduce using rule 11 (lAbierta -> IF ( cosaBooleana ) { g } .)


state 597

    (16) lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .

    WHILE           reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    COMMENT         reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    IF              reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    DO              reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    FOR             reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    RETURN          reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    ;               reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    MENOSMENOS      reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    MASMAS          reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    ID              reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    PRINT           reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    MULTIESCALAR    reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    LENGTH          reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    CAPITALIZAR     reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    COLINEALES      reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    [               reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    $end            reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    }               reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    ELSE            reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)


state 598

    (108) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (135) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (126) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (118) valoresTernarioVars -> . reg
    (119) valoresTernarioVars -> . vec
    (120) valoresTernarioVars -> . ternarioVars
    (121) valoresTernarioVars -> . ( ternarioVars )
    (122) valoresTernarioVars -> . atributos
    (123) valoresTernarioVars -> . varsOps
    (124) valoresTernarioVars -> . varYVals
    (125) valoresTernarioVars -> . RES
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (137) valoresTernarioBool -> . BOOL
    (138) valoresTernarioBool -> . funcBool
    (139) valoresTernarioBool -> . ternarioBool
    (140) valoresTernarioBool -> . ( ternarioBool )
    (141) valoresTernarioBool -> . expBool
    (94) reg -> . { campos }
    (58) vec -> . [ elem ]
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (53) funcBool -> . COLINEALES ( valores , valores )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    (               shift and go to state 442
    RES             shift and go to state 288
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    BOOL            shift and go to state 305
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    COLINEALES      shift and go to state 4
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    atributos                      shift and go to state 310
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 436
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 531
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 299
    exp                            shift and go to state 100
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 532
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 441
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 443
    parenBool                      shift and go to state 86
    expBool                        shift and go to state 440

state 599

    (113) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (136) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (127) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (118) valoresTernarioVars -> . reg
    (119) valoresTernarioVars -> . vec
    (120) valoresTernarioVars -> . ternarioVars
    (121) valoresTernarioVars -> . ( ternarioVars )
    (122) valoresTernarioVars -> . atributos
    (123) valoresTernarioVars -> . varsOps
    (124) valoresTernarioVars -> . varYVals
    (125) valoresTernarioVars -> . RES
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (137) valoresTernarioBool -> . BOOL
    (138) valoresTernarioBool -> . funcBool
    (139) valoresTernarioBool -> . ternarioBool
    (140) valoresTernarioBool -> . ( ternarioBool )
    (141) valoresTernarioBool -> . expBool
    (94) reg -> . { campos }
    (58) vec -> . [ elem ]
    (108) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (113) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (115) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (116) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (117) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (97) atributos -> . ID . valoresCampos
    (98) atributos -> . reg . valoresCampos
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (142) varYVals -> . ID
    (143) varYVals -> . vecVal
    (144) varYVals -> . vecVal . varYVals
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (167) eMat -> . eMat + p
    (168) eMat -> . valoresMat + p
    (169) eMat -> . eMat + valoresMat
    (170) eMat -> . valoresMat + valoresMat
    (171) eMat -> . p
    (172) eMat -> . eMat - p
    (173) eMat -> . valoresMat - p
    (174) eMat -> . eMat - valoresMat
    (175) eMat -> . valoresMat - valoresMat
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (53) funcBool -> . COLINEALES ( valores , valores )
    (135) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (136) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (207) expBool -> . expBool OR and
    (208) expBool -> . valoresBool OR and
    (209) expBool -> . expBool OR valoresBool
    (210) expBool -> . valoresBool OR valoresBool
    (211) expBool -> . and
    (201) valoresBool -> . BOOL
    (202) valoresBool -> . funcBool
    (203) valoresBool -> . varYVals
    (204) valoresBool -> . varsOps
    (205) valoresBool -> . ( ternarioBool )
    (206) valoresBool -> .
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (158) valoresMat -> . INT
    (159) valoresMat -> . FLOAT
    (160) valoresMat -> . funcInt
    (161) valoresMat -> . atributos
    (162) valoresMat -> . funcString
    (163) valoresMat -> . STRING
    (164) valoresMat -> . varYVals
    (165) valoresMat -> . varsOps
    (166) valoresMat -> . ( ternarioMat )
    (176) p -> . p * exp
    (177) p -> . p / exp
    (178) p -> . p % exp
    (179) p -> . valoresMat * exp
    (180) p -> . valoresMat / exp
    (181) p -> . valoresMat % exp
    (182) p -> . p * valoresMat
    (183) p -> . p / valoresMat
    (184) p -> . p % valoresMat
    (185) p -> . valoresMat * valoresMat
    (186) p -> . valoresMat / valoresMat
    (187) p -> . valoresMat % valoresMat
    (188) p -> . exp
    (212) and -> . and AND eq
    (213) and -> . valoresBool AND eq
    (214) and -> . and AND valoresBool
    (215) and -> . valoresBool AND valoresBool
    (216) and -> . eq
    (52) funcString -> . CAPITALIZAR ( valores )
    (189) exp -> . exp ^ iSing
    (190) exp -> . valoresMat ^ iSing
    (191) exp -> . exp ^ valoresMat
    (192) exp -> . valoresMat ^ valoresMat
    (193) exp -> . iSing
    (217) eq -> . eq EQEQ mayor
    (218) eq -> . eq DISTINTO mayor
    (219) eq -> . tCompareEQ EQEQ mayor
    (220) eq -> . tCompareEQ DISTINTO mayor
    (221) eq -> . eq EQEQ tCompareEQ
    (222) eq -> . eq DISTINTO tCompareEQ
    (223) eq -> . tCompareEQ EQEQ tCompareEQ
    (224) eq -> . tCompareEQ DISTINTO tCompareEQ
    (225) eq -> . mayor
    (194) iSing -> . - paren
    (195) iSing -> . + paren
    (196) iSing -> . - valoresMat
    (197) iSing -> . + valoresMat
    (198) iSing -> . paren
    (226) tCompareEQ -> . BOOL
    (227) tCompareEQ -> . funcBool
    (228) tCompareEQ -> . varYVals
    (229) tCompareEQ -> . varsOps
    (230) tCompareEQ -> . INT
    (231) tCompareEQ -> . FLOAT
    (232) tCompareEQ -> . funcInt
    (233) tCompareEQ -> . eMat
    (234) tCompareEQ -> . ( ternarioBool )
    (235) tCompareEQ -> . ( ternarioMat )
    (243) mayor -> . tCompare > tCompare
    (244) mayor -> . menor
    (199) paren -> . ( eMat )
    (200) paren -> . ( valoresMat )
    (236) tCompare -> . eMat
    (237) tCompare -> . varsOps
    (238) tCompare -> . varYVals
    (239) tCompare -> . INT
    (240) tCompare -> . funcInt
    (241) tCompare -> . FLOAT
    (242) tCompare -> . ( ternarioMat )
    (245) menor -> . tCompare < tCompare
    (246) menor -> . not
    (247) not -> . NOT not
    (248) not -> . NOT valoresBool
    (249) not -> . parenBool
    (250) parenBool -> . ( expBool )

    (               shift and go to state 442
    RES             shift and go to state 288
    INT             shift and go to state 303
    FLOAT           shift and go to state 304
    STRING          shift and go to state 300
    BOOL            shift and go to state 305
    {               shift and go to state 101
    [               shift and go to state 20
    ID              shift and go to state 294
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    COLINEALES      shift and go to state 4
    ?               reduce using rule 206 (valoresBool -> .)
    OR              reduce using rule 206 (valoresBool -> .)
    AND             reduce using rule 206 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 78
    +               shift and go to state 77
    NOT             shift and go to state 99

    and                            shift and go to state 60
    funcBool                       shift and go to state 287
    funcInt                        shift and go to state 289
    not                            shift and go to state 66
    menor                          shift and go to state 67
    mayor                          shift and go to state 81
    valoresMat                     shift and go to state 69
    eq                             shift and go to state 70
    valoresBool                    shift and go to state 436
    eMat                           shift and go to state 292
    tCompareEQ                     shift and go to state 75
    valoresTernarioBool            shift and go to state 533
    vecVal                         shift and go to state 290
    ternarioMat                    shift and go to state 295
    vec                            shift and go to state 296
    paren                          shift and go to state 88
    reg                            shift and go to state 298
    valoresTernarioVars            shift and go to state 340
    expBool                        shift and go to state 440
    ternarioBool                   shift and go to state 301
    iSing                          shift and go to state 85
    tCompare                       shift and go to state 87
    valoresTernarioMat             shift and go to state 534
    variable                       shift and go to state 89
    funcString                     shift and go to state 184
    p                              shift and go to state 96
    varsOps                        shift and go to state 441
    exp                            shift and go to state 100
    ternarioVars                   shift and go to state 308
    varYVals                       shift and go to state 443
    parenBool                      shift and go to state 86
    atributos                      shift and go to state 310

state 600

    (18) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE . { g }
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE . lCerrada
    (23) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE . COMMENT com lCerrada
    (9) lAbierta -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE . lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (152) varAsig -> . variable MULEQ valores
    (153) varAsig -> . variable DIVEQ valores
    (154) varAsig -> . variable MASEQ valores
    (155) varAsig -> . variable MENOSEQ valores
    (156) varAsig -> . variable = valores
    (157) varAsig -> . ID . ID = valores
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]

    {               shift and go to state 561
    COMMENT         shift and go to state 558
    IF              shift and go to state 415
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    varsOps                        shift and go to state 13
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 559
    lAbierta                       shift and go to state 560
    loop                           shift and go to state 418

state 601

    (16) lCerrada -> IF ( cosaBooleana ) { g } ELSE . { g }
    (19) lCerrada -> IF ( cosaBooleana ) { g } ELSE . lCerrada
    (8) lAbierta -> IF ( cosaBooleana ) { g } ELSE . lAbierta
    (13) lCerrada -> . sentencia
    (16) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (18) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (19) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (22) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (23) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (24) lCerrada -> . loop { g }
    (25) lCerrada -> . loop lCerrada
    (26) lCerrada -> . loop COMMENT com lCerrada
    (27) lCerrada -> . DO { g } WHILE ( valores ) ;
    (28) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (29) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) COMMENT com linea
    (8) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lAbierta
    (10) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (11) lAbierta -> . IF ( cosaBooleana ) { g }
    (12) lAbierta -> . loop lAbierta
    (30) sentencia -> . varsOps ;
    (31) sentencia -> . func ;
    (32) sentencia -> . varAsig ;
    (33) sentencia -> . RETURN ;
    (34) sentencia -> . ;
    (35) loop -> . WHILE ( valores )
    (36) loop -> . FOR ( primParam ; valores ; tercerParam )
    (145) varsOps -> . MENOSMENOS variable
    (146) varsOps -> . MASMAS variable
    (147) varsOps -> . variable MASMAS
    (148) varsOps -> . variable MENOSMENOS
    (45) func -> . funcReturn
    (46) func -> . funcVoid
    (152) varAsig -> . variable MULEQ valores
    (153) varAsig -> . variable DIVEQ valores
    (154) varAsig -> . variable MASEQ valores
    (155) varAsig -> . variable MENOSEQ valores
    (156) varAsig -> . variable = valores
    (157) varAsig -> . ID . ID = valores
    (149) variable -> . ID
    (150) variable -> . vecVal
    (151) variable -> . vecVal . varYVals
    (47) funcReturn -> . funcInt
    (48) funcReturn -> . funcString
    (49) funcReturn -> . funcBool
    (54) funcVoid -> . PRINT ( valores )
    (61) vecVal -> . ID [ expresion ]
    (62) vecVal -> . vec [ expresion ]
    (63) vecVal -> . vecVal [ expresion ]
    (64) vecVal -> . ID [ INT ]
    (65) vecVal -> . vec [ INT ]
    (66) vecVal -> . vecVal [ INT ]
    (50) funcInt -> . MULTIESCALAR ( valores , valores param )
    (51) funcInt -> . LENGTH ( valores )
    (52) funcString -> . CAPITALIZAR ( valores )
    (53) funcBool -> . COLINEALES ( valores , valores )
    (58) vec -> . [ elem ]

    {               shift and go to state 569
    IF              shift and go to state 415
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 16
    MENOSMENOS      shift and go to state 15
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 17
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    varsOps                        shift and go to state 13
    funcVoid                       shift and go to state 14
    func                           shift and go to state 18
    variable                       shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 567
    lAbierta                       shift and go to state 568
    loop                           shift and go to state 418
