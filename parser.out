Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> g
Rule 1     g -> linea g
Rule 2     g -> COMMENT g
Rule 3     g -> empty
Rule 4     linea -> lAbierta
Rule 5     linea -> lCerrada
Rule 6     lAbierta -> IF ( cosaBooleana ) linea
Rule 7     lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta
Rule 8     lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta
Rule 9     lAbierta -> IF ( cosaBooleana ) { g }
Rule 10    lAbierta -> loop lAbierta
Rule 11    lCerrada -> sentencia
Rule 12    com -> COMMENT com
Rule 13    com -> empty
Rule 14    lCerrada -> IF ( cosaBooleana ) { g } ELSE { g }
Rule 15    lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g }
Rule 16    lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
Rule 17    lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada
Rule 18    lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada
Rule 19    lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
Rule 20    lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
Rule 21    lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
Rule 22    lCerrada -> loop { g }
Rule 23    lCerrada -> loop lCerrada
Rule 24    lCerrada -> loop COMMENT com lCerrada
Rule 25    lCerrada -> DO { g } WHILE ( valores ) ;
Rule 26    lCerrada -> DO lCerrada WHILE ( valores ) ;
Rule 27    lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ;
Rule 28    sentencia -> varsOps ;
Rule 29    sentencia -> func ;
Rule 30    sentencia -> varAsig ;
Rule 31    sentencia -> RETURN ;
Rule 32    sentencia -> ;
Rule 33    loop -> WHILE ( valores )
Rule 34    loop -> FOR ( primParam ; valores ; tercerParam )
Rule 35    cosaBooleana -> expBool
Rule 36    cosaBooleana -> valoresBool
Rule 37    primParam -> varAsig
Rule 38    primParam -> empty
Rule 39    tercerParam -> varsOps
Rule 40    tercerParam -> varAsig
Rule 41    tercerParam -> func
Rule 42    tercerParam -> empty
Rule 43    func -> funcReturn
Rule 44    func -> funcVoid
Rule 45    funcReturn -> funcInt
Rule 46    funcReturn -> funcString
Rule 47    funcReturn -> funcBool
Rule 48    funcInt -> MULTIESCALAR ( valores , valores param )
Rule 49    funcInt -> LENGTH ( valores )
Rule 50    funcString -> CAPITALIZAR ( valores )
Rule 51    funcBool -> COLINEALES ( valores , valores )
Rule 52    funcVoid -> PRINT ( valores )
Rule 53    param -> , valores
Rule 54    param -> empty
Rule 55    empty -> <empty>
Rule 56    vec -> [ elem ]
Rule 57    elem -> valores , elem
Rule 58    elem -> valores
Rule 59    valores -> eMat
Rule 60    valores -> expBool
Rule 61    valores -> funcReturn
Rule 62    valores -> reg
Rule 63    valores -> INT
Rule 64    valores -> FLOAT
Rule 65    valores -> STRING
Rule 66    valores -> BOOL
Rule 67    valores -> varYVals
Rule 68    valores -> varsOps
Rule 69    valores -> vec
Rule 70    valores -> ternario
Rule 71    valores -> atributos
Rule 72    valores -> RES
Rule 73    atributos -> ID . valoresCampos
Rule 74    atributos -> reg . valoresCampos
Rule 75    valoresCampos -> varYVals
Rule 76    valoresCampos -> END
Rule 77    valoresCampos -> BEGIN
Rule 78    ternario -> ternarioMat
Rule 79    ternario -> ternarioBool
Rule 80    ternario -> ( ternarioMat )
Rule 81    ternario -> ( ternarioBool )
Rule 82    ternario -> ternarioVars
Rule 83    ternario -> ( ternarioVars )
Rule 84    ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars
Rule 85    ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat
Rule 86    ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars
Rule 87    ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool
Rule 88    ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars
Rule 89    ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars
Rule 90    ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat
Rule 91    ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars
Rule 92    ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool
Rule 93    ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars
Rule 94    valoresTernarioVars -> reg
Rule 95    valoresTernarioVars -> vec
Rule 96    valoresTernarioVars -> ternarioVars
Rule 97    valoresTernarioVars -> ( ternarioVars )
Rule 98    valoresTernarioVars -> atributos
Rule 99    valoresTernarioVars -> varsOps
Rule 100   valoresTernarioVars -> varYVals
Rule 101   valoresTernarioVars -> res
Rule 102   res -> RES
Rule 103   ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat
Rule 104   ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat
Rule 105   valoresTernarioMat -> INT
Rule 106   valoresTernarioMat -> FLOAT
Rule 107   valoresTernarioMat -> funcInt
Rule 108   valoresTernarioMat -> STRING
Rule 109   valoresTernarioMat -> eMat
Rule 110   ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool
Rule 111   ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool
Rule 112   valoresTernarioBool -> BOOL
Rule 113   valoresTernarioBool -> funcBool
Rule 114   valoresTernarioBool -> ternarioBool
Rule 115   valoresTernarioBool -> ( ternarioBool )
Rule 116   valoresTernarioBool -> expBool
Rule 117   varYVals -> ID
Rule 118   varYVals -> vecVal
Rule 119   varYVals -> vecVal . varYVals
Rule 120   vecVal -> ID m
Rule 121   vecVal -> vec m
Rule 122   m -> [ valores ]
Rule 123   m -> [ valores ] m
Rule 124   reg -> { campos }
Rule 125   campos -> ID : valores , campos
Rule 126   campos -> ID : valores
Rule 127   varsOps -> MENOSMENOS varYVals
Rule 128   varsOps -> MASMAS varYVals
Rule 129   varsOps -> varYVals MASMAS
Rule 130   varsOps -> varYVals MENOSMENOS
Rule 131   valoresAsig -> valores
Rule 132   varAsig -> varYVals MULEQ valoresAsig
Rule 133   varAsig -> varYVals DIVEQ valoresAsig
Rule 134   varAsig -> varYVals MASEQ valoresAsig
Rule 135   varAsig -> varYVals MENOSEQ valoresAsig
Rule 136   varAsig -> varYVals = valoresAsig
Rule 137   varAsig -> ID . ID = valoresAsig
Rule 138   valoresMat -> INT
Rule 139   valoresMat -> FLOAT
Rule 140   valoresMat -> funcInt
Rule 141   valoresMat -> atributos
Rule 142   valoresMat -> funcString
Rule 143   valoresMat -> STRING
Rule 144   valoresMat -> varYVals
Rule 145   valoresMat -> varsOps
Rule 146   valoresMat -> ( ternarioMat )
Rule 147   eMat -> eMat + p
Rule 148   eMat -> valoresMat + p
Rule 149   eMat -> eMat + valoresMat
Rule 150   eMat -> valoresMat + valoresMat
Rule 151   eMat -> p
Rule 152   eMat -> eMat - p
Rule 153   eMat -> valoresMat - p
Rule 154   eMat -> eMat - valoresMat
Rule 155   eMat -> valoresMat - valoresMat
Rule 156   p -> p * exp
Rule 157   p -> p / exp
Rule 158   p -> p % exp
Rule 159   p -> valoresMat * exp
Rule 160   p -> valoresMat / exp
Rule 161   p -> valoresMat % exp
Rule 162   p -> p * valoresMat
Rule 163   p -> p / valoresMat
Rule 164   p -> p % valoresMat
Rule 165   p -> valoresMat * valoresMat
Rule 166   p -> valoresMat / valoresMat
Rule 167   p -> valoresMat % valoresMat
Rule 168   p -> exp
Rule 169   exp -> exp ^ iSing
Rule 170   exp -> valoresMat ^ iSing
Rule 171   exp -> exp ^ valoresMat
Rule 172   exp -> valoresMat ^ valoresMat
Rule 173   exp -> iSing
Rule 174   iSing -> - paren
Rule 175   iSing -> + paren
Rule 176   iSing -> - valoresMat
Rule 177   iSing -> + valoresMat
Rule 178   iSing -> paren
Rule 179   paren -> ( eMat )
Rule 180   paren -> ( valoresMat )
Rule 181   valoresBool -> BOOL
Rule 182   valoresBool -> funcBool
Rule 183   valoresBool -> varYVals
Rule 184   valoresBool -> varsOps
Rule 185   valoresBool -> ( ternarioBool )
Rule 186   valoresBool -> <empty>
Rule 187   expBool -> expBool OR and
Rule 188   expBool -> valoresBool OR and
Rule 189   expBool -> expBool OR valoresBool
Rule 190   expBool -> valoresBool OR valoresBool
Rule 191   expBool -> and
Rule 192   and -> and AND eq
Rule 193   and -> valoresBool AND eq
Rule 194   and -> and AND valoresBool
Rule 195   and -> valoresBool AND valoresBool
Rule 196   and -> eq
Rule 197   eq -> eq EQEQ mayor
Rule 198   eq -> eq DISTINTO mayor
Rule 199   eq -> tCompare EQEQ mayor
Rule 200   eq -> tCompare DISTINTO mayor
Rule 201   eq -> eq EQEQ tCompare
Rule 202   eq -> eq DISTINTO tCompare
Rule 203   eq -> tCompare EQEQ tCompare
Rule 204   eq -> tCompare DISTINTO tCompare
Rule 205   eq -> mayor
Rule 206   tCompare -> eMat
Rule 207   tCompare -> varsOps
Rule 208   tCompare -> varYVals
Rule 209   tCompare -> INT
Rule 210   tCompare -> funcInt
Rule 211   tCompare -> FLOAT
Rule 212   tCompare -> ( ternarioBool )
Rule 213   tCompare -> ( ternarioMat )
Rule 214   mayor -> tCompare > tCompare
Rule 215   mayor -> menor
Rule 216   menor -> tCompare < tCompare
Rule 217   menor -> not
Rule 218   not -> NOT not
Rule 219   not -> NOT valoresBool
Rule 220   not -> parenBool
Rule 221   parenBool -> ( expBool )

Terminals, with rules where they appear

%                    : 158 161 164 167
(                    : 6 7 8 9 14 15 16 17 18 19 20 21 25 26 27 33 34 48 49 50 51 52 80 81 83 97 115 146 179 180 185 212 213 221
)                    : 6 7 8 9 14 15 16 17 18 19 20 21 25 26 27 33 34 48 49 50 51 52 80 81 83 97 115 146 179 180 185 212 213 221
*                    : 156 159 162 165
+                    : 147 148 149 150 175 177
,                    : 48 51 53 57 125
-                    : 152 153 154 155 174 176
.                    : 73 74 119 137
/                    : 157 160 163 166
:                    : 84 85 86 87 88 89 90 91 92 93 103 104 110 111 125 126
;                    : 25 26 27 28 29 30 31 32 34 34
<                    : 216
=                    : 136 137
>                    : 214
?                    : 84 85 86 87 88 89 90 91 92 93 103 104 110 111
AND                  : 192 193 194 195
BEGIN                : 77
BOOL                 : 66 112 181
CAPITALIZAR          : 50
COLINEALES           : 51
COMMENT              : 2 12 16 19 20 21 21 24 27
DISTINTO             : 198 200 202 204
DIVEQ                : 133
DO                   : 25 26 27
ELSE                 : 7 8 14 15 16 17 18 19 20 21
END                  : 76
EQEQ                 : 197 199 201 203
FLOAT                : 64 106 139 211
FOR                  : 34
ID                   : 73 117 120 125 126 137 137
IF                   : 6 7 8 9 14 15 16 17 18 19 20 21
INT                  : 63 105 138 209
LENGTH               : 49
MASEQ                : 134
MASMAS               : 128 129
MENOSEQ              : 135
MENOSMENOS           : 127 130
MULEQ                : 132
MULTIESCALAR         : 48
NOT                  : 218 219
OR                   : 187 188 189 190
PRINT                : 52
RES                  : 72 102
RETURN               : 31
STRING               : 65 108 143
WHILE                : 25 26 27 33
[                    : 56 122 123
]                    : 56 122 123
^                    : 169 170 171 172
error                : 
{                    : 7 9 14 14 15 16 17 22 25 124
}                    : 7 9 14 14 15 16 17 22 25 124

Nonterminals, with rules where they appear

and                  : 187 188 191 192 194
atributos            : 71 98 141
campos               : 124 125
com                  : 12 16 19 20 21 21 24 27
cosaBooleana         : 6 7 8 9 14 15 16 17 18 19 20 21
eMat                 : 59 109 147 149 152 154 179 206
elem                 : 56 57
empty                : 3 13 38 42 54
eq                   : 192 193 196 197 198 201 202
exp                  : 156 157 158 159 160 161 168 169 171
expBool              : 35 60 89 90 91 92 93 104 111 116 187 189 221
func                 : 29 41
funcBool             : 47 113 182
funcInt              : 45 107 140 210
funcReturn           : 43 61
funcString           : 46 142
funcVoid             : 44
g                    : 1 2 7 9 14 14 15 16 17 22 25 0
iSing                : 169 170 173
lAbierta             : 4 7 8 10
lCerrada             : 5 8 15 16 17 18 18 19 19 20 20 21 21 23 24 26 27
linea                : 1 6
loop                 : 10 22 23 24
m                    : 120 121 123
mayor                : 197 198 199 200 205
menor                : 215
not                  : 217 218
p                    : 147 148 151 152 153 156 157 158 162 163 164
param                : 48
paren                : 174 175 178
parenBool            : 220
primParam            : 34
reg                  : 62 74 94
res                  : 101
sentencia            : 11
tCompare             : 199 200 201 202 203 203 204 204 214 214 216 216
tercerParam          : 34
ternario             : 70
ternarioBool         : 79 81 114 115 185 212
ternarioMat          : 78 80 146 213
ternarioVars         : 82 83 96 97
valores              : 25 26 27 33 34 48 48 49 50 51 51 52 53 57 58 122 123 125 126 131
valoresAsig          : 132 133 134 135 136 137
valoresBool          : 36 84 85 86 87 88 103 110 188 189 190 190 193 194 195 195 219
valoresCampos        : 73 74
valoresMat           : 148 149 150 150 153 154 155 155 159 160 161 162 163 164 165 165 166 166 167 167 170 171 172 172 176 177 180
valoresTernarioBool  : 87 88 92 93 110 110 111 111
valoresTernarioMat   : 85 86 90 91 103 103 104 104
valoresTernarioVars  : 84 84 85 86 87 88 89 89 90 91 92 93
varAsig              : 30 37 40
varYVals             : 67 75 100 119 127 128 129 130 132 133 134 135 136 144 183 208
varsOps              : 28 39 68 99 145 184 207
vec                  : 69 95 121
vecVal               : 118 119

Parsing method: LALR

state 0

    (0) S' -> . g
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (55) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (132) varAsig -> . varYVals MULEQ valoresAsig
    (133) varAsig -> . varYVals DIVEQ valoresAsig
    (134) varAsig -> . varYVals MASEQ valoresAsig
    (135) varAsig -> . varYVals MENOSEQ valoresAsig
    (136) varAsig -> . varYVals = valoresAsig
    (137) varAsig -> . ID . ID = valoresAsig
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    $end            reduce using rule 55 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 13
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 24
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 29
    lAbierta                       shift and go to state 30
    loop                           shift and go to state 32
    varYVals                       shift and go to state 11
    linea                          shift and go to state 34

state 1

    (25) lCerrada -> DO . { g } WHILE ( valores ) ;
    (26) lCerrada -> DO . lCerrada WHILE ( valores ) ;
    (27) lCerrada -> DO . COMMENT com lCerrada WHILE ( valores ) ;
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (132) varAsig -> . varYVals MULEQ valoresAsig
    (133) varAsig -> . varYVals DIVEQ valoresAsig
    (134) varAsig -> . varYVals MASEQ valoresAsig
    (135) varAsig -> . varYVals MENOSEQ valoresAsig
    (136) varAsig -> . varYVals = valoresAsig
    (137) varAsig -> . ID . ID = valoresAsig
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 38
    COMMENT         shift and go to state 35
    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 37
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 39

state 2

    (31) sentencia -> RETURN . ;

    ;               shift and go to state 40


state 3

    (47) funcReturn -> funcBool .

    ;               reduce using rule 47 (funcReturn -> funcBool .)
    )               reduce using rule 47 (funcReturn -> funcBool .)


state 4

    (51) funcBool -> COLINEALES . ( valores , valores )

    (               shift and go to state 41


state 5

    (45) funcReturn -> funcInt .

    ;               reduce using rule 45 (funcReturn -> funcInt .)
    )               reduce using rule 45 (funcReturn -> funcInt .)


state 6

    (33) loop -> WHILE . ( valores )

    (               shift and go to state 42


state 7

    (52) funcVoid -> PRINT . ( valores )

    (               shift and go to state 43


state 8

    (118) varYVals -> vecVal .
    (119) varYVals -> vecVal . . varYVals

    MASMAS          reduce using rule 118 (varYVals -> vecVal .)
    MENOSMENOS      reduce using rule 118 (varYVals -> vecVal .)
    >               reduce using rule 118 (varYVals -> vecVal .)
    <               reduce using rule 118 (varYVals -> vecVal .)
    EQEQ            reduce using rule 118 (varYVals -> vecVal .)
    DISTINTO        reduce using rule 118 (varYVals -> vecVal .)
    AND             reduce using rule 118 (varYVals -> vecVal .)
    OR              reduce using rule 118 (varYVals -> vecVal .)
    ?               reduce using rule 118 (varYVals -> vecVal .)
    ,               reduce using rule 118 (varYVals -> vecVal .)
    ]               reduce using rule 118 (varYVals -> vecVal .)
    )               reduce using rule 118 (varYVals -> vecVal .)
    ;               reduce using rule 118 (varYVals -> vecVal .)
    :               reduce using rule 118 (varYVals -> vecVal .)
    }               reduce using rule 118 (varYVals -> vecVal .)
    +               reduce using rule 118 (varYVals -> vecVal .)
    -               reduce using rule 118 (varYVals -> vecVal .)
    *               reduce using rule 118 (varYVals -> vecVal .)
    /               reduce using rule 118 (varYVals -> vecVal .)
    %               reduce using rule 118 (varYVals -> vecVal .)
    ^               reduce using rule 118 (varYVals -> vecVal .)
    MULEQ           reduce using rule 118 (varYVals -> vecVal .)
    DIVEQ           reduce using rule 118 (varYVals -> vecVal .)
    MASEQ           reduce using rule 118 (varYVals -> vecVal .)
    MENOSEQ         reduce using rule 118 (varYVals -> vecVal .)
    =               reduce using rule 118 (varYVals -> vecVal .)
    .               shift and go to state 44


state 9

    (2) g -> COMMENT . g
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (55) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (132) varAsig -> . varYVals MULEQ valoresAsig
    (133) varAsig -> . varYVals DIVEQ valoresAsig
    (134) varAsig -> . varYVals MASEQ valoresAsig
    (135) varAsig -> . varYVals MENOSEQ valoresAsig
    (136) varAsig -> . varYVals = valoresAsig
    (137) varAsig -> . ID . ID = valoresAsig
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    $end            reduce using rule 55 (empty -> .)
    }               reduce using rule 55 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 13
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 45
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 29
    lAbierta                       shift and go to state 30
    loop                           shift and go to state 32
    varYVals                       shift and go to state 11
    linea                          shift and go to state 34

state 10

    (11) lCerrada -> sentencia .

    WHILE           reduce using rule 11 (lCerrada -> sentencia .)
    COMMENT         reduce using rule 11 (lCerrada -> sentencia .)
    IF              reduce using rule 11 (lCerrada -> sentencia .)
    DO              reduce using rule 11 (lCerrada -> sentencia .)
    FOR             reduce using rule 11 (lCerrada -> sentencia .)
    RETURN          reduce using rule 11 (lCerrada -> sentencia .)
    ;               reduce using rule 11 (lCerrada -> sentencia .)
    MENOSMENOS      reduce using rule 11 (lCerrada -> sentencia .)
    MASMAS          reduce using rule 11 (lCerrada -> sentencia .)
    ID              reduce using rule 11 (lCerrada -> sentencia .)
    PRINT           reduce using rule 11 (lCerrada -> sentencia .)
    MULTIESCALAR    reduce using rule 11 (lCerrada -> sentencia .)
    LENGTH          reduce using rule 11 (lCerrada -> sentencia .)
    CAPITALIZAR     reduce using rule 11 (lCerrada -> sentencia .)
    COLINEALES      reduce using rule 11 (lCerrada -> sentencia .)
    [               reduce using rule 11 (lCerrada -> sentencia .)
    $end            reduce using rule 11 (lCerrada -> sentencia .)
    }               reduce using rule 11 (lCerrada -> sentencia .)
    ELSE            reduce using rule 11 (lCerrada -> sentencia .)


state 11

    (129) varsOps -> varYVals . MASMAS
    (130) varsOps -> varYVals . MENOSMENOS
    (132) varAsig -> varYVals . MULEQ valoresAsig
    (133) varAsig -> varYVals . DIVEQ valoresAsig
    (134) varAsig -> varYVals . MASEQ valoresAsig
    (135) varAsig -> varYVals . MENOSEQ valoresAsig
    (136) varAsig -> varYVals . = valoresAsig

    MASMAS          shift and go to state 50
    MENOSMENOS      shift and go to state 47
    MULEQ           shift and go to state 51
    DIVEQ           shift and go to state 52
    MASEQ           shift and go to state 48
    MENOSEQ         shift and go to state 46
    =               shift and go to state 49


state 12

    (32) sentencia -> ; .

    ELSE            reduce using rule 32 (sentencia -> ; .)
    COMMENT         reduce using rule 32 (sentencia -> ; .)
    IF              reduce using rule 32 (sentencia -> ; .)
    DO              reduce using rule 32 (sentencia -> ; .)
    WHILE           reduce using rule 32 (sentencia -> ; .)
    FOR             reduce using rule 32 (sentencia -> ; .)
    RETURN          reduce using rule 32 (sentencia -> ; .)
    ;               reduce using rule 32 (sentencia -> ; .)
    MENOSMENOS      reduce using rule 32 (sentencia -> ; .)
    MASMAS          reduce using rule 32 (sentencia -> ; .)
    ID              reduce using rule 32 (sentencia -> ; .)
    PRINT           reduce using rule 32 (sentencia -> ; .)
    MULTIESCALAR    reduce using rule 32 (sentencia -> ; .)
    LENGTH          reduce using rule 32 (sentencia -> ; .)
    CAPITALIZAR     reduce using rule 32 (sentencia -> ; .)
    COLINEALES      reduce using rule 32 (sentencia -> ; .)
    [               reduce using rule 32 (sentencia -> ; .)
    $end            reduce using rule 32 (sentencia -> ; .)
    }               reduce using rule 32 (sentencia -> ; .)


state 13

    (3) g -> empty .

    }               reduce using rule 3 (g -> empty .)
    $end            reduce using rule 3 (g -> empty .)


state 14

    (28) sentencia -> varsOps . ;

    ;               shift and go to state 53


state 15

    (44) func -> funcVoid .

    ;               reduce using rule 44 (func -> funcVoid .)
    )               reduce using rule 44 (func -> funcVoid .)


state 16

    (127) varsOps -> MENOSMENOS . varYVals
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (56) vec -> . [ elem ]

    ID              shift and go to state 55
    [               shift and go to state 20

    varYVals                       shift and go to state 54
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33

state 17

    (34) loop -> FOR . ( primParam ; valores ; tercerParam )

    (               shift and go to state 56


state 18

    (49) funcInt -> LENGTH . ( valores )

    (               shift and go to state 57


state 19

    (29) sentencia -> func . ;

    ;               shift and go to state 58


state 20

    (56) vec -> [ . elem ]
    (57) elem -> . valores , elem
    (58) elem -> . valores
    (59) valores -> . eMat
    (60) valores -> . expBool
    (61) valores -> . funcReturn
    (62) valores -> . reg
    (63) valores -> . INT
    (64) valores -> . FLOAT
    (65) valores -> . STRING
    (66) valores -> . BOOL
    (67) valores -> . varYVals
    (68) valores -> . varsOps
    (69) valores -> . vec
    (70) valores -> . ternario
    (71) valores -> . atributos
    (72) valores -> . RES
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (124) reg -> . { campos }
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (56) vec -> . [ elem ]
    (78) ternario -> . ternarioMat
    (79) ternario -> . ternarioBool
    (80) ternario -> . ( ternarioMat )
    (81) ternario -> . ( ternarioBool )
    (82) ternario -> . ternarioVars
    (83) ternario -> . ( ternarioVars )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 87
    FLOAT           shift and go to state 89
    STRING          shift and go to state 70
    BOOL            shift and go to state 92
    RES             shift and go to state 62
    {               shift and go to state 96
    ID              shift and go to state 85
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 72
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    ?               reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    ternario                       shift and go to state 60
    funcBool                       shift and go to state 61
    funcInt                        shift and go to state 63
    valores                        shift and go to state 64
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 69
    eMat                           shift and go to state 71
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 75
    vec                            shift and go to state 76
    paren                          shift and go to state 83
    reg                            shift and go to state 77
    expBool                        shift and go to state 78
    ternarioBool                   shift and go to state 79
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 86
    funcReturn                     shift and go to state 88
    elem                           shift and go to state 90
    p                              shift and go to state 91
    varsOps                        shift and go to state 93
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 66
    varYVals                       shift and go to state 98
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 99

state 21

    (137) varAsig -> ID . . ID = valoresAsig
    (117) varYVals -> ID .
    (120) vecVal -> ID . m
    (122) m -> . [ valores ]
    (123) m -> . [ valores ] m

    .               shift and go to state 101
    MASMAS          reduce using rule 117 (varYVals -> ID .)
    MENOSMENOS      reduce using rule 117 (varYVals -> ID .)
    MULEQ           reduce using rule 117 (varYVals -> ID .)
    DIVEQ           reduce using rule 117 (varYVals -> ID .)
    MASEQ           reduce using rule 117 (varYVals -> ID .)
    MENOSEQ         reduce using rule 117 (varYVals -> ID .)
    =               reduce using rule 117 (varYVals -> ID .)
    [               shift and go to state 102

    m                              shift and go to state 100

state 22

    (6) lAbierta -> IF . ( cosaBooleana ) linea
    (7) lAbierta -> IF . ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> IF . ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> IF . ( cosaBooleana ) { g }
    (14) lCerrada -> IF . ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF . ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada

    (               shift and go to state 103


state 23

    (30) sentencia -> varAsig . ;

    ;               shift and go to state 104


state 24

    (0) S' -> g .



state 25

    (46) funcReturn -> funcString .

    ;               reduce using rule 46 (funcReturn -> funcString .)
    )               reduce using rule 46 (funcReturn -> funcString .)


state 26

    (48) funcInt -> MULTIESCALAR . ( valores , valores param )

    (               shift and go to state 105


state 27

    (43) func -> funcReturn .

    ;               reduce using rule 43 (func -> funcReturn .)
    )               reduce using rule 43 (func -> funcReturn .)


state 28

    (50) funcString -> CAPITALIZAR . ( valores )

    (               shift and go to state 106


state 29

    (5) linea -> lCerrada .

    COMMENT         reduce using rule 5 (linea -> lCerrada .)
    IF              reduce using rule 5 (linea -> lCerrada .)
    DO              reduce using rule 5 (linea -> lCerrada .)
    WHILE           reduce using rule 5 (linea -> lCerrada .)
    FOR             reduce using rule 5 (linea -> lCerrada .)
    RETURN          reduce using rule 5 (linea -> lCerrada .)
    ;               reduce using rule 5 (linea -> lCerrada .)
    MENOSMENOS      reduce using rule 5 (linea -> lCerrada .)
    MASMAS          reduce using rule 5 (linea -> lCerrada .)
    ID              reduce using rule 5 (linea -> lCerrada .)
    PRINT           reduce using rule 5 (linea -> lCerrada .)
    MULTIESCALAR    reduce using rule 5 (linea -> lCerrada .)
    LENGTH          reduce using rule 5 (linea -> lCerrada .)
    CAPITALIZAR     reduce using rule 5 (linea -> lCerrada .)
    COLINEALES      reduce using rule 5 (linea -> lCerrada .)
    [               reduce using rule 5 (linea -> lCerrada .)
    }               reduce using rule 5 (linea -> lCerrada .)
    $end            reduce using rule 5 (linea -> lCerrada .)


state 30

    (4) linea -> lAbierta .

    COMMENT         reduce using rule 4 (linea -> lAbierta .)
    IF              reduce using rule 4 (linea -> lAbierta .)
    DO              reduce using rule 4 (linea -> lAbierta .)
    WHILE           reduce using rule 4 (linea -> lAbierta .)
    FOR             reduce using rule 4 (linea -> lAbierta .)
    RETURN          reduce using rule 4 (linea -> lAbierta .)
    ;               reduce using rule 4 (linea -> lAbierta .)
    MENOSMENOS      reduce using rule 4 (linea -> lAbierta .)
    MASMAS          reduce using rule 4 (linea -> lAbierta .)
    ID              reduce using rule 4 (linea -> lAbierta .)
    PRINT           reduce using rule 4 (linea -> lAbierta .)
    MULTIESCALAR    reduce using rule 4 (linea -> lAbierta .)
    LENGTH          reduce using rule 4 (linea -> lAbierta .)
    CAPITALIZAR     reduce using rule 4 (linea -> lAbierta .)
    COLINEALES      reduce using rule 4 (linea -> lAbierta .)
    [               reduce using rule 4 (linea -> lAbierta .)
    }               reduce using rule 4 (linea -> lAbierta .)
    $end            reduce using rule 4 (linea -> lAbierta .)


state 31

    (128) varsOps -> MASMAS . varYVals
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (56) vec -> . [ elem ]

    ID              shift and go to state 55
    [               shift and go to state 20

    varYVals                       shift and go to state 107
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33

state 32

    (10) lAbierta -> loop . lAbierta
    (22) lCerrada -> loop . { g }
    (23) lCerrada -> loop . lCerrada
    (24) lCerrada -> loop . COMMENT com lCerrada
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (132) varAsig -> . varYVals MULEQ valoresAsig
    (133) varAsig -> . varYVals DIVEQ valoresAsig
    (134) varAsig -> . varYVals MASEQ valoresAsig
    (135) varAsig -> . varYVals MENOSEQ valoresAsig
    (136) varAsig -> . varYVals = valoresAsig
    (137) varAsig -> . ID . ID = valoresAsig
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 111
    COMMENT         shift and go to state 108
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    loop                           shift and go to state 32
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 109
    lAbierta                       shift and go to state 110
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11

state 33

    (121) vecVal -> vec . m
    (122) m -> . [ valores ]
    (123) m -> . [ valores ] m

    [               shift and go to state 102

    m                              shift and go to state 112

state 34

    (1) g -> linea . g
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (55) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (132) varAsig -> . varYVals MULEQ valoresAsig
    (133) varAsig -> . varYVals DIVEQ valoresAsig
    (134) varAsig -> . varYVals MASEQ valoresAsig
    (135) varAsig -> . varYVals MENOSEQ valoresAsig
    (136) varAsig -> . varYVals = valoresAsig
    (137) varAsig -> . ID . ID = valoresAsig
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    $end            reduce using rule 55 (empty -> .)
    }               reduce using rule 55 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 13
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 113
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 29
    lAbierta                       shift and go to state 30
    loop                           shift and go to state 32
    varYVals                       shift and go to state 11
    linea                          shift and go to state 34

state 35

    (27) lCerrada -> DO COMMENT . com lCerrada WHILE ( valores ) ;
    (12) com -> . COMMENT com
    (13) com -> . empty
    (55) empty -> .

    COMMENT         shift and go to state 114
    IF              reduce using rule 55 (empty -> .)
    DO              reduce using rule 55 (empty -> .)
    RETURN          reduce using rule 55 (empty -> .)
    ;               reduce using rule 55 (empty -> .)
    WHILE           reduce using rule 55 (empty -> .)
    FOR             reduce using rule 55 (empty -> .)
    MENOSMENOS      reduce using rule 55 (empty -> .)
    MASMAS          reduce using rule 55 (empty -> .)
    ID              reduce using rule 55 (empty -> .)
    PRINT           reduce using rule 55 (empty -> .)
    MULTIESCALAR    reduce using rule 55 (empty -> .)
    LENGTH          reduce using rule 55 (empty -> .)
    CAPITALIZAR     reduce using rule 55 (empty -> .)
    COLINEALES      reduce using rule 55 (empty -> .)
    [               reduce using rule 55 (empty -> .)

    com                            shift and go to state 115
    empty                          shift and go to state 116

state 36

    (14) lCerrada -> IF . ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF . ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada

    (               shift and go to state 117


state 37

    (26) lCerrada -> DO lCerrada . WHILE ( valores ) ;

    WHILE           shift and go to state 118


state 38

    (25) lCerrada -> DO { . g } WHILE ( valores ) ;
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (55) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (132) varAsig -> . varYVals MULEQ valoresAsig
    (133) varAsig -> . varYVals DIVEQ valoresAsig
    (134) varAsig -> . varYVals MASEQ valoresAsig
    (135) varAsig -> . varYVals MENOSEQ valoresAsig
    (136) varAsig -> . varYVals = valoresAsig
    (137) varAsig -> . ID . ID = valoresAsig
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 55 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    linea                          shift and go to state 34
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 13
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 119
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 29
    lAbierta                       shift and go to state 30
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 32

state 39

    (22) lCerrada -> loop . { g }
    (23) lCerrada -> loop . lCerrada
    (24) lCerrada -> loop . COMMENT com lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (132) varAsig -> . varYVals MULEQ valoresAsig
    (133) varAsig -> . varYVals DIVEQ valoresAsig
    (134) varAsig -> . varYVals MASEQ valoresAsig
    (135) varAsig -> . varYVals MENOSEQ valoresAsig
    (136) varAsig -> . varYVals = valoresAsig
    (137) varAsig -> . ID . ID = valoresAsig
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 111
    COMMENT         shift and go to state 108
    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 109
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 39

state 40

    (31) sentencia -> RETURN ; .

    ELSE            reduce using rule 31 (sentencia -> RETURN ; .)
    COMMENT         reduce using rule 31 (sentencia -> RETURN ; .)
    IF              reduce using rule 31 (sentencia -> RETURN ; .)
    DO              reduce using rule 31 (sentencia -> RETURN ; .)
    WHILE           reduce using rule 31 (sentencia -> RETURN ; .)
    FOR             reduce using rule 31 (sentencia -> RETURN ; .)
    RETURN          reduce using rule 31 (sentencia -> RETURN ; .)
    ;               reduce using rule 31 (sentencia -> RETURN ; .)
    MENOSMENOS      reduce using rule 31 (sentencia -> RETURN ; .)
    MASMAS          reduce using rule 31 (sentencia -> RETURN ; .)
    ID              reduce using rule 31 (sentencia -> RETURN ; .)
    PRINT           reduce using rule 31 (sentencia -> RETURN ; .)
    MULTIESCALAR    reduce using rule 31 (sentencia -> RETURN ; .)
    LENGTH          reduce using rule 31 (sentencia -> RETURN ; .)
    CAPITALIZAR     reduce using rule 31 (sentencia -> RETURN ; .)
    COLINEALES      reduce using rule 31 (sentencia -> RETURN ; .)
    [               reduce using rule 31 (sentencia -> RETURN ; .)
    $end            reduce using rule 31 (sentencia -> RETURN ; .)
    }               reduce using rule 31 (sentencia -> RETURN ; .)


state 41

    (51) funcBool -> COLINEALES ( . valores , valores )
    (59) valores -> . eMat
    (60) valores -> . expBool
    (61) valores -> . funcReturn
    (62) valores -> . reg
    (63) valores -> . INT
    (64) valores -> . FLOAT
    (65) valores -> . STRING
    (66) valores -> . BOOL
    (67) valores -> . varYVals
    (68) valores -> . varsOps
    (69) valores -> . vec
    (70) valores -> . ternario
    (71) valores -> . atributos
    (72) valores -> . RES
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (124) reg -> . { campos }
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (56) vec -> . [ elem ]
    (78) ternario -> . ternarioMat
    (79) ternario -> . ternarioBool
    (80) ternario -> . ( ternarioMat )
    (81) ternario -> . ( ternarioBool )
    (82) ternario -> . ternarioVars
    (83) ternario -> . ( ternarioVars )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 87
    FLOAT           shift and go to state 89
    STRING          shift and go to state 70
    BOOL            shift and go to state 92
    RES             shift and go to state 62
    {               shift and go to state 96
    ID              shift and go to state 85
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 72
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    ?               reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    ternario                       shift and go to state 60
    funcBool                       shift and go to state 61
    funcInt                        shift and go to state 63
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 69
    eMat                           shift and go to state 71
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 75
    vec                            shift and go to state 76
    paren                          shift and go to state 83
    reg                            shift and go to state 77
    expBool                        shift and go to state 78
    ternarioBool                   shift and go to state 79
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 86
    funcReturn                     shift and go to state 88
    valores                        shift and go to state 120
    p                              shift and go to state 91
    varsOps                        shift and go to state 93
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 66
    varYVals                       shift and go to state 98
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 99

state 42

    (33) loop -> WHILE ( . valores )
    (59) valores -> . eMat
    (60) valores -> . expBool
    (61) valores -> . funcReturn
    (62) valores -> . reg
    (63) valores -> . INT
    (64) valores -> . FLOAT
    (65) valores -> . STRING
    (66) valores -> . BOOL
    (67) valores -> . varYVals
    (68) valores -> . varsOps
    (69) valores -> . vec
    (70) valores -> . ternario
    (71) valores -> . atributos
    (72) valores -> . RES
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (124) reg -> . { campos }
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (56) vec -> . [ elem ]
    (78) ternario -> . ternarioMat
    (79) ternario -> . ternarioBool
    (80) ternario -> . ( ternarioMat )
    (81) ternario -> . ( ternarioBool )
    (82) ternario -> . ternarioVars
    (83) ternario -> . ( ternarioVars )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 87
    FLOAT           shift and go to state 89
    STRING          shift and go to state 70
    BOOL            shift and go to state 92
    RES             shift and go to state 62
    {               shift and go to state 96
    ID              shift and go to state 85
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 72
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    ?               reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    ternario                       shift and go to state 60
    funcBool                       shift and go to state 61
    funcInt                        shift and go to state 63
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 69
    eMat                           shift and go to state 71
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 75
    vec                            shift and go to state 76
    paren                          shift and go to state 83
    reg                            shift and go to state 77
    expBool                        shift and go to state 78
    ternarioBool                   shift and go to state 79
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 86
    funcReturn                     shift and go to state 88
    valores                        shift and go to state 121
    p                              shift and go to state 91
    varsOps                        shift and go to state 93
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 66
    varYVals                       shift and go to state 98
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 99

state 43

    (52) funcVoid -> PRINT ( . valores )
    (59) valores -> . eMat
    (60) valores -> . expBool
    (61) valores -> . funcReturn
    (62) valores -> . reg
    (63) valores -> . INT
    (64) valores -> . FLOAT
    (65) valores -> . STRING
    (66) valores -> . BOOL
    (67) valores -> . varYVals
    (68) valores -> . varsOps
    (69) valores -> . vec
    (70) valores -> . ternario
    (71) valores -> . atributos
    (72) valores -> . RES
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (124) reg -> . { campos }
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (56) vec -> . [ elem ]
    (78) ternario -> . ternarioMat
    (79) ternario -> . ternarioBool
    (80) ternario -> . ( ternarioMat )
    (81) ternario -> . ( ternarioBool )
    (82) ternario -> . ternarioVars
    (83) ternario -> . ( ternarioVars )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 87
    FLOAT           shift and go to state 89
    STRING          shift and go to state 70
    BOOL            shift and go to state 92
    RES             shift and go to state 62
    {               shift and go to state 96
    ID              shift and go to state 85
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 72
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    ?               reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    ternario                       shift and go to state 60
    funcBool                       shift and go to state 61
    funcInt                        shift and go to state 63
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 69
    eMat                           shift and go to state 71
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 75
    vec                            shift and go to state 76
    paren                          shift and go to state 83
    reg                            shift and go to state 77
    expBool                        shift and go to state 78
    ternarioBool                   shift and go to state 79
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 86
    funcReturn                     shift and go to state 88
    valores                        shift and go to state 122
    p                              shift and go to state 91
    varsOps                        shift and go to state 93
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 66
    varYVals                       shift and go to state 98
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 99

state 44

    (119) varYVals -> vecVal . . varYVals
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (56) vec -> . [ elem ]

    ID              shift and go to state 55
    [               shift and go to state 20

    varYVals                       shift and go to state 123
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33

state 45

    (2) g -> COMMENT g .

    }               reduce using rule 2 (g -> COMMENT g .)
    $end            reduce using rule 2 (g -> COMMENT g .)


state 46

    (135) varAsig -> varYVals MENOSEQ . valoresAsig
    (131) valoresAsig -> . valores
    (59) valores -> . eMat
    (60) valores -> . expBool
    (61) valores -> . funcReturn
    (62) valores -> . reg
    (63) valores -> . INT
    (64) valores -> . FLOAT
    (65) valores -> . STRING
    (66) valores -> . BOOL
    (67) valores -> . varYVals
    (68) valores -> . varsOps
    (69) valores -> . vec
    (70) valores -> . ternario
    (71) valores -> . atributos
    (72) valores -> . RES
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (124) reg -> . { campos }
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (56) vec -> . [ elem ]
    (78) ternario -> . ternarioMat
    (79) ternario -> . ternarioBool
    (80) ternario -> . ( ternarioMat )
    (81) ternario -> . ( ternarioBool )
    (82) ternario -> . ternarioVars
    (83) ternario -> . ( ternarioVars )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 87
    FLOAT           shift and go to state 89
    STRING          shift and go to state 70
    BOOL            shift and go to state 92
    RES             shift and go to state 62
    {               shift and go to state 96
    ID              shift and go to state 85
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 72
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    ?               reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    ternario                       shift and go to state 60
    funcBool                       shift and go to state 61
    funcInt                        shift and go to state 63
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 69
    eMat                           shift and go to state 71
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 75
    vec                            shift and go to state 76
    paren                          shift and go to state 83
    reg                            shift and go to state 77
    expBool                        shift and go to state 78
    ternarioBool                   shift and go to state 79
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    valoresAsig                    shift and go to state 124
    funcString                     shift and go to state 86
    funcReturn                     shift and go to state 88
    valores                        shift and go to state 125
    p                              shift and go to state 91
    varsOps                        shift and go to state 93
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 66
    varYVals                       shift and go to state 98
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 99

state 47

    (130) varsOps -> varYVals MENOSMENOS .

    ;               reduce using rule 130 (varsOps -> varYVals MENOSMENOS .)
    :               reduce using rule 130 (varsOps -> varYVals MENOSMENOS .)
    ?               reduce using rule 130 (varsOps -> varYVals MENOSMENOS .)
    OR              reduce using rule 130 (varsOps -> varYVals MENOSMENOS .)
    AND             reduce using rule 130 (varsOps -> varYVals MENOSMENOS .)
    +               reduce using rule 130 (varsOps -> varYVals MENOSMENOS .)
    -               reduce using rule 130 (varsOps -> varYVals MENOSMENOS .)
    *               reduce using rule 130 (varsOps -> varYVals MENOSMENOS .)
    /               reduce using rule 130 (varsOps -> varYVals MENOSMENOS .)
    %               reduce using rule 130 (varsOps -> varYVals MENOSMENOS .)
    ^               reduce using rule 130 (varsOps -> varYVals MENOSMENOS .)
    EQEQ            reduce using rule 130 (varsOps -> varYVals MENOSMENOS .)
    DISTINTO        reduce using rule 130 (varsOps -> varYVals MENOSMENOS .)
    >               reduce using rule 130 (varsOps -> varYVals MENOSMENOS .)
    <               reduce using rule 130 (varsOps -> varYVals MENOSMENOS .)
    ,               reduce using rule 130 (varsOps -> varYVals MENOSMENOS .)
    ]               reduce using rule 130 (varsOps -> varYVals MENOSMENOS .)
    )               reduce using rule 130 (varsOps -> varYVals MENOSMENOS .)
    }               reduce using rule 130 (varsOps -> varYVals MENOSMENOS .)


state 48

    (134) varAsig -> varYVals MASEQ . valoresAsig
    (131) valoresAsig -> . valores
    (59) valores -> . eMat
    (60) valores -> . expBool
    (61) valores -> . funcReturn
    (62) valores -> . reg
    (63) valores -> . INT
    (64) valores -> . FLOAT
    (65) valores -> . STRING
    (66) valores -> . BOOL
    (67) valores -> . varYVals
    (68) valores -> . varsOps
    (69) valores -> . vec
    (70) valores -> . ternario
    (71) valores -> . atributos
    (72) valores -> . RES
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (124) reg -> . { campos }
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (56) vec -> . [ elem ]
    (78) ternario -> . ternarioMat
    (79) ternario -> . ternarioBool
    (80) ternario -> . ( ternarioMat )
    (81) ternario -> . ( ternarioBool )
    (82) ternario -> . ternarioVars
    (83) ternario -> . ( ternarioVars )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 87
    FLOAT           shift and go to state 89
    STRING          shift and go to state 70
    BOOL            shift and go to state 92
    RES             shift and go to state 62
    {               shift and go to state 96
    ID              shift and go to state 85
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 72
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    ?               reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    ternario                       shift and go to state 60
    funcBool                       shift and go to state 61
    funcInt                        shift and go to state 63
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 69
    eMat                           shift and go to state 71
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 75
    vec                            shift and go to state 76
    paren                          shift and go to state 83
    reg                            shift and go to state 77
    expBool                        shift and go to state 78
    ternarioBool                   shift and go to state 79
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    valoresAsig                    shift and go to state 126
    funcString                     shift and go to state 86
    funcReturn                     shift and go to state 88
    valores                        shift and go to state 125
    p                              shift and go to state 91
    varsOps                        shift and go to state 93
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 66
    varYVals                       shift and go to state 98
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 99

state 49

    (136) varAsig -> varYVals = . valoresAsig
    (131) valoresAsig -> . valores
    (59) valores -> . eMat
    (60) valores -> . expBool
    (61) valores -> . funcReturn
    (62) valores -> . reg
    (63) valores -> . INT
    (64) valores -> . FLOAT
    (65) valores -> . STRING
    (66) valores -> . BOOL
    (67) valores -> . varYVals
    (68) valores -> . varsOps
    (69) valores -> . vec
    (70) valores -> . ternario
    (71) valores -> . atributos
    (72) valores -> . RES
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (124) reg -> . { campos }
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (56) vec -> . [ elem ]
    (78) ternario -> . ternarioMat
    (79) ternario -> . ternarioBool
    (80) ternario -> . ( ternarioMat )
    (81) ternario -> . ( ternarioBool )
    (82) ternario -> . ternarioVars
    (83) ternario -> . ( ternarioVars )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 87
    FLOAT           shift and go to state 89
    STRING          shift and go to state 70
    BOOL            shift and go to state 92
    RES             shift and go to state 62
    {               shift and go to state 96
    ID              shift and go to state 85
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 72
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    ?               reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    ternario                       shift and go to state 60
    funcBool                       shift and go to state 61
    funcInt                        shift and go to state 63
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 69
    eMat                           shift and go to state 71
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 75
    vec                            shift and go to state 76
    paren                          shift and go to state 83
    reg                            shift and go to state 77
    expBool                        shift and go to state 78
    ternarioBool                   shift and go to state 79
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    valoresAsig                    shift and go to state 127
    funcString                     shift and go to state 86
    funcReturn                     shift and go to state 88
    valores                        shift and go to state 125
    p                              shift and go to state 91
    varsOps                        shift and go to state 93
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 66
    varYVals                       shift and go to state 98
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 99

state 50

    (129) varsOps -> varYVals MASMAS .

    ;               reduce using rule 129 (varsOps -> varYVals MASMAS .)
    :               reduce using rule 129 (varsOps -> varYVals MASMAS .)
    ?               reduce using rule 129 (varsOps -> varYVals MASMAS .)
    OR              reduce using rule 129 (varsOps -> varYVals MASMAS .)
    AND             reduce using rule 129 (varsOps -> varYVals MASMAS .)
    +               reduce using rule 129 (varsOps -> varYVals MASMAS .)
    -               reduce using rule 129 (varsOps -> varYVals MASMAS .)
    *               reduce using rule 129 (varsOps -> varYVals MASMAS .)
    /               reduce using rule 129 (varsOps -> varYVals MASMAS .)
    %               reduce using rule 129 (varsOps -> varYVals MASMAS .)
    ^               reduce using rule 129 (varsOps -> varYVals MASMAS .)
    EQEQ            reduce using rule 129 (varsOps -> varYVals MASMAS .)
    DISTINTO        reduce using rule 129 (varsOps -> varYVals MASMAS .)
    >               reduce using rule 129 (varsOps -> varYVals MASMAS .)
    <               reduce using rule 129 (varsOps -> varYVals MASMAS .)
    ,               reduce using rule 129 (varsOps -> varYVals MASMAS .)
    ]               reduce using rule 129 (varsOps -> varYVals MASMAS .)
    )               reduce using rule 129 (varsOps -> varYVals MASMAS .)
    }               reduce using rule 129 (varsOps -> varYVals MASMAS .)


state 51

    (132) varAsig -> varYVals MULEQ . valoresAsig
    (131) valoresAsig -> . valores
    (59) valores -> . eMat
    (60) valores -> . expBool
    (61) valores -> . funcReturn
    (62) valores -> . reg
    (63) valores -> . INT
    (64) valores -> . FLOAT
    (65) valores -> . STRING
    (66) valores -> . BOOL
    (67) valores -> . varYVals
    (68) valores -> . varsOps
    (69) valores -> . vec
    (70) valores -> . ternario
    (71) valores -> . atributos
    (72) valores -> . RES
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (124) reg -> . { campos }
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (56) vec -> . [ elem ]
    (78) ternario -> . ternarioMat
    (79) ternario -> . ternarioBool
    (80) ternario -> . ( ternarioMat )
    (81) ternario -> . ( ternarioBool )
    (82) ternario -> . ternarioVars
    (83) ternario -> . ( ternarioVars )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 87
    FLOAT           shift and go to state 89
    STRING          shift and go to state 70
    BOOL            shift and go to state 92
    RES             shift and go to state 62
    {               shift and go to state 96
    ID              shift and go to state 85
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 72
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    ?               reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    ternario                       shift and go to state 60
    funcBool                       shift and go to state 61
    funcInt                        shift and go to state 63
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 69
    eMat                           shift and go to state 71
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 75
    vec                            shift and go to state 76
    paren                          shift and go to state 83
    reg                            shift and go to state 77
    expBool                        shift and go to state 78
    ternarioBool                   shift and go to state 79
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    valoresAsig                    shift and go to state 128
    funcString                     shift and go to state 86
    funcReturn                     shift and go to state 88
    valores                        shift and go to state 125
    p                              shift and go to state 91
    varsOps                        shift and go to state 93
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 66
    varYVals                       shift and go to state 98
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 99

state 52

    (133) varAsig -> varYVals DIVEQ . valoresAsig
    (131) valoresAsig -> . valores
    (59) valores -> . eMat
    (60) valores -> . expBool
    (61) valores -> . funcReturn
    (62) valores -> . reg
    (63) valores -> . INT
    (64) valores -> . FLOAT
    (65) valores -> . STRING
    (66) valores -> . BOOL
    (67) valores -> . varYVals
    (68) valores -> . varsOps
    (69) valores -> . vec
    (70) valores -> . ternario
    (71) valores -> . atributos
    (72) valores -> . RES
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (124) reg -> . { campos }
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (56) vec -> . [ elem ]
    (78) ternario -> . ternarioMat
    (79) ternario -> . ternarioBool
    (80) ternario -> . ( ternarioMat )
    (81) ternario -> . ( ternarioBool )
    (82) ternario -> . ternarioVars
    (83) ternario -> . ( ternarioVars )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 87
    FLOAT           shift and go to state 89
    STRING          shift and go to state 70
    BOOL            shift and go to state 92
    RES             shift and go to state 62
    {               shift and go to state 96
    ID              shift and go to state 85
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 72
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    ?               reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    ternario                       shift and go to state 60
    funcBool                       shift and go to state 61
    funcInt                        shift and go to state 63
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 69
    eMat                           shift and go to state 71
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 75
    vec                            shift and go to state 76
    paren                          shift and go to state 83
    reg                            shift and go to state 77
    expBool                        shift and go to state 78
    ternarioBool                   shift and go to state 79
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    valoresAsig                    shift and go to state 129
    funcString                     shift and go to state 86
    funcReturn                     shift and go to state 88
    valores                        shift and go to state 125
    p                              shift and go to state 91
    varsOps                        shift and go to state 93
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 66
    varYVals                       shift and go to state 98
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 99

state 53

    (28) sentencia -> varsOps ; .

    ELSE            reduce using rule 28 (sentencia -> varsOps ; .)
    COMMENT         reduce using rule 28 (sentencia -> varsOps ; .)
    IF              reduce using rule 28 (sentencia -> varsOps ; .)
    DO              reduce using rule 28 (sentencia -> varsOps ; .)
    WHILE           reduce using rule 28 (sentencia -> varsOps ; .)
    FOR             reduce using rule 28 (sentencia -> varsOps ; .)
    RETURN          reduce using rule 28 (sentencia -> varsOps ; .)
    ;               reduce using rule 28 (sentencia -> varsOps ; .)
    MENOSMENOS      reduce using rule 28 (sentencia -> varsOps ; .)
    MASMAS          reduce using rule 28 (sentencia -> varsOps ; .)
    ID              reduce using rule 28 (sentencia -> varsOps ; .)
    PRINT           reduce using rule 28 (sentencia -> varsOps ; .)
    MULTIESCALAR    reduce using rule 28 (sentencia -> varsOps ; .)
    LENGTH          reduce using rule 28 (sentencia -> varsOps ; .)
    CAPITALIZAR     reduce using rule 28 (sentencia -> varsOps ; .)
    COLINEALES      reduce using rule 28 (sentencia -> varsOps ; .)
    [               reduce using rule 28 (sentencia -> varsOps ; .)
    $end            reduce using rule 28 (sentencia -> varsOps ; .)
    }               reduce using rule 28 (sentencia -> varsOps ; .)


state 54

    (127) varsOps -> MENOSMENOS varYVals .

    ;               reduce using rule 127 (varsOps -> MENOSMENOS varYVals .)
    :               reduce using rule 127 (varsOps -> MENOSMENOS varYVals .)
    ?               reduce using rule 127 (varsOps -> MENOSMENOS varYVals .)
    OR              reduce using rule 127 (varsOps -> MENOSMENOS varYVals .)
    AND             reduce using rule 127 (varsOps -> MENOSMENOS varYVals .)
    +               reduce using rule 127 (varsOps -> MENOSMENOS varYVals .)
    -               reduce using rule 127 (varsOps -> MENOSMENOS varYVals .)
    *               reduce using rule 127 (varsOps -> MENOSMENOS varYVals .)
    /               reduce using rule 127 (varsOps -> MENOSMENOS varYVals .)
    %               reduce using rule 127 (varsOps -> MENOSMENOS varYVals .)
    ^               reduce using rule 127 (varsOps -> MENOSMENOS varYVals .)
    EQEQ            reduce using rule 127 (varsOps -> MENOSMENOS varYVals .)
    DISTINTO        reduce using rule 127 (varsOps -> MENOSMENOS varYVals .)
    >               reduce using rule 127 (varsOps -> MENOSMENOS varYVals .)
    <               reduce using rule 127 (varsOps -> MENOSMENOS varYVals .)
    ,               reduce using rule 127 (varsOps -> MENOSMENOS varYVals .)
    ]               reduce using rule 127 (varsOps -> MENOSMENOS varYVals .)
    )               reduce using rule 127 (varsOps -> MENOSMENOS varYVals .)
    }               reduce using rule 127 (varsOps -> MENOSMENOS varYVals .)


state 55

    (117) varYVals -> ID .
    (120) vecVal -> ID . m
    (122) m -> . [ valores ]
    (123) m -> . [ valores ] m

    ,               reduce using rule 117 (varYVals -> ID .)
    ]               reduce using rule 117 (varYVals -> ID .)
    +               reduce using rule 117 (varYVals -> ID .)
    -               reduce using rule 117 (varYVals -> ID .)
    *               reduce using rule 117 (varYVals -> ID .)
    /               reduce using rule 117 (varYVals -> ID .)
    %               reduce using rule 117 (varYVals -> ID .)
    ^               reduce using rule 117 (varYVals -> ID .)
    )               reduce using rule 117 (varYVals -> ID .)
    ;               reduce using rule 117 (varYVals -> ID .)
    EQEQ            reduce using rule 117 (varYVals -> ID .)
    DISTINTO        reduce using rule 117 (varYVals -> ID .)
    >               reduce using rule 117 (varYVals -> ID .)
    <               reduce using rule 117 (varYVals -> ID .)
    AND             reduce using rule 117 (varYVals -> ID .)
    OR              reduce using rule 117 (varYVals -> ID .)
    ?               reduce using rule 117 (varYVals -> ID .)
    :               reduce using rule 117 (varYVals -> ID .)
    }               reduce using rule 117 (varYVals -> ID .)
    MASMAS          reduce using rule 117 (varYVals -> ID .)
    MENOSMENOS      reduce using rule 117 (varYVals -> ID .)
    MULEQ           reduce using rule 117 (varYVals -> ID .)
    DIVEQ           reduce using rule 117 (varYVals -> ID .)
    MASEQ           reduce using rule 117 (varYVals -> ID .)
    MENOSEQ         reduce using rule 117 (varYVals -> ID .)
    =               reduce using rule 117 (varYVals -> ID .)
    [               shift and go to state 102

    m                              shift and go to state 100

state 56

    (34) loop -> FOR ( . primParam ; valores ; tercerParam )
    (37) primParam -> . varAsig
    (38) primParam -> . empty
    (132) varAsig -> . varYVals MULEQ valoresAsig
    (133) varAsig -> . varYVals DIVEQ valoresAsig
    (134) varAsig -> . varYVals MASEQ valoresAsig
    (135) varAsig -> . varYVals MENOSEQ valoresAsig
    (136) varAsig -> . varYVals = valoresAsig
    (137) varAsig -> . ID . ID = valoresAsig
    (55) empty -> .
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (56) vec -> . [ elem ]

    ID              shift and go to state 21
    ;               reduce using rule 55 (empty -> .)
    [               shift and go to state 20

    varAsig                        shift and go to state 131
    primParam                      shift and go to state 130
    vec                            shift and go to state 33
    varYVals                       shift and go to state 133
    vecVal                         shift and go to state 8
    empty                          shift and go to state 132

state 57

    (49) funcInt -> LENGTH ( . valores )
    (59) valores -> . eMat
    (60) valores -> . expBool
    (61) valores -> . funcReturn
    (62) valores -> . reg
    (63) valores -> . INT
    (64) valores -> . FLOAT
    (65) valores -> . STRING
    (66) valores -> . BOOL
    (67) valores -> . varYVals
    (68) valores -> . varsOps
    (69) valores -> . vec
    (70) valores -> . ternario
    (71) valores -> . atributos
    (72) valores -> . RES
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (124) reg -> . { campos }
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (56) vec -> . [ elem ]
    (78) ternario -> . ternarioMat
    (79) ternario -> . ternarioBool
    (80) ternario -> . ( ternarioMat )
    (81) ternario -> . ( ternarioBool )
    (82) ternario -> . ternarioVars
    (83) ternario -> . ( ternarioVars )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 87
    FLOAT           shift and go to state 89
    STRING          shift and go to state 70
    BOOL            shift and go to state 92
    RES             shift and go to state 62
    {               shift and go to state 96
    ID              shift and go to state 85
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 72
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    ?               reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    ternario                       shift and go to state 60
    funcBool                       shift and go to state 61
    funcInt                        shift and go to state 63
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 69
    eMat                           shift and go to state 71
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 75
    vec                            shift and go to state 76
    paren                          shift and go to state 83
    reg                            shift and go to state 77
    expBool                        shift and go to state 78
    ternarioBool                   shift and go to state 79
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 86
    funcReturn                     shift and go to state 88
    valores                        shift and go to state 134
    p                              shift and go to state 91
    varsOps                        shift and go to state 93
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 66
    varYVals                       shift and go to state 98
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 99

state 58

    (29) sentencia -> func ; .

    ELSE            reduce using rule 29 (sentencia -> func ; .)
    COMMENT         reduce using rule 29 (sentencia -> func ; .)
    IF              reduce using rule 29 (sentencia -> func ; .)
    DO              reduce using rule 29 (sentencia -> func ; .)
    WHILE           reduce using rule 29 (sentencia -> func ; .)
    FOR             reduce using rule 29 (sentencia -> func ; .)
    RETURN          reduce using rule 29 (sentencia -> func ; .)
    ;               reduce using rule 29 (sentencia -> func ; .)
    MENOSMENOS      reduce using rule 29 (sentencia -> func ; .)
    MASMAS          reduce using rule 29 (sentencia -> func ; .)
    ID              reduce using rule 29 (sentencia -> func ; .)
    PRINT           reduce using rule 29 (sentencia -> func ; .)
    MULTIESCALAR    reduce using rule 29 (sentencia -> func ; .)
    LENGTH          reduce using rule 29 (sentencia -> func ; .)
    CAPITALIZAR     reduce using rule 29 (sentencia -> func ; .)
    COLINEALES      reduce using rule 29 (sentencia -> func ; .)
    [               reduce using rule 29 (sentencia -> func ; .)
    $end            reduce using rule 29 (sentencia -> func ; .)
    }               reduce using rule 29 (sentencia -> func ; .)


state 59

    (191) expBool -> and .
    (192) and -> and . AND eq
    (194) and -> and . AND valoresBool

    ?               reduce using rule 191 (expBool -> and .)
    OR              reduce using rule 191 (expBool -> and .)
    )               reduce using rule 191 (expBool -> and .)
    :               reduce using rule 191 (expBool -> and .)
    ,               reduce using rule 191 (expBool -> and .)
    ]               reduce using rule 191 (expBool -> and .)
    ;               reduce using rule 191 (expBool -> and .)
    }               reduce using rule 191 (expBool -> and .)
    AND             shift and go to state 135


state 60

    (70) valores -> ternario .

    )               reduce using rule 70 (valores -> ternario .)
    ,               reduce using rule 70 (valores -> ternario .)
    ]               reduce using rule 70 (valores -> ternario .)
    ;               reduce using rule 70 (valores -> ternario .)
    }               reduce using rule 70 (valores -> ternario .)


state 61

    (47) funcReturn -> funcBool .
    (182) valoresBool -> funcBool .

    ,               reduce using rule 47 (funcReturn -> funcBool .)
    ]               reduce using rule 47 (funcReturn -> funcBool .)
    )               reduce using rule 47 (funcReturn -> funcBool .)
    ;               reduce using rule 47 (funcReturn -> funcBool .)
    }               reduce using rule 47 (funcReturn -> funcBool .)
    OR              reduce using rule 182 (valoresBool -> funcBool .)
    AND             reduce using rule 182 (valoresBool -> funcBool .)
    ?               reduce using rule 182 (valoresBool -> funcBool .)


state 62

    (72) valores -> RES .

    )               reduce using rule 72 (valores -> RES .)
    ,               reduce using rule 72 (valores -> RES .)
    ]               reduce using rule 72 (valores -> RES .)
    ;               reduce using rule 72 (valores -> RES .)
    }               reduce using rule 72 (valores -> RES .)


state 63

    (45) funcReturn -> funcInt .
    (140) valoresMat -> funcInt .
    (210) tCompare -> funcInt .

    ,               reduce using rule 45 (funcReturn -> funcInt .)
    ]               reduce using rule 45 (funcReturn -> funcInt .)
    )               reduce using rule 45 (funcReturn -> funcInt .)
    ;               reduce using rule 45 (funcReturn -> funcInt .)
    }               reduce using rule 45 (funcReturn -> funcInt .)
    +               reduce using rule 140 (valoresMat -> funcInt .)
    -               reduce using rule 140 (valoresMat -> funcInt .)
    *               reduce using rule 140 (valoresMat -> funcInt .)
    /               reduce using rule 140 (valoresMat -> funcInt .)
    %               reduce using rule 140 (valoresMat -> funcInt .)
    ^               reduce using rule 140 (valoresMat -> funcInt .)
    EQEQ            reduce using rule 210 (tCompare -> funcInt .)
    DISTINTO        reduce using rule 210 (tCompare -> funcInt .)
    >               reduce using rule 210 (tCompare -> funcInt .)
    <               reduce using rule 210 (tCompare -> funcInt .)


state 64

    (57) elem -> valores . , elem
    (58) elem -> valores .

    ,               shift and go to state 136
    ]               reduce using rule 58 (elem -> valores .)


state 65

    (215) mayor -> menor .

    EQEQ            reduce using rule 215 (mayor -> menor .)
    DISTINTO        reduce using rule 215 (mayor -> menor .)
    AND             reduce using rule 215 (mayor -> menor .)
    OR              reduce using rule 215 (mayor -> menor .)
    ?               reduce using rule 215 (mayor -> menor .)
    ,               reduce using rule 215 (mayor -> menor .)
    )               reduce using rule 215 (mayor -> menor .)
    ]               reduce using rule 215 (mayor -> menor .)
    ;               reduce using rule 215 (mayor -> menor .)
    :               reduce using rule 215 (mayor -> menor .)
    }               reduce using rule 215 (mayor -> menor .)


state 66

    (82) ternario -> ternarioVars .

    )               reduce using rule 82 (ternario -> ternarioVars .)
    ,               reduce using rule 82 (ternario -> ternarioVars .)
    }               reduce using rule 82 (ternario -> ternarioVars .)
    ]               reduce using rule 82 (ternario -> ternarioVars .)
    ;               reduce using rule 82 (ternario -> ternarioVars .)


state 67

    (148) eMat -> valoresMat . + p
    (150) eMat -> valoresMat . + valoresMat
    (153) eMat -> valoresMat . - p
    (155) eMat -> valoresMat . - valoresMat
    (159) p -> valoresMat . * exp
    (160) p -> valoresMat . / exp
    (161) p -> valoresMat . % exp
    (165) p -> valoresMat . * valoresMat
    (166) p -> valoresMat . / valoresMat
    (167) p -> valoresMat . % valoresMat
    (170) exp -> valoresMat . ^ iSing
    (172) exp -> valoresMat . ^ valoresMat

    +               shift and go to state 138
    -               shift and go to state 140
    *               shift and go to state 139
    /               shift and go to state 141
    %               shift and go to state 137
    ^               shift and go to state 142


state 68

    (196) and -> eq .
    (197) eq -> eq . EQEQ mayor
    (198) eq -> eq . DISTINTO mayor
    (201) eq -> eq . EQEQ tCompare
    (202) eq -> eq . DISTINTO tCompare

    AND             reduce using rule 196 (and -> eq .)
    )               reduce using rule 196 (and -> eq .)
    ?               reduce using rule 196 (and -> eq .)
    OR              reduce using rule 196 (and -> eq .)
    :               reduce using rule 196 (and -> eq .)
    ,               reduce using rule 196 (and -> eq .)
    ]               reduce using rule 196 (and -> eq .)
    ;               reduce using rule 196 (and -> eq .)
    }               reduce using rule 196 (and -> eq .)
    EQEQ            shift and go to state 143
    DISTINTO        shift and go to state 144


state 69

    (188) expBool -> valoresBool . OR and
    (190) expBool -> valoresBool . OR valoresBool
    (193) and -> valoresBool . AND eq
    (195) and -> valoresBool . AND valoresBool
    (103) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (110) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (84) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars

    OR              shift and go to state 146
    AND             shift and go to state 145
    ?               shift and go to state 147


state 70

    (65) valores -> STRING .
    (143) valoresMat -> STRING .

    )               reduce using rule 65 (valores -> STRING .)
    ,               reduce using rule 65 (valores -> STRING .)
    ]               reduce using rule 65 (valores -> STRING .)
    ;               reduce using rule 65 (valores -> STRING .)
    }               reduce using rule 65 (valores -> STRING .)
    +               reduce using rule 143 (valoresMat -> STRING .)
    -               reduce using rule 143 (valoresMat -> STRING .)
    *               reduce using rule 143 (valoresMat -> STRING .)
    /               reduce using rule 143 (valoresMat -> STRING .)
    %               reduce using rule 143 (valoresMat -> STRING .)
    ^               reduce using rule 143 (valoresMat -> STRING .)


state 71

    (59) valores -> eMat .
    (147) eMat -> eMat . + p
    (149) eMat -> eMat . + valoresMat
    (152) eMat -> eMat . - p
    (154) eMat -> eMat . - valoresMat
    (206) tCompare -> eMat .

    )               reduce using rule 59 (valores -> eMat .)
    ,               reduce using rule 59 (valores -> eMat .)
    ]               reduce using rule 59 (valores -> eMat .)
    ;               reduce using rule 59 (valores -> eMat .)
    }               reduce using rule 59 (valores -> eMat .)
    +               shift and go to state 148
    -               shift and go to state 149
    EQEQ            reduce using rule 206 (tCompare -> eMat .)
    DISTINTO        reduce using rule 206 (tCompare -> eMat .)
    >               reduce using rule 206 (tCompare -> eMat .)
    <               reduce using rule 206 (tCompare -> eMat .)


state 72

    (80) ternario -> ( . ternarioMat )
    (81) ternario -> ( . ternarioBool )
    (83) ternario -> ( . ternarioVars )
    (146) valoresMat -> ( . ternarioMat )
    (185) valoresBool -> ( . ternarioBool )
    (212) tCompare -> ( . ternarioBool )
    (213) tCompare -> ( . ternarioMat )
    (179) paren -> ( . eMat )
    (180) paren -> ( . valoresMat )
    (221) parenBool -> ( . expBool )
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (56) vec -> . [ elem ]
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 163
    FLOAT           shift and go to state 164
    STRING          shift and go to state 159
    (               shift and go to state 155
    BOOL            shift and go to state 165
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73
    [               shift and go to state 20
    NOT             shift and go to state 94

    and                            shift and go to state 59
    funcBool                       shift and go to state 150
    funcInt                        shift and go to state 151
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 152
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 153
    eMat                           shift and go to state 154
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 156
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    exp                            shift and go to state 95
    ternarioBool                   shift and go to state 160
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    expBool                        shift and go to state 166
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 157
    ternarioVars                   shift and go to state 167
    varYVals                       shift and go to state 168
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 169

state 73

    (175) iSing -> + . paren
    (177) iSing -> + . valoresMat
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (56) vec -> . [ elem ]

    (               shift and go to state 172
    INT             shift and go to state 175
    FLOAT           shift and go to state 174
    STRING          shift and go to state 159
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 96
    [               shift and go to state 20

    funcString                     shift and go to state 162
    funcInt                        shift and go to state 170
    vecVal                         shift and go to state 8
    varsOps                        shift and go to state 176
    valoresMat                     shift and go to state 171
    paren                          shift and go to state 173
    varYVals                       shift and go to state 177
    reg                            shift and go to state 158
    atributos                      shift and go to state 169
    vec                            shift and go to state 33

state 74

    (174) iSing -> - . paren
    (176) iSing -> - . valoresMat
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (56) vec -> . [ elem ]

    (               shift and go to state 172
    INT             shift and go to state 175
    FLOAT           shift and go to state 174
    STRING          shift and go to state 159
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 96
    [               shift and go to state 20

    funcString                     shift and go to state 162
    funcInt                        shift and go to state 170
    vecVal                         shift and go to state 8
    varsOps                        shift and go to state 176
    valoresMat                     shift and go to state 178
    paren                          shift and go to state 179
    varYVals                       shift and go to state 177
    reg                            shift and go to state 158
    atributos                      shift and go to state 169
    vec                            shift and go to state 33

state 75

    (78) ternario -> ternarioMat .

    )               reduce using rule 78 (ternario -> ternarioMat .)
    ,               reduce using rule 78 (ternario -> ternarioMat .)
    }               reduce using rule 78 (ternario -> ternarioMat .)
    ]               reduce using rule 78 (ternario -> ternarioMat .)
    ;               reduce using rule 78 (ternario -> ternarioMat .)


state 76

    (69) valores -> vec .
    (121) vecVal -> vec . m
    (122) m -> . [ valores ]
    (123) m -> . [ valores ] m

    )               reduce using rule 69 (valores -> vec .)
    ,               reduce using rule 69 (valores -> vec .)
    ]               reduce using rule 69 (valores -> vec .)
    ;               reduce using rule 69 (valores -> vec .)
    }               reduce using rule 69 (valores -> vec .)
    [               shift and go to state 102

    m                              shift and go to state 112

state 77

    (62) valores -> reg .
    (74) atributos -> reg . . valoresCampos

    )               reduce using rule 62 (valores -> reg .)
    ,               reduce using rule 62 (valores -> reg .)
    ]               reduce using rule 62 (valores -> reg .)
    ;               reduce using rule 62 (valores -> reg .)
    }               reduce using rule 62 (valores -> reg .)
    .               shift and go to state 180


state 78

    (60) valores -> expBool .
    (187) expBool -> expBool . OR and
    (189) expBool -> expBool . OR valoresBool
    (104) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (111) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (89) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars

    )               reduce using rule 60 (valores -> expBool .)
    ,               reduce using rule 60 (valores -> expBool .)
    ]               reduce using rule 60 (valores -> expBool .)
    ;               reduce using rule 60 (valores -> expBool .)
    }               reduce using rule 60 (valores -> expBool .)
    OR              shift and go to state 181
    ?               shift and go to state 182


state 79

    (79) ternario -> ternarioBool .

    )               reduce using rule 79 (ternario -> ternarioBool .)
    ,               reduce using rule 79 (ternario -> ternarioBool .)
    }               reduce using rule 79 (ternario -> ternarioBool .)
    ]               reduce using rule 79 (ternario -> ternarioBool .)
    ;               reduce using rule 79 (ternario -> ternarioBool .)


state 80

    (173) exp -> iSing .

    ^               reduce using rule 173 (exp -> iSing .)
    *               reduce using rule 173 (exp -> iSing .)
    /               reduce using rule 173 (exp -> iSing .)
    %               reduce using rule 173 (exp -> iSing .)
    +               reduce using rule 173 (exp -> iSing .)
    -               reduce using rule 173 (exp -> iSing .)
    EQEQ            reduce using rule 173 (exp -> iSing .)
    DISTINTO        reduce using rule 173 (exp -> iSing .)
    >               reduce using rule 173 (exp -> iSing .)
    <               reduce using rule 173 (exp -> iSing .)
    AND             reduce using rule 173 (exp -> iSing .)
    OR              reduce using rule 173 (exp -> iSing .)
    ?               reduce using rule 173 (exp -> iSing .)
    ,               reduce using rule 173 (exp -> iSing .)
    ]               reduce using rule 173 (exp -> iSing .)
    )               reduce using rule 173 (exp -> iSing .)
    ;               reduce using rule 173 (exp -> iSing .)
    :               reduce using rule 173 (exp -> iSing .)
    }               reduce using rule 173 (exp -> iSing .)


state 81

    (220) not -> parenBool .

    EQEQ            reduce using rule 220 (not -> parenBool .)
    DISTINTO        reduce using rule 220 (not -> parenBool .)
    AND             reduce using rule 220 (not -> parenBool .)
    )               reduce using rule 220 (not -> parenBool .)
    ?               reduce using rule 220 (not -> parenBool .)
    OR              reduce using rule 220 (not -> parenBool .)
    ;               reduce using rule 220 (not -> parenBool .)
    :               reduce using rule 220 (not -> parenBool .)
    ,               reduce using rule 220 (not -> parenBool .)
    ]               reduce using rule 220 (not -> parenBool .)
    }               reduce using rule 220 (not -> parenBool .)


state 82

    (199) eq -> tCompare . EQEQ mayor
    (200) eq -> tCompare . DISTINTO mayor
    (203) eq -> tCompare . EQEQ tCompare
    (204) eq -> tCompare . DISTINTO tCompare
    (214) mayor -> tCompare . > tCompare
    (216) menor -> tCompare . < tCompare

    EQEQ            shift and go to state 184
    DISTINTO        shift and go to state 183
    >               shift and go to state 186
    <               shift and go to state 185


state 83

    (178) iSing -> paren .

    ^               reduce using rule 178 (iSing -> paren .)
    *               reduce using rule 178 (iSing -> paren .)
    /               reduce using rule 178 (iSing -> paren .)
    %               reduce using rule 178 (iSing -> paren .)
    +               reduce using rule 178 (iSing -> paren .)
    -               reduce using rule 178 (iSing -> paren .)
    ,               reduce using rule 178 (iSing -> paren .)
    ]               reduce using rule 178 (iSing -> paren .)
    EQEQ            reduce using rule 178 (iSing -> paren .)
    DISTINTO        reduce using rule 178 (iSing -> paren .)
    >               reduce using rule 178 (iSing -> paren .)
    <               reduce using rule 178 (iSing -> paren .)
    ;               reduce using rule 178 (iSing -> paren .)
    )               reduce using rule 178 (iSing -> paren .)
    AND             reduce using rule 178 (iSing -> paren .)
    OR              reduce using rule 178 (iSing -> paren .)
    ?               reduce using rule 178 (iSing -> paren .)
    :               reduce using rule 178 (iSing -> paren .)
    }               reduce using rule 178 (iSing -> paren .)


state 84

    (217) menor -> not .

    EQEQ            reduce using rule 217 (menor -> not .)
    DISTINTO        reduce using rule 217 (menor -> not .)
    AND             reduce using rule 217 (menor -> not .)
    )               reduce using rule 217 (menor -> not .)
    ?               reduce using rule 217 (menor -> not .)
    OR              reduce using rule 217 (menor -> not .)
    :               reduce using rule 217 (menor -> not .)
    ,               reduce using rule 217 (menor -> not .)
    ]               reduce using rule 217 (menor -> not .)
    ;               reduce using rule 217 (menor -> not .)
    }               reduce using rule 217 (menor -> not .)


state 85

    (117) varYVals -> ID .
    (73) atributos -> ID . . valoresCampos
    (120) vecVal -> ID . m
    (122) m -> . [ valores ]
    (123) m -> . [ valores ] m

    MASMAS          reduce using rule 117 (varYVals -> ID .)
    MENOSMENOS      reduce using rule 117 (varYVals -> ID .)
    )               reduce using rule 117 (varYVals -> ID .)
    +               reduce using rule 117 (varYVals -> ID .)
    -               reduce using rule 117 (varYVals -> ID .)
    *               reduce using rule 117 (varYVals -> ID .)
    /               reduce using rule 117 (varYVals -> ID .)
    %               reduce using rule 117 (varYVals -> ID .)
    ^               reduce using rule 117 (varYVals -> ID .)
    OR              reduce using rule 117 (varYVals -> ID .)
    AND             reduce using rule 117 (varYVals -> ID .)
    ?               reduce using rule 117 (varYVals -> ID .)
    EQEQ            reduce using rule 117 (varYVals -> ID .)
    DISTINTO        reduce using rule 117 (varYVals -> ID .)
    >               reduce using rule 117 (varYVals -> ID .)
    <               reduce using rule 117 (varYVals -> ID .)
    ;               reduce using rule 117 (varYVals -> ID .)
    ,               reduce using rule 117 (varYVals -> ID .)
    }               reduce using rule 117 (varYVals -> ID .)
    ]               reduce using rule 117 (varYVals -> ID .)
    .               shift and go to state 187
    [               shift and go to state 102

    m                              shift and go to state 100

state 86

    (46) funcReturn -> funcString .
    (142) valoresMat -> funcString .

    ,               reduce using rule 46 (funcReturn -> funcString .)
    ]               reduce using rule 46 (funcReturn -> funcString .)
    )               reduce using rule 46 (funcReturn -> funcString .)
    ;               reduce using rule 46 (funcReturn -> funcString .)
    }               reduce using rule 46 (funcReturn -> funcString .)
    +               reduce using rule 142 (valoresMat -> funcString .)
    -               reduce using rule 142 (valoresMat -> funcString .)
    *               reduce using rule 142 (valoresMat -> funcString .)
    /               reduce using rule 142 (valoresMat -> funcString .)
    %               reduce using rule 142 (valoresMat -> funcString .)
    ^               reduce using rule 142 (valoresMat -> funcString .)


state 87

    (63) valores -> INT .
    (138) valoresMat -> INT .
    (209) tCompare -> INT .

    )               reduce using rule 63 (valores -> INT .)
    ,               reduce using rule 63 (valores -> INT .)
    ]               reduce using rule 63 (valores -> INT .)
    ;               reduce using rule 63 (valores -> INT .)
    }               reduce using rule 63 (valores -> INT .)
    +               reduce using rule 138 (valoresMat -> INT .)
    -               reduce using rule 138 (valoresMat -> INT .)
    *               reduce using rule 138 (valoresMat -> INT .)
    /               reduce using rule 138 (valoresMat -> INT .)
    %               reduce using rule 138 (valoresMat -> INT .)
    ^               reduce using rule 138 (valoresMat -> INT .)
    EQEQ            reduce using rule 209 (tCompare -> INT .)
    DISTINTO        reduce using rule 209 (tCompare -> INT .)
    >               reduce using rule 209 (tCompare -> INT .)
    <               reduce using rule 209 (tCompare -> INT .)


state 88

    (61) valores -> funcReturn .

    )               reduce using rule 61 (valores -> funcReturn .)
    ,               reduce using rule 61 (valores -> funcReturn .)
    ]               reduce using rule 61 (valores -> funcReturn .)
    ;               reduce using rule 61 (valores -> funcReturn .)
    }               reduce using rule 61 (valores -> funcReturn .)


state 89

    (64) valores -> FLOAT .
    (139) valoresMat -> FLOAT .
    (211) tCompare -> FLOAT .

    )               reduce using rule 64 (valores -> FLOAT .)
    ,               reduce using rule 64 (valores -> FLOAT .)
    ]               reduce using rule 64 (valores -> FLOAT .)
    ;               reduce using rule 64 (valores -> FLOAT .)
    }               reduce using rule 64 (valores -> FLOAT .)
    +               reduce using rule 139 (valoresMat -> FLOAT .)
    -               reduce using rule 139 (valoresMat -> FLOAT .)
    *               reduce using rule 139 (valoresMat -> FLOAT .)
    /               reduce using rule 139 (valoresMat -> FLOAT .)
    %               reduce using rule 139 (valoresMat -> FLOAT .)
    ^               reduce using rule 139 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 211 (tCompare -> FLOAT .)
    DISTINTO        reduce using rule 211 (tCompare -> FLOAT .)
    >               reduce using rule 211 (tCompare -> FLOAT .)
    <               reduce using rule 211 (tCompare -> FLOAT .)


state 90

    (56) vec -> [ elem . ]

    ]               shift and go to state 188


state 91

    (151) eMat -> p .
    (156) p -> p . * exp
    (157) p -> p . / exp
    (158) p -> p . % exp
    (162) p -> p . * valoresMat
    (163) p -> p . / valoresMat
    (164) p -> p . % valoresMat

    +               reduce using rule 151 (eMat -> p .)
    -               reduce using rule 151 (eMat -> p .)
    EQEQ            reduce using rule 151 (eMat -> p .)
    DISTINTO        reduce using rule 151 (eMat -> p .)
    >               reduce using rule 151 (eMat -> p .)
    <               reduce using rule 151 (eMat -> p .)
    ,               reduce using rule 151 (eMat -> p .)
    }               reduce using rule 151 (eMat -> p .)
    AND             reduce using rule 151 (eMat -> p .)
    OR              reduce using rule 151 (eMat -> p .)
    ?               reduce using rule 151 (eMat -> p .)
    ]               reduce using rule 151 (eMat -> p .)
    )               reduce using rule 151 (eMat -> p .)
    ;               reduce using rule 151 (eMat -> p .)
    :               reduce using rule 151 (eMat -> p .)
    *               shift and go to state 190
    /               shift and go to state 191
    %               shift and go to state 189


state 92

    (66) valores -> BOOL .
    (181) valoresBool -> BOOL .

    )               reduce using rule 66 (valores -> BOOL .)
    ,               reduce using rule 66 (valores -> BOOL .)
    ]               reduce using rule 66 (valores -> BOOL .)
    ;               reduce using rule 66 (valores -> BOOL .)
    }               reduce using rule 66 (valores -> BOOL .)
    OR              reduce using rule 181 (valoresBool -> BOOL .)
    AND             reduce using rule 181 (valoresBool -> BOOL .)
    ?               reduce using rule 181 (valoresBool -> BOOL .)


state 93

    (68) valores -> varsOps .
    (145) valoresMat -> varsOps .
    (184) valoresBool -> varsOps .
    (207) tCompare -> varsOps .

    )               reduce using rule 68 (valores -> varsOps .)
    ,               reduce using rule 68 (valores -> varsOps .)
    ]               reduce using rule 68 (valores -> varsOps .)
    ;               reduce using rule 68 (valores -> varsOps .)
    }               reduce using rule 68 (valores -> varsOps .)
    +               reduce using rule 145 (valoresMat -> varsOps .)
    -               reduce using rule 145 (valoresMat -> varsOps .)
    *               reduce using rule 145 (valoresMat -> varsOps .)
    /               reduce using rule 145 (valoresMat -> varsOps .)
    %               reduce using rule 145 (valoresMat -> varsOps .)
    ^               reduce using rule 145 (valoresMat -> varsOps .)
    OR              reduce using rule 184 (valoresBool -> varsOps .)
    AND             reduce using rule 184 (valoresBool -> varsOps .)
    ?               reduce using rule 184 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 207 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 207 (tCompare -> varsOps .)
    >               reduce using rule 207 (tCompare -> varsOps .)
    <               reduce using rule 207 (tCompare -> varsOps .)


state 94

    (218) not -> NOT . not
    (219) not -> NOT . valoresBool
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (221) parenBool -> . ( expBool )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (56) vec -> . [ elem ]

    NOT             shift and go to state 94
    BOOL            shift and go to state 165
    (               shift and go to state 193
    EQEQ            reduce using rule 186 (valoresBool -> .)
    DISTINTO        reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    ?               reduce using rule 186 (valoresBool -> .)
    ,               reduce using rule 186 (valoresBool -> .)
    ]               reduce using rule 186 (valoresBool -> .)
    )               reduce using rule 186 (valoresBool -> .)
    ;               reduce using rule 186 (valoresBool -> .)
    :               reduce using rule 186 (valoresBool -> .)
    }               reduce using rule 186 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 55
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20

    funcBool                       shift and go to state 150
    parenBool                      shift and go to state 81
    varsOps                        shift and go to state 195
    vecVal                         shift and go to state 8
    not                            shift and go to state 194
    varYVals                       shift and go to state 196
    valoresBool                    shift and go to state 192
    vec                            shift and go to state 33

state 95

    (168) p -> exp .
    (169) exp -> exp . ^ iSing
    (171) exp -> exp . ^ valoresMat

    *               reduce using rule 168 (p -> exp .)
    /               reduce using rule 168 (p -> exp .)
    %               reduce using rule 168 (p -> exp .)
    )               reduce using rule 168 (p -> exp .)
    +               reduce using rule 168 (p -> exp .)
    -               reduce using rule 168 (p -> exp .)
    EQEQ            reduce using rule 168 (p -> exp .)
    DISTINTO        reduce using rule 168 (p -> exp .)
    >               reduce using rule 168 (p -> exp .)
    <               reduce using rule 168 (p -> exp .)
    ,               reduce using rule 168 (p -> exp .)
    ]               reduce using rule 168 (p -> exp .)
    ;               reduce using rule 168 (p -> exp .)
    AND             reduce using rule 168 (p -> exp .)
    OR              reduce using rule 168 (p -> exp .)
    ?               reduce using rule 168 (p -> exp .)
    :               reduce using rule 168 (p -> exp .)
    }               reduce using rule 168 (p -> exp .)
    ^               shift and go to state 197


state 96

    (124) reg -> { . campos }
    (125) campos -> . ID : valores , campos
    (126) campos -> . ID : valores

    ID              shift and go to state 199

    campos                         shift and go to state 198

state 97

    (205) eq -> mayor .

    EQEQ            reduce using rule 205 (eq -> mayor .)
    DISTINTO        reduce using rule 205 (eq -> mayor .)
    AND             reduce using rule 205 (eq -> mayor .)
    ?               reduce using rule 205 (eq -> mayor .)
    OR              reduce using rule 205 (eq -> mayor .)
    )               reduce using rule 205 (eq -> mayor .)
    :               reduce using rule 205 (eq -> mayor .)
    ;               reduce using rule 205 (eq -> mayor .)
    ,               reduce using rule 205 (eq -> mayor .)
    ]               reduce using rule 205 (eq -> mayor .)
    }               reduce using rule 205 (eq -> mayor .)


state 98

    (67) valores -> varYVals .
    (129) varsOps -> varYVals . MASMAS
    (130) varsOps -> varYVals . MENOSMENOS
    (144) valoresMat -> varYVals .
    (183) valoresBool -> varYVals .
    (208) tCompare -> varYVals .

    )               reduce using rule 67 (valores -> varYVals .)
    ,               reduce using rule 67 (valores -> varYVals .)
    ]               reduce using rule 67 (valores -> varYVals .)
    ;               reduce using rule 67 (valores -> varYVals .)
    }               reduce using rule 67 (valores -> varYVals .)
    MASMAS          shift and go to state 50
    MENOSMENOS      shift and go to state 47
    +               reduce using rule 144 (valoresMat -> varYVals .)
    -               reduce using rule 144 (valoresMat -> varYVals .)
    *               reduce using rule 144 (valoresMat -> varYVals .)
    /               reduce using rule 144 (valoresMat -> varYVals .)
    %               reduce using rule 144 (valoresMat -> varYVals .)
    ^               reduce using rule 144 (valoresMat -> varYVals .)
    OR              reduce using rule 183 (valoresBool -> varYVals .)
    AND             reduce using rule 183 (valoresBool -> varYVals .)
    ?               reduce using rule 183 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 208 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 208 (tCompare -> varYVals .)
    >               reduce using rule 208 (tCompare -> varYVals .)
    <               reduce using rule 208 (tCompare -> varYVals .)


state 99

    (71) valores -> atributos .
    (141) valoresMat -> atributos .

    )               reduce using rule 71 (valores -> atributos .)
    ,               reduce using rule 71 (valores -> atributos .)
    ]               reduce using rule 71 (valores -> atributos .)
    ;               reduce using rule 71 (valores -> atributos .)
    }               reduce using rule 71 (valores -> atributos .)
    +               reduce using rule 141 (valoresMat -> atributos .)
    -               reduce using rule 141 (valoresMat -> atributos .)
    *               reduce using rule 141 (valoresMat -> atributos .)
    /               reduce using rule 141 (valoresMat -> atributos .)
    %               reduce using rule 141 (valoresMat -> atributos .)
    ^               reduce using rule 141 (valoresMat -> atributos .)


state 100

    (120) vecVal -> ID m .

    .               reduce using rule 120 (vecVal -> ID m .)
    MASMAS          reduce using rule 120 (vecVal -> ID m .)
    MENOSMENOS      reduce using rule 120 (vecVal -> ID m .)
    :               reduce using rule 120 (vecVal -> ID m .)
    ?               reduce using rule 120 (vecVal -> ID m .)
    OR              reduce using rule 120 (vecVal -> ID m .)
    AND             reduce using rule 120 (vecVal -> ID m .)
    +               reduce using rule 120 (vecVal -> ID m .)
    -               reduce using rule 120 (vecVal -> ID m .)
    *               reduce using rule 120 (vecVal -> ID m .)
    /               reduce using rule 120 (vecVal -> ID m .)
    %               reduce using rule 120 (vecVal -> ID m .)
    ^               reduce using rule 120 (vecVal -> ID m .)
    EQEQ            reduce using rule 120 (vecVal -> ID m .)
    DISTINTO        reduce using rule 120 (vecVal -> ID m .)
    >               reduce using rule 120 (vecVal -> ID m .)
    <               reduce using rule 120 (vecVal -> ID m .)
    ;               reduce using rule 120 (vecVal -> ID m .)
    )               reduce using rule 120 (vecVal -> ID m .)
    ,               reduce using rule 120 (vecVal -> ID m .)
    ]               reduce using rule 120 (vecVal -> ID m .)
    }               reduce using rule 120 (vecVal -> ID m .)
    MULEQ           reduce using rule 120 (vecVal -> ID m .)
    DIVEQ           reduce using rule 120 (vecVal -> ID m .)
    MASEQ           reduce using rule 120 (vecVal -> ID m .)
    MENOSEQ         reduce using rule 120 (vecVal -> ID m .)
    =               reduce using rule 120 (vecVal -> ID m .)


state 101

    (137) varAsig -> ID . . ID = valoresAsig

    ID              shift and go to state 200


state 102

    (122) m -> [ . valores ]
    (123) m -> [ . valores ] m
    (59) valores -> . eMat
    (60) valores -> . expBool
    (61) valores -> . funcReturn
    (62) valores -> . reg
    (63) valores -> . INT
    (64) valores -> . FLOAT
    (65) valores -> . STRING
    (66) valores -> . BOOL
    (67) valores -> . varYVals
    (68) valores -> . varsOps
    (69) valores -> . vec
    (70) valores -> . ternario
    (71) valores -> . atributos
    (72) valores -> . RES
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (124) reg -> . { campos }
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (56) vec -> . [ elem ]
    (78) ternario -> . ternarioMat
    (79) ternario -> . ternarioBool
    (80) ternario -> . ( ternarioMat )
    (81) ternario -> . ( ternarioBool )
    (82) ternario -> . ternarioVars
    (83) ternario -> . ( ternarioVars )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 87
    FLOAT           shift and go to state 89
    STRING          shift and go to state 70
    BOOL            shift and go to state 92
    RES             shift and go to state 62
    {               shift and go to state 96
    ID              shift and go to state 85
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 72
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    ?               reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    ternario                       shift and go to state 60
    funcBool                       shift and go to state 61
    funcInt                        shift and go to state 63
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 69
    eMat                           shift and go to state 71
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 75
    vec                            shift and go to state 76
    paren                          shift and go to state 83
    reg                            shift and go to state 77
    expBool                        shift and go to state 78
    ternarioBool                   shift and go to state 79
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 86
    funcReturn                     shift and go to state 88
    valores                        shift and go to state 201
    p                              shift and go to state 91
    varsOps                        shift and go to state 93
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 66
    varYVals                       shift and go to state 98
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 99

state 103

    (6) lAbierta -> IF ( . cosaBooleana ) linea
    (7) lAbierta -> IF ( . cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> IF ( . cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> IF ( . cosaBooleana ) { g }
    (14) lCerrada -> IF ( . cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( . cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (35) cosaBooleana -> . expBool
    (36) cosaBooleana -> . valoresBool
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (56) vec -> . [ elem ]
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (221) parenBool -> . ( expBool )
    (124) reg -> . { campos }
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )

    BOOL            shift and go to state 165
    (               shift and go to state 205
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    )               reduce using rule 186 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 206
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    INT             shift and go to state 208
    FLOAT           shift and go to state 209
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 159
    NOT             shift and go to state 94
    CAPITALIZAR     shift and go to state 28
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73

    and                            shift and go to state 59
    funcBool                       shift and go to state 150
    funcInt                        shift and go to state 202
    menor                          shift and go to state 65
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 203
    eMat                           shift and go to state 204
    atributos                      shift and go to state 169
    mayor                          shift and go to state 97
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    varsOps                        shift and go to state 210
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    cosaBooleana                   shift and go to state 207
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    exp                            shift and go to state 95
    varYVals                       shift and go to state 211
    parenBool                      shift and go to state 81
    expBool                        shift and go to state 212

state 104

    (30) sentencia -> varAsig ; .

    ELSE            reduce using rule 30 (sentencia -> varAsig ; .)
    COMMENT         reduce using rule 30 (sentencia -> varAsig ; .)
    IF              reduce using rule 30 (sentencia -> varAsig ; .)
    DO              reduce using rule 30 (sentencia -> varAsig ; .)
    WHILE           reduce using rule 30 (sentencia -> varAsig ; .)
    FOR             reduce using rule 30 (sentencia -> varAsig ; .)
    RETURN          reduce using rule 30 (sentencia -> varAsig ; .)
    ;               reduce using rule 30 (sentencia -> varAsig ; .)
    MENOSMENOS      reduce using rule 30 (sentencia -> varAsig ; .)
    MASMAS          reduce using rule 30 (sentencia -> varAsig ; .)
    ID              reduce using rule 30 (sentencia -> varAsig ; .)
    PRINT           reduce using rule 30 (sentencia -> varAsig ; .)
    MULTIESCALAR    reduce using rule 30 (sentencia -> varAsig ; .)
    LENGTH          reduce using rule 30 (sentencia -> varAsig ; .)
    CAPITALIZAR     reduce using rule 30 (sentencia -> varAsig ; .)
    COLINEALES      reduce using rule 30 (sentencia -> varAsig ; .)
    [               reduce using rule 30 (sentencia -> varAsig ; .)
    $end            reduce using rule 30 (sentencia -> varAsig ; .)
    }               reduce using rule 30 (sentencia -> varAsig ; .)


state 105

    (48) funcInt -> MULTIESCALAR ( . valores , valores param )
    (59) valores -> . eMat
    (60) valores -> . expBool
    (61) valores -> . funcReturn
    (62) valores -> . reg
    (63) valores -> . INT
    (64) valores -> . FLOAT
    (65) valores -> . STRING
    (66) valores -> . BOOL
    (67) valores -> . varYVals
    (68) valores -> . varsOps
    (69) valores -> . vec
    (70) valores -> . ternario
    (71) valores -> . atributos
    (72) valores -> . RES
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (124) reg -> . { campos }
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (56) vec -> . [ elem ]
    (78) ternario -> . ternarioMat
    (79) ternario -> . ternarioBool
    (80) ternario -> . ( ternarioMat )
    (81) ternario -> . ( ternarioBool )
    (82) ternario -> . ternarioVars
    (83) ternario -> . ( ternarioVars )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 87
    FLOAT           shift and go to state 89
    STRING          shift and go to state 70
    BOOL            shift and go to state 92
    RES             shift and go to state 62
    {               shift and go to state 96
    ID              shift and go to state 85
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 72
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    ?               reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    ternario                       shift and go to state 60
    funcBool                       shift and go to state 61
    funcInt                        shift and go to state 63
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 69
    eMat                           shift and go to state 71
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 75
    vec                            shift and go to state 76
    paren                          shift and go to state 83
    reg                            shift and go to state 77
    expBool                        shift and go to state 78
    ternarioBool                   shift and go to state 79
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 86
    funcReturn                     shift and go to state 88
    valores                        shift and go to state 213
    p                              shift and go to state 91
    varsOps                        shift and go to state 93
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 66
    varYVals                       shift and go to state 98
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 99

state 106

    (50) funcString -> CAPITALIZAR ( . valores )
    (59) valores -> . eMat
    (60) valores -> . expBool
    (61) valores -> . funcReturn
    (62) valores -> . reg
    (63) valores -> . INT
    (64) valores -> . FLOAT
    (65) valores -> . STRING
    (66) valores -> . BOOL
    (67) valores -> . varYVals
    (68) valores -> . varsOps
    (69) valores -> . vec
    (70) valores -> . ternario
    (71) valores -> . atributos
    (72) valores -> . RES
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (124) reg -> . { campos }
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (56) vec -> . [ elem ]
    (78) ternario -> . ternarioMat
    (79) ternario -> . ternarioBool
    (80) ternario -> . ( ternarioMat )
    (81) ternario -> . ( ternarioBool )
    (82) ternario -> . ternarioVars
    (83) ternario -> . ( ternarioVars )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 87
    FLOAT           shift and go to state 89
    STRING          shift and go to state 70
    BOOL            shift and go to state 92
    RES             shift and go to state 62
    {               shift and go to state 96
    ID              shift and go to state 85
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 72
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    ?               reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    ternario                       shift and go to state 60
    funcBool                       shift and go to state 61
    funcInt                        shift and go to state 63
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 69
    eMat                           shift and go to state 71
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 75
    vec                            shift and go to state 76
    paren                          shift and go to state 83
    reg                            shift and go to state 77
    expBool                        shift and go to state 78
    ternarioBool                   shift and go to state 79
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 86
    funcReturn                     shift and go to state 88
    valores                        shift and go to state 214
    p                              shift and go to state 91
    varsOps                        shift and go to state 93
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 66
    varYVals                       shift and go to state 98
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 99

state 107

    (128) varsOps -> MASMAS varYVals .

    ;               reduce using rule 128 (varsOps -> MASMAS varYVals .)
    :               reduce using rule 128 (varsOps -> MASMAS varYVals .)
    ?               reduce using rule 128 (varsOps -> MASMAS varYVals .)
    OR              reduce using rule 128 (varsOps -> MASMAS varYVals .)
    AND             reduce using rule 128 (varsOps -> MASMAS varYVals .)
    +               reduce using rule 128 (varsOps -> MASMAS varYVals .)
    -               reduce using rule 128 (varsOps -> MASMAS varYVals .)
    *               reduce using rule 128 (varsOps -> MASMAS varYVals .)
    /               reduce using rule 128 (varsOps -> MASMAS varYVals .)
    %               reduce using rule 128 (varsOps -> MASMAS varYVals .)
    ^               reduce using rule 128 (varsOps -> MASMAS varYVals .)
    EQEQ            reduce using rule 128 (varsOps -> MASMAS varYVals .)
    DISTINTO        reduce using rule 128 (varsOps -> MASMAS varYVals .)
    >               reduce using rule 128 (varsOps -> MASMAS varYVals .)
    <               reduce using rule 128 (varsOps -> MASMAS varYVals .)
    ,               reduce using rule 128 (varsOps -> MASMAS varYVals .)
    ]               reduce using rule 128 (varsOps -> MASMAS varYVals .)
    )               reduce using rule 128 (varsOps -> MASMAS varYVals .)
    }               reduce using rule 128 (varsOps -> MASMAS varYVals .)


state 108

    (24) lCerrada -> loop COMMENT . com lCerrada
    (12) com -> . COMMENT com
    (13) com -> . empty
    (55) empty -> .

    COMMENT         shift and go to state 114
    IF              reduce using rule 55 (empty -> .)
    DO              reduce using rule 55 (empty -> .)
    RETURN          reduce using rule 55 (empty -> .)
    ;               reduce using rule 55 (empty -> .)
    WHILE           reduce using rule 55 (empty -> .)
    FOR             reduce using rule 55 (empty -> .)
    MENOSMENOS      reduce using rule 55 (empty -> .)
    MASMAS          reduce using rule 55 (empty -> .)
    ID              reduce using rule 55 (empty -> .)
    PRINT           reduce using rule 55 (empty -> .)
    MULTIESCALAR    reduce using rule 55 (empty -> .)
    LENGTH          reduce using rule 55 (empty -> .)
    CAPITALIZAR     reduce using rule 55 (empty -> .)
    COLINEALES      reduce using rule 55 (empty -> .)
    [               reduce using rule 55 (empty -> .)

    com                            shift and go to state 215
    empty                          shift and go to state 116

state 109

    (23) lCerrada -> loop lCerrada .

    WHILE           reduce using rule 23 (lCerrada -> loop lCerrada .)
    COMMENT         reduce using rule 23 (lCerrada -> loop lCerrada .)
    IF              reduce using rule 23 (lCerrada -> loop lCerrada .)
    DO              reduce using rule 23 (lCerrada -> loop lCerrada .)
    FOR             reduce using rule 23 (lCerrada -> loop lCerrada .)
    RETURN          reduce using rule 23 (lCerrada -> loop lCerrada .)
    ;               reduce using rule 23 (lCerrada -> loop lCerrada .)
    MENOSMENOS      reduce using rule 23 (lCerrada -> loop lCerrada .)
    MASMAS          reduce using rule 23 (lCerrada -> loop lCerrada .)
    ID              reduce using rule 23 (lCerrada -> loop lCerrada .)
    PRINT           reduce using rule 23 (lCerrada -> loop lCerrada .)
    MULTIESCALAR    reduce using rule 23 (lCerrada -> loop lCerrada .)
    LENGTH          reduce using rule 23 (lCerrada -> loop lCerrada .)
    CAPITALIZAR     reduce using rule 23 (lCerrada -> loop lCerrada .)
    COLINEALES      reduce using rule 23 (lCerrada -> loop lCerrada .)
    [               reduce using rule 23 (lCerrada -> loop lCerrada .)
    $end            reduce using rule 23 (lCerrada -> loop lCerrada .)
    }               reduce using rule 23 (lCerrada -> loop lCerrada .)
    ELSE            reduce using rule 23 (lCerrada -> loop lCerrada .)


state 110

    (10) lAbierta -> loop lAbierta .

    COMMENT         reduce using rule 10 (lAbierta -> loop lAbierta .)
    IF              reduce using rule 10 (lAbierta -> loop lAbierta .)
    DO              reduce using rule 10 (lAbierta -> loop lAbierta .)
    WHILE           reduce using rule 10 (lAbierta -> loop lAbierta .)
    FOR             reduce using rule 10 (lAbierta -> loop lAbierta .)
    RETURN          reduce using rule 10 (lAbierta -> loop lAbierta .)
    ;               reduce using rule 10 (lAbierta -> loop lAbierta .)
    MENOSMENOS      reduce using rule 10 (lAbierta -> loop lAbierta .)
    MASMAS          reduce using rule 10 (lAbierta -> loop lAbierta .)
    ID              reduce using rule 10 (lAbierta -> loop lAbierta .)
    PRINT           reduce using rule 10 (lAbierta -> loop lAbierta .)
    MULTIESCALAR    reduce using rule 10 (lAbierta -> loop lAbierta .)
    LENGTH          reduce using rule 10 (lAbierta -> loop lAbierta .)
    CAPITALIZAR     reduce using rule 10 (lAbierta -> loop lAbierta .)
    COLINEALES      reduce using rule 10 (lAbierta -> loop lAbierta .)
    [               reduce using rule 10 (lAbierta -> loop lAbierta .)
    }               reduce using rule 10 (lAbierta -> loop lAbierta .)
    $end            reduce using rule 10 (lAbierta -> loop lAbierta .)


state 111

    (22) lCerrada -> loop { . g }
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (55) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (132) varAsig -> . varYVals MULEQ valoresAsig
    (133) varAsig -> . varYVals DIVEQ valoresAsig
    (134) varAsig -> . varYVals MASEQ valoresAsig
    (135) varAsig -> . varYVals MENOSEQ valoresAsig
    (136) varAsig -> . varYVals = valoresAsig
    (137) varAsig -> . ID . ID = valoresAsig
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 55 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    linea                          shift and go to state 34
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 13
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 216
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 29
    lAbierta                       shift and go to state 30
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 32

state 112

    (121) vecVal -> vec m .

    .               reduce using rule 121 (vecVal -> vec m .)
    MASMAS          reduce using rule 121 (vecVal -> vec m .)
    MENOSMENOS      reduce using rule 121 (vecVal -> vec m .)
    :               reduce using rule 121 (vecVal -> vec m .)
    ?               reduce using rule 121 (vecVal -> vec m .)
    OR              reduce using rule 121 (vecVal -> vec m .)
    AND             reduce using rule 121 (vecVal -> vec m .)
    +               reduce using rule 121 (vecVal -> vec m .)
    -               reduce using rule 121 (vecVal -> vec m .)
    *               reduce using rule 121 (vecVal -> vec m .)
    /               reduce using rule 121 (vecVal -> vec m .)
    %               reduce using rule 121 (vecVal -> vec m .)
    ^               reduce using rule 121 (vecVal -> vec m .)
    EQEQ            reduce using rule 121 (vecVal -> vec m .)
    DISTINTO        reduce using rule 121 (vecVal -> vec m .)
    >               reduce using rule 121 (vecVal -> vec m .)
    <               reduce using rule 121 (vecVal -> vec m .)
    ;               reduce using rule 121 (vecVal -> vec m .)
    )               reduce using rule 121 (vecVal -> vec m .)
    ,               reduce using rule 121 (vecVal -> vec m .)
    ]               reduce using rule 121 (vecVal -> vec m .)
    }               reduce using rule 121 (vecVal -> vec m .)
    MULEQ           reduce using rule 121 (vecVal -> vec m .)
    DIVEQ           reduce using rule 121 (vecVal -> vec m .)
    MASEQ           reduce using rule 121 (vecVal -> vec m .)
    MENOSEQ         reduce using rule 121 (vecVal -> vec m .)
    =               reduce using rule 121 (vecVal -> vec m .)


state 113

    (1) g -> linea g .

    }               reduce using rule 1 (g -> linea g .)
    $end            reduce using rule 1 (g -> linea g .)


state 114

    (12) com -> COMMENT . com
    (12) com -> . COMMENT com
    (13) com -> . empty
    (55) empty -> .

    COMMENT         shift and go to state 114
    IF              reduce using rule 55 (empty -> .)
    DO              reduce using rule 55 (empty -> .)
    RETURN          reduce using rule 55 (empty -> .)
    ;               reduce using rule 55 (empty -> .)
    WHILE           reduce using rule 55 (empty -> .)
    FOR             reduce using rule 55 (empty -> .)
    MENOSMENOS      reduce using rule 55 (empty -> .)
    MASMAS          reduce using rule 55 (empty -> .)
    ID              reduce using rule 55 (empty -> .)
    PRINT           reduce using rule 55 (empty -> .)
    MULTIESCALAR    reduce using rule 55 (empty -> .)
    LENGTH          reduce using rule 55 (empty -> .)
    CAPITALIZAR     reduce using rule 55 (empty -> .)
    COLINEALES      reduce using rule 55 (empty -> .)
    [               reduce using rule 55 (empty -> .)

    com                            shift and go to state 217
    empty                          shift and go to state 116

state 115

    (27) lCerrada -> DO COMMENT com . lCerrada WHILE ( valores ) ;
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (132) varAsig -> . varYVals MULEQ valoresAsig
    (133) varAsig -> . varYVals DIVEQ valoresAsig
    (134) varAsig -> . varYVals MASEQ valoresAsig
    (135) varAsig -> . varYVals MENOSEQ valoresAsig
    (136) varAsig -> . varYVals = valoresAsig
    (137) varAsig -> . ID . ID = valoresAsig
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 218
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 39

state 116

    (13) com -> empty .

    IF              reduce using rule 13 (com -> empty .)
    DO              reduce using rule 13 (com -> empty .)
    RETURN          reduce using rule 13 (com -> empty .)
    ;               reduce using rule 13 (com -> empty .)
    WHILE           reduce using rule 13 (com -> empty .)
    FOR             reduce using rule 13 (com -> empty .)
    MENOSMENOS      reduce using rule 13 (com -> empty .)
    MASMAS          reduce using rule 13 (com -> empty .)
    ID              reduce using rule 13 (com -> empty .)
    PRINT           reduce using rule 13 (com -> empty .)
    MULTIESCALAR    reduce using rule 13 (com -> empty .)
    LENGTH          reduce using rule 13 (com -> empty .)
    CAPITALIZAR     reduce using rule 13 (com -> empty .)
    COLINEALES      reduce using rule 13 (com -> empty .)
    [               reduce using rule 13 (com -> empty .)


state 117

    (14) lCerrada -> IF ( . cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( . cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (35) cosaBooleana -> . expBool
    (36) cosaBooleana -> . valoresBool
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (56) vec -> . [ elem ]
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (221) parenBool -> . ( expBool )
    (124) reg -> . { campos }
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )

    BOOL            shift and go to state 165
    (               shift and go to state 205
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    )               reduce using rule 186 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 206
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    INT             shift and go to state 208
    FLOAT           shift and go to state 209
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 159
    NOT             shift and go to state 94
    CAPITALIZAR     shift and go to state 28
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73

    and                            shift and go to state 59
    funcBool                       shift and go to state 150
    funcInt                        shift and go to state 202
    menor                          shift and go to state 65
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 203
    eMat                           shift and go to state 204
    atributos                      shift and go to state 169
    mayor                          shift and go to state 97
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    cosaBooleana                   shift and go to state 219
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 210
    exp                            shift and go to state 95
    varYVals                       shift and go to state 211
    parenBool                      shift and go to state 81
    expBool                        shift and go to state 212

state 118

    (26) lCerrada -> DO lCerrada WHILE . ( valores ) ;

    (               shift and go to state 220


state 119

    (25) lCerrada -> DO { g . } WHILE ( valores ) ;

    }               shift and go to state 221


state 120

    (51) funcBool -> COLINEALES ( valores . , valores )

    ,               shift and go to state 222


state 121

    (33) loop -> WHILE ( valores . )

    )               shift and go to state 223


state 122

    (52) funcVoid -> PRINT ( valores . )

    )               shift and go to state 224


state 123

    (119) varYVals -> vecVal . varYVals .

    MASMAS          reduce using rule 119 (varYVals -> vecVal . varYVals .)
    MENOSMENOS      reduce using rule 119 (varYVals -> vecVal . varYVals .)
    >               reduce using rule 119 (varYVals -> vecVal . varYVals .)
    <               reduce using rule 119 (varYVals -> vecVal . varYVals .)
    EQEQ            reduce using rule 119 (varYVals -> vecVal . varYVals .)
    DISTINTO        reduce using rule 119 (varYVals -> vecVal . varYVals .)
    AND             reduce using rule 119 (varYVals -> vecVal . varYVals .)
    OR              reduce using rule 119 (varYVals -> vecVal . varYVals .)
    ?               reduce using rule 119 (varYVals -> vecVal . varYVals .)
    ,               reduce using rule 119 (varYVals -> vecVal . varYVals .)
    ]               reduce using rule 119 (varYVals -> vecVal . varYVals .)
    )               reduce using rule 119 (varYVals -> vecVal . varYVals .)
    ;               reduce using rule 119 (varYVals -> vecVal . varYVals .)
    :               reduce using rule 119 (varYVals -> vecVal . varYVals .)
    }               reduce using rule 119 (varYVals -> vecVal . varYVals .)
    +               reduce using rule 119 (varYVals -> vecVal . varYVals .)
    -               reduce using rule 119 (varYVals -> vecVal . varYVals .)
    *               reduce using rule 119 (varYVals -> vecVal . varYVals .)
    /               reduce using rule 119 (varYVals -> vecVal . varYVals .)
    %               reduce using rule 119 (varYVals -> vecVal . varYVals .)
    ^               reduce using rule 119 (varYVals -> vecVal . varYVals .)
    MULEQ           reduce using rule 119 (varYVals -> vecVal . varYVals .)
    DIVEQ           reduce using rule 119 (varYVals -> vecVal . varYVals .)
    MASEQ           reduce using rule 119 (varYVals -> vecVal . varYVals .)
    MENOSEQ         reduce using rule 119 (varYVals -> vecVal . varYVals .)
    =               reduce using rule 119 (varYVals -> vecVal . varYVals .)


state 124

    (135) varAsig -> varYVals MENOSEQ valoresAsig .

    ;               reduce using rule 135 (varAsig -> varYVals MENOSEQ valoresAsig .)
    )               reduce using rule 135 (varAsig -> varYVals MENOSEQ valoresAsig .)


state 125

    (131) valoresAsig -> valores .

    ;               reduce using rule 131 (valoresAsig -> valores .)
    )               reduce using rule 131 (valoresAsig -> valores .)


state 126

    (134) varAsig -> varYVals MASEQ valoresAsig .

    ;               reduce using rule 134 (varAsig -> varYVals MASEQ valoresAsig .)
    )               reduce using rule 134 (varAsig -> varYVals MASEQ valoresAsig .)


state 127

    (136) varAsig -> varYVals = valoresAsig .

    ;               reduce using rule 136 (varAsig -> varYVals = valoresAsig .)
    )               reduce using rule 136 (varAsig -> varYVals = valoresAsig .)


state 128

    (132) varAsig -> varYVals MULEQ valoresAsig .

    ;               reduce using rule 132 (varAsig -> varYVals MULEQ valoresAsig .)
    )               reduce using rule 132 (varAsig -> varYVals MULEQ valoresAsig .)


state 129

    (133) varAsig -> varYVals DIVEQ valoresAsig .

    ;               reduce using rule 133 (varAsig -> varYVals DIVEQ valoresAsig .)
    )               reduce using rule 133 (varAsig -> varYVals DIVEQ valoresAsig .)


state 130

    (34) loop -> FOR ( primParam . ; valores ; tercerParam )

    ;               shift and go to state 225


state 131

    (37) primParam -> varAsig .

    ;               reduce using rule 37 (primParam -> varAsig .)


state 132

    (38) primParam -> empty .

    ;               reduce using rule 38 (primParam -> empty .)


state 133

    (132) varAsig -> varYVals . MULEQ valoresAsig
    (133) varAsig -> varYVals . DIVEQ valoresAsig
    (134) varAsig -> varYVals . MASEQ valoresAsig
    (135) varAsig -> varYVals . MENOSEQ valoresAsig
    (136) varAsig -> varYVals . = valoresAsig

    MULEQ           shift and go to state 51
    DIVEQ           shift and go to state 52
    MASEQ           shift and go to state 48
    MENOSEQ         shift and go to state 46
    =               shift and go to state 49


state 134

    (49) funcInt -> LENGTH ( valores . )

    )               shift and go to state 226


state 135

    (192) and -> and AND . eq
    (194) and -> and AND . valoresBool
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (51) funcBool -> . COLINEALES ( valores , valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (56) vec -> . [ elem ]
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (221) parenBool -> . ( expBool )
    (124) reg -> . { campos }
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )

    BOOL            shift and go to state 165
    (               shift and go to state 205
    AND             reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    ?               reduce using rule 186 (valoresBool -> .)
    ,               reduce using rule 186 (valoresBool -> .)
    ]               reduce using rule 186 (valoresBool -> .)
    )               reduce using rule 186 (valoresBool -> .)
    ;               reduce using rule 186 (valoresBool -> .)
    :               reduce using rule 186 (valoresBool -> .)
    }               reduce using rule 186 (valoresBool -> .)
    INT             shift and go to state 208
    FLOAT           shift and go to state 209
    COLINEALES      shift and go to state 4
    ID              shift and go to state 206
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 159
    NOT             shift and go to state 94
    [               shift and go to state 20
    CAPITALIZAR     shift and go to state 28
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73

    funcBool                       shift and go to state 150
    funcInt                        shift and go to state 202
    menor                          shift and go to state 65
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 227
    mayor                          shift and go to state 97
    valoresBool                    shift and go to state 228
    eMat                           shift and go to state 204
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 210
    exp                            shift and go to state 95
    varYVals                       shift and go to state 229
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 169

state 136

    (57) elem -> valores , . elem
    (57) elem -> . valores , elem
    (58) elem -> . valores
    (59) valores -> . eMat
    (60) valores -> . expBool
    (61) valores -> . funcReturn
    (62) valores -> . reg
    (63) valores -> . INT
    (64) valores -> . FLOAT
    (65) valores -> . STRING
    (66) valores -> . BOOL
    (67) valores -> . varYVals
    (68) valores -> . varsOps
    (69) valores -> . vec
    (70) valores -> . ternario
    (71) valores -> . atributos
    (72) valores -> . RES
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (124) reg -> . { campos }
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (56) vec -> . [ elem ]
    (78) ternario -> . ternarioMat
    (79) ternario -> . ternarioBool
    (80) ternario -> . ( ternarioMat )
    (81) ternario -> . ( ternarioBool )
    (82) ternario -> . ternarioVars
    (83) ternario -> . ( ternarioVars )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 87
    FLOAT           shift and go to state 89
    STRING          shift and go to state 70
    BOOL            shift and go to state 92
    RES             shift and go to state 62
    {               shift and go to state 96
    ID              shift and go to state 85
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 72
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    ?               reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    ternario                       shift and go to state 60
    funcBool                       shift and go to state 61
    funcInt                        shift and go to state 63
    elem                           shift and go to state 230
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 69
    eMat                           shift and go to state 71
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 75
    vec                            shift and go to state 76
    paren                          shift and go to state 83
    reg                            shift and go to state 77
    expBool                        shift and go to state 78
    ternarioBool                   shift and go to state 79
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 86
    funcReturn                     shift and go to state 88
    valores                        shift and go to state 64
    p                              shift and go to state 91
    varsOps                        shift and go to state 93
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 66
    varYVals                       shift and go to state 98
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 99

state 137

    (161) p -> valoresMat % . exp
    (167) p -> valoresMat % . valoresMat
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (56) vec -> . [ elem ]

    INT             shift and go to state 175
    FLOAT           shift and go to state 174
    STRING          shift and go to state 159
    (               shift and go to state 232
    -               shift and go to state 74
    +               shift and go to state 73
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 96
    [               shift and go to state 20

    valoresMat                     shift and go to state 231
    funcString                     shift and go to state 162
    funcInt                        shift and go to state 170
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33
    iSing                          shift and go to state 80
    exp                            shift and go to state 233
    paren                          shift and go to state 83
    varYVals                       shift and go to state 177
    reg                            shift and go to state 158
    atributos                      shift and go to state 169
    varsOps                        shift and go to state 176

state 138

    (148) eMat -> valoresMat + . p
    (150) eMat -> valoresMat + . valoresMat
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (56) vec -> . [ elem ]

    INT             shift and go to state 175
    FLOAT           shift and go to state 174
    STRING          shift and go to state 159
    (               shift and go to state 232
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    -               shift and go to state 74
    +               shift and go to state 73
    {               shift and go to state 96
    [               shift and go to state 20

    valoresMat                     shift and go to state 234
    funcString                     shift and go to state 162
    funcInt                        shift and go to state 170
    p                              shift and go to state 235
    vec                            shift and go to state 33
    varsOps                        shift and go to state 176
    exp                            shift and go to state 95
    vecVal                         shift and go to state 8
    paren                          shift and go to state 83
    varYVals                       shift and go to state 177
    reg                            shift and go to state 158
    atributos                      shift and go to state 169
    iSing                          shift and go to state 80

state 139

    (159) p -> valoresMat * . exp
    (165) p -> valoresMat * . valoresMat
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (56) vec -> . [ elem ]

    INT             shift and go to state 175
    FLOAT           shift and go to state 174
    STRING          shift and go to state 159
    (               shift and go to state 232
    -               shift and go to state 74
    +               shift and go to state 73
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 96
    [               shift and go to state 20

    valoresMat                     shift and go to state 236
    funcString                     shift and go to state 162
    funcInt                        shift and go to state 170
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33
    iSing                          shift and go to state 80
    exp                            shift and go to state 237
    paren                          shift and go to state 83
    varYVals                       shift and go to state 177
    reg                            shift and go to state 158
    atributos                      shift and go to state 169
    varsOps                        shift and go to state 176

state 140

    (153) eMat -> valoresMat - . p
    (155) eMat -> valoresMat - . valoresMat
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (56) vec -> . [ elem ]

    INT             shift and go to state 175
    FLOAT           shift and go to state 174
    STRING          shift and go to state 159
    (               shift and go to state 232
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    -               shift and go to state 74
    +               shift and go to state 73
    {               shift and go to state 96
    [               shift and go to state 20

    valoresMat                     shift and go to state 238
    funcString                     shift and go to state 162
    funcInt                        shift and go to state 170
    p                              shift and go to state 239
    vec                            shift and go to state 33
    varsOps                        shift and go to state 176
    exp                            shift and go to state 95
    vecVal                         shift and go to state 8
    paren                          shift and go to state 83
    varYVals                       shift and go to state 177
    reg                            shift and go to state 158
    atributos                      shift and go to state 169
    iSing                          shift and go to state 80

state 141

    (160) p -> valoresMat / . exp
    (166) p -> valoresMat / . valoresMat
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (56) vec -> . [ elem ]

    INT             shift and go to state 175
    FLOAT           shift and go to state 174
    STRING          shift and go to state 159
    (               shift and go to state 232
    -               shift and go to state 74
    +               shift and go to state 73
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 96
    [               shift and go to state 20

    valoresMat                     shift and go to state 240
    funcString                     shift and go to state 162
    funcInt                        shift and go to state 170
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33
    iSing                          shift and go to state 80
    exp                            shift and go to state 241
    paren                          shift and go to state 83
    varYVals                       shift and go to state 177
    reg                            shift and go to state 158
    atributos                      shift and go to state 169
    varsOps                        shift and go to state 176

state 142

    (170) exp -> valoresMat ^ . iSing
    (172) exp -> valoresMat ^ . valoresMat
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (56) vec -> . [ elem ]

    -               shift and go to state 74
    +               shift and go to state 73
    INT             shift and go to state 175
    FLOAT           shift and go to state 174
    STRING          shift and go to state 159
    (               shift and go to state 232
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 96
    [               shift and go to state 20

    funcString                     shift and go to state 162
    funcInt                        shift and go to state 170
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33
    iSing                          shift and go to state 243
    valoresMat                     shift and go to state 242
    paren                          shift and go to state 83
    varYVals                       shift and go to state 177
    reg                            shift and go to state 158
    atributos                      shift and go to state 169
    varsOps                        shift and go to state 176

state 143

    (197) eq -> eq EQEQ . mayor
    (201) eq -> eq EQEQ . tCompare
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (221) parenBool -> . ( expBool )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (56) vec -> . [ elem ]
    (124) reg -> . { campos }
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )

    INT             shift and go to state 208
    FLOAT           shift and go to state 209
    (               shift and go to state 245
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 206
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    NOT             shift and go to state 94
    STRING          shift and go to state 159
    CAPITALIZAR     shift and go to state 28
    [               shift and go to state 20
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73

    funcInt                        shift and go to state 202
    menor                          shift and go to state 65
    mayor                          shift and go to state 244
    valoresMat                     shift and go to state 67
    eMat                           shift and go to state 204
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 246
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 247
    exp                            shift and go to state 95
    varYVals                       shift and go to state 248
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 169

state 144

    (198) eq -> eq DISTINTO . mayor
    (202) eq -> eq DISTINTO . tCompare
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (221) parenBool -> . ( expBool )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (56) vec -> . [ elem ]
    (124) reg -> . { campos }
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )

    INT             shift and go to state 208
    FLOAT           shift and go to state 209
    (               shift and go to state 245
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 206
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    NOT             shift and go to state 94
    STRING          shift and go to state 159
    CAPITALIZAR     shift and go to state 28
    [               shift and go to state 20
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73

    funcInt                        shift and go to state 202
    menor                          shift and go to state 65
    mayor                          shift and go to state 249
    valoresMat                     shift and go to state 67
    eMat                           shift and go to state 204
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 250
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 247
    exp                            shift and go to state 95
    varYVals                       shift and go to state 248
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 169

state 145

    (193) and -> valoresBool AND . eq
    (195) and -> valoresBool AND . valoresBool
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (51) funcBool -> . COLINEALES ( valores , valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (56) vec -> . [ elem ]
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (221) parenBool -> . ( expBool )
    (124) reg -> . { campos }
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )

    BOOL            shift and go to state 165
    (               shift and go to state 205
    AND             reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    ?               reduce using rule 186 (valoresBool -> .)
    ,               reduce using rule 186 (valoresBool -> .)
    ]               reduce using rule 186 (valoresBool -> .)
    )               reduce using rule 186 (valoresBool -> .)
    ;               reduce using rule 186 (valoresBool -> .)
    :               reduce using rule 186 (valoresBool -> .)
    }               reduce using rule 186 (valoresBool -> .)
    INT             shift and go to state 208
    FLOAT           shift and go to state 209
    COLINEALES      shift and go to state 4
    ID              shift and go to state 206
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 159
    NOT             shift and go to state 94
    [               shift and go to state 20
    CAPITALIZAR     shift and go to state 28
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73

    funcBool                       shift and go to state 150
    funcInt                        shift and go to state 202
    menor                          shift and go to state 65
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 251
    mayor                          shift and go to state 97
    valoresBool                    shift and go to state 252
    eMat                           shift and go to state 204
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 210
    exp                            shift and go to state 95
    varYVals                       shift and go to state 229
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 169

state 146

    (188) expBool -> valoresBool OR . and
    (190) expBool -> valoresBool OR . valoresBool
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (51) funcBool -> . COLINEALES ( valores , valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (56) vec -> . [ elem ]
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (221) parenBool -> . ( expBool )
    (124) reg -> . { campos }
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )

    BOOL            shift and go to state 165
    (               shift and go to state 205
    AND             reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    ?               reduce using rule 186 (valoresBool -> .)
    ,               reduce using rule 186 (valoresBool -> .)
    ]               reduce using rule 186 (valoresBool -> .)
    )               reduce using rule 186 (valoresBool -> .)
    ;               reduce using rule 186 (valoresBool -> .)
    :               reduce using rule 186 (valoresBool -> .)
    }               reduce using rule 186 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 206
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    INT             shift and go to state 208
    FLOAT           shift and go to state 209
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    [               shift and go to state 20
    STRING          shift and go to state 159
    NOT             shift and go to state 94
    CAPITALIZAR     shift and go to state 28
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73

    and                            shift and go to state 253
    funcBool                       shift and go to state 150
    funcInt                        shift and go to state 202
    menor                          shift and go to state 65
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    mayor                          shift and go to state 97
    valoresBool                    shift and go to state 254
    eMat                           shift and go to state 204
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 210
    exp                            shift and go to state 95
    varYVals                       shift and go to state 211
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 169

state 147

    (103) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (110) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (84) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (105) valoresTernarioMat -> . INT
    (106) valoresTernarioMat -> . FLOAT
    (107) valoresTernarioMat -> . funcInt
    (108) valoresTernarioMat -> . STRING
    (109) valoresTernarioMat -> . eMat
    (112) valoresTernarioBool -> . BOOL
    (113) valoresTernarioBool -> . funcBool
    (114) valoresTernarioBool -> . ternarioBool
    (115) valoresTernarioBool -> . ( ternarioBool )
    (116) valoresTernarioBool -> . expBool
    (94) valoresTernarioVars -> . reg
    (95) valoresTernarioVars -> . vec
    (96) valoresTernarioVars -> . ternarioVars
    (97) valoresTernarioVars -> . ( ternarioVars )
    (98) valoresTernarioVars -> . atributos
    (99) valoresTernarioVars -> . varsOps
    (100) valoresTernarioVars -> . varYVals
    (101) valoresTernarioVars -> . res
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (124) reg -> . { campos }
    (56) vec -> . [ elem ]
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (102) res -> . RES
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 268
    FLOAT           shift and go to state 269
    STRING          shift and go to state 265
    BOOL            shift and go to state 271
    (               shift and go to state 273
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    {               shift and go to state 96
    [               shift and go to state 20
    ID              shift and go to state 161
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 257
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 28
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 259
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 261
    vecVal                         shift and go to state 8
    vec                            shift and go to state 262
    paren                          shift and go to state 83
    reg                            shift and go to state 263
    valoresTernarioVars            shift and go to state 264
    expBool                        shift and go to state 270
    ternarioBool                   shift and go to state 266
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    valoresTernarioMat             shift and go to state 267
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 272
    res                            shift and go to state 255
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 275
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 276

state 148

    (147) eMat -> eMat + . p
    (149) eMat -> eMat + . valoresMat
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (56) vec -> . [ elem ]

    INT             shift and go to state 175
    FLOAT           shift and go to state 174
    STRING          shift and go to state 159
    (               shift and go to state 232
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    -               shift and go to state 74
    +               shift and go to state 73
    {               shift and go to state 96
    [               shift and go to state 20

    valoresMat                     shift and go to state 277
    funcString                     shift and go to state 162
    funcInt                        shift and go to state 170
    p                              shift and go to state 278
    vec                            shift and go to state 33
    varsOps                        shift and go to state 176
    exp                            shift and go to state 95
    vecVal                         shift and go to state 8
    paren                          shift and go to state 83
    varYVals                       shift and go to state 177
    reg                            shift and go to state 158
    atributos                      shift and go to state 169
    iSing                          shift and go to state 80

state 149

    (152) eMat -> eMat - . p
    (154) eMat -> eMat - . valoresMat
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (56) vec -> . [ elem ]

    INT             shift and go to state 175
    FLOAT           shift and go to state 174
    STRING          shift and go to state 159
    (               shift and go to state 232
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    -               shift and go to state 74
    +               shift and go to state 73
    {               shift and go to state 96
    [               shift and go to state 20

    valoresMat                     shift and go to state 279
    funcString                     shift and go to state 162
    funcInt                        shift and go to state 170
    p                              shift and go to state 280
    vec                            shift and go to state 33
    varsOps                        shift and go to state 176
    exp                            shift and go to state 95
    vecVal                         shift and go to state 8
    paren                          shift and go to state 83
    varYVals                       shift and go to state 177
    reg                            shift and go to state 158
    atributos                      shift and go to state 169
    iSing                          shift and go to state 80

state 150

    (182) valoresBool -> funcBool .

    ?               reduce using rule 182 (valoresBool -> funcBool .)
    OR              reduce using rule 182 (valoresBool -> funcBool .)
    AND             reduce using rule 182 (valoresBool -> funcBool .)
    ,               reduce using rule 182 (valoresBool -> funcBool .)
    ]               reduce using rule 182 (valoresBool -> funcBool .)
    )               reduce using rule 182 (valoresBool -> funcBool .)
    ;               reduce using rule 182 (valoresBool -> funcBool .)
    :               reduce using rule 182 (valoresBool -> funcBool .)
    }               reduce using rule 182 (valoresBool -> funcBool .)
    EQEQ            reduce using rule 182 (valoresBool -> funcBool .)
    DISTINTO        reduce using rule 182 (valoresBool -> funcBool .)


state 151

    (140) valoresMat -> funcInt .
    (210) tCompare -> funcInt .

    )               reduce using rule 140 (valoresMat -> funcInt .)
    +               reduce using rule 140 (valoresMat -> funcInt .)
    -               reduce using rule 140 (valoresMat -> funcInt .)
    *               reduce using rule 140 (valoresMat -> funcInt .)
    /               reduce using rule 140 (valoresMat -> funcInt .)
    %               reduce using rule 140 (valoresMat -> funcInt .)
    ^               reduce using rule 140 (valoresMat -> funcInt .)
    EQEQ            reduce using rule 210 (tCompare -> funcInt .)
    DISTINTO        reduce using rule 210 (tCompare -> funcInt .)
    >               reduce using rule 210 (tCompare -> funcInt .)
    <               reduce using rule 210 (tCompare -> funcInt .)


state 152

    (180) paren -> ( valoresMat . )
    (148) eMat -> valoresMat . + p
    (150) eMat -> valoresMat . + valoresMat
    (153) eMat -> valoresMat . - p
    (155) eMat -> valoresMat . - valoresMat
    (159) p -> valoresMat . * exp
    (160) p -> valoresMat . / exp
    (161) p -> valoresMat . % exp
    (165) p -> valoresMat . * valoresMat
    (166) p -> valoresMat . / valoresMat
    (167) p -> valoresMat . % valoresMat
    (170) exp -> valoresMat . ^ iSing
    (172) exp -> valoresMat . ^ valoresMat

    )               shift and go to state 281
    +               shift and go to state 138
    -               shift and go to state 140
    *               shift and go to state 139
    /               shift and go to state 141
    %               shift and go to state 137
    ^               shift and go to state 142


state 153

    (103) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (110) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (84) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (188) expBool -> valoresBool . OR and
    (190) expBool -> valoresBool . OR valoresBool
    (193) and -> valoresBool . AND eq
    (195) and -> valoresBool . AND valoresBool

    ?               shift and go to state 147
    OR              shift and go to state 146
    AND             shift and go to state 145


state 154

    (179) paren -> ( eMat . )
    (147) eMat -> eMat . + p
    (149) eMat -> eMat . + valoresMat
    (152) eMat -> eMat . - p
    (154) eMat -> eMat . - valoresMat
    (206) tCompare -> eMat .

    )               shift and go to state 282
    +               shift and go to state 148
    -               shift and go to state 149
    EQEQ            reduce using rule 206 (tCompare -> eMat .)
    DISTINTO        reduce using rule 206 (tCompare -> eMat .)
    >               reduce using rule 206 (tCompare -> eMat .)
    <               reduce using rule 206 (tCompare -> eMat .)


state 155

    (146) valoresMat -> ( . ternarioMat )
    (185) valoresBool -> ( . ternarioBool )
    (212) tCompare -> ( . ternarioBool )
    (213) tCompare -> ( . ternarioMat )
    (179) paren -> ( . eMat )
    (180) paren -> ( . valoresMat )
    (221) parenBool -> ( . expBool )
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (56) vec -> . [ elem ]
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 163
    FLOAT           shift and go to state 164
    STRING          shift and go to state 159
    (               shift and go to state 155
    BOOL            shift and go to state 165
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73
    [               shift and go to state 20
    NOT             shift and go to state 94

    and                            shift and go to state 59
    funcBool                       shift and go to state 150
    funcInt                        shift and go to state 151
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 152
    eq                             shift and go to state 68
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 154
    valoresBool                    shift and go to state 283
    ternarioMat                    shift and go to state 284
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    varsOps                        shift and go to state 157
    exp                            shift and go to state 95
    ternarioBool                   shift and go to state 285
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    expBool                        shift and go to state 286
    varYVals                       shift and go to state 168
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 169

state 156

    (80) ternario -> ( ternarioMat . )
    (146) valoresMat -> ( ternarioMat . )
    (213) tCompare -> ( ternarioMat . )

    )               shift and go to state 287


state 157

    (145) valoresMat -> varsOps .
    (184) valoresBool -> varsOps .
    (207) tCompare -> varsOps .

    )               reduce using rule 145 (valoresMat -> varsOps .)
    +               reduce using rule 145 (valoresMat -> varsOps .)
    -               reduce using rule 145 (valoresMat -> varsOps .)
    *               reduce using rule 145 (valoresMat -> varsOps .)
    /               reduce using rule 145 (valoresMat -> varsOps .)
    %               reduce using rule 145 (valoresMat -> varsOps .)
    ^               reduce using rule 145 (valoresMat -> varsOps .)
    ?               reduce using rule 184 (valoresBool -> varsOps .)
    OR              reduce using rule 184 (valoresBool -> varsOps .)
    AND             reduce using rule 184 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 207 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 207 (tCompare -> varsOps .)
    >               reduce using rule 207 (tCompare -> varsOps .)
    <               reduce using rule 207 (tCompare -> varsOps .)


state 158

    (74) atributos -> reg . . valoresCampos

    .               shift and go to state 180


state 159

    (143) valoresMat -> STRING .

    )               reduce using rule 143 (valoresMat -> STRING .)
    +               reduce using rule 143 (valoresMat -> STRING .)
    -               reduce using rule 143 (valoresMat -> STRING .)
    *               reduce using rule 143 (valoresMat -> STRING .)
    /               reduce using rule 143 (valoresMat -> STRING .)
    %               reduce using rule 143 (valoresMat -> STRING .)
    ^               reduce using rule 143 (valoresMat -> STRING .)
    ,               reduce using rule 143 (valoresMat -> STRING .)
    ]               reduce using rule 143 (valoresMat -> STRING .)
    EQEQ            reduce using rule 143 (valoresMat -> STRING .)
    DISTINTO        reduce using rule 143 (valoresMat -> STRING .)
    >               reduce using rule 143 (valoresMat -> STRING .)
    <               reduce using rule 143 (valoresMat -> STRING .)
    ;               reduce using rule 143 (valoresMat -> STRING .)
    AND             reduce using rule 143 (valoresMat -> STRING .)
    OR              reduce using rule 143 (valoresMat -> STRING .)
    ?               reduce using rule 143 (valoresMat -> STRING .)
    :               reduce using rule 143 (valoresMat -> STRING .)
    }               reduce using rule 143 (valoresMat -> STRING .)


state 160

    (81) ternario -> ( ternarioBool . )
    (185) valoresBool -> ( ternarioBool . )
    (212) tCompare -> ( ternarioBool . )

    )               shift and go to state 288


state 161

    (73) atributos -> ID . . valoresCampos
    (117) varYVals -> ID .
    (120) vecVal -> ID . m
    (122) m -> . [ valores ]
    (123) m -> . [ valores ] m

    .               shift and go to state 187
    MASMAS          reduce using rule 117 (varYVals -> ID .)
    MENOSMENOS      reduce using rule 117 (varYVals -> ID .)
    +               reduce using rule 117 (varYVals -> ID .)
    -               reduce using rule 117 (varYVals -> ID .)
    *               reduce using rule 117 (varYVals -> ID .)
    /               reduce using rule 117 (varYVals -> ID .)
    %               reduce using rule 117 (varYVals -> ID .)
    ^               reduce using rule 117 (varYVals -> ID .)
    ?               reduce using rule 117 (varYVals -> ID .)
    OR              reduce using rule 117 (varYVals -> ID .)
    AND             reduce using rule 117 (varYVals -> ID .)
    EQEQ            reduce using rule 117 (varYVals -> ID .)
    DISTINTO        reduce using rule 117 (varYVals -> ID .)
    >               reduce using rule 117 (varYVals -> ID .)
    <               reduce using rule 117 (varYVals -> ID .)
    :               reduce using rule 117 (varYVals -> ID .)
    )               reduce using rule 117 (varYVals -> ID .)
    ,               reduce using rule 117 (varYVals -> ID .)
    ]               reduce using rule 117 (varYVals -> ID .)
    ;               reduce using rule 117 (varYVals -> ID .)
    }               reduce using rule 117 (varYVals -> ID .)
    [               shift and go to state 102

    m                              shift and go to state 100

state 162

    (142) valoresMat -> funcString .

    )               reduce using rule 142 (valoresMat -> funcString .)
    +               reduce using rule 142 (valoresMat -> funcString .)
    -               reduce using rule 142 (valoresMat -> funcString .)
    *               reduce using rule 142 (valoresMat -> funcString .)
    /               reduce using rule 142 (valoresMat -> funcString .)
    %               reduce using rule 142 (valoresMat -> funcString .)
    ^               reduce using rule 142 (valoresMat -> funcString .)
    ,               reduce using rule 142 (valoresMat -> funcString .)
    ]               reduce using rule 142 (valoresMat -> funcString .)
    EQEQ            reduce using rule 142 (valoresMat -> funcString .)
    DISTINTO        reduce using rule 142 (valoresMat -> funcString .)
    >               reduce using rule 142 (valoresMat -> funcString .)
    <               reduce using rule 142 (valoresMat -> funcString .)
    ;               reduce using rule 142 (valoresMat -> funcString .)
    AND             reduce using rule 142 (valoresMat -> funcString .)
    OR              reduce using rule 142 (valoresMat -> funcString .)
    ?               reduce using rule 142 (valoresMat -> funcString .)
    :               reduce using rule 142 (valoresMat -> funcString .)
    }               reduce using rule 142 (valoresMat -> funcString .)


state 163

    (138) valoresMat -> INT .
    (209) tCompare -> INT .

    )               reduce using rule 138 (valoresMat -> INT .)
    +               reduce using rule 138 (valoresMat -> INT .)
    -               reduce using rule 138 (valoresMat -> INT .)
    *               reduce using rule 138 (valoresMat -> INT .)
    /               reduce using rule 138 (valoresMat -> INT .)
    %               reduce using rule 138 (valoresMat -> INT .)
    ^               reduce using rule 138 (valoresMat -> INT .)
    EQEQ            reduce using rule 209 (tCompare -> INT .)
    DISTINTO        reduce using rule 209 (tCompare -> INT .)
    >               reduce using rule 209 (tCompare -> INT .)
    <               reduce using rule 209 (tCompare -> INT .)


state 164

    (139) valoresMat -> FLOAT .
    (211) tCompare -> FLOAT .

    )               reduce using rule 139 (valoresMat -> FLOAT .)
    +               reduce using rule 139 (valoresMat -> FLOAT .)
    -               reduce using rule 139 (valoresMat -> FLOAT .)
    *               reduce using rule 139 (valoresMat -> FLOAT .)
    /               reduce using rule 139 (valoresMat -> FLOAT .)
    %               reduce using rule 139 (valoresMat -> FLOAT .)
    ^               reduce using rule 139 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 211 (tCompare -> FLOAT .)
    DISTINTO        reduce using rule 211 (tCompare -> FLOAT .)
    >               reduce using rule 211 (tCompare -> FLOAT .)
    <               reduce using rule 211 (tCompare -> FLOAT .)


state 165

    (181) valoresBool -> BOOL .

    ?               reduce using rule 181 (valoresBool -> BOOL .)
    OR              reduce using rule 181 (valoresBool -> BOOL .)
    AND             reduce using rule 181 (valoresBool -> BOOL .)
    ,               reduce using rule 181 (valoresBool -> BOOL .)
    ]               reduce using rule 181 (valoresBool -> BOOL .)
    )               reduce using rule 181 (valoresBool -> BOOL .)
    ;               reduce using rule 181 (valoresBool -> BOOL .)
    :               reduce using rule 181 (valoresBool -> BOOL .)
    }               reduce using rule 181 (valoresBool -> BOOL .)
    EQEQ            reduce using rule 181 (valoresBool -> BOOL .)
    DISTINTO        reduce using rule 181 (valoresBool -> BOOL .)


state 166

    (221) parenBool -> ( expBool . )
    (104) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (111) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (89) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (187) expBool -> expBool . OR and
    (189) expBool -> expBool . OR valoresBool

    )               shift and go to state 289
    ?               shift and go to state 182
    OR              shift and go to state 181


state 167

    (83) ternario -> ( ternarioVars . )

    )               shift and go to state 290


state 168

    (144) valoresMat -> varYVals .
    (183) valoresBool -> varYVals .
    (129) varsOps -> varYVals . MASMAS
    (130) varsOps -> varYVals . MENOSMENOS
    (208) tCompare -> varYVals .

    )               reduce using rule 144 (valoresMat -> varYVals .)
    +               reduce using rule 144 (valoresMat -> varYVals .)
    -               reduce using rule 144 (valoresMat -> varYVals .)
    *               reduce using rule 144 (valoresMat -> varYVals .)
    /               reduce using rule 144 (valoresMat -> varYVals .)
    %               reduce using rule 144 (valoresMat -> varYVals .)
    ^               reduce using rule 144 (valoresMat -> varYVals .)
    ?               reduce using rule 183 (valoresBool -> varYVals .)
    OR              reduce using rule 183 (valoresBool -> varYVals .)
    AND             reduce using rule 183 (valoresBool -> varYVals .)
    MASMAS          shift and go to state 50
    MENOSMENOS      shift and go to state 47
    EQEQ            reduce using rule 208 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 208 (tCompare -> varYVals .)
    >               reduce using rule 208 (tCompare -> varYVals .)
    <               reduce using rule 208 (tCompare -> varYVals .)


state 169

    (141) valoresMat -> atributos .

    )               reduce using rule 141 (valoresMat -> atributos .)
    +               reduce using rule 141 (valoresMat -> atributos .)
    -               reduce using rule 141 (valoresMat -> atributos .)
    *               reduce using rule 141 (valoresMat -> atributos .)
    /               reduce using rule 141 (valoresMat -> atributos .)
    %               reduce using rule 141 (valoresMat -> atributos .)
    ^               reduce using rule 141 (valoresMat -> atributos .)
    ,               reduce using rule 141 (valoresMat -> atributos .)
    ]               reduce using rule 141 (valoresMat -> atributos .)
    EQEQ            reduce using rule 141 (valoresMat -> atributos .)
    DISTINTO        reduce using rule 141 (valoresMat -> atributos .)
    >               reduce using rule 141 (valoresMat -> atributos .)
    <               reduce using rule 141 (valoresMat -> atributos .)
    ;               reduce using rule 141 (valoresMat -> atributos .)
    AND             reduce using rule 141 (valoresMat -> atributos .)
    OR              reduce using rule 141 (valoresMat -> atributos .)
    ?               reduce using rule 141 (valoresMat -> atributos .)
    :               reduce using rule 141 (valoresMat -> atributos .)
    }               reduce using rule 141 (valoresMat -> atributos .)


state 170

    (140) valoresMat -> funcInt .

    ^               reduce using rule 140 (valoresMat -> funcInt .)
    *               reduce using rule 140 (valoresMat -> funcInt .)
    /               reduce using rule 140 (valoresMat -> funcInt .)
    %               reduce using rule 140 (valoresMat -> funcInt .)
    +               reduce using rule 140 (valoresMat -> funcInt .)
    -               reduce using rule 140 (valoresMat -> funcInt .)
    ,               reduce using rule 140 (valoresMat -> funcInt .)
    ]               reduce using rule 140 (valoresMat -> funcInt .)
    EQEQ            reduce using rule 140 (valoresMat -> funcInt .)
    DISTINTO        reduce using rule 140 (valoresMat -> funcInt .)
    >               reduce using rule 140 (valoresMat -> funcInt .)
    <               reduce using rule 140 (valoresMat -> funcInt .)
    )               reduce using rule 140 (valoresMat -> funcInt .)
    ;               reduce using rule 140 (valoresMat -> funcInt .)
    AND             reduce using rule 140 (valoresMat -> funcInt .)
    OR              reduce using rule 140 (valoresMat -> funcInt .)
    ?               reduce using rule 140 (valoresMat -> funcInt .)
    :               reduce using rule 140 (valoresMat -> funcInt .)
    }               reduce using rule 140 (valoresMat -> funcInt .)


state 171

    (177) iSing -> + valoresMat .

    ^               reduce using rule 177 (iSing -> + valoresMat .)
    *               reduce using rule 177 (iSing -> + valoresMat .)
    /               reduce using rule 177 (iSing -> + valoresMat .)
    %               reduce using rule 177 (iSing -> + valoresMat .)
    +               reduce using rule 177 (iSing -> + valoresMat .)
    -               reduce using rule 177 (iSing -> + valoresMat .)
    ,               reduce using rule 177 (iSing -> + valoresMat .)
    ]               reduce using rule 177 (iSing -> + valoresMat .)
    EQEQ            reduce using rule 177 (iSing -> + valoresMat .)
    DISTINTO        reduce using rule 177 (iSing -> + valoresMat .)
    >               reduce using rule 177 (iSing -> + valoresMat .)
    <               reduce using rule 177 (iSing -> + valoresMat .)
    ;               reduce using rule 177 (iSing -> + valoresMat .)
    )               reduce using rule 177 (iSing -> + valoresMat .)
    AND             reduce using rule 177 (iSing -> + valoresMat .)
    OR              reduce using rule 177 (iSing -> + valoresMat .)
    ?               reduce using rule 177 (iSing -> + valoresMat .)
    :               reduce using rule 177 (iSing -> + valoresMat .)
    }               reduce using rule 177 (iSing -> + valoresMat .)


state 172

    (179) paren -> ( . eMat )
    (180) paren -> ( . valoresMat )
    (146) valoresMat -> ( . ternarioMat )
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (51) funcBool -> . COLINEALES ( valores , valores )
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (56) vec -> . [ elem ]
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 163
    FLOAT           shift and go to state 164
    STRING          shift and go to state 159
    (               shift and go to state 292
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    BOOL            shift and go to state 165
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    {               shift and go to state 96
    COLINEALES      shift and go to state 4
    -               shift and go to state 74
    +               shift and go to state 73
    [               shift and go to state 20
    NOT             shift and go to state 94

    and                            shift and go to state 59
    funcBool                       shift and go to state 150
    funcInt                        shift and go to state 151
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 152
    eq                             shift and go to state 68
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 154
    atributos                      shift and go to state 169
    valoresBool                    shift and go to state 291
    ternarioMat                    shift and go to state 293
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    iSing                          shift and go to state 80
    exp                            shift and go to state 95
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 157
    varYVals                       shift and go to state 294
    parenBool                      shift and go to state 81
    expBool                        shift and go to state 295

state 173

    (175) iSing -> + paren .

    ^               reduce using rule 175 (iSing -> + paren .)
    *               reduce using rule 175 (iSing -> + paren .)
    /               reduce using rule 175 (iSing -> + paren .)
    %               reduce using rule 175 (iSing -> + paren .)
    +               reduce using rule 175 (iSing -> + paren .)
    -               reduce using rule 175 (iSing -> + paren .)
    ,               reduce using rule 175 (iSing -> + paren .)
    ]               reduce using rule 175 (iSing -> + paren .)
    EQEQ            reduce using rule 175 (iSing -> + paren .)
    DISTINTO        reduce using rule 175 (iSing -> + paren .)
    >               reduce using rule 175 (iSing -> + paren .)
    <               reduce using rule 175 (iSing -> + paren .)
    ;               reduce using rule 175 (iSing -> + paren .)
    )               reduce using rule 175 (iSing -> + paren .)
    AND             reduce using rule 175 (iSing -> + paren .)
    OR              reduce using rule 175 (iSing -> + paren .)
    ?               reduce using rule 175 (iSing -> + paren .)
    :               reduce using rule 175 (iSing -> + paren .)
    }               reduce using rule 175 (iSing -> + paren .)


state 174

    (139) valoresMat -> FLOAT .

    ^               reduce using rule 139 (valoresMat -> FLOAT .)
    *               reduce using rule 139 (valoresMat -> FLOAT .)
    /               reduce using rule 139 (valoresMat -> FLOAT .)
    %               reduce using rule 139 (valoresMat -> FLOAT .)
    +               reduce using rule 139 (valoresMat -> FLOAT .)
    -               reduce using rule 139 (valoresMat -> FLOAT .)
    ,               reduce using rule 139 (valoresMat -> FLOAT .)
    ]               reduce using rule 139 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 139 (valoresMat -> FLOAT .)
    DISTINTO        reduce using rule 139 (valoresMat -> FLOAT .)
    >               reduce using rule 139 (valoresMat -> FLOAT .)
    <               reduce using rule 139 (valoresMat -> FLOAT .)
    )               reduce using rule 139 (valoresMat -> FLOAT .)
    ;               reduce using rule 139 (valoresMat -> FLOAT .)
    AND             reduce using rule 139 (valoresMat -> FLOAT .)
    OR              reduce using rule 139 (valoresMat -> FLOAT .)
    ?               reduce using rule 139 (valoresMat -> FLOAT .)
    :               reduce using rule 139 (valoresMat -> FLOAT .)
    }               reduce using rule 139 (valoresMat -> FLOAT .)


state 175

    (138) valoresMat -> INT .

    ^               reduce using rule 138 (valoresMat -> INT .)
    *               reduce using rule 138 (valoresMat -> INT .)
    /               reduce using rule 138 (valoresMat -> INT .)
    %               reduce using rule 138 (valoresMat -> INT .)
    +               reduce using rule 138 (valoresMat -> INT .)
    -               reduce using rule 138 (valoresMat -> INT .)
    ,               reduce using rule 138 (valoresMat -> INT .)
    ]               reduce using rule 138 (valoresMat -> INT .)
    EQEQ            reduce using rule 138 (valoresMat -> INT .)
    DISTINTO        reduce using rule 138 (valoresMat -> INT .)
    >               reduce using rule 138 (valoresMat -> INT .)
    <               reduce using rule 138 (valoresMat -> INT .)
    )               reduce using rule 138 (valoresMat -> INT .)
    ;               reduce using rule 138 (valoresMat -> INT .)
    AND             reduce using rule 138 (valoresMat -> INT .)
    OR              reduce using rule 138 (valoresMat -> INT .)
    ?               reduce using rule 138 (valoresMat -> INT .)
    :               reduce using rule 138 (valoresMat -> INT .)
    }               reduce using rule 138 (valoresMat -> INT .)


state 176

    (145) valoresMat -> varsOps .

    ^               reduce using rule 145 (valoresMat -> varsOps .)
    *               reduce using rule 145 (valoresMat -> varsOps .)
    /               reduce using rule 145 (valoresMat -> varsOps .)
    %               reduce using rule 145 (valoresMat -> varsOps .)
    +               reduce using rule 145 (valoresMat -> varsOps .)
    -               reduce using rule 145 (valoresMat -> varsOps .)
    ,               reduce using rule 145 (valoresMat -> varsOps .)
    ]               reduce using rule 145 (valoresMat -> varsOps .)
    EQEQ            reduce using rule 145 (valoresMat -> varsOps .)
    DISTINTO        reduce using rule 145 (valoresMat -> varsOps .)
    >               reduce using rule 145 (valoresMat -> varsOps .)
    <               reduce using rule 145 (valoresMat -> varsOps .)
    )               reduce using rule 145 (valoresMat -> varsOps .)
    ;               reduce using rule 145 (valoresMat -> varsOps .)
    AND             reduce using rule 145 (valoresMat -> varsOps .)
    OR              reduce using rule 145 (valoresMat -> varsOps .)
    ?               reduce using rule 145 (valoresMat -> varsOps .)
    :               reduce using rule 145 (valoresMat -> varsOps .)
    }               reduce using rule 145 (valoresMat -> varsOps .)


state 177

    (144) valoresMat -> varYVals .
    (129) varsOps -> varYVals . MASMAS
    (130) varsOps -> varYVals . MENOSMENOS

    ^               reduce using rule 144 (valoresMat -> varYVals .)
    *               reduce using rule 144 (valoresMat -> varYVals .)
    /               reduce using rule 144 (valoresMat -> varYVals .)
    %               reduce using rule 144 (valoresMat -> varYVals .)
    +               reduce using rule 144 (valoresMat -> varYVals .)
    -               reduce using rule 144 (valoresMat -> varYVals .)
    ,               reduce using rule 144 (valoresMat -> varYVals .)
    ]               reduce using rule 144 (valoresMat -> varYVals .)
    EQEQ            reduce using rule 144 (valoresMat -> varYVals .)
    DISTINTO        reduce using rule 144 (valoresMat -> varYVals .)
    >               reduce using rule 144 (valoresMat -> varYVals .)
    <               reduce using rule 144 (valoresMat -> varYVals .)
    )               reduce using rule 144 (valoresMat -> varYVals .)
    ;               reduce using rule 144 (valoresMat -> varYVals .)
    AND             reduce using rule 144 (valoresMat -> varYVals .)
    OR              reduce using rule 144 (valoresMat -> varYVals .)
    ?               reduce using rule 144 (valoresMat -> varYVals .)
    :               reduce using rule 144 (valoresMat -> varYVals .)
    }               reduce using rule 144 (valoresMat -> varYVals .)
    MASMAS          shift and go to state 50
    MENOSMENOS      shift and go to state 47


state 178

    (176) iSing -> - valoresMat .

    ^               reduce using rule 176 (iSing -> - valoresMat .)
    *               reduce using rule 176 (iSing -> - valoresMat .)
    /               reduce using rule 176 (iSing -> - valoresMat .)
    %               reduce using rule 176 (iSing -> - valoresMat .)
    +               reduce using rule 176 (iSing -> - valoresMat .)
    -               reduce using rule 176 (iSing -> - valoresMat .)
    ,               reduce using rule 176 (iSing -> - valoresMat .)
    ]               reduce using rule 176 (iSing -> - valoresMat .)
    EQEQ            reduce using rule 176 (iSing -> - valoresMat .)
    DISTINTO        reduce using rule 176 (iSing -> - valoresMat .)
    >               reduce using rule 176 (iSing -> - valoresMat .)
    <               reduce using rule 176 (iSing -> - valoresMat .)
    ;               reduce using rule 176 (iSing -> - valoresMat .)
    )               reduce using rule 176 (iSing -> - valoresMat .)
    AND             reduce using rule 176 (iSing -> - valoresMat .)
    OR              reduce using rule 176 (iSing -> - valoresMat .)
    ?               reduce using rule 176 (iSing -> - valoresMat .)
    :               reduce using rule 176 (iSing -> - valoresMat .)
    }               reduce using rule 176 (iSing -> - valoresMat .)


state 179

    (174) iSing -> - paren .

    ^               reduce using rule 174 (iSing -> - paren .)
    *               reduce using rule 174 (iSing -> - paren .)
    /               reduce using rule 174 (iSing -> - paren .)
    %               reduce using rule 174 (iSing -> - paren .)
    +               reduce using rule 174 (iSing -> - paren .)
    -               reduce using rule 174 (iSing -> - paren .)
    ,               reduce using rule 174 (iSing -> - paren .)
    ]               reduce using rule 174 (iSing -> - paren .)
    EQEQ            reduce using rule 174 (iSing -> - paren .)
    DISTINTO        reduce using rule 174 (iSing -> - paren .)
    >               reduce using rule 174 (iSing -> - paren .)
    <               reduce using rule 174 (iSing -> - paren .)
    ;               reduce using rule 174 (iSing -> - paren .)
    )               reduce using rule 174 (iSing -> - paren .)
    AND             reduce using rule 174 (iSing -> - paren .)
    OR              reduce using rule 174 (iSing -> - paren .)
    ?               reduce using rule 174 (iSing -> - paren .)
    :               reduce using rule 174 (iSing -> - paren .)
    }               reduce using rule 174 (iSing -> - paren .)


state 180

    (74) atributos -> reg . . valoresCampos
    (75) valoresCampos -> . varYVals
    (76) valoresCampos -> . END
    (77) valoresCampos -> . BEGIN
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (56) vec -> . [ elem ]

    END             shift and go to state 297
    BEGIN           shift and go to state 296
    ID              shift and go to state 55
    [               shift and go to state 20

    vecVal                         shift and go to state 8
    vec                            shift and go to state 33
    valoresCampos                  shift and go to state 298
    varYVals                       shift and go to state 299

state 181

    (187) expBool -> expBool OR . and
    (189) expBool -> expBool OR . valoresBool
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (51) funcBool -> . COLINEALES ( valores , valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (56) vec -> . [ elem ]
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (221) parenBool -> . ( expBool )
    (124) reg -> . { campos }
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )

    BOOL            shift and go to state 165
    (               shift and go to state 205
    AND             reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    ?               reduce using rule 186 (valoresBool -> .)
    ,               reduce using rule 186 (valoresBool -> .)
    ]               reduce using rule 186 (valoresBool -> .)
    )               reduce using rule 186 (valoresBool -> .)
    ;               reduce using rule 186 (valoresBool -> .)
    :               reduce using rule 186 (valoresBool -> .)
    }               reduce using rule 186 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 206
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    INT             shift and go to state 208
    FLOAT           shift and go to state 209
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    [               shift and go to state 20
    STRING          shift and go to state 159
    NOT             shift and go to state 94
    CAPITALIZAR     shift and go to state 28
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73

    and                            shift and go to state 300
    funcBool                       shift and go to state 150
    funcInt                        shift and go to state 202
    menor                          shift and go to state 65
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    mayor                          shift and go to state 97
    valoresBool                    shift and go to state 301
    eMat                           shift and go to state 204
    atributos                      shift and go to state 169
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 210
    exp                            shift and go to state 95
    varYVals                       shift and go to state 211
    parenBool                      shift and go to state 81

state 182

    (104) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (111) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (89) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (105) valoresTernarioMat -> . INT
    (106) valoresTernarioMat -> . FLOAT
    (107) valoresTernarioMat -> . funcInt
    (108) valoresTernarioMat -> . STRING
    (109) valoresTernarioMat -> . eMat
    (112) valoresTernarioBool -> . BOOL
    (113) valoresTernarioBool -> . funcBool
    (114) valoresTernarioBool -> . ternarioBool
    (115) valoresTernarioBool -> . ( ternarioBool )
    (116) valoresTernarioBool -> . expBool
    (94) valoresTernarioVars -> . reg
    (95) valoresTernarioVars -> . vec
    (96) valoresTernarioVars -> . ternarioVars
    (97) valoresTernarioVars -> . ( ternarioVars )
    (98) valoresTernarioVars -> . atributos
    (99) valoresTernarioVars -> . varsOps
    (100) valoresTernarioVars -> . varYVals
    (101) valoresTernarioVars -> . res
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (124) reg -> . { campos }
    (56) vec -> . [ elem ]
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (102) res -> . RES
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 268
    FLOAT           shift and go to state 269
    STRING          shift and go to state 265
    BOOL            shift and go to state 271
    (               shift and go to state 273
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    {               shift and go to state 96
    [               shift and go to state 20
    ID              shift and go to state 161
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 257
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 28
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 259
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 302
    vecVal                         shift and go to state 8
    vec                            shift and go to state 262
    paren                          shift and go to state 83
    reg                            shift and go to state 263
    valoresTernarioVars            shift and go to state 303
    expBool                        shift and go to state 270
    ternarioBool                   shift and go to state 266
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    valoresTernarioMat             shift and go to state 304
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 272
    res                            shift and go to state 255
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 275
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 276

state 183

    (200) eq -> tCompare DISTINTO . mayor
    (204) eq -> tCompare DISTINTO . tCompare
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (221) parenBool -> . ( expBool )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (56) vec -> . [ elem ]
    (124) reg -> . { campos }
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )

    INT             shift and go to state 208
    FLOAT           shift and go to state 209
    (               shift and go to state 245
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 206
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    NOT             shift and go to state 94
    STRING          shift and go to state 159
    CAPITALIZAR     shift and go to state 28
    [               shift and go to state 20
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73

    funcInt                        shift and go to state 202
    menor                          shift and go to state 65
    mayor                          shift and go to state 305
    valoresMat                     shift and go to state 67
    eMat                           shift and go to state 204
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 306
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 247
    exp                            shift and go to state 95
    varYVals                       shift and go to state 248
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 169

state 184

    (199) eq -> tCompare EQEQ . mayor
    (203) eq -> tCompare EQEQ . tCompare
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (221) parenBool -> . ( expBool )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (56) vec -> . [ elem ]
    (124) reg -> . { campos }
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )

    INT             shift and go to state 208
    FLOAT           shift and go to state 209
    (               shift and go to state 245
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 206
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    NOT             shift and go to state 94
    STRING          shift and go to state 159
    CAPITALIZAR     shift and go to state 28
    [               shift and go to state 20
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73

    funcInt                        shift and go to state 202
    menor                          shift and go to state 65
    mayor                          shift and go to state 307
    valoresMat                     shift and go to state 67
    eMat                           shift and go to state 204
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 308
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 247
    exp                            shift and go to state 95
    varYVals                       shift and go to state 248
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 169

state 185

    (216) menor -> tCompare < . tCompare
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (56) vec -> . [ elem ]
    (124) reg -> . { campos }
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )

    INT             shift and go to state 208
    FLOAT           shift and go to state 209
    (               shift and go to state 309
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 206
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 159
    CAPITALIZAR     shift and go to state 28
    [               shift and go to state 20
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73

    funcInt                        shift and go to state 202
    valoresMat                     shift and go to state 67
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 204
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    varsOps                        shift and go to state 247
    exp                            shift and go to state 95
    tCompare                       shift and go to state 310
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    iSing                          shift and go to state 80
    varYVals                       shift and go to state 248
    atributos                      shift and go to state 169

state 186

    (214) mayor -> tCompare > . tCompare
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (56) vec -> . [ elem ]
    (124) reg -> . { campos }
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )

    INT             shift and go to state 208
    FLOAT           shift and go to state 209
    (               shift and go to state 309
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 206
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 159
    CAPITALIZAR     shift and go to state 28
    [               shift and go to state 20
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73

    funcInt                        shift and go to state 202
    valoresMat                     shift and go to state 67
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 204
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    varsOps                        shift and go to state 247
    exp                            shift and go to state 95
    tCompare                       shift and go to state 311
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    iSing                          shift and go to state 80
    varYVals                       shift and go to state 248
    atributos                      shift and go to state 169

state 187

    (73) atributos -> ID . . valoresCampos
    (75) valoresCampos -> . varYVals
    (76) valoresCampos -> . END
    (77) valoresCampos -> . BEGIN
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (56) vec -> . [ elem ]

    END             shift and go to state 297
    BEGIN           shift and go to state 296
    ID              shift and go to state 55
    [               shift and go to state 20

    vec                            shift and go to state 33
    valoresCampos                  shift and go to state 312
    varYVals                       shift and go to state 299
    vecVal                         shift and go to state 8

state 188

    (56) vec -> [ elem ] .

    [               reduce using rule 56 (vec -> [ elem ] .)
    :               reduce using rule 56 (vec -> [ elem ] .)
    ,               reduce using rule 56 (vec -> [ elem ] .)
    ]               reduce using rule 56 (vec -> [ elem ] .)
    )               reduce using rule 56 (vec -> [ elem ] .)
    ;               reduce using rule 56 (vec -> [ elem ] .)
    }               reduce using rule 56 (vec -> [ elem ] .)


state 189

    (158) p -> p % . exp
    (164) p -> p % . valoresMat
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (56) vec -> . [ elem ]

    INT             shift and go to state 175
    FLOAT           shift and go to state 174
    STRING          shift and go to state 159
    (               shift and go to state 232
    -               shift and go to state 74
    +               shift and go to state 73
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 96
    [               shift and go to state 20

    exp                            shift and go to state 314
    funcString                     shift and go to state 162
    funcInt                        shift and go to state 170
    vec                            shift and go to state 33
    iSing                          shift and go to state 80
    valoresMat                     shift and go to state 313
    vecVal                         shift and go to state 8
    paren                          shift and go to state 83
    varYVals                       shift and go to state 177
    reg                            shift and go to state 158
    atributos                      shift and go to state 169
    varsOps                        shift and go to state 176

state 190

    (156) p -> p * . exp
    (162) p -> p * . valoresMat
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (56) vec -> . [ elem ]

    INT             shift and go to state 175
    FLOAT           shift and go to state 174
    STRING          shift and go to state 159
    (               shift and go to state 232
    -               shift and go to state 74
    +               shift and go to state 73
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 96
    [               shift and go to state 20

    exp                            shift and go to state 316
    funcString                     shift and go to state 162
    funcInt                        shift and go to state 170
    vec                            shift and go to state 33
    iSing                          shift and go to state 80
    valoresMat                     shift and go to state 315
    vecVal                         shift and go to state 8
    paren                          shift and go to state 83
    varYVals                       shift and go to state 177
    reg                            shift and go to state 158
    atributos                      shift and go to state 169
    varsOps                        shift and go to state 176

state 191

    (157) p -> p / . exp
    (163) p -> p / . valoresMat
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (56) vec -> . [ elem ]

    INT             shift and go to state 175
    FLOAT           shift and go to state 174
    STRING          shift and go to state 159
    (               shift and go to state 232
    -               shift and go to state 74
    +               shift and go to state 73
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 96
    [               shift and go to state 20

    exp                            shift and go to state 318
    funcString                     shift and go to state 162
    funcInt                        shift and go to state 170
    vec                            shift and go to state 33
    iSing                          shift and go to state 80
    valoresMat                     shift and go to state 317
    vecVal                         shift and go to state 8
    paren                          shift and go to state 83
    varYVals                       shift and go to state 177
    reg                            shift and go to state 158
    atributos                      shift and go to state 169
    varsOps                        shift and go to state 176

state 192

    (219) not -> NOT valoresBool .

    EQEQ            reduce using rule 219 (not -> NOT valoresBool .)
    DISTINTO        reduce using rule 219 (not -> NOT valoresBool .)
    AND             reduce using rule 219 (not -> NOT valoresBool .)
    )               reduce using rule 219 (not -> NOT valoresBool .)
    ?               reduce using rule 219 (not -> NOT valoresBool .)
    OR              reduce using rule 219 (not -> NOT valoresBool .)
    ;               reduce using rule 219 (not -> NOT valoresBool .)
    :               reduce using rule 219 (not -> NOT valoresBool .)
    ,               reduce using rule 219 (not -> NOT valoresBool .)
    ]               reduce using rule 219 (not -> NOT valoresBool .)
    }               reduce using rule 219 (not -> NOT valoresBool .)


state 193

    (185) valoresBool -> ( . ternarioBool )
    (221) parenBool -> ( . expBool )
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (56) vec -> . [ elem ]
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (221) parenBool -> . ( expBool )
    (124) reg -> . { campos }
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )

    BOOL            shift and go to state 165
    (               shift and go to state 205
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 206
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    INT             shift and go to state 208
    FLOAT           shift and go to state 209
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 159
    NOT             shift and go to state 94
    CAPITALIZAR     shift and go to state 28
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73

    and                            shift and go to state 59
    atributos                      shift and go to state 169
    funcBool                       shift and go to state 150
    funcInt                        shift and go to state 202
    menor                          shift and go to state 65
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 319
    eMat                           shift and go to state 204
    mayor                          shift and go to state 97
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    iSing                          shift and go to state 80
    ternarioBool                   shift and go to state 320
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 210
    exp                            shift and go to state 95
    varYVals                       shift and go to state 211
    parenBool                      shift and go to state 81
    expBool                        shift and go to state 321

state 194

    (218) not -> NOT not .

    EQEQ            reduce using rule 218 (not -> NOT not .)
    DISTINTO        reduce using rule 218 (not -> NOT not .)
    AND             reduce using rule 218 (not -> NOT not .)
    )               reduce using rule 218 (not -> NOT not .)
    ?               reduce using rule 218 (not -> NOT not .)
    OR              reduce using rule 218 (not -> NOT not .)
    ;               reduce using rule 218 (not -> NOT not .)
    :               reduce using rule 218 (not -> NOT not .)
    ,               reduce using rule 218 (not -> NOT not .)
    ]               reduce using rule 218 (not -> NOT not .)
    }               reduce using rule 218 (not -> NOT not .)


state 195

    (184) valoresBool -> varsOps .

    EQEQ            reduce using rule 184 (valoresBool -> varsOps .)
    DISTINTO        reduce using rule 184 (valoresBool -> varsOps .)
    AND             reduce using rule 184 (valoresBool -> varsOps .)
    OR              reduce using rule 184 (valoresBool -> varsOps .)
    ?               reduce using rule 184 (valoresBool -> varsOps .)
    ,               reduce using rule 184 (valoresBool -> varsOps .)
    ]               reduce using rule 184 (valoresBool -> varsOps .)
    )               reduce using rule 184 (valoresBool -> varsOps .)
    ;               reduce using rule 184 (valoresBool -> varsOps .)
    :               reduce using rule 184 (valoresBool -> varsOps .)
    }               reduce using rule 184 (valoresBool -> varsOps .)


state 196

    (183) valoresBool -> varYVals .
    (129) varsOps -> varYVals . MASMAS
    (130) varsOps -> varYVals . MENOSMENOS

    EQEQ            reduce using rule 183 (valoresBool -> varYVals .)
    DISTINTO        reduce using rule 183 (valoresBool -> varYVals .)
    AND             reduce using rule 183 (valoresBool -> varYVals .)
    OR              reduce using rule 183 (valoresBool -> varYVals .)
    ?               reduce using rule 183 (valoresBool -> varYVals .)
    ,               reduce using rule 183 (valoresBool -> varYVals .)
    ]               reduce using rule 183 (valoresBool -> varYVals .)
    )               reduce using rule 183 (valoresBool -> varYVals .)
    ;               reduce using rule 183 (valoresBool -> varYVals .)
    :               reduce using rule 183 (valoresBool -> varYVals .)
    }               reduce using rule 183 (valoresBool -> varYVals .)
    MASMAS          shift and go to state 50
    MENOSMENOS      shift and go to state 47


state 197

    (169) exp -> exp ^ . iSing
    (171) exp -> exp ^ . valoresMat
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (56) vec -> . [ elem ]

    -               shift and go to state 74
    +               shift and go to state 73
    INT             shift and go to state 175
    FLOAT           shift and go to state 174
    STRING          shift and go to state 159
    (               shift and go to state 232
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 96
    [               shift and go to state 20

    funcString                     shift and go to state 162
    funcInt                        shift and go to state 170
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33
    iSing                          shift and go to state 323
    valoresMat                     shift and go to state 322
    paren                          shift and go to state 83
    varYVals                       shift and go to state 177
    reg                            shift and go to state 158
    atributos                      shift and go to state 169
    varsOps                        shift and go to state 176

state 198

    (124) reg -> { campos . }

    }               shift and go to state 324


state 199

    (125) campos -> ID . : valores , campos
    (126) campos -> ID . : valores

    :               shift and go to state 325


state 200

    (137) varAsig -> ID . ID . = valoresAsig

    =               shift and go to state 326


state 201

    (122) m -> [ valores . ]
    (123) m -> [ valores . ] m

    ]               shift and go to state 327


state 202

    (210) tCompare -> funcInt .
    (140) valoresMat -> funcInt .

    EQEQ            reduce using rule 210 (tCompare -> funcInt .)
    DISTINTO        reduce using rule 210 (tCompare -> funcInt .)
    >               reduce using rule 210 (tCompare -> funcInt .)
    <               reduce using rule 210 (tCompare -> funcInt .)
    AND             reduce using rule 210 (tCompare -> funcInt .)
    OR              reduce using rule 210 (tCompare -> funcInt .)
    ?               reduce using rule 210 (tCompare -> funcInt .)
    ,               reduce using rule 210 (tCompare -> funcInt .)
    ]               reduce using rule 210 (tCompare -> funcInt .)
    )               reduce using rule 210 (tCompare -> funcInt .)
    ;               reduce using rule 210 (tCompare -> funcInt .)
    :               reduce using rule 210 (tCompare -> funcInt .)
    }               reduce using rule 210 (tCompare -> funcInt .)
    +               reduce using rule 140 (valoresMat -> funcInt .)
    -               reduce using rule 140 (valoresMat -> funcInt .)
    *               reduce using rule 140 (valoresMat -> funcInt .)
    /               reduce using rule 140 (valoresMat -> funcInt .)
    %               reduce using rule 140 (valoresMat -> funcInt .)
    ^               reduce using rule 140 (valoresMat -> funcInt .)


state 203

    (36) cosaBooleana -> valoresBool .
    (188) expBool -> valoresBool . OR and
    (190) expBool -> valoresBool . OR valoresBool
    (193) and -> valoresBool . AND eq
    (195) and -> valoresBool . AND valoresBool

    )               reduce using rule 36 (cosaBooleana -> valoresBool .)
    OR              shift and go to state 146
    AND             shift and go to state 145


state 204

    (206) tCompare -> eMat .
    (147) eMat -> eMat . + p
    (149) eMat -> eMat . + valoresMat
    (152) eMat -> eMat . - p
    (154) eMat -> eMat . - valoresMat

    EQEQ            reduce using rule 206 (tCompare -> eMat .)
    DISTINTO        reduce using rule 206 (tCompare -> eMat .)
    >               reduce using rule 206 (tCompare -> eMat .)
    <               reduce using rule 206 (tCompare -> eMat .)
    AND             reduce using rule 206 (tCompare -> eMat .)
    OR              reduce using rule 206 (tCompare -> eMat .)
    ?               reduce using rule 206 (tCompare -> eMat .)
    ,               reduce using rule 206 (tCompare -> eMat .)
    ]               reduce using rule 206 (tCompare -> eMat .)
    )               reduce using rule 206 (tCompare -> eMat .)
    ;               reduce using rule 206 (tCompare -> eMat .)
    :               reduce using rule 206 (tCompare -> eMat .)
    }               reduce using rule 206 (tCompare -> eMat .)
    +               shift and go to state 148
    -               shift and go to state 149


state 205

    (185) valoresBool -> ( . ternarioBool )
    (212) tCompare -> ( . ternarioBool )
    (213) tCompare -> ( . ternarioMat )
    (146) valoresMat -> ( . ternarioMat )
    (221) parenBool -> ( . expBool )
    (179) paren -> ( . eMat )
    (180) paren -> ( . valoresMat )
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (51) funcBool -> . COLINEALES ( valores , valores )
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (56) vec -> . [ elem ]
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 163
    FLOAT           shift and go to state 164
    STRING          shift and go to state 159
    (               shift and go to state 155
    BOOL            shift and go to state 165
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73
    [               shift and go to state 20
    NOT             shift and go to state 94

    and                            shift and go to state 59
    funcBool                       shift and go to state 150
    funcInt                        shift and go to state 151
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 152
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 328
    eMat                           shift and go to state 154
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 329
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    varsOps                        shift and go to state 157
    exp                            shift and go to state 95
    ternarioBool                   shift and go to state 285
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    expBool                        shift and go to state 330
    varYVals                       shift and go to state 168
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 169

state 206

    (117) varYVals -> ID .
    (120) vecVal -> ID . m
    (73) atributos -> ID . . valoresCampos
    (122) m -> . [ valores ]
    (123) m -> . [ valores ] m

    MASMAS          reduce using rule 117 (varYVals -> ID .)
    MENOSMENOS      reduce using rule 117 (varYVals -> ID .)
    >               reduce using rule 117 (varYVals -> ID .)
    <               reduce using rule 117 (varYVals -> ID .)
    EQEQ            reduce using rule 117 (varYVals -> ID .)
    DISTINTO        reduce using rule 117 (varYVals -> ID .)
    AND             reduce using rule 117 (varYVals -> ID .)
    OR              reduce using rule 117 (varYVals -> ID .)
    ?               reduce using rule 117 (varYVals -> ID .)
    ,               reduce using rule 117 (varYVals -> ID .)
    ]               reduce using rule 117 (varYVals -> ID .)
    )               reduce using rule 117 (varYVals -> ID .)
    ;               reduce using rule 117 (varYVals -> ID .)
    :               reduce using rule 117 (varYVals -> ID .)
    }               reduce using rule 117 (varYVals -> ID .)
    +               reduce using rule 117 (varYVals -> ID .)
    -               reduce using rule 117 (varYVals -> ID .)
    *               reduce using rule 117 (varYVals -> ID .)
    /               reduce using rule 117 (varYVals -> ID .)
    %               reduce using rule 117 (varYVals -> ID .)
    ^               reduce using rule 117 (varYVals -> ID .)
    .               shift and go to state 187
    [               shift and go to state 102

    m                              shift and go to state 100

state 207

    (6) lAbierta -> IF ( cosaBooleana . ) linea
    (7) lAbierta -> IF ( cosaBooleana . ) { g } ELSE lAbierta
    (8) lAbierta -> IF ( cosaBooleana . ) lCerrada ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana . ) { g }
    (14) lCerrada -> IF ( cosaBooleana . ) { g } ELSE { g }
    (15) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE { g }
    (16) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana . ) { g } ELSE lCerrada
    (18) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE COMMENT com lCerrada

    )               shift and go to state 331


state 208

    (209) tCompare -> INT .
    (138) valoresMat -> INT .

    EQEQ            reduce using rule 209 (tCompare -> INT .)
    DISTINTO        reduce using rule 209 (tCompare -> INT .)
    >               reduce using rule 209 (tCompare -> INT .)
    <               reduce using rule 209 (tCompare -> INT .)
    AND             reduce using rule 209 (tCompare -> INT .)
    OR              reduce using rule 209 (tCompare -> INT .)
    ?               reduce using rule 209 (tCompare -> INT .)
    ,               reduce using rule 209 (tCompare -> INT .)
    ]               reduce using rule 209 (tCompare -> INT .)
    )               reduce using rule 209 (tCompare -> INT .)
    ;               reduce using rule 209 (tCompare -> INT .)
    :               reduce using rule 209 (tCompare -> INT .)
    }               reduce using rule 209 (tCompare -> INT .)
    +               reduce using rule 138 (valoresMat -> INT .)
    -               reduce using rule 138 (valoresMat -> INT .)
    *               reduce using rule 138 (valoresMat -> INT .)
    /               reduce using rule 138 (valoresMat -> INT .)
    %               reduce using rule 138 (valoresMat -> INT .)
    ^               reduce using rule 138 (valoresMat -> INT .)


state 209

    (211) tCompare -> FLOAT .
    (139) valoresMat -> FLOAT .

    EQEQ            reduce using rule 211 (tCompare -> FLOAT .)
    DISTINTO        reduce using rule 211 (tCompare -> FLOAT .)
    >               reduce using rule 211 (tCompare -> FLOAT .)
    <               reduce using rule 211 (tCompare -> FLOAT .)
    AND             reduce using rule 211 (tCompare -> FLOAT .)
    OR              reduce using rule 211 (tCompare -> FLOAT .)
    ?               reduce using rule 211 (tCompare -> FLOAT .)
    ,               reduce using rule 211 (tCompare -> FLOAT .)
    ]               reduce using rule 211 (tCompare -> FLOAT .)
    )               reduce using rule 211 (tCompare -> FLOAT .)
    ;               reduce using rule 211 (tCompare -> FLOAT .)
    :               reduce using rule 211 (tCompare -> FLOAT .)
    }               reduce using rule 211 (tCompare -> FLOAT .)
    +               reduce using rule 139 (valoresMat -> FLOAT .)
    -               reduce using rule 139 (valoresMat -> FLOAT .)
    *               reduce using rule 139 (valoresMat -> FLOAT .)
    /               reduce using rule 139 (valoresMat -> FLOAT .)
    %               reduce using rule 139 (valoresMat -> FLOAT .)
    ^               reduce using rule 139 (valoresMat -> FLOAT .)


state 210

    (184) valoresBool -> varsOps .
    (207) tCompare -> varsOps .
    (145) valoresMat -> varsOps .

    ?               reduce using rule 184 (valoresBool -> varsOps .)
    OR              reduce using rule 184 (valoresBool -> varsOps .)
    AND             reduce using rule 184 (valoresBool -> varsOps .)
    ,               reduce using rule 184 (valoresBool -> varsOps .)
    ]               reduce using rule 184 (valoresBool -> varsOps .)
    )               reduce using rule 184 (valoresBool -> varsOps .)
    ;               reduce using rule 184 (valoresBool -> varsOps .)
    :               reduce using rule 184 (valoresBool -> varsOps .)
    }               reduce using rule 184 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 207 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 207 (tCompare -> varsOps .)
    >               reduce using rule 207 (tCompare -> varsOps .)
    <               reduce using rule 207 (tCompare -> varsOps .)
    +               reduce using rule 145 (valoresMat -> varsOps .)
    -               reduce using rule 145 (valoresMat -> varsOps .)
    *               reduce using rule 145 (valoresMat -> varsOps .)
    /               reduce using rule 145 (valoresMat -> varsOps .)
    %               reduce using rule 145 (valoresMat -> varsOps .)
    ^               reduce using rule 145 (valoresMat -> varsOps .)


state 211

    (183) valoresBool -> varYVals .
    (129) varsOps -> varYVals . MASMAS
    (130) varsOps -> varYVals . MENOSMENOS
    (208) tCompare -> varYVals .
    (144) valoresMat -> varYVals .

    ?               reduce using rule 183 (valoresBool -> varYVals .)
    OR              reduce using rule 183 (valoresBool -> varYVals .)
    AND             reduce using rule 183 (valoresBool -> varYVals .)
    ,               reduce using rule 183 (valoresBool -> varYVals .)
    ]               reduce using rule 183 (valoresBool -> varYVals .)
    )               reduce using rule 183 (valoresBool -> varYVals .)
    ;               reduce using rule 183 (valoresBool -> varYVals .)
    :               reduce using rule 183 (valoresBool -> varYVals .)
    }               reduce using rule 183 (valoresBool -> varYVals .)
    MASMAS          shift and go to state 50
    MENOSMENOS      shift and go to state 47
    EQEQ            reduce using rule 208 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 208 (tCompare -> varYVals .)
    >               reduce using rule 208 (tCompare -> varYVals .)
    <               reduce using rule 208 (tCompare -> varYVals .)
    +               reduce using rule 144 (valoresMat -> varYVals .)
    -               reduce using rule 144 (valoresMat -> varYVals .)
    *               reduce using rule 144 (valoresMat -> varYVals .)
    /               reduce using rule 144 (valoresMat -> varYVals .)
    %               reduce using rule 144 (valoresMat -> varYVals .)
    ^               reduce using rule 144 (valoresMat -> varYVals .)


state 212

    (35) cosaBooleana -> expBool .
    (187) expBool -> expBool . OR and
    (189) expBool -> expBool . OR valoresBool

    )               reduce using rule 35 (cosaBooleana -> expBool .)
    OR              shift and go to state 181


state 213

    (48) funcInt -> MULTIESCALAR ( valores . , valores param )

    ,               shift and go to state 332


state 214

    (50) funcString -> CAPITALIZAR ( valores . )

    )               shift and go to state 333


state 215

    (24) lCerrada -> loop COMMENT com . lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (132) varAsig -> . varYVals MULEQ valoresAsig
    (133) varAsig -> . varYVals DIVEQ valoresAsig
    (134) varAsig -> . varYVals MASEQ valoresAsig
    (135) varAsig -> . varYVals MENOSEQ valoresAsig
    (136) varAsig -> . varYVals = valoresAsig
    (137) varAsig -> . ID . ID = valoresAsig
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 334
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 39

state 216

    (22) lCerrada -> loop { g . }

    }               shift and go to state 335


state 217

    (12) com -> COMMENT com .

    IF              reduce using rule 12 (com -> COMMENT com .)
    DO              reduce using rule 12 (com -> COMMENT com .)
    RETURN          reduce using rule 12 (com -> COMMENT com .)
    ;               reduce using rule 12 (com -> COMMENT com .)
    WHILE           reduce using rule 12 (com -> COMMENT com .)
    FOR             reduce using rule 12 (com -> COMMENT com .)
    MENOSMENOS      reduce using rule 12 (com -> COMMENT com .)
    MASMAS          reduce using rule 12 (com -> COMMENT com .)
    ID              reduce using rule 12 (com -> COMMENT com .)
    PRINT           reduce using rule 12 (com -> COMMENT com .)
    MULTIESCALAR    reduce using rule 12 (com -> COMMENT com .)
    LENGTH          reduce using rule 12 (com -> COMMENT com .)
    CAPITALIZAR     reduce using rule 12 (com -> COMMENT com .)
    COLINEALES      reduce using rule 12 (com -> COMMENT com .)
    [               reduce using rule 12 (com -> COMMENT com .)


state 218

    (27) lCerrada -> DO COMMENT com lCerrada . WHILE ( valores ) ;

    WHILE           shift and go to state 336


state 219

    (14) lCerrada -> IF ( cosaBooleana . ) { g } ELSE { g }
    (15) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE { g }
    (16) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana . ) { g } ELSE lCerrada
    (18) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE COMMENT com lCerrada

    )               shift and go to state 337


state 220

    (26) lCerrada -> DO lCerrada WHILE ( . valores ) ;
    (59) valores -> . eMat
    (60) valores -> . expBool
    (61) valores -> . funcReturn
    (62) valores -> . reg
    (63) valores -> . INT
    (64) valores -> . FLOAT
    (65) valores -> . STRING
    (66) valores -> . BOOL
    (67) valores -> . varYVals
    (68) valores -> . varsOps
    (69) valores -> . vec
    (70) valores -> . ternario
    (71) valores -> . atributos
    (72) valores -> . RES
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (124) reg -> . { campos }
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (56) vec -> . [ elem ]
    (78) ternario -> . ternarioMat
    (79) ternario -> . ternarioBool
    (80) ternario -> . ( ternarioMat )
    (81) ternario -> . ( ternarioBool )
    (82) ternario -> . ternarioVars
    (83) ternario -> . ( ternarioVars )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 87
    FLOAT           shift and go to state 89
    STRING          shift and go to state 70
    BOOL            shift and go to state 92
    RES             shift and go to state 62
    {               shift and go to state 96
    ID              shift and go to state 85
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 72
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    ?               reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    ternario                       shift and go to state 60
    funcBool                       shift and go to state 61
    funcInt                        shift and go to state 63
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 69
    eMat                           shift and go to state 71
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 75
    vec                            shift and go to state 76
    paren                          shift and go to state 83
    reg                            shift and go to state 77
    expBool                        shift and go to state 78
    ternarioBool                   shift and go to state 79
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 86
    funcReturn                     shift and go to state 88
    valores                        shift and go to state 338
    p                              shift and go to state 91
    varsOps                        shift and go to state 93
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 66
    varYVals                       shift and go to state 98
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 99

state 221

    (25) lCerrada -> DO { g } . WHILE ( valores ) ;

    WHILE           shift and go to state 339


state 222

    (51) funcBool -> COLINEALES ( valores , . valores )
    (59) valores -> . eMat
    (60) valores -> . expBool
    (61) valores -> . funcReturn
    (62) valores -> . reg
    (63) valores -> . INT
    (64) valores -> . FLOAT
    (65) valores -> . STRING
    (66) valores -> . BOOL
    (67) valores -> . varYVals
    (68) valores -> . varsOps
    (69) valores -> . vec
    (70) valores -> . ternario
    (71) valores -> . atributos
    (72) valores -> . RES
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (124) reg -> . { campos }
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (56) vec -> . [ elem ]
    (78) ternario -> . ternarioMat
    (79) ternario -> . ternarioBool
    (80) ternario -> . ( ternarioMat )
    (81) ternario -> . ( ternarioBool )
    (82) ternario -> . ternarioVars
    (83) ternario -> . ( ternarioVars )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 87
    FLOAT           shift and go to state 89
    STRING          shift and go to state 70
    BOOL            shift and go to state 92
    RES             shift and go to state 62
    {               shift and go to state 96
    ID              shift and go to state 85
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 72
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    ?               reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    ternario                       shift and go to state 60
    funcBool                       shift and go to state 61
    funcInt                        shift and go to state 63
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 69
    eMat                           shift and go to state 71
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 75
    vec                            shift and go to state 76
    paren                          shift and go to state 83
    reg                            shift and go to state 77
    expBool                        shift and go to state 78
    ternarioBool                   shift and go to state 79
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 86
    funcReturn                     shift and go to state 88
    valores                        shift and go to state 340
    p                              shift and go to state 91
    varsOps                        shift and go to state 93
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 66
    varYVals                       shift and go to state 98
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 99

state 223

    (33) loop -> WHILE ( valores ) .

    {               reduce using rule 33 (loop -> WHILE ( valores ) .)
    COMMENT         reduce using rule 33 (loop -> WHILE ( valores ) .)
    IF              reduce using rule 33 (loop -> WHILE ( valores ) .)
    DO              reduce using rule 33 (loop -> WHILE ( valores ) .)
    RETURN          reduce using rule 33 (loop -> WHILE ( valores ) .)
    ;               reduce using rule 33 (loop -> WHILE ( valores ) .)
    WHILE           reduce using rule 33 (loop -> WHILE ( valores ) .)
    FOR             reduce using rule 33 (loop -> WHILE ( valores ) .)
    MENOSMENOS      reduce using rule 33 (loop -> WHILE ( valores ) .)
    MASMAS          reduce using rule 33 (loop -> WHILE ( valores ) .)
    ID              reduce using rule 33 (loop -> WHILE ( valores ) .)
    PRINT           reduce using rule 33 (loop -> WHILE ( valores ) .)
    MULTIESCALAR    reduce using rule 33 (loop -> WHILE ( valores ) .)
    LENGTH          reduce using rule 33 (loop -> WHILE ( valores ) .)
    CAPITALIZAR     reduce using rule 33 (loop -> WHILE ( valores ) .)
    COLINEALES      reduce using rule 33 (loop -> WHILE ( valores ) .)
    [               reduce using rule 33 (loop -> WHILE ( valores ) .)


state 224

    (52) funcVoid -> PRINT ( valores ) .

    ;               reduce using rule 52 (funcVoid -> PRINT ( valores ) .)
    )               reduce using rule 52 (funcVoid -> PRINT ( valores ) .)


state 225

    (34) loop -> FOR ( primParam ; . valores ; tercerParam )
    (59) valores -> . eMat
    (60) valores -> . expBool
    (61) valores -> . funcReturn
    (62) valores -> . reg
    (63) valores -> . INT
    (64) valores -> . FLOAT
    (65) valores -> . STRING
    (66) valores -> . BOOL
    (67) valores -> . varYVals
    (68) valores -> . varsOps
    (69) valores -> . vec
    (70) valores -> . ternario
    (71) valores -> . atributos
    (72) valores -> . RES
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (124) reg -> . { campos }
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (56) vec -> . [ elem ]
    (78) ternario -> . ternarioMat
    (79) ternario -> . ternarioBool
    (80) ternario -> . ( ternarioMat )
    (81) ternario -> . ( ternarioBool )
    (82) ternario -> . ternarioVars
    (83) ternario -> . ( ternarioVars )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 87
    FLOAT           shift and go to state 89
    STRING          shift and go to state 70
    BOOL            shift and go to state 92
    RES             shift and go to state 62
    {               shift and go to state 96
    ID              shift and go to state 85
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 72
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    ?               reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    ternario                       shift and go to state 60
    funcBool                       shift and go to state 61
    funcInt                        shift and go to state 63
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 69
    eMat                           shift and go to state 71
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 75
    vec                            shift and go to state 76
    paren                          shift and go to state 83
    reg                            shift and go to state 77
    expBool                        shift and go to state 78
    ternarioBool                   shift and go to state 79
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 86
    funcReturn                     shift and go to state 88
    valores                        shift and go to state 341
    p                              shift and go to state 91
    varsOps                        shift and go to state 93
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 66
    varYVals                       shift and go to state 98
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 99

state 226

    (49) funcInt -> LENGTH ( valores ) .

    ;               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    +               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    -               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    *               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    /               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    %               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    ^               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    EQEQ            reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    DISTINTO        reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    >               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    <               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    )               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    ,               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    AND             reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    OR              reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    ?               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    ]               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    :               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    }               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)


state 227

    (192) and -> and AND eq .
    (197) eq -> eq . EQEQ mayor
    (198) eq -> eq . DISTINTO mayor
    (201) eq -> eq . EQEQ tCompare
    (202) eq -> eq . DISTINTO tCompare

    AND             reduce using rule 192 (and -> and AND eq .)
    )               reduce using rule 192 (and -> and AND eq .)
    ?               reduce using rule 192 (and -> and AND eq .)
    OR              reduce using rule 192 (and -> and AND eq .)
    :               reduce using rule 192 (and -> and AND eq .)
    ,               reduce using rule 192 (and -> and AND eq .)
    ]               reduce using rule 192 (and -> and AND eq .)
    ;               reduce using rule 192 (and -> and AND eq .)
    }               reduce using rule 192 (and -> and AND eq .)
    EQEQ            shift and go to state 143
    DISTINTO        shift and go to state 144


state 228

    (194) and -> and AND valoresBool .

    AND             reduce using rule 194 (and -> and AND valoresBool .)
    )               reduce using rule 194 (and -> and AND valoresBool .)
    ?               reduce using rule 194 (and -> and AND valoresBool .)
    OR              reduce using rule 194 (and -> and AND valoresBool .)
    :               reduce using rule 194 (and -> and AND valoresBool .)
    ,               reduce using rule 194 (and -> and AND valoresBool .)
    ]               reduce using rule 194 (and -> and AND valoresBool .)
    ;               reduce using rule 194 (and -> and AND valoresBool .)
    }               reduce using rule 194 (and -> and AND valoresBool .)


state 229

    (183) valoresBool -> varYVals .
    (208) tCompare -> varYVals .
    (129) varsOps -> varYVals . MASMAS
    (130) varsOps -> varYVals . MENOSMENOS
    (144) valoresMat -> varYVals .

    AND             reduce using rule 183 (valoresBool -> varYVals .)
    OR              reduce using rule 183 (valoresBool -> varYVals .)
    ?               reduce using rule 183 (valoresBool -> varYVals .)
    ,               reduce using rule 183 (valoresBool -> varYVals .)
    ]               reduce using rule 183 (valoresBool -> varYVals .)
    )               reduce using rule 183 (valoresBool -> varYVals .)
    ;               reduce using rule 183 (valoresBool -> varYVals .)
    :               reduce using rule 183 (valoresBool -> varYVals .)
    }               reduce using rule 183 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 208 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 208 (tCompare -> varYVals .)
    >               reduce using rule 208 (tCompare -> varYVals .)
    <               reduce using rule 208 (tCompare -> varYVals .)
    MASMAS          shift and go to state 50
    MENOSMENOS      shift and go to state 47
    +               reduce using rule 144 (valoresMat -> varYVals .)
    -               reduce using rule 144 (valoresMat -> varYVals .)
    *               reduce using rule 144 (valoresMat -> varYVals .)
    /               reduce using rule 144 (valoresMat -> varYVals .)
    %               reduce using rule 144 (valoresMat -> varYVals .)
    ^               reduce using rule 144 (valoresMat -> varYVals .)


state 230

    (57) elem -> valores , elem .

    ]               reduce using rule 57 (elem -> valores , elem .)


state 231

    (167) p -> valoresMat % valoresMat .
    (170) exp -> valoresMat . ^ iSing
    (172) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 167 (p -> valoresMat % valoresMat .)
    /               reduce using rule 167 (p -> valoresMat % valoresMat .)
    %               reduce using rule 167 (p -> valoresMat % valoresMat .)
    )               reduce using rule 167 (p -> valoresMat % valoresMat .)
    +               reduce using rule 167 (p -> valoresMat % valoresMat .)
    -               reduce using rule 167 (p -> valoresMat % valoresMat .)
    EQEQ            reduce using rule 167 (p -> valoresMat % valoresMat .)
    DISTINTO        reduce using rule 167 (p -> valoresMat % valoresMat .)
    >               reduce using rule 167 (p -> valoresMat % valoresMat .)
    <               reduce using rule 167 (p -> valoresMat % valoresMat .)
    ,               reduce using rule 167 (p -> valoresMat % valoresMat .)
    ]               reduce using rule 167 (p -> valoresMat % valoresMat .)
    ;               reduce using rule 167 (p -> valoresMat % valoresMat .)
    AND             reduce using rule 167 (p -> valoresMat % valoresMat .)
    OR              reduce using rule 167 (p -> valoresMat % valoresMat .)
    ?               reduce using rule 167 (p -> valoresMat % valoresMat .)
    :               reduce using rule 167 (p -> valoresMat % valoresMat .)
    }               reduce using rule 167 (p -> valoresMat % valoresMat .)
    ^               shift and go to state 142


state 232

    (146) valoresMat -> ( . ternarioMat )
    (179) paren -> ( . eMat )
    (180) paren -> ( . valoresMat )
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (51) funcBool -> . COLINEALES ( valores , valores )
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (56) vec -> . [ elem ]
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 163
    FLOAT           shift and go to state 164
    STRING          shift and go to state 159
    (               shift and go to state 155
    BOOL            shift and go to state 165
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73
    [               shift and go to state 20
    NOT             shift and go to state 94

    and                            shift and go to state 59
    funcBool                       shift and go to state 150
    funcInt                        shift and go to state 151
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 152
    eq                             shift and go to state 68
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 154
    valoresBool                    shift and go to state 291
    ternarioMat                    shift and go to state 293
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    varsOps                        shift and go to state 157
    exp                            shift and go to state 95
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    expBool                        shift and go to state 295
    varYVals                       shift and go to state 168
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 169

state 233

    (161) p -> valoresMat % exp .
    (169) exp -> exp . ^ iSing
    (171) exp -> exp . ^ valoresMat

    *               reduce using rule 161 (p -> valoresMat % exp .)
    /               reduce using rule 161 (p -> valoresMat % exp .)
    %               reduce using rule 161 (p -> valoresMat % exp .)
    )               reduce using rule 161 (p -> valoresMat % exp .)
    +               reduce using rule 161 (p -> valoresMat % exp .)
    -               reduce using rule 161 (p -> valoresMat % exp .)
    EQEQ            reduce using rule 161 (p -> valoresMat % exp .)
    DISTINTO        reduce using rule 161 (p -> valoresMat % exp .)
    >               reduce using rule 161 (p -> valoresMat % exp .)
    <               reduce using rule 161 (p -> valoresMat % exp .)
    ,               reduce using rule 161 (p -> valoresMat % exp .)
    ]               reduce using rule 161 (p -> valoresMat % exp .)
    ;               reduce using rule 161 (p -> valoresMat % exp .)
    AND             reduce using rule 161 (p -> valoresMat % exp .)
    OR              reduce using rule 161 (p -> valoresMat % exp .)
    ?               reduce using rule 161 (p -> valoresMat % exp .)
    :               reduce using rule 161 (p -> valoresMat % exp .)
    }               reduce using rule 161 (p -> valoresMat % exp .)
    ^               shift and go to state 197


state 234

    (150) eMat -> valoresMat + valoresMat .
    (159) p -> valoresMat . * exp
    (160) p -> valoresMat . / exp
    (161) p -> valoresMat . % exp
    (165) p -> valoresMat . * valoresMat
    (166) p -> valoresMat . / valoresMat
    (167) p -> valoresMat . % valoresMat
    (170) exp -> valoresMat . ^ iSing
    (172) exp -> valoresMat . ^ valoresMat

    +               reduce using rule 150 (eMat -> valoresMat + valoresMat .)
    -               reduce using rule 150 (eMat -> valoresMat + valoresMat .)
    EQEQ            reduce using rule 150 (eMat -> valoresMat + valoresMat .)
    DISTINTO        reduce using rule 150 (eMat -> valoresMat + valoresMat .)
    >               reduce using rule 150 (eMat -> valoresMat + valoresMat .)
    <               reduce using rule 150 (eMat -> valoresMat + valoresMat .)
    ,               reduce using rule 150 (eMat -> valoresMat + valoresMat .)
    }               reduce using rule 150 (eMat -> valoresMat + valoresMat .)
    AND             reduce using rule 150 (eMat -> valoresMat + valoresMat .)
    OR              reduce using rule 150 (eMat -> valoresMat + valoresMat .)
    ?               reduce using rule 150 (eMat -> valoresMat + valoresMat .)
    ]               reduce using rule 150 (eMat -> valoresMat + valoresMat .)
    )               reduce using rule 150 (eMat -> valoresMat + valoresMat .)
    ;               reduce using rule 150 (eMat -> valoresMat + valoresMat .)
    :               reduce using rule 150 (eMat -> valoresMat + valoresMat .)
    *               shift and go to state 139
    /               shift and go to state 141
    %               shift and go to state 137
    ^               shift and go to state 142


state 235

    (148) eMat -> valoresMat + p .
    (156) p -> p . * exp
    (157) p -> p . / exp
    (158) p -> p . % exp
    (162) p -> p . * valoresMat
    (163) p -> p . / valoresMat
    (164) p -> p . % valoresMat

    +               reduce using rule 148 (eMat -> valoresMat + p .)
    -               reduce using rule 148 (eMat -> valoresMat + p .)
    EQEQ            reduce using rule 148 (eMat -> valoresMat + p .)
    DISTINTO        reduce using rule 148 (eMat -> valoresMat + p .)
    >               reduce using rule 148 (eMat -> valoresMat + p .)
    <               reduce using rule 148 (eMat -> valoresMat + p .)
    ,               reduce using rule 148 (eMat -> valoresMat + p .)
    }               reduce using rule 148 (eMat -> valoresMat + p .)
    AND             reduce using rule 148 (eMat -> valoresMat + p .)
    OR              reduce using rule 148 (eMat -> valoresMat + p .)
    ?               reduce using rule 148 (eMat -> valoresMat + p .)
    ]               reduce using rule 148 (eMat -> valoresMat + p .)
    )               reduce using rule 148 (eMat -> valoresMat + p .)
    ;               reduce using rule 148 (eMat -> valoresMat + p .)
    :               reduce using rule 148 (eMat -> valoresMat + p .)
    *               shift and go to state 190
    /               shift and go to state 191
    %               shift and go to state 189


state 236

    (165) p -> valoresMat * valoresMat .
    (170) exp -> valoresMat . ^ iSing
    (172) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 165 (p -> valoresMat * valoresMat .)
    /               reduce using rule 165 (p -> valoresMat * valoresMat .)
    %               reduce using rule 165 (p -> valoresMat * valoresMat .)
    )               reduce using rule 165 (p -> valoresMat * valoresMat .)
    +               reduce using rule 165 (p -> valoresMat * valoresMat .)
    -               reduce using rule 165 (p -> valoresMat * valoresMat .)
    EQEQ            reduce using rule 165 (p -> valoresMat * valoresMat .)
    DISTINTO        reduce using rule 165 (p -> valoresMat * valoresMat .)
    >               reduce using rule 165 (p -> valoresMat * valoresMat .)
    <               reduce using rule 165 (p -> valoresMat * valoresMat .)
    ,               reduce using rule 165 (p -> valoresMat * valoresMat .)
    ]               reduce using rule 165 (p -> valoresMat * valoresMat .)
    ;               reduce using rule 165 (p -> valoresMat * valoresMat .)
    AND             reduce using rule 165 (p -> valoresMat * valoresMat .)
    OR              reduce using rule 165 (p -> valoresMat * valoresMat .)
    ?               reduce using rule 165 (p -> valoresMat * valoresMat .)
    :               reduce using rule 165 (p -> valoresMat * valoresMat .)
    }               reduce using rule 165 (p -> valoresMat * valoresMat .)
    ^               shift and go to state 142


state 237

    (159) p -> valoresMat * exp .
    (169) exp -> exp . ^ iSing
    (171) exp -> exp . ^ valoresMat

    *               reduce using rule 159 (p -> valoresMat * exp .)
    /               reduce using rule 159 (p -> valoresMat * exp .)
    %               reduce using rule 159 (p -> valoresMat * exp .)
    )               reduce using rule 159 (p -> valoresMat * exp .)
    +               reduce using rule 159 (p -> valoresMat * exp .)
    -               reduce using rule 159 (p -> valoresMat * exp .)
    EQEQ            reduce using rule 159 (p -> valoresMat * exp .)
    DISTINTO        reduce using rule 159 (p -> valoresMat * exp .)
    >               reduce using rule 159 (p -> valoresMat * exp .)
    <               reduce using rule 159 (p -> valoresMat * exp .)
    ,               reduce using rule 159 (p -> valoresMat * exp .)
    ]               reduce using rule 159 (p -> valoresMat * exp .)
    ;               reduce using rule 159 (p -> valoresMat * exp .)
    AND             reduce using rule 159 (p -> valoresMat * exp .)
    OR              reduce using rule 159 (p -> valoresMat * exp .)
    ?               reduce using rule 159 (p -> valoresMat * exp .)
    :               reduce using rule 159 (p -> valoresMat * exp .)
    }               reduce using rule 159 (p -> valoresMat * exp .)
    ^               shift and go to state 197


state 238

    (155) eMat -> valoresMat - valoresMat .
    (159) p -> valoresMat . * exp
    (160) p -> valoresMat . / exp
    (161) p -> valoresMat . % exp
    (165) p -> valoresMat . * valoresMat
    (166) p -> valoresMat . / valoresMat
    (167) p -> valoresMat . % valoresMat
    (170) exp -> valoresMat . ^ iSing
    (172) exp -> valoresMat . ^ valoresMat

    +               reduce using rule 155 (eMat -> valoresMat - valoresMat .)
    -               reduce using rule 155 (eMat -> valoresMat - valoresMat .)
    EQEQ            reduce using rule 155 (eMat -> valoresMat - valoresMat .)
    DISTINTO        reduce using rule 155 (eMat -> valoresMat - valoresMat .)
    >               reduce using rule 155 (eMat -> valoresMat - valoresMat .)
    <               reduce using rule 155 (eMat -> valoresMat - valoresMat .)
    ,               reduce using rule 155 (eMat -> valoresMat - valoresMat .)
    }               reduce using rule 155 (eMat -> valoresMat - valoresMat .)
    AND             reduce using rule 155 (eMat -> valoresMat - valoresMat .)
    OR              reduce using rule 155 (eMat -> valoresMat - valoresMat .)
    ?               reduce using rule 155 (eMat -> valoresMat - valoresMat .)
    ]               reduce using rule 155 (eMat -> valoresMat - valoresMat .)
    )               reduce using rule 155 (eMat -> valoresMat - valoresMat .)
    ;               reduce using rule 155 (eMat -> valoresMat - valoresMat .)
    :               reduce using rule 155 (eMat -> valoresMat - valoresMat .)
    *               shift and go to state 139
    /               shift and go to state 141
    %               shift and go to state 137
    ^               shift and go to state 142


state 239

    (153) eMat -> valoresMat - p .
    (156) p -> p . * exp
    (157) p -> p . / exp
    (158) p -> p . % exp
    (162) p -> p . * valoresMat
    (163) p -> p . / valoresMat
    (164) p -> p . % valoresMat

    +               reduce using rule 153 (eMat -> valoresMat - p .)
    -               reduce using rule 153 (eMat -> valoresMat - p .)
    EQEQ            reduce using rule 153 (eMat -> valoresMat - p .)
    DISTINTO        reduce using rule 153 (eMat -> valoresMat - p .)
    >               reduce using rule 153 (eMat -> valoresMat - p .)
    <               reduce using rule 153 (eMat -> valoresMat - p .)
    ,               reduce using rule 153 (eMat -> valoresMat - p .)
    }               reduce using rule 153 (eMat -> valoresMat - p .)
    AND             reduce using rule 153 (eMat -> valoresMat - p .)
    OR              reduce using rule 153 (eMat -> valoresMat - p .)
    ?               reduce using rule 153 (eMat -> valoresMat - p .)
    ]               reduce using rule 153 (eMat -> valoresMat - p .)
    )               reduce using rule 153 (eMat -> valoresMat - p .)
    ;               reduce using rule 153 (eMat -> valoresMat - p .)
    :               reduce using rule 153 (eMat -> valoresMat - p .)
    *               shift and go to state 190
    /               shift and go to state 191
    %               shift and go to state 189


state 240

    (166) p -> valoresMat / valoresMat .
    (170) exp -> valoresMat . ^ iSing
    (172) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 166 (p -> valoresMat / valoresMat .)
    /               reduce using rule 166 (p -> valoresMat / valoresMat .)
    %               reduce using rule 166 (p -> valoresMat / valoresMat .)
    )               reduce using rule 166 (p -> valoresMat / valoresMat .)
    +               reduce using rule 166 (p -> valoresMat / valoresMat .)
    -               reduce using rule 166 (p -> valoresMat / valoresMat .)
    EQEQ            reduce using rule 166 (p -> valoresMat / valoresMat .)
    DISTINTO        reduce using rule 166 (p -> valoresMat / valoresMat .)
    >               reduce using rule 166 (p -> valoresMat / valoresMat .)
    <               reduce using rule 166 (p -> valoresMat / valoresMat .)
    ,               reduce using rule 166 (p -> valoresMat / valoresMat .)
    ]               reduce using rule 166 (p -> valoresMat / valoresMat .)
    ;               reduce using rule 166 (p -> valoresMat / valoresMat .)
    AND             reduce using rule 166 (p -> valoresMat / valoresMat .)
    OR              reduce using rule 166 (p -> valoresMat / valoresMat .)
    ?               reduce using rule 166 (p -> valoresMat / valoresMat .)
    :               reduce using rule 166 (p -> valoresMat / valoresMat .)
    }               reduce using rule 166 (p -> valoresMat / valoresMat .)
    ^               shift and go to state 142


state 241

    (160) p -> valoresMat / exp .
    (169) exp -> exp . ^ iSing
    (171) exp -> exp . ^ valoresMat

    *               reduce using rule 160 (p -> valoresMat / exp .)
    /               reduce using rule 160 (p -> valoresMat / exp .)
    %               reduce using rule 160 (p -> valoresMat / exp .)
    )               reduce using rule 160 (p -> valoresMat / exp .)
    +               reduce using rule 160 (p -> valoresMat / exp .)
    -               reduce using rule 160 (p -> valoresMat / exp .)
    EQEQ            reduce using rule 160 (p -> valoresMat / exp .)
    DISTINTO        reduce using rule 160 (p -> valoresMat / exp .)
    >               reduce using rule 160 (p -> valoresMat / exp .)
    <               reduce using rule 160 (p -> valoresMat / exp .)
    ,               reduce using rule 160 (p -> valoresMat / exp .)
    ]               reduce using rule 160 (p -> valoresMat / exp .)
    ;               reduce using rule 160 (p -> valoresMat / exp .)
    AND             reduce using rule 160 (p -> valoresMat / exp .)
    OR              reduce using rule 160 (p -> valoresMat / exp .)
    ?               reduce using rule 160 (p -> valoresMat / exp .)
    :               reduce using rule 160 (p -> valoresMat / exp .)
    }               reduce using rule 160 (p -> valoresMat / exp .)
    ^               shift and go to state 197


state 242

    (172) exp -> valoresMat ^ valoresMat .

    ^               reduce using rule 172 (exp -> valoresMat ^ valoresMat .)
    *               reduce using rule 172 (exp -> valoresMat ^ valoresMat .)
    /               reduce using rule 172 (exp -> valoresMat ^ valoresMat .)
    %               reduce using rule 172 (exp -> valoresMat ^ valoresMat .)
    +               reduce using rule 172 (exp -> valoresMat ^ valoresMat .)
    -               reduce using rule 172 (exp -> valoresMat ^ valoresMat .)
    EQEQ            reduce using rule 172 (exp -> valoresMat ^ valoresMat .)
    DISTINTO        reduce using rule 172 (exp -> valoresMat ^ valoresMat .)
    >               reduce using rule 172 (exp -> valoresMat ^ valoresMat .)
    <               reduce using rule 172 (exp -> valoresMat ^ valoresMat .)
    AND             reduce using rule 172 (exp -> valoresMat ^ valoresMat .)
    OR              reduce using rule 172 (exp -> valoresMat ^ valoresMat .)
    ?               reduce using rule 172 (exp -> valoresMat ^ valoresMat .)
    ,               reduce using rule 172 (exp -> valoresMat ^ valoresMat .)
    ]               reduce using rule 172 (exp -> valoresMat ^ valoresMat .)
    )               reduce using rule 172 (exp -> valoresMat ^ valoresMat .)
    ;               reduce using rule 172 (exp -> valoresMat ^ valoresMat .)
    :               reduce using rule 172 (exp -> valoresMat ^ valoresMat .)
    }               reduce using rule 172 (exp -> valoresMat ^ valoresMat .)


state 243

    (170) exp -> valoresMat ^ iSing .

    ^               reduce using rule 170 (exp -> valoresMat ^ iSing .)
    *               reduce using rule 170 (exp -> valoresMat ^ iSing .)
    /               reduce using rule 170 (exp -> valoresMat ^ iSing .)
    %               reduce using rule 170 (exp -> valoresMat ^ iSing .)
    +               reduce using rule 170 (exp -> valoresMat ^ iSing .)
    -               reduce using rule 170 (exp -> valoresMat ^ iSing .)
    EQEQ            reduce using rule 170 (exp -> valoresMat ^ iSing .)
    DISTINTO        reduce using rule 170 (exp -> valoresMat ^ iSing .)
    >               reduce using rule 170 (exp -> valoresMat ^ iSing .)
    <               reduce using rule 170 (exp -> valoresMat ^ iSing .)
    AND             reduce using rule 170 (exp -> valoresMat ^ iSing .)
    OR              reduce using rule 170 (exp -> valoresMat ^ iSing .)
    ?               reduce using rule 170 (exp -> valoresMat ^ iSing .)
    ,               reduce using rule 170 (exp -> valoresMat ^ iSing .)
    ]               reduce using rule 170 (exp -> valoresMat ^ iSing .)
    )               reduce using rule 170 (exp -> valoresMat ^ iSing .)
    ;               reduce using rule 170 (exp -> valoresMat ^ iSing .)
    :               reduce using rule 170 (exp -> valoresMat ^ iSing .)
    }               reduce using rule 170 (exp -> valoresMat ^ iSing .)


state 244

    (197) eq -> eq EQEQ mayor .

    EQEQ            reduce using rule 197 (eq -> eq EQEQ mayor .)
    DISTINTO        reduce using rule 197 (eq -> eq EQEQ mayor .)
    AND             reduce using rule 197 (eq -> eq EQEQ mayor .)
    ?               reduce using rule 197 (eq -> eq EQEQ mayor .)
    OR              reduce using rule 197 (eq -> eq EQEQ mayor .)
    )               reduce using rule 197 (eq -> eq EQEQ mayor .)
    :               reduce using rule 197 (eq -> eq EQEQ mayor .)
    ;               reduce using rule 197 (eq -> eq EQEQ mayor .)
    ,               reduce using rule 197 (eq -> eq EQEQ mayor .)
    ]               reduce using rule 197 (eq -> eq EQEQ mayor .)
    }               reduce using rule 197 (eq -> eq EQEQ mayor .)


state 245

    (212) tCompare -> ( . ternarioBool )
    (213) tCompare -> ( . ternarioMat )
    (146) valoresMat -> ( . ternarioMat )
    (221) parenBool -> ( . expBool )
    (179) paren -> ( . eMat )
    (180) paren -> ( . valoresMat )
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (51) funcBool -> . COLINEALES ( valores , valores )
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (56) vec -> . [ elem ]
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 163
    FLOAT           shift and go to state 164
    STRING          shift and go to state 159
    (               shift and go to state 155
    BOOL            shift and go to state 165
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73
    [               shift and go to state 20
    NOT             shift and go to state 94

    and                            shift and go to state 59
    funcBool                       shift and go to state 150
    funcInt                        shift and go to state 151
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 152
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 328
    eMat                           shift and go to state 154
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 329
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    varsOps                        shift and go to state 157
    exp                            shift and go to state 95
    ternarioBool                   shift and go to state 342
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    expBool                        shift and go to state 330
    varYVals                       shift and go to state 168
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 169

state 246

    (201) eq -> eq EQEQ tCompare .
    (214) mayor -> tCompare . > tCompare
    (216) menor -> tCompare . < tCompare

    EQEQ            reduce using rule 201 (eq -> eq EQEQ tCompare .)
    DISTINTO        reduce using rule 201 (eq -> eq EQEQ tCompare .)
    AND             reduce using rule 201 (eq -> eq EQEQ tCompare .)
    ?               reduce using rule 201 (eq -> eq EQEQ tCompare .)
    OR              reduce using rule 201 (eq -> eq EQEQ tCompare .)
    )               reduce using rule 201 (eq -> eq EQEQ tCompare .)
    :               reduce using rule 201 (eq -> eq EQEQ tCompare .)
    ;               reduce using rule 201 (eq -> eq EQEQ tCompare .)
    ,               reduce using rule 201 (eq -> eq EQEQ tCompare .)
    ]               reduce using rule 201 (eq -> eq EQEQ tCompare .)
    }               reduce using rule 201 (eq -> eq EQEQ tCompare .)
    >               shift and go to state 186
    <               shift and go to state 185


state 247

    (207) tCompare -> varsOps .
    (145) valoresMat -> varsOps .

    >               reduce using rule 207 (tCompare -> varsOps .)
    <               reduce using rule 207 (tCompare -> varsOps .)
    EQEQ            reduce using rule 207 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 207 (tCompare -> varsOps .)
    AND             reduce using rule 207 (tCompare -> varsOps .)
    OR              reduce using rule 207 (tCompare -> varsOps .)
    ?               reduce using rule 207 (tCompare -> varsOps .)
    ,               reduce using rule 207 (tCompare -> varsOps .)
    ]               reduce using rule 207 (tCompare -> varsOps .)
    )               reduce using rule 207 (tCompare -> varsOps .)
    ;               reduce using rule 207 (tCompare -> varsOps .)
    :               reduce using rule 207 (tCompare -> varsOps .)
    }               reduce using rule 207 (tCompare -> varsOps .)
    +               reduce using rule 145 (valoresMat -> varsOps .)
    -               reduce using rule 145 (valoresMat -> varsOps .)
    *               reduce using rule 145 (valoresMat -> varsOps .)
    /               reduce using rule 145 (valoresMat -> varsOps .)
    %               reduce using rule 145 (valoresMat -> varsOps .)
    ^               reduce using rule 145 (valoresMat -> varsOps .)


state 248

    (208) tCompare -> varYVals .
    (129) varsOps -> varYVals . MASMAS
    (130) varsOps -> varYVals . MENOSMENOS
    (144) valoresMat -> varYVals .

    >               reduce using rule 208 (tCompare -> varYVals .)
    <               reduce using rule 208 (tCompare -> varYVals .)
    EQEQ            reduce using rule 208 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 208 (tCompare -> varYVals .)
    AND             reduce using rule 208 (tCompare -> varYVals .)
    OR              reduce using rule 208 (tCompare -> varYVals .)
    ?               reduce using rule 208 (tCompare -> varYVals .)
    ,               reduce using rule 208 (tCompare -> varYVals .)
    ]               reduce using rule 208 (tCompare -> varYVals .)
    )               reduce using rule 208 (tCompare -> varYVals .)
    ;               reduce using rule 208 (tCompare -> varYVals .)
    :               reduce using rule 208 (tCompare -> varYVals .)
    }               reduce using rule 208 (tCompare -> varYVals .)
    MASMAS          shift and go to state 50
    MENOSMENOS      shift and go to state 47
    +               reduce using rule 144 (valoresMat -> varYVals .)
    -               reduce using rule 144 (valoresMat -> varYVals .)
    *               reduce using rule 144 (valoresMat -> varYVals .)
    /               reduce using rule 144 (valoresMat -> varYVals .)
    %               reduce using rule 144 (valoresMat -> varYVals .)
    ^               reduce using rule 144 (valoresMat -> varYVals .)


state 249

    (198) eq -> eq DISTINTO mayor .

    EQEQ            reduce using rule 198 (eq -> eq DISTINTO mayor .)
    DISTINTO        reduce using rule 198 (eq -> eq DISTINTO mayor .)
    AND             reduce using rule 198 (eq -> eq DISTINTO mayor .)
    ?               reduce using rule 198 (eq -> eq DISTINTO mayor .)
    OR              reduce using rule 198 (eq -> eq DISTINTO mayor .)
    )               reduce using rule 198 (eq -> eq DISTINTO mayor .)
    :               reduce using rule 198 (eq -> eq DISTINTO mayor .)
    ;               reduce using rule 198 (eq -> eq DISTINTO mayor .)
    ,               reduce using rule 198 (eq -> eq DISTINTO mayor .)
    ]               reduce using rule 198 (eq -> eq DISTINTO mayor .)
    }               reduce using rule 198 (eq -> eq DISTINTO mayor .)


state 250

    (202) eq -> eq DISTINTO tCompare .
    (214) mayor -> tCompare . > tCompare
    (216) menor -> tCompare . < tCompare

    EQEQ            reduce using rule 202 (eq -> eq DISTINTO tCompare .)
    DISTINTO        reduce using rule 202 (eq -> eq DISTINTO tCompare .)
    AND             reduce using rule 202 (eq -> eq DISTINTO tCompare .)
    ?               reduce using rule 202 (eq -> eq DISTINTO tCompare .)
    OR              reduce using rule 202 (eq -> eq DISTINTO tCompare .)
    )               reduce using rule 202 (eq -> eq DISTINTO tCompare .)
    :               reduce using rule 202 (eq -> eq DISTINTO tCompare .)
    ;               reduce using rule 202 (eq -> eq DISTINTO tCompare .)
    ,               reduce using rule 202 (eq -> eq DISTINTO tCompare .)
    ]               reduce using rule 202 (eq -> eq DISTINTO tCompare .)
    }               reduce using rule 202 (eq -> eq DISTINTO tCompare .)
    >               shift and go to state 186
    <               shift and go to state 185


state 251

    (193) and -> valoresBool AND eq .
    (197) eq -> eq . EQEQ mayor
    (198) eq -> eq . DISTINTO mayor
    (201) eq -> eq . EQEQ tCompare
    (202) eq -> eq . DISTINTO tCompare

    AND             reduce using rule 193 (and -> valoresBool AND eq .)
    )               reduce using rule 193 (and -> valoresBool AND eq .)
    ?               reduce using rule 193 (and -> valoresBool AND eq .)
    OR              reduce using rule 193 (and -> valoresBool AND eq .)
    :               reduce using rule 193 (and -> valoresBool AND eq .)
    ,               reduce using rule 193 (and -> valoresBool AND eq .)
    ]               reduce using rule 193 (and -> valoresBool AND eq .)
    ;               reduce using rule 193 (and -> valoresBool AND eq .)
    }               reduce using rule 193 (and -> valoresBool AND eq .)
    EQEQ            shift and go to state 143
    DISTINTO        shift and go to state 144


state 252

    (195) and -> valoresBool AND valoresBool .

    AND             reduce using rule 195 (and -> valoresBool AND valoresBool .)
    )               reduce using rule 195 (and -> valoresBool AND valoresBool .)
    ?               reduce using rule 195 (and -> valoresBool AND valoresBool .)
    OR              reduce using rule 195 (and -> valoresBool AND valoresBool .)
    :               reduce using rule 195 (and -> valoresBool AND valoresBool .)
    ,               reduce using rule 195 (and -> valoresBool AND valoresBool .)
    ]               reduce using rule 195 (and -> valoresBool AND valoresBool .)
    ;               reduce using rule 195 (and -> valoresBool AND valoresBool .)
    }               reduce using rule 195 (and -> valoresBool AND valoresBool .)


state 253

    (188) expBool -> valoresBool OR and .
    (192) and -> and . AND eq
    (194) and -> and . AND valoresBool

    ?               reduce using rule 188 (expBool -> valoresBool OR and .)
    OR              reduce using rule 188 (expBool -> valoresBool OR and .)
    )               reduce using rule 188 (expBool -> valoresBool OR and .)
    :               reduce using rule 188 (expBool -> valoresBool OR and .)
    ,               reduce using rule 188 (expBool -> valoresBool OR and .)
    ]               reduce using rule 188 (expBool -> valoresBool OR and .)
    ;               reduce using rule 188 (expBool -> valoresBool OR and .)
    }               reduce using rule 188 (expBool -> valoresBool OR and .)
    AND             shift and go to state 135


state 254

    (190) expBool -> valoresBool OR valoresBool .
    (193) and -> valoresBool . AND eq
    (195) and -> valoresBool . AND valoresBool

    ?               reduce using rule 190 (expBool -> valoresBool OR valoresBool .)
    OR              reduce using rule 190 (expBool -> valoresBool OR valoresBool .)
    )               reduce using rule 190 (expBool -> valoresBool OR valoresBool .)
    :               reduce using rule 190 (expBool -> valoresBool OR valoresBool .)
    ,               reduce using rule 190 (expBool -> valoresBool OR valoresBool .)
    ]               reduce using rule 190 (expBool -> valoresBool OR valoresBool .)
    ;               reduce using rule 190 (expBool -> valoresBool OR valoresBool .)
    }               reduce using rule 190 (expBool -> valoresBool OR valoresBool .)
    AND             shift and go to state 145


state 255

    (101) valoresTernarioVars -> res .

    ,               reduce using rule 101 (valoresTernarioVars -> res .)
    ]               reduce using rule 101 (valoresTernarioVars -> res .)
    )               reduce using rule 101 (valoresTernarioVars -> res .)
    ;               reduce using rule 101 (valoresTernarioVars -> res .)
    :               reduce using rule 101 (valoresTernarioVars -> res .)
    }               reduce using rule 101 (valoresTernarioVars -> res .)


state 256

    (113) valoresTernarioBool -> funcBool .
    (182) valoresBool -> funcBool .

    :               reduce using rule 113 (valoresTernarioBool -> funcBool .)
    ,               reduce using rule 113 (valoresTernarioBool -> funcBool .)
    ]               reduce using rule 113 (valoresTernarioBool -> funcBool .)
    )               reduce using rule 113 (valoresTernarioBool -> funcBool .)
    ;               reduce using rule 113 (valoresTernarioBool -> funcBool .)
    }               reduce using rule 113 (valoresTernarioBool -> funcBool .)
    ?               reduce using rule 182 (valoresBool -> funcBool .)
    OR              reduce using rule 182 (valoresBool -> funcBool .)
    AND             reduce using rule 182 (valoresBool -> funcBool .)


state 257

    (102) res -> RES .

    :               reduce using rule 102 (res -> RES .)
    ,               reduce using rule 102 (res -> RES .)
    ]               reduce using rule 102 (res -> RES .)
    )               reduce using rule 102 (res -> RES .)
    ;               reduce using rule 102 (res -> RES .)
    }               reduce using rule 102 (res -> RES .)


state 258

    (107) valoresTernarioMat -> funcInt .
    (140) valoresMat -> funcInt .
    (210) tCompare -> funcInt .

    :               reduce using rule 107 (valoresTernarioMat -> funcInt .)
    ,               reduce using rule 107 (valoresTernarioMat -> funcInt .)
    ]               reduce using rule 107 (valoresTernarioMat -> funcInt .)
    )               reduce using rule 107 (valoresTernarioMat -> funcInt .)
    ;               reduce using rule 107 (valoresTernarioMat -> funcInt .)
    }               reduce using rule 107 (valoresTernarioMat -> funcInt .)
    +               reduce using rule 140 (valoresMat -> funcInt .)
    -               reduce using rule 140 (valoresMat -> funcInt .)
    *               reduce using rule 140 (valoresMat -> funcInt .)
    /               reduce using rule 140 (valoresMat -> funcInt .)
    %               reduce using rule 140 (valoresMat -> funcInt .)
    ^               reduce using rule 140 (valoresMat -> funcInt .)
    EQEQ            reduce using rule 210 (tCompare -> funcInt .)
    DISTINTO        reduce using rule 210 (tCompare -> funcInt .)
    >               reduce using rule 210 (tCompare -> funcInt .)
    <               reduce using rule 210 (tCompare -> funcInt .)


state 259

    (110) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> valoresBool . OR and
    (190) expBool -> valoresBool . OR valoresBool
    (84) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (193) and -> valoresBool . AND eq
    (195) and -> valoresBool . AND valoresBool

    ?               shift and go to state 343
    OR              shift and go to state 146
    AND             shift and go to state 145


state 260

    (109) valoresTernarioMat -> eMat .
    (147) eMat -> eMat . + p
    (149) eMat -> eMat . + valoresMat
    (152) eMat -> eMat . - p
    (154) eMat -> eMat . - valoresMat
    (206) tCompare -> eMat .

    :               reduce using rule 109 (valoresTernarioMat -> eMat .)
    ,               reduce using rule 109 (valoresTernarioMat -> eMat .)
    ]               reduce using rule 109 (valoresTernarioMat -> eMat .)
    )               reduce using rule 109 (valoresTernarioMat -> eMat .)
    ;               reduce using rule 109 (valoresTernarioMat -> eMat .)
    }               reduce using rule 109 (valoresTernarioMat -> eMat .)
    +               shift and go to state 148
    -               shift and go to state 149
    EQEQ            reduce using rule 206 (tCompare -> eMat .)
    DISTINTO        reduce using rule 206 (tCompare -> eMat .)
    >               reduce using rule 206 (tCompare -> eMat .)
    <               reduce using rule 206 (tCompare -> eMat .)


state 261

    (110) ternarioBool -> valoresBool ? valoresTernarioBool . : valoresTernarioBool
    (88) ternarioVars -> valoresBool ? valoresTernarioBool . : valoresTernarioVars

    :               shift and go to state 344


state 262

    (95) valoresTernarioVars -> vec .
    (121) vecVal -> vec . m
    (122) m -> . [ valores ]
    (123) m -> . [ valores ] m

    ,               reduce using rule 95 (valoresTernarioVars -> vec .)
    ]               reduce using rule 95 (valoresTernarioVars -> vec .)
    )               reduce using rule 95 (valoresTernarioVars -> vec .)
    ;               reduce using rule 95 (valoresTernarioVars -> vec .)
    :               reduce using rule 95 (valoresTernarioVars -> vec .)
    }               reduce using rule 95 (valoresTernarioVars -> vec .)
    [               shift and go to state 102

    m                              shift and go to state 112

state 263

    (94) valoresTernarioVars -> reg .
    (74) atributos -> reg . . valoresCampos

    ,               reduce using rule 94 (valoresTernarioVars -> reg .)
    ]               reduce using rule 94 (valoresTernarioVars -> reg .)
    )               reduce using rule 94 (valoresTernarioVars -> reg .)
    ;               reduce using rule 94 (valoresTernarioVars -> reg .)
    :               reduce using rule 94 (valoresTernarioVars -> reg .)
    }               reduce using rule 94 (valoresTernarioVars -> reg .)
    .               shift and go to state 180


state 264

    (84) ternarioVars -> valoresBool ? valoresTernarioVars . : valoresTernarioVars
    (85) ternarioVars -> valoresBool ? valoresTernarioVars . : valoresTernarioMat
    (87) ternarioVars -> valoresBool ? valoresTernarioVars . : valoresTernarioBool

    :               shift and go to state 345


state 265

    (108) valoresTernarioMat -> STRING .
    (143) valoresMat -> STRING .

    :               reduce using rule 108 (valoresTernarioMat -> STRING .)
    ,               reduce using rule 108 (valoresTernarioMat -> STRING .)
    ]               reduce using rule 108 (valoresTernarioMat -> STRING .)
    )               reduce using rule 108 (valoresTernarioMat -> STRING .)
    ;               reduce using rule 108 (valoresTernarioMat -> STRING .)
    }               reduce using rule 108 (valoresTernarioMat -> STRING .)
    +               reduce using rule 143 (valoresMat -> STRING .)
    -               reduce using rule 143 (valoresMat -> STRING .)
    *               reduce using rule 143 (valoresMat -> STRING .)
    /               reduce using rule 143 (valoresMat -> STRING .)
    %               reduce using rule 143 (valoresMat -> STRING .)
    ^               reduce using rule 143 (valoresMat -> STRING .)


state 266

    (114) valoresTernarioBool -> ternarioBool .

    :               reduce using rule 114 (valoresTernarioBool -> ternarioBool .)
    ,               reduce using rule 114 (valoresTernarioBool -> ternarioBool .)
    ]               reduce using rule 114 (valoresTernarioBool -> ternarioBool .)
    )               reduce using rule 114 (valoresTernarioBool -> ternarioBool .)
    ;               reduce using rule 114 (valoresTernarioBool -> ternarioBool .)
    }               reduce using rule 114 (valoresTernarioBool -> ternarioBool .)


state 267

    (103) ternarioMat -> valoresBool ? valoresTernarioMat . : valoresTernarioMat
    (86) ternarioVars -> valoresBool ? valoresTernarioMat . : valoresTernarioVars

    :               shift and go to state 346


state 268

    (105) valoresTernarioMat -> INT .
    (138) valoresMat -> INT .
    (209) tCompare -> INT .

    :               reduce using rule 105 (valoresTernarioMat -> INT .)
    ,               reduce using rule 105 (valoresTernarioMat -> INT .)
    ]               reduce using rule 105 (valoresTernarioMat -> INT .)
    )               reduce using rule 105 (valoresTernarioMat -> INT .)
    ;               reduce using rule 105 (valoresTernarioMat -> INT .)
    }               reduce using rule 105 (valoresTernarioMat -> INT .)
    +               reduce using rule 138 (valoresMat -> INT .)
    -               reduce using rule 138 (valoresMat -> INT .)
    *               reduce using rule 138 (valoresMat -> INT .)
    /               reduce using rule 138 (valoresMat -> INT .)
    %               reduce using rule 138 (valoresMat -> INT .)
    ^               reduce using rule 138 (valoresMat -> INT .)
    EQEQ            reduce using rule 209 (tCompare -> INT .)
    DISTINTO        reduce using rule 209 (tCompare -> INT .)
    >               reduce using rule 209 (tCompare -> INT .)
    <               reduce using rule 209 (tCompare -> INT .)


state 269

    (106) valoresTernarioMat -> FLOAT .
    (139) valoresMat -> FLOAT .
    (211) tCompare -> FLOAT .

    :               reduce using rule 106 (valoresTernarioMat -> FLOAT .)
    ,               reduce using rule 106 (valoresTernarioMat -> FLOAT .)
    ]               reduce using rule 106 (valoresTernarioMat -> FLOAT .)
    )               reduce using rule 106 (valoresTernarioMat -> FLOAT .)
    ;               reduce using rule 106 (valoresTernarioMat -> FLOAT .)
    }               reduce using rule 106 (valoresTernarioMat -> FLOAT .)
    +               reduce using rule 139 (valoresMat -> FLOAT .)
    -               reduce using rule 139 (valoresMat -> FLOAT .)
    *               reduce using rule 139 (valoresMat -> FLOAT .)
    /               reduce using rule 139 (valoresMat -> FLOAT .)
    %               reduce using rule 139 (valoresMat -> FLOAT .)
    ^               reduce using rule 139 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 211 (tCompare -> FLOAT .)
    DISTINTO        reduce using rule 211 (tCompare -> FLOAT .)
    >               reduce using rule 211 (tCompare -> FLOAT .)
    <               reduce using rule 211 (tCompare -> FLOAT .)


state 270

    (116) valoresTernarioBool -> expBool .
    (111) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> expBool . OR and
    (189) expBool -> expBool . OR valoresBool
    (89) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars

    :               reduce using rule 116 (valoresTernarioBool -> expBool .)
    ,               reduce using rule 116 (valoresTernarioBool -> expBool .)
    ]               reduce using rule 116 (valoresTernarioBool -> expBool .)
    )               reduce using rule 116 (valoresTernarioBool -> expBool .)
    ;               reduce using rule 116 (valoresTernarioBool -> expBool .)
    }               reduce using rule 116 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 347
    OR              shift and go to state 181


state 271

    (112) valoresTernarioBool -> BOOL .
    (181) valoresBool -> BOOL .

    :               reduce using rule 112 (valoresTernarioBool -> BOOL .)
    ,               reduce using rule 112 (valoresTernarioBool -> BOOL .)
    ]               reduce using rule 112 (valoresTernarioBool -> BOOL .)
    )               reduce using rule 112 (valoresTernarioBool -> BOOL .)
    ;               reduce using rule 112 (valoresTernarioBool -> BOOL .)
    }               reduce using rule 112 (valoresTernarioBool -> BOOL .)
    ?               reduce using rule 181 (valoresBool -> BOOL .)
    OR              reduce using rule 181 (valoresBool -> BOOL .)
    AND             reduce using rule 181 (valoresBool -> BOOL .)


state 272

    (99) valoresTernarioVars -> varsOps .
    (145) valoresMat -> varsOps .
    (184) valoresBool -> varsOps .
    (207) tCompare -> varsOps .

    ,               reduce using rule 99 (valoresTernarioVars -> varsOps .)
    ]               reduce using rule 99 (valoresTernarioVars -> varsOps .)
    )               reduce using rule 99 (valoresTernarioVars -> varsOps .)
    ;               reduce using rule 99 (valoresTernarioVars -> varsOps .)
    :               reduce using rule 99 (valoresTernarioVars -> varsOps .)
    }               reduce using rule 99 (valoresTernarioVars -> varsOps .)
    +               reduce using rule 145 (valoresMat -> varsOps .)
    -               reduce using rule 145 (valoresMat -> varsOps .)
    *               reduce using rule 145 (valoresMat -> varsOps .)
    /               reduce using rule 145 (valoresMat -> varsOps .)
    %               reduce using rule 145 (valoresMat -> varsOps .)
    ^               reduce using rule 145 (valoresMat -> varsOps .)
    ?               reduce using rule 184 (valoresBool -> varsOps .)
    OR              reduce using rule 184 (valoresBool -> varsOps .)
    AND             reduce using rule 184 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 207 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 207 (tCompare -> varsOps .)
    >               reduce using rule 207 (tCompare -> varsOps .)
    <               reduce using rule 207 (tCompare -> varsOps .)


state 273

    (115) valoresTernarioBool -> ( . ternarioBool )
    (97) valoresTernarioVars -> ( . ternarioVars )
    (146) valoresMat -> ( . ternarioMat )
    (185) valoresBool -> ( . ternarioBool )
    (212) tCompare -> ( . ternarioBool )
    (213) tCompare -> ( . ternarioMat )
    (179) paren -> ( . eMat )
    (180) paren -> ( . valoresMat )
    (221) parenBool -> ( . expBool )
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (56) vec -> . [ elem ]
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 163
    FLOAT           shift and go to state 164
    STRING          shift and go to state 159
    (               shift and go to state 155
    BOOL            shift and go to state 165
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73
    [               shift and go to state 20
    NOT             shift and go to state 94

    and                            shift and go to state 59
    funcBool                       shift and go to state 150
    funcInt                        shift and go to state 151
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 152
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 348
    eMat                           shift and go to state 154
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 284
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    exp                            shift and go to state 95
    ternarioBool                   shift and go to state 349
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    expBool                        shift and go to state 350
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 157
    ternarioVars                   shift and go to state 351
    varYVals                       shift and go to state 168
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 169

state 274

    (96) valoresTernarioVars -> ternarioVars .

    ,               reduce using rule 96 (valoresTernarioVars -> ternarioVars .)
    ]               reduce using rule 96 (valoresTernarioVars -> ternarioVars .)
    )               reduce using rule 96 (valoresTernarioVars -> ternarioVars .)
    ;               reduce using rule 96 (valoresTernarioVars -> ternarioVars .)
    :               reduce using rule 96 (valoresTernarioVars -> ternarioVars .)
    }               reduce using rule 96 (valoresTernarioVars -> ternarioVars .)


state 275

    (100) valoresTernarioVars -> varYVals .
    (129) varsOps -> varYVals . MASMAS
    (130) varsOps -> varYVals . MENOSMENOS
    (144) valoresMat -> varYVals .
    (183) valoresBool -> varYVals .
    (208) tCompare -> varYVals .

    ,               reduce using rule 100 (valoresTernarioVars -> varYVals .)
    ]               reduce using rule 100 (valoresTernarioVars -> varYVals .)
    )               reduce using rule 100 (valoresTernarioVars -> varYVals .)
    ;               reduce using rule 100 (valoresTernarioVars -> varYVals .)
    :               reduce using rule 100 (valoresTernarioVars -> varYVals .)
    }               reduce using rule 100 (valoresTernarioVars -> varYVals .)
    MASMAS          shift and go to state 50
    MENOSMENOS      shift and go to state 47
    +               reduce using rule 144 (valoresMat -> varYVals .)
    -               reduce using rule 144 (valoresMat -> varYVals .)
    *               reduce using rule 144 (valoresMat -> varYVals .)
    /               reduce using rule 144 (valoresMat -> varYVals .)
    %               reduce using rule 144 (valoresMat -> varYVals .)
    ^               reduce using rule 144 (valoresMat -> varYVals .)
    ?               reduce using rule 183 (valoresBool -> varYVals .)
    OR              reduce using rule 183 (valoresBool -> varYVals .)
    AND             reduce using rule 183 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 208 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 208 (tCompare -> varYVals .)
    >               reduce using rule 208 (tCompare -> varYVals .)
    <               reduce using rule 208 (tCompare -> varYVals .)


state 276

    (98) valoresTernarioVars -> atributos .
    (141) valoresMat -> atributos .

    ,               reduce using rule 98 (valoresTernarioVars -> atributos .)
    ]               reduce using rule 98 (valoresTernarioVars -> atributos .)
    )               reduce using rule 98 (valoresTernarioVars -> atributos .)
    ;               reduce using rule 98 (valoresTernarioVars -> atributos .)
    :               reduce using rule 98 (valoresTernarioVars -> atributos .)
    }               reduce using rule 98 (valoresTernarioVars -> atributos .)
    +               reduce using rule 141 (valoresMat -> atributos .)
    -               reduce using rule 141 (valoresMat -> atributos .)
    *               reduce using rule 141 (valoresMat -> atributos .)
    /               reduce using rule 141 (valoresMat -> atributos .)
    %               reduce using rule 141 (valoresMat -> atributos .)
    ^               reduce using rule 141 (valoresMat -> atributos .)


state 277

    (149) eMat -> eMat + valoresMat .
    (159) p -> valoresMat . * exp
    (160) p -> valoresMat . / exp
    (161) p -> valoresMat . % exp
    (165) p -> valoresMat . * valoresMat
    (166) p -> valoresMat . / valoresMat
    (167) p -> valoresMat . % valoresMat
    (170) exp -> valoresMat . ^ iSing
    (172) exp -> valoresMat . ^ valoresMat

    +               reduce using rule 149 (eMat -> eMat + valoresMat .)
    -               reduce using rule 149 (eMat -> eMat + valoresMat .)
    EQEQ            reduce using rule 149 (eMat -> eMat + valoresMat .)
    DISTINTO        reduce using rule 149 (eMat -> eMat + valoresMat .)
    >               reduce using rule 149 (eMat -> eMat + valoresMat .)
    <               reduce using rule 149 (eMat -> eMat + valoresMat .)
    ,               reduce using rule 149 (eMat -> eMat + valoresMat .)
    }               reduce using rule 149 (eMat -> eMat + valoresMat .)
    AND             reduce using rule 149 (eMat -> eMat + valoresMat .)
    OR              reduce using rule 149 (eMat -> eMat + valoresMat .)
    ?               reduce using rule 149 (eMat -> eMat + valoresMat .)
    ]               reduce using rule 149 (eMat -> eMat + valoresMat .)
    )               reduce using rule 149 (eMat -> eMat + valoresMat .)
    ;               reduce using rule 149 (eMat -> eMat + valoresMat .)
    :               reduce using rule 149 (eMat -> eMat + valoresMat .)
    *               shift and go to state 139
    /               shift and go to state 141
    %               shift and go to state 137
    ^               shift and go to state 142


state 278

    (147) eMat -> eMat + p .
    (156) p -> p . * exp
    (157) p -> p . / exp
    (158) p -> p . % exp
    (162) p -> p . * valoresMat
    (163) p -> p . / valoresMat
    (164) p -> p . % valoresMat

    +               reduce using rule 147 (eMat -> eMat + p .)
    -               reduce using rule 147 (eMat -> eMat + p .)
    EQEQ            reduce using rule 147 (eMat -> eMat + p .)
    DISTINTO        reduce using rule 147 (eMat -> eMat + p .)
    >               reduce using rule 147 (eMat -> eMat + p .)
    <               reduce using rule 147 (eMat -> eMat + p .)
    ,               reduce using rule 147 (eMat -> eMat + p .)
    }               reduce using rule 147 (eMat -> eMat + p .)
    AND             reduce using rule 147 (eMat -> eMat + p .)
    OR              reduce using rule 147 (eMat -> eMat + p .)
    ?               reduce using rule 147 (eMat -> eMat + p .)
    ]               reduce using rule 147 (eMat -> eMat + p .)
    )               reduce using rule 147 (eMat -> eMat + p .)
    ;               reduce using rule 147 (eMat -> eMat + p .)
    :               reduce using rule 147 (eMat -> eMat + p .)
    *               shift and go to state 190
    /               shift and go to state 191
    %               shift and go to state 189


state 279

    (154) eMat -> eMat - valoresMat .
    (159) p -> valoresMat . * exp
    (160) p -> valoresMat . / exp
    (161) p -> valoresMat . % exp
    (165) p -> valoresMat . * valoresMat
    (166) p -> valoresMat . / valoresMat
    (167) p -> valoresMat . % valoresMat
    (170) exp -> valoresMat . ^ iSing
    (172) exp -> valoresMat . ^ valoresMat

    +               reduce using rule 154 (eMat -> eMat - valoresMat .)
    -               reduce using rule 154 (eMat -> eMat - valoresMat .)
    EQEQ            reduce using rule 154 (eMat -> eMat - valoresMat .)
    DISTINTO        reduce using rule 154 (eMat -> eMat - valoresMat .)
    >               reduce using rule 154 (eMat -> eMat - valoresMat .)
    <               reduce using rule 154 (eMat -> eMat - valoresMat .)
    ,               reduce using rule 154 (eMat -> eMat - valoresMat .)
    }               reduce using rule 154 (eMat -> eMat - valoresMat .)
    AND             reduce using rule 154 (eMat -> eMat - valoresMat .)
    OR              reduce using rule 154 (eMat -> eMat - valoresMat .)
    ?               reduce using rule 154 (eMat -> eMat - valoresMat .)
    ]               reduce using rule 154 (eMat -> eMat - valoresMat .)
    )               reduce using rule 154 (eMat -> eMat - valoresMat .)
    ;               reduce using rule 154 (eMat -> eMat - valoresMat .)
    :               reduce using rule 154 (eMat -> eMat - valoresMat .)
    *               shift and go to state 139
    /               shift and go to state 141
    %               shift and go to state 137
    ^               shift and go to state 142


state 280

    (152) eMat -> eMat - p .
    (156) p -> p . * exp
    (157) p -> p . / exp
    (158) p -> p . % exp
    (162) p -> p . * valoresMat
    (163) p -> p . / valoresMat
    (164) p -> p . % valoresMat

    +               reduce using rule 152 (eMat -> eMat - p .)
    -               reduce using rule 152 (eMat -> eMat - p .)
    EQEQ            reduce using rule 152 (eMat -> eMat - p .)
    DISTINTO        reduce using rule 152 (eMat -> eMat - p .)
    >               reduce using rule 152 (eMat -> eMat - p .)
    <               reduce using rule 152 (eMat -> eMat - p .)
    ,               reduce using rule 152 (eMat -> eMat - p .)
    }               reduce using rule 152 (eMat -> eMat - p .)
    AND             reduce using rule 152 (eMat -> eMat - p .)
    OR              reduce using rule 152 (eMat -> eMat - p .)
    ?               reduce using rule 152 (eMat -> eMat - p .)
    ]               reduce using rule 152 (eMat -> eMat - p .)
    )               reduce using rule 152 (eMat -> eMat - p .)
    ;               reduce using rule 152 (eMat -> eMat - p .)
    :               reduce using rule 152 (eMat -> eMat - p .)
    *               shift and go to state 190
    /               shift and go to state 191
    %               shift and go to state 189


state 281

    (180) paren -> ( valoresMat ) .

    ^               reduce using rule 180 (paren -> ( valoresMat ) .)
    *               reduce using rule 180 (paren -> ( valoresMat ) .)
    /               reduce using rule 180 (paren -> ( valoresMat ) .)
    %               reduce using rule 180 (paren -> ( valoresMat ) .)
    +               reduce using rule 180 (paren -> ( valoresMat ) .)
    -               reduce using rule 180 (paren -> ( valoresMat ) .)
    :               reduce using rule 180 (paren -> ( valoresMat ) .)
    EQEQ            reduce using rule 180 (paren -> ( valoresMat ) .)
    DISTINTO        reduce using rule 180 (paren -> ( valoresMat ) .)
    >               reduce using rule 180 (paren -> ( valoresMat ) .)
    <               reduce using rule 180 (paren -> ( valoresMat ) .)
    )               reduce using rule 180 (paren -> ( valoresMat ) .)
    ,               reduce using rule 180 (paren -> ( valoresMat ) .)
    AND             reduce using rule 180 (paren -> ( valoresMat ) .)
    OR              reduce using rule 180 (paren -> ( valoresMat ) .)
    ?               reduce using rule 180 (paren -> ( valoresMat ) .)
    ]               reduce using rule 180 (paren -> ( valoresMat ) .)
    ;               reduce using rule 180 (paren -> ( valoresMat ) .)
    }               reduce using rule 180 (paren -> ( valoresMat ) .)


state 282

    (179) paren -> ( eMat ) .

    ^               reduce using rule 179 (paren -> ( eMat ) .)
    *               reduce using rule 179 (paren -> ( eMat ) .)
    /               reduce using rule 179 (paren -> ( eMat ) .)
    %               reduce using rule 179 (paren -> ( eMat ) .)
    +               reduce using rule 179 (paren -> ( eMat ) .)
    -               reduce using rule 179 (paren -> ( eMat ) .)
    :               reduce using rule 179 (paren -> ( eMat ) .)
    EQEQ            reduce using rule 179 (paren -> ( eMat ) .)
    DISTINTO        reduce using rule 179 (paren -> ( eMat ) .)
    >               reduce using rule 179 (paren -> ( eMat ) .)
    <               reduce using rule 179 (paren -> ( eMat ) .)
    )               reduce using rule 179 (paren -> ( eMat ) .)
    ,               reduce using rule 179 (paren -> ( eMat ) .)
    AND             reduce using rule 179 (paren -> ( eMat ) .)
    OR              reduce using rule 179 (paren -> ( eMat ) .)
    ?               reduce using rule 179 (paren -> ( eMat ) .)
    ]               reduce using rule 179 (paren -> ( eMat ) .)
    ;               reduce using rule 179 (paren -> ( eMat ) .)
    }               reduce using rule 179 (paren -> ( eMat ) .)


state 283

    (103) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (110) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> valoresBool . OR and
    (190) expBool -> valoresBool . OR valoresBool
    (193) and -> valoresBool . AND eq
    (195) and -> valoresBool . AND valoresBool

    ?               shift and go to state 352
    OR              shift and go to state 146
    AND             shift and go to state 145


state 284

    (146) valoresMat -> ( ternarioMat . )
    (213) tCompare -> ( ternarioMat . )

    )               shift and go to state 353


state 285

    (185) valoresBool -> ( ternarioBool . )
    (212) tCompare -> ( ternarioBool . )

    )               shift and go to state 354


state 286

    (221) parenBool -> ( expBool . )
    (104) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (111) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> expBool . OR and
    (189) expBool -> expBool . OR valoresBool

    )               shift and go to state 289
    ?               shift and go to state 355
    OR              shift and go to state 181


state 287

    (80) ternario -> ( ternarioMat ) .
    (146) valoresMat -> ( ternarioMat ) .
    (213) tCompare -> ( ternarioMat ) .

    )               reduce using rule 80 (ternario -> ( ternarioMat ) .)
    ,               reduce using rule 80 (ternario -> ( ternarioMat ) .)
    }               reduce using rule 80 (ternario -> ( ternarioMat ) .)
    ]               reduce using rule 80 (ternario -> ( ternarioMat ) .)
    ;               reduce using rule 80 (ternario -> ( ternarioMat ) .)
    +               reduce using rule 146 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 146 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 146 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 146 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 146 (valoresMat -> ( ternarioMat ) .)
    ^               reduce using rule 146 (valoresMat -> ( ternarioMat ) .)
    EQEQ            reduce using rule 213 (tCompare -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 213 (tCompare -> ( ternarioMat ) .)
    >               reduce using rule 213 (tCompare -> ( ternarioMat ) .)
    <               reduce using rule 213 (tCompare -> ( ternarioMat ) .)


state 288

    (81) ternario -> ( ternarioBool ) .
    (185) valoresBool -> ( ternarioBool ) .
    (212) tCompare -> ( ternarioBool ) .

    )               reduce using rule 81 (ternario -> ( ternarioBool ) .)
    ,               reduce using rule 81 (ternario -> ( ternarioBool ) .)
    }               reduce using rule 81 (ternario -> ( ternarioBool ) .)
    ]               reduce using rule 81 (ternario -> ( ternarioBool ) .)
    ;               reduce using rule 81 (ternario -> ( ternarioBool ) .)
    OR              reduce using rule 185 (valoresBool -> ( ternarioBool ) .)
    AND             reduce using rule 185 (valoresBool -> ( ternarioBool ) .)
    ?               reduce using rule 185 (valoresBool -> ( ternarioBool ) .)
    EQEQ            reduce using rule 212 (tCompare -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 212 (tCompare -> ( ternarioBool ) .)
    >               reduce using rule 212 (tCompare -> ( ternarioBool ) .)
    <               reduce using rule 212 (tCompare -> ( ternarioBool ) .)


state 289

    (221) parenBool -> ( expBool ) .

    EQEQ            reduce using rule 221 (parenBool -> ( expBool ) .)
    DISTINTO        reduce using rule 221 (parenBool -> ( expBool ) .)
    AND             reduce using rule 221 (parenBool -> ( expBool ) .)
    )               reduce using rule 221 (parenBool -> ( expBool ) .)
    ?               reduce using rule 221 (parenBool -> ( expBool ) .)
    OR              reduce using rule 221 (parenBool -> ( expBool ) .)
    ,               reduce using rule 221 (parenBool -> ( expBool ) .)
    ]               reduce using rule 221 (parenBool -> ( expBool ) .)
    ;               reduce using rule 221 (parenBool -> ( expBool ) .)
    :               reduce using rule 221 (parenBool -> ( expBool ) .)
    }               reduce using rule 221 (parenBool -> ( expBool ) .)


state 290

    (83) ternario -> ( ternarioVars ) .

    )               reduce using rule 83 (ternario -> ( ternarioVars ) .)
    ,               reduce using rule 83 (ternario -> ( ternarioVars ) .)
    }               reduce using rule 83 (ternario -> ( ternarioVars ) .)
    ]               reduce using rule 83 (ternario -> ( ternarioVars ) .)
    ;               reduce using rule 83 (ternario -> ( ternarioVars ) .)


state 291

    (103) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (188) expBool -> valoresBool . OR and
    (190) expBool -> valoresBool . OR valoresBool
    (193) and -> valoresBool . AND eq
    (195) and -> valoresBool . AND valoresBool

    ?               shift and go to state 356
    OR              shift and go to state 146
    AND             shift and go to state 145


state 292

    (146) valoresMat -> ( . ternarioMat )
    (185) valoresBool -> ( . ternarioBool )
    (179) paren -> ( . eMat )
    (180) paren -> ( . valoresMat )
    (212) tCompare -> ( . ternarioBool )
    (213) tCompare -> ( . ternarioMat )
    (221) parenBool -> ( . expBool )
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (56) vec -> . [ elem ]
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 163
    FLOAT           shift and go to state 164
    STRING          shift and go to state 159
    (               shift and go to state 155
    BOOL            shift and go to state 165
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73
    [               shift and go to state 20
    NOT             shift and go to state 94

    and                            shift and go to state 59
    funcBool                       shift and go to state 150
    funcInt                        shift and go to state 151
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 152
    eq                             shift and go to state 68
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 154
    valoresBool                    shift and go to state 283
    ternarioMat                    shift and go to state 284
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    varsOps                        shift and go to state 157
    exp                            shift and go to state 95
    ternarioBool                   shift and go to state 285
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    expBool                        shift and go to state 286
    varYVals                       shift and go to state 168
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 169

state 293

    (146) valoresMat -> ( ternarioMat . )

    )               shift and go to state 357


state 294

    (144) valoresMat -> varYVals .
    (129) varsOps -> varYVals . MASMAS
    (130) varsOps -> varYVals . MENOSMENOS
    (183) valoresBool -> varYVals .
    (208) tCompare -> varYVals .

    )               reduce using rule 144 (valoresMat -> varYVals .)
    +               reduce using rule 144 (valoresMat -> varYVals .)
    -               reduce using rule 144 (valoresMat -> varYVals .)
    *               reduce using rule 144 (valoresMat -> varYVals .)
    /               reduce using rule 144 (valoresMat -> varYVals .)
    %               reduce using rule 144 (valoresMat -> varYVals .)
    ^               reduce using rule 144 (valoresMat -> varYVals .)
    MASMAS          shift and go to state 50
    MENOSMENOS      shift and go to state 47
    ?               reduce using rule 183 (valoresBool -> varYVals .)
    OR              reduce using rule 183 (valoresBool -> varYVals .)
    AND             reduce using rule 183 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 208 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 208 (tCompare -> varYVals .)
    >               reduce using rule 208 (tCompare -> varYVals .)
    <               reduce using rule 208 (tCompare -> varYVals .)


state 295

    (104) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (187) expBool -> expBool . OR and
    (189) expBool -> expBool . OR valoresBool

    ?               shift and go to state 358
    OR              shift and go to state 181


state 296

    (77) valoresCampos -> BEGIN .

    ,               reduce using rule 77 (valoresCampos -> BEGIN .)
    ]               reduce using rule 77 (valoresCampos -> BEGIN .)
    +               reduce using rule 77 (valoresCampos -> BEGIN .)
    -               reduce using rule 77 (valoresCampos -> BEGIN .)
    *               reduce using rule 77 (valoresCampos -> BEGIN .)
    /               reduce using rule 77 (valoresCampos -> BEGIN .)
    %               reduce using rule 77 (valoresCampos -> BEGIN .)
    ^               reduce using rule 77 (valoresCampos -> BEGIN .)
    )               reduce using rule 77 (valoresCampos -> BEGIN .)
    ;               reduce using rule 77 (valoresCampos -> BEGIN .)
    EQEQ            reduce using rule 77 (valoresCampos -> BEGIN .)
    DISTINTO        reduce using rule 77 (valoresCampos -> BEGIN .)
    >               reduce using rule 77 (valoresCampos -> BEGIN .)
    <               reduce using rule 77 (valoresCampos -> BEGIN .)
    AND             reduce using rule 77 (valoresCampos -> BEGIN .)
    OR              reduce using rule 77 (valoresCampos -> BEGIN .)
    ?               reduce using rule 77 (valoresCampos -> BEGIN .)
    :               reduce using rule 77 (valoresCampos -> BEGIN .)
    }               reduce using rule 77 (valoresCampos -> BEGIN .)


state 297

    (76) valoresCampos -> END .

    ,               reduce using rule 76 (valoresCampos -> END .)
    ]               reduce using rule 76 (valoresCampos -> END .)
    +               reduce using rule 76 (valoresCampos -> END .)
    -               reduce using rule 76 (valoresCampos -> END .)
    *               reduce using rule 76 (valoresCampos -> END .)
    /               reduce using rule 76 (valoresCampos -> END .)
    %               reduce using rule 76 (valoresCampos -> END .)
    ^               reduce using rule 76 (valoresCampos -> END .)
    )               reduce using rule 76 (valoresCampos -> END .)
    ;               reduce using rule 76 (valoresCampos -> END .)
    EQEQ            reduce using rule 76 (valoresCampos -> END .)
    DISTINTO        reduce using rule 76 (valoresCampos -> END .)
    >               reduce using rule 76 (valoresCampos -> END .)
    <               reduce using rule 76 (valoresCampos -> END .)
    AND             reduce using rule 76 (valoresCampos -> END .)
    OR              reduce using rule 76 (valoresCampos -> END .)
    ?               reduce using rule 76 (valoresCampos -> END .)
    :               reduce using rule 76 (valoresCampos -> END .)
    }               reduce using rule 76 (valoresCampos -> END .)


state 298

    (74) atributos -> reg . valoresCampos .

    +               reduce using rule 74 (atributos -> reg . valoresCampos .)
    -               reduce using rule 74 (atributos -> reg . valoresCampos .)
    *               reduce using rule 74 (atributos -> reg . valoresCampos .)
    /               reduce using rule 74 (atributos -> reg . valoresCampos .)
    %               reduce using rule 74 (atributos -> reg . valoresCampos .)
    ^               reduce using rule 74 (atributos -> reg . valoresCampos .)
    :               reduce using rule 74 (atributos -> reg . valoresCampos .)
    ,               reduce using rule 74 (atributos -> reg . valoresCampos .)
    ]               reduce using rule 74 (atributos -> reg . valoresCampos .)
    EQEQ            reduce using rule 74 (atributos -> reg . valoresCampos .)
    DISTINTO        reduce using rule 74 (atributos -> reg . valoresCampos .)
    >               reduce using rule 74 (atributos -> reg . valoresCampos .)
    <               reduce using rule 74 (atributos -> reg . valoresCampos .)
    )               reduce using rule 74 (atributos -> reg . valoresCampos .)
    ;               reduce using rule 74 (atributos -> reg . valoresCampos .)
    AND             reduce using rule 74 (atributos -> reg . valoresCampos .)
    OR              reduce using rule 74 (atributos -> reg . valoresCampos .)
    ?               reduce using rule 74 (atributos -> reg . valoresCampos .)
    }               reduce using rule 74 (atributos -> reg . valoresCampos .)


state 299

    (75) valoresCampos -> varYVals .

    ,               reduce using rule 75 (valoresCampos -> varYVals .)
    ]               reduce using rule 75 (valoresCampos -> varYVals .)
    +               reduce using rule 75 (valoresCampos -> varYVals .)
    -               reduce using rule 75 (valoresCampos -> varYVals .)
    *               reduce using rule 75 (valoresCampos -> varYVals .)
    /               reduce using rule 75 (valoresCampos -> varYVals .)
    %               reduce using rule 75 (valoresCampos -> varYVals .)
    ^               reduce using rule 75 (valoresCampos -> varYVals .)
    )               reduce using rule 75 (valoresCampos -> varYVals .)
    ;               reduce using rule 75 (valoresCampos -> varYVals .)
    EQEQ            reduce using rule 75 (valoresCampos -> varYVals .)
    DISTINTO        reduce using rule 75 (valoresCampos -> varYVals .)
    >               reduce using rule 75 (valoresCampos -> varYVals .)
    <               reduce using rule 75 (valoresCampos -> varYVals .)
    AND             reduce using rule 75 (valoresCampos -> varYVals .)
    OR              reduce using rule 75 (valoresCampos -> varYVals .)
    ?               reduce using rule 75 (valoresCampos -> varYVals .)
    :               reduce using rule 75 (valoresCampos -> varYVals .)
    }               reduce using rule 75 (valoresCampos -> varYVals .)


state 300

    (187) expBool -> expBool OR and .
    (192) and -> and . AND eq
    (194) and -> and . AND valoresBool

    ?               reduce using rule 187 (expBool -> expBool OR and .)
    OR              reduce using rule 187 (expBool -> expBool OR and .)
    )               reduce using rule 187 (expBool -> expBool OR and .)
    :               reduce using rule 187 (expBool -> expBool OR and .)
    ,               reduce using rule 187 (expBool -> expBool OR and .)
    ]               reduce using rule 187 (expBool -> expBool OR and .)
    ;               reduce using rule 187 (expBool -> expBool OR and .)
    }               reduce using rule 187 (expBool -> expBool OR and .)
    AND             shift and go to state 135


state 301

    (189) expBool -> expBool OR valoresBool .
    (193) and -> valoresBool . AND eq
    (195) and -> valoresBool . AND valoresBool

    ?               reduce using rule 189 (expBool -> expBool OR valoresBool .)
    OR              reduce using rule 189 (expBool -> expBool OR valoresBool .)
    )               reduce using rule 189 (expBool -> expBool OR valoresBool .)
    :               reduce using rule 189 (expBool -> expBool OR valoresBool .)
    ,               reduce using rule 189 (expBool -> expBool OR valoresBool .)
    ]               reduce using rule 189 (expBool -> expBool OR valoresBool .)
    ;               reduce using rule 189 (expBool -> expBool OR valoresBool .)
    }               reduce using rule 189 (expBool -> expBool OR valoresBool .)
    AND             shift and go to state 145


state 302

    (111) ternarioBool -> expBool ? valoresTernarioBool . : valoresTernarioBool
    (93) ternarioVars -> expBool ? valoresTernarioBool . : valoresTernarioVars

    :               shift and go to state 359


state 303

    (89) ternarioVars -> expBool ? valoresTernarioVars . : valoresTernarioVars
    (90) ternarioVars -> expBool ? valoresTernarioVars . : valoresTernarioMat
    (92) ternarioVars -> expBool ? valoresTernarioVars . : valoresTernarioBool

    :               shift and go to state 360


state 304

    (104) ternarioMat -> expBool ? valoresTernarioMat . : valoresTernarioMat
    (91) ternarioVars -> expBool ? valoresTernarioMat . : valoresTernarioVars

    :               shift and go to state 361


state 305

    (200) eq -> tCompare DISTINTO mayor .

    EQEQ            reduce using rule 200 (eq -> tCompare DISTINTO mayor .)
    DISTINTO        reduce using rule 200 (eq -> tCompare DISTINTO mayor .)
    AND             reduce using rule 200 (eq -> tCompare DISTINTO mayor .)
    ?               reduce using rule 200 (eq -> tCompare DISTINTO mayor .)
    OR              reduce using rule 200 (eq -> tCompare DISTINTO mayor .)
    )               reduce using rule 200 (eq -> tCompare DISTINTO mayor .)
    :               reduce using rule 200 (eq -> tCompare DISTINTO mayor .)
    ;               reduce using rule 200 (eq -> tCompare DISTINTO mayor .)
    ,               reduce using rule 200 (eq -> tCompare DISTINTO mayor .)
    ]               reduce using rule 200 (eq -> tCompare DISTINTO mayor .)
    }               reduce using rule 200 (eq -> tCompare DISTINTO mayor .)


state 306

    (204) eq -> tCompare DISTINTO tCompare .
    (214) mayor -> tCompare . > tCompare
    (216) menor -> tCompare . < tCompare

    EQEQ            reduce using rule 204 (eq -> tCompare DISTINTO tCompare .)
    DISTINTO        reduce using rule 204 (eq -> tCompare DISTINTO tCompare .)
    AND             reduce using rule 204 (eq -> tCompare DISTINTO tCompare .)
    ?               reduce using rule 204 (eq -> tCompare DISTINTO tCompare .)
    OR              reduce using rule 204 (eq -> tCompare DISTINTO tCompare .)
    )               reduce using rule 204 (eq -> tCompare DISTINTO tCompare .)
    :               reduce using rule 204 (eq -> tCompare DISTINTO tCompare .)
    ;               reduce using rule 204 (eq -> tCompare DISTINTO tCompare .)
    ,               reduce using rule 204 (eq -> tCompare DISTINTO tCompare .)
    ]               reduce using rule 204 (eq -> tCompare DISTINTO tCompare .)
    }               reduce using rule 204 (eq -> tCompare DISTINTO tCompare .)
    >               shift and go to state 186
    <               shift and go to state 185


state 307

    (199) eq -> tCompare EQEQ mayor .

    EQEQ            reduce using rule 199 (eq -> tCompare EQEQ mayor .)
    DISTINTO        reduce using rule 199 (eq -> tCompare EQEQ mayor .)
    AND             reduce using rule 199 (eq -> tCompare EQEQ mayor .)
    ?               reduce using rule 199 (eq -> tCompare EQEQ mayor .)
    OR              reduce using rule 199 (eq -> tCompare EQEQ mayor .)
    )               reduce using rule 199 (eq -> tCompare EQEQ mayor .)
    :               reduce using rule 199 (eq -> tCompare EQEQ mayor .)
    ;               reduce using rule 199 (eq -> tCompare EQEQ mayor .)
    ,               reduce using rule 199 (eq -> tCompare EQEQ mayor .)
    ]               reduce using rule 199 (eq -> tCompare EQEQ mayor .)
    }               reduce using rule 199 (eq -> tCompare EQEQ mayor .)


state 308

    (203) eq -> tCompare EQEQ tCompare .
    (214) mayor -> tCompare . > tCompare
    (216) menor -> tCompare . < tCompare

    EQEQ            reduce using rule 203 (eq -> tCompare EQEQ tCompare .)
    DISTINTO        reduce using rule 203 (eq -> tCompare EQEQ tCompare .)
    AND             reduce using rule 203 (eq -> tCompare EQEQ tCompare .)
    ?               reduce using rule 203 (eq -> tCompare EQEQ tCompare .)
    OR              reduce using rule 203 (eq -> tCompare EQEQ tCompare .)
    )               reduce using rule 203 (eq -> tCompare EQEQ tCompare .)
    :               reduce using rule 203 (eq -> tCompare EQEQ tCompare .)
    ;               reduce using rule 203 (eq -> tCompare EQEQ tCompare .)
    ,               reduce using rule 203 (eq -> tCompare EQEQ tCompare .)
    ]               reduce using rule 203 (eq -> tCompare EQEQ tCompare .)
    }               reduce using rule 203 (eq -> tCompare EQEQ tCompare .)
    >               shift and go to state 186
    <               shift and go to state 185


state 309

    (212) tCompare -> ( . ternarioBool )
    (213) tCompare -> ( . ternarioMat )
    (146) valoresMat -> ( . ternarioMat )
    (179) paren -> ( . eMat )
    (180) paren -> ( . valoresMat )
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (51) funcBool -> . COLINEALES ( valores , valores )
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (56) vec -> . [ elem ]
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 163
    FLOAT           shift and go to state 164
    STRING          shift and go to state 159
    (               shift and go to state 155
    BOOL            shift and go to state 165
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73
    [               shift and go to state 20
    NOT             shift and go to state 94

    and                            shift and go to state 59
    funcBool                       shift and go to state 150
    funcInt                        shift and go to state 151
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 152
    eq                             shift and go to state 68
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 154
    valoresBool                    shift and go to state 328
    ternarioMat                    shift and go to state 329
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    varsOps                        shift and go to state 157
    exp                            shift and go to state 95
    ternarioBool                   shift and go to state 342
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    expBool                        shift and go to state 362
    varYVals                       shift and go to state 168
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 169

state 310

    (216) menor -> tCompare < tCompare .

    EQEQ            reduce using rule 216 (menor -> tCompare < tCompare .)
    DISTINTO        reduce using rule 216 (menor -> tCompare < tCompare .)
    AND             reduce using rule 216 (menor -> tCompare < tCompare .)
    )               reduce using rule 216 (menor -> tCompare < tCompare .)
    ?               reduce using rule 216 (menor -> tCompare < tCompare .)
    OR              reduce using rule 216 (menor -> tCompare < tCompare .)
    :               reduce using rule 216 (menor -> tCompare < tCompare .)
    ,               reduce using rule 216 (menor -> tCompare < tCompare .)
    ]               reduce using rule 216 (menor -> tCompare < tCompare .)
    ;               reduce using rule 216 (menor -> tCompare < tCompare .)
    }               reduce using rule 216 (menor -> tCompare < tCompare .)


state 311

    (214) mayor -> tCompare > tCompare .

    EQEQ            reduce using rule 214 (mayor -> tCompare > tCompare .)
    DISTINTO        reduce using rule 214 (mayor -> tCompare > tCompare .)
    AND             reduce using rule 214 (mayor -> tCompare > tCompare .)
    OR              reduce using rule 214 (mayor -> tCompare > tCompare .)
    ?               reduce using rule 214 (mayor -> tCompare > tCompare .)
    ,               reduce using rule 214 (mayor -> tCompare > tCompare .)
    )               reduce using rule 214 (mayor -> tCompare > tCompare .)
    ]               reduce using rule 214 (mayor -> tCompare > tCompare .)
    ;               reduce using rule 214 (mayor -> tCompare > tCompare .)
    :               reduce using rule 214 (mayor -> tCompare > tCompare .)
    }               reduce using rule 214 (mayor -> tCompare > tCompare .)


state 312

    (73) atributos -> ID . valoresCampos .

    +               reduce using rule 73 (atributos -> ID . valoresCampos .)
    -               reduce using rule 73 (atributos -> ID . valoresCampos .)
    *               reduce using rule 73 (atributos -> ID . valoresCampos .)
    /               reduce using rule 73 (atributos -> ID . valoresCampos .)
    %               reduce using rule 73 (atributos -> ID . valoresCampos .)
    ^               reduce using rule 73 (atributos -> ID . valoresCampos .)
    :               reduce using rule 73 (atributos -> ID . valoresCampos .)
    ,               reduce using rule 73 (atributos -> ID . valoresCampos .)
    ]               reduce using rule 73 (atributos -> ID . valoresCampos .)
    EQEQ            reduce using rule 73 (atributos -> ID . valoresCampos .)
    DISTINTO        reduce using rule 73 (atributos -> ID . valoresCampos .)
    >               reduce using rule 73 (atributos -> ID . valoresCampos .)
    <               reduce using rule 73 (atributos -> ID . valoresCampos .)
    )               reduce using rule 73 (atributos -> ID . valoresCampos .)
    ;               reduce using rule 73 (atributos -> ID . valoresCampos .)
    AND             reduce using rule 73 (atributos -> ID . valoresCampos .)
    OR              reduce using rule 73 (atributos -> ID . valoresCampos .)
    ?               reduce using rule 73 (atributos -> ID . valoresCampos .)
    }               reduce using rule 73 (atributos -> ID . valoresCampos .)


state 313

    (164) p -> p % valoresMat .
    (170) exp -> valoresMat . ^ iSing
    (172) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 164 (p -> p % valoresMat .)
    /               reduce using rule 164 (p -> p % valoresMat .)
    %               reduce using rule 164 (p -> p % valoresMat .)
    )               reduce using rule 164 (p -> p % valoresMat .)
    +               reduce using rule 164 (p -> p % valoresMat .)
    -               reduce using rule 164 (p -> p % valoresMat .)
    EQEQ            reduce using rule 164 (p -> p % valoresMat .)
    DISTINTO        reduce using rule 164 (p -> p % valoresMat .)
    >               reduce using rule 164 (p -> p % valoresMat .)
    <               reduce using rule 164 (p -> p % valoresMat .)
    ,               reduce using rule 164 (p -> p % valoresMat .)
    ]               reduce using rule 164 (p -> p % valoresMat .)
    ;               reduce using rule 164 (p -> p % valoresMat .)
    AND             reduce using rule 164 (p -> p % valoresMat .)
    OR              reduce using rule 164 (p -> p % valoresMat .)
    ?               reduce using rule 164 (p -> p % valoresMat .)
    :               reduce using rule 164 (p -> p % valoresMat .)
    }               reduce using rule 164 (p -> p % valoresMat .)
    ^               shift and go to state 142


state 314

    (158) p -> p % exp .
    (169) exp -> exp . ^ iSing
    (171) exp -> exp . ^ valoresMat

    *               reduce using rule 158 (p -> p % exp .)
    /               reduce using rule 158 (p -> p % exp .)
    %               reduce using rule 158 (p -> p % exp .)
    )               reduce using rule 158 (p -> p % exp .)
    +               reduce using rule 158 (p -> p % exp .)
    -               reduce using rule 158 (p -> p % exp .)
    EQEQ            reduce using rule 158 (p -> p % exp .)
    DISTINTO        reduce using rule 158 (p -> p % exp .)
    >               reduce using rule 158 (p -> p % exp .)
    <               reduce using rule 158 (p -> p % exp .)
    ,               reduce using rule 158 (p -> p % exp .)
    ]               reduce using rule 158 (p -> p % exp .)
    ;               reduce using rule 158 (p -> p % exp .)
    AND             reduce using rule 158 (p -> p % exp .)
    OR              reduce using rule 158 (p -> p % exp .)
    ?               reduce using rule 158 (p -> p % exp .)
    :               reduce using rule 158 (p -> p % exp .)
    }               reduce using rule 158 (p -> p % exp .)
    ^               shift and go to state 197


state 315

    (162) p -> p * valoresMat .
    (170) exp -> valoresMat . ^ iSing
    (172) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 162 (p -> p * valoresMat .)
    /               reduce using rule 162 (p -> p * valoresMat .)
    %               reduce using rule 162 (p -> p * valoresMat .)
    )               reduce using rule 162 (p -> p * valoresMat .)
    +               reduce using rule 162 (p -> p * valoresMat .)
    -               reduce using rule 162 (p -> p * valoresMat .)
    EQEQ            reduce using rule 162 (p -> p * valoresMat .)
    DISTINTO        reduce using rule 162 (p -> p * valoresMat .)
    >               reduce using rule 162 (p -> p * valoresMat .)
    <               reduce using rule 162 (p -> p * valoresMat .)
    ,               reduce using rule 162 (p -> p * valoresMat .)
    ]               reduce using rule 162 (p -> p * valoresMat .)
    ;               reduce using rule 162 (p -> p * valoresMat .)
    AND             reduce using rule 162 (p -> p * valoresMat .)
    OR              reduce using rule 162 (p -> p * valoresMat .)
    ?               reduce using rule 162 (p -> p * valoresMat .)
    :               reduce using rule 162 (p -> p * valoresMat .)
    }               reduce using rule 162 (p -> p * valoresMat .)
    ^               shift and go to state 142


state 316

    (156) p -> p * exp .
    (169) exp -> exp . ^ iSing
    (171) exp -> exp . ^ valoresMat

    *               reduce using rule 156 (p -> p * exp .)
    /               reduce using rule 156 (p -> p * exp .)
    %               reduce using rule 156 (p -> p * exp .)
    )               reduce using rule 156 (p -> p * exp .)
    +               reduce using rule 156 (p -> p * exp .)
    -               reduce using rule 156 (p -> p * exp .)
    EQEQ            reduce using rule 156 (p -> p * exp .)
    DISTINTO        reduce using rule 156 (p -> p * exp .)
    >               reduce using rule 156 (p -> p * exp .)
    <               reduce using rule 156 (p -> p * exp .)
    ,               reduce using rule 156 (p -> p * exp .)
    ]               reduce using rule 156 (p -> p * exp .)
    ;               reduce using rule 156 (p -> p * exp .)
    AND             reduce using rule 156 (p -> p * exp .)
    OR              reduce using rule 156 (p -> p * exp .)
    ?               reduce using rule 156 (p -> p * exp .)
    :               reduce using rule 156 (p -> p * exp .)
    }               reduce using rule 156 (p -> p * exp .)
    ^               shift and go to state 197


state 317

    (163) p -> p / valoresMat .
    (170) exp -> valoresMat . ^ iSing
    (172) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 163 (p -> p / valoresMat .)
    /               reduce using rule 163 (p -> p / valoresMat .)
    %               reduce using rule 163 (p -> p / valoresMat .)
    )               reduce using rule 163 (p -> p / valoresMat .)
    +               reduce using rule 163 (p -> p / valoresMat .)
    -               reduce using rule 163 (p -> p / valoresMat .)
    EQEQ            reduce using rule 163 (p -> p / valoresMat .)
    DISTINTO        reduce using rule 163 (p -> p / valoresMat .)
    >               reduce using rule 163 (p -> p / valoresMat .)
    <               reduce using rule 163 (p -> p / valoresMat .)
    ,               reduce using rule 163 (p -> p / valoresMat .)
    ]               reduce using rule 163 (p -> p / valoresMat .)
    ;               reduce using rule 163 (p -> p / valoresMat .)
    AND             reduce using rule 163 (p -> p / valoresMat .)
    OR              reduce using rule 163 (p -> p / valoresMat .)
    ?               reduce using rule 163 (p -> p / valoresMat .)
    :               reduce using rule 163 (p -> p / valoresMat .)
    }               reduce using rule 163 (p -> p / valoresMat .)
    ^               shift and go to state 142


state 318

    (157) p -> p / exp .
    (169) exp -> exp . ^ iSing
    (171) exp -> exp . ^ valoresMat

    *               reduce using rule 157 (p -> p / exp .)
    /               reduce using rule 157 (p -> p / exp .)
    %               reduce using rule 157 (p -> p / exp .)
    )               reduce using rule 157 (p -> p / exp .)
    +               reduce using rule 157 (p -> p / exp .)
    -               reduce using rule 157 (p -> p / exp .)
    EQEQ            reduce using rule 157 (p -> p / exp .)
    DISTINTO        reduce using rule 157 (p -> p / exp .)
    >               reduce using rule 157 (p -> p / exp .)
    <               reduce using rule 157 (p -> p / exp .)
    ,               reduce using rule 157 (p -> p / exp .)
    ]               reduce using rule 157 (p -> p / exp .)
    ;               reduce using rule 157 (p -> p / exp .)
    AND             reduce using rule 157 (p -> p / exp .)
    OR              reduce using rule 157 (p -> p / exp .)
    ?               reduce using rule 157 (p -> p / exp .)
    :               reduce using rule 157 (p -> p / exp .)
    }               reduce using rule 157 (p -> p / exp .)
    ^               shift and go to state 197


state 319

    (110) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> valoresBool . OR and
    (190) expBool -> valoresBool . OR valoresBool
    (193) and -> valoresBool . AND eq
    (195) and -> valoresBool . AND valoresBool

    ?               shift and go to state 363
    OR              shift and go to state 146
    AND             shift and go to state 145


state 320

    (185) valoresBool -> ( ternarioBool . )

    )               shift and go to state 364


state 321

    (221) parenBool -> ( expBool . )
    (111) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> expBool . OR and
    (189) expBool -> expBool . OR valoresBool

    )               shift and go to state 289
    ?               shift and go to state 365
    OR              shift and go to state 181


state 322

    (171) exp -> exp ^ valoresMat .

    ^               reduce using rule 171 (exp -> exp ^ valoresMat .)
    *               reduce using rule 171 (exp -> exp ^ valoresMat .)
    /               reduce using rule 171 (exp -> exp ^ valoresMat .)
    %               reduce using rule 171 (exp -> exp ^ valoresMat .)
    +               reduce using rule 171 (exp -> exp ^ valoresMat .)
    -               reduce using rule 171 (exp -> exp ^ valoresMat .)
    EQEQ            reduce using rule 171 (exp -> exp ^ valoresMat .)
    DISTINTO        reduce using rule 171 (exp -> exp ^ valoresMat .)
    >               reduce using rule 171 (exp -> exp ^ valoresMat .)
    <               reduce using rule 171 (exp -> exp ^ valoresMat .)
    AND             reduce using rule 171 (exp -> exp ^ valoresMat .)
    OR              reduce using rule 171 (exp -> exp ^ valoresMat .)
    ?               reduce using rule 171 (exp -> exp ^ valoresMat .)
    ,               reduce using rule 171 (exp -> exp ^ valoresMat .)
    ]               reduce using rule 171 (exp -> exp ^ valoresMat .)
    )               reduce using rule 171 (exp -> exp ^ valoresMat .)
    ;               reduce using rule 171 (exp -> exp ^ valoresMat .)
    :               reduce using rule 171 (exp -> exp ^ valoresMat .)
    }               reduce using rule 171 (exp -> exp ^ valoresMat .)


state 323

    (169) exp -> exp ^ iSing .

    ^               reduce using rule 169 (exp -> exp ^ iSing .)
    *               reduce using rule 169 (exp -> exp ^ iSing .)
    /               reduce using rule 169 (exp -> exp ^ iSing .)
    %               reduce using rule 169 (exp -> exp ^ iSing .)
    +               reduce using rule 169 (exp -> exp ^ iSing .)
    -               reduce using rule 169 (exp -> exp ^ iSing .)
    EQEQ            reduce using rule 169 (exp -> exp ^ iSing .)
    DISTINTO        reduce using rule 169 (exp -> exp ^ iSing .)
    >               reduce using rule 169 (exp -> exp ^ iSing .)
    <               reduce using rule 169 (exp -> exp ^ iSing .)
    AND             reduce using rule 169 (exp -> exp ^ iSing .)
    OR              reduce using rule 169 (exp -> exp ^ iSing .)
    ?               reduce using rule 169 (exp -> exp ^ iSing .)
    ,               reduce using rule 169 (exp -> exp ^ iSing .)
    ]               reduce using rule 169 (exp -> exp ^ iSing .)
    )               reduce using rule 169 (exp -> exp ^ iSing .)
    ;               reduce using rule 169 (exp -> exp ^ iSing .)
    :               reduce using rule 169 (exp -> exp ^ iSing .)
    }               reduce using rule 169 (exp -> exp ^ iSing .)


state 324

    (124) reg -> { campos } .

    .               reduce using rule 124 (reg -> { campos } .)
    :               reduce using rule 124 (reg -> { campos } .)
    ,               reduce using rule 124 (reg -> { campos } .)
    ]               reduce using rule 124 (reg -> { campos } .)
    )               reduce using rule 124 (reg -> { campos } .)
    ;               reduce using rule 124 (reg -> { campos } .)
    }               reduce using rule 124 (reg -> { campos } .)


state 325

    (125) campos -> ID : . valores , campos
    (126) campos -> ID : . valores
    (59) valores -> . eMat
    (60) valores -> . expBool
    (61) valores -> . funcReturn
    (62) valores -> . reg
    (63) valores -> . INT
    (64) valores -> . FLOAT
    (65) valores -> . STRING
    (66) valores -> . BOOL
    (67) valores -> . varYVals
    (68) valores -> . varsOps
    (69) valores -> . vec
    (70) valores -> . ternario
    (71) valores -> . atributos
    (72) valores -> . RES
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (124) reg -> . { campos }
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (56) vec -> . [ elem ]
    (78) ternario -> . ternarioMat
    (79) ternario -> . ternarioBool
    (80) ternario -> . ( ternarioMat )
    (81) ternario -> . ( ternarioBool )
    (82) ternario -> . ternarioVars
    (83) ternario -> . ( ternarioVars )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 87
    FLOAT           shift and go to state 89
    STRING          shift and go to state 70
    BOOL            shift and go to state 92
    RES             shift and go to state 62
    {               shift and go to state 96
    ID              shift and go to state 85
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 72
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    ?               reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    ternario                       shift and go to state 60
    funcBool                       shift and go to state 61
    funcInt                        shift and go to state 63
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 69
    eMat                           shift and go to state 71
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 75
    vec                            shift and go to state 76
    paren                          shift and go to state 83
    reg                            shift and go to state 77
    expBool                        shift and go to state 78
    ternarioBool                   shift and go to state 79
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 86
    funcReturn                     shift and go to state 88
    valores                        shift and go to state 366
    p                              shift and go to state 91
    varsOps                        shift and go to state 93
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 66
    varYVals                       shift and go to state 98
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 99

state 326

    (137) varAsig -> ID . ID = . valoresAsig
    (131) valoresAsig -> . valores
    (59) valores -> . eMat
    (60) valores -> . expBool
    (61) valores -> . funcReturn
    (62) valores -> . reg
    (63) valores -> . INT
    (64) valores -> . FLOAT
    (65) valores -> . STRING
    (66) valores -> . BOOL
    (67) valores -> . varYVals
    (68) valores -> . varsOps
    (69) valores -> . vec
    (70) valores -> . ternario
    (71) valores -> . atributos
    (72) valores -> . RES
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (124) reg -> . { campos }
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (56) vec -> . [ elem ]
    (78) ternario -> . ternarioMat
    (79) ternario -> . ternarioBool
    (80) ternario -> . ( ternarioMat )
    (81) ternario -> . ( ternarioBool )
    (82) ternario -> . ternarioVars
    (83) ternario -> . ( ternarioVars )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 87
    FLOAT           shift and go to state 89
    STRING          shift and go to state 70
    BOOL            shift and go to state 92
    RES             shift and go to state 62
    {               shift and go to state 96
    ID              shift and go to state 85
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 72
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    ?               reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    ternario                       shift and go to state 60
    funcBool                       shift and go to state 61
    funcInt                        shift and go to state 63
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 69
    eMat                           shift and go to state 71
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 75
    vec                            shift and go to state 76
    paren                          shift and go to state 83
    reg                            shift and go to state 77
    expBool                        shift and go to state 78
    ternarioBool                   shift and go to state 79
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    valoresAsig                    shift and go to state 367
    funcString                     shift and go to state 86
    funcReturn                     shift and go to state 88
    valores                        shift and go to state 125
    p                              shift and go to state 91
    varsOps                        shift and go to state 93
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 66
    varYVals                       shift and go to state 98
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 99

state 327

    (122) m -> [ valores ] .
    (123) m -> [ valores ] . m
    (122) m -> . [ valores ]
    (123) m -> . [ valores ] m

    .               reduce using rule 122 (m -> [ valores ] .)
    ;               reduce using rule 122 (m -> [ valores ] .)
    ,               reduce using rule 122 (m -> [ valores ] .)
    ]               reduce using rule 122 (m -> [ valores ] .)
    +               reduce using rule 122 (m -> [ valores ] .)
    -               reduce using rule 122 (m -> [ valores ] .)
    *               reduce using rule 122 (m -> [ valores ] .)
    /               reduce using rule 122 (m -> [ valores ] .)
    %               reduce using rule 122 (m -> [ valores ] .)
    ^               reduce using rule 122 (m -> [ valores ] .)
    OR              reduce using rule 122 (m -> [ valores ] .)
    AND             reduce using rule 122 (m -> [ valores ] .)
    ?               reduce using rule 122 (m -> [ valores ] .)
    EQEQ            reduce using rule 122 (m -> [ valores ] .)
    DISTINTO        reduce using rule 122 (m -> [ valores ] .)
    >               reduce using rule 122 (m -> [ valores ] .)
    <               reduce using rule 122 (m -> [ valores ] .)
    )               reduce using rule 122 (m -> [ valores ] .)
    :               reduce using rule 122 (m -> [ valores ] .)
    }               reduce using rule 122 (m -> [ valores ] .)
    MASMAS          reduce using rule 122 (m -> [ valores ] .)
    MENOSMENOS      reduce using rule 122 (m -> [ valores ] .)
    MULEQ           reduce using rule 122 (m -> [ valores ] .)
    DIVEQ           reduce using rule 122 (m -> [ valores ] .)
    MASEQ           reduce using rule 122 (m -> [ valores ] .)
    MENOSEQ         reduce using rule 122 (m -> [ valores ] .)
    =               reduce using rule 122 (m -> [ valores ] .)
    [               shift and go to state 102

    m                              shift and go to state 368

state 328

    (110) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (188) expBool -> valoresBool . OR and
    (190) expBool -> valoresBool . OR valoresBool
    (193) and -> valoresBool . AND eq
    (195) and -> valoresBool . AND valoresBool

    ?               shift and go to state 369
    OR              shift and go to state 146
    AND             shift and go to state 145


state 329

    (213) tCompare -> ( ternarioMat . )
    (146) valoresMat -> ( ternarioMat . )

    )               shift and go to state 370


state 330

    (221) parenBool -> ( expBool . )
    (111) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (104) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (187) expBool -> expBool . OR and
    (189) expBool -> expBool . OR valoresBool

    )               shift and go to state 289
    ?               shift and go to state 371
    OR              shift and go to state 181


state 331

    (6) lAbierta -> IF ( cosaBooleana ) . linea
    (7) lAbierta -> IF ( cosaBooleana ) . { g } ELSE lAbierta
    (8) lAbierta -> IF ( cosaBooleana ) . lCerrada ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) . { g }
    (14) lCerrada -> IF ( cosaBooleana ) . { g } ELSE { g }
    (15) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE { g }
    (16) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) . { g } ELSE lCerrada
    (18) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE COMMENT com lCerrada
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (132) varAsig -> . varYVals MULEQ valoresAsig
    (133) varAsig -> . varYVals DIVEQ valoresAsig
    (134) varAsig -> . varYVals MASEQ valoresAsig
    (135) varAsig -> . varYVals MENOSEQ valoresAsig
    (136) varAsig -> . varYVals = valoresAsig
    (137) varAsig -> . ID . ID = valoresAsig
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 376
    COMMENT         shift and go to state 373
    IF              shift and go to state 374
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 375
    lAbierta                       shift and go to state 30
    linea                          shift and go to state 372
    varYVals                       shift and go to state 11
    loop                           shift and go to state 377

state 332

    (48) funcInt -> MULTIESCALAR ( valores , . valores param )
    (59) valores -> . eMat
    (60) valores -> . expBool
    (61) valores -> . funcReturn
    (62) valores -> . reg
    (63) valores -> . INT
    (64) valores -> . FLOAT
    (65) valores -> . STRING
    (66) valores -> . BOOL
    (67) valores -> . varYVals
    (68) valores -> . varsOps
    (69) valores -> . vec
    (70) valores -> . ternario
    (71) valores -> . atributos
    (72) valores -> . RES
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (124) reg -> . { campos }
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (56) vec -> . [ elem ]
    (78) ternario -> . ternarioMat
    (79) ternario -> . ternarioBool
    (80) ternario -> . ( ternarioMat )
    (81) ternario -> . ( ternarioBool )
    (82) ternario -> . ternarioVars
    (83) ternario -> . ( ternarioVars )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 87
    FLOAT           shift and go to state 89
    STRING          shift and go to state 70
    BOOL            shift and go to state 92
    RES             shift and go to state 62
    {               shift and go to state 96
    ID              shift and go to state 85
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 72
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    ?               reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    ternario                       shift and go to state 60
    funcBool                       shift and go to state 61
    funcInt                        shift and go to state 63
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 69
    eMat                           shift and go to state 71
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 75
    vec                            shift and go to state 76
    paren                          shift and go to state 83
    reg                            shift and go to state 77
    expBool                        shift and go to state 78
    ternarioBool                   shift and go to state 79
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 86
    funcReturn                     shift and go to state 88
    valores                        shift and go to state 378
    p                              shift and go to state 91
    varsOps                        shift and go to state 93
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 66
    varYVals                       shift and go to state 98
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 99

state 333

    (50) funcString -> CAPITALIZAR ( valores ) .

    +               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    -               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    *               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    /               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    %               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    ^               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    )               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    ;               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    ,               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    ]               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    EQEQ            reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    DISTINTO        reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    >               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    <               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    AND             reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    OR              reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    ?               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    :               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    }               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)


state 334

    (24) lCerrada -> loop COMMENT com lCerrada .

    WHILE           reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    COMMENT         reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    IF              reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    DO              reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    FOR             reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    RETURN          reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    ;               reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    MENOSMENOS      reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    MASMAS          reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    ID              reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    PRINT           reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    MULTIESCALAR    reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    LENGTH          reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    CAPITALIZAR     reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    COLINEALES      reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    [               reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    $end            reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    }               reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    ELSE            reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)


state 335

    (22) lCerrada -> loop { g } .

    WHILE           reduce using rule 22 (lCerrada -> loop { g } .)
    COMMENT         reduce using rule 22 (lCerrada -> loop { g } .)
    IF              reduce using rule 22 (lCerrada -> loop { g } .)
    DO              reduce using rule 22 (lCerrada -> loop { g } .)
    FOR             reduce using rule 22 (lCerrada -> loop { g } .)
    RETURN          reduce using rule 22 (lCerrada -> loop { g } .)
    ;               reduce using rule 22 (lCerrada -> loop { g } .)
    MENOSMENOS      reduce using rule 22 (lCerrada -> loop { g } .)
    MASMAS          reduce using rule 22 (lCerrada -> loop { g } .)
    ID              reduce using rule 22 (lCerrada -> loop { g } .)
    PRINT           reduce using rule 22 (lCerrada -> loop { g } .)
    MULTIESCALAR    reduce using rule 22 (lCerrada -> loop { g } .)
    LENGTH          reduce using rule 22 (lCerrada -> loop { g } .)
    CAPITALIZAR     reduce using rule 22 (lCerrada -> loop { g } .)
    COLINEALES      reduce using rule 22 (lCerrada -> loop { g } .)
    [               reduce using rule 22 (lCerrada -> loop { g } .)
    $end            reduce using rule 22 (lCerrada -> loop { g } .)
    }               reduce using rule 22 (lCerrada -> loop { g } .)
    ELSE            reduce using rule 22 (lCerrada -> loop { g } .)


state 336

    (27) lCerrada -> DO COMMENT com lCerrada WHILE . ( valores ) ;

    (               shift and go to state 379


state 337

    (14) lCerrada -> IF ( cosaBooleana ) . { g } ELSE { g }
    (15) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE { g }
    (16) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) . { g } ELSE lCerrada
    (18) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE COMMENT com lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (132) varAsig -> . varYVals MULEQ valoresAsig
    (133) varAsig -> . varYVals DIVEQ valoresAsig
    (134) varAsig -> . varYVals MASEQ valoresAsig
    (135) varAsig -> . varYVals MENOSEQ valoresAsig
    (136) varAsig -> . varYVals = valoresAsig
    (137) varAsig -> . ID . ID = valoresAsig
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 381
    COMMENT         shift and go to state 373
    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 380
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 39

state 338

    (26) lCerrada -> DO lCerrada WHILE ( valores . ) ;

    )               shift and go to state 382


state 339

    (25) lCerrada -> DO { g } WHILE . ( valores ) ;

    (               shift and go to state 383


state 340

    (51) funcBool -> COLINEALES ( valores , valores . )

    )               shift and go to state 384


state 341

    (34) loop -> FOR ( primParam ; valores . ; tercerParam )

    ;               shift and go to state 385


state 342

    (212) tCompare -> ( ternarioBool . )

    )               shift and go to state 386


state 343

    (110) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (84) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (112) valoresTernarioBool -> . BOOL
    (113) valoresTernarioBool -> . funcBool
    (114) valoresTernarioBool -> . ternarioBool
    (115) valoresTernarioBool -> . ( ternarioBool )
    (116) valoresTernarioBool -> . expBool
    (94) valoresTernarioVars -> . reg
    (95) valoresTernarioVars -> . vec
    (96) valoresTernarioVars -> . ternarioVars
    (97) valoresTernarioVars -> . ( ternarioVars )
    (98) valoresTernarioVars -> . atributos
    (99) valoresTernarioVars -> . varsOps
    (100) valoresTernarioVars -> . varYVals
    (101) valoresTernarioVars -> . res
    (105) valoresTernarioMat -> . INT
    (106) valoresTernarioMat -> . FLOAT
    (107) valoresTernarioMat -> . funcInt
    (108) valoresTernarioMat -> . STRING
    (109) valoresTernarioMat -> . eMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (124) reg -> . { campos }
    (56) vec -> . [ elem ]
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (102) res -> . RES
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    BOOL            shift and go to state 271
    (               shift and go to state 388
    INT             shift and go to state 268
    FLOAT           shift and go to state 269
    STRING          shift and go to state 265
    COLINEALES      shift and go to state 4
    {               shift and go to state 96
    [               shift and go to state 20
    ID              shift and go to state 161
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 257
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 28
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 261
    valoresBool                    shift and go to state 259
    vec                            shift and go to state 262
    paren                          shift and go to state 83
    reg                            shift and go to state 263
    valoresTernarioVars            shift and go to state 264
    expBool                        shift and go to state 270
    ternarioBool                   shift and go to state 266
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    valoresTernarioMat             shift and go to state 387
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 389
    res                            shift and go to state 255
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 390
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 276

state 344

    (110) ternarioBool -> valoresBool ? valoresTernarioBool : . valoresTernarioBool
    (88) ternarioVars -> valoresBool ? valoresTernarioBool : . valoresTernarioVars
    (112) valoresTernarioBool -> . BOOL
    (113) valoresTernarioBool -> . funcBool
    (114) valoresTernarioBool -> . ternarioBool
    (115) valoresTernarioBool -> . ( ternarioBool )
    (116) valoresTernarioBool -> . expBool
    (94) valoresTernarioVars -> . reg
    (95) valoresTernarioVars -> . vec
    (96) valoresTernarioVars -> . ternarioVars
    (97) valoresTernarioVars -> . ( ternarioVars )
    (98) valoresTernarioVars -> . atributos
    (99) valoresTernarioVars -> . varsOps
    (100) valoresTernarioVars -> . varYVals
    (101) valoresTernarioVars -> . res
    (51) funcBool -> . COLINEALES ( valores , valores )
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (124) reg -> . { campos }
    (56) vec -> . [ elem ]
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (102) res -> . RES
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (221) parenBool -> . ( expBool )
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )

    BOOL            shift and go to state 271
    (               shift and go to state 393
    COLINEALES      shift and go to state 4
    {               shift and go to state 96
    [               shift and go to state 20
    ID              shift and go to state 161
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 257
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    INT             shift and go to state 208
    FLOAT           shift and go to state 209
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 159
    NOT             shift and go to state 94
    CAPITALIZAR     shift and go to state 28
    -               shift and go to state 74
    +               shift and go to state 73

    and                            shift and go to state 59
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 202
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 204
    valoresTernarioBool            shift and go to state 391
    valoresBool                    shift and go to state 259
    vec                            shift and go to state 262
    paren                          shift and go to state 83
    reg                            shift and go to state 263
    valoresTernarioVars            shift and go to state 392
    expBool                        shift and go to state 270
    ternarioBool                   shift and go to state 266
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 394
    res                            shift and go to state 255
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 395
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 276

state 345

    (84) ternarioVars -> valoresBool ? valoresTernarioVars : . valoresTernarioVars
    (85) ternarioVars -> valoresBool ? valoresTernarioVars : . valoresTernarioMat
    (87) ternarioVars -> valoresBool ? valoresTernarioVars : . valoresTernarioBool
    (94) valoresTernarioVars -> . reg
    (95) valoresTernarioVars -> . vec
    (96) valoresTernarioVars -> . ternarioVars
    (97) valoresTernarioVars -> . ( ternarioVars )
    (98) valoresTernarioVars -> . atributos
    (99) valoresTernarioVars -> . varsOps
    (100) valoresTernarioVars -> . varYVals
    (101) valoresTernarioVars -> . res
    (105) valoresTernarioMat -> . INT
    (106) valoresTernarioMat -> . FLOAT
    (107) valoresTernarioMat -> . funcInt
    (108) valoresTernarioMat -> . STRING
    (109) valoresTernarioMat -> . eMat
    (112) valoresTernarioBool -> . BOOL
    (113) valoresTernarioBool -> . funcBool
    (114) valoresTernarioBool -> . ternarioBool
    (115) valoresTernarioBool -> . ( ternarioBool )
    (116) valoresTernarioBool -> . expBool
    (124) reg -> . { campos }
    (56) vec -> . [ elem ]
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (102) res -> . RES
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    (               shift and go to state 400
    INT             shift and go to state 268
    FLOAT           shift and go to state 269
    STRING          shift and go to state 265
    BOOL            shift and go to state 271
    {               shift and go to state 96
    [               shift and go to state 20
    ID              shift and go to state 161
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 257
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 28
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    atributos                      shift and go to state 276
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 397
    valoresBool                    shift and go to state 396
    vec                            shift and go to state 262
    paren                          shift and go to state 83
    reg                            shift and go to state 263
    valoresTernarioVars            shift and go to state 398
    exp                            shift and go to state 95
    ternarioBool                   shift and go to state 266
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    valoresTernarioMat             shift and go to state 399
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 389
    res                            shift and go to state 255
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 390
    parenBool                      shift and go to state 81
    expBool                        shift and go to state 401

state 346

    (103) ternarioMat -> valoresBool ? valoresTernarioMat : . valoresTernarioMat
    (86) ternarioVars -> valoresBool ? valoresTernarioMat : . valoresTernarioVars
    (105) valoresTernarioMat -> . INT
    (106) valoresTernarioMat -> . FLOAT
    (107) valoresTernarioMat -> . funcInt
    (108) valoresTernarioMat -> . STRING
    (109) valoresTernarioMat -> . eMat
    (94) valoresTernarioVars -> . reg
    (95) valoresTernarioVars -> . vec
    (96) valoresTernarioVars -> . ternarioVars
    (97) valoresTernarioVars -> . ( ternarioVars )
    (98) valoresTernarioVars -> . atributos
    (99) valoresTernarioVars -> . varsOps
    (100) valoresTernarioVars -> . varYVals
    (101) valoresTernarioVars -> . res
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (124) reg -> . { campos }
    (56) vec -> . [ elem ]
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (102) res -> . RES
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (51) funcBool -> . COLINEALES ( valores , valores )
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 268
    FLOAT           shift and go to state 269
    STRING          shift and go to state 265
    (               shift and go to state 403
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    {               shift and go to state 96
    [               shift and go to state 20
    ID              shift and go to state 161
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 257
    BOOL            shift and go to state 165
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    atributos                      shift and go to state 276
    funcBool                       shift and go to state 150
    funcInt                        shift and go to state 258
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 260
    res                            shift and go to state 255
    valoresBool                    shift and go to state 402
    vec                            shift and go to state 262
    paren                          shift and go to state 83
    reg                            shift and go to state 263
    valoresTernarioVars            shift and go to state 404
    exp                            shift and go to state 95
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    valoresTernarioMat             shift and go to state 405
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 272
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 275
    parenBool                      shift and go to state 81
    expBool                        shift and go to state 406

state 347

    (111) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (89) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (112) valoresTernarioBool -> . BOOL
    (113) valoresTernarioBool -> . funcBool
    (114) valoresTernarioBool -> . ternarioBool
    (115) valoresTernarioBool -> . ( ternarioBool )
    (116) valoresTernarioBool -> . expBool
    (94) valoresTernarioVars -> . reg
    (95) valoresTernarioVars -> . vec
    (96) valoresTernarioVars -> . ternarioVars
    (97) valoresTernarioVars -> . ( ternarioVars )
    (98) valoresTernarioVars -> . atributos
    (99) valoresTernarioVars -> . varsOps
    (100) valoresTernarioVars -> . varYVals
    (101) valoresTernarioVars -> . res
    (105) valoresTernarioMat -> . INT
    (106) valoresTernarioMat -> . FLOAT
    (107) valoresTernarioMat -> . funcInt
    (108) valoresTernarioMat -> . STRING
    (109) valoresTernarioMat -> . eMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (124) reg -> . { campos }
    (56) vec -> . [ elem ]
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (102) res -> . RES
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    BOOL            shift and go to state 271
    (               shift and go to state 388
    INT             shift and go to state 268
    FLOAT           shift and go to state 269
    STRING          shift and go to state 265
    COLINEALES      shift and go to state 4
    {               shift and go to state 96
    [               shift and go to state 20
    ID              shift and go to state 161
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 257
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 28
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 302
    valoresBool                    shift and go to state 259
    vec                            shift and go to state 262
    paren                          shift and go to state 83
    reg                            shift and go to state 263
    valoresTernarioVars            shift and go to state 303
    expBool                        shift and go to state 270
    ternarioBool                   shift and go to state 266
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    valoresTernarioMat             shift and go to state 407
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 389
    res                            shift and go to state 255
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 390
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 276

state 348

    (110) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (84) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (103) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (188) expBool -> valoresBool . OR and
    (190) expBool -> valoresBool . OR valoresBool
    (193) and -> valoresBool . AND eq
    (195) and -> valoresBool . AND valoresBool

    ?               shift and go to state 408
    OR              shift and go to state 146
    AND             shift and go to state 145


state 349

    (115) valoresTernarioBool -> ( ternarioBool . )
    (185) valoresBool -> ( ternarioBool . )
    (212) tCompare -> ( ternarioBool . )

    )               shift and go to state 409


state 350

    (221) parenBool -> ( expBool . )
    (111) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (89) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (104) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (187) expBool -> expBool . OR and
    (189) expBool -> expBool . OR valoresBool

    )               shift and go to state 289
    ?               shift and go to state 410
    OR              shift and go to state 181


state 351

    (97) valoresTernarioVars -> ( ternarioVars . )

    )               shift and go to state 411


state 352

    (103) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (110) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (105) valoresTernarioMat -> . INT
    (106) valoresTernarioMat -> . FLOAT
    (107) valoresTernarioMat -> . funcInt
    (108) valoresTernarioMat -> . STRING
    (109) valoresTernarioMat -> . eMat
    (112) valoresTernarioBool -> . BOOL
    (113) valoresTernarioBool -> . funcBool
    (114) valoresTernarioBool -> . ternarioBool
    (115) valoresTernarioBool -> . ( ternarioBool )
    (116) valoresTernarioBool -> . expBool
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (56) vec -> . [ elem ]
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 268
    FLOAT           shift and go to state 269
    STRING          shift and go to state 265
    BOOL            shift and go to state 271
    (               shift and go to state 414
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73
    [               shift and go to state 20
    NOT             shift and go to state 94

    and                            shift and go to state 59
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 319
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 412
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    varsOps                        shift and go to state 157
    ternarioBool                   shift and go to state 266
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    valoresTernarioMat             shift and go to state 413
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    expBool                        shift and go to state 415
    exp                            shift and go to state 95
    varYVals                       shift and go to state 168
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 169

state 353

    (146) valoresMat -> ( ternarioMat ) .
    (213) tCompare -> ( ternarioMat ) .

    )               reduce using rule 146 (valoresMat -> ( ternarioMat ) .)
    +               reduce using rule 146 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 146 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 146 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 146 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 146 (valoresMat -> ( ternarioMat ) .)
    ^               reduce using rule 146 (valoresMat -> ( ternarioMat ) .)
    EQEQ            reduce using rule 213 (tCompare -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 213 (tCompare -> ( ternarioMat ) .)
    >               reduce using rule 213 (tCompare -> ( ternarioMat ) .)
    <               reduce using rule 213 (tCompare -> ( ternarioMat ) .)


state 354

    (185) valoresBool -> ( ternarioBool ) .
    (212) tCompare -> ( ternarioBool ) .

    ?               reduce using rule 185 (valoresBool -> ( ternarioBool ) .)
    OR              reduce using rule 185 (valoresBool -> ( ternarioBool ) .)
    AND             reduce using rule 185 (valoresBool -> ( ternarioBool ) .)
    ,               reduce using rule 185 (valoresBool -> ( ternarioBool ) .)
    ]               reduce using rule 185 (valoresBool -> ( ternarioBool ) .)
    )               reduce using rule 185 (valoresBool -> ( ternarioBool ) .)
    ;               reduce using rule 185 (valoresBool -> ( ternarioBool ) .)
    :               reduce using rule 185 (valoresBool -> ( ternarioBool ) .)
    }               reduce using rule 185 (valoresBool -> ( ternarioBool ) .)
    EQEQ            reduce using rule 212 (tCompare -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 212 (tCompare -> ( ternarioBool ) .)
    >               reduce using rule 212 (tCompare -> ( ternarioBool ) .)
    <               reduce using rule 212 (tCompare -> ( ternarioBool ) .)


state 355

    (104) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (111) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (105) valoresTernarioMat -> . INT
    (106) valoresTernarioMat -> . FLOAT
    (107) valoresTernarioMat -> . funcInt
    (108) valoresTernarioMat -> . STRING
    (109) valoresTernarioMat -> . eMat
    (112) valoresTernarioBool -> . BOOL
    (113) valoresTernarioBool -> . funcBool
    (114) valoresTernarioBool -> . ternarioBool
    (115) valoresTernarioBool -> . ( ternarioBool )
    (116) valoresTernarioBool -> . expBool
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (56) vec -> . [ elem ]
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 268
    FLOAT           shift and go to state 269
    STRING          shift and go to state 265
    BOOL            shift and go to state 271
    (               shift and go to state 414
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73
    [               shift and go to state 20
    NOT             shift and go to state 94

    and                            shift and go to state 59
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 319
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 416
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    varsOps                        shift and go to state 157
    ternarioBool                   shift and go to state 266
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    valoresTernarioMat             shift and go to state 417
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    expBool                        shift and go to state 415
    exp                            shift and go to state 95
    varYVals                       shift and go to state 168
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 169

state 356

    (103) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (105) valoresTernarioMat -> . INT
    (106) valoresTernarioMat -> . FLOAT
    (107) valoresTernarioMat -> . funcInt
    (108) valoresTernarioMat -> . STRING
    (109) valoresTernarioMat -> . eMat
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (56) vec -> . [ elem ]
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )

    INT             shift and go to state 420
    FLOAT           shift and go to state 421
    STRING          shift and go to state 265
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    (               shift and go to state 232
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73
    [               shift and go to state 20

    funcInt                        shift and go to state 418
    valoresMat                     shift and go to state 67
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 419
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    iSing                          shift and go to state 80
    valoresTernarioMat             shift and go to state 413
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 176
    exp                            shift and go to state 95
    varYVals                       shift and go to state 177
    atributos                      shift and go to state 169

state 357

    (146) valoresMat -> ( ternarioMat ) .

    ^               reduce using rule 146 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 146 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 146 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 146 (valoresMat -> ( ternarioMat ) .)
    +               reduce using rule 146 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 146 (valoresMat -> ( ternarioMat ) .)
    ,               reduce using rule 146 (valoresMat -> ( ternarioMat ) .)
    ]               reduce using rule 146 (valoresMat -> ( ternarioMat ) .)
    EQEQ            reduce using rule 146 (valoresMat -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 146 (valoresMat -> ( ternarioMat ) .)
    >               reduce using rule 146 (valoresMat -> ( ternarioMat ) .)
    <               reduce using rule 146 (valoresMat -> ( ternarioMat ) .)
    )               reduce using rule 146 (valoresMat -> ( ternarioMat ) .)
    ;               reduce using rule 146 (valoresMat -> ( ternarioMat ) .)
    AND             reduce using rule 146 (valoresMat -> ( ternarioMat ) .)
    OR              reduce using rule 146 (valoresMat -> ( ternarioMat ) .)
    ?               reduce using rule 146 (valoresMat -> ( ternarioMat ) .)
    :               reduce using rule 146 (valoresMat -> ( ternarioMat ) .)
    }               reduce using rule 146 (valoresMat -> ( ternarioMat ) .)


state 358

    (104) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (105) valoresTernarioMat -> . INT
    (106) valoresTernarioMat -> . FLOAT
    (107) valoresTernarioMat -> . funcInt
    (108) valoresTernarioMat -> . STRING
    (109) valoresTernarioMat -> . eMat
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (56) vec -> . [ elem ]
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )

    INT             shift and go to state 420
    FLOAT           shift and go to state 421
    STRING          shift and go to state 265
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    (               shift and go to state 232
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73
    [               shift and go to state 20

    funcInt                        shift and go to state 418
    valoresMat                     shift and go to state 67
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 419
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    varsOps                        shift and go to state 176
    valoresTernarioMat             shift and go to state 417
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    iSing                          shift and go to state 80
    exp                            shift and go to state 95
    varYVals                       shift and go to state 177
    atributos                      shift and go to state 169

state 359

    (111) ternarioBool -> expBool ? valoresTernarioBool : . valoresTernarioBool
    (93) ternarioVars -> expBool ? valoresTernarioBool : . valoresTernarioVars
    (112) valoresTernarioBool -> . BOOL
    (113) valoresTernarioBool -> . funcBool
    (114) valoresTernarioBool -> . ternarioBool
    (115) valoresTernarioBool -> . ( ternarioBool )
    (116) valoresTernarioBool -> . expBool
    (94) valoresTernarioVars -> . reg
    (95) valoresTernarioVars -> . vec
    (96) valoresTernarioVars -> . ternarioVars
    (97) valoresTernarioVars -> . ( ternarioVars )
    (98) valoresTernarioVars -> . atributos
    (99) valoresTernarioVars -> . varsOps
    (100) valoresTernarioVars -> . varYVals
    (101) valoresTernarioVars -> . res
    (51) funcBool -> . COLINEALES ( valores , valores )
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (124) reg -> . { campos }
    (56) vec -> . [ elem ]
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (102) res -> . RES
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (221) parenBool -> . ( expBool )
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )

    BOOL            shift and go to state 271
    (               shift and go to state 393
    COLINEALES      shift and go to state 4
    {               shift and go to state 96
    [               shift and go to state 20
    ID              shift and go to state 161
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 257
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    INT             shift and go to state 208
    FLOAT           shift and go to state 209
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 159
    NOT             shift and go to state 94
    CAPITALIZAR     shift and go to state 28
    -               shift and go to state 74
    +               shift and go to state 73

    and                            shift and go to state 59
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 202
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 204
    valoresTernarioBool            shift and go to state 422
    valoresBool                    shift and go to state 259
    vec                            shift and go to state 262
    paren                          shift and go to state 83
    reg                            shift and go to state 263
    valoresTernarioVars            shift and go to state 423
    expBool                        shift and go to state 270
    ternarioBool                   shift and go to state 266
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 394
    res                            shift and go to state 255
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 395
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 276

state 360

    (89) ternarioVars -> expBool ? valoresTernarioVars : . valoresTernarioVars
    (90) ternarioVars -> expBool ? valoresTernarioVars : . valoresTernarioMat
    (92) ternarioVars -> expBool ? valoresTernarioVars : . valoresTernarioBool
    (94) valoresTernarioVars -> . reg
    (95) valoresTernarioVars -> . vec
    (96) valoresTernarioVars -> . ternarioVars
    (97) valoresTernarioVars -> . ( ternarioVars )
    (98) valoresTernarioVars -> . atributos
    (99) valoresTernarioVars -> . varsOps
    (100) valoresTernarioVars -> . varYVals
    (101) valoresTernarioVars -> . res
    (105) valoresTernarioMat -> . INT
    (106) valoresTernarioMat -> . FLOAT
    (107) valoresTernarioMat -> . funcInt
    (108) valoresTernarioMat -> . STRING
    (109) valoresTernarioMat -> . eMat
    (112) valoresTernarioBool -> . BOOL
    (113) valoresTernarioBool -> . funcBool
    (114) valoresTernarioBool -> . ternarioBool
    (115) valoresTernarioBool -> . ( ternarioBool )
    (116) valoresTernarioBool -> . expBool
    (124) reg -> . { campos }
    (56) vec -> . [ elem ]
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (102) res -> . RES
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    (               shift and go to state 400
    INT             shift and go to state 268
    FLOAT           shift and go to state 269
    STRING          shift and go to state 265
    BOOL            shift and go to state 271
    {               shift and go to state 96
    [               shift and go to state 20
    ID              shift and go to state 161
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 257
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 28
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 396
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 424
    vecVal                         shift and go to state 8
    vec                            shift and go to state 262
    paren                          shift and go to state 83
    reg                            shift and go to state 263
    valoresTernarioVars            shift and go to state 425
    expBool                        shift and go to state 401
    ternarioBool                   shift and go to state 266
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    valoresTernarioMat             shift and go to state 426
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 389
    res                            shift and go to state 255
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 390
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 276

state 361

    (104) ternarioMat -> expBool ? valoresTernarioMat : . valoresTernarioMat
    (91) ternarioVars -> expBool ? valoresTernarioMat : . valoresTernarioVars
    (105) valoresTernarioMat -> . INT
    (106) valoresTernarioMat -> . FLOAT
    (107) valoresTernarioMat -> . funcInt
    (108) valoresTernarioMat -> . STRING
    (109) valoresTernarioMat -> . eMat
    (94) valoresTernarioVars -> . reg
    (95) valoresTernarioVars -> . vec
    (96) valoresTernarioVars -> . ternarioVars
    (97) valoresTernarioVars -> . ( ternarioVars )
    (98) valoresTernarioVars -> . atributos
    (99) valoresTernarioVars -> . varsOps
    (100) valoresTernarioVars -> . varYVals
    (101) valoresTernarioVars -> . res
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (124) reg -> . { campos }
    (56) vec -> . [ elem ]
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (102) res -> . RES
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (51) funcBool -> . COLINEALES ( valores , valores )
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 268
    FLOAT           shift and go to state 269
    STRING          shift and go to state 265
    (               shift and go to state 403
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    {               shift and go to state 96
    [               shift and go to state 20
    ID              shift and go to state 161
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 257
    BOOL            shift and go to state 165
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    funcBool                       shift and go to state 150
    funcInt                        shift and go to state 258
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 402
    eMat                           shift and go to state 260
    vecVal                         shift and go to state 8
    vec                            shift and go to state 262
    paren                          shift and go to state 83
    reg                            shift and go to state 263
    valoresTernarioVars            shift and go to state 428
    expBool                        shift and go to state 406
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    valoresTernarioMat             shift and go to state 427
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 272
    res                            shift and go to state 255
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 275
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 276

state 362

    (111) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (104) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (187) expBool -> expBool . OR and
    (189) expBool -> expBool . OR valoresBool

    ?               shift and go to state 371
    OR              shift and go to state 181


state 363

    (110) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (112) valoresTernarioBool -> . BOOL
    (113) valoresTernarioBool -> . funcBool
    (114) valoresTernarioBool -> . ternarioBool
    (115) valoresTernarioBool -> . ( ternarioBool )
    (116) valoresTernarioBool -> . expBool
    (51) funcBool -> . COLINEALES ( valores , valores )
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (56) vec -> . [ elem ]
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (221) parenBool -> . ( expBool )
    (124) reg -> . { campos }
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )

    BOOL            shift and go to state 271
    (               shift and go to state 429
    COLINEALES      shift and go to state 4
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    ID              shift and go to state 206
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    INT             shift and go to state 208
    FLOAT           shift and go to state 209
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 159
    NOT             shift and go to state 94
    CAPITALIZAR     shift and go to state 28
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73

    and                            shift and go to state 59
    atributos                      shift and go to state 169
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 202
    menor                          shift and go to state 65
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 319
    eMat                           shift and go to state 204
    valoresTernarioBool            shift and go to state 412
    mayor                          shift and go to state 97
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    iSing                          shift and go to state 80
    ternarioBool                   shift and go to state 266
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 210
    exp                            shift and go to state 95
    varYVals                       shift and go to state 211
    parenBool                      shift and go to state 81
    expBool                        shift and go to state 415

state 364

    (185) valoresBool -> ( ternarioBool ) .

    EQEQ            reduce using rule 185 (valoresBool -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 185 (valoresBool -> ( ternarioBool ) .)
    AND             reduce using rule 185 (valoresBool -> ( ternarioBool ) .)
    OR              reduce using rule 185 (valoresBool -> ( ternarioBool ) .)
    ?               reduce using rule 185 (valoresBool -> ( ternarioBool ) .)
    ,               reduce using rule 185 (valoresBool -> ( ternarioBool ) .)
    ]               reduce using rule 185 (valoresBool -> ( ternarioBool ) .)
    )               reduce using rule 185 (valoresBool -> ( ternarioBool ) .)
    ;               reduce using rule 185 (valoresBool -> ( ternarioBool ) .)
    :               reduce using rule 185 (valoresBool -> ( ternarioBool ) .)
    }               reduce using rule 185 (valoresBool -> ( ternarioBool ) .)


state 365

    (111) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (112) valoresTernarioBool -> . BOOL
    (113) valoresTernarioBool -> . funcBool
    (114) valoresTernarioBool -> . ternarioBool
    (115) valoresTernarioBool -> . ( ternarioBool )
    (116) valoresTernarioBool -> . expBool
    (51) funcBool -> . COLINEALES ( valores , valores )
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (56) vec -> . [ elem ]
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (221) parenBool -> . ( expBool )
    (124) reg -> . { campos }
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )

    BOOL            shift and go to state 271
    (               shift and go to state 429
    COLINEALES      shift and go to state 4
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    ID              shift and go to state 206
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    INT             shift and go to state 208
    FLOAT           shift and go to state 209
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 159
    NOT             shift and go to state 94
    CAPITALIZAR     shift and go to state 28
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73

    and                            shift and go to state 59
    atributos                      shift and go to state 169
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 202
    menor                          shift and go to state 65
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 319
    eMat                           shift and go to state 204
    valoresTernarioBool            shift and go to state 416
    mayor                          shift and go to state 97
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    iSing                          shift and go to state 80
    ternarioBool                   shift and go to state 266
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 210
    exp                            shift and go to state 95
    varYVals                       shift and go to state 211
    parenBool                      shift and go to state 81
    expBool                        shift and go to state 415

state 366

    (125) campos -> ID : valores . , campos
    (126) campos -> ID : valores .

    ,               shift and go to state 430
    }               reduce using rule 126 (campos -> ID : valores .)


state 367

    (137) varAsig -> ID . ID = valoresAsig .

    ;               reduce using rule 137 (varAsig -> ID . ID = valoresAsig .)
    )               reduce using rule 137 (varAsig -> ID . ID = valoresAsig .)


state 368

    (123) m -> [ valores ] m .

    .               reduce using rule 123 (m -> [ valores ] m .)
    ;               reduce using rule 123 (m -> [ valores ] m .)
    ,               reduce using rule 123 (m -> [ valores ] m .)
    ]               reduce using rule 123 (m -> [ valores ] m .)
    +               reduce using rule 123 (m -> [ valores ] m .)
    -               reduce using rule 123 (m -> [ valores ] m .)
    *               reduce using rule 123 (m -> [ valores ] m .)
    /               reduce using rule 123 (m -> [ valores ] m .)
    %               reduce using rule 123 (m -> [ valores ] m .)
    ^               reduce using rule 123 (m -> [ valores ] m .)
    OR              reduce using rule 123 (m -> [ valores ] m .)
    AND             reduce using rule 123 (m -> [ valores ] m .)
    ?               reduce using rule 123 (m -> [ valores ] m .)
    EQEQ            reduce using rule 123 (m -> [ valores ] m .)
    DISTINTO        reduce using rule 123 (m -> [ valores ] m .)
    >               reduce using rule 123 (m -> [ valores ] m .)
    <               reduce using rule 123 (m -> [ valores ] m .)
    )               reduce using rule 123 (m -> [ valores ] m .)
    :               reduce using rule 123 (m -> [ valores ] m .)
    }               reduce using rule 123 (m -> [ valores ] m .)
    MASMAS          reduce using rule 123 (m -> [ valores ] m .)
    MENOSMENOS      reduce using rule 123 (m -> [ valores ] m .)
    MULEQ           reduce using rule 123 (m -> [ valores ] m .)
    DIVEQ           reduce using rule 123 (m -> [ valores ] m .)
    MASEQ           reduce using rule 123 (m -> [ valores ] m .)
    MENOSEQ         reduce using rule 123 (m -> [ valores ] m .)
    =               reduce using rule 123 (m -> [ valores ] m .)


state 369

    (110) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (103) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (112) valoresTernarioBool -> . BOOL
    (113) valoresTernarioBool -> . funcBool
    (114) valoresTernarioBool -> . ternarioBool
    (115) valoresTernarioBool -> . ( ternarioBool )
    (116) valoresTernarioBool -> . expBool
    (105) valoresTernarioMat -> . INT
    (106) valoresTernarioMat -> . FLOAT
    (107) valoresTernarioMat -> . funcInt
    (108) valoresTernarioMat -> . STRING
    (109) valoresTernarioMat -> . eMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (124) reg -> . { campos }
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (56) vec -> . [ elem ]
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    BOOL            shift and go to state 271
    (               shift and go to state 432
    INT             shift and go to state 268
    FLOAT           shift and go to state 269
    STRING          shift and go to state 265
    COLINEALES      shift and go to state 4
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    ID              shift and go to state 85
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    CAPITALIZAR     shift and go to state 28
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73
    [               shift and go to state 20
    NOT             shift and go to state 94

    and                            shift and go to state 59
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 65
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 319
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 412
    mayor                          shift and go to state 97
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    iSing                          shift and go to state 80
    expBool                        shift and go to state 415
    ternarioBool                   shift and go to state 266
    tCompare                       shift and go to state 82
    valoresTernarioMat             shift and go to state 413
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 431
    exp                            shift and go to state 95
    varYVals                       shift and go to state 433
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 169

state 370

    (213) tCompare -> ( ternarioMat ) .
    (146) valoresMat -> ( ternarioMat ) .

    EQEQ            reduce using rule 213 (tCompare -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 213 (tCompare -> ( ternarioMat ) .)
    >               reduce using rule 213 (tCompare -> ( ternarioMat ) .)
    <               reduce using rule 213 (tCompare -> ( ternarioMat ) .)
    AND             reduce using rule 213 (tCompare -> ( ternarioMat ) .)
    OR              reduce using rule 213 (tCompare -> ( ternarioMat ) .)
    ?               reduce using rule 213 (tCompare -> ( ternarioMat ) .)
    ,               reduce using rule 213 (tCompare -> ( ternarioMat ) .)
    ]               reduce using rule 213 (tCompare -> ( ternarioMat ) .)
    )               reduce using rule 213 (tCompare -> ( ternarioMat ) .)
    ;               reduce using rule 213 (tCompare -> ( ternarioMat ) .)
    :               reduce using rule 213 (tCompare -> ( ternarioMat ) .)
    }               reduce using rule 213 (tCompare -> ( ternarioMat ) .)
    +               reduce using rule 146 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 146 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 146 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 146 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 146 (valoresMat -> ( ternarioMat ) .)
    ^               reduce using rule 146 (valoresMat -> ( ternarioMat ) .)


state 371

    (111) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (104) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (112) valoresTernarioBool -> . BOOL
    (113) valoresTernarioBool -> . funcBool
    (114) valoresTernarioBool -> . ternarioBool
    (115) valoresTernarioBool -> . ( ternarioBool )
    (116) valoresTernarioBool -> . expBool
    (105) valoresTernarioMat -> . INT
    (106) valoresTernarioMat -> . FLOAT
    (107) valoresTernarioMat -> . funcInt
    (108) valoresTernarioMat -> . STRING
    (109) valoresTernarioMat -> . eMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (124) reg -> . { campos }
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (56) vec -> . [ elem ]
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    BOOL            shift and go to state 271
    (               shift and go to state 432
    INT             shift and go to state 268
    FLOAT           shift and go to state 269
    STRING          shift and go to state 265
    COLINEALES      shift and go to state 4
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    ID              shift and go to state 85
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    CAPITALIZAR     shift and go to state 28
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73
    [               shift and go to state 20
    NOT             shift and go to state 94

    and                            shift and go to state 59
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 65
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 319
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 416
    mayor                          shift and go to state 97
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    iSing                          shift and go to state 80
    expBool                        shift and go to state 415
    ternarioBool                   shift and go to state 266
    tCompare                       shift and go to state 82
    valoresTernarioMat             shift and go to state 417
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 431
    exp                            shift and go to state 95
    varYVals                       shift and go to state 433
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 169

state 372

    (6) lAbierta -> IF ( cosaBooleana ) linea .

    COMMENT         reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    IF              reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    DO              reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    WHILE           reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    FOR             reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    RETURN          reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    ;               reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    MENOSMENOS      reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    MASMAS          reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    ID              reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    PRINT           reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    MULTIESCALAR    reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    LENGTH          reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    CAPITALIZAR     reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    COLINEALES      reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    [               reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    }               reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    $end            reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)


state 373

    (16) lCerrada -> IF ( cosaBooleana ) COMMENT . com lCerrada ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) COMMENT . com lCerrada ELSE lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT . com lCerrada ELSE COMMENT com lCerrada
    (12) com -> . COMMENT com
    (13) com -> . empty
    (55) empty -> .

    COMMENT         shift and go to state 114
    IF              reduce using rule 55 (empty -> .)
    DO              reduce using rule 55 (empty -> .)
    RETURN          reduce using rule 55 (empty -> .)
    ;               reduce using rule 55 (empty -> .)
    WHILE           reduce using rule 55 (empty -> .)
    FOR             reduce using rule 55 (empty -> .)
    MENOSMENOS      reduce using rule 55 (empty -> .)
    MASMAS          reduce using rule 55 (empty -> .)
    ID              reduce using rule 55 (empty -> .)
    PRINT           reduce using rule 55 (empty -> .)
    MULTIESCALAR    reduce using rule 55 (empty -> .)
    LENGTH          reduce using rule 55 (empty -> .)
    CAPITALIZAR     reduce using rule 55 (empty -> .)
    COLINEALES      reduce using rule 55 (empty -> .)
    [               reduce using rule 55 (empty -> .)

    com                            shift and go to state 434
    empty                          shift and go to state 116

state 374

    (14) lCerrada -> IF . ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF . ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (6) lAbierta -> IF . ( cosaBooleana ) linea
    (7) lAbierta -> IF . ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> IF . ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> IF . ( cosaBooleana ) { g }

    (               shift and go to state 435


state 375

    (8) lAbierta -> IF ( cosaBooleana ) lCerrada . ELSE lAbierta
    (15) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE { g }
    (18) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE COMMENT com lCerrada
    (5) linea -> lCerrada .

    ELSE            shift and go to state 436
    COMMENT         reduce using rule 5 (linea -> lCerrada .)
    IF              reduce using rule 5 (linea -> lCerrada .)
    DO              reduce using rule 5 (linea -> lCerrada .)
    WHILE           reduce using rule 5 (linea -> lCerrada .)
    FOR             reduce using rule 5 (linea -> lCerrada .)
    RETURN          reduce using rule 5 (linea -> lCerrada .)
    ;               reduce using rule 5 (linea -> lCerrada .)
    MENOSMENOS      reduce using rule 5 (linea -> lCerrada .)
    MASMAS          reduce using rule 5 (linea -> lCerrada .)
    ID              reduce using rule 5 (linea -> lCerrada .)
    PRINT           reduce using rule 5 (linea -> lCerrada .)
    MULTIESCALAR    reduce using rule 5 (linea -> lCerrada .)
    LENGTH          reduce using rule 5 (linea -> lCerrada .)
    CAPITALIZAR     reduce using rule 5 (linea -> lCerrada .)
    COLINEALES      reduce using rule 5 (linea -> lCerrada .)
    [               reduce using rule 5 (linea -> lCerrada .)
    $end            reduce using rule 5 (linea -> lCerrada .)
    }               reduce using rule 5 (linea -> lCerrada .)


state 376

    (7) lAbierta -> IF ( cosaBooleana ) { . g } ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) { . g }
    (14) lCerrada -> IF ( cosaBooleana ) { . g } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { . g } ELSE lCerrada
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (55) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (132) varAsig -> . varYVals MULEQ valoresAsig
    (133) varAsig -> . varYVals DIVEQ valoresAsig
    (134) varAsig -> . varYVals MASEQ valoresAsig
    (135) varAsig -> . varYVals MENOSEQ valoresAsig
    (136) varAsig -> . varYVals = valoresAsig
    (137) varAsig -> . ID . ID = valoresAsig
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 55 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    linea                          shift and go to state 34
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 13
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 437
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 29
    lAbierta                       shift and go to state 30
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 32

state 377

    (22) lCerrada -> loop . { g }
    (23) lCerrada -> loop . lCerrada
    (24) lCerrada -> loop . COMMENT com lCerrada
    (10) lAbierta -> loop . lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (132) varAsig -> . varYVals MULEQ valoresAsig
    (133) varAsig -> . varYVals DIVEQ valoresAsig
    (134) varAsig -> . varYVals MASEQ valoresAsig
    (135) varAsig -> . varYVals MENOSEQ valoresAsig
    (136) varAsig -> . varYVals = valoresAsig
    (137) varAsig -> . ID . ID = valoresAsig
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 111
    COMMENT         shift and go to state 108
    IF              shift and go to state 374
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 109
    lAbierta                       shift and go to state 110
    loop                           shift and go to state 377
    varYVals                       shift and go to state 11

state 378

    (48) funcInt -> MULTIESCALAR ( valores , valores . param )
    (53) param -> . , valores
    (54) param -> . empty
    (55) empty -> .

    ,               shift and go to state 439
    )               reduce using rule 55 (empty -> .)

    empty                          shift and go to state 440
    param                          shift and go to state 438

state 379

    (27) lCerrada -> DO COMMENT com lCerrada WHILE ( . valores ) ;
    (59) valores -> . eMat
    (60) valores -> . expBool
    (61) valores -> . funcReturn
    (62) valores -> . reg
    (63) valores -> . INT
    (64) valores -> . FLOAT
    (65) valores -> . STRING
    (66) valores -> . BOOL
    (67) valores -> . varYVals
    (68) valores -> . varsOps
    (69) valores -> . vec
    (70) valores -> . ternario
    (71) valores -> . atributos
    (72) valores -> . RES
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (124) reg -> . { campos }
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (56) vec -> . [ elem ]
    (78) ternario -> . ternarioMat
    (79) ternario -> . ternarioBool
    (80) ternario -> . ( ternarioMat )
    (81) ternario -> . ( ternarioBool )
    (82) ternario -> . ternarioVars
    (83) ternario -> . ( ternarioVars )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 87
    FLOAT           shift and go to state 89
    STRING          shift and go to state 70
    BOOL            shift and go to state 92
    RES             shift and go to state 62
    {               shift and go to state 96
    ID              shift and go to state 85
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 72
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    ?               reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    ternario                       shift and go to state 60
    funcBool                       shift and go to state 61
    funcInt                        shift and go to state 63
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 69
    eMat                           shift and go to state 71
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 75
    vec                            shift and go to state 76
    paren                          shift and go to state 83
    reg                            shift and go to state 77
    expBool                        shift and go to state 78
    ternarioBool                   shift and go to state 79
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 86
    funcReturn                     shift and go to state 88
    valores                        shift and go to state 441
    p                              shift and go to state 91
    varsOps                        shift and go to state 93
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 66
    varYVals                       shift and go to state 98
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 99

state 380

    (15) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE { g }
    (18) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE COMMENT com lCerrada

    ELSE            shift and go to state 442


state 381

    (14) lCerrada -> IF ( cosaBooleana ) { . g } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { . g } ELSE lCerrada
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (55) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (132) varAsig -> . varYVals MULEQ valoresAsig
    (133) varAsig -> . varYVals DIVEQ valoresAsig
    (134) varAsig -> . varYVals MASEQ valoresAsig
    (135) varAsig -> . varYVals MENOSEQ valoresAsig
    (136) varAsig -> . varYVals = valoresAsig
    (137) varAsig -> . ID . ID = valoresAsig
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 55 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 13
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 443
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 29
    lAbierta                       shift and go to state 30
    loop                           shift and go to state 32
    varYVals                       shift and go to state 11
    linea                          shift and go to state 34

state 382

    (26) lCerrada -> DO lCerrada WHILE ( valores ) . ;

    ;               shift and go to state 444


state 383

    (25) lCerrada -> DO { g } WHILE ( . valores ) ;
    (59) valores -> . eMat
    (60) valores -> . expBool
    (61) valores -> . funcReturn
    (62) valores -> . reg
    (63) valores -> . INT
    (64) valores -> . FLOAT
    (65) valores -> . STRING
    (66) valores -> . BOOL
    (67) valores -> . varYVals
    (68) valores -> . varsOps
    (69) valores -> . vec
    (70) valores -> . ternario
    (71) valores -> . atributos
    (72) valores -> . RES
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (124) reg -> . { campos }
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (56) vec -> . [ elem ]
    (78) ternario -> . ternarioMat
    (79) ternario -> . ternarioBool
    (80) ternario -> . ( ternarioMat )
    (81) ternario -> . ( ternarioBool )
    (82) ternario -> . ternarioVars
    (83) ternario -> . ( ternarioVars )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 87
    FLOAT           shift and go to state 89
    STRING          shift and go to state 70
    BOOL            shift and go to state 92
    RES             shift and go to state 62
    {               shift and go to state 96
    ID              shift and go to state 85
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 72
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    ?               reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    ternario                       shift and go to state 60
    funcBool                       shift and go to state 61
    funcInt                        shift and go to state 63
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 69
    eMat                           shift and go to state 71
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 75
    vec                            shift and go to state 76
    paren                          shift and go to state 83
    reg                            shift and go to state 77
    expBool                        shift and go to state 78
    ternarioBool                   shift and go to state 79
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 86
    funcReturn                     shift and go to state 88
    valores                        shift and go to state 445
    p                              shift and go to state 91
    varsOps                        shift and go to state 93
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 66
    varYVals                       shift and go to state 98
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 99

state 384

    (51) funcBool -> COLINEALES ( valores , valores ) .

    ;               reduce using rule 51 (funcBool -> COLINEALES ( valores , valores ) .)
    ?               reduce using rule 51 (funcBool -> COLINEALES ( valores , valores ) .)
    OR              reduce using rule 51 (funcBool -> COLINEALES ( valores , valores ) .)
    AND             reduce using rule 51 (funcBool -> COLINEALES ( valores , valores ) .)
    ,               reduce using rule 51 (funcBool -> COLINEALES ( valores , valores ) .)
    )               reduce using rule 51 (funcBool -> COLINEALES ( valores , valores ) .)
    :               reduce using rule 51 (funcBool -> COLINEALES ( valores , valores ) .)
    ]               reduce using rule 51 (funcBool -> COLINEALES ( valores , valores ) .)
    }               reduce using rule 51 (funcBool -> COLINEALES ( valores , valores ) .)
    EQEQ            reduce using rule 51 (funcBool -> COLINEALES ( valores , valores ) .)
    DISTINTO        reduce using rule 51 (funcBool -> COLINEALES ( valores , valores ) .)


state 385

    (34) loop -> FOR ( primParam ; valores ; . tercerParam )
    (39) tercerParam -> . varsOps
    (40) tercerParam -> . varAsig
    (41) tercerParam -> . func
    (42) tercerParam -> . empty
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (132) varAsig -> . varYVals MULEQ valoresAsig
    (133) varAsig -> . varYVals DIVEQ valoresAsig
    (134) varAsig -> . varYVals MASEQ valoresAsig
    (135) varAsig -> . varYVals MENOSEQ valoresAsig
    (136) varAsig -> . varYVals = valoresAsig
    (137) varAsig -> . ID . ID = valoresAsig
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (55) empty -> .
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    )               reduce using rule 55 (empty -> .)
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    varAsig                        shift and go to state 448
    funcVoid                       shift and go to state 15
    funcBool                       shift and go to state 3
    funcString                     shift and go to state 25
    funcInt                        shift and go to state 5
    funcReturn                     shift and go to state 27
    vec                            shift and go to state 33
    varsOps                        shift and go to state 450
    func                           shift and go to state 446
    varYVals                       shift and go to state 11
    vecVal                         shift and go to state 8
    empty                          shift and go to state 449
    tercerParam                    shift and go to state 447

state 386

    (212) tCompare -> ( ternarioBool ) .

    >               reduce using rule 212 (tCompare -> ( ternarioBool ) .)
    <               reduce using rule 212 (tCompare -> ( ternarioBool ) .)
    EQEQ            reduce using rule 212 (tCompare -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 212 (tCompare -> ( ternarioBool ) .)
    AND             reduce using rule 212 (tCompare -> ( ternarioBool ) .)
    OR              reduce using rule 212 (tCompare -> ( ternarioBool ) .)
    ?               reduce using rule 212 (tCompare -> ( ternarioBool ) .)
    ,               reduce using rule 212 (tCompare -> ( ternarioBool ) .)
    ]               reduce using rule 212 (tCompare -> ( ternarioBool ) .)
    )               reduce using rule 212 (tCompare -> ( ternarioBool ) .)
    ;               reduce using rule 212 (tCompare -> ( ternarioBool ) .)
    :               reduce using rule 212 (tCompare -> ( ternarioBool ) .)
    }               reduce using rule 212 (tCompare -> ( ternarioBool ) .)


state 387

    (86) ternarioVars -> valoresBool ? valoresTernarioMat . : valoresTernarioVars

    :               shift and go to state 451


state 388

    (115) valoresTernarioBool -> ( . ternarioBool )
    (97) valoresTernarioVars -> ( . ternarioVars )
    (185) valoresBool -> ( . ternarioBool )
    (146) valoresMat -> ( . ternarioMat )
    (212) tCompare -> ( . ternarioBool )
    (213) tCompare -> ( . ternarioMat )
    (179) paren -> ( . eMat )
    (180) paren -> ( . valoresMat )
    (221) parenBool -> ( . expBool )
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (56) vec -> . [ elem ]
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 163
    FLOAT           shift and go to state 164
    STRING          shift and go to state 159
    (               shift and go to state 155
    BOOL            shift and go to state 165
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73
    [               shift and go to state 20
    NOT             shift and go to state 94

    and                            shift and go to state 59
    funcBool                       shift and go to state 150
    funcInt                        shift and go to state 151
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 152
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 348
    eMat                           shift and go to state 154
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 284
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    exp                            shift and go to state 95
    ternarioBool                   shift and go to state 349
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    expBool                        shift and go to state 350
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 157
    ternarioVars                   shift and go to state 351
    varYVals                       shift and go to state 168
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 169

state 389

    (99) valoresTernarioVars -> varsOps .
    (184) valoresBool -> varsOps .
    (145) valoresMat -> varsOps .
    (207) tCompare -> varsOps .

    :               reduce using rule 99 (valoresTernarioVars -> varsOps .)
    )               reduce using rule 99 (valoresTernarioVars -> varsOps .)
    ,               reduce using rule 99 (valoresTernarioVars -> varsOps .)
    ]               reduce using rule 99 (valoresTernarioVars -> varsOps .)
    ;               reduce using rule 99 (valoresTernarioVars -> varsOps .)
    }               reduce using rule 99 (valoresTernarioVars -> varsOps .)
    ?               reduce using rule 184 (valoresBool -> varsOps .)
    OR              reduce using rule 184 (valoresBool -> varsOps .)
    AND             reduce using rule 184 (valoresBool -> varsOps .)
    +               reduce using rule 145 (valoresMat -> varsOps .)
    -               reduce using rule 145 (valoresMat -> varsOps .)
    *               reduce using rule 145 (valoresMat -> varsOps .)
    /               reduce using rule 145 (valoresMat -> varsOps .)
    %               reduce using rule 145 (valoresMat -> varsOps .)
    ^               reduce using rule 145 (valoresMat -> varsOps .)
    EQEQ            reduce using rule 207 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 207 (tCompare -> varsOps .)
    >               reduce using rule 207 (tCompare -> varsOps .)
    <               reduce using rule 207 (tCompare -> varsOps .)


state 390

    (100) valoresTernarioVars -> varYVals .
    (129) varsOps -> varYVals . MASMAS
    (130) varsOps -> varYVals . MENOSMENOS
    (183) valoresBool -> varYVals .
    (144) valoresMat -> varYVals .
    (208) tCompare -> varYVals .

    :               reduce using rule 100 (valoresTernarioVars -> varYVals .)
    )               reduce using rule 100 (valoresTernarioVars -> varYVals .)
    ,               reduce using rule 100 (valoresTernarioVars -> varYVals .)
    ]               reduce using rule 100 (valoresTernarioVars -> varYVals .)
    ;               reduce using rule 100 (valoresTernarioVars -> varYVals .)
    }               reduce using rule 100 (valoresTernarioVars -> varYVals .)
    MASMAS          shift and go to state 50
    MENOSMENOS      shift and go to state 47
    ?               reduce using rule 183 (valoresBool -> varYVals .)
    OR              reduce using rule 183 (valoresBool -> varYVals .)
    AND             reduce using rule 183 (valoresBool -> varYVals .)
    +               reduce using rule 144 (valoresMat -> varYVals .)
    -               reduce using rule 144 (valoresMat -> varYVals .)
    *               reduce using rule 144 (valoresMat -> varYVals .)
    /               reduce using rule 144 (valoresMat -> varYVals .)
    %               reduce using rule 144 (valoresMat -> varYVals .)
    ^               reduce using rule 144 (valoresMat -> varYVals .)
    EQEQ            reduce using rule 208 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 208 (tCompare -> varYVals .)
    >               reduce using rule 208 (tCompare -> varYVals .)
    <               reduce using rule 208 (tCompare -> varYVals .)


state 391

    (110) ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .

    ,               reduce using rule 110 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    ]               reduce using rule 110 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    )               reduce using rule 110 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    ;               reduce using rule 110 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    :               reduce using rule 110 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    }               reduce using rule 110 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)


state 392

    (88) ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .

    ,               reduce using rule 88 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    }               reduce using rule 88 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    ]               reduce using rule 88 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    )               reduce using rule 88 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    :               reduce using rule 88 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    ;               reduce using rule 88 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)


state 393

    (115) valoresTernarioBool -> ( . ternarioBool )
    (97) valoresTernarioVars -> ( . ternarioVars )
    (185) valoresBool -> ( . ternarioBool )
    (212) tCompare -> ( . ternarioBool )
    (213) tCompare -> ( . ternarioMat )
    (146) valoresMat -> ( . ternarioMat )
    (221) parenBool -> ( . expBool )
    (179) paren -> ( . eMat )
    (180) paren -> ( . valoresMat )
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (51) funcBool -> . COLINEALES ( valores , valores )
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (56) vec -> . [ elem ]
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 163
    FLOAT           shift and go to state 164
    STRING          shift and go to state 159
    (               shift and go to state 155
    BOOL            shift and go to state 165
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73
    [               shift and go to state 20
    NOT             shift and go to state 94

    and                            shift and go to state 59
    funcBool                       shift and go to state 150
    funcInt                        shift and go to state 151
    menor                          shift and go to state 65
    valoresMat                     shift and go to state 152
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 348
    eMat                           shift and go to state 154
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 329
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    expBool                        shift and go to state 350
    ternarioBool                   shift and go to state 349
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 157
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 351
    mayor                          shift and go to state 97
    varYVals                       shift and go to state 168
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 169

state 394

    (99) valoresTernarioVars -> varsOps .
    (184) valoresBool -> varsOps .
    (207) tCompare -> varsOps .
    (145) valoresMat -> varsOps .

    ,               reduce using rule 99 (valoresTernarioVars -> varsOps .)
    ]               reduce using rule 99 (valoresTernarioVars -> varsOps .)
    )               reduce using rule 99 (valoresTernarioVars -> varsOps .)
    ;               reduce using rule 99 (valoresTernarioVars -> varsOps .)
    :               reduce using rule 99 (valoresTernarioVars -> varsOps .)
    }               reduce using rule 99 (valoresTernarioVars -> varsOps .)
    ?               reduce using rule 184 (valoresBool -> varsOps .)
    OR              reduce using rule 184 (valoresBool -> varsOps .)
    AND             reduce using rule 184 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 207 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 207 (tCompare -> varsOps .)
    >               reduce using rule 207 (tCompare -> varsOps .)
    <               reduce using rule 207 (tCompare -> varsOps .)
    +               reduce using rule 145 (valoresMat -> varsOps .)
    -               reduce using rule 145 (valoresMat -> varsOps .)
    *               reduce using rule 145 (valoresMat -> varsOps .)
    /               reduce using rule 145 (valoresMat -> varsOps .)
    %               reduce using rule 145 (valoresMat -> varsOps .)
    ^               reduce using rule 145 (valoresMat -> varsOps .)


state 395

    (100) valoresTernarioVars -> varYVals .
    (129) varsOps -> varYVals . MASMAS
    (130) varsOps -> varYVals . MENOSMENOS
    (183) valoresBool -> varYVals .
    (208) tCompare -> varYVals .
    (144) valoresMat -> varYVals .

    ,               reduce using rule 100 (valoresTernarioVars -> varYVals .)
    ]               reduce using rule 100 (valoresTernarioVars -> varYVals .)
    )               reduce using rule 100 (valoresTernarioVars -> varYVals .)
    ;               reduce using rule 100 (valoresTernarioVars -> varYVals .)
    :               reduce using rule 100 (valoresTernarioVars -> varYVals .)
    }               reduce using rule 100 (valoresTernarioVars -> varYVals .)
    MASMAS          shift and go to state 50
    MENOSMENOS      shift and go to state 47
    ?               reduce using rule 183 (valoresBool -> varYVals .)
    OR              reduce using rule 183 (valoresBool -> varYVals .)
    AND             reduce using rule 183 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 208 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 208 (tCompare -> varYVals .)
    >               reduce using rule 208 (tCompare -> varYVals .)
    <               reduce using rule 208 (tCompare -> varYVals .)
    +               reduce using rule 144 (valoresMat -> varYVals .)
    -               reduce using rule 144 (valoresMat -> varYVals .)
    *               reduce using rule 144 (valoresMat -> varYVals .)
    /               reduce using rule 144 (valoresMat -> varYVals .)
    %               reduce using rule 144 (valoresMat -> varYVals .)
    ^               reduce using rule 144 (valoresMat -> varYVals .)


state 396

    (84) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (110) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> valoresBool . OR and
    (190) expBool -> valoresBool . OR valoresBool
    (193) and -> valoresBool . AND eq
    (195) and -> valoresBool . AND valoresBool

    ?               shift and go to state 452
    OR              shift and go to state 146
    AND             shift and go to state 145


state 397

    (87) ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .

    ,               reduce using rule 87 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    }               reduce using rule 87 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    ]               reduce using rule 87 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    )               reduce using rule 87 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    :               reduce using rule 87 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    ;               reduce using rule 87 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)


state 398

    (84) ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .

    ,               reduce using rule 84 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    }               reduce using rule 84 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    ]               reduce using rule 84 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    )               reduce using rule 84 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    :               reduce using rule 84 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    ;               reduce using rule 84 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)


state 399

    (85) ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .

    ,               reduce using rule 85 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    }               reduce using rule 85 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    ]               reduce using rule 85 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    )               reduce using rule 85 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    :               reduce using rule 85 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    ;               reduce using rule 85 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)


state 400

    (97) valoresTernarioVars -> ( . ternarioVars )
    (115) valoresTernarioBool -> ( . ternarioBool )
    (185) valoresBool -> ( . ternarioBool )
    (146) valoresMat -> ( . ternarioMat )
    (212) tCompare -> ( . ternarioBool )
    (213) tCompare -> ( . ternarioMat )
    (179) paren -> ( . eMat )
    (180) paren -> ( . valoresMat )
    (221) parenBool -> ( . expBool )
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (56) vec -> . [ elem ]
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 163
    FLOAT           shift and go to state 164
    STRING          shift and go to state 159
    (               shift and go to state 155
    BOOL            shift and go to state 165
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73
    [               shift and go to state 20
    NOT             shift and go to state 94

    and                            shift and go to state 59
    funcBool                       shift and go to state 150
    funcInt                        shift and go to state 151
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 152
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 453
    eMat                           shift and go to state 154
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 284
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    exp                            shift and go to state 95
    ternarioBool                   shift and go to state 349
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    expBool                        shift and go to state 454
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 157
    ternarioVars                   shift and go to state 351
    varYVals                       shift and go to state 168
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 169

state 401

    (116) valoresTernarioBool -> expBool .
    (89) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> expBool . OR and
    (189) expBool -> expBool . OR valoresBool

    :               reduce using rule 116 (valoresTernarioBool -> expBool .)
    ,               reduce using rule 116 (valoresTernarioBool -> expBool .)
    ]               reduce using rule 116 (valoresTernarioBool -> expBool .)
    )               reduce using rule 116 (valoresTernarioBool -> expBool .)
    ;               reduce using rule 116 (valoresTernarioBool -> expBool .)
    }               reduce using rule 116 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 455
    OR              shift and go to state 181


state 402

    (84) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (188) expBool -> valoresBool . OR and
    (190) expBool -> valoresBool . OR valoresBool
    (193) and -> valoresBool . AND eq
    (195) and -> valoresBool . AND valoresBool

    ?               shift and go to state 456
    OR              shift and go to state 146
    AND             shift and go to state 145


state 403

    (97) valoresTernarioVars -> ( . ternarioVars )
    (146) valoresMat -> ( . ternarioMat )
    (185) valoresBool -> ( . ternarioBool )
    (179) paren -> ( . eMat )
    (180) paren -> ( . valoresMat )
    (212) tCompare -> ( . ternarioBool )
    (213) tCompare -> ( . ternarioMat )
    (221) parenBool -> ( . expBool )
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (56) vec -> . [ elem ]
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 163
    FLOAT           shift and go to state 164
    STRING          shift and go to state 159
    (               shift and go to state 155
    BOOL            shift and go to state 165
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73
    [               shift and go to state 20
    NOT             shift and go to state 94

    and                            shift and go to state 59
    funcBool                       shift and go to state 150
    funcInt                        shift and go to state 151
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 152
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 457
    eMat                           shift and go to state 154
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 284
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    exp                            shift and go to state 95
    ternarioBool                   shift and go to state 285
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    expBool                        shift and go to state 458
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 157
    ternarioVars                   shift and go to state 351
    varYVals                       shift and go to state 168
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 169

state 404

    (86) ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .

    ,               reduce using rule 86 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    }               reduce using rule 86 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    ]               reduce using rule 86 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    )               reduce using rule 86 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    :               reduce using rule 86 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    ;               reduce using rule 86 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)


state 405

    (103) ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .

    )               reduce using rule 103 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    ;               reduce using rule 103 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    ,               reduce using rule 103 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    ]               reduce using rule 103 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    }               reduce using rule 103 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)


state 406

    (89) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (187) expBool -> expBool . OR and
    (189) expBool -> expBool . OR valoresBool

    ?               shift and go to state 459
    OR              shift and go to state 181


state 407

    (91) ternarioVars -> expBool ? valoresTernarioMat . : valoresTernarioVars

    :               shift and go to state 460


state 408

    (110) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (84) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (103) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (112) valoresTernarioBool -> . BOOL
    (113) valoresTernarioBool -> . funcBool
    (114) valoresTernarioBool -> . ternarioBool
    (115) valoresTernarioBool -> . ( ternarioBool )
    (116) valoresTernarioBool -> . expBool
    (94) valoresTernarioVars -> . reg
    (95) valoresTernarioVars -> . vec
    (96) valoresTernarioVars -> . ternarioVars
    (97) valoresTernarioVars -> . ( ternarioVars )
    (98) valoresTernarioVars -> . atributos
    (99) valoresTernarioVars -> . varsOps
    (100) valoresTernarioVars -> . varYVals
    (101) valoresTernarioVars -> . res
    (105) valoresTernarioMat -> . INT
    (106) valoresTernarioMat -> . FLOAT
    (107) valoresTernarioMat -> . funcInt
    (108) valoresTernarioMat -> . STRING
    (109) valoresTernarioMat -> . eMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (124) reg -> . { campos }
    (56) vec -> . [ elem ]
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (102) res -> . RES
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    BOOL            shift and go to state 271
    (               shift and go to state 388
    INT             shift and go to state 268
    FLOAT           shift and go to state 269
    STRING          shift and go to state 265
    COLINEALES      shift and go to state 4
    {               shift and go to state 96
    [               shift and go to state 20
    ID              shift and go to state 161
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 257
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 28
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 261
    valoresBool                    shift and go to state 259
    vec                            shift and go to state 262
    paren                          shift and go to state 83
    reg                            shift and go to state 263
    valoresTernarioVars            shift and go to state 264
    expBool                        shift and go to state 270
    ternarioBool                   shift and go to state 266
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    valoresTernarioMat             shift and go to state 461
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 389
    res                            shift and go to state 255
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 390
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 276

state 409

    (115) valoresTernarioBool -> ( ternarioBool ) .
    (185) valoresBool -> ( ternarioBool ) .
    (212) tCompare -> ( ternarioBool ) .

    :               reduce using rule 115 (valoresTernarioBool -> ( ternarioBool ) .)
    ,               reduce using rule 115 (valoresTernarioBool -> ( ternarioBool ) .)
    ]               reduce using rule 115 (valoresTernarioBool -> ( ternarioBool ) .)
    )               reduce using rule 115 (valoresTernarioBool -> ( ternarioBool ) .)
    ;               reduce using rule 115 (valoresTernarioBool -> ( ternarioBool ) .)
    }               reduce using rule 115 (valoresTernarioBool -> ( ternarioBool ) .)
    ?               reduce using rule 185 (valoresBool -> ( ternarioBool ) .)
    OR              reduce using rule 185 (valoresBool -> ( ternarioBool ) .)
    AND             reduce using rule 185 (valoresBool -> ( ternarioBool ) .)
    EQEQ            reduce using rule 212 (tCompare -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 212 (tCompare -> ( ternarioBool ) .)
    >               reduce using rule 212 (tCompare -> ( ternarioBool ) .)
    <               reduce using rule 212 (tCompare -> ( ternarioBool ) .)


state 410

    (111) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (89) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (104) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (112) valoresTernarioBool -> . BOOL
    (113) valoresTernarioBool -> . funcBool
    (114) valoresTernarioBool -> . ternarioBool
    (115) valoresTernarioBool -> . ( ternarioBool )
    (116) valoresTernarioBool -> . expBool
    (94) valoresTernarioVars -> . reg
    (95) valoresTernarioVars -> . vec
    (96) valoresTernarioVars -> . ternarioVars
    (97) valoresTernarioVars -> . ( ternarioVars )
    (98) valoresTernarioVars -> . atributos
    (99) valoresTernarioVars -> . varsOps
    (100) valoresTernarioVars -> . varYVals
    (101) valoresTernarioVars -> . res
    (105) valoresTernarioMat -> . INT
    (106) valoresTernarioMat -> . FLOAT
    (107) valoresTernarioMat -> . funcInt
    (108) valoresTernarioMat -> . STRING
    (109) valoresTernarioMat -> . eMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (124) reg -> . { campos }
    (56) vec -> . [ elem ]
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (102) res -> . RES
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    BOOL            shift and go to state 271
    (               shift and go to state 388
    INT             shift and go to state 268
    FLOAT           shift and go to state 269
    STRING          shift and go to state 265
    COLINEALES      shift and go to state 4
    {               shift and go to state 96
    [               shift and go to state 20
    ID              shift and go to state 161
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 257
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 28
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 302
    valoresBool                    shift and go to state 259
    vec                            shift and go to state 262
    paren                          shift and go to state 83
    reg                            shift and go to state 263
    valoresTernarioVars            shift and go to state 303
    expBool                        shift and go to state 270
    ternarioBool                   shift and go to state 266
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    valoresTernarioMat             shift and go to state 462
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 389
    res                            shift and go to state 255
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 390
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 276

state 411

    (97) valoresTernarioVars -> ( ternarioVars ) .

    ,               reduce using rule 97 (valoresTernarioVars -> ( ternarioVars ) .)
    ]               reduce using rule 97 (valoresTernarioVars -> ( ternarioVars ) .)
    )               reduce using rule 97 (valoresTernarioVars -> ( ternarioVars ) .)
    ;               reduce using rule 97 (valoresTernarioVars -> ( ternarioVars ) .)
    :               reduce using rule 97 (valoresTernarioVars -> ( ternarioVars ) .)
    }               reduce using rule 97 (valoresTernarioVars -> ( ternarioVars ) .)


state 412

    (110) ternarioBool -> valoresBool ? valoresTernarioBool . : valoresTernarioBool

    :               shift and go to state 463


state 413

    (103) ternarioMat -> valoresBool ? valoresTernarioMat . : valoresTernarioMat

    :               shift and go to state 464


state 414

    (115) valoresTernarioBool -> ( . ternarioBool )
    (146) valoresMat -> ( . ternarioMat )
    (185) valoresBool -> ( . ternarioBool )
    (212) tCompare -> ( . ternarioBool )
    (213) tCompare -> ( . ternarioMat )
    (179) paren -> ( . eMat )
    (180) paren -> ( . valoresMat )
    (221) parenBool -> ( . expBool )
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (56) vec -> . [ elem ]
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 163
    FLOAT           shift and go to state 164
    STRING          shift and go to state 159
    (               shift and go to state 155
    BOOL            shift and go to state 165
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73
    [               shift and go to state 20
    NOT             shift and go to state 94

    and                            shift and go to state 59
    funcBool                       shift and go to state 150
    funcInt                        shift and go to state 151
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 152
    eq                             shift and go to state 68
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 154
    valoresBool                    shift and go to state 328
    ternarioMat                    shift and go to state 284
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    varsOps                        shift and go to state 157
    exp                            shift and go to state 95
    ternarioBool                   shift and go to state 349
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    expBool                        shift and go to state 330
    varYVals                       shift and go to state 168
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 169

state 415

    (116) valoresTernarioBool -> expBool .
    (111) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> expBool . OR and
    (189) expBool -> expBool . OR valoresBool

    :               reduce using rule 116 (valoresTernarioBool -> expBool .)
    )               reduce using rule 116 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 365
    OR              shift and go to state 181


state 416

    (111) ternarioBool -> expBool ? valoresTernarioBool . : valoresTernarioBool

    :               shift and go to state 465


state 417

    (104) ternarioMat -> expBool ? valoresTernarioMat . : valoresTernarioMat

    :               shift and go to state 466


state 418

    (107) valoresTernarioMat -> funcInt .
    (140) valoresMat -> funcInt .

    )               reduce using rule 107 (valoresTernarioMat -> funcInt .)
    :               reduce using rule 107 (valoresTernarioMat -> funcInt .)
    +               reduce using rule 140 (valoresMat -> funcInt .)
    -               reduce using rule 140 (valoresMat -> funcInt .)
    *               reduce using rule 140 (valoresMat -> funcInt .)
    /               reduce using rule 140 (valoresMat -> funcInt .)
    %               reduce using rule 140 (valoresMat -> funcInt .)
    ^               reduce using rule 140 (valoresMat -> funcInt .)


state 419

    (109) valoresTernarioMat -> eMat .
    (147) eMat -> eMat . + p
    (149) eMat -> eMat . + valoresMat
    (152) eMat -> eMat . - p
    (154) eMat -> eMat . - valoresMat

    )               reduce using rule 109 (valoresTernarioMat -> eMat .)
    :               reduce using rule 109 (valoresTernarioMat -> eMat .)
    +               shift and go to state 148
    -               shift and go to state 149


state 420

    (105) valoresTernarioMat -> INT .
    (138) valoresMat -> INT .

    )               reduce using rule 105 (valoresTernarioMat -> INT .)
    :               reduce using rule 105 (valoresTernarioMat -> INT .)
    +               reduce using rule 138 (valoresMat -> INT .)
    -               reduce using rule 138 (valoresMat -> INT .)
    *               reduce using rule 138 (valoresMat -> INT .)
    /               reduce using rule 138 (valoresMat -> INT .)
    %               reduce using rule 138 (valoresMat -> INT .)
    ^               reduce using rule 138 (valoresMat -> INT .)


state 421

    (106) valoresTernarioMat -> FLOAT .
    (139) valoresMat -> FLOAT .

    )               reduce using rule 106 (valoresTernarioMat -> FLOAT .)
    :               reduce using rule 106 (valoresTernarioMat -> FLOAT .)
    +               reduce using rule 139 (valoresMat -> FLOAT .)
    -               reduce using rule 139 (valoresMat -> FLOAT .)
    *               reduce using rule 139 (valoresMat -> FLOAT .)
    /               reduce using rule 139 (valoresMat -> FLOAT .)
    %               reduce using rule 139 (valoresMat -> FLOAT .)
    ^               reduce using rule 139 (valoresMat -> FLOAT .)


state 422

    (111) ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .

    ,               reduce using rule 111 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    ]               reduce using rule 111 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    )               reduce using rule 111 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    ;               reduce using rule 111 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    :               reduce using rule 111 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    }               reduce using rule 111 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)


state 423

    (93) ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .

    ,               reduce using rule 93 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    }               reduce using rule 93 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    ]               reduce using rule 93 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    )               reduce using rule 93 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    :               reduce using rule 93 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    ;               reduce using rule 93 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)


state 424

    (92) ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .

    ,               reduce using rule 92 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    }               reduce using rule 92 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    ]               reduce using rule 92 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    )               reduce using rule 92 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    :               reduce using rule 92 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    ;               reduce using rule 92 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)


state 425

    (89) ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .

    ,               reduce using rule 89 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    }               reduce using rule 89 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    ]               reduce using rule 89 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    )               reduce using rule 89 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    :               reduce using rule 89 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    ;               reduce using rule 89 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)


state 426

    (90) ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .

    ,               reduce using rule 90 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    }               reduce using rule 90 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    ]               reduce using rule 90 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    )               reduce using rule 90 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    :               reduce using rule 90 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    ;               reduce using rule 90 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)


state 427

    (104) ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .

    )               reduce using rule 104 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    ;               reduce using rule 104 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    ,               reduce using rule 104 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    ]               reduce using rule 104 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    }               reduce using rule 104 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)


state 428

    (91) ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .

    ,               reduce using rule 91 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    }               reduce using rule 91 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    ]               reduce using rule 91 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    )               reduce using rule 91 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    :               reduce using rule 91 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    ;               reduce using rule 91 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)


state 429

    (115) valoresTernarioBool -> ( . ternarioBool )
    (185) valoresBool -> ( . ternarioBool )
    (212) tCompare -> ( . ternarioBool )
    (213) tCompare -> ( . ternarioMat )
    (146) valoresMat -> ( . ternarioMat )
    (221) parenBool -> ( . expBool )
    (179) paren -> ( . eMat )
    (180) paren -> ( . valoresMat )
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (51) funcBool -> . COLINEALES ( valores , valores )
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (56) vec -> . [ elem ]
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 163
    FLOAT           shift and go to state 164
    STRING          shift and go to state 159
    (               shift and go to state 155
    BOOL            shift and go to state 165
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73
    [               shift and go to state 20
    NOT             shift and go to state 94

    and                            shift and go to state 59
    funcBool                       shift and go to state 150
    funcInt                        shift and go to state 151
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 152
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 328
    eMat                           shift and go to state 154
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 329
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    varsOps                        shift and go to state 157
    exp                            shift and go to state 95
    ternarioBool                   shift and go to state 349
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    expBool                        shift and go to state 330
    varYVals                       shift and go to state 168
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 169

state 430

    (125) campos -> ID : valores , . campos
    (125) campos -> . ID : valores , campos
    (126) campos -> . ID : valores

    ID              shift and go to state 199

    campos                         shift and go to state 467

state 431

    (184) valoresBool -> varsOps .
    (145) valoresMat -> varsOps .
    (207) tCompare -> varsOps .

    ?               reduce using rule 184 (valoresBool -> varsOps .)
    OR              reduce using rule 184 (valoresBool -> varsOps .)
    AND             reduce using rule 184 (valoresBool -> varsOps .)
    +               reduce using rule 145 (valoresMat -> varsOps .)
    -               reduce using rule 145 (valoresMat -> varsOps .)
    *               reduce using rule 145 (valoresMat -> varsOps .)
    /               reduce using rule 145 (valoresMat -> varsOps .)
    %               reduce using rule 145 (valoresMat -> varsOps .)
    ^               reduce using rule 145 (valoresMat -> varsOps .)
    EQEQ            reduce using rule 207 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 207 (tCompare -> varsOps .)
    >               reduce using rule 207 (tCompare -> varsOps .)
    <               reduce using rule 207 (tCompare -> varsOps .)


state 432

    (115) valoresTernarioBool -> ( . ternarioBool )
    (185) valoresBool -> ( . ternarioBool )
    (146) valoresMat -> ( . ternarioMat )
    (212) tCompare -> ( . ternarioBool )
    (213) tCompare -> ( . ternarioMat )
    (179) paren -> ( . eMat )
    (180) paren -> ( . valoresMat )
    (221) parenBool -> ( . expBool )
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (56) vec -> . [ elem ]
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 163
    FLOAT           shift and go to state 164
    STRING          shift and go to state 159
    (               shift and go to state 155
    BOOL            shift and go to state 165
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73
    [               shift and go to state 20
    NOT             shift and go to state 94

    and                            shift and go to state 59
    funcBool                       shift and go to state 150
    funcInt                        shift and go to state 151
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 152
    eq                             shift and go to state 68
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 154
    valoresBool                    shift and go to state 328
    ternarioMat                    shift and go to state 284
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    varsOps                        shift and go to state 157
    exp                            shift and go to state 95
    ternarioBool                   shift and go to state 349
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    expBool                        shift and go to state 330
    varYVals                       shift and go to state 168
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 169

state 433

    (183) valoresBool -> varYVals .
    (144) valoresMat -> varYVals .
    (129) varsOps -> varYVals . MASMAS
    (130) varsOps -> varYVals . MENOSMENOS
    (208) tCompare -> varYVals .

    ?               reduce using rule 183 (valoresBool -> varYVals .)
    OR              reduce using rule 183 (valoresBool -> varYVals .)
    AND             reduce using rule 183 (valoresBool -> varYVals .)
    +               reduce using rule 144 (valoresMat -> varYVals .)
    -               reduce using rule 144 (valoresMat -> varYVals .)
    *               reduce using rule 144 (valoresMat -> varYVals .)
    /               reduce using rule 144 (valoresMat -> varYVals .)
    %               reduce using rule 144 (valoresMat -> varYVals .)
    ^               reduce using rule 144 (valoresMat -> varYVals .)
    MASMAS          shift and go to state 50
    MENOSMENOS      shift and go to state 47
    EQEQ            reduce using rule 208 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 208 (tCompare -> varYVals .)
    >               reduce using rule 208 (tCompare -> varYVals .)
    <               reduce using rule 208 (tCompare -> varYVals .)


state 434

    (16) lCerrada -> IF ( cosaBooleana ) COMMENT com . lCerrada ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) COMMENT com . lCerrada ELSE lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com . lCerrada ELSE COMMENT com lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (132) varAsig -> . varYVals MULEQ valoresAsig
    (133) varAsig -> . varYVals DIVEQ valoresAsig
    (134) varAsig -> . varYVals MASEQ valoresAsig
    (135) varAsig -> . varYVals MENOSEQ valoresAsig
    (136) varAsig -> . varYVals = valoresAsig
    (137) varAsig -> . ID . ID = valoresAsig
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 468
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 39

state 435

    (14) lCerrada -> IF ( . cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( . cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (6) lAbierta -> IF ( . cosaBooleana ) linea
    (7) lAbierta -> IF ( . cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> IF ( . cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> IF ( . cosaBooleana ) { g }
    (35) cosaBooleana -> . expBool
    (36) cosaBooleana -> . valoresBool
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (56) vec -> . [ elem ]
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (221) parenBool -> . ( expBool )
    (124) reg -> . { campos }
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )

    BOOL            shift and go to state 165
    (               shift and go to state 205
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    )               reduce using rule 186 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 206
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    INT             shift and go to state 208
    FLOAT           shift and go to state 209
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 159
    NOT             shift and go to state 94
    CAPITALIZAR     shift and go to state 28
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73

    and                            shift and go to state 59
    funcBool                       shift and go to state 150
    funcInt                        shift and go to state 202
    menor                          shift and go to state 65
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 203
    eMat                           shift and go to state 204
    atributos                      shift and go to state 169
    mayor                          shift and go to state 97
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    varsOps                        shift and go to state 210
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    cosaBooleana                   shift and go to state 469
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    exp                            shift and go to state 95
    varYVals                       shift and go to state 211
    parenBool                      shift and go to state 81
    expBool                        shift and go to state 212

state 436

    (8) lAbierta -> IF ( cosaBooleana ) lCerrada ELSE . lAbierta
    (15) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . { g }
    (18) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . COMMENT com lCerrada
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (132) varAsig -> . varYVals MULEQ valoresAsig
    (133) varAsig -> . varYVals DIVEQ valoresAsig
    (134) varAsig -> . varYVals MASEQ valoresAsig
    (135) varAsig -> . varYVals MENOSEQ valoresAsig
    (136) varAsig -> . varYVals = valoresAsig
    (137) varAsig -> . ID . ID = valoresAsig
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 473
    COMMENT         shift and go to state 470
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 471
    lAbierta                       shift and go to state 472
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 32

state 437

    (7) lAbierta -> IF ( cosaBooleana ) { g . } ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) { g . }
    (14) lCerrada -> IF ( cosaBooleana ) { g . } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g . } ELSE lCerrada

    }               shift and go to state 474


state 438

    (48) funcInt -> MULTIESCALAR ( valores , valores param . )

    )               shift and go to state 475


state 439

    (53) param -> , . valores
    (59) valores -> . eMat
    (60) valores -> . expBool
    (61) valores -> . funcReturn
    (62) valores -> . reg
    (63) valores -> . INT
    (64) valores -> . FLOAT
    (65) valores -> . STRING
    (66) valores -> . BOOL
    (67) valores -> . varYVals
    (68) valores -> . varsOps
    (69) valores -> . vec
    (70) valores -> . ternario
    (71) valores -> . atributos
    (72) valores -> . RES
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (124) reg -> . { campos }
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (56) vec -> . [ elem ]
    (78) ternario -> . ternarioMat
    (79) ternario -> . ternarioBool
    (80) ternario -> . ( ternarioMat )
    (81) ternario -> . ( ternarioBool )
    (82) ternario -> . ternarioVars
    (83) ternario -> . ( ternarioVars )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 87
    FLOAT           shift and go to state 89
    STRING          shift and go to state 70
    BOOL            shift and go to state 92
    RES             shift and go to state 62
    {               shift and go to state 96
    ID              shift and go to state 85
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 72
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    ?               reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    ternario                       shift and go to state 60
    funcBool                       shift and go to state 61
    funcInt                        shift and go to state 63
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 69
    eMat                           shift and go to state 71
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 75
    vec                            shift and go to state 76
    paren                          shift and go to state 83
    reg                            shift and go to state 77
    expBool                        shift and go to state 78
    ternarioBool                   shift and go to state 79
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 86
    funcReturn                     shift and go to state 88
    valores                        shift and go to state 476
    p                              shift and go to state 91
    varsOps                        shift and go to state 93
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 66
    varYVals                       shift and go to state 98
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 99

state 440

    (54) param -> empty .

    )               reduce using rule 54 (param -> empty .)


state 441

    (27) lCerrada -> DO COMMENT com lCerrada WHILE ( valores . ) ;

    )               shift and go to state 477


state 442

    (15) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . { g }
    (18) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . COMMENT com lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (132) varAsig -> . varYVals MULEQ valoresAsig
    (133) varAsig -> . varYVals DIVEQ valoresAsig
    (134) varAsig -> . varYVals MASEQ valoresAsig
    (135) varAsig -> . varYVals MENOSEQ valoresAsig
    (136) varAsig -> . varYVals = valoresAsig
    (137) varAsig -> . ID . ID = valoresAsig
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 473
    COMMENT         shift and go to state 470
    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 471
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 39

state 443

    (14) lCerrada -> IF ( cosaBooleana ) { g . } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g . } ELSE lCerrada

    }               shift and go to state 478


state 444

    (26) lCerrada -> DO lCerrada WHILE ( valores ) ; .

    WHILE           reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    COMMENT         reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    IF              reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    DO              reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    FOR             reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    RETURN          reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    ;               reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    MENOSMENOS      reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    MASMAS          reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    ID              reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    PRINT           reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    MULTIESCALAR    reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    LENGTH          reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    CAPITALIZAR     reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    COLINEALES      reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    [               reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    $end            reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    }               reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    ELSE            reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)


state 445

    (25) lCerrada -> DO { g } WHILE ( valores . ) ;

    )               shift and go to state 479


state 446

    (41) tercerParam -> func .

    )               reduce using rule 41 (tercerParam -> func .)


state 447

    (34) loop -> FOR ( primParam ; valores ; tercerParam . )

    )               shift and go to state 480


state 448

    (40) tercerParam -> varAsig .

    )               reduce using rule 40 (tercerParam -> varAsig .)


state 449

    (42) tercerParam -> empty .

    )               reduce using rule 42 (tercerParam -> empty .)


state 450

    (39) tercerParam -> varsOps .

    )               reduce using rule 39 (tercerParam -> varsOps .)


state 451

    (86) ternarioVars -> valoresBool ? valoresTernarioMat : . valoresTernarioVars
    (94) valoresTernarioVars -> . reg
    (95) valoresTernarioVars -> . vec
    (96) valoresTernarioVars -> . ternarioVars
    (97) valoresTernarioVars -> . ( ternarioVars )
    (98) valoresTernarioVars -> . atributos
    (99) valoresTernarioVars -> . varsOps
    (100) valoresTernarioVars -> . varYVals
    (101) valoresTernarioVars -> . res
    (124) reg -> . { campos }
    (56) vec -> . [ elem ]
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (102) res -> . RES
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (51) funcBool -> . COLINEALES ( valores , valores )
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (221) parenBool -> . ( expBool )
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )

    (               shift and go to state 481
    {               shift and go to state 96
    [               shift and go to state 20
    ID              shift and go to state 161
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 257
    BOOL            shift and go to state 165
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    INT             shift and go to state 208
    FLOAT           shift and go to state 209
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 159
    NOT             shift and go to state 94
    CAPITALIZAR     shift and go to state 28
    -               shift and go to state 74
    +               shift and go to state 73

    and                            shift and go to state 59
    atributos                      shift and go to state 276
    funcBool                       shift and go to state 150
    funcInt                        shift and go to state 202
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 402
    eMat                           shift and go to state 204
    res                            shift and go to state 255
    vecVal                         shift and go to state 8
    vec                            shift and go to state 262
    paren                          shift and go to state 83
    reg                            shift and go to state 263
    valoresTernarioVars            shift and go to state 404
    exp                            shift and go to state 95
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 394
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 395
    parenBool                      shift and go to state 81
    expBool                        shift and go to state 406

state 452

    (84) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (110) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (94) valoresTernarioVars -> . reg
    (95) valoresTernarioVars -> . vec
    (96) valoresTernarioVars -> . ternarioVars
    (97) valoresTernarioVars -> . ( ternarioVars )
    (98) valoresTernarioVars -> . atributos
    (99) valoresTernarioVars -> . varsOps
    (100) valoresTernarioVars -> . varYVals
    (101) valoresTernarioVars -> . res
    (105) valoresTernarioMat -> . INT
    (106) valoresTernarioMat -> . FLOAT
    (107) valoresTernarioMat -> . funcInt
    (108) valoresTernarioMat -> . STRING
    (109) valoresTernarioMat -> . eMat
    (112) valoresTernarioBool -> . BOOL
    (113) valoresTernarioBool -> . funcBool
    (114) valoresTernarioBool -> . ternarioBool
    (115) valoresTernarioBool -> . ( ternarioBool )
    (116) valoresTernarioBool -> . expBool
    (124) reg -> . { campos }
    (56) vec -> . [ elem ]
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (102) res -> . RES
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    (               shift and go to state 400
    INT             shift and go to state 268
    FLOAT           shift and go to state 269
    STRING          shift and go to state 265
    BOOL            shift and go to state 271
    {               shift and go to state 96
    [               shift and go to state 20
    ID              shift and go to state 161
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 257
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 28
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    atributos                      shift and go to state 276
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 482
    valoresBool                    shift and go to state 396
    vec                            shift and go to state 262
    paren                          shift and go to state 83
    reg                            shift and go to state 263
    valoresTernarioVars            shift and go to state 264
    exp                            shift and go to state 95
    ternarioBool                   shift and go to state 266
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    valoresTernarioMat             shift and go to state 387
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 389
    res                            shift and go to state 255
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 390
    parenBool                      shift and go to state 81
    expBool                        shift and go to state 401

state 453

    (84) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (110) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (188) expBool -> valoresBool . OR and
    (190) expBool -> valoresBool . OR valoresBool
    (193) and -> valoresBool . AND eq
    (195) and -> valoresBool . AND valoresBool

    ?               shift and go to state 483
    OR              shift and go to state 146
    AND             shift and go to state 145


state 454

    (221) parenBool -> ( expBool . )
    (89) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (111) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (104) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (187) expBool -> expBool . OR and
    (189) expBool -> expBool . OR valoresBool

    )               shift and go to state 289
    ?               shift and go to state 484
    OR              shift and go to state 181


state 455

    (89) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (111) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (94) valoresTernarioVars -> . reg
    (95) valoresTernarioVars -> . vec
    (96) valoresTernarioVars -> . ternarioVars
    (97) valoresTernarioVars -> . ( ternarioVars )
    (98) valoresTernarioVars -> . atributos
    (99) valoresTernarioVars -> . varsOps
    (100) valoresTernarioVars -> . varYVals
    (101) valoresTernarioVars -> . res
    (105) valoresTernarioMat -> . INT
    (106) valoresTernarioMat -> . FLOAT
    (107) valoresTernarioMat -> . funcInt
    (108) valoresTernarioMat -> . STRING
    (109) valoresTernarioMat -> . eMat
    (112) valoresTernarioBool -> . BOOL
    (113) valoresTernarioBool -> . funcBool
    (114) valoresTernarioBool -> . ternarioBool
    (115) valoresTernarioBool -> . ( ternarioBool )
    (116) valoresTernarioBool -> . expBool
    (124) reg -> . { campos }
    (56) vec -> . [ elem ]
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (102) res -> . RES
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    (               shift and go to state 400
    INT             shift and go to state 268
    FLOAT           shift and go to state 269
    STRING          shift and go to state 265
    BOOL            shift and go to state 271
    {               shift and go to state 96
    [               shift and go to state 20
    ID              shift and go to state 161
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 257
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 28
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 396
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 485
    vecVal                         shift and go to state 8
    vec                            shift and go to state 262
    paren                          shift and go to state 83
    reg                            shift and go to state 263
    valoresTernarioVars            shift and go to state 303
    expBool                        shift and go to state 401
    ternarioBool                   shift and go to state 266
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    valoresTernarioMat             shift and go to state 407
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 389
    res                            shift and go to state 255
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 390
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 276

state 456

    (84) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (94) valoresTernarioVars -> . reg
    (95) valoresTernarioVars -> . vec
    (96) valoresTernarioVars -> . ternarioVars
    (97) valoresTernarioVars -> . ( ternarioVars )
    (98) valoresTernarioVars -> . atributos
    (99) valoresTernarioVars -> . varsOps
    (100) valoresTernarioVars -> . varYVals
    (101) valoresTernarioVars -> . res
    (105) valoresTernarioMat -> . INT
    (106) valoresTernarioMat -> . FLOAT
    (107) valoresTernarioMat -> . funcInt
    (108) valoresTernarioMat -> . STRING
    (109) valoresTernarioMat -> . eMat
    (112) valoresTernarioBool -> . BOOL
    (113) valoresTernarioBool -> . funcBool
    (114) valoresTernarioBool -> . ternarioBool
    (115) valoresTernarioBool -> . ( ternarioBool )
    (116) valoresTernarioBool -> . expBool
    (124) reg -> . { campos }
    (56) vec -> . [ elem ]
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (102) res -> . RES
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    (               shift and go to state 400
    INT             shift and go to state 268
    FLOAT           shift and go to state 269
    STRING          shift and go to state 265
    BOOL            shift and go to state 271
    {               shift and go to state 96
    [               shift and go to state 20
    ID              shift and go to state 161
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 257
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 28
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    atributos                      shift and go to state 276
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 486
    valoresBool                    shift and go to state 396
    vec                            shift and go to state 262
    paren                          shift and go to state 83
    reg                            shift and go to state 263
    valoresTernarioVars            shift and go to state 264
    exp                            shift and go to state 95
    ternarioBool                   shift and go to state 266
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    valoresTernarioMat             shift and go to state 387
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 389
    res                            shift and go to state 255
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 390
    parenBool                      shift and go to state 81
    expBool                        shift and go to state 401

state 457

    (84) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (103) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (110) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> valoresBool . OR and
    (190) expBool -> valoresBool . OR valoresBool
    (193) and -> valoresBool . AND eq
    (195) and -> valoresBool . AND valoresBool

    ?               shift and go to state 487
    OR              shift and go to state 146
    AND             shift and go to state 145


state 458

    (221) parenBool -> ( expBool . )
    (89) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (104) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (111) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> expBool . OR and
    (189) expBool -> expBool . OR valoresBool

    )               shift and go to state 289
    ?               shift and go to state 488
    OR              shift and go to state 181


state 459

    (89) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (94) valoresTernarioVars -> . reg
    (95) valoresTernarioVars -> . vec
    (96) valoresTernarioVars -> . ternarioVars
    (97) valoresTernarioVars -> . ( ternarioVars )
    (98) valoresTernarioVars -> . atributos
    (99) valoresTernarioVars -> . varsOps
    (100) valoresTernarioVars -> . varYVals
    (101) valoresTernarioVars -> . res
    (105) valoresTernarioMat -> . INT
    (106) valoresTernarioMat -> . FLOAT
    (107) valoresTernarioMat -> . funcInt
    (108) valoresTernarioMat -> . STRING
    (109) valoresTernarioMat -> . eMat
    (112) valoresTernarioBool -> . BOOL
    (113) valoresTernarioBool -> . funcBool
    (114) valoresTernarioBool -> . ternarioBool
    (115) valoresTernarioBool -> . ( ternarioBool )
    (116) valoresTernarioBool -> . expBool
    (124) reg -> . { campos }
    (56) vec -> . [ elem ]
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (102) res -> . RES
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    (               shift and go to state 400
    INT             shift and go to state 268
    FLOAT           shift and go to state 269
    STRING          shift and go to state 265
    BOOL            shift and go to state 271
    {               shift and go to state 96
    [               shift and go to state 20
    ID              shift and go to state 161
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 257
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 28
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 396
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 489
    vecVal                         shift and go to state 8
    vec                            shift and go to state 262
    paren                          shift and go to state 83
    reg                            shift and go to state 263
    valoresTernarioVars            shift and go to state 303
    expBool                        shift and go to state 401
    ternarioBool                   shift and go to state 266
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    valoresTernarioMat             shift and go to state 407
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 389
    res                            shift and go to state 255
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 390
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 276

state 460

    (91) ternarioVars -> expBool ? valoresTernarioMat : . valoresTernarioVars
    (94) valoresTernarioVars -> . reg
    (95) valoresTernarioVars -> . vec
    (96) valoresTernarioVars -> . ternarioVars
    (97) valoresTernarioVars -> . ( ternarioVars )
    (98) valoresTernarioVars -> . atributos
    (99) valoresTernarioVars -> . varsOps
    (100) valoresTernarioVars -> . varYVals
    (101) valoresTernarioVars -> . res
    (124) reg -> . { campos }
    (56) vec -> . [ elem ]
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (102) res -> . RES
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (51) funcBool -> . COLINEALES ( valores , valores )
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (221) parenBool -> . ( expBool )
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )

    (               shift and go to state 481
    {               shift and go to state 96
    [               shift and go to state 20
    ID              shift and go to state 161
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 257
    BOOL            shift and go to state 165
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    INT             shift and go to state 208
    FLOAT           shift and go to state 209
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 159
    NOT             shift and go to state 94
    CAPITALIZAR     shift and go to state 28
    -               shift and go to state 74
    +               shift and go to state 73

    and                            shift and go to state 59
    funcBool                       shift and go to state 150
    funcInt                        shift and go to state 202
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 402
    eMat                           shift and go to state 204
    vecVal                         shift and go to state 8
    vec                            shift and go to state 262
    paren                          shift and go to state 83
    reg                            shift and go to state 263
    valoresTernarioVars            shift and go to state 428
    expBool                        shift and go to state 406
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 394
    res                            shift and go to state 255
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 395
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 276

state 461

    (86) ternarioVars -> valoresBool ? valoresTernarioMat . : valoresTernarioVars
    (103) ternarioMat -> valoresBool ? valoresTernarioMat . : valoresTernarioMat

    :               shift and go to state 490


state 462

    (91) ternarioVars -> expBool ? valoresTernarioMat . : valoresTernarioVars
    (104) ternarioMat -> expBool ? valoresTernarioMat . : valoresTernarioMat

    :               shift and go to state 491


state 463

    (110) ternarioBool -> valoresBool ? valoresTernarioBool : . valoresTernarioBool
    (112) valoresTernarioBool -> . BOOL
    (113) valoresTernarioBool -> . funcBool
    (114) valoresTernarioBool -> . ternarioBool
    (115) valoresTernarioBool -> . ( ternarioBool )
    (116) valoresTernarioBool -> . expBool
    (51) funcBool -> . COLINEALES ( valores , valores )
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (56) vec -> . [ elem ]
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (221) parenBool -> . ( expBool )
    (124) reg -> . { campos }
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )

    BOOL            shift and go to state 271
    (               shift and go to state 429
    COLINEALES      shift and go to state 4
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    ID              shift and go to state 206
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    INT             shift and go to state 208
    FLOAT           shift and go to state 209
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 159
    NOT             shift and go to state 94
    CAPITALIZAR     shift and go to state 28
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73

    and                            shift and go to state 59
    atributos                      shift and go to state 169
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 202
    menor                          shift and go to state 65
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 319
    eMat                           shift and go to state 204
    valoresTernarioBool            shift and go to state 391
    mayor                          shift and go to state 97
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    iSing                          shift and go to state 80
    ternarioBool                   shift and go to state 266
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 210
    exp                            shift and go to state 95
    varYVals                       shift and go to state 211
    parenBool                      shift and go to state 81
    expBool                        shift and go to state 415

state 464

    (103) ternarioMat -> valoresBool ? valoresTernarioMat : . valoresTernarioMat
    (105) valoresTernarioMat -> . INT
    (106) valoresTernarioMat -> . FLOAT
    (107) valoresTernarioMat -> . funcInt
    (108) valoresTernarioMat -> . STRING
    (109) valoresTernarioMat -> . eMat
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (56) vec -> . [ elem ]
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )

    INT             shift and go to state 420
    FLOAT           shift and go to state 421
    STRING          shift and go to state 265
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    (               shift and go to state 232
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73
    [               shift and go to state 20

    funcInt                        shift and go to state 418
    valoresMat                     shift and go to state 67
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 419
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    iSing                          shift and go to state 80
    valoresTernarioMat             shift and go to state 405
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 176
    exp                            shift and go to state 95
    varYVals                       shift and go to state 177
    atributos                      shift and go to state 169

state 465

    (111) ternarioBool -> expBool ? valoresTernarioBool : . valoresTernarioBool
    (112) valoresTernarioBool -> . BOOL
    (113) valoresTernarioBool -> . funcBool
    (114) valoresTernarioBool -> . ternarioBool
    (115) valoresTernarioBool -> . ( ternarioBool )
    (116) valoresTernarioBool -> . expBool
    (51) funcBool -> . COLINEALES ( valores , valores )
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (56) vec -> . [ elem ]
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (221) parenBool -> . ( expBool )
    (124) reg -> . { campos }
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )

    BOOL            shift and go to state 271
    (               shift and go to state 429
    COLINEALES      shift and go to state 4
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    ID              shift and go to state 206
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    INT             shift and go to state 208
    FLOAT           shift and go to state 209
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 159
    NOT             shift and go to state 94
    CAPITALIZAR     shift and go to state 28
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73

    and                            shift and go to state 59
    atributos                      shift and go to state 169
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 202
    menor                          shift and go to state 65
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 319
    eMat                           shift and go to state 204
    valoresTernarioBool            shift and go to state 422
    mayor                          shift and go to state 97
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    iSing                          shift and go to state 80
    ternarioBool                   shift and go to state 266
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 210
    exp                            shift and go to state 95
    varYVals                       shift and go to state 211
    parenBool                      shift and go to state 81
    expBool                        shift and go to state 415

state 466

    (104) ternarioMat -> expBool ? valoresTernarioMat : . valoresTernarioMat
    (105) valoresTernarioMat -> . INT
    (106) valoresTernarioMat -> . FLOAT
    (107) valoresTernarioMat -> . funcInt
    (108) valoresTernarioMat -> . STRING
    (109) valoresTernarioMat -> . eMat
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (56) vec -> . [ elem ]
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )

    INT             shift and go to state 420
    FLOAT           shift and go to state 421
    STRING          shift and go to state 265
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    (               shift and go to state 232
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73
    [               shift and go to state 20

    funcInt                        shift and go to state 418
    valoresMat                     shift and go to state 67
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 419
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    varsOps                        shift and go to state 176
    valoresTernarioMat             shift and go to state 427
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    iSing                          shift and go to state 80
    exp                            shift and go to state 95
    varYVals                       shift and go to state 177
    atributos                      shift and go to state 169

state 467

    (125) campos -> ID : valores , campos .

    }               reduce using rule 125 (campos -> ID : valores , campos .)


state 468

    (16) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada . ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada . ELSE lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada . ELSE COMMENT com lCerrada

    ELSE            shift and go to state 492


state 469

    (14) lCerrada -> IF ( cosaBooleana . ) { g } ELSE { g }
    (15) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE { g }
    (16) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana . ) { g } ELSE lCerrada
    (18) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (6) lAbierta -> IF ( cosaBooleana . ) linea
    (7) lAbierta -> IF ( cosaBooleana . ) { g } ELSE lAbierta
    (8) lAbierta -> IF ( cosaBooleana . ) lCerrada ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana . ) { g }

    )               shift and go to state 493


state 470

    (20) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT . com lCerrada
    (12) com -> . COMMENT com
    (13) com -> . empty
    (55) empty -> .

    COMMENT         shift and go to state 114
    IF              reduce using rule 55 (empty -> .)
    DO              reduce using rule 55 (empty -> .)
    RETURN          reduce using rule 55 (empty -> .)
    ;               reduce using rule 55 (empty -> .)
    WHILE           reduce using rule 55 (empty -> .)
    FOR             reduce using rule 55 (empty -> .)
    MENOSMENOS      reduce using rule 55 (empty -> .)
    MASMAS          reduce using rule 55 (empty -> .)
    ID              reduce using rule 55 (empty -> .)
    PRINT           reduce using rule 55 (empty -> .)
    MULTIESCALAR    reduce using rule 55 (empty -> .)
    LENGTH          reduce using rule 55 (empty -> .)
    CAPITALIZAR     reduce using rule 55 (empty -> .)
    COLINEALES      reduce using rule 55 (empty -> .)
    [               reduce using rule 55 (empty -> .)

    com                            shift and go to state 494
    empty                          shift and go to state 116

state 471

    (18) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .

    WHILE           reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    COMMENT         reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    IF              reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    DO              reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    FOR             reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    RETURN          reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    ;               reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    MENOSMENOS      reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    MASMAS          reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    ID              reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    PRINT           reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    MULTIESCALAR    reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    LENGTH          reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    CAPITALIZAR     reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    COLINEALES      reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    [               reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    $end            reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    }               reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    ELSE            reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)


state 472

    (8) lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .

    COMMENT         reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    IF              reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    DO              reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    WHILE           reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    FOR             reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    RETURN          reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    ;               reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    MENOSMENOS      reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    MASMAS          reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    ID              reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    PRINT           reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    MULTIESCALAR    reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    LENGTH          reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    CAPITALIZAR     reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    COLINEALES      reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    [               reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    }               reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    $end            reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)


state 473

    (15) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { . g }
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (55) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (132) varAsig -> . varYVals MULEQ valoresAsig
    (133) varAsig -> . varYVals DIVEQ valoresAsig
    (134) varAsig -> . varYVals MASEQ valoresAsig
    (135) varAsig -> . varYVals MENOSEQ valoresAsig
    (136) varAsig -> . varYVals = valoresAsig
    (137) varAsig -> . ID . ID = valoresAsig
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 55 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 13
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 495
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 29
    lAbierta                       shift and go to state 30
    loop                           shift and go to state 32
    varYVals                       shift and go to state 11
    linea                          shift and go to state 34

state 474

    (7) lAbierta -> IF ( cosaBooleana ) { g } . ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) { g } .
    (14) lCerrada -> IF ( cosaBooleana ) { g } . ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g } . ELSE lCerrada

    ELSE            shift and go to state 496
    COMMENT         reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    IF              reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    DO              reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    WHILE           reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    FOR             reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    RETURN          reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    ;               reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MENOSMENOS      reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MASMAS          reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    ID              reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    PRINT           reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MULTIESCALAR    reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    LENGTH          reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    CAPITALIZAR     reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    COLINEALES      reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    [               reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    }               reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    $end            reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)


state 475

    (48) funcInt -> MULTIESCALAR ( valores , valores param ) .

    ;               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    +               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    -               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    *               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    /               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    %               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ^               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    EQEQ            reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    DISTINTO        reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    >               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    <               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    )               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ,               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    AND             reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    OR              reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ?               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ]               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    :               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    }               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)


state 476

    (53) param -> , valores .

    )               reduce using rule 53 (param -> , valores .)


state 477

    (27) lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) . ;

    ;               shift and go to state 497


state 478

    (14) lCerrada -> IF ( cosaBooleana ) { g } . ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g } . ELSE lCerrada

    ELSE            shift and go to state 498


state 479

    (25) lCerrada -> DO { g } WHILE ( valores ) . ;

    ;               shift and go to state 499


state 480

    (34) loop -> FOR ( primParam ; valores ; tercerParam ) .

    {               reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    COMMENT         reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    IF              reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    DO              reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    RETURN          reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    ;               reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    WHILE           reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    FOR             reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    MENOSMENOS      reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    MASMAS          reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    ID              reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    PRINT           reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    MULTIESCALAR    reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    LENGTH          reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    CAPITALIZAR     reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    COLINEALES      reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    [               reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)


state 481

    (97) valoresTernarioVars -> ( . ternarioVars )
    (185) valoresBool -> ( . ternarioBool )
    (212) tCompare -> ( . ternarioBool )
    (213) tCompare -> ( . ternarioMat )
    (146) valoresMat -> ( . ternarioMat )
    (221) parenBool -> ( . expBool )
    (179) paren -> ( . eMat )
    (180) paren -> ( . valoresMat )
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (51) funcBool -> . COLINEALES ( valores , valores )
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (56) vec -> . [ elem ]
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 163
    FLOAT           shift and go to state 164
    STRING          shift and go to state 159
    (               shift and go to state 155
    BOOL            shift and go to state 165
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73
    [               shift and go to state 20
    NOT             shift and go to state 94

    and                            shift and go to state 59
    funcBool                       shift and go to state 150
    funcInt                        shift and go to state 151
    menor                          shift and go to state 65
    valoresMat                     shift and go to state 152
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 453
    eMat                           shift and go to state 154
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 329
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    expBool                        shift and go to state 454
    ternarioBool                   shift and go to state 285
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 157
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 351
    mayor                          shift and go to state 97
    varYVals                       shift and go to state 168
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 169

state 482

    (88) ternarioVars -> valoresBool ? valoresTernarioBool . : valoresTernarioVars
    (110) ternarioBool -> valoresBool ? valoresTernarioBool . : valoresTernarioBool

    :               shift and go to state 500


state 483

    (84) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (110) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (103) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (94) valoresTernarioVars -> . reg
    (95) valoresTernarioVars -> . vec
    (96) valoresTernarioVars -> . ternarioVars
    (97) valoresTernarioVars -> . ( ternarioVars )
    (98) valoresTernarioVars -> . atributos
    (99) valoresTernarioVars -> . varsOps
    (100) valoresTernarioVars -> . varYVals
    (101) valoresTernarioVars -> . res
    (105) valoresTernarioMat -> . INT
    (106) valoresTernarioMat -> . FLOAT
    (107) valoresTernarioMat -> . funcInt
    (108) valoresTernarioMat -> . STRING
    (109) valoresTernarioMat -> . eMat
    (112) valoresTernarioBool -> . BOOL
    (113) valoresTernarioBool -> . funcBool
    (114) valoresTernarioBool -> . ternarioBool
    (115) valoresTernarioBool -> . ( ternarioBool )
    (116) valoresTernarioBool -> . expBool
    (124) reg -> . { campos }
    (56) vec -> . [ elem ]
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (102) res -> . RES
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    (               shift and go to state 400
    INT             shift and go to state 268
    FLOAT           shift and go to state 269
    STRING          shift and go to state 265
    BOOL            shift and go to state 271
    {               shift and go to state 96
    [               shift and go to state 20
    ID              shift and go to state 161
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 257
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 28
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    atributos                      shift and go to state 276
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 482
    valoresBool                    shift and go to state 396
    vec                            shift and go to state 262
    paren                          shift and go to state 83
    reg                            shift and go to state 263
    valoresTernarioVars            shift and go to state 264
    exp                            shift and go to state 95
    ternarioBool                   shift and go to state 266
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    valoresTernarioMat             shift and go to state 461
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 389
    res                            shift and go to state 255
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 390
    parenBool                      shift and go to state 81
    expBool                        shift and go to state 401

state 484

    (89) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (111) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (104) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (94) valoresTernarioVars -> . reg
    (95) valoresTernarioVars -> . vec
    (96) valoresTernarioVars -> . ternarioVars
    (97) valoresTernarioVars -> . ( ternarioVars )
    (98) valoresTernarioVars -> . atributos
    (99) valoresTernarioVars -> . varsOps
    (100) valoresTernarioVars -> . varYVals
    (101) valoresTernarioVars -> . res
    (105) valoresTernarioMat -> . INT
    (106) valoresTernarioMat -> . FLOAT
    (107) valoresTernarioMat -> . funcInt
    (108) valoresTernarioMat -> . STRING
    (109) valoresTernarioMat -> . eMat
    (112) valoresTernarioBool -> . BOOL
    (113) valoresTernarioBool -> . funcBool
    (114) valoresTernarioBool -> . ternarioBool
    (115) valoresTernarioBool -> . ( ternarioBool )
    (116) valoresTernarioBool -> . expBool
    (124) reg -> . { campos }
    (56) vec -> . [ elem ]
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (102) res -> . RES
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    (               shift and go to state 400
    INT             shift and go to state 268
    FLOAT           shift and go to state 269
    STRING          shift and go to state 265
    BOOL            shift and go to state 271
    {               shift and go to state 96
    [               shift and go to state 20
    ID              shift and go to state 161
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 257
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 28
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 396
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 485
    vecVal                         shift and go to state 8
    vec                            shift and go to state 262
    paren                          shift and go to state 83
    reg                            shift and go to state 263
    valoresTernarioVars            shift and go to state 303
    expBool                        shift and go to state 401
    ternarioBool                   shift and go to state 266
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    valoresTernarioMat             shift and go to state 462
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 389
    res                            shift and go to state 255
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 390
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 276

state 485

    (93) ternarioVars -> expBool ? valoresTernarioBool . : valoresTernarioVars
    (111) ternarioBool -> expBool ? valoresTernarioBool . : valoresTernarioBool

    :               shift and go to state 501


state 486

    (88) ternarioVars -> valoresBool ? valoresTernarioBool . : valoresTernarioVars

    :               shift and go to state 502


state 487

    (84) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (103) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (110) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (94) valoresTernarioVars -> . reg
    (95) valoresTernarioVars -> . vec
    (96) valoresTernarioVars -> . ternarioVars
    (97) valoresTernarioVars -> . ( ternarioVars )
    (98) valoresTernarioVars -> . atributos
    (99) valoresTernarioVars -> . varsOps
    (100) valoresTernarioVars -> . varYVals
    (101) valoresTernarioVars -> . res
    (105) valoresTernarioMat -> . INT
    (106) valoresTernarioMat -> . FLOAT
    (107) valoresTernarioMat -> . funcInt
    (108) valoresTernarioMat -> . STRING
    (109) valoresTernarioMat -> . eMat
    (112) valoresTernarioBool -> . BOOL
    (113) valoresTernarioBool -> . funcBool
    (114) valoresTernarioBool -> . ternarioBool
    (115) valoresTernarioBool -> . ( ternarioBool )
    (116) valoresTernarioBool -> . expBool
    (124) reg -> . { campos }
    (56) vec -> . [ elem ]
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (102) res -> . RES
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    (               shift and go to state 400
    INT             shift and go to state 268
    FLOAT           shift and go to state 269
    STRING          shift and go to state 265
    BOOL            shift and go to state 271
    {               shift and go to state 96
    [               shift and go to state 20
    ID              shift and go to state 161
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 257
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 28
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    atributos                      shift and go to state 276
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 482
    valoresBool                    shift and go to state 396
    vec                            shift and go to state 262
    paren                          shift and go to state 83
    reg                            shift and go to state 263
    valoresTernarioVars            shift and go to state 264
    exp                            shift and go to state 95
    ternarioBool                   shift and go to state 266
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    valoresTernarioMat             shift and go to state 461
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 389
    res                            shift and go to state 255
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 390
    parenBool                      shift and go to state 81
    expBool                        shift and go to state 401

state 488

    (89) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (104) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (111) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (94) valoresTernarioVars -> . reg
    (95) valoresTernarioVars -> . vec
    (96) valoresTernarioVars -> . ternarioVars
    (97) valoresTernarioVars -> . ( ternarioVars )
    (98) valoresTernarioVars -> . atributos
    (99) valoresTernarioVars -> . varsOps
    (100) valoresTernarioVars -> . varYVals
    (101) valoresTernarioVars -> . res
    (105) valoresTernarioMat -> . INT
    (106) valoresTernarioMat -> . FLOAT
    (107) valoresTernarioMat -> . funcInt
    (108) valoresTernarioMat -> . STRING
    (109) valoresTernarioMat -> . eMat
    (112) valoresTernarioBool -> . BOOL
    (113) valoresTernarioBool -> . funcBool
    (114) valoresTernarioBool -> . ternarioBool
    (115) valoresTernarioBool -> . ( ternarioBool )
    (116) valoresTernarioBool -> . expBool
    (124) reg -> . { campos }
    (56) vec -> . [ elem ]
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (102) res -> . RES
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    (               shift and go to state 400
    INT             shift and go to state 268
    FLOAT           shift and go to state 269
    STRING          shift and go to state 265
    BOOL            shift and go to state 271
    {               shift and go to state 96
    [               shift and go to state 20
    ID              shift and go to state 161
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 257
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 28
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 396
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 485
    vecVal                         shift and go to state 8
    vec                            shift and go to state 262
    paren                          shift and go to state 83
    reg                            shift and go to state 263
    valoresTernarioVars            shift and go to state 303
    expBool                        shift and go to state 401
    ternarioBool                   shift and go to state 266
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    valoresTernarioMat             shift and go to state 462
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 389
    res                            shift and go to state 255
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 390
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 276

state 489

    (93) ternarioVars -> expBool ? valoresTernarioBool . : valoresTernarioVars

    :               shift and go to state 503


state 490

    (86) ternarioVars -> valoresBool ? valoresTernarioMat : . valoresTernarioVars
    (103) ternarioMat -> valoresBool ? valoresTernarioMat : . valoresTernarioMat
    (94) valoresTernarioVars -> . reg
    (95) valoresTernarioVars -> . vec
    (96) valoresTernarioVars -> . ternarioVars
    (97) valoresTernarioVars -> . ( ternarioVars )
    (98) valoresTernarioVars -> . atributos
    (99) valoresTernarioVars -> . varsOps
    (100) valoresTernarioVars -> . varYVals
    (101) valoresTernarioVars -> . res
    (105) valoresTernarioMat -> . INT
    (106) valoresTernarioMat -> . FLOAT
    (107) valoresTernarioMat -> . funcInt
    (108) valoresTernarioMat -> . STRING
    (109) valoresTernarioMat -> . eMat
    (124) reg -> . { campos }
    (56) vec -> . [ elem ]
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (102) res -> . RES
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (51) funcBool -> . COLINEALES ( valores , valores )
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    (               shift and go to state 504
    INT             shift and go to state 268
    FLOAT           shift and go to state 269
    STRING          shift and go to state 265
    {               shift and go to state 96
    [               shift and go to state 20
    ID              shift and go to state 161
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 257
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    BOOL            shift and go to state 165
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    CAPITALIZAR     shift and go to state 28
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    atributos                      shift and go to state 276
    funcBool                       shift and go to state 150
    funcInt                        shift and go to state 258
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 402
    eMat                           shift and go to state 260
    res                            shift and go to state 255
    vecVal                         shift and go to state 8
    vec                            shift and go to state 262
    paren                          shift and go to state 83
    reg                            shift and go to state 263
    valoresTernarioVars            shift and go to state 404
    exp                            shift and go to state 95
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    valoresTernarioMat             shift and go to state 405
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 389
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 390
    parenBool                      shift and go to state 81
    expBool                        shift and go to state 406

state 491

    (91) ternarioVars -> expBool ? valoresTernarioMat : . valoresTernarioVars
    (104) ternarioMat -> expBool ? valoresTernarioMat : . valoresTernarioMat
    (94) valoresTernarioVars -> . reg
    (95) valoresTernarioVars -> . vec
    (96) valoresTernarioVars -> . ternarioVars
    (97) valoresTernarioVars -> . ( ternarioVars )
    (98) valoresTernarioVars -> . atributos
    (99) valoresTernarioVars -> . varsOps
    (100) valoresTernarioVars -> . varYVals
    (101) valoresTernarioVars -> . res
    (105) valoresTernarioMat -> . INT
    (106) valoresTernarioMat -> . FLOAT
    (107) valoresTernarioMat -> . funcInt
    (108) valoresTernarioMat -> . STRING
    (109) valoresTernarioMat -> . eMat
    (124) reg -> . { campos }
    (56) vec -> . [ elem ]
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (102) res -> . RES
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (51) funcBool -> . COLINEALES ( valores , valores )
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    (               shift and go to state 504
    INT             shift and go to state 268
    FLOAT           shift and go to state 269
    STRING          shift and go to state 265
    {               shift and go to state 96
    [               shift and go to state 20
    ID              shift and go to state 161
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 257
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    BOOL            shift and go to state 165
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    CAPITALIZAR     shift and go to state 28
    -               shift and go to state 74
    +               shift and go to state 73
    NOT             shift and go to state 94

    and                            shift and go to state 59
    funcBool                       shift and go to state 150
    funcInt                        shift and go to state 258
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 402
    eMat                           shift and go to state 260
    vecVal                         shift and go to state 8
    vec                            shift and go to state 262
    paren                          shift and go to state 83
    reg                            shift and go to state 263
    valoresTernarioVars            shift and go to state 428
    expBool                        shift and go to state 406
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    valoresTernarioMat             shift and go to state 427
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 389
    res                            shift and go to state 255
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 390
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 276

state 492

    (16) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE . { g }
    (19) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE . lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE . COMMENT com lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (132) varAsig -> . varYVals MULEQ valoresAsig
    (133) varAsig -> . varYVals DIVEQ valoresAsig
    (134) varAsig -> . varYVals MASEQ valoresAsig
    (135) varAsig -> . varYVals MENOSEQ valoresAsig
    (136) varAsig -> . varYVals = valoresAsig
    (137) varAsig -> . ID . ID = valoresAsig
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 507
    COMMENT         shift and go to state 505
    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 506
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 39

state 493

    (14) lCerrada -> IF ( cosaBooleana ) . { g } ELSE { g }
    (15) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE { g }
    (16) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) . { g } ELSE lCerrada
    (18) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE COMMENT com lCerrada
    (6) lAbierta -> IF ( cosaBooleana ) . linea
    (7) lAbierta -> IF ( cosaBooleana ) . { g } ELSE lAbierta
    (8) lAbierta -> IF ( cosaBooleana ) . lCerrada ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) . { g }
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (132) varAsig -> . varYVals MULEQ valoresAsig
    (133) varAsig -> . varYVals DIVEQ valoresAsig
    (134) varAsig -> . varYVals MASEQ valoresAsig
    (135) varAsig -> . varYVals MENOSEQ valoresAsig
    (136) varAsig -> . varYVals = valoresAsig
    (137) varAsig -> . ID . ID = valoresAsig
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 509
    COMMENT         shift and go to state 373
    IF              shift and go to state 374
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 508
    lAbierta                       shift and go to state 30
    linea                          shift and go to state 372
    varYVals                       shift and go to state 11
    loop                           shift and go to state 377

state 494

    (20) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com . lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (132) varAsig -> . varYVals MULEQ valoresAsig
    (133) varAsig -> . varYVals DIVEQ valoresAsig
    (134) varAsig -> . varYVals MASEQ valoresAsig
    (135) varAsig -> . varYVals MENOSEQ valoresAsig
    (136) varAsig -> . varYVals = valoresAsig
    (137) varAsig -> . ID . ID = valoresAsig
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 510
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 39

state 495

    (15) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g . }

    }               shift and go to state 511


state 496

    (7) lAbierta -> IF ( cosaBooleana ) { g } ELSE . lAbierta
    (14) lCerrada -> IF ( cosaBooleana ) { g } ELSE . { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g } ELSE . lCerrada
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (132) varAsig -> . varYVals MULEQ valoresAsig
    (133) varAsig -> . varYVals DIVEQ valoresAsig
    (134) varAsig -> . varYVals MASEQ valoresAsig
    (135) varAsig -> . varYVals MENOSEQ valoresAsig
    (136) varAsig -> . varYVals = valoresAsig
    (137) varAsig -> . ID . ID = valoresAsig
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 514
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 512
    lAbierta                       shift and go to state 513
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 32

state 497

    (27) lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .

    WHILE           reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    COMMENT         reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    IF              reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    DO              reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    FOR             reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    RETURN          reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    ;               reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    MENOSMENOS      reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    MASMAS          reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    ID              reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    PRINT           reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    MULTIESCALAR    reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    LENGTH          reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    CAPITALIZAR     reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    COLINEALES      reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    [               reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    $end            reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    }               reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    ELSE            reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)


state 498

    (14) lCerrada -> IF ( cosaBooleana ) { g } ELSE . { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g } ELSE . lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (132) varAsig -> . varYVals MULEQ valoresAsig
    (133) varAsig -> . varYVals DIVEQ valoresAsig
    (134) varAsig -> . varYVals MASEQ valoresAsig
    (135) varAsig -> . varYVals MENOSEQ valoresAsig
    (136) varAsig -> . varYVals = valoresAsig
    (137) varAsig -> . ID . ID = valoresAsig
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 514
    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 512
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 39

state 499

    (25) lCerrada -> DO { g } WHILE ( valores ) ; .

    WHILE           reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    COMMENT         reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    IF              reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    DO              reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    FOR             reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    RETURN          reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    ;               reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    MENOSMENOS      reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    MASMAS          reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    ID              reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    PRINT           reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    MULTIESCALAR    reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    LENGTH          reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    CAPITALIZAR     reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    COLINEALES      reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    [               reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    $end            reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    }               reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    ELSE            reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)


state 500

    (88) ternarioVars -> valoresBool ? valoresTernarioBool : . valoresTernarioVars
    (110) ternarioBool -> valoresBool ? valoresTernarioBool : . valoresTernarioBool
    (94) valoresTernarioVars -> . reg
    (95) valoresTernarioVars -> . vec
    (96) valoresTernarioVars -> . ternarioVars
    (97) valoresTernarioVars -> . ( ternarioVars )
    (98) valoresTernarioVars -> . atributos
    (99) valoresTernarioVars -> . varsOps
    (100) valoresTernarioVars -> . varYVals
    (101) valoresTernarioVars -> . res
    (112) valoresTernarioBool -> . BOOL
    (113) valoresTernarioBool -> . funcBool
    (114) valoresTernarioBool -> . ternarioBool
    (115) valoresTernarioBool -> . ( ternarioBool )
    (116) valoresTernarioBool -> . expBool
    (124) reg -> . { campos }
    (56) vec -> . [ elem ]
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (102) res -> . RES
    (51) funcBool -> . COLINEALES ( valores , valores )
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (221) parenBool -> . ( expBool )
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )

    (               shift and go to state 515
    BOOL            shift and go to state 271
    {               shift and go to state 96
    [               shift and go to state 20
    ID              shift and go to state 161
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 257
    COLINEALES      shift and go to state 4
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    INT             shift and go to state 208
    FLOAT           shift and go to state 209
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 159
    NOT             shift and go to state 94
    CAPITALIZAR     shift and go to state 28
    -               shift and go to state 74
    +               shift and go to state 73

    and                            shift and go to state 59
    atributos                      shift and go to state 276
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 202
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 396
    eMat                           shift and go to state 204
    valoresTernarioBool            shift and go to state 391
    vecVal                         shift and go to state 8
    vec                            shift and go to state 262
    paren                          shift and go to state 83
    reg                            shift and go to state 263
    valoresTernarioVars            shift and go to state 392
    exp                            shift and go to state 95
    ternarioBool                   shift and go to state 266
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 394
    res                            shift and go to state 255
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 395
    parenBool                      shift and go to state 81
    expBool                        shift and go to state 401

state 501

    (93) ternarioVars -> expBool ? valoresTernarioBool : . valoresTernarioVars
    (111) ternarioBool -> expBool ? valoresTernarioBool : . valoresTernarioBool
    (94) valoresTernarioVars -> . reg
    (95) valoresTernarioVars -> . vec
    (96) valoresTernarioVars -> . ternarioVars
    (97) valoresTernarioVars -> . ( ternarioVars )
    (98) valoresTernarioVars -> . atributos
    (99) valoresTernarioVars -> . varsOps
    (100) valoresTernarioVars -> . varYVals
    (101) valoresTernarioVars -> . res
    (112) valoresTernarioBool -> . BOOL
    (113) valoresTernarioBool -> . funcBool
    (114) valoresTernarioBool -> . ternarioBool
    (115) valoresTernarioBool -> . ( ternarioBool )
    (116) valoresTernarioBool -> . expBool
    (124) reg -> . { campos }
    (56) vec -> . [ elem ]
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (102) res -> . RES
    (51) funcBool -> . COLINEALES ( valores , valores )
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (221) parenBool -> . ( expBool )
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )

    (               shift and go to state 515
    BOOL            shift and go to state 271
    {               shift and go to state 96
    [               shift and go to state 20
    ID              shift and go to state 161
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 257
    COLINEALES      shift and go to state 4
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    INT             shift and go to state 208
    FLOAT           shift and go to state 209
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 159
    NOT             shift and go to state 94
    CAPITALIZAR     shift and go to state 28
    -               shift and go to state 74
    +               shift and go to state 73

    and                            shift and go to state 59
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 202
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 396
    eMat                           shift and go to state 204
    valoresTernarioBool            shift and go to state 422
    vecVal                         shift and go to state 8
    vec                            shift and go to state 262
    paren                          shift and go to state 83
    reg                            shift and go to state 263
    valoresTernarioVars            shift and go to state 423
    expBool                        shift and go to state 401
    ternarioBool                   shift and go to state 266
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 394
    res                            shift and go to state 255
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 395
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 276

state 502

    (88) ternarioVars -> valoresBool ? valoresTernarioBool : . valoresTernarioVars
    (94) valoresTernarioVars -> . reg
    (95) valoresTernarioVars -> . vec
    (96) valoresTernarioVars -> . ternarioVars
    (97) valoresTernarioVars -> . ( ternarioVars )
    (98) valoresTernarioVars -> . atributos
    (99) valoresTernarioVars -> . varsOps
    (100) valoresTernarioVars -> . varYVals
    (101) valoresTernarioVars -> . res
    (124) reg -> . { campos }
    (56) vec -> . [ elem ]
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (102) res -> . RES
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (51) funcBool -> . COLINEALES ( valores , valores )
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (221) parenBool -> . ( expBool )
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )

    (               shift and go to state 481
    {               shift and go to state 96
    [               shift and go to state 20
    ID              shift and go to state 161
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 257
    BOOL            shift and go to state 165
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    INT             shift and go to state 208
    FLOAT           shift and go to state 209
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 159
    NOT             shift and go to state 94
    CAPITALIZAR     shift and go to state 28
    -               shift and go to state 74
    +               shift and go to state 73

    and                            shift and go to state 59
    atributos                      shift and go to state 276
    funcBool                       shift and go to state 150
    funcInt                        shift and go to state 202
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 402
    eMat                           shift and go to state 204
    vecVal                         shift and go to state 8
    vec                            shift and go to state 262
    paren                          shift and go to state 83
    reg                            shift and go to state 263
    valoresTernarioVars            shift and go to state 392
    exp                            shift and go to state 95
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 394
    res                            shift and go to state 255
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 395
    parenBool                      shift and go to state 81
    expBool                        shift and go to state 406

state 503

    (93) ternarioVars -> expBool ? valoresTernarioBool : . valoresTernarioVars
    (94) valoresTernarioVars -> . reg
    (95) valoresTernarioVars -> . vec
    (96) valoresTernarioVars -> . ternarioVars
    (97) valoresTernarioVars -> . ( ternarioVars )
    (98) valoresTernarioVars -> . atributos
    (99) valoresTernarioVars -> . varsOps
    (100) valoresTernarioVars -> . varYVals
    (101) valoresTernarioVars -> . res
    (124) reg -> . { campos }
    (56) vec -> . [ elem ]
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (102) res -> . RES
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (51) funcBool -> . COLINEALES ( valores , valores )
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (50) funcString -> . CAPITALIZAR ( valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (221) parenBool -> . ( expBool )
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )

    (               shift and go to state 481
    {               shift and go to state 96
    [               shift and go to state 20
    ID              shift and go to state 161
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 257
    BOOL            shift and go to state 165
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    INT             shift and go to state 208
    FLOAT           shift and go to state 209
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 159
    NOT             shift and go to state 94
    CAPITALIZAR     shift and go to state 28
    -               shift and go to state 74
    +               shift and go to state 73

    and                            shift and go to state 59
    funcBool                       shift and go to state 150
    funcInt                        shift and go to state 202
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 67
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 402
    eMat                           shift and go to state 204
    vecVal                         shift and go to state 8
    vec                            shift and go to state 262
    paren                          shift and go to state 83
    reg                            shift and go to state 263
    valoresTernarioVars            shift and go to state 423
    expBool                        shift and go to state 406
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 394
    res                            shift and go to state 255
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 395
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 276

state 504

    (97) valoresTernarioVars -> ( . ternarioVars )
    (185) valoresBool -> ( . ternarioBool )
    (146) valoresMat -> ( . ternarioMat )
    (212) tCompare -> ( . ternarioBool )
    (213) tCompare -> ( . ternarioMat )
    (179) paren -> ( . eMat )
    (180) paren -> ( . valoresMat )
    (221) parenBool -> ( . expBool )
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (56) vec -> . [ elem ]
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 163
    FLOAT           shift and go to state 164
    STRING          shift and go to state 159
    (               shift and go to state 155
    BOOL            shift and go to state 165
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73
    [               shift and go to state 20
    NOT             shift and go to state 94

    and                            shift and go to state 59
    funcBool                       shift and go to state 150
    funcInt                        shift and go to state 151
    menor                          shift and go to state 65
    mayor                          shift and go to state 97
    valoresMat                     shift and go to state 152
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 453
    eMat                           shift and go to state 154
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 284
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    exp                            shift and go to state 95
    ternarioBool                   shift and go to state 285
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    expBool                        shift and go to state 454
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 157
    ternarioVars                   shift and go to state 351
    varYVals                       shift and go to state 168
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 169

state 505

    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT . com lCerrada
    (12) com -> . COMMENT com
    (13) com -> . empty
    (55) empty -> .

    COMMENT         shift and go to state 114
    IF              reduce using rule 55 (empty -> .)
    DO              reduce using rule 55 (empty -> .)
    RETURN          reduce using rule 55 (empty -> .)
    ;               reduce using rule 55 (empty -> .)
    WHILE           reduce using rule 55 (empty -> .)
    FOR             reduce using rule 55 (empty -> .)
    MENOSMENOS      reduce using rule 55 (empty -> .)
    MASMAS          reduce using rule 55 (empty -> .)
    ID              reduce using rule 55 (empty -> .)
    PRINT           reduce using rule 55 (empty -> .)
    MULTIESCALAR    reduce using rule 55 (empty -> .)
    LENGTH          reduce using rule 55 (empty -> .)
    CAPITALIZAR     reduce using rule 55 (empty -> .)
    COLINEALES      reduce using rule 55 (empty -> .)
    [               reduce using rule 55 (empty -> .)

    com                            shift and go to state 516
    empty                          shift and go to state 116

state 506

    (19) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .

    WHILE           reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    COMMENT         reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    IF              reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    DO              reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    FOR             reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    RETURN          reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    ;               reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    MENOSMENOS      reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    MASMAS          reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    ID              reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    PRINT           reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    MULTIESCALAR    reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    LENGTH          reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    CAPITALIZAR     reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    COLINEALES      reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    [               reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    $end            reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    }               reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    ELSE            reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)


state 507

    (16) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { . g }
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (55) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (132) varAsig -> . varYVals MULEQ valoresAsig
    (133) varAsig -> . varYVals DIVEQ valoresAsig
    (134) varAsig -> . varYVals MASEQ valoresAsig
    (135) varAsig -> . varYVals MENOSEQ valoresAsig
    (136) varAsig -> . varYVals = valoresAsig
    (137) varAsig -> . ID . ID = valoresAsig
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 55 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 13
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 517
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 29
    lAbierta                       shift and go to state 30
    loop                           shift and go to state 32
    varYVals                       shift and go to state 11
    linea                          shift and go to state 34

state 508

    (15) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE { g }
    (18) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE COMMENT com lCerrada
    (8) lAbierta -> IF ( cosaBooleana ) lCerrada . ELSE lAbierta
    (5) linea -> lCerrada .

    ELSE            shift and go to state 518
    COMMENT         reduce using rule 5 (linea -> lCerrada .)
    IF              reduce using rule 5 (linea -> lCerrada .)
    DO              reduce using rule 5 (linea -> lCerrada .)
    WHILE           reduce using rule 5 (linea -> lCerrada .)
    FOR             reduce using rule 5 (linea -> lCerrada .)
    RETURN          reduce using rule 5 (linea -> lCerrada .)
    ;               reduce using rule 5 (linea -> lCerrada .)
    MENOSMENOS      reduce using rule 5 (linea -> lCerrada .)
    MASMAS          reduce using rule 5 (linea -> lCerrada .)
    ID              reduce using rule 5 (linea -> lCerrada .)
    PRINT           reduce using rule 5 (linea -> lCerrada .)
    MULTIESCALAR    reduce using rule 5 (linea -> lCerrada .)
    LENGTH          reduce using rule 5 (linea -> lCerrada .)
    CAPITALIZAR     reduce using rule 5 (linea -> lCerrada .)
    COLINEALES      reduce using rule 5 (linea -> lCerrada .)
    [               reduce using rule 5 (linea -> lCerrada .)
    $end            reduce using rule 5 (linea -> lCerrada .)
    }               reduce using rule 5 (linea -> lCerrada .)


state 509

    (14) lCerrada -> IF ( cosaBooleana ) { . g } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { . g } ELSE lCerrada
    (7) lAbierta -> IF ( cosaBooleana ) { . g } ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) { . g }
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (55) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (132) varAsig -> . varYVals MULEQ valoresAsig
    (133) varAsig -> . varYVals DIVEQ valoresAsig
    (134) varAsig -> . varYVals MASEQ valoresAsig
    (135) varAsig -> . varYVals MENOSEQ valoresAsig
    (136) varAsig -> . varYVals = valoresAsig
    (137) varAsig -> . ID . ID = valoresAsig
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 55 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    linea                          shift and go to state 34
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 13
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 519
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 29
    lAbierta                       shift and go to state 30
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 32

state 510

    (20) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .

    WHILE           reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    COMMENT         reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    IF              reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    DO              reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    FOR             reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    RETURN          reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    ;               reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    MENOSMENOS      reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    MASMAS          reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    ID              reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    PRINT           reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    MULTIESCALAR    reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    LENGTH          reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    CAPITALIZAR     reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    COLINEALES      reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    [               reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    $end            reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    }               reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    ELSE            reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)


state 511

    (15) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .

    WHILE           reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    COMMENT         reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    IF              reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    DO              reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    FOR             reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    RETURN          reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    ;               reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    MENOSMENOS      reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    MASMAS          reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    ID              reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    PRINT           reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    MULTIESCALAR    reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    LENGTH          reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    CAPITALIZAR     reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    COLINEALES      reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    [               reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    $end            reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    }               reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    ELSE            reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)


state 512

    (17) lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .

    WHILE           reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    COMMENT         reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    IF              reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    DO              reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    FOR             reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    RETURN          reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    ;               reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    MENOSMENOS      reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    MASMAS          reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    ID              reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    PRINT           reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    MULTIESCALAR    reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    LENGTH          reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    CAPITALIZAR     reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    COLINEALES      reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    [               reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    $end            reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    }               reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    ELSE            reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)


state 513

    (7) lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .

    COMMENT         reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    IF              reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    DO              reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    WHILE           reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    FOR             reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    RETURN          reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    ;               reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    MENOSMENOS      reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    MASMAS          reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    ID              reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    PRINT           reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    MULTIESCALAR    reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    LENGTH          reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    CAPITALIZAR     reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    COLINEALES      reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    [               reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    }               reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    $end            reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)


state 514

    (14) lCerrada -> IF ( cosaBooleana ) { g } ELSE { . g }
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (55) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (132) varAsig -> . varYVals MULEQ valoresAsig
    (133) varAsig -> . varYVals DIVEQ valoresAsig
    (134) varAsig -> . varYVals MASEQ valoresAsig
    (135) varAsig -> . varYVals MENOSEQ valoresAsig
    (136) varAsig -> . varYVals = valoresAsig
    (137) varAsig -> . ID . ID = valoresAsig
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 55 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 13
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 520
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 29
    lAbierta                       shift and go to state 30
    loop                           shift and go to state 32
    varYVals                       shift and go to state 11
    linea                          shift and go to state 34

state 515

    (97) valoresTernarioVars -> ( . ternarioVars )
    (115) valoresTernarioBool -> ( . ternarioBool )
    (185) valoresBool -> ( . ternarioBool )
    (212) tCompare -> ( . ternarioBool )
    (213) tCompare -> ( . ternarioMat )
    (146) valoresMat -> ( . ternarioMat )
    (221) parenBool -> ( . expBool )
    (179) paren -> ( . eMat )
    (180) paren -> ( . valoresMat )
    (84) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (85) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (86) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (87) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (88) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (89) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (90) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (91) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (92) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (93) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (110) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (111) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (104) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (187) expBool -> . expBool OR and
    (188) expBool -> . valoresBool OR and
    (189) expBool -> . expBool OR valoresBool
    (190) expBool -> . valoresBool OR valoresBool
    (191) expBool -> . and
    (147) eMat -> . eMat + p
    (148) eMat -> . valoresMat + p
    (149) eMat -> . eMat + valoresMat
    (150) eMat -> . valoresMat + valoresMat
    (151) eMat -> . p
    (152) eMat -> . eMat - p
    (153) eMat -> . valoresMat - p
    (154) eMat -> . eMat - valoresMat
    (155) eMat -> . valoresMat - valoresMat
    (138) valoresMat -> . INT
    (139) valoresMat -> . FLOAT
    (140) valoresMat -> . funcInt
    (141) valoresMat -> . atributos
    (142) valoresMat -> . funcString
    (143) valoresMat -> . STRING
    (144) valoresMat -> . varYVals
    (145) valoresMat -> . varsOps
    (146) valoresMat -> . ( ternarioMat )
    (181) valoresBool -> . BOOL
    (182) valoresBool -> . funcBool
    (183) valoresBool -> . varYVals
    (184) valoresBool -> . varsOps
    (185) valoresBool -> . ( ternarioBool )
    (186) valoresBool -> .
    (192) and -> . and AND eq
    (193) and -> . valoresBool AND eq
    (194) and -> . and AND valoresBool
    (195) and -> . valoresBool AND valoresBool
    (196) and -> . eq
    (156) p -> . p * exp
    (157) p -> . p / exp
    (158) p -> . p % exp
    (159) p -> . valoresMat * exp
    (160) p -> . valoresMat / exp
    (161) p -> . valoresMat % exp
    (162) p -> . p * valoresMat
    (163) p -> . p / valoresMat
    (164) p -> . p % valoresMat
    (165) p -> . valoresMat * valoresMat
    (166) p -> . valoresMat / valoresMat
    (167) p -> . valoresMat % valoresMat
    (168) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (73) atributos -> . ID . valoresCampos
    (74) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (51) funcBool -> . COLINEALES ( valores , valores )
    (197) eq -> . eq EQEQ mayor
    (198) eq -> . eq DISTINTO mayor
    (199) eq -> . tCompare EQEQ mayor
    (200) eq -> . tCompare DISTINTO mayor
    (201) eq -> . eq EQEQ tCompare
    (202) eq -> . eq DISTINTO tCompare
    (203) eq -> . tCompare EQEQ tCompare
    (204) eq -> . tCompare DISTINTO tCompare
    (205) eq -> . mayor
    (169) exp -> . exp ^ iSing
    (170) exp -> . valoresMat ^ iSing
    (171) exp -> . exp ^ valoresMat
    (172) exp -> . valoresMat ^ valoresMat
    (173) exp -> . iSing
    (124) reg -> . { campos }
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (206) tCompare -> . eMat
    (207) tCompare -> . varsOps
    (208) tCompare -> . varYVals
    (209) tCompare -> . INT
    (210) tCompare -> . funcInt
    (211) tCompare -> . FLOAT
    (212) tCompare -> . ( ternarioBool )
    (213) tCompare -> . ( ternarioMat )
    (214) mayor -> . tCompare > tCompare
    (215) mayor -> . menor
    (174) iSing -> . - paren
    (175) iSing -> . + paren
    (176) iSing -> . - valoresMat
    (177) iSing -> . + valoresMat
    (178) iSing -> . paren
    (56) vec -> . [ elem ]
    (216) menor -> . tCompare < tCompare
    (217) menor -> . not
    (179) paren -> . ( eMat )
    (180) paren -> . ( valoresMat )
    (218) not -> . NOT not
    (219) not -> . NOT valoresBool
    (220) not -> . parenBool
    (221) parenBool -> . ( expBool )

    INT             shift and go to state 163
    FLOAT           shift and go to state 164
    STRING          shift and go to state 159
    (               shift and go to state 155
    BOOL            shift and go to state 165
    ?               reduce using rule 186 (valoresBool -> .)
    OR              reduce using rule 186 (valoresBool -> .)
    AND             reduce using rule 186 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 161
    CAPITALIZAR     shift and go to state 28
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 96
    -               shift and go to state 74
    +               shift and go to state 73
    [               shift and go to state 20
    NOT             shift and go to state 94

    and                            shift and go to state 59
    funcBool                       shift and go to state 150
    funcInt                        shift and go to state 151
    menor                          shift and go to state 65
    valoresMat                     shift and go to state 152
    eq                             shift and go to state 68
    valoresBool                    shift and go to state 453
    eMat                           shift and go to state 154
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 329
    vec                            shift and go to state 33
    paren                          shift and go to state 83
    reg                            shift and go to state 158
    expBool                        shift and go to state 454
    ternarioBool                   shift and go to state 349
    iSing                          shift and go to state 80
    tCompare                       shift and go to state 82
    not                            shift and go to state 84
    funcString                     shift and go to state 162
    p                              shift and go to state 91
    varsOps                        shift and go to state 157
    exp                            shift and go to state 95
    ternarioVars                   shift and go to state 351
    mayor                          shift and go to state 97
    varYVals                       shift and go to state 168
    parenBool                      shift and go to state 81
    atributos                      shift and go to state 169

state 516

    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com . lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (132) varAsig -> . varYVals MULEQ valoresAsig
    (133) varAsig -> . varYVals DIVEQ valoresAsig
    (134) varAsig -> . varYVals MASEQ valoresAsig
    (135) varAsig -> . varYVals MENOSEQ valoresAsig
    (136) varAsig -> . varYVals = valoresAsig
    (137) varAsig -> . ID . ID = valoresAsig
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 521
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 39

state 517

    (16) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g . }

    }               shift and go to state 522


state 518

    (15) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . { g }
    (18) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . COMMENT com lCerrada
    (8) lAbierta -> IF ( cosaBooleana ) lCerrada ELSE . lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (132) varAsig -> . varYVals MULEQ valoresAsig
    (133) varAsig -> . varYVals DIVEQ valoresAsig
    (134) varAsig -> . varYVals MASEQ valoresAsig
    (135) varAsig -> . varYVals MENOSEQ valoresAsig
    (136) varAsig -> . varYVals = valoresAsig
    (137) varAsig -> . ID . ID = valoresAsig
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 473
    COMMENT         shift and go to state 470
    IF              shift and go to state 374
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 471
    lAbierta                       shift and go to state 472
    loop                           shift and go to state 377
    varYVals                       shift and go to state 11

state 519

    (14) lCerrada -> IF ( cosaBooleana ) { g . } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g . } ELSE lCerrada
    (7) lAbierta -> IF ( cosaBooleana ) { g . } ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) { g . }

    }               shift and go to state 523


state 520

    (14) lCerrada -> IF ( cosaBooleana ) { g } ELSE { g . }

    }               shift and go to state 524


state 521

    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .

    WHILE           reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    COMMENT         reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    IF              reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    DO              reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    FOR             reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    RETURN          reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    ;               reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    MENOSMENOS      reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    MASMAS          reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    ID              reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    PRINT           reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    MULTIESCALAR    reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    LENGTH          reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    CAPITALIZAR     reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    COLINEALES      reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    [               reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    $end            reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    }               reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    ELSE            reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)


state 522

    (16) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .

    WHILE           reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    COMMENT         reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    IF              reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    DO              reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    FOR             reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    RETURN          reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    ;               reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    MENOSMENOS      reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    MASMAS          reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    ID              reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    PRINT           reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    MULTIESCALAR    reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    LENGTH          reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    CAPITALIZAR     reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    COLINEALES      reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    [               reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    $end            reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    }               reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    ELSE            reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)


state 523

    (14) lCerrada -> IF ( cosaBooleana ) { g } . ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g } . ELSE lCerrada
    (7) lAbierta -> IF ( cosaBooleana ) { g } . ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) { g } .

    ELSE            shift and go to state 525
    COMMENT         reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    IF              reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    DO              reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    WHILE           reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    FOR             reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    RETURN          reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    ;               reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MENOSMENOS      reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MASMAS          reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    ID              reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    PRINT           reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MULTIESCALAR    reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    LENGTH          reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    CAPITALIZAR     reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    COLINEALES      reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    [               reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    $end            reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    }               reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)


state 524

    (14) lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .

    WHILE           reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    COMMENT         reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    IF              reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    DO              reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    FOR             reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    RETURN          reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    ;               reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    MENOSMENOS      reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    MASMAS          reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    ID              reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    PRINT           reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    MULTIESCALAR    reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    LENGTH          reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    CAPITALIZAR     reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    COLINEALES      reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    [               reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    $end            reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    }               reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    ELSE            reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)


state 525

    (14) lCerrada -> IF ( cosaBooleana ) { g } ELSE . { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g } ELSE . lCerrada
    (7) lAbierta -> IF ( cosaBooleana ) { g } ELSE . lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (127) varsOps -> . MENOSMENOS varYVals
    (128) varsOps -> . MASMAS varYVals
    (129) varsOps -> . varYVals MASMAS
    (130) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (132) varAsig -> . varYVals MULEQ valoresAsig
    (133) varAsig -> . varYVals DIVEQ valoresAsig
    (134) varAsig -> . varYVals MASEQ valoresAsig
    (135) varAsig -> . varYVals MENOSEQ valoresAsig
    (136) varAsig -> . varYVals = valoresAsig
    (137) varAsig -> . ID . ID = valoresAsig
    (117) varYVals -> . ID
    (118) varYVals -> . vecVal
    (119) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (120) vecVal -> . ID m
    (121) vecVal -> . vec m
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 514
    IF              shift and go to state 374
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 512
    lAbierta                       shift and go to state 513
    loop                           shift and go to state 377
    varYVals                       shift and go to state 11
