Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> g
Rule 1     g -> linea g
Rule 2     g -> COMMENT g
Rule 3     g -> empty
Rule 4     linea -> lAbierta
Rule 5     linea -> lCerrada
Rule 6     lAbierta -> IF ( cosaBooleana ) linea
Rule 7     lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta
Rule 8     lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta
Rule 9     lAbierta -> IF ( cosaBooleana ) { g }
Rule 10    lAbierta -> loop lAbierta
Rule 11    lCerrada -> sentencia
Rule 12    com -> COMMENT com
Rule 13    com -> empty
Rule 14    lCerrada -> IF ( cosaBooleana ) { g } ELSE { g }
Rule 15    lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g }
Rule 16    lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
Rule 17    lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada
Rule 18    lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada
Rule 19    lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
Rule 20    lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
Rule 21    lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
Rule 22    lCerrada -> loop { g }
Rule 23    lCerrada -> loop lCerrada
Rule 24    lCerrada -> loop COMMENT com lCerrada
Rule 25    lCerrada -> DO { g } WHILE ( valores ) ;
Rule 26    lCerrada -> DO lCerrada WHILE ( valores ) ;
Rule 27    lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ;
Rule 28    sentencia -> varsOps ;
Rule 29    sentencia -> func ;
Rule 30    sentencia -> varAsig ;
Rule 31    sentencia -> RETURN ;
Rule 32    sentencia -> ;
Rule 33    loop -> WHILE ( valores )
Rule 34    loop -> FOR ( primParam ; valores ; tercerParam )
Rule 35    primParam -> varAsig
Rule 36    primParam -> empty
Rule 37    tercerParam -> varsOps
Rule 38    tercerParam -> varAsig
Rule 39    tercerParam -> func
Rule 40    tercerParam -> empty
Rule 41    cosaBooleana -> expBool
Rule 42    cosaBooleana -> valoresBool
Rule 43    func -> funcReturn
Rule 44    func -> funcVoid
Rule 45    funcReturn -> funcInt
Rule 46    funcReturn -> funcString
Rule 47    funcReturn -> funcBool
Rule 48    funcInt -> MULTIESCALAR ( valores , valores param )
Rule 49    funcInt -> LENGTH ( valores )
Rule 50    funcString -> CAPITALIZAR ( valores )
Rule 51    funcBool -> COLINEALES ( valores , valores )
Rule 52    funcVoid -> PRINT ( valores )
Rule 53    param -> , valores
Rule 54    param -> empty
Rule 55    empty -> <empty>
Rule 56    vec -> [ elem ]
Rule 57    elem -> valores , elem
Rule 58    elem -> valores
Rule 59    vecVal -> ID [ expresion ]
Rule 60    vecVal -> vec [ expresion ]
Rule 61    vecVal -> vecVal [ expresion ]
Rule 62    vecVal -> ID [ INT ]
Rule 63    vecVal -> vec [ INT ]
Rule 64    vecVal -> vecVal [ INT ]
Rule 65    expresion -> eMat
Rule 66    expresion -> expBool
Rule 67    expresion -> funcReturn
Rule 68    expresion -> reg
Rule 69    expresion -> FLOAT
Rule 70    expresion -> STRING
Rule 71    expresion -> BOOL
Rule 72    expresion -> varYVals
Rule 73    expresion -> varsOps
Rule 74    expresion -> vec
Rule 75    expresion -> ternario
Rule 76    expresion -> atributos
Rule 77    expresion -> RES
Rule 78    valores -> varYVals
Rule 79    valores -> varsOps
Rule 80    valores -> eMat
Rule 81    valores -> expBool
Rule 82    valores -> funcReturn
Rule 83    valores -> reg
Rule 84    valores -> INT
Rule 85    valores -> FLOAT
Rule 86    valores -> STRING
Rule 87    valores -> BOOL
Rule 88    valores -> ternario
Rule 89    valores -> atributos
Rule 90    valores -> vec
Rule 91    valores -> RES
Rule 92    atributos -> ID . valoresCampos
Rule 93    atributos -> reg . valoresCampos
Rule 94    valoresCampos -> varYVals
Rule 95    valoresCampos -> END
Rule 96    valoresCampos -> BEGIN
Rule 97    ternario -> ternarioMat
Rule 98    ternario -> ternarioBool
Rule 99    ternario -> ( ternarioMat )
Rule 100   ternario -> ( ternarioBool )
Rule 101   ternario -> ternarioVars
Rule 102   ternario -> ( ternarioVars )
Rule 103   ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars
Rule 104   ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat
Rule 105   ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars
Rule 106   ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool
Rule 107   ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars
Rule 108   ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars
Rule 109   ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat
Rule 110   ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars
Rule 111   ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool
Rule 112   ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars
Rule 113   valoresTernarioVars -> reg
Rule 114   valoresTernarioVars -> vec
Rule 115   valoresTernarioVars -> ternarioVars
Rule 116   valoresTernarioVars -> ( ternarioVars )
Rule 117   valoresTernarioVars -> atributos
Rule 118   valoresTernarioVars -> varsOps
Rule 119   valoresTernarioVars -> varYVals
Rule 120   valoresTernarioVars -> res
Rule 121   res -> RES
Rule 122   ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat
Rule 123   ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat
Rule 124   valoresTernarioMat -> INT
Rule 125   valoresTernarioMat -> FLOAT
Rule 126   valoresTernarioMat -> funcInt
Rule 127   valoresTernarioMat -> STRING
Rule 128   valoresTernarioMat -> eMat
Rule 129   valoresTernarioMat -> ternarioMat
Rule 130   valoresTernarioMat -> ( ternarioMat )
Rule 131   ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool
Rule 132   ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool
Rule 133   valoresTernarioBool -> BOOL
Rule 134   valoresTernarioBool -> funcBool
Rule 135   valoresTernarioBool -> ternarioBool
Rule 136   valoresTernarioBool -> ( ternarioBool )
Rule 137   valoresTernarioBool -> expBool
Rule 138   varYVals -> ID
Rule 139   varYVals -> vecVal
Rule 140   varYVals -> vecVal . varYVals
Rule 141   reg -> { campos }
Rule 142   campos -> ID : valores , campos
Rule 143   campos -> ID : valores
Rule 144   varsOps -> MENOSMENOS varYVals
Rule 145   varsOps -> MASMAS varYVals
Rule 146   varsOps -> varYVals MASMAS
Rule 147   varsOps -> varYVals MENOSMENOS
Rule 148   varAsig -> varYVals MULEQ valores
Rule 149   varAsig -> varYVals DIVEQ valores
Rule 150   varAsig -> varYVals MASEQ valores
Rule 151   varAsig -> varYVals MENOSEQ valores
Rule 152   varAsig -> varYVals = valores
Rule 153   varAsig -> ID . ID = valores
Rule 154   valoresMat -> INT
Rule 155   valoresMat -> FLOAT
Rule 156   valoresMat -> funcInt
Rule 157   valoresMat -> atributos
Rule 158   valoresMat -> funcString
Rule 159   valoresMat -> STRING
Rule 160   valoresMat -> varYVals
Rule 161   valoresMat -> varsOps
Rule 162   valoresMat -> ( ternarioMat )
Rule 163   eMat -> eMat + p
Rule 164   eMat -> valoresMat + p
Rule 165   eMat -> eMat + valoresMat
Rule 166   eMat -> valoresMat + valoresMat
Rule 167   eMat -> p
Rule 168   eMat -> eMat - p
Rule 169   eMat -> valoresMat - p
Rule 170   eMat -> eMat - valoresMat
Rule 171   eMat -> valoresMat - valoresMat
Rule 172   p -> p * exp
Rule 173   p -> p / exp
Rule 174   p -> p % exp
Rule 175   p -> valoresMat * exp
Rule 176   p -> valoresMat / exp
Rule 177   p -> valoresMat % exp
Rule 178   p -> p * valoresMat
Rule 179   p -> p / valoresMat
Rule 180   p -> p % valoresMat
Rule 181   p -> valoresMat * valoresMat
Rule 182   p -> valoresMat / valoresMat
Rule 183   p -> valoresMat % valoresMat
Rule 184   p -> exp
Rule 185   exp -> exp ^ iSing
Rule 186   exp -> valoresMat ^ iSing
Rule 187   exp -> exp ^ valoresMat
Rule 188   exp -> valoresMat ^ valoresMat
Rule 189   exp -> iSing
Rule 190   iSing -> - paren
Rule 191   iSing -> + paren
Rule 192   iSing -> - valoresMat
Rule 193   iSing -> + valoresMat
Rule 194   iSing -> paren
Rule 195   paren -> ( eMat )
Rule 196   paren -> ( valoresMat )
Rule 197   valoresBool -> BOOL
Rule 198   valoresBool -> funcBool
Rule 199   valoresBool -> varYVals
Rule 200   valoresBool -> varsOps
Rule 201   valoresBool -> ( ternarioBool )
Rule 202   valoresBool -> <empty>
Rule 203   expBool -> expBool OR and
Rule 204   expBool -> valoresBool OR and
Rule 205   expBool -> expBool OR valoresBool
Rule 206   expBool -> valoresBool OR valoresBool
Rule 207   expBool -> and
Rule 208   and -> and AND eq
Rule 209   and -> valoresBool AND eq
Rule 210   and -> and AND valoresBool
Rule 211   and -> valoresBool AND valoresBool
Rule 212   and -> eq
Rule 213   eq -> eq EQEQ mayor
Rule 214   eq -> eq DISTINTO mayor
Rule 215   eq -> tCompareEQ EQEQ mayor
Rule 216   eq -> tCompareEQ DISTINTO mayor
Rule 217   eq -> eq EQEQ tCompareEQ
Rule 218   eq -> eq DISTINTO tCompareEQ
Rule 219   eq -> tCompareEQ EQEQ tCompareEQ
Rule 220   eq -> tCompareEQ DISTINTO tCompareEQ
Rule 221   eq -> mayor
Rule 222   tCompareEQ -> BOOL
Rule 223   tCompareEQ -> funcBool
Rule 224   tCompareEQ -> varYVals
Rule 225   tCompareEQ -> varsOps
Rule 226   tCompareEQ -> INT
Rule 227   tCompareEQ -> FLOAT
Rule 228   tCompareEQ -> funcInt
Rule 229   tCompareEQ -> eMat
Rule 230   tCompareEQ -> ( ternarioBool )
Rule 231   tCompareEQ -> ( ternarioMat )
Rule 232   tCompare -> eMat
Rule 233   tCompare -> varsOps
Rule 234   tCompare -> varYVals
Rule 235   tCompare -> INT
Rule 236   tCompare -> funcInt
Rule 237   tCompare -> FLOAT
Rule 238   tCompare -> ( ternarioMat )
Rule 239   mayor -> tCompare > tCompare
Rule 240   mayor -> menor
Rule 241   menor -> tCompare < tCompare
Rule 242   menor -> not
Rule 243   not -> NOT not
Rule 244   not -> NOT valoresBool
Rule 245   not -> parenBool
Rule 246   parenBool -> ( expBool )

Terminals, with rules where they appear

%                    : 174 177 180 183
(                    : 6 7 8 9 14 15 16 17 18 19 20 21 25 26 27 33 34 48 49 50 51 52 99 100 102 116 130 136 162 195 196 201 230 231 238 246
)                    : 6 7 8 9 14 15 16 17 18 19 20 21 25 26 27 33 34 48 49 50 51 52 99 100 102 116 130 136 162 195 196 201 230 231 238 246
*                    : 172 175 178 181
+                    : 163 164 165 166 191 193
,                    : 48 51 53 57 142
-                    : 168 169 170 171 190 192
.                    : 92 93 140 153
/                    : 173 176 179 182
:                    : 103 104 105 106 107 108 109 110 111 112 122 123 131 132 142 143
;                    : 25 26 27 28 29 30 31 32 34 34
<                    : 241
=                    : 152 153
>                    : 239
?                    : 103 104 105 106 107 108 109 110 111 112 122 123 131 132
AND                  : 208 209 210 211
BEGIN                : 96
BOOL                 : 71 87 133 197 222
CAPITALIZAR          : 50
COLINEALES           : 51
COMMENT              : 2 12 16 19 20 21 21 24 27
DISTINTO             : 214 216 218 220
DIVEQ                : 149
DO                   : 25 26 27
ELSE                 : 7 8 14 15 16 17 18 19 20 21
END                  : 95
EQEQ                 : 213 215 217 219
FLOAT                : 69 85 125 155 227 237
FOR                  : 34
ID                   : 59 62 92 138 142 143 153 153
IF                   : 6 7 8 9 14 15 16 17 18 19 20 21
INT                  : 62 63 64 84 124 154 226 235
LENGTH               : 49
MASEQ                : 150
MASMAS               : 145 146
MENOSEQ              : 151
MENOSMENOS           : 144 147
MULEQ                : 148
MULTIESCALAR         : 48
NOT                  : 243 244
OR                   : 203 204 205 206
PRINT                : 52
RES                  : 77 91 121
RETURN               : 31
STRING               : 70 86 127 159
WHILE                : 25 26 27 33
[                    : 56 59 60 61 62 63 64
]                    : 56 59 60 61 62 63 64
^                    : 185 186 187 188
error                : 
{                    : 7 9 14 14 15 16 17 22 25 141
}                    : 7 9 14 14 15 16 17 22 25 141

Nonterminals, with rules where they appear

and                  : 203 204 207 208 210
atributos            : 76 89 117 157
campos               : 141 142
com                  : 12 16 19 20 21 21 24 27
cosaBooleana         : 6 7 8 9 14 15 16 17 18 19 20 21
eMat                 : 65 80 128 163 165 168 170 195 229 232
elem                 : 56 57
empty                : 3 13 36 40 54
eq                   : 208 209 212 213 214 217 218
exp                  : 172 173 174 175 176 177 184 185 187
expBool              : 41 66 81 108 109 110 111 112 123 132 137 203 205 246
expresion            : 59 60 61
func                 : 29 39
funcBool             : 47 134 198 223
funcInt              : 45 126 156 228 236
funcReturn           : 43 67 82
funcString           : 46 158
funcVoid             : 44
g                    : 1 2 7 9 14 14 15 16 17 22 25 0
iSing                : 185 186 189
lAbierta             : 4 7 8 10
lCerrada             : 5 8 15 16 17 18 18 19 19 20 20 21 21 23 24 26 27
linea                : 1 6
loop                 : 10 22 23 24
mayor                : 213 214 215 216 221
menor                : 240
not                  : 242 243
p                    : 163 164 167 168 169 172 173 174 178 179 180
param                : 48
paren                : 190 191 194
parenBool            : 245
primParam            : 34
reg                  : 68 83 93 113
res                  : 120
sentencia            : 11
tCompare             : 239 239 241 241
tCompareEQ           : 215 216 217 218 219 219 220 220
tercerParam          : 34
ternario             : 75 88
ternarioBool         : 98 100 135 136 201 230
ternarioMat          : 97 99 129 130 162 231 238
ternarioVars         : 101 102 115 116
valores              : 25 26 27 33 34 48 48 49 50 51 51 52 53 57 58 142 143 148 149 150 151 152 153
valoresBool          : 42 103 104 105 106 107 122 131 204 205 206 206 209 210 211 211 244
valoresCampos        : 92 93
valoresMat           : 164 165 166 166 169 170 171 171 175 176 177 178 179 180 181 181 182 182 183 183 186 187 188 188 192 193 196
valoresTernarioBool  : 106 107 111 112 131 131 132 132
valoresTernarioMat   : 104 105 109 110 122 122 123 123
valoresTernarioVars  : 103 103 104 105 106 107 108 108 109 110 111 112
varAsig              : 30 35 38
varYVals             : 72 78 94 119 140 144 145 146 147 148 149 150 151 152 160 199 224 234
varsOps              : 28 37 73 79 118 161 200 225 233
vec                  : 60 63 74 90 114
vecVal               : 61 64 139 140

Parsing method: LALR

state 0

    (0) S' -> . g
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (55) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (148) varAsig -> . varYVals MULEQ valores
    (149) varAsig -> . varYVals DIVEQ valores
    (150) varAsig -> . varYVals MASEQ valores
    (151) varAsig -> . varYVals MENOSEQ valores
    (152) varAsig -> . varYVals = valores
    (153) varAsig -> . ID . ID = valores
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    $end            reduce using rule 55 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 13
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 24
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 30
    loop                           shift and go to state 32
    varYVals                       shift and go to state 11
    linea                          shift and go to state 34

state 1

    (25) lCerrada -> DO . { g } WHILE ( valores ) ;
    (26) lCerrada -> DO . lCerrada WHILE ( valores ) ;
    (27) lCerrada -> DO . COMMENT com lCerrada WHILE ( valores ) ;
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (148) varAsig -> . varYVals MULEQ valores
    (149) varAsig -> . varYVals DIVEQ valores
    (150) varAsig -> . varYVals MASEQ valores
    (151) varAsig -> . varYVals MENOSEQ valores
    (152) varAsig -> . varYVals = valores
    (153) varAsig -> . ID . ID = valores
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 38
    COMMENT         shift and go to state 35
    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 37
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 39

state 2

    (31) sentencia -> RETURN . ;

    ;               shift and go to state 40


state 3

    (47) funcReturn -> funcBool .

    ;               reduce using rule 47 (funcReturn -> funcBool .)
    )               reduce using rule 47 (funcReturn -> funcBool .)


state 4

    (51) funcBool -> COLINEALES . ( valores , valores )

    (               shift and go to state 41


state 5

    (45) funcReturn -> funcInt .

    ;               reduce using rule 45 (funcReturn -> funcInt .)
    )               reduce using rule 45 (funcReturn -> funcInt .)


state 6

    (33) loop -> WHILE . ( valores )

    (               shift and go to state 42


state 7

    (52) funcVoid -> PRINT . ( valores )

    (               shift and go to state 43


state 8

    (139) varYVals -> vecVal .
    (140) varYVals -> vecVal . . varYVals
    (61) vecVal -> vecVal . [ expresion ]
    (64) vecVal -> vecVal . [ INT ]

    MASMAS          reduce using rule 139 (varYVals -> vecVal .)
    MENOSMENOS      reduce using rule 139 (varYVals -> vecVal .)
    )               reduce using rule 139 (varYVals -> vecVal .)
    +               reduce using rule 139 (varYVals -> vecVal .)
    -               reduce using rule 139 (varYVals -> vecVal .)
    *               reduce using rule 139 (varYVals -> vecVal .)
    /               reduce using rule 139 (varYVals -> vecVal .)
    %               reduce using rule 139 (varYVals -> vecVal .)
    ^               reduce using rule 139 (varYVals -> vecVal .)
    ?               reduce using rule 139 (varYVals -> vecVal .)
    OR              reduce using rule 139 (varYVals -> vecVal .)
    AND             reduce using rule 139 (varYVals -> vecVal .)
    EQEQ            reduce using rule 139 (varYVals -> vecVal .)
    DISTINTO        reduce using rule 139 (varYVals -> vecVal .)
    >               reduce using rule 139 (varYVals -> vecVal .)
    <               reduce using rule 139 (varYVals -> vecVal .)
    ,               reduce using rule 139 (varYVals -> vecVal .)
    ]               reduce using rule 139 (varYVals -> vecVal .)
    ;               reduce using rule 139 (varYVals -> vecVal .)
    :               reduce using rule 139 (varYVals -> vecVal .)
    }               reduce using rule 139 (varYVals -> vecVal .)
    MULEQ           reduce using rule 139 (varYVals -> vecVal .)
    DIVEQ           reduce using rule 139 (varYVals -> vecVal .)
    MASEQ           reduce using rule 139 (varYVals -> vecVal .)
    MENOSEQ         reduce using rule 139 (varYVals -> vecVal .)
    =               reduce using rule 139 (varYVals -> vecVal .)
    .               shift and go to state 44
    [               shift and go to state 45


state 9

    (2) g -> COMMENT . g
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (55) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (148) varAsig -> . varYVals MULEQ valores
    (149) varAsig -> . varYVals DIVEQ valores
    (150) varAsig -> . varYVals MASEQ valores
    (151) varAsig -> . varYVals MENOSEQ valores
    (152) varAsig -> . varYVals = valores
    (153) varAsig -> . ID . ID = valores
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    $end            reduce using rule 55 (empty -> .)
    }               reduce using rule 55 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 13
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 46
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 30
    loop                           shift and go to state 32
    varYVals                       shift and go to state 11
    linea                          shift and go to state 34

state 10

    (11) lCerrada -> sentencia .

    ELSE            reduce using rule 11 (lCerrada -> sentencia .)
    COMMENT         reduce using rule 11 (lCerrada -> sentencia .)
    IF              reduce using rule 11 (lCerrada -> sentencia .)
    DO              reduce using rule 11 (lCerrada -> sentencia .)
    WHILE           reduce using rule 11 (lCerrada -> sentencia .)
    FOR             reduce using rule 11 (lCerrada -> sentencia .)
    RETURN          reduce using rule 11 (lCerrada -> sentencia .)
    ;               reduce using rule 11 (lCerrada -> sentencia .)
    MENOSMENOS      reduce using rule 11 (lCerrada -> sentencia .)
    MASMAS          reduce using rule 11 (lCerrada -> sentencia .)
    ID              reduce using rule 11 (lCerrada -> sentencia .)
    PRINT           reduce using rule 11 (lCerrada -> sentencia .)
    MULTIESCALAR    reduce using rule 11 (lCerrada -> sentencia .)
    LENGTH          reduce using rule 11 (lCerrada -> sentencia .)
    CAPITALIZAR     reduce using rule 11 (lCerrada -> sentencia .)
    COLINEALES      reduce using rule 11 (lCerrada -> sentencia .)
    [               reduce using rule 11 (lCerrada -> sentencia .)
    $end            reduce using rule 11 (lCerrada -> sentencia .)
    }               reduce using rule 11 (lCerrada -> sentencia .)


state 11

    (146) varsOps -> varYVals . MASMAS
    (147) varsOps -> varYVals . MENOSMENOS
    (148) varAsig -> varYVals . MULEQ valores
    (149) varAsig -> varYVals . DIVEQ valores
    (150) varAsig -> varYVals . MASEQ valores
    (151) varAsig -> varYVals . MENOSEQ valores
    (152) varAsig -> varYVals . = valores

    MASMAS          shift and go to state 51
    MENOSMENOS      shift and go to state 48
    MULEQ           shift and go to state 52
    DIVEQ           shift and go to state 53
    MASEQ           shift and go to state 49
    MENOSEQ         shift and go to state 47
    =               shift and go to state 50


state 12

    (32) sentencia -> ; .

    ELSE            reduce using rule 32 (sentencia -> ; .)
    COMMENT         reduce using rule 32 (sentencia -> ; .)
    IF              reduce using rule 32 (sentencia -> ; .)
    DO              reduce using rule 32 (sentencia -> ; .)
    WHILE           reduce using rule 32 (sentencia -> ; .)
    FOR             reduce using rule 32 (sentencia -> ; .)
    RETURN          reduce using rule 32 (sentencia -> ; .)
    ;               reduce using rule 32 (sentencia -> ; .)
    MENOSMENOS      reduce using rule 32 (sentencia -> ; .)
    MASMAS          reduce using rule 32 (sentencia -> ; .)
    ID              reduce using rule 32 (sentencia -> ; .)
    PRINT           reduce using rule 32 (sentencia -> ; .)
    MULTIESCALAR    reduce using rule 32 (sentencia -> ; .)
    LENGTH          reduce using rule 32 (sentencia -> ; .)
    CAPITALIZAR     reduce using rule 32 (sentencia -> ; .)
    COLINEALES      reduce using rule 32 (sentencia -> ; .)
    [               reduce using rule 32 (sentencia -> ; .)
    $end            reduce using rule 32 (sentencia -> ; .)
    }               reduce using rule 32 (sentencia -> ; .)


state 13

    (3) g -> empty .

    }               reduce using rule 3 (g -> empty .)
    $end            reduce using rule 3 (g -> empty .)


state 14

    (28) sentencia -> varsOps . ;

    ;               shift and go to state 54


state 15

    (44) func -> funcVoid .

    ;               reduce using rule 44 (func -> funcVoid .)
    )               reduce using rule 44 (func -> funcVoid .)


state 16

    (144) varsOps -> MENOSMENOS . varYVals
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (56) vec -> . [ elem ]

    ID              shift and go to state 56
    [               shift and go to state 20

    varYVals                       shift and go to state 55
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33

state 17

    (34) loop -> FOR . ( primParam ; valores ; tercerParam )

    (               shift and go to state 57


state 18

    (49) funcInt -> LENGTH . ( valores )

    (               shift and go to state 58


state 19

    (29) sentencia -> func . ;

    ;               shift and go to state 59


state 20

    (56) vec -> [ . elem ]
    (57) elem -> . valores , elem
    (58) elem -> . valores
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (141) reg -> . { campos }
    (97) ternario -> . ternarioMat
    (98) ternario -> . ternarioBool
    (99) ternario -> . ( ternarioMat )
    (100) ternario -> . ( ternarioBool )
    (101) ternario -> . ternarioVars
    (102) ternario -> . ( ternarioVars )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 90
    FLOAT           shift and go to state 92
    STRING          shift and go to state 70
    BOOL            shift and go to state 95
    RES             shift and go to state 63
    ID              shift and go to state 88
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 99
    (               shift and go to state 74
    [               shift and go to state 20
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    ?               reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    valores                        shift and go to state 65
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 71
    eMat                           shift and go to state 72
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 77
    vec                            shift and go to state 78
    paren                          shift and go to state 86
    reg                            shift and go to state 80
    expBool                        shift and go to state 81
    ternarioBool                   shift and go to state 82
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 89
    funcReturn                     shift and go to state 91
    elem                           shift and go to state 93
    p                              shift and go to state 94
    varsOps                        shift and go to state 96
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 67
    varYVals                       shift and go to state 100
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 101

state 21

    (153) varAsig -> ID . . ID = valores
    (138) varYVals -> ID .
    (59) vecVal -> ID . [ expresion ]
    (62) vecVal -> ID . [ INT ]

    .               shift and go to state 102
    MASMAS          reduce using rule 138 (varYVals -> ID .)
    MENOSMENOS      reduce using rule 138 (varYVals -> ID .)
    MULEQ           reduce using rule 138 (varYVals -> ID .)
    DIVEQ           reduce using rule 138 (varYVals -> ID .)
    MASEQ           reduce using rule 138 (varYVals -> ID .)
    MENOSEQ         reduce using rule 138 (varYVals -> ID .)
    =               reduce using rule 138 (varYVals -> ID .)
    [               shift and go to state 103


state 22

    (6) lAbierta -> IF . ( cosaBooleana ) linea
    (7) lAbierta -> IF . ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> IF . ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> IF . ( cosaBooleana ) { g }
    (14) lCerrada -> IF . ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF . ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada

    (               shift and go to state 104


state 23

    (30) sentencia -> varAsig . ;

    ;               shift and go to state 105


state 24

    (0) S' -> g .



state 25

    (46) funcReturn -> funcString .

    ;               reduce using rule 46 (funcReturn -> funcString .)
    )               reduce using rule 46 (funcReturn -> funcString .)


state 26

    (43) func -> funcReturn .

    ;               reduce using rule 43 (func -> funcReturn .)
    )               reduce using rule 43 (func -> funcReturn .)


state 27

    (50) funcString -> CAPITALIZAR . ( valores )

    (               shift and go to state 106


state 28

    (5) linea -> lCerrada .

    COMMENT         reduce using rule 5 (linea -> lCerrada .)
    IF              reduce using rule 5 (linea -> lCerrada .)
    DO              reduce using rule 5 (linea -> lCerrada .)
    WHILE           reduce using rule 5 (linea -> lCerrada .)
    FOR             reduce using rule 5 (linea -> lCerrada .)
    RETURN          reduce using rule 5 (linea -> lCerrada .)
    ;               reduce using rule 5 (linea -> lCerrada .)
    MENOSMENOS      reduce using rule 5 (linea -> lCerrada .)
    MASMAS          reduce using rule 5 (linea -> lCerrada .)
    ID              reduce using rule 5 (linea -> lCerrada .)
    PRINT           reduce using rule 5 (linea -> lCerrada .)
    MULTIESCALAR    reduce using rule 5 (linea -> lCerrada .)
    LENGTH          reduce using rule 5 (linea -> lCerrada .)
    CAPITALIZAR     reduce using rule 5 (linea -> lCerrada .)
    COLINEALES      reduce using rule 5 (linea -> lCerrada .)
    [               reduce using rule 5 (linea -> lCerrada .)
    $end            reduce using rule 5 (linea -> lCerrada .)
    }               reduce using rule 5 (linea -> lCerrada .)


state 29

    (48) funcInt -> MULTIESCALAR . ( valores , valores param )

    (               shift and go to state 107


state 30

    (4) linea -> lAbierta .

    COMMENT         reduce using rule 4 (linea -> lAbierta .)
    IF              reduce using rule 4 (linea -> lAbierta .)
    DO              reduce using rule 4 (linea -> lAbierta .)
    WHILE           reduce using rule 4 (linea -> lAbierta .)
    FOR             reduce using rule 4 (linea -> lAbierta .)
    RETURN          reduce using rule 4 (linea -> lAbierta .)
    ;               reduce using rule 4 (linea -> lAbierta .)
    MENOSMENOS      reduce using rule 4 (linea -> lAbierta .)
    MASMAS          reduce using rule 4 (linea -> lAbierta .)
    ID              reduce using rule 4 (linea -> lAbierta .)
    PRINT           reduce using rule 4 (linea -> lAbierta .)
    MULTIESCALAR    reduce using rule 4 (linea -> lAbierta .)
    LENGTH          reduce using rule 4 (linea -> lAbierta .)
    CAPITALIZAR     reduce using rule 4 (linea -> lAbierta .)
    COLINEALES      reduce using rule 4 (linea -> lAbierta .)
    [               reduce using rule 4 (linea -> lAbierta .)
    $end            reduce using rule 4 (linea -> lAbierta .)
    }               reduce using rule 4 (linea -> lAbierta .)


state 31

    (145) varsOps -> MASMAS . varYVals
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (56) vec -> . [ elem ]

    ID              shift and go to state 56
    [               shift and go to state 20

    varYVals                       shift and go to state 108
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33

state 32

    (10) lAbierta -> loop . lAbierta
    (22) lCerrada -> loop . { g }
    (23) lCerrada -> loop . lCerrada
    (24) lCerrada -> loop . COMMENT com lCerrada
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (148) varAsig -> . varYVals MULEQ valores
    (149) varAsig -> . varYVals DIVEQ valores
    (150) varAsig -> . varYVals MASEQ valores
    (151) varAsig -> . varYVals MENOSEQ valores
    (152) varAsig -> . varYVals = valores
    (153) varAsig -> . ID . ID = valores
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 112
    COMMENT         shift and go to state 109
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    loop                           shift and go to state 32
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 110
    lAbierta                       shift and go to state 111
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11

state 33

    (60) vecVal -> vec . [ expresion ]
    (63) vecVal -> vec . [ INT ]

    [               shift and go to state 113


state 34

    (1) g -> linea . g
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (55) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (148) varAsig -> . varYVals MULEQ valores
    (149) varAsig -> . varYVals DIVEQ valores
    (150) varAsig -> . varYVals MASEQ valores
    (151) varAsig -> . varYVals MENOSEQ valores
    (152) varAsig -> . varYVals = valores
    (153) varAsig -> . ID . ID = valores
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    $end            reduce using rule 55 (empty -> .)
    }               reduce using rule 55 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 13
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 114
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 30
    loop                           shift and go to state 32
    varYVals                       shift and go to state 11
    linea                          shift and go to state 34

state 35

    (27) lCerrada -> DO COMMENT . com lCerrada WHILE ( valores ) ;
    (12) com -> . COMMENT com
    (13) com -> . empty
    (55) empty -> .

    COMMENT         shift and go to state 115
    IF              reduce using rule 55 (empty -> .)
    DO              reduce using rule 55 (empty -> .)
    RETURN          reduce using rule 55 (empty -> .)
    ;               reduce using rule 55 (empty -> .)
    WHILE           reduce using rule 55 (empty -> .)
    FOR             reduce using rule 55 (empty -> .)
    MENOSMENOS      reduce using rule 55 (empty -> .)
    MASMAS          reduce using rule 55 (empty -> .)
    ID              reduce using rule 55 (empty -> .)
    PRINT           reduce using rule 55 (empty -> .)
    MULTIESCALAR    reduce using rule 55 (empty -> .)
    LENGTH          reduce using rule 55 (empty -> .)
    CAPITALIZAR     reduce using rule 55 (empty -> .)
    COLINEALES      reduce using rule 55 (empty -> .)
    [               reduce using rule 55 (empty -> .)

    com                            shift and go to state 116
    empty                          shift and go to state 117

state 36

    (14) lCerrada -> IF . ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF . ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada

    (               shift and go to state 118


state 37

    (26) lCerrada -> DO lCerrada . WHILE ( valores ) ;

    WHILE           shift and go to state 119


state 38

    (25) lCerrada -> DO { . g } WHILE ( valores ) ;
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (55) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (148) varAsig -> . varYVals MULEQ valores
    (149) varAsig -> . varYVals DIVEQ valores
    (150) varAsig -> . varYVals MASEQ valores
    (151) varAsig -> . varYVals MENOSEQ valores
    (152) varAsig -> . varYVals = valores
    (153) varAsig -> . ID . ID = valores
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 55 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    linea                          shift and go to state 34
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 13
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 120
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 30
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 32

state 39

    (22) lCerrada -> loop . { g }
    (23) lCerrada -> loop . lCerrada
    (24) lCerrada -> loop . COMMENT com lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (148) varAsig -> . varYVals MULEQ valores
    (149) varAsig -> . varYVals DIVEQ valores
    (150) varAsig -> . varYVals MASEQ valores
    (151) varAsig -> . varYVals MENOSEQ valores
    (152) varAsig -> . varYVals = valores
    (153) varAsig -> . ID . ID = valores
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 112
    COMMENT         shift and go to state 109
    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 110
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 39

state 40

    (31) sentencia -> RETURN ; .

    ELSE            reduce using rule 31 (sentencia -> RETURN ; .)
    COMMENT         reduce using rule 31 (sentencia -> RETURN ; .)
    IF              reduce using rule 31 (sentencia -> RETURN ; .)
    DO              reduce using rule 31 (sentencia -> RETURN ; .)
    WHILE           reduce using rule 31 (sentencia -> RETURN ; .)
    FOR             reduce using rule 31 (sentencia -> RETURN ; .)
    RETURN          reduce using rule 31 (sentencia -> RETURN ; .)
    ;               reduce using rule 31 (sentencia -> RETURN ; .)
    MENOSMENOS      reduce using rule 31 (sentencia -> RETURN ; .)
    MASMAS          reduce using rule 31 (sentencia -> RETURN ; .)
    ID              reduce using rule 31 (sentencia -> RETURN ; .)
    PRINT           reduce using rule 31 (sentencia -> RETURN ; .)
    MULTIESCALAR    reduce using rule 31 (sentencia -> RETURN ; .)
    LENGTH          reduce using rule 31 (sentencia -> RETURN ; .)
    CAPITALIZAR     reduce using rule 31 (sentencia -> RETURN ; .)
    COLINEALES      reduce using rule 31 (sentencia -> RETURN ; .)
    [               reduce using rule 31 (sentencia -> RETURN ; .)
    $end            reduce using rule 31 (sentencia -> RETURN ; .)
    }               reduce using rule 31 (sentencia -> RETURN ; .)


state 41

    (51) funcBool -> COLINEALES ( . valores , valores )
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (141) reg -> . { campos }
    (97) ternario -> . ternarioMat
    (98) ternario -> . ternarioBool
    (99) ternario -> . ( ternarioMat )
    (100) ternario -> . ( ternarioBool )
    (101) ternario -> . ternarioVars
    (102) ternario -> . ( ternarioVars )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 90
    FLOAT           shift and go to state 92
    STRING          shift and go to state 70
    BOOL            shift and go to state 95
    RES             shift and go to state 63
    ID              shift and go to state 88
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 99
    (               shift and go to state 74
    [               shift and go to state 20
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    ?               reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 71
    eMat                           shift and go to state 72
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 77
    vec                            shift and go to state 78
    paren                          shift and go to state 86
    reg                            shift and go to state 80
    expBool                        shift and go to state 81
    ternarioBool                   shift and go to state 82
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 89
    funcReturn                     shift and go to state 91
    valores                        shift and go to state 121
    p                              shift and go to state 94
    varsOps                        shift and go to state 96
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 67
    varYVals                       shift and go to state 100
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 101

state 42

    (33) loop -> WHILE ( . valores )
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (141) reg -> . { campos }
    (97) ternario -> . ternarioMat
    (98) ternario -> . ternarioBool
    (99) ternario -> . ( ternarioMat )
    (100) ternario -> . ( ternarioBool )
    (101) ternario -> . ternarioVars
    (102) ternario -> . ( ternarioVars )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 90
    FLOAT           shift and go to state 92
    STRING          shift and go to state 70
    BOOL            shift and go to state 95
    RES             shift and go to state 63
    ID              shift and go to state 88
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 99
    (               shift and go to state 74
    [               shift and go to state 20
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    ?               reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 71
    eMat                           shift and go to state 72
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 77
    vec                            shift and go to state 78
    paren                          shift and go to state 86
    reg                            shift and go to state 80
    expBool                        shift and go to state 81
    ternarioBool                   shift and go to state 82
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 89
    funcReturn                     shift and go to state 91
    valores                        shift and go to state 122
    p                              shift and go to state 94
    varsOps                        shift and go to state 96
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 67
    varYVals                       shift and go to state 100
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 101

state 43

    (52) funcVoid -> PRINT ( . valores )
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (141) reg -> . { campos }
    (97) ternario -> . ternarioMat
    (98) ternario -> . ternarioBool
    (99) ternario -> . ( ternarioMat )
    (100) ternario -> . ( ternarioBool )
    (101) ternario -> . ternarioVars
    (102) ternario -> . ( ternarioVars )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 90
    FLOAT           shift and go to state 92
    STRING          shift and go to state 70
    BOOL            shift and go to state 95
    RES             shift and go to state 63
    ID              shift and go to state 88
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 99
    (               shift and go to state 74
    [               shift and go to state 20
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    ?               reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 71
    eMat                           shift and go to state 72
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 77
    vec                            shift and go to state 78
    paren                          shift and go to state 86
    reg                            shift and go to state 80
    expBool                        shift and go to state 81
    ternarioBool                   shift and go to state 82
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 89
    funcReturn                     shift and go to state 91
    valores                        shift and go to state 123
    p                              shift and go to state 94
    varsOps                        shift and go to state 96
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 67
    varYVals                       shift and go to state 100
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 101

state 44

    (140) varYVals -> vecVal . . varYVals
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (56) vec -> . [ elem ]

    ID              shift and go to state 56
    [               shift and go to state 20

    varYVals                       shift and go to state 124
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33

state 45

    (61) vecVal -> vecVal [ . expresion ]
    (64) vecVal -> vecVal [ . INT ]
    (65) expresion -> . eMat
    (66) expresion -> . expBool
    (67) expresion -> . funcReturn
    (68) expresion -> . reg
    (69) expresion -> . FLOAT
    (70) expresion -> . STRING
    (71) expresion -> . BOOL
    (72) expresion -> . varYVals
    (73) expresion -> . varsOps
    (74) expresion -> . vec
    (75) expresion -> . ternario
    (76) expresion -> . atributos
    (77) expresion -> . RES
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (141) reg -> . { campos }
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (56) vec -> . [ elem ]
    (97) ternario -> . ternarioMat
    (98) ternario -> . ternarioBool
    (99) ternario -> . ( ternarioMat )
    (100) ternario -> . ( ternarioBool )
    (101) ternario -> . ternarioVars
    (102) ternario -> . ( ternarioVars )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 133
    FLOAT           shift and go to state 135
    STRING          shift and go to state 127
    BOOL            shift and go to state 136
    RES             shift and go to state 126
    {               shift and go to state 99
    ID              shift and go to state 88
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 74
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    ?               reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    ternario                       shift and go to state 125
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 71
    eMat                           shift and go to state 128
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 77
    vec                            shift and go to state 129
    paren                          shift and go to state 86
    reg                            shift and go to state 130
    expBool                        shift and go to state 131
    ternarioBool                   shift and go to state 82
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    expresion                      shift and go to state 132
    funcString                     shift and go to state 89
    funcReturn                     shift and go to state 134
    p                              shift and go to state 94
    varsOps                        shift and go to state 137
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 67
    varYVals                       shift and go to state 138
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 139

state 46

    (2) g -> COMMENT g .

    }               reduce using rule 2 (g -> COMMENT g .)
    $end            reduce using rule 2 (g -> COMMENT g .)


state 47

    (151) varAsig -> varYVals MENOSEQ . valores
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (141) reg -> . { campos }
    (97) ternario -> . ternarioMat
    (98) ternario -> . ternarioBool
    (99) ternario -> . ( ternarioMat )
    (100) ternario -> . ( ternarioBool )
    (101) ternario -> . ternarioVars
    (102) ternario -> . ( ternarioVars )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 90
    FLOAT           shift and go to state 92
    STRING          shift and go to state 70
    BOOL            shift and go to state 95
    RES             shift and go to state 63
    ID              shift and go to state 88
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 99
    (               shift and go to state 74
    [               shift and go to state 20
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    ?               reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 71
    eMat                           shift and go to state 72
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 77
    vec                            shift and go to state 78
    paren                          shift and go to state 86
    reg                            shift and go to state 80
    expBool                        shift and go to state 81
    ternarioBool                   shift and go to state 82
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 89
    funcReturn                     shift and go to state 91
    valores                        shift and go to state 140
    p                              shift and go to state 94
    varsOps                        shift and go to state 96
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 67
    varYVals                       shift and go to state 100
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 101

state 48

    (147) varsOps -> varYVals MENOSMENOS .

    ;               reduce using rule 147 (varsOps -> varYVals MENOSMENOS .)
    )               reduce using rule 147 (varsOps -> varYVals MENOSMENOS .)
    +               reduce using rule 147 (varsOps -> varYVals MENOSMENOS .)
    -               reduce using rule 147 (varsOps -> varYVals MENOSMENOS .)
    *               reduce using rule 147 (varsOps -> varYVals MENOSMENOS .)
    /               reduce using rule 147 (varsOps -> varYVals MENOSMENOS .)
    %               reduce using rule 147 (varsOps -> varYVals MENOSMENOS .)
    ^               reduce using rule 147 (varsOps -> varYVals MENOSMENOS .)
    ?               reduce using rule 147 (varsOps -> varYVals MENOSMENOS .)
    OR              reduce using rule 147 (varsOps -> varYVals MENOSMENOS .)
    AND             reduce using rule 147 (varsOps -> varYVals MENOSMENOS .)
    EQEQ            reduce using rule 147 (varsOps -> varYVals MENOSMENOS .)
    DISTINTO        reduce using rule 147 (varsOps -> varYVals MENOSMENOS .)
    >               reduce using rule 147 (varsOps -> varYVals MENOSMENOS .)
    <               reduce using rule 147 (varsOps -> varYVals MENOSMENOS .)
    ,               reduce using rule 147 (varsOps -> varYVals MENOSMENOS .)
    ]               reduce using rule 147 (varsOps -> varYVals MENOSMENOS .)
    :               reduce using rule 147 (varsOps -> varYVals MENOSMENOS .)
    }               reduce using rule 147 (varsOps -> varYVals MENOSMENOS .)


state 49

    (150) varAsig -> varYVals MASEQ . valores
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (141) reg -> . { campos }
    (97) ternario -> . ternarioMat
    (98) ternario -> . ternarioBool
    (99) ternario -> . ( ternarioMat )
    (100) ternario -> . ( ternarioBool )
    (101) ternario -> . ternarioVars
    (102) ternario -> . ( ternarioVars )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 90
    FLOAT           shift and go to state 92
    STRING          shift and go to state 70
    BOOL            shift and go to state 95
    RES             shift and go to state 63
    ID              shift and go to state 88
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 99
    (               shift and go to state 74
    [               shift and go to state 20
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    ?               reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 71
    eMat                           shift and go to state 72
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 77
    vec                            shift and go to state 78
    paren                          shift and go to state 86
    reg                            shift and go to state 80
    expBool                        shift and go to state 81
    ternarioBool                   shift and go to state 82
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 89
    funcReturn                     shift and go to state 91
    valores                        shift and go to state 141
    p                              shift and go to state 94
    varsOps                        shift and go to state 96
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 67
    varYVals                       shift and go to state 100
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 101

state 50

    (152) varAsig -> varYVals = . valores
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (141) reg -> . { campos }
    (97) ternario -> . ternarioMat
    (98) ternario -> . ternarioBool
    (99) ternario -> . ( ternarioMat )
    (100) ternario -> . ( ternarioBool )
    (101) ternario -> . ternarioVars
    (102) ternario -> . ( ternarioVars )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 90
    FLOAT           shift and go to state 92
    STRING          shift and go to state 70
    BOOL            shift and go to state 95
    RES             shift and go to state 63
    ID              shift and go to state 88
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 99
    (               shift and go to state 74
    [               shift and go to state 20
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    ?               reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 71
    eMat                           shift and go to state 72
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 77
    vec                            shift and go to state 78
    paren                          shift and go to state 86
    reg                            shift and go to state 80
    expBool                        shift and go to state 81
    ternarioBool                   shift and go to state 82
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 89
    funcReturn                     shift and go to state 91
    valores                        shift and go to state 142
    p                              shift and go to state 94
    varsOps                        shift and go to state 96
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 67
    varYVals                       shift and go to state 100
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 101

state 51

    (146) varsOps -> varYVals MASMAS .

    ;               reduce using rule 146 (varsOps -> varYVals MASMAS .)
    )               reduce using rule 146 (varsOps -> varYVals MASMAS .)
    +               reduce using rule 146 (varsOps -> varYVals MASMAS .)
    -               reduce using rule 146 (varsOps -> varYVals MASMAS .)
    *               reduce using rule 146 (varsOps -> varYVals MASMAS .)
    /               reduce using rule 146 (varsOps -> varYVals MASMAS .)
    %               reduce using rule 146 (varsOps -> varYVals MASMAS .)
    ^               reduce using rule 146 (varsOps -> varYVals MASMAS .)
    ?               reduce using rule 146 (varsOps -> varYVals MASMAS .)
    OR              reduce using rule 146 (varsOps -> varYVals MASMAS .)
    AND             reduce using rule 146 (varsOps -> varYVals MASMAS .)
    EQEQ            reduce using rule 146 (varsOps -> varYVals MASMAS .)
    DISTINTO        reduce using rule 146 (varsOps -> varYVals MASMAS .)
    >               reduce using rule 146 (varsOps -> varYVals MASMAS .)
    <               reduce using rule 146 (varsOps -> varYVals MASMAS .)
    ,               reduce using rule 146 (varsOps -> varYVals MASMAS .)
    ]               reduce using rule 146 (varsOps -> varYVals MASMAS .)
    :               reduce using rule 146 (varsOps -> varYVals MASMAS .)
    }               reduce using rule 146 (varsOps -> varYVals MASMAS .)


state 52

    (148) varAsig -> varYVals MULEQ . valores
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (141) reg -> . { campos }
    (97) ternario -> . ternarioMat
    (98) ternario -> . ternarioBool
    (99) ternario -> . ( ternarioMat )
    (100) ternario -> . ( ternarioBool )
    (101) ternario -> . ternarioVars
    (102) ternario -> . ( ternarioVars )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 90
    FLOAT           shift and go to state 92
    STRING          shift and go to state 70
    BOOL            shift and go to state 95
    RES             shift and go to state 63
    ID              shift and go to state 88
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 99
    (               shift and go to state 74
    [               shift and go to state 20
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    ?               reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 71
    eMat                           shift and go to state 72
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 77
    vec                            shift and go to state 78
    paren                          shift and go to state 86
    reg                            shift and go to state 80
    expBool                        shift and go to state 81
    ternarioBool                   shift and go to state 82
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 89
    funcReturn                     shift and go to state 91
    valores                        shift and go to state 143
    p                              shift and go to state 94
    varsOps                        shift and go to state 96
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 67
    varYVals                       shift and go to state 100
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 101

state 53

    (149) varAsig -> varYVals DIVEQ . valores
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (141) reg -> . { campos }
    (97) ternario -> . ternarioMat
    (98) ternario -> . ternarioBool
    (99) ternario -> . ( ternarioMat )
    (100) ternario -> . ( ternarioBool )
    (101) ternario -> . ternarioVars
    (102) ternario -> . ( ternarioVars )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 90
    FLOAT           shift and go to state 92
    STRING          shift and go to state 70
    BOOL            shift and go to state 95
    RES             shift and go to state 63
    ID              shift and go to state 88
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 99
    (               shift and go to state 74
    [               shift and go to state 20
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    ?               reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 71
    eMat                           shift and go to state 72
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 77
    vec                            shift and go to state 78
    paren                          shift and go to state 86
    reg                            shift and go to state 80
    expBool                        shift and go to state 81
    ternarioBool                   shift and go to state 82
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 89
    funcReturn                     shift and go to state 91
    valores                        shift and go to state 144
    p                              shift and go to state 94
    varsOps                        shift and go to state 96
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 67
    varYVals                       shift and go to state 100
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 101

state 54

    (28) sentencia -> varsOps ; .

    ELSE            reduce using rule 28 (sentencia -> varsOps ; .)
    COMMENT         reduce using rule 28 (sentencia -> varsOps ; .)
    IF              reduce using rule 28 (sentencia -> varsOps ; .)
    DO              reduce using rule 28 (sentencia -> varsOps ; .)
    WHILE           reduce using rule 28 (sentencia -> varsOps ; .)
    FOR             reduce using rule 28 (sentencia -> varsOps ; .)
    RETURN          reduce using rule 28 (sentencia -> varsOps ; .)
    ;               reduce using rule 28 (sentencia -> varsOps ; .)
    MENOSMENOS      reduce using rule 28 (sentencia -> varsOps ; .)
    MASMAS          reduce using rule 28 (sentencia -> varsOps ; .)
    ID              reduce using rule 28 (sentencia -> varsOps ; .)
    PRINT           reduce using rule 28 (sentencia -> varsOps ; .)
    MULTIESCALAR    reduce using rule 28 (sentencia -> varsOps ; .)
    LENGTH          reduce using rule 28 (sentencia -> varsOps ; .)
    CAPITALIZAR     reduce using rule 28 (sentencia -> varsOps ; .)
    COLINEALES      reduce using rule 28 (sentencia -> varsOps ; .)
    [               reduce using rule 28 (sentencia -> varsOps ; .)
    $end            reduce using rule 28 (sentencia -> varsOps ; .)
    }               reduce using rule 28 (sentencia -> varsOps ; .)


state 55

    (144) varsOps -> MENOSMENOS varYVals .

    ;               reduce using rule 144 (varsOps -> MENOSMENOS varYVals .)
    )               reduce using rule 144 (varsOps -> MENOSMENOS varYVals .)
    +               reduce using rule 144 (varsOps -> MENOSMENOS varYVals .)
    -               reduce using rule 144 (varsOps -> MENOSMENOS varYVals .)
    *               reduce using rule 144 (varsOps -> MENOSMENOS varYVals .)
    /               reduce using rule 144 (varsOps -> MENOSMENOS varYVals .)
    %               reduce using rule 144 (varsOps -> MENOSMENOS varYVals .)
    ^               reduce using rule 144 (varsOps -> MENOSMENOS varYVals .)
    ?               reduce using rule 144 (varsOps -> MENOSMENOS varYVals .)
    OR              reduce using rule 144 (varsOps -> MENOSMENOS varYVals .)
    AND             reduce using rule 144 (varsOps -> MENOSMENOS varYVals .)
    EQEQ            reduce using rule 144 (varsOps -> MENOSMENOS varYVals .)
    DISTINTO        reduce using rule 144 (varsOps -> MENOSMENOS varYVals .)
    >               reduce using rule 144 (varsOps -> MENOSMENOS varYVals .)
    <               reduce using rule 144 (varsOps -> MENOSMENOS varYVals .)
    ,               reduce using rule 144 (varsOps -> MENOSMENOS varYVals .)
    ]               reduce using rule 144 (varsOps -> MENOSMENOS varYVals .)
    :               reduce using rule 144 (varsOps -> MENOSMENOS varYVals .)
    }               reduce using rule 144 (varsOps -> MENOSMENOS varYVals .)


state 56

    (138) varYVals -> ID .
    (59) vecVal -> ID . [ expresion ]
    (62) vecVal -> ID . [ INT ]

    ,               reduce using rule 138 (varYVals -> ID .)
    ]               reduce using rule 138 (varYVals -> ID .)
    +               reduce using rule 138 (varYVals -> ID .)
    -               reduce using rule 138 (varYVals -> ID .)
    *               reduce using rule 138 (varYVals -> ID .)
    /               reduce using rule 138 (varYVals -> ID .)
    %               reduce using rule 138 (varYVals -> ID .)
    ^               reduce using rule 138 (varYVals -> ID .)
    )               reduce using rule 138 (varYVals -> ID .)
    ;               reduce using rule 138 (varYVals -> ID .)
    EQEQ            reduce using rule 138 (varYVals -> ID .)
    DISTINTO        reduce using rule 138 (varYVals -> ID .)
    >               reduce using rule 138 (varYVals -> ID .)
    <               reduce using rule 138 (varYVals -> ID .)
    AND             reduce using rule 138 (varYVals -> ID .)
    OR              reduce using rule 138 (varYVals -> ID .)
    ?               reduce using rule 138 (varYVals -> ID .)
    :               reduce using rule 138 (varYVals -> ID .)
    }               reduce using rule 138 (varYVals -> ID .)
    MASMAS          reduce using rule 138 (varYVals -> ID .)
    MENOSMENOS      reduce using rule 138 (varYVals -> ID .)
    MULEQ           reduce using rule 138 (varYVals -> ID .)
    DIVEQ           reduce using rule 138 (varYVals -> ID .)
    MASEQ           reduce using rule 138 (varYVals -> ID .)
    MENOSEQ         reduce using rule 138 (varYVals -> ID .)
    =               reduce using rule 138 (varYVals -> ID .)
    [               shift and go to state 103


state 57

    (34) loop -> FOR ( . primParam ; valores ; tercerParam )
    (35) primParam -> . varAsig
    (36) primParam -> . empty
    (148) varAsig -> . varYVals MULEQ valores
    (149) varAsig -> . varYVals DIVEQ valores
    (150) varAsig -> . varYVals MASEQ valores
    (151) varAsig -> . varYVals MENOSEQ valores
    (152) varAsig -> . varYVals = valores
    (153) varAsig -> . ID . ID = valores
    (55) empty -> .
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (56) vec -> . [ elem ]

    ID              shift and go to state 21
    ;               reduce using rule 55 (empty -> .)
    [               shift and go to state 20

    varAsig                        shift and go to state 146
    primParam                      shift and go to state 145
    vec                            shift and go to state 33
    varYVals                       shift and go to state 148
    vecVal                         shift and go to state 8
    empty                          shift and go to state 147

state 58

    (49) funcInt -> LENGTH ( . valores )
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (141) reg -> . { campos }
    (97) ternario -> . ternarioMat
    (98) ternario -> . ternarioBool
    (99) ternario -> . ( ternarioMat )
    (100) ternario -> . ( ternarioBool )
    (101) ternario -> . ternarioVars
    (102) ternario -> . ( ternarioVars )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 90
    FLOAT           shift and go to state 92
    STRING          shift and go to state 70
    BOOL            shift and go to state 95
    RES             shift and go to state 63
    ID              shift and go to state 88
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 99
    (               shift and go to state 74
    [               shift and go to state 20
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    ?               reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 71
    eMat                           shift and go to state 72
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 77
    vec                            shift and go to state 78
    paren                          shift and go to state 86
    reg                            shift and go to state 80
    expBool                        shift and go to state 81
    ternarioBool                   shift and go to state 82
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 89
    funcReturn                     shift and go to state 91
    valores                        shift and go to state 149
    p                              shift and go to state 94
    varsOps                        shift and go to state 96
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 67
    varYVals                       shift and go to state 100
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 101

state 59

    (29) sentencia -> func ; .

    ELSE            reduce using rule 29 (sentencia -> func ; .)
    COMMENT         reduce using rule 29 (sentencia -> func ; .)
    IF              reduce using rule 29 (sentencia -> func ; .)
    DO              reduce using rule 29 (sentencia -> func ; .)
    WHILE           reduce using rule 29 (sentencia -> func ; .)
    FOR             reduce using rule 29 (sentencia -> func ; .)
    RETURN          reduce using rule 29 (sentencia -> func ; .)
    ;               reduce using rule 29 (sentencia -> func ; .)
    MENOSMENOS      reduce using rule 29 (sentencia -> func ; .)
    MASMAS          reduce using rule 29 (sentencia -> func ; .)
    ID              reduce using rule 29 (sentencia -> func ; .)
    PRINT           reduce using rule 29 (sentencia -> func ; .)
    MULTIESCALAR    reduce using rule 29 (sentencia -> func ; .)
    LENGTH          reduce using rule 29 (sentencia -> func ; .)
    CAPITALIZAR     reduce using rule 29 (sentencia -> func ; .)
    COLINEALES      reduce using rule 29 (sentencia -> func ; .)
    [               reduce using rule 29 (sentencia -> func ; .)
    $end            reduce using rule 29 (sentencia -> func ; .)
    }               reduce using rule 29 (sentencia -> func ; .)


state 60

    (207) expBool -> and .
    (208) and -> and . AND eq
    (210) and -> and . AND valoresBool

    ?               reduce using rule 207 (expBool -> and .)
    OR              reduce using rule 207 (expBool -> and .)
    :               reduce using rule 207 (expBool -> and .)
    ;               reduce using rule 207 (expBool -> and .)
    )               reduce using rule 207 (expBool -> and .)
    ]               reduce using rule 207 (expBool -> and .)
    ,               reduce using rule 207 (expBool -> and .)
    }               reduce using rule 207 (expBool -> and .)
    AND             shift and go to state 150


state 61

    (88) valores -> ternario .

    ,               reduce using rule 88 (valores -> ternario .)
    ]               reduce using rule 88 (valores -> ternario .)
    )               reduce using rule 88 (valores -> ternario .)
    ;               reduce using rule 88 (valores -> ternario .)
    }               reduce using rule 88 (valores -> ternario .)


state 62

    (47) funcReturn -> funcBool .
    (198) valoresBool -> funcBool .
    (223) tCompareEQ -> funcBool .

    ,               reduce using rule 47 (funcReturn -> funcBool .)
    )               reduce using rule 47 (funcReturn -> funcBool .)
    ]               reduce using rule 47 (funcReturn -> funcBool .)
    ;               reduce using rule 47 (funcReturn -> funcBool .)
    }               reduce using rule 47 (funcReturn -> funcBool .)
    OR              reduce using rule 198 (valoresBool -> funcBool .)
    AND             reduce using rule 198 (valoresBool -> funcBool .)
    ?               reduce using rule 198 (valoresBool -> funcBool .)
    EQEQ            reduce using rule 223 (tCompareEQ -> funcBool .)
    DISTINTO        reduce using rule 223 (tCompareEQ -> funcBool .)


state 63

    (91) valores -> RES .

    ,               reduce using rule 91 (valores -> RES .)
    ]               reduce using rule 91 (valores -> RES .)
    )               reduce using rule 91 (valores -> RES .)
    ;               reduce using rule 91 (valores -> RES .)
    }               reduce using rule 91 (valores -> RES .)


state 64

    (45) funcReturn -> funcInt .
    (156) valoresMat -> funcInt .
    (228) tCompareEQ -> funcInt .
    (236) tCompare -> funcInt .

    ,               reduce using rule 45 (funcReturn -> funcInt .)
    )               reduce using rule 45 (funcReturn -> funcInt .)
    ]               reduce using rule 45 (funcReturn -> funcInt .)
    ;               reduce using rule 45 (funcReturn -> funcInt .)
    }               reduce using rule 45 (funcReturn -> funcInt .)
    +               reduce using rule 156 (valoresMat -> funcInt .)
    -               reduce using rule 156 (valoresMat -> funcInt .)
    *               reduce using rule 156 (valoresMat -> funcInt .)
    /               reduce using rule 156 (valoresMat -> funcInt .)
    %               reduce using rule 156 (valoresMat -> funcInt .)
    ^               reduce using rule 156 (valoresMat -> funcInt .)
    EQEQ            reduce using rule 228 (tCompareEQ -> funcInt .)
    DISTINTO        reduce using rule 228 (tCompareEQ -> funcInt .)
    >               reduce using rule 236 (tCompare -> funcInt .)
    <               reduce using rule 236 (tCompare -> funcInt .)


state 65

    (57) elem -> valores . , elem
    (58) elem -> valores .

    ,               shift and go to state 151
    ]               reduce using rule 58 (elem -> valores .)


state 66

    (240) mayor -> menor .

    EQEQ            reduce using rule 240 (mayor -> menor .)
    DISTINTO        reduce using rule 240 (mayor -> menor .)
    AND             reduce using rule 240 (mayor -> menor .)
    OR              reduce using rule 240 (mayor -> menor .)
    ?               reduce using rule 240 (mayor -> menor .)
    ,               reduce using rule 240 (mayor -> menor .)
    )               reduce using rule 240 (mayor -> menor .)
    ]               reduce using rule 240 (mayor -> menor .)
    :               reduce using rule 240 (mayor -> menor .)
    ;               reduce using rule 240 (mayor -> menor .)
    }               reduce using rule 240 (mayor -> menor .)


state 67

    (101) ternario -> ternarioVars .

    ,               reduce using rule 101 (ternario -> ternarioVars .)
    )               reduce using rule 101 (ternario -> ternarioVars .)
    ]               reduce using rule 101 (ternario -> ternarioVars .)
    ;               reduce using rule 101 (ternario -> ternarioVars .)
    }               reduce using rule 101 (ternario -> ternarioVars .)


state 68

    (164) eMat -> valoresMat . + p
    (166) eMat -> valoresMat . + valoresMat
    (169) eMat -> valoresMat . - p
    (171) eMat -> valoresMat . - valoresMat
    (175) p -> valoresMat . * exp
    (176) p -> valoresMat . / exp
    (177) p -> valoresMat . % exp
    (181) p -> valoresMat . * valoresMat
    (182) p -> valoresMat . / valoresMat
    (183) p -> valoresMat . % valoresMat
    (186) exp -> valoresMat . ^ iSing
    (188) exp -> valoresMat . ^ valoresMat

    +               shift and go to state 153
    -               shift and go to state 155
    *               shift and go to state 154
    /               shift and go to state 156
    %               shift and go to state 152
    ^               shift and go to state 157


state 69

    (212) and -> eq .
    (213) eq -> eq . EQEQ mayor
    (214) eq -> eq . DISTINTO mayor
    (217) eq -> eq . EQEQ tCompareEQ
    (218) eq -> eq . DISTINTO tCompareEQ

    AND             reduce using rule 212 (and -> eq .)
    ?               reduce using rule 212 (and -> eq .)
    OR              reduce using rule 212 (and -> eq .)
    :               reduce using rule 212 (and -> eq .)
    ,               reduce using rule 212 (and -> eq .)
    }               reduce using rule 212 (and -> eq .)
    )               reduce using rule 212 (and -> eq .)
    ]               reduce using rule 212 (and -> eq .)
    ;               reduce using rule 212 (and -> eq .)
    EQEQ            shift and go to state 158
    DISTINTO        shift and go to state 159


state 70

    (86) valores -> STRING .
    (159) valoresMat -> STRING .

    ,               reduce using rule 86 (valores -> STRING .)
    ]               reduce using rule 86 (valores -> STRING .)
    )               reduce using rule 86 (valores -> STRING .)
    ;               reduce using rule 86 (valores -> STRING .)
    }               reduce using rule 86 (valores -> STRING .)
    +               reduce using rule 159 (valoresMat -> STRING .)
    -               reduce using rule 159 (valoresMat -> STRING .)
    *               reduce using rule 159 (valoresMat -> STRING .)
    /               reduce using rule 159 (valoresMat -> STRING .)
    %               reduce using rule 159 (valoresMat -> STRING .)
    ^               reduce using rule 159 (valoresMat -> STRING .)


state 71

    (204) expBool -> valoresBool . OR and
    (206) expBool -> valoresBool . OR valoresBool
    (209) and -> valoresBool . AND eq
    (211) and -> valoresBool . AND valoresBool
    (122) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars

    OR              shift and go to state 161
    AND             shift and go to state 160
    ?               shift and go to state 162


state 72

    (80) valores -> eMat .
    (163) eMat -> eMat . + p
    (165) eMat -> eMat . + valoresMat
    (168) eMat -> eMat . - p
    (170) eMat -> eMat . - valoresMat
    (229) tCompareEQ -> eMat .
    (232) tCompare -> eMat .

    ,               reduce using rule 80 (valores -> eMat .)
    ]               reduce using rule 80 (valores -> eMat .)
    )               reduce using rule 80 (valores -> eMat .)
    ;               reduce using rule 80 (valores -> eMat .)
    }               reduce using rule 80 (valores -> eMat .)
    +               shift and go to state 163
    -               shift and go to state 164
    EQEQ            reduce using rule 229 (tCompareEQ -> eMat .)
    DISTINTO        reduce using rule 229 (tCompareEQ -> eMat .)
    >               reduce using rule 232 (tCompare -> eMat .)
    <               reduce using rule 232 (tCompare -> eMat .)


state 73

    (215) eq -> tCompareEQ . EQEQ mayor
    (216) eq -> tCompareEQ . DISTINTO mayor
    (219) eq -> tCompareEQ . EQEQ tCompareEQ
    (220) eq -> tCompareEQ . DISTINTO tCompareEQ

    EQEQ            shift and go to state 165
    DISTINTO        shift and go to state 166


state 74

    (99) ternario -> ( . ternarioMat )
    (100) ternario -> ( . ternarioBool )
    (102) ternario -> ( . ternarioVars )
    (162) valoresMat -> ( . ternarioMat )
    (201) valoresBool -> ( . ternarioBool )
    (230) tCompareEQ -> ( . ternarioBool )
    (231) tCompareEQ -> ( . ternarioMat )
    (195) paren -> ( . eMat )
    (196) paren -> ( . valoresMat )
    (238) tCompare -> ( . ternarioMat )
    (246) parenBool -> ( . expBool )
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (56) vec -> . [ elem ]
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 180
    FLOAT           shift and go to state 181
    STRING          shift and go to state 176
    (               shift and go to state 172
    BOOL            shift and go to state 182
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75
    [               shift and go to state 20
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 168
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 169
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 170
    eMat                           shift and go to state 171
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 173
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    exp                            shift and go to state 98
    ternarioBool                   shift and go to state 177
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    expBool                        shift and go to state 183
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 174
    ternarioVars                   shift and go to state 184
    varYVals                       shift and go to state 185
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 186

state 75

    (191) iSing -> + . paren
    (193) iSing -> + . valoresMat
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (56) vec -> . [ elem ]

    (               shift and go to state 189
    INT             shift and go to state 192
    FLOAT           shift and go to state 191
    STRING          shift and go to state 176
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 99
    [               shift and go to state 20

    funcString                     shift and go to state 179
    funcInt                        shift and go to state 187
    vecVal                         shift and go to state 8
    varsOps                        shift and go to state 193
    valoresMat                     shift and go to state 188
    paren                          shift and go to state 190
    varYVals                       shift and go to state 194
    reg                            shift and go to state 175
    atributos                      shift and go to state 186
    vec                            shift and go to state 33

state 76

    (190) iSing -> - . paren
    (192) iSing -> - . valoresMat
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (56) vec -> . [ elem ]

    (               shift and go to state 189
    INT             shift and go to state 192
    FLOAT           shift and go to state 191
    STRING          shift and go to state 176
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 99
    [               shift and go to state 20

    funcString                     shift and go to state 179
    funcInt                        shift and go to state 187
    vecVal                         shift and go to state 8
    varsOps                        shift and go to state 193
    valoresMat                     shift and go to state 195
    paren                          shift and go to state 196
    varYVals                       shift and go to state 194
    reg                            shift and go to state 175
    atributos                      shift and go to state 186
    vec                            shift and go to state 33

state 77

    (97) ternario -> ternarioMat .

    ,               reduce using rule 97 (ternario -> ternarioMat .)
    )               reduce using rule 97 (ternario -> ternarioMat .)
    ]               reduce using rule 97 (ternario -> ternarioMat .)
    ;               reduce using rule 97 (ternario -> ternarioMat .)
    }               reduce using rule 97 (ternario -> ternarioMat .)


state 78

    (90) valores -> vec .
    (60) vecVal -> vec . [ expresion ]
    (63) vecVal -> vec . [ INT ]

    ,               reduce using rule 90 (valores -> vec .)
    ]               reduce using rule 90 (valores -> vec .)
    )               reduce using rule 90 (valores -> vec .)
    ;               reduce using rule 90 (valores -> vec .)
    }               reduce using rule 90 (valores -> vec .)
    [               shift and go to state 113


state 79

    (221) eq -> mayor .

    EQEQ            reduce using rule 221 (eq -> mayor .)
    DISTINTO        reduce using rule 221 (eq -> mayor .)
    AND             reduce using rule 221 (eq -> mayor .)
    ?               reduce using rule 221 (eq -> mayor .)
    OR              reduce using rule 221 (eq -> mayor .)
    ,               reduce using rule 221 (eq -> mayor .)
    ]               reduce using rule 221 (eq -> mayor .)
    )               reduce using rule 221 (eq -> mayor .)
    ;               reduce using rule 221 (eq -> mayor .)
    :               reduce using rule 221 (eq -> mayor .)
    }               reduce using rule 221 (eq -> mayor .)


state 80

    (83) valores -> reg .
    (93) atributos -> reg . . valoresCampos

    ,               reduce using rule 83 (valores -> reg .)
    ]               reduce using rule 83 (valores -> reg .)
    )               reduce using rule 83 (valores -> reg .)
    ;               reduce using rule 83 (valores -> reg .)
    }               reduce using rule 83 (valores -> reg .)
    .               shift and go to state 197


state 81

    (81) valores -> expBool .
    (203) expBool -> expBool . OR and
    (205) expBool -> expBool . OR valoresBool
    (123) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (132) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars

    ,               reduce using rule 81 (valores -> expBool .)
    ]               reduce using rule 81 (valores -> expBool .)
    )               reduce using rule 81 (valores -> expBool .)
    ;               reduce using rule 81 (valores -> expBool .)
    }               reduce using rule 81 (valores -> expBool .)
    OR              shift and go to state 198
    ?               shift and go to state 199


state 82

    (98) ternario -> ternarioBool .

    ,               reduce using rule 98 (ternario -> ternarioBool .)
    )               reduce using rule 98 (ternario -> ternarioBool .)
    ]               reduce using rule 98 (ternario -> ternarioBool .)
    ;               reduce using rule 98 (ternario -> ternarioBool .)
    }               reduce using rule 98 (ternario -> ternarioBool .)


state 83

    (189) exp -> iSing .

    ^               reduce using rule 189 (exp -> iSing .)
    *               reduce using rule 189 (exp -> iSing .)
    /               reduce using rule 189 (exp -> iSing .)
    %               reduce using rule 189 (exp -> iSing .)
    +               reduce using rule 189 (exp -> iSing .)
    -               reduce using rule 189 (exp -> iSing .)
    ,               reduce using rule 189 (exp -> iSing .)
    )               reduce using rule 189 (exp -> iSing .)
    EQEQ            reduce using rule 189 (exp -> iSing .)
    DISTINTO        reduce using rule 189 (exp -> iSing .)
    >               reduce using rule 189 (exp -> iSing .)
    <               reduce using rule 189 (exp -> iSing .)
    :               reduce using rule 189 (exp -> iSing .)
    ]               reduce using rule 189 (exp -> iSing .)
    ;               reduce using rule 189 (exp -> iSing .)
    AND             reduce using rule 189 (exp -> iSing .)
    OR              reduce using rule 189 (exp -> iSing .)
    ?               reduce using rule 189 (exp -> iSing .)
    }               reduce using rule 189 (exp -> iSing .)


state 84

    (245) not -> parenBool .

    EQEQ            reduce using rule 245 (not -> parenBool .)
    DISTINTO        reduce using rule 245 (not -> parenBool .)
    AND             reduce using rule 245 (not -> parenBool .)
    OR              reduce using rule 245 (not -> parenBool .)
    ?               reduce using rule 245 (not -> parenBool .)
    ]               reduce using rule 245 (not -> parenBool .)
    )               reduce using rule 245 (not -> parenBool .)
    :               reduce using rule 245 (not -> parenBool .)
    ,               reduce using rule 245 (not -> parenBool .)
    ;               reduce using rule 245 (not -> parenBool .)
    }               reduce using rule 245 (not -> parenBool .)


state 85

    (239) mayor -> tCompare . > tCompare
    (241) menor -> tCompare . < tCompare

    >               shift and go to state 201
    <               shift and go to state 200


state 86

    (194) iSing -> paren .

    ^               reduce using rule 194 (iSing -> paren .)
    *               reduce using rule 194 (iSing -> paren .)
    /               reduce using rule 194 (iSing -> paren .)
    %               reduce using rule 194 (iSing -> paren .)
    +               reduce using rule 194 (iSing -> paren .)
    -               reduce using rule 194 (iSing -> paren .)
    EQEQ            reduce using rule 194 (iSing -> paren .)
    DISTINTO        reduce using rule 194 (iSing -> paren .)
    >               reduce using rule 194 (iSing -> paren .)
    <               reduce using rule 194 (iSing -> paren .)
    ,               reduce using rule 194 (iSing -> paren .)
    ]               reduce using rule 194 (iSing -> paren .)
    )               reduce using rule 194 (iSing -> paren .)
    ;               reduce using rule 194 (iSing -> paren .)
    AND             reduce using rule 194 (iSing -> paren .)
    OR              reduce using rule 194 (iSing -> paren .)
    ?               reduce using rule 194 (iSing -> paren .)
    :               reduce using rule 194 (iSing -> paren .)
    }               reduce using rule 194 (iSing -> paren .)


state 87

    (242) menor -> not .

    EQEQ            reduce using rule 242 (menor -> not .)
    DISTINTO        reduce using rule 242 (menor -> not .)
    AND             reduce using rule 242 (menor -> not .)
    ?               reduce using rule 242 (menor -> not .)
    OR              reduce using rule 242 (menor -> not .)
    :               reduce using rule 242 (menor -> not .)
    )               reduce using rule 242 (menor -> not .)
    ]               reduce using rule 242 (menor -> not .)
    ,               reduce using rule 242 (menor -> not .)
    ;               reduce using rule 242 (menor -> not .)
    }               reduce using rule 242 (menor -> not .)


state 88

    (138) varYVals -> ID .
    (92) atributos -> ID . . valoresCampos
    (59) vecVal -> ID . [ expresion ]
    (62) vecVal -> ID . [ INT ]

    MASMAS          reduce using rule 138 (varYVals -> ID .)
    MENOSMENOS      reduce using rule 138 (varYVals -> ID .)
    )               reduce using rule 138 (varYVals -> ID .)
    +               reduce using rule 138 (varYVals -> ID .)
    -               reduce using rule 138 (varYVals -> ID .)
    *               reduce using rule 138 (varYVals -> ID .)
    /               reduce using rule 138 (varYVals -> ID .)
    %               reduce using rule 138 (varYVals -> ID .)
    ^               reduce using rule 138 (varYVals -> ID .)
    OR              reduce using rule 138 (varYVals -> ID .)
    AND             reduce using rule 138 (varYVals -> ID .)
    ?               reduce using rule 138 (varYVals -> ID .)
    EQEQ            reduce using rule 138 (varYVals -> ID .)
    DISTINTO        reduce using rule 138 (varYVals -> ID .)
    >               reduce using rule 138 (varYVals -> ID .)
    <               reduce using rule 138 (varYVals -> ID .)
    ;               reduce using rule 138 (varYVals -> ID .)
    ,               reduce using rule 138 (varYVals -> ID .)
    ]               reduce using rule 138 (varYVals -> ID .)
    }               reduce using rule 138 (varYVals -> ID .)
    .               shift and go to state 202
    [               shift and go to state 103


state 89

    (46) funcReturn -> funcString .
    (158) valoresMat -> funcString .

    ,               reduce using rule 46 (funcReturn -> funcString .)
    )               reduce using rule 46 (funcReturn -> funcString .)
    ]               reduce using rule 46 (funcReturn -> funcString .)
    ;               reduce using rule 46 (funcReturn -> funcString .)
    }               reduce using rule 46 (funcReturn -> funcString .)
    +               reduce using rule 158 (valoresMat -> funcString .)
    -               reduce using rule 158 (valoresMat -> funcString .)
    *               reduce using rule 158 (valoresMat -> funcString .)
    /               reduce using rule 158 (valoresMat -> funcString .)
    %               reduce using rule 158 (valoresMat -> funcString .)
    ^               reduce using rule 158 (valoresMat -> funcString .)


state 90

    (84) valores -> INT .
    (154) valoresMat -> INT .
    (226) tCompareEQ -> INT .
    (235) tCompare -> INT .

    ,               reduce using rule 84 (valores -> INT .)
    ]               reduce using rule 84 (valores -> INT .)
    )               reduce using rule 84 (valores -> INT .)
    ;               reduce using rule 84 (valores -> INT .)
    }               reduce using rule 84 (valores -> INT .)
    +               reduce using rule 154 (valoresMat -> INT .)
    -               reduce using rule 154 (valoresMat -> INT .)
    *               reduce using rule 154 (valoresMat -> INT .)
    /               reduce using rule 154 (valoresMat -> INT .)
    %               reduce using rule 154 (valoresMat -> INT .)
    ^               reduce using rule 154 (valoresMat -> INT .)
    EQEQ            reduce using rule 226 (tCompareEQ -> INT .)
    DISTINTO        reduce using rule 226 (tCompareEQ -> INT .)
    >               reduce using rule 235 (tCompare -> INT .)
    <               reduce using rule 235 (tCompare -> INT .)


state 91

    (82) valores -> funcReturn .

    ,               reduce using rule 82 (valores -> funcReturn .)
    ]               reduce using rule 82 (valores -> funcReturn .)
    )               reduce using rule 82 (valores -> funcReturn .)
    ;               reduce using rule 82 (valores -> funcReturn .)
    }               reduce using rule 82 (valores -> funcReturn .)


state 92

    (85) valores -> FLOAT .
    (155) valoresMat -> FLOAT .
    (227) tCompareEQ -> FLOAT .
    (237) tCompare -> FLOAT .

    ,               reduce using rule 85 (valores -> FLOAT .)
    ]               reduce using rule 85 (valores -> FLOAT .)
    )               reduce using rule 85 (valores -> FLOAT .)
    ;               reduce using rule 85 (valores -> FLOAT .)
    }               reduce using rule 85 (valores -> FLOAT .)
    +               reduce using rule 155 (valoresMat -> FLOAT .)
    -               reduce using rule 155 (valoresMat -> FLOAT .)
    *               reduce using rule 155 (valoresMat -> FLOAT .)
    /               reduce using rule 155 (valoresMat -> FLOAT .)
    %               reduce using rule 155 (valoresMat -> FLOAT .)
    ^               reduce using rule 155 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 227 (tCompareEQ -> FLOAT .)
    DISTINTO        reduce using rule 227 (tCompareEQ -> FLOAT .)
    >               reduce using rule 237 (tCompare -> FLOAT .)
    <               reduce using rule 237 (tCompare -> FLOAT .)


state 93

    (56) vec -> [ elem . ]

    ]               shift and go to state 203


state 94

    (167) eMat -> p .
    (172) p -> p . * exp
    (173) p -> p . / exp
    (174) p -> p . % exp
    (178) p -> p . * valoresMat
    (179) p -> p . / valoresMat
    (180) p -> p . % valoresMat

    +               reduce using rule 167 (eMat -> p .)
    -               reduce using rule 167 (eMat -> p .)
    :               reduce using rule 167 (eMat -> p .)
    EQEQ            reduce using rule 167 (eMat -> p .)
    DISTINTO        reduce using rule 167 (eMat -> p .)
    >               reduce using rule 167 (eMat -> p .)
    <               reduce using rule 167 (eMat -> p .)
    ,               reduce using rule 167 (eMat -> p .)
    )               reduce using rule 167 (eMat -> p .)
    ]               reduce using rule 167 (eMat -> p .)
    ;               reduce using rule 167 (eMat -> p .)
    }               reduce using rule 167 (eMat -> p .)
    AND             reduce using rule 167 (eMat -> p .)
    OR              reduce using rule 167 (eMat -> p .)
    ?               reduce using rule 167 (eMat -> p .)
    *               shift and go to state 205
    /               shift and go to state 206
    %               shift and go to state 204


state 95

    (87) valores -> BOOL .
    (197) valoresBool -> BOOL .
    (222) tCompareEQ -> BOOL .

    ,               reduce using rule 87 (valores -> BOOL .)
    ]               reduce using rule 87 (valores -> BOOL .)
    )               reduce using rule 87 (valores -> BOOL .)
    ;               reduce using rule 87 (valores -> BOOL .)
    }               reduce using rule 87 (valores -> BOOL .)
    OR              reduce using rule 197 (valoresBool -> BOOL .)
    AND             reduce using rule 197 (valoresBool -> BOOL .)
    ?               reduce using rule 197 (valoresBool -> BOOL .)
    EQEQ            reduce using rule 222 (tCompareEQ -> BOOL .)
    DISTINTO        reduce using rule 222 (tCompareEQ -> BOOL .)


state 96

    (79) valores -> varsOps .
    (161) valoresMat -> varsOps .
    (200) valoresBool -> varsOps .
    (225) tCompareEQ -> varsOps .
    (233) tCompare -> varsOps .

    ,               reduce using rule 79 (valores -> varsOps .)
    ]               reduce using rule 79 (valores -> varsOps .)
    )               reduce using rule 79 (valores -> varsOps .)
    ;               reduce using rule 79 (valores -> varsOps .)
    }               reduce using rule 79 (valores -> varsOps .)
    +               reduce using rule 161 (valoresMat -> varsOps .)
    -               reduce using rule 161 (valoresMat -> varsOps .)
    *               reduce using rule 161 (valoresMat -> varsOps .)
    /               reduce using rule 161 (valoresMat -> varsOps .)
    %               reduce using rule 161 (valoresMat -> varsOps .)
    ^               reduce using rule 161 (valoresMat -> varsOps .)
    OR              reduce using rule 200 (valoresBool -> varsOps .)
    AND             reduce using rule 200 (valoresBool -> varsOps .)
    ?               reduce using rule 200 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 225 (tCompareEQ -> varsOps .)
    DISTINTO        reduce using rule 225 (tCompareEQ -> varsOps .)
    >               reduce using rule 233 (tCompare -> varsOps .)
    <               reduce using rule 233 (tCompare -> varsOps .)


state 97

    (243) not -> NOT . not
    (244) not -> NOT . valoresBool
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (246) parenBool -> . ( expBool )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (56) vec -> . [ elem ]

    NOT             shift and go to state 97
    BOOL            shift and go to state 211
    (               shift and go to state 209
    EQEQ            reduce using rule 202 (valoresBool -> .)
    DISTINTO        reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    ?               reduce using rule 202 (valoresBool -> .)
    ,               reduce using rule 202 (valoresBool -> .)
    ]               reduce using rule 202 (valoresBool -> .)
    )               reduce using rule 202 (valoresBool -> .)
    ;               reduce using rule 202 (valoresBool -> .)
    :               reduce using rule 202 (valoresBool -> .)
    }               reduce using rule 202 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 56
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20

    funcBool                       shift and go to state 207
    parenBool                      shift and go to state 84
    varsOps                        shift and go to state 212
    vecVal                         shift and go to state 8
    not                            shift and go to state 210
    varYVals                       shift and go to state 213
    valoresBool                    shift and go to state 208
    vec                            shift and go to state 33

state 98

    (184) p -> exp .
    (185) exp -> exp . ^ iSing
    (187) exp -> exp . ^ valoresMat

    *               reduce using rule 184 (p -> exp .)
    /               reduce using rule 184 (p -> exp .)
    %               reduce using rule 184 (p -> exp .)
    +               reduce using rule 184 (p -> exp .)
    -               reduce using rule 184 (p -> exp .)
    :               reduce using rule 184 (p -> exp .)
    EQEQ            reduce using rule 184 (p -> exp .)
    DISTINTO        reduce using rule 184 (p -> exp .)
    >               reduce using rule 184 (p -> exp .)
    <               reduce using rule 184 (p -> exp .)
    ,               reduce using rule 184 (p -> exp .)
    )               reduce using rule 184 (p -> exp .)
    ]               reduce using rule 184 (p -> exp .)
    ;               reduce using rule 184 (p -> exp .)
    }               reduce using rule 184 (p -> exp .)
    AND             reduce using rule 184 (p -> exp .)
    OR              reduce using rule 184 (p -> exp .)
    ?               reduce using rule 184 (p -> exp .)
    ^               shift and go to state 214


state 99

    (141) reg -> { . campos }
    (142) campos -> . ID : valores , campos
    (143) campos -> . ID : valores

    ID              shift and go to state 216

    campos                         shift and go to state 215

state 100

    (78) valores -> varYVals .
    (146) varsOps -> varYVals . MASMAS
    (147) varsOps -> varYVals . MENOSMENOS
    (160) valoresMat -> varYVals .
    (199) valoresBool -> varYVals .
    (224) tCompareEQ -> varYVals .
    (234) tCompare -> varYVals .

    ,               reduce using rule 78 (valores -> varYVals .)
    ]               reduce using rule 78 (valores -> varYVals .)
    )               reduce using rule 78 (valores -> varYVals .)
    ;               reduce using rule 78 (valores -> varYVals .)
    }               reduce using rule 78 (valores -> varYVals .)
    MASMAS          shift and go to state 51
    MENOSMENOS      shift and go to state 48
    +               reduce using rule 160 (valoresMat -> varYVals .)
    -               reduce using rule 160 (valoresMat -> varYVals .)
    *               reduce using rule 160 (valoresMat -> varYVals .)
    /               reduce using rule 160 (valoresMat -> varYVals .)
    %               reduce using rule 160 (valoresMat -> varYVals .)
    ^               reduce using rule 160 (valoresMat -> varYVals .)
    OR              reduce using rule 199 (valoresBool -> varYVals .)
    AND             reduce using rule 199 (valoresBool -> varYVals .)
    ?               reduce using rule 199 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 224 (tCompareEQ -> varYVals .)
    DISTINTO        reduce using rule 224 (tCompareEQ -> varYVals .)
    >               reduce using rule 234 (tCompare -> varYVals .)
    <               reduce using rule 234 (tCompare -> varYVals .)


state 101

    (89) valores -> atributos .
    (157) valoresMat -> atributos .

    ,               reduce using rule 89 (valores -> atributos .)
    ]               reduce using rule 89 (valores -> atributos .)
    )               reduce using rule 89 (valores -> atributos .)
    ;               reduce using rule 89 (valores -> atributos .)
    }               reduce using rule 89 (valores -> atributos .)
    +               reduce using rule 157 (valoresMat -> atributos .)
    -               reduce using rule 157 (valoresMat -> atributos .)
    *               reduce using rule 157 (valoresMat -> atributos .)
    /               reduce using rule 157 (valoresMat -> atributos .)
    %               reduce using rule 157 (valoresMat -> atributos .)
    ^               reduce using rule 157 (valoresMat -> atributos .)


state 102

    (153) varAsig -> ID . . ID = valores

    ID              shift and go to state 217


state 103

    (59) vecVal -> ID [ . expresion ]
    (62) vecVal -> ID [ . INT ]
    (65) expresion -> . eMat
    (66) expresion -> . expBool
    (67) expresion -> . funcReturn
    (68) expresion -> . reg
    (69) expresion -> . FLOAT
    (70) expresion -> . STRING
    (71) expresion -> . BOOL
    (72) expresion -> . varYVals
    (73) expresion -> . varsOps
    (74) expresion -> . vec
    (75) expresion -> . ternario
    (76) expresion -> . atributos
    (77) expresion -> . RES
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (141) reg -> . { campos }
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (56) vec -> . [ elem ]
    (97) ternario -> . ternarioMat
    (98) ternario -> . ternarioBool
    (99) ternario -> . ( ternarioMat )
    (100) ternario -> . ( ternarioBool )
    (101) ternario -> . ternarioVars
    (102) ternario -> . ( ternarioVars )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 219
    FLOAT           shift and go to state 135
    STRING          shift and go to state 127
    BOOL            shift and go to state 136
    RES             shift and go to state 126
    {               shift and go to state 99
    ID              shift and go to state 88
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 74
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    ?               reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    ternario                       shift and go to state 125
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 71
    eMat                           shift and go to state 128
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 77
    vec                            shift and go to state 129
    paren                          shift and go to state 86
    reg                            shift and go to state 130
    expBool                        shift and go to state 131
    ternarioBool                   shift and go to state 82
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    expresion                      shift and go to state 218
    funcString                     shift and go to state 89
    funcReturn                     shift and go to state 134
    p                              shift and go to state 94
    varsOps                        shift and go to state 137
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 67
    varYVals                       shift and go to state 138
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 139

state 104

    (6) lAbierta -> IF ( . cosaBooleana ) linea
    (7) lAbierta -> IF ( . cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> IF ( . cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> IF ( . cosaBooleana ) { g }
    (14) lCerrada -> IF ( . cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( . cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (41) cosaBooleana -> . expBool
    (42) cosaBooleana -> . valoresBool
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (56) vec -> . [ elem ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (246) parenBool -> . ( expBool )
    (141) reg -> . { campos }
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )

    BOOL            shift and go to state 182
    (               shift and go to state 223
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    )               reduce using rule 202 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 224
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    INT             shift and go to state 226
    FLOAT           shift and go to state 227
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    STRING          shift and go to state 176
    NOT             shift and go to state 97
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75

    and                            shift and go to state 60
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 220
    menor                          shift and go to state 66
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 221
    eMat                           shift and go to state 222
    p                              shift and go to state 94
    atributos                      shift and go to state 186
    mayor                          shift and go to state 79
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    varsOps                        shift and go to state 228
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    cosaBooleana                   shift and go to state 225
    funcString                     shift and go to state 179
    tCompareEQ                     shift and go to state 73
    exp                            shift and go to state 98
    varYVals                       shift and go to state 229
    parenBool                      shift and go to state 84
    expBool                        shift and go to state 230

state 105

    (30) sentencia -> varAsig ; .

    ELSE            reduce using rule 30 (sentencia -> varAsig ; .)
    COMMENT         reduce using rule 30 (sentencia -> varAsig ; .)
    IF              reduce using rule 30 (sentencia -> varAsig ; .)
    DO              reduce using rule 30 (sentencia -> varAsig ; .)
    WHILE           reduce using rule 30 (sentencia -> varAsig ; .)
    FOR             reduce using rule 30 (sentencia -> varAsig ; .)
    RETURN          reduce using rule 30 (sentencia -> varAsig ; .)
    ;               reduce using rule 30 (sentencia -> varAsig ; .)
    MENOSMENOS      reduce using rule 30 (sentencia -> varAsig ; .)
    MASMAS          reduce using rule 30 (sentencia -> varAsig ; .)
    ID              reduce using rule 30 (sentencia -> varAsig ; .)
    PRINT           reduce using rule 30 (sentencia -> varAsig ; .)
    MULTIESCALAR    reduce using rule 30 (sentencia -> varAsig ; .)
    LENGTH          reduce using rule 30 (sentencia -> varAsig ; .)
    CAPITALIZAR     reduce using rule 30 (sentencia -> varAsig ; .)
    COLINEALES      reduce using rule 30 (sentencia -> varAsig ; .)
    [               reduce using rule 30 (sentencia -> varAsig ; .)
    $end            reduce using rule 30 (sentencia -> varAsig ; .)
    }               reduce using rule 30 (sentencia -> varAsig ; .)


state 106

    (50) funcString -> CAPITALIZAR ( . valores )
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (141) reg -> . { campos }
    (97) ternario -> . ternarioMat
    (98) ternario -> . ternarioBool
    (99) ternario -> . ( ternarioMat )
    (100) ternario -> . ( ternarioBool )
    (101) ternario -> . ternarioVars
    (102) ternario -> . ( ternarioVars )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 90
    FLOAT           shift and go to state 92
    STRING          shift and go to state 70
    BOOL            shift and go to state 95
    RES             shift and go to state 63
    ID              shift and go to state 88
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 99
    (               shift and go to state 74
    [               shift and go to state 20
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    ?               reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 71
    eMat                           shift and go to state 72
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 77
    vec                            shift and go to state 78
    paren                          shift and go to state 86
    reg                            shift and go to state 80
    expBool                        shift and go to state 81
    ternarioBool                   shift and go to state 82
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 89
    funcReturn                     shift and go to state 91
    valores                        shift and go to state 231
    p                              shift and go to state 94
    varsOps                        shift and go to state 96
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 67
    varYVals                       shift and go to state 100
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 101

state 107

    (48) funcInt -> MULTIESCALAR ( . valores , valores param )
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (141) reg -> . { campos }
    (97) ternario -> . ternarioMat
    (98) ternario -> . ternarioBool
    (99) ternario -> . ( ternarioMat )
    (100) ternario -> . ( ternarioBool )
    (101) ternario -> . ternarioVars
    (102) ternario -> . ( ternarioVars )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 90
    FLOAT           shift and go to state 92
    STRING          shift and go to state 70
    BOOL            shift and go to state 95
    RES             shift and go to state 63
    ID              shift and go to state 88
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 99
    (               shift and go to state 74
    [               shift and go to state 20
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    ?               reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 72
    tCompareEQ                     shift and go to state 73
    valoresBool                    shift and go to state 71
    ternarioMat                    shift and go to state 77
    vec                            shift and go to state 78
    paren                          shift and go to state 86
    reg                            shift and go to state 80
    expBool                        shift and go to state 81
    ternarioBool                   shift and go to state 82
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 89
    funcReturn                     shift and go to state 91
    valores                        shift and go to state 232
    p                              shift and go to state 94
    varsOps                        shift and go to state 96
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 67
    varYVals                       shift and go to state 100
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 101

state 108

    (145) varsOps -> MASMAS varYVals .

    ;               reduce using rule 145 (varsOps -> MASMAS varYVals .)
    )               reduce using rule 145 (varsOps -> MASMAS varYVals .)
    +               reduce using rule 145 (varsOps -> MASMAS varYVals .)
    -               reduce using rule 145 (varsOps -> MASMAS varYVals .)
    *               reduce using rule 145 (varsOps -> MASMAS varYVals .)
    /               reduce using rule 145 (varsOps -> MASMAS varYVals .)
    %               reduce using rule 145 (varsOps -> MASMAS varYVals .)
    ^               reduce using rule 145 (varsOps -> MASMAS varYVals .)
    ?               reduce using rule 145 (varsOps -> MASMAS varYVals .)
    OR              reduce using rule 145 (varsOps -> MASMAS varYVals .)
    AND             reduce using rule 145 (varsOps -> MASMAS varYVals .)
    EQEQ            reduce using rule 145 (varsOps -> MASMAS varYVals .)
    DISTINTO        reduce using rule 145 (varsOps -> MASMAS varYVals .)
    >               reduce using rule 145 (varsOps -> MASMAS varYVals .)
    <               reduce using rule 145 (varsOps -> MASMAS varYVals .)
    ,               reduce using rule 145 (varsOps -> MASMAS varYVals .)
    ]               reduce using rule 145 (varsOps -> MASMAS varYVals .)
    :               reduce using rule 145 (varsOps -> MASMAS varYVals .)
    }               reduce using rule 145 (varsOps -> MASMAS varYVals .)


state 109

    (24) lCerrada -> loop COMMENT . com lCerrada
    (12) com -> . COMMENT com
    (13) com -> . empty
    (55) empty -> .

    COMMENT         shift and go to state 115
    IF              reduce using rule 55 (empty -> .)
    DO              reduce using rule 55 (empty -> .)
    RETURN          reduce using rule 55 (empty -> .)
    ;               reduce using rule 55 (empty -> .)
    WHILE           reduce using rule 55 (empty -> .)
    FOR             reduce using rule 55 (empty -> .)
    MENOSMENOS      reduce using rule 55 (empty -> .)
    MASMAS          reduce using rule 55 (empty -> .)
    ID              reduce using rule 55 (empty -> .)
    PRINT           reduce using rule 55 (empty -> .)
    MULTIESCALAR    reduce using rule 55 (empty -> .)
    LENGTH          reduce using rule 55 (empty -> .)
    CAPITALIZAR     reduce using rule 55 (empty -> .)
    COLINEALES      reduce using rule 55 (empty -> .)
    [               reduce using rule 55 (empty -> .)

    com                            shift and go to state 233
    empty                          shift and go to state 117

state 110

    (23) lCerrada -> loop lCerrada .

    ELSE            reduce using rule 23 (lCerrada -> loop lCerrada .)
    COMMENT         reduce using rule 23 (lCerrada -> loop lCerrada .)
    IF              reduce using rule 23 (lCerrada -> loop lCerrada .)
    DO              reduce using rule 23 (lCerrada -> loop lCerrada .)
    WHILE           reduce using rule 23 (lCerrada -> loop lCerrada .)
    FOR             reduce using rule 23 (lCerrada -> loop lCerrada .)
    RETURN          reduce using rule 23 (lCerrada -> loop lCerrada .)
    ;               reduce using rule 23 (lCerrada -> loop lCerrada .)
    MENOSMENOS      reduce using rule 23 (lCerrada -> loop lCerrada .)
    MASMAS          reduce using rule 23 (lCerrada -> loop lCerrada .)
    ID              reduce using rule 23 (lCerrada -> loop lCerrada .)
    PRINT           reduce using rule 23 (lCerrada -> loop lCerrada .)
    MULTIESCALAR    reduce using rule 23 (lCerrada -> loop lCerrada .)
    LENGTH          reduce using rule 23 (lCerrada -> loop lCerrada .)
    CAPITALIZAR     reduce using rule 23 (lCerrada -> loop lCerrada .)
    COLINEALES      reduce using rule 23 (lCerrada -> loop lCerrada .)
    [               reduce using rule 23 (lCerrada -> loop lCerrada .)
    $end            reduce using rule 23 (lCerrada -> loop lCerrada .)
    }               reduce using rule 23 (lCerrada -> loop lCerrada .)


state 111

    (10) lAbierta -> loop lAbierta .

    COMMENT         reduce using rule 10 (lAbierta -> loop lAbierta .)
    IF              reduce using rule 10 (lAbierta -> loop lAbierta .)
    DO              reduce using rule 10 (lAbierta -> loop lAbierta .)
    WHILE           reduce using rule 10 (lAbierta -> loop lAbierta .)
    FOR             reduce using rule 10 (lAbierta -> loop lAbierta .)
    RETURN          reduce using rule 10 (lAbierta -> loop lAbierta .)
    ;               reduce using rule 10 (lAbierta -> loop lAbierta .)
    MENOSMENOS      reduce using rule 10 (lAbierta -> loop lAbierta .)
    MASMAS          reduce using rule 10 (lAbierta -> loop lAbierta .)
    ID              reduce using rule 10 (lAbierta -> loop lAbierta .)
    PRINT           reduce using rule 10 (lAbierta -> loop lAbierta .)
    MULTIESCALAR    reduce using rule 10 (lAbierta -> loop lAbierta .)
    LENGTH          reduce using rule 10 (lAbierta -> loop lAbierta .)
    CAPITALIZAR     reduce using rule 10 (lAbierta -> loop lAbierta .)
    COLINEALES      reduce using rule 10 (lAbierta -> loop lAbierta .)
    [               reduce using rule 10 (lAbierta -> loop lAbierta .)
    $end            reduce using rule 10 (lAbierta -> loop lAbierta .)
    }               reduce using rule 10 (lAbierta -> loop lAbierta .)


state 112

    (22) lCerrada -> loop { . g }
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (55) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (148) varAsig -> . varYVals MULEQ valores
    (149) varAsig -> . varYVals DIVEQ valores
    (150) varAsig -> . varYVals MASEQ valores
    (151) varAsig -> . varYVals MENOSEQ valores
    (152) varAsig -> . varYVals = valores
    (153) varAsig -> . ID . ID = valores
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 55 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    linea                          shift and go to state 34
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 13
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 234
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 30
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 32

state 113

    (60) vecVal -> vec [ . expresion ]
    (63) vecVal -> vec [ . INT ]
    (65) expresion -> . eMat
    (66) expresion -> . expBool
    (67) expresion -> . funcReturn
    (68) expresion -> . reg
    (69) expresion -> . FLOAT
    (70) expresion -> . STRING
    (71) expresion -> . BOOL
    (72) expresion -> . varYVals
    (73) expresion -> . varsOps
    (74) expresion -> . vec
    (75) expresion -> . ternario
    (76) expresion -> . atributos
    (77) expresion -> . RES
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (141) reg -> . { campos }
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (56) vec -> . [ elem ]
    (97) ternario -> . ternarioMat
    (98) ternario -> . ternarioBool
    (99) ternario -> . ( ternarioMat )
    (100) ternario -> . ( ternarioBool )
    (101) ternario -> . ternarioVars
    (102) ternario -> . ( ternarioVars )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 236
    FLOAT           shift and go to state 135
    STRING          shift and go to state 127
    BOOL            shift and go to state 136
    RES             shift and go to state 126
    {               shift and go to state 99
    ID              shift and go to state 88
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 74
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    ?               reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    ternario                       shift and go to state 125
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 71
    eMat                           shift and go to state 128
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 77
    vec                            shift and go to state 129
    paren                          shift and go to state 86
    reg                            shift and go to state 130
    varsOps                        shift and go to state 137
    exp                            shift and go to state 98
    ternarioBool                   shift and go to state 82
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    expresion                      shift and go to state 235
    funcString                     shift and go to state 89
    funcReturn                     shift and go to state 134
    p                              shift and go to state 94
    expBool                        shift and go to state 131
    ternarioVars                   shift and go to state 67
    varYVals                       shift and go to state 138
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 139

state 114

    (1) g -> linea g .

    }               reduce using rule 1 (g -> linea g .)
    $end            reduce using rule 1 (g -> linea g .)


state 115

    (12) com -> COMMENT . com
    (12) com -> . COMMENT com
    (13) com -> . empty
    (55) empty -> .

    COMMENT         shift and go to state 115
    IF              reduce using rule 55 (empty -> .)
    DO              reduce using rule 55 (empty -> .)
    RETURN          reduce using rule 55 (empty -> .)
    ;               reduce using rule 55 (empty -> .)
    WHILE           reduce using rule 55 (empty -> .)
    FOR             reduce using rule 55 (empty -> .)
    MENOSMENOS      reduce using rule 55 (empty -> .)
    MASMAS          reduce using rule 55 (empty -> .)
    ID              reduce using rule 55 (empty -> .)
    PRINT           reduce using rule 55 (empty -> .)
    MULTIESCALAR    reduce using rule 55 (empty -> .)
    LENGTH          reduce using rule 55 (empty -> .)
    CAPITALIZAR     reduce using rule 55 (empty -> .)
    COLINEALES      reduce using rule 55 (empty -> .)
    [               reduce using rule 55 (empty -> .)

    com                            shift and go to state 237
    empty                          shift and go to state 117

state 116

    (27) lCerrada -> DO COMMENT com . lCerrada WHILE ( valores ) ;
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (148) varAsig -> . varYVals MULEQ valores
    (149) varAsig -> . varYVals DIVEQ valores
    (150) varAsig -> . varYVals MASEQ valores
    (151) varAsig -> . varYVals MENOSEQ valores
    (152) varAsig -> . varYVals = valores
    (153) varAsig -> . ID . ID = valores
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 238
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 39

state 117

    (13) com -> empty .

    IF              reduce using rule 13 (com -> empty .)
    DO              reduce using rule 13 (com -> empty .)
    RETURN          reduce using rule 13 (com -> empty .)
    ;               reduce using rule 13 (com -> empty .)
    WHILE           reduce using rule 13 (com -> empty .)
    FOR             reduce using rule 13 (com -> empty .)
    MENOSMENOS      reduce using rule 13 (com -> empty .)
    MASMAS          reduce using rule 13 (com -> empty .)
    ID              reduce using rule 13 (com -> empty .)
    PRINT           reduce using rule 13 (com -> empty .)
    MULTIESCALAR    reduce using rule 13 (com -> empty .)
    LENGTH          reduce using rule 13 (com -> empty .)
    CAPITALIZAR     reduce using rule 13 (com -> empty .)
    COLINEALES      reduce using rule 13 (com -> empty .)
    [               reduce using rule 13 (com -> empty .)


state 118

    (14) lCerrada -> IF ( . cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( . cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (41) cosaBooleana -> . expBool
    (42) cosaBooleana -> . valoresBool
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (56) vec -> . [ elem ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (246) parenBool -> . ( expBool )
    (141) reg -> . { campos }
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )

    BOOL            shift and go to state 182
    (               shift and go to state 223
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    )               reduce using rule 202 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 224
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    INT             shift and go to state 226
    FLOAT           shift and go to state 227
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    STRING          shift and go to state 176
    NOT             shift and go to state 97
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75

    and                            shift and go to state 60
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 220
    menor                          shift and go to state 66
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 221
    eMat                           shift and go to state 222
    p                              shift and go to state 94
    atributos                      shift and go to state 186
    mayor                          shift and go to state 79
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    cosaBooleana                   shift and go to state 239
    funcString                     shift and go to state 179
    tCompareEQ                     shift and go to state 73
    varsOps                        shift and go to state 228
    exp                            shift and go to state 98
    varYVals                       shift and go to state 229
    parenBool                      shift and go to state 84
    expBool                        shift and go to state 230

state 119

    (26) lCerrada -> DO lCerrada WHILE . ( valores ) ;

    (               shift and go to state 240


state 120

    (25) lCerrada -> DO { g . } WHILE ( valores ) ;

    }               shift and go to state 241


state 121

    (51) funcBool -> COLINEALES ( valores . , valores )

    ,               shift and go to state 242


state 122

    (33) loop -> WHILE ( valores . )

    )               shift and go to state 243


state 123

    (52) funcVoid -> PRINT ( valores . )

    )               shift and go to state 244


state 124

    (140) varYVals -> vecVal . varYVals .

    MASMAS          reduce using rule 140 (varYVals -> vecVal . varYVals .)
    MENOSMENOS      reduce using rule 140 (varYVals -> vecVal . varYVals .)
    )               reduce using rule 140 (varYVals -> vecVal . varYVals .)
    +               reduce using rule 140 (varYVals -> vecVal . varYVals .)
    -               reduce using rule 140 (varYVals -> vecVal . varYVals .)
    *               reduce using rule 140 (varYVals -> vecVal . varYVals .)
    /               reduce using rule 140 (varYVals -> vecVal . varYVals .)
    %               reduce using rule 140 (varYVals -> vecVal . varYVals .)
    ^               reduce using rule 140 (varYVals -> vecVal . varYVals .)
    ?               reduce using rule 140 (varYVals -> vecVal . varYVals .)
    OR              reduce using rule 140 (varYVals -> vecVal . varYVals .)
    AND             reduce using rule 140 (varYVals -> vecVal . varYVals .)
    EQEQ            reduce using rule 140 (varYVals -> vecVal . varYVals .)
    DISTINTO        reduce using rule 140 (varYVals -> vecVal . varYVals .)
    >               reduce using rule 140 (varYVals -> vecVal . varYVals .)
    <               reduce using rule 140 (varYVals -> vecVal . varYVals .)
    ,               reduce using rule 140 (varYVals -> vecVal . varYVals .)
    ]               reduce using rule 140 (varYVals -> vecVal . varYVals .)
    ;               reduce using rule 140 (varYVals -> vecVal . varYVals .)
    :               reduce using rule 140 (varYVals -> vecVal . varYVals .)
    }               reduce using rule 140 (varYVals -> vecVal . varYVals .)
    MULEQ           reduce using rule 140 (varYVals -> vecVal . varYVals .)
    DIVEQ           reduce using rule 140 (varYVals -> vecVal . varYVals .)
    MASEQ           reduce using rule 140 (varYVals -> vecVal . varYVals .)
    MENOSEQ         reduce using rule 140 (varYVals -> vecVal . varYVals .)
    =               reduce using rule 140 (varYVals -> vecVal . varYVals .)


state 125

    (75) expresion -> ternario .

    ]               reduce using rule 75 (expresion -> ternario .)


state 126

    (77) expresion -> RES .

    ]               reduce using rule 77 (expresion -> RES .)


state 127

    (70) expresion -> STRING .
    (159) valoresMat -> STRING .

    ]               reduce using rule 70 (expresion -> STRING .)
    +               reduce using rule 159 (valoresMat -> STRING .)
    -               reduce using rule 159 (valoresMat -> STRING .)
    *               reduce using rule 159 (valoresMat -> STRING .)
    /               reduce using rule 159 (valoresMat -> STRING .)
    %               reduce using rule 159 (valoresMat -> STRING .)
    ^               reduce using rule 159 (valoresMat -> STRING .)


state 128

    (65) expresion -> eMat .
    (163) eMat -> eMat . + p
    (165) eMat -> eMat . + valoresMat
    (168) eMat -> eMat . - p
    (170) eMat -> eMat . - valoresMat
    (229) tCompareEQ -> eMat .
    (232) tCompare -> eMat .

    ]               reduce using rule 65 (expresion -> eMat .)
    +               shift and go to state 163
    -               shift and go to state 164
    EQEQ            reduce using rule 229 (tCompareEQ -> eMat .)
    DISTINTO        reduce using rule 229 (tCompareEQ -> eMat .)
    >               reduce using rule 232 (tCompare -> eMat .)
    <               reduce using rule 232 (tCompare -> eMat .)


state 129

    (74) expresion -> vec .
    (60) vecVal -> vec . [ expresion ]
    (63) vecVal -> vec . [ INT ]

    ]               reduce using rule 74 (expresion -> vec .)
    [               shift and go to state 113


state 130

    (68) expresion -> reg .
    (93) atributos -> reg . . valoresCampos

    ]               reduce using rule 68 (expresion -> reg .)
    .               shift and go to state 197


state 131

    (66) expresion -> expBool .
    (203) expBool -> expBool . OR and
    (205) expBool -> expBool . OR valoresBool
    (123) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (132) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars

    ]               reduce using rule 66 (expresion -> expBool .)
    OR              shift and go to state 198
    ?               shift and go to state 199


state 132

    (61) vecVal -> vecVal [ expresion . ]

    ]               shift and go to state 245


state 133

    (64) vecVal -> vecVal [ INT . ]
    (154) valoresMat -> INT .
    (226) tCompareEQ -> INT .
    (235) tCompare -> INT .

    ]               shift and go to state 246
    +               reduce using rule 154 (valoresMat -> INT .)
    -               reduce using rule 154 (valoresMat -> INT .)
    *               reduce using rule 154 (valoresMat -> INT .)
    /               reduce using rule 154 (valoresMat -> INT .)
    %               reduce using rule 154 (valoresMat -> INT .)
    ^               reduce using rule 154 (valoresMat -> INT .)
    EQEQ            reduce using rule 226 (tCompareEQ -> INT .)
    DISTINTO        reduce using rule 226 (tCompareEQ -> INT .)
    >               reduce using rule 235 (tCompare -> INT .)
    <               reduce using rule 235 (tCompare -> INT .)


state 134

    (67) expresion -> funcReturn .

    ]               reduce using rule 67 (expresion -> funcReturn .)


state 135

    (69) expresion -> FLOAT .
    (155) valoresMat -> FLOAT .
    (227) tCompareEQ -> FLOAT .
    (237) tCompare -> FLOAT .

    ]               reduce using rule 69 (expresion -> FLOAT .)
    +               reduce using rule 155 (valoresMat -> FLOAT .)
    -               reduce using rule 155 (valoresMat -> FLOAT .)
    *               reduce using rule 155 (valoresMat -> FLOAT .)
    /               reduce using rule 155 (valoresMat -> FLOAT .)
    %               reduce using rule 155 (valoresMat -> FLOAT .)
    ^               reduce using rule 155 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 227 (tCompareEQ -> FLOAT .)
    DISTINTO        reduce using rule 227 (tCompareEQ -> FLOAT .)
    >               reduce using rule 237 (tCompare -> FLOAT .)
    <               reduce using rule 237 (tCompare -> FLOAT .)


state 136

    (71) expresion -> BOOL .
    (197) valoresBool -> BOOL .
    (222) tCompareEQ -> BOOL .

    ]               reduce using rule 71 (expresion -> BOOL .)
    OR              reduce using rule 197 (valoresBool -> BOOL .)
    AND             reduce using rule 197 (valoresBool -> BOOL .)
    ?               reduce using rule 197 (valoresBool -> BOOL .)
    EQEQ            reduce using rule 222 (tCompareEQ -> BOOL .)
    DISTINTO        reduce using rule 222 (tCompareEQ -> BOOL .)


state 137

    (73) expresion -> varsOps .
    (161) valoresMat -> varsOps .
    (200) valoresBool -> varsOps .
    (225) tCompareEQ -> varsOps .
    (233) tCompare -> varsOps .

    ]               reduce using rule 73 (expresion -> varsOps .)
    +               reduce using rule 161 (valoresMat -> varsOps .)
    -               reduce using rule 161 (valoresMat -> varsOps .)
    *               reduce using rule 161 (valoresMat -> varsOps .)
    /               reduce using rule 161 (valoresMat -> varsOps .)
    %               reduce using rule 161 (valoresMat -> varsOps .)
    ^               reduce using rule 161 (valoresMat -> varsOps .)
    OR              reduce using rule 200 (valoresBool -> varsOps .)
    AND             reduce using rule 200 (valoresBool -> varsOps .)
    ?               reduce using rule 200 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 225 (tCompareEQ -> varsOps .)
    DISTINTO        reduce using rule 225 (tCompareEQ -> varsOps .)
    >               reduce using rule 233 (tCompare -> varsOps .)
    <               reduce using rule 233 (tCompare -> varsOps .)


state 138

    (72) expresion -> varYVals .
    (146) varsOps -> varYVals . MASMAS
    (147) varsOps -> varYVals . MENOSMENOS
    (160) valoresMat -> varYVals .
    (199) valoresBool -> varYVals .
    (224) tCompareEQ -> varYVals .
    (234) tCompare -> varYVals .

    ]               reduce using rule 72 (expresion -> varYVals .)
    MASMAS          shift and go to state 51
    MENOSMENOS      shift and go to state 48
    +               reduce using rule 160 (valoresMat -> varYVals .)
    -               reduce using rule 160 (valoresMat -> varYVals .)
    *               reduce using rule 160 (valoresMat -> varYVals .)
    /               reduce using rule 160 (valoresMat -> varYVals .)
    %               reduce using rule 160 (valoresMat -> varYVals .)
    ^               reduce using rule 160 (valoresMat -> varYVals .)
    OR              reduce using rule 199 (valoresBool -> varYVals .)
    AND             reduce using rule 199 (valoresBool -> varYVals .)
    ?               reduce using rule 199 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 224 (tCompareEQ -> varYVals .)
    DISTINTO        reduce using rule 224 (tCompareEQ -> varYVals .)
    >               reduce using rule 234 (tCompare -> varYVals .)
    <               reduce using rule 234 (tCompare -> varYVals .)


state 139

    (76) expresion -> atributos .
    (157) valoresMat -> atributos .

    ]               reduce using rule 76 (expresion -> atributos .)
    +               reduce using rule 157 (valoresMat -> atributos .)
    -               reduce using rule 157 (valoresMat -> atributos .)
    *               reduce using rule 157 (valoresMat -> atributos .)
    /               reduce using rule 157 (valoresMat -> atributos .)
    %               reduce using rule 157 (valoresMat -> atributos .)
    ^               reduce using rule 157 (valoresMat -> atributos .)


state 140

    (151) varAsig -> varYVals MENOSEQ valores .

    ;               reduce using rule 151 (varAsig -> varYVals MENOSEQ valores .)
    )               reduce using rule 151 (varAsig -> varYVals MENOSEQ valores .)


state 141

    (150) varAsig -> varYVals MASEQ valores .

    ;               reduce using rule 150 (varAsig -> varYVals MASEQ valores .)
    )               reduce using rule 150 (varAsig -> varYVals MASEQ valores .)


state 142

    (152) varAsig -> varYVals = valores .

    ;               reduce using rule 152 (varAsig -> varYVals = valores .)
    )               reduce using rule 152 (varAsig -> varYVals = valores .)


state 143

    (148) varAsig -> varYVals MULEQ valores .

    ;               reduce using rule 148 (varAsig -> varYVals MULEQ valores .)
    )               reduce using rule 148 (varAsig -> varYVals MULEQ valores .)


state 144

    (149) varAsig -> varYVals DIVEQ valores .

    ;               reduce using rule 149 (varAsig -> varYVals DIVEQ valores .)
    )               reduce using rule 149 (varAsig -> varYVals DIVEQ valores .)


state 145

    (34) loop -> FOR ( primParam . ; valores ; tercerParam )

    ;               shift and go to state 247


state 146

    (35) primParam -> varAsig .

    ;               reduce using rule 35 (primParam -> varAsig .)


state 147

    (36) primParam -> empty .

    ;               reduce using rule 36 (primParam -> empty .)


state 148

    (148) varAsig -> varYVals . MULEQ valores
    (149) varAsig -> varYVals . DIVEQ valores
    (150) varAsig -> varYVals . MASEQ valores
    (151) varAsig -> varYVals . MENOSEQ valores
    (152) varAsig -> varYVals . = valores

    MULEQ           shift and go to state 52
    DIVEQ           shift and go to state 53
    MASEQ           shift and go to state 49
    MENOSEQ         shift and go to state 47
    =               shift and go to state 50


state 149

    (49) funcInt -> LENGTH ( valores . )

    )               shift and go to state 248


state 150

    (208) and -> and AND . eq
    (210) and -> and AND . valoresBool
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (51) funcBool -> . COLINEALES ( valores , valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (56) vec -> . [ elem ]
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (246) parenBool -> . ( expBool )
    (141) reg -> . { campos }
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )

    BOOL            shift and go to state 182
    (               shift and go to state 223
    AND             reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    ?               reduce using rule 202 (valoresBool -> .)
    ,               reduce using rule 202 (valoresBool -> .)
    ]               reduce using rule 202 (valoresBool -> .)
    )               reduce using rule 202 (valoresBool -> .)
    ;               reduce using rule 202 (valoresBool -> .)
    :               reduce using rule 202 (valoresBool -> .)
    }               reduce using rule 202 (valoresBool -> .)
    INT             shift and go to state 226
    FLOAT           shift and go to state 227
    COLINEALES      shift and go to state 4
    ID              shift and go to state 224
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    STRING          shift and go to state 176
    NOT             shift and go to state 97
    [               shift and go to state 20
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75

    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 220
    menor                          shift and go to state 66
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 249
    mayor                          shift and go to state 79
    valoresBool                    shift and go to state 250
    eMat                           shift and go to state 222
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 228
    exp                            shift and go to state 98
    varYVals                       shift and go to state 251
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 186

state 151

    (57) elem -> valores , . elem
    (57) elem -> . valores , elem
    (58) elem -> . valores
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (141) reg -> . { campos }
    (97) ternario -> . ternarioMat
    (98) ternario -> . ternarioBool
    (99) ternario -> . ( ternarioMat )
    (100) ternario -> . ( ternarioBool )
    (101) ternario -> . ternarioVars
    (102) ternario -> . ( ternarioVars )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 90
    FLOAT           shift and go to state 92
    STRING          shift and go to state 70
    BOOL            shift and go to state 95
    RES             shift and go to state 63
    ID              shift and go to state 88
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 99
    (               shift and go to state 74
    [               shift and go to state 20
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    ?               reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    elem                           shift and go to state 252
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 71
    eMat                           shift and go to state 72
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 77
    vec                            shift and go to state 78
    paren                          shift and go to state 86
    reg                            shift and go to state 80
    expBool                        shift and go to state 81
    ternarioBool                   shift and go to state 82
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 89
    funcReturn                     shift and go to state 91
    valores                        shift and go to state 65
    p                              shift and go to state 94
    varsOps                        shift and go to state 96
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 67
    varYVals                       shift and go to state 100
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 101

state 152

    (177) p -> valoresMat % . exp
    (183) p -> valoresMat % . valoresMat
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (56) vec -> . [ elem ]

    INT             shift and go to state 192
    FLOAT           shift and go to state 191
    STRING          shift and go to state 176
    (               shift and go to state 254
    -               shift and go to state 76
    +               shift and go to state 75
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 99
    [               shift and go to state 20

    valoresMat                     shift and go to state 253
    funcString                     shift and go to state 179
    funcInt                        shift and go to state 187
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33
    iSing                          shift and go to state 83
    exp                            shift and go to state 255
    paren                          shift and go to state 86
    varYVals                       shift and go to state 194
    reg                            shift and go to state 175
    atributos                      shift and go to state 186
    varsOps                        shift and go to state 193

state 153

    (164) eMat -> valoresMat + . p
    (166) eMat -> valoresMat + . valoresMat
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (56) vec -> . [ elem ]

    INT             shift and go to state 192
    FLOAT           shift and go to state 191
    STRING          shift and go to state 176
    (               shift and go to state 254
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    -               shift and go to state 76
    +               shift and go to state 75
    {               shift and go to state 99
    [               shift and go to state 20

    valoresMat                     shift and go to state 256
    funcString                     shift and go to state 179
    funcInt                        shift and go to state 187
    p                              shift and go to state 257
    vec                            shift and go to state 33
    varsOps                        shift and go to state 193
    exp                            shift and go to state 98
    vecVal                         shift and go to state 8
    paren                          shift and go to state 86
    varYVals                       shift and go to state 194
    reg                            shift and go to state 175
    atributos                      shift and go to state 186
    iSing                          shift and go to state 83

state 154

    (175) p -> valoresMat * . exp
    (181) p -> valoresMat * . valoresMat
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (56) vec -> . [ elem ]

    INT             shift and go to state 192
    FLOAT           shift and go to state 191
    STRING          shift and go to state 176
    (               shift and go to state 254
    -               shift and go to state 76
    +               shift and go to state 75
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 99
    [               shift and go to state 20

    valoresMat                     shift and go to state 258
    funcString                     shift and go to state 179
    funcInt                        shift and go to state 187
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33
    iSing                          shift and go to state 83
    exp                            shift and go to state 259
    paren                          shift and go to state 86
    varYVals                       shift and go to state 194
    reg                            shift and go to state 175
    atributos                      shift and go to state 186
    varsOps                        shift and go to state 193

state 155

    (169) eMat -> valoresMat - . p
    (171) eMat -> valoresMat - . valoresMat
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (56) vec -> . [ elem ]

    INT             shift and go to state 192
    FLOAT           shift and go to state 191
    STRING          shift and go to state 176
    (               shift and go to state 254
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    -               shift and go to state 76
    +               shift and go to state 75
    {               shift and go to state 99
    [               shift and go to state 20

    valoresMat                     shift and go to state 260
    funcString                     shift and go to state 179
    funcInt                        shift and go to state 187
    p                              shift and go to state 261
    vec                            shift and go to state 33
    varsOps                        shift and go to state 193
    exp                            shift and go to state 98
    vecVal                         shift and go to state 8
    paren                          shift and go to state 86
    varYVals                       shift and go to state 194
    reg                            shift and go to state 175
    atributos                      shift and go to state 186
    iSing                          shift and go to state 83

state 156

    (176) p -> valoresMat / . exp
    (182) p -> valoresMat / . valoresMat
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (56) vec -> . [ elem ]

    INT             shift and go to state 192
    FLOAT           shift and go to state 191
    STRING          shift and go to state 176
    (               shift and go to state 254
    -               shift and go to state 76
    +               shift and go to state 75
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 99
    [               shift and go to state 20

    valoresMat                     shift and go to state 262
    funcString                     shift and go to state 179
    funcInt                        shift and go to state 187
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33
    iSing                          shift and go to state 83
    exp                            shift and go to state 263
    paren                          shift and go to state 86
    varYVals                       shift and go to state 194
    reg                            shift and go to state 175
    atributos                      shift and go to state 186
    varsOps                        shift and go to state 193

state 157

    (186) exp -> valoresMat ^ . iSing
    (188) exp -> valoresMat ^ . valoresMat
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (56) vec -> . [ elem ]

    -               shift and go to state 76
    +               shift and go to state 75
    INT             shift and go to state 192
    FLOAT           shift and go to state 191
    STRING          shift and go to state 176
    (               shift and go to state 254
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 99
    [               shift and go to state 20

    funcString                     shift and go to state 179
    funcInt                        shift and go to state 187
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33
    iSing                          shift and go to state 265
    valoresMat                     shift and go to state 264
    paren                          shift and go to state 86
    varYVals                       shift and go to state 194
    reg                            shift and go to state 175
    atributos                      shift and go to state 186
    varsOps                        shift and go to state 193

state 158

    (213) eq -> eq EQEQ . mayor
    (217) eq -> eq EQEQ . tCompareEQ
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (51) funcBool -> . COLINEALES ( valores , valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (246) parenBool -> . ( expBool )
    (56) vec -> . [ elem ]
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (141) reg -> . { campos }
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )

    BOOL            shift and go to state 271
    INT             shift and go to state 226
    FLOAT           shift and go to state 227
    (               shift and go to state 269
    COLINEALES      shift and go to state 4
    ID              shift and go to state 224
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    NOT             shift and go to state 97
    STRING          shift and go to state 176
    [               shift and go to state 20
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75

    funcBool                       shift and go to state 266
    funcInt                        shift and go to state 220
    menor                          shift and go to state 66
    valoresMat                     shift and go to state 68
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 268
    tCompareEQ                     shift and go to state 270
    mayor                          shift and go to state 267
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 272
    exp                            shift and go to state 98
    varYVals                       shift and go to state 273
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 186

state 159

    (214) eq -> eq DISTINTO . mayor
    (218) eq -> eq DISTINTO . tCompareEQ
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (51) funcBool -> . COLINEALES ( valores , valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (246) parenBool -> . ( expBool )
    (56) vec -> . [ elem ]
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (141) reg -> . { campos }
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )

    BOOL            shift and go to state 271
    INT             shift and go to state 226
    FLOAT           shift and go to state 227
    (               shift and go to state 269
    COLINEALES      shift and go to state 4
    ID              shift and go to state 224
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    NOT             shift and go to state 97
    STRING          shift and go to state 176
    [               shift and go to state 20
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75

    funcBool                       shift and go to state 266
    funcInt                        shift and go to state 220
    menor                          shift and go to state 66
    valoresMat                     shift and go to state 68
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 268
    tCompareEQ                     shift and go to state 275
    mayor                          shift and go to state 274
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 272
    exp                            shift and go to state 98
    varYVals                       shift and go to state 273
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 186

state 160

    (209) and -> valoresBool AND . eq
    (211) and -> valoresBool AND . valoresBool
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (51) funcBool -> . COLINEALES ( valores , valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (56) vec -> . [ elem ]
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (246) parenBool -> . ( expBool )
    (141) reg -> . { campos }
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )

    BOOL            shift and go to state 182
    (               shift and go to state 223
    AND             reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    ?               reduce using rule 202 (valoresBool -> .)
    ,               reduce using rule 202 (valoresBool -> .)
    ]               reduce using rule 202 (valoresBool -> .)
    )               reduce using rule 202 (valoresBool -> .)
    ;               reduce using rule 202 (valoresBool -> .)
    :               reduce using rule 202 (valoresBool -> .)
    }               reduce using rule 202 (valoresBool -> .)
    INT             shift and go to state 226
    FLOAT           shift and go to state 227
    COLINEALES      shift and go to state 4
    ID              shift and go to state 224
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    STRING          shift and go to state 176
    NOT             shift and go to state 97
    [               shift and go to state 20
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75

    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 220
    menor                          shift and go to state 66
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 276
    mayor                          shift and go to state 79
    valoresBool                    shift and go to state 277
    eMat                           shift and go to state 222
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 228
    exp                            shift and go to state 98
    varYVals                       shift and go to state 251
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 186

state 161

    (204) expBool -> valoresBool OR . and
    (206) expBool -> valoresBool OR . valoresBool
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (51) funcBool -> . COLINEALES ( valores , valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (56) vec -> . [ elem ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (246) parenBool -> . ( expBool )
    (141) reg -> . { campos }
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )

    BOOL            shift and go to state 182
    (               shift and go to state 223
    AND             reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    ?               reduce using rule 202 (valoresBool -> .)
    ,               reduce using rule 202 (valoresBool -> .)
    ]               reduce using rule 202 (valoresBool -> .)
    )               reduce using rule 202 (valoresBool -> .)
    ;               reduce using rule 202 (valoresBool -> .)
    :               reduce using rule 202 (valoresBool -> .)
    }               reduce using rule 202 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 224
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    INT             shift and go to state 226
    FLOAT           shift and go to state 227
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    [               shift and go to state 20
    STRING          shift and go to state 176
    NOT             shift and go to state 97
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75

    and                            shift and go to state 278
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 220
    menor                          shift and go to state 66
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    mayor                          shift and go to state 79
    valoresBool                    shift and go to state 279
    eMat                           shift and go to state 222
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 228
    exp                            shift and go to state 98
    varYVals                       shift and go to state 229
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 186

state 162

    (122) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (103) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (124) valoresTernarioMat -> . INT
    (125) valoresTernarioMat -> . FLOAT
    (126) valoresTernarioMat -> . funcInt
    (127) valoresTernarioMat -> . STRING
    (128) valoresTernarioMat -> . eMat
    (129) valoresTernarioMat -> . ternarioMat
    (130) valoresTernarioMat -> . ( ternarioMat )
    (133) valoresTernarioBool -> . BOOL
    (134) valoresTernarioBool -> . funcBool
    (135) valoresTernarioBool -> . ternarioBool
    (136) valoresTernarioBool -> . ( ternarioBool )
    (137) valoresTernarioBool -> . expBool
    (113) valoresTernarioVars -> . reg
    (114) valoresTernarioVars -> . vec
    (115) valoresTernarioVars -> . ternarioVars
    (116) valoresTernarioVars -> . ( ternarioVars )
    (117) valoresTernarioVars -> . atributos
    (118) valoresTernarioVars -> . varsOps
    (119) valoresTernarioVars -> . varYVals
    (120) valoresTernarioVars -> . res
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (141) reg -> . { campos }
    (56) vec -> . [ elem ]
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (121) res -> . RES
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 295
    FLOAT           shift and go to state 296
    STRING          shift and go to state 292
    (               shift and go to state 299
    BOOL            shift and go to state 297
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    {               shift and go to state 99
    [               shift and go to state 20
    ID              shift and go to state 178
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 282
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 281
    funcInt                        shift and go to state 283
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 284
    eMat                           shift and go to state 285
    tCompareEQ                     shift and go to state 73
    valoresTernarioBool            shift and go to state 286
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 287
    vec                            shift and go to state 288
    paren                          shift and go to state 86
    reg                            shift and go to state 290
    valoresTernarioVars            shift and go to state 291
    expBool                        shift and go to state 298
    ternarioBool                   shift and go to state 293
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    valoresTernarioMat             shift and go to state 294
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 289
    res                            shift and go to state 280
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 300
    varYVals                       shift and go to state 301
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 302

state 163

    (163) eMat -> eMat + . p
    (165) eMat -> eMat + . valoresMat
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (56) vec -> . [ elem ]

    INT             shift and go to state 192
    FLOAT           shift and go to state 191
    STRING          shift and go to state 176
    (               shift and go to state 254
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    -               shift and go to state 76
    +               shift and go to state 75
    {               shift and go to state 99
    [               shift and go to state 20

    valoresMat                     shift and go to state 303
    funcString                     shift and go to state 179
    funcInt                        shift and go to state 187
    p                              shift and go to state 304
    vec                            shift and go to state 33
    varsOps                        shift and go to state 193
    exp                            shift and go to state 98
    vecVal                         shift and go to state 8
    paren                          shift and go to state 86
    varYVals                       shift and go to state 194
    reg                            shift and go to state 175
    atributos                      shift and go to state 186
    iSing                          shift and go to state 83

state 164

    (168) eMat -> eMat - . p
    (170) eMat -> eMat - . valoresMat
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (56) vec -> . [ elem ]

    INT             shift and go to state 192
    FLOAT           shift and go to state 191
    STRING          shift and go to state 176
    (               shift and go to state 254
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    -               shift and go to state 76
    +               shift and go to state 75
    {               shift and go to state 99
    [               shift and go to state 20

    valoresMat                     shift and go to state 305
    funcString                     shift and go to state 179
    funcInt                        shift and go to state 187
    p                              shift and go to state 306
    vec                            shift and go to state 33
    varsOps                        shift and go to state 193
    exp                            shift and go to state 98
    vecVal                         shift and go to state 8
    paren                          shift and go to state 86
    varYVals                       shift and go to state 194
    reg                            shift and go to state 175
    atributos                      shift and go to state 186
    iSing                          shift and go to state 83

state 165

    (215) eq -> tCompareEQ EQEQ . mayor
    (219) eq -> tCompareEQ EQEQ . tCompareEQ
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (51) funcBool -> . COLINEALES ( valores , valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (246) parenBool -> . ( expBool )
    (56) vec -> . [ elem ]
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (141) reg -> . { campos }
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )

    BOOL            shift and go to state 271
    INT             shift and go to state 226
    FLOAT           shift and go to state 227
    (               shift and go to state 269
    COLINEALES      shift and go to state 4
    ID              shift and go to state 224
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    NOT             shift and go to state 97
    STRING          shift and go to state 176
    [               shift and go to state 20
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75

    funcBool                       shift and go to state 266
    funcInt                        shift and go to state 220
    menor                          shift and go to state 66
    valoresMat                     shift and go to state 68
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 268
    tCompareEQ                     shift and go to state 308
    mayor                          shift and go to state 307
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 272
    exp                            shift and go to state 98
    varYVals                       shift and go to state 273
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 186

state 166

    (216) eq -> tCompareEQ DISTINTO . mayor
    (220) eq -> tCompareEQ DISTINTO . tCompareEQ
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (51) funcBool -> . COLINEALES ( valores , valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (246) parenBool -> . ( expBool )
    (56) vec -> . [ elem ]
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (141) reg -> . { campos }
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )

    BOOL            shift and go to state 271
    INT             shift and go to state 226
    FLOAT           shift and go to state 227
    (               shift and go to state 269
    COLINEALES      shift and go to state 4
    ID              shift and go to state 224
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    NOT             shift and go to state 97
    STRING          shift and go to state 176
    [               shift and go to state 20
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75

    funcBool                       shift and go to state 266
    funcInt                        shift and go to state 220
    menor                          shift and go to state 66
    valoresMat                     shift and go to state 68
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 268
    tCompareEQ                     shift and go to state 310
    mayor                          shift and go to state 309
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 272
    exp                            shift and go to state 98
    varYVals                       shift and go to state 273
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 186

state 167

    (198) valoresBool -> funcBool .
    (223) tCompareEQ -> funcBool .

    ?               reduce using rule 198 (valoresBool -> funcBool .)
    OR              reduce using rule 198 (valoresBool -> funcBool .)
    AND             reduce using rule 198 (valoresBool -> funcBool .)
    ,               reduce using rule 198 (valoresBool -> funcBool .)
    ]               reduce using rule 198 (valoresBool -> funcBool .)
    )               reduce using rule 198 (valoresBool -> funcBool .)
    ;               reduce using rule 198 (valoresBool -> funcBool .)
    :               reduce using rule 198 (valoresBool -> funcBool .)
    }               reduce using rule 198 (valoresBool -> funcBool .)
    EQEQ            reduce using rule 223 (tCompareEQ -> funcBool .)
    DISTINTO        reduce using rule 223 (tCompareEQ -> funcBool .)


state 168

    (156) valoresMat -> funcInt .
    (228) tCompareEQ -> funcInt .
    (236) tCompare -> funcInt .

    )               reduce using rule 156 (valoresMat -> funcInt .)
    +               reduce using rule 156 (valoresMat -> funcInt .)
    -               reduce using rule 156 (valoresMat -> funcInt .)
    *               reduce using rule 156 (valoresMat -> funcInt .)
    /               reduce using rule 156 (valoresMat -> funcInt .)
    %               reduce using rule 156 (valoresMat -> funcInt .)
    ^               reduce using rule 156 (valoresMat -> funcInt .)
    EQEQ            reduce using rule 228 (tCompareEQ -> funcInt .)
    DISTINTO        reduce using rule 228 (tCompareEQ -> funcInt .)
    >               reduce using rule 236 (tCompare -> funcInt .)
    <               reduce using rule 236 (tCompare -> funcInt .)


state 169

    (196) paren -> ( valoresMat . )
    (164) eMat -> valoresMat . + p
    (166) eMat -> valoresMat . + valoresMat
    (169) eMat -> valoresMat . - p
    (171) eMat -> valoresMat . - valoresMat
    (175) p -> valoresMat . * exp
    (176) p -> valoresMat . / exp
    (177) p -> valoresMat . % exp
    (181) p -> valoresMat . * valoresMat
    (182) p -> valoresMat . / valoresMat
    (183) p -> valoresMat . % valoresMat
    (186) exp -> valoresMat . ^ iSing
    (188) exp -> valoresMat . ^ valoresMat

    )               shift and go to state 311
    +               shift and go to state 153
    -               shift and go to state 155
    *               shift and go to state 154
    /               shift and go to state 156
    %               shift and go to state 152
    ^               shift and go to state 157


state 170

    (122) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (204) expBool -> valoresBool . OR and
    (206) expBool -> valoresBool . OR valoresBool
    (209) and -> valoresBool . AND eq
    (211) and -> valoresBool . AND valoresBool

    ?               shift and go to state 162
    OR              shift and go to state 161
    AND             shift and go to state 160


state 171

    (195) paren -> ( eMat . )
    (163) eMat -> eMat . + p
    (165) eMat -> eMat . + valoresMat
    (168) eMat -> eMat . - p
    (170) eMat -> eMat . - valoresMat
    (229) tCompareEQ -> eMat .
    (232) tCompare -> eMat .

    )               shift and go to state 312
    +               shift and go to state 163
    -               shift and go to state 164
    EQEQ            reduce using rule 229 (tCompareEQ -> eMat .)
    DISTINTO        reduce using rule 229 (tCompareEQ -> eMat .)
    >               reduce using rule 232 (tCompare -> eMat .)
    <               reduce using rule 232 (tCompare -> eMat .)


state 172

    (162) valoresMat -> ( . ternarioMat )
    (201) valoresBool -> ( . ternarioBool )
    (230) tCompareEQ -> ( . ternarioBool )
    (231) tCompareEQ -> ( . ternarioMat )
    (195) paren -> ( . eMat )
    (196) paren -> ( . valoresMat )
    (238) tCompare -> ( . ternarioMat )
    (246) parenBool -> ( . expBool )
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (56) vec -> . [ elem ]
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 180
    FLOAT           shift and go to state 181
    STRING          shift and go to state 176
    (               shift and go to state 172
    BOOL            shift and go to state 182
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75
    [               shift and go to state 20
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 168
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 169
    eq                             shift and go to state 69
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 171
    tCompareEQ                     shift and go to state 73
    valoresBool                    shift and go to state 313
    ternarioMat                    shift and go to state 314
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    varsOps                        shift and go to state 174
    exp                            shift and go to state 98
    ternarioBool                   shift and go to state 315
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    expBool                        shift and go to state 316
    varYVals                       shift and go to state 185
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 186

state 173

    (99) ternario -> ( ternarioMat . )
    (162) valoresMat -> ( ternarioMat . )
    (231) tCompareEQ -> ( ternarioMat . )
    (238) tCompare -> ( ternarioMat . )

    )               shift and go to state 317


state 174

    (161) valoresMat -> varsOps .
    (200) valoresBool -> varsOps .
    (225) tCompareEQ -> varsOps .
    (233) tCompare -> varsOps .

    )               reduce using rule 161 (valoresMat -> varsOps .)
    +               reduce using rule 161 (valoresMat -> varsOps .)
    -               reduce using rule 161 (valoresMat -> varsOps .)
    *               reduce using rule 161 (valoresMat -> varsOps .)
    /               reduce using rule 161 (valoresMat -> varsOps .)
    %               reduce using rule 161 (valoresMat -> varsOps .)
    ^               reduce using rule 161 (valoresMat -> varsOps .)
    ?               reduce using rule 200 (valoresBool -> varsOps .)
    OR              reduce using rule 200 (valoresBool -> varsOps .)
    AND             reduce using rule 200 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 225 (tCompareEQ -> varsOps .)
    DISTINTO        reduce using rule 225 (tCompareEQ -> varsOps .)
    >               reduce using rule 233 (tCompare -> varsOps .)
    <               reduce using rule 233 (tCompare -> varsOps .)


state 175

    (93) atributos -> reg . . valoresCampos

    .               shift and go to state 197


state 176

    (159) valoresMat -> STRING .

    ^               reduce using rule 159 (valoresMat -> STRING .)
    *               reduce using rule 159 (valoresMat -> STRING .)
    /               reduce using rule 159 (valoresMat -> STRING .)
    %               reduce using rule 159 (valoresMat -> STRING .)
    +               reduce using rule 159 (valoresMat -> STRING .)
    -               reduce using rule 159 (valoresMat -> STRING .)
    ,               reduce using rule 159 (valoresMat -> STRING .)
    ]               reduce using rule 159 (valoresMat -> STRING .)
    EQEQ            reduce using rule 159 (valoresMat -> STRING .)
    DISTINTO        reduce using rule 159 (valoresMat -> STRING .)
    >               reduce using rule 159 (valoresMat -> STRING .)
    <               reduce using rule 159 (valoresMat -> STRING .)
    )               reduce using rule 159 (valoresMat -> STRING .)
    ;               reduce using rule 159 (valoresMat -> STRING .)
    AND             reduce using rule 159 (valoresMat -> STRING .)
    OR              reduce using rule 159 (valoresMat -> STRING .)
    ?               reduce using rule 159 (valoresMat -> STRING .)
    :               reduce using rule 159 (valoresMat -> STRING .)
    }               reduce using rule 159 (valoresMat -> STRING .)


state 177

    (100) ternario -> ( ternarioBool . )
    (201) valoresBool -> ( ternarioBool . )
    (230) tCompareEQ -> ( ternarioBool . )

    )               shift and go to state 318


state 178

    (92) atributos -> ID . . valoresCampos
    (138) varYVals -> ID .
    (59) vecVal -> ID . [ expresion ]
    (62) vecVal -> ID . [ INT ]

    .               shift and go to state 202
    MASMAS          reduce using rule 138 (varYVals -> ID .)
    MENOSMENOS      reduce using rule 138 (varYVals -> ID .)
    )               reduce using rule 138 (varYVals -> ID .)
    +               reduce using rule 138 (varYVals -> ID .)
    -               reduce using rule 138 (varYVals -> ID .)
    *               reduce using rule 138 (varYVals -> ID .)
    /               reduce using rule 138 (varYVals -> ID .)
    %               reduce using rule 138 (varYVals -> ID .)
    ^               reduce using rule 138 (varYVals -> ID .)
    ?               reduce using rule 138 (varYVals -> ID .)
    OR              reduce using rule 138 (varYVals -> ID .)
    AND             reduce using rule 138 (varYVals -> ID .)
    EQEQ            reduce using rule 138 (varYVals -> ID .)
    DISTINTO        reduce using rule 138 (varYVals -> ID .)
    >               reduce using rule 138 (varYVals -> ID .)
    <               reduce using rule 138 (varYVals -> ID .)
    ,               reduce using rule 138 (varYVals -> ID .)
    ]               reduce using rule 138 (varYVals -> ID .)
    ;               reduce using rule 138 (varYVals -> ID .)
    :               reduce using rule 138 (varYVals -> ID .)
    }               reduce using rule 138 (varYVals -> ID .)
    [               shift and go to state 103


state 179

    (158) valoresMat -> funcString .

    +               reduce using rule 158 (valoresMat -> funcString .)
    -               reduce using rule 158 (valoresMat -> funcString .)
    *               reduce using rule 158 (valoresMat -> funcString .)
    /               reduce using rule 158 (valoresMat -> funcString .)
    %               reduce using rule 158 (valoresMat -> funcString .)
    ^               reduce using rule 158 (valoresMat -> funcString .)
    ,               reduce using rule 158 (valoresMat -> funcString .)
    ]               reduce using rule 158 (valoresMat -> funcString .)
    EQEQ            reduce using rule 158 (valoresMat -> funcString .)
    DISTINTO        reduce using rule 158 (valoresMat -> funcString .)
    >               reduce using rule 158 (valoresMat -> funcString .)
    <               reduce using rule 158 (valoresMat -> funcString .)
    )               reduce using rule 158 (valoresMat -> funcString .)
    ;               reduce using rule 158 (valoresMat -> funcString .)
    AND             reduce using rule 158 (valoresMat -> funcString .)
    OR              reduce using rule 158 (valoresMat -> funcString .)
    ?               reduce using rule 158 (valoresMat -> funcString .)
    :               reduce using rule 158 (valoresMat -> funcString .)
    }               reduce using rule 158 (valoresMat -> funcString .)


state 180

    (154) valoresMat -> INT .
    (226) tCompareEQ -> INT .
    (235) tCompare -> INT .

    )               reduce using rule 154 (valoresMat -> INT .)
    +               reduce using rule 154 (valoresMat -> INT .)
    -               reduce using rule 154 (valoresMat -> INT .)
    *               reduce using rule 154 (valoresMat -> INT .)
    /               reduce using rule 154 (valoresMat -> INT .)
    %               reduce using rule 154 (valoresMat -> INT .)
    ^               reduce using rule 154 (valoresMat -> INT .)
    EQEQ            reduce using rule 226 (tCompareEQ -> INT .)
    DISTINTO        reduce using rule 226 (tCompareEQ -> INT .)
    >               reduce using rule 235 (tCompare -> INT .)
    <               reduce using rule 235 (tCompare -> INT .)


state 181

    (155) valoresMat -> FLOAT .
    (227) tCompareEQ -> FLOAT .
    (237) tCompare -> FLOAT .

    )               reduce using rule 155 (valoresMat -> FLOAT .)
    +               reduce using rule 155 (valoresMat -> FLOAT .)
    -               reduce using rule 155 (valoresMat -> FLOAT .)
    *               reduce using rule 155 (valoresMat -> FLOAT .)
    /               reduce using rule 155 (valoresMat -> FLOAT .)
    %               reduce using rule 155 (valoresMat -> FLOAT .)
    ^               reduce using rule 155 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 227 (tCompareEQ -> FLOAT .)
    DISTINTO        reduce using rule 227 (tCompareEQ -> FLOAT .)
    >               reduce using rule 237 (tCompare -> FLOAT .)
    <               reduce using rule 237 (tCompare -> FLOAT .)


state 182

    (197) valoresBool -> BOOL .
    (222) tCompareEQ -> BOOL .

    ?               reduce using rule 197 (valoresBool -> BOOL .)
    OR              reduce using rule 197 (valoresBool -> BOOL .)
    AND             reduce using rule 197 (valoresBool -> BOOL .)
    ,               reduce using rule 197 (valoresBool -> BOOL .)
    ]               reduce using rule 197 (valoresBool -> BOOL .)
    )               reduce using rule 197 (valoresBool -> BOOL .)
    ;               reduce using rule 197 (valoresBool -> BOOL .)
    :               reduce using rule 197 (valoresBool -> BOOL .)
    }               reduce using rule 197 (valoresBool -> BOOL .)
    EQEQ            reduce using rule 222 (tCompareEQ -> BOOL .)
    DISTINTO        reduce using rule 222 (tCompareEQ -> BOOL .)


state 183

    (246) parenBool -> ( expBool . )
    (123) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (132) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (203) expBool -> expBool . OR and
    (205) expBool -> expBool . OR valoresBool

    )               shift and go to state 319
    ?               shift and go to state 199
    OR              shift and go to state 198


state 184

    (102) ternario -> ( ternarioVars . )

    )               shift and go to state 320


state 185

    (160) valoresMat -> varYVals .
    (199) valoresBool -> varYVals .
    (146) varsOps -> varYVals . MASMAS
    (147) varsOps -> varYVals . MENOSMENOS
    (224) tCompareEQ -> varYVals .
    (234) tCompare -> varYVals .

    )               reduce using rule 160 (valoresMat -> varYVals .)
    +               reduce using rule 160 (valoresMat -> varYVals .)
    -               reduce using rule 160 (valoresMat -> varYVals .)
    *               reduce using rule 160 (valoresMat -> varYVals .)
    /               reduce using rule 160 (valoresMat -> varYVals .)
    %               reduce using rule 160 (valoresMat -> varYVals .)
    ^               reduce using rule 160 (valoresMat -> varYVals .)
    ?               reduce using rule 199 (valoresBool -> varYVals .)
    OR              reduce using rule 199 (valoresBool -> varYVals .)
    AND             reduce using rule 199 (valoresBool -> varYVals .)
    MASMAS          shift and go to state 51
    MENOSMENOS      shift and go to state 48
    EQEQ            reduce using rule 224 (tCompareEQ -> varYVals .)
    DISTINTO        reduce using rule 224 (tCompareEQ -> varYVals .)
    >               reduce using rule 234 (tCompare -> varYVals .)
    <               reduce using rule 234 (tCompare -> varYVals .)


state 186

    (157) valoresMat -> atributos .

    ^               reduce using rule 157 (valoresMat -> atributos .)
    *               reduce using rule 157 (valoresMat -> atributos .)
    /               reduce using rule 157 (valoresMat -> atributos .)
    %               reduce using rule 157 (valoresMat -> atributos .)
    +               reduce using rule 157 (valoresMat -> atributos .)
    -               reduce using rule 157 (valoresMat -> atributos .)
    ,               reduce using rule 157 (valoresMat -> atributos .)
    ]               reduce using rule 157 (valoresMat -> atributos .)
    EQEQ            reduce using rule 157 (valoresMat -> atributos .)
    DISTINTO        reduce using rule 157 (valoresMat -> atributos .)
    >               reduce using rule 157 (valoresMat -> atributos .)
    <               reduce using rule 157 (valoresMat -> atributos .)
    )               reduce using rule 157 (valoresMat -> atributos .)
    ;               reduce using rule 157 (valoresMat -> atributos .)
    AND             reduce using rule 157 (valoresMat -> atributos .)
    OR              reduce using rule 157 (valoresMat -> atributos .)
    ?               reduce using rule 157 (valoresMat -> atributos .)
    :               reduce using rule 157 (valoresMat -> atributos .)
    }               reduce using rule 157 (valoresMat -> atributos .)


state 187

    (156) valoresMat -> funcInt .

    ^               reduce using rule 156 (valoresMat -> funcInt .)
    *               reduce using rule 156 (valoresMat -> funcInt .)
    /               reduce using rule 156 (valoresMat -> funcInt .)
    %               reduce using rule 156 (valoresMat -> funcInt .)
    +               reduce using rule 156 (valoresMat -> funcInt .)
    -               reduce using rule 156 (valoresMat -> funcInt .)
    ,               reduce using rule 156 (valoresMat -> funcInt .)
    ]               reduce using rule 156 (valoresMat -> funcInt .)
    EQEQ            reduce using rule 156 (valoresMat -> funcInt .)
    DISTINTO        reduce using rule 156 (valoresMat -> funcInt .)
    >               reduce using rule 156 (valoresMat -> funcInt .)
    <               reduce using rule 156 (valoresMat -> funcInt .)
    )               reduce using rule 156 (valoresMat -> funcInt .)
    ;               reduce using rule 156 (valoresMat -> funcInt .)
    AND             reduce using rule 156 (valoresMat -> funcInt .)
    OR              reduce using rule 156 (valoresMat -> funcInt .)
    ?               reduce using rule 156 (valoresMat -> funcInt .)
    :               reduce using rule 156 (valoresMat -> funcInt .)
    }               reduce using rule 156 (valoresMat -> funcInt .)


state 188

    (193) iSing -> + valoresMat .

    ^               reduce using rule 193 (iSing -> + valoresMat .)
    *               reduce using rule 193 (iSing -> + valoresMat .)
    /               reduce using rule 193 (iSing -> + valoresMat .)
    %               reduce using rule 193 (iSing -> + valoresMat .)
    +               reduce using rule 193 (iSing -> + valoresMat .)
    -               reduce using rule 193 (iSing -> + valoresMat .)
    EQEQ            reduce using rule 193 (iSing -> + valoresMat .)
    DISTINTO        reduce using rule 193 (iSing -> + valoresMat .)
    >               reduce using rule 193 (iSing -> + valoresMat .)
    <               reduce using rule 193 (iSing -> + valoresMat .)
    ,               reduce using rule 193 (iSing -> + valoresMat .)
    ]               reduce using rule 193 (iSing -> + valoresMat .)
    )               reduce using rule 193 (iSing -> + valoresMat .)
    ;               reduce using rule 193 (iSing -> + valoresMat .)
    AND             reduce using rule 193 (iSing -> + valoresMat .)
    OR              reduce using rule 193 (iSing -> + valoresMat .)
    ?               reduce using rule 193 (iSing -> + valoresMat .)
    :               reduce using rule 193 (iSing -> + valoresMat .)
    }               reduce using rule 193 (iSing -> + valoresMat .)


state 189

    (195) paren -> ( . eMat )
    (196) paren -> ( . valoresMat )
    (162) valoresMat -> ( . ternarioMat )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (51) funcBool -> . COLINEALES ( valores , valores )
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (56) vec -> . [ elem ]
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 180
    FLOAT           shift and go to state 181
    STRING          shift and go to state 176
    (               shift and go to state 322
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    BOOL            shift and go to state 182
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    {               shift and go to state 99
    COLINEALES      shift and go to state 4
    -               shift and go to state 76
    +               shift and go to state 75
    [               shift and go to state 20
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 168
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 169
    eq                             shift and go to state 69
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 171
    tCompareEQ                     shift and go to state 73
    atributos                      shift and go to state 186
    valoresBool                    shift and go to state 321
    ternarioMat                    shift and go to state 323
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    iSing                          shift and go to state 83
    exp                            shift and go to state 98
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 174
    varYVals                       shift and go to state 324
    parenBool                      shift and go to state 84
    expBool                        shift and go to state 325

state 190

    (191) iSing -> + paren .

    ^               reduce using rule 191 (iSing -> + paren .)
    *               reduce using rule 191 (iSing -> + paren .)
    /               reduce using rule 191 (iSing -> + paren .)
    %               reduce using rule 191 (iSing -> + paren .)
    +               reduce using rule 191 (iSing -> + paren .)
    -               reduce using rule 191 (iSing -> + paren .)
    EQEQ            reduce using rule 191 (iSing -> + paren .)
    DISTINTO        reduce using rule 191 (iSing -> + paren .)
    >               reduce using rule 191 (iSing -> + paren .)
    <               reduce using rule 191 (iSing -> + paren .)
    ,               reduce using rule 191 (iSing -> + paren .)
    ]               reduce using rule 191 (iSing -> + paren .)
    )               reduce using rule 191 (iSing -> + paren .)
    ;               reduce using rule 191 (iSing -> + paren .)
    AND             reduce using rule 191 (iSing -> + paren .)
    OR              reduce using rule 191 (iSing -> + paren .)
    ?               reduce using rule 191 (iSing -> + paren .)
    :               reduce using rule 191 (iSing -> + paren .)
    }               reduce using rule 191 (iSing -> + paren .)


state 191

    (155) valoresMat -> FLOAT .

    ^               reduce using rule 155 (valoresMat -> FLOAT .)
    *               reduce using rule 155 (valoresMat -> FLOAT .)
    /               reduce using rule 155 (valoresMat -> FLOAT .)
    %               reduce using rule 155 (valoresMat -> FLOAT .)
    +               reduce using rule 155 (valoresMat -> FLOAT .)
    -               reduce using rule 155 (valoresMat -> FLOAT .)
    ,               reduce using rule 155 (valoresMat -> FLOAT .)
    ]               reduce using rule 155 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 155 (valoresMat -> FLOAT .)
    DISTINTO        reduce using rule 155 (valoresMat -> FLOAT .)
    >               reduce using rule 155 (valoresMat -> FLOAT .)
    <               reduce using rule 155 (valoresMat -> FLOAT .)
    )               reduce using rule 155 (valoresMat -> FLOAT .)
    ;               reduce using rule 155 (valoresMat -> FLOAT .)
    AND             reduce using rule 155 (valoresMat -> FLOAT .)
    OR              reduce using rule 155 (valoresMat -> FLOAT .)
    ?               reduce using rule 155 (valoresMat -> FLOAT .)
    :               reduce using rule 155 (valoresMat -> FLOAT .)
    }               reduce using rule 155 (valoresMat -> FLOAT .)


state 192

    (154) valoresMat -> INT .

    ^               reduce using rule 154 (valoresMat -> INT .)
    *               reduce using rule 154 (valoresMat -> INT .)
    /               reduce using rule 154 (valoresMat -> INT .)
    %               reduce using rule 154 (valoresMat -> INT .)
    +               reduce using rule 154 (valoresMat -> INT .)
    -               reduce using rule 154 (valoresMat -> INT .)
    ,               reduce using rule 154 (valoresMat -> INT .)
    ]               reduce using rule 154 (valoresMat -> INT .)
    EQEQ            reduce using rule 154 (valoresMat -> INT .)
    DISTINTO        reduce using rule 154 (valoresMat -> INT .)
    >               reduce using rule 154 (valoresMat -> INT .)
    <               reduce using rule 154 (valoresMat -> INT .)
    )               reduce using rule 154 (valoresMat -> INT .)
    ;               reduce using rule 154 (valoresMat -> INT .)
    AND             reduce using rule 154 (valoresMat -> INT .)
    OR              reduce using rule 154 (valoresMat -> INT .)
    ?               reduce using rule 154 (valoresMat -> INT .)
    :               reduce using rule 154 (valoresMat -> INT .)
    }               reduce using rule 154 (valoresMat -> INT .)


state 193

    (161) valoresMat -> varsOps .

    ^               reduce using rule 161 (valoresMat -> varsOps .)
    *               reduce using rule 161 (valoresMat -> varsOps .)
    /               reduce using rule 161 (valoresMat -> varsOps .)
    %               reduce using rule 161 (valoresMat -> varsOps .)
    +               reduce using rule 161 (valoresMat -> varsOps .)
    -               reduce using rule 161 (valoresMat -> varsOps .)
    ,               reduce using rule 161 (valoresMat -> varsOps .)
    ]               reduce using rule 161 (valoresMat -> varsOps .)
    EQEQ            reduce using rule 161 (valoresMat -> varsOps .)
    DISTINTO        reduce using rule 161 (valoresMat -> varsOps .)
    >               reduce using rule 161 (valoresMat -> varsOps .)
    <               reduce using rule 161 (valoresMat -> varsOps .)
    )               reduce using rule 161 (valoresMat -> varsOps .)
    ;               reduce using rule 161 (valoresMat -> varsOps .)
    AND             reduce using rule 161 (valoresMat -> varsOps .)
    OR              reduce using rule 161 (valoresMat -> varsOps .)
    ?               reduce using rule 161 (valoresMat -> varsOps .)
    :               reduce using rule 161 (valoresMat -> varsOps .)
    }               reduce using rule 161 (valoresMat -> varsOps .)


state 194

    (160) valoresMat -> varYVals .
    (146) varsOps -> varYVals . MASMAS
    (147) varsOps -> varYVals . MENOSMENOS

    ^               reduce using rule 160 (valoresMat -> varYVals .)
    *               reduce using rule 160 (valoresMat -> varYVals .)
    /               reduce using rule 160 (valoresMat -> varYVals .)
    %               reduce using rule 160 (valoresMat -> varYVals .)
    +               reduce using rule 160 (valoresMat -> varYVals .)
    -               reduce using rule 160 (valoresMat -> varYVals .)
    ,               reduce using rule 160 (valoresMat -> varYVals .)
    ]               reduce using rule 160 (valoresMat -> varYVals .)
    EQEQ            reduce using rule 160 (valoresMat -> varYVals .)
    DISTINTO        reduce using rule 160 (valoresMat -> varYVals .)
    >               reduce using rule 160 (valoresMat -> varYVals .)
    <               reduce using rule 160 (valoresMat -> varYVals .)
    )               reduce using rule 160 (valoresMat -> varYVals .)
    ;               reduce using rule 160 (valoresMat -> varYVals .)
    AND             reduce using rule 160 (valoresMat -> varYVals .)
    OR              reduce using rule 160 (valoresMat -> varYVals .)
    ?               reduce using rule 160 (valoresMat -> varYVals .)
    :               reduce using rule 160 (valoresMat -> varYVals .)
    }               reduce using rule 160 (valoresMat -> varYVals .)
    MASMAS          shift and go to state 51
    MENOSMENOS      shift and go to state 48


state 195

    (192) iSing -> - valoresMat .

    ^               reduce using rule 192 (iSing -> - valoresMat .)
    *               reduce using rule 192 (iSing -> - valoresMat .)
    /               reduce using rule 192 (iSing -> - valoresMat .)
    %               reduce using rule 192 (iSing -> - valoresMat .)
    +               reduce using rule 192 (iSing -> - valoresMat .)
    -               reduce using rule 192 (iSing -> - valoresMat .)
    EQEQ            reduce using rule 192 (iSing -> - valoresMat .)
    DISTINTO        reduce using rule 192 (iSing -> - valoresMat .)
    >               reduce using rule 192 (iSing -> - valoresMat .)
    <               reduce using rule 192 (iSing -> - valoresMat .)
    ,               reduce using rule 192 (iSing -> - valoresMat .)
    ]               reduce using rule 192 (iSing -> - valoresMat .)
    )               reduce using rule 192 (iSing -> - valoresMat .)
    ;               reduce using rule 192 (iSing -> - valoresMat .)
    AND             reduce using rule 192 (iSing -> - valoresMat .)
    OR              reduce using rule 192 (iSing -> - valoresMat .)
    ?               reduce using rule 192 (iSing -> - valoresMat .)
    :               reduce using rule 192 (iSing -> - valoresMat .)
    }               reduce using rule 192 (iSing -> - valoresMat .)


state 196

    (190) iSing -> - paren .

    ^               reduce using rule 190 (iSing -> - paren .)
    *               reduce using rule 190 (iSing -> - paren .)
    /               reduce using rule 190 (iSing -> - paren .)
    %               reduce using rule 190 (iSing -> - paren .)
    +               reduce using rule 190 (iSing -> - paren .)
    -               reduce using rule 190 (iSing -> - paren .)
    EQEQ            reduce using rule 190 (iSing -> - paren .)
    DISTINTO        reduce using rule 190 (iSing -> - paren .)
    >               reduce using rule 190 (iSing -> - paren .)
    <               reduce using rule 190 (iSing -> - paren .)
    ,               reduce using rule 190 (iSing -> - paren .)
    ]               reduce using rule 190 (iSing -> - paren .)
    )               reduce using rule 190 (iSing -> - paren .)
    ;               reduce using rule 190 (iSing -> - paren .)
    AND             reduce using rule 190 (iSing -> - paren .)
    OR              reduce using rule 190 (iSing -> - paren .)
    ?               reduce using rule 190 (iSing -> - paren .)
    :               reduce using rule 190 (iSing -> - paren .)
    }               reduce using rule 190 (iSing -> - paren .)


state 197

    (93) atributos -> reg . . valoresCampos
    (94) valoresCampos -> . varYVals
    (95) valoresCampos -> . END
    (96) valoresCampos -> . BEGIN
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (56) vec -> . [ elem ]

    END             shift and go to state 327
    BEGIN           shift and go to state 326
    ID              shift and go to state 56
    [               shift and go to state 20

    vecVal                         shift and go to state 8
    vec                            shift and go to state 33
    valoresCampos                  shift and go to state 328
    varYVals                       shift and go to state 329

state 198

    (203) expBool -> expBool OR . and
    (205) expBool -> expBool OR . valoresBool
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (51) funcBool -> . COLINEALES ( valores , valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (56) vec -> . [ elem ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (246) parenBool -> . ( expBool )
    (141) reg -> . { campos }
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )

    BOOL            shift and go to state 182
    (               shift and go to state 223
    AND             reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    ?               reduce using rule 202 (valoresBool -> .)
    ,               reduce using rule 202 (valoresBool -> .)
    ]               reduce using rule 202 (valoresBool -> .)
    )               reduce using rule 202 (valoresBool -> .)
    ;               reduce using rule 202 (valoresBool -> .)
    :               reduce using rule 202 (valoresBool -> .)
    }               reduce using rule 202 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 224
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    INT             shift and go to state 226
    FLOAT           shift and go to state 227
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    [               shift and go to state 20
    STRING          shift and go to state 176
    NOT             shift and go to state 97
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75

    and                            shift and go to state 330
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 220
    menor                          shift and go to state 66
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    mayor                          shift and go to state 79
    valoresBool                    shift and go to state 331
    eMat                           shift and go to state 222
    tCompareEQ                     shift and go to state 73
    atributos                      shift and go to state 186
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 228
    exp                            shift and go to state 98
    varYVals                       shift and go to state 229
    parenBool                      shift and go to state 84

state 199

    (123) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (132) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (124) valoresTernarioMat -> . INT
    (125) valoresTernarioMat -> . FLOAT
    (126) valoresTernarioMat -> . funcInt
    (127) valoresTernarioMat -> . STRING
    (128) valoresTernarioMat -> . eMat
    (129) valoresTernarioMat -> . ternarioMat
    (130) valoresTernarioMat -> . ( ternarioMat )
    (133) valoresTernarioBool -> . BOOL
    (134) valoresTernarioBool -> . funcBool
    (135) valoresTernarioBool -> . ternarioBool
    (136) valoresTernarioBool -> . ( ternarioBool )
    (137) valoresTernarioBool -> . expBool
    (113) valoresTernarioVars -> . reg
    (114) valoresTernarioVars -> . vec
    (115) valoresTernarioVars -> . ternarioVars
    (116) valoresTernarioVars -> . ( ternarioVars )
    (117) valoresTernarioVars -> . atributos
    (118) valoresTernarioVars -> . varsOps
    (119) valoresTernarioVars -> . varYVals
    (120) valoresTernarioVars -> . res
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (141) reg -> . { campos }
    (56) vec -> . [ elem ]
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (121) res -> . RES
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 295
    FLOAT           shift and go to state 296
    STRING          shift and go to state 292
    (               shift and go to state 299
    BOOL            shift and go to state 297
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    {               shift and go to state 99
    [               shift and go to state 20
    ID              shift and go to state 178
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 282
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 281
    funcInt                        shift and go to state 283
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 284
    eMat                           shift and go to state 285
    tCompareEQ                     shift and go to state 73
    valoresTernarioBool            shift and go to state 332
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 287
    vec                            shift and go to state 288
    paren                          shift and go to state 86
    reg                            shift and go to state 290
    valoresTernarioVars            shift and go to state 333
    expBool                        shift and go to state 298
    ternarioBool                   shift and go to state 293
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    valoresTernarioMat             shift and go to state 334
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 289
    res                            shift and go to state 280
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 300
    varYVals                       shift and go to state 301
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 302

state 200

    (241) menor -> tCompare < . tCompare
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (56) vec -> . [ elem ]
    (141) reg -> . { campos }
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )

    INT             shift and go to state 339
    FLOAT           shift and go to state 340
    (               shift and go to state 337
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 224
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    STRING          shift and go to state 176
    CAPITALIZAR     shift and go to state 27
    [               shift and go to state 20
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75

    funcInt                        shift and go to state 335
    valoresMat                     shift and go to state 68
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 336
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    varsOps                        shift and go to state 341
    exp                            shift and go to state 98
    tCompare                       shift and go to state 338
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    iSing                          shift and go to state 83
    varYVals                       shift and go to state 342
    atributos                      shift and go to state 186

state 201

    (239) mayor -> tCompare > . tCompare
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (56) vec -> . [ elem ]
    (141) reg -> . { campos }
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )

    INT             shift and go to state 339
    FLOAT           shift and go to state 340
    (               shift and go to state 337
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 224
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    STRING          shift and go to state 176
    CAPITALIZAR     shift and go to state 27
    [               shift and go to state 20
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75

    funcInt                        shift and go to state 335
    valoresMat                     shift and go to state 68
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 336
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    varsOps                        shift and go to state 341
    exp                            shift and go to state 98
    tCompare                       shift and go to state 343
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    iSing                          shift and go to state 83
    varYVals                       shift and go to state 342
    atributos                      shift and go to state 186

state 202

    (92) atributos -> ID . . valoresCampos
    (94) valoresCampos -> . varYVals
    (95) valoresCampos -> . END
    (96) valoresCampos -> . BEGIN
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (56) vec -> . [ elem ]

    END             shift and go to state 327
    BEGIN           shift and go to state 326
    ID              shift and go to state 56
    [               shift and go to state 20

    vec                            shift and go to state 33
    valoresCampos                  shift and go to state 344
    varYVals                       shift and go to state 329
    vecVal                         shift and go to state 8

state 203

    (56) vec -> [ elem ] .

    [               reduce using rule 56 (vec -> [ elem ] .)
    ,               reduce using rule 56 (vec -> [ elem ] .)
    ]               reduce using rule 56 (vec -> [ elem ] .)
    )               reduce using rule 56 (vec -> [ elem ] .)
    ;               reduce using rule 56 (vec -> [ elem ] .)
    :               reduce using rule 56 (vec -> [ elem ] .)
    }               reduce using rule 56 (vec -> [ elem ] .)


state 204

    (174) p -> p % . exp
    (180) p -> p % . valoresMat
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (56) vec -> . [ elem ]

    INT             shift and go to state 192
    FLOAT           shift and go to state 191
    STRING          shift and go to state 176
    (               shift and go to state 254
    -               shift and go to state 76
    +               shift and go to state 75
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 99
    [               shift and go to state 20

    exp                            shift and go to state 346
    funcString                     shift and go to state 179
    funcInt                        shift and go to state 187
    vec                            shift and go to state 33
    iSing                          shift and go to state 83
    valoresMat                     shift and go to state 345
    vecVal                         shift and go to state 8
    paren                          shift and go to state 86
    varYVals                       shift and go to state 194
    reg                            shift and go to state 175
    atributos                      shift and go to state 186
    varsOps                        shift and go to state 193

state 205

    (172) p -> p * . exp
    (178) p -> p * . valoresMat
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (56) vec -> . [ elem ]

    INT             shift and go to state 192
    FLOAT           shift and go to state 191
    STRING          shift and go to state 176
    (               shift and go to state 254
    -               shift and go to state 76
    +               shift and go to state 75
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 99
    [               shift and go to state 20

    exp                            shift and go to state 348
    funcString                     shift and go to state 179
    funcInt                        shift and go to state 187
    vec                            shift and go to state 33
    iSing                          shift and go to state 83
    valoresMat                     shift and go to state 347
    vecVal                         shift and go to state 8
    paren                          shift and go to state 86
    varYVals                       shift and go to state 194
    reg                            shift and go to state 175
    atributos                      shift and go to state 186
    varsOps                        shift and go to state 193

state 206

    (173) p -> p / . exp
    (179) p -> p / . valoresMat
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (56) vec -> . [ elem ]

    INT             shift and go to state 192
    FLOAT           shift and go to state 191
    STRING          shift and go to state 176
    (               shift and go to state 254
    -               shift and go to state 76
    +               shift and go to state 75
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 99
    [               shift and go to state 20

    exp                            shift and go to state 350
    funcString                     shift and go to state 179
    funcInt                        shift and go to state 187
    vec                            shift and go to state 33
    iSing                          shift and go to state 83
    valoresMat                     shift and go to state 349
    vecVal                         shift and go to state 8
    paren                          shift and go to state 86
    varYVals                       shift and go to state 194
    reg                            shift and go to state 175
    atributos                      shift and go to state 186
    varsOps                        shift and go to state 193

state 207

    (198) valoresBool -> funcBool .

    EQEQ            reduce using rule 198 (valoresBool -> funcBool .)
    DISTINTO        reduce using rule 198 (valoresBool -> funcBool .)
    AND             reduce using rule 198 (valoresBool -> funcBool .)
    OR              reduce using rule 198 (valoresBool -> funcBool .)
    ?               reduce using rule 198 (valoresBool -> funcBool .)
    ,               reduce using rule 198 (valoresBool -> funcBool .)
    ]               reduce using rule 198 (valoresBool -> funcBool .)
    )               reduce using rule 198 (valoresBool -> funcBool .)
    ;               reduce using rule 198 (valoresBool -> funcBool .)
    :               reduce using rule 198 (valoresBool -> funcBool .)
    }               reduce using rule 198 (valoresBool -> funcBool .)


state 208

    (244) not -> NOT valoresBool .

    EQEQ            reduce using rule 244 (not -> NOT valoresBool .)
    DISTINTO        reduce using rule 244 (not -> NOT valoresBool .)
    AND             reduce using rule 244 (not -> NOT valoresBool .)
    OR              reduce using rule 244 (not -> NOT valoresBool .)
    ?               reduce using rule 244 (not -> NOT valoresBool .)
    ]               reduce using rule 244 (not -> NOT valoresBool .)
    )               reduce using rule 244 (not -> NOT valoresBool .)
    :               reduce using rule 244 (not -> NOT valoresBool .)
    ,               reduce using rule 244 (not -> NOT valoresBool .)
    ;               reduce using rule 244 (not -> NOT valoresBool .)
    }               reduce using rule 244 (not -> NOT valoresBool .)


state 209

    (201) valoresBool -> ( . ternarioBool )
    (246) parenBool -> ( . expBool )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (56) vec -> . [ elem ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (246) parenBool -> . ( expBool )
    (141) reg -> . { campos }
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )

    BOOL            shift and go to state 182
    (               shift and go to state 223
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 224
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    INT             shift and go to state 226
    FLOAT           shift and go to state 227
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    STRING          shift and go to state 176
    NOT             shift and go to state 97
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75

    and                            shift and go to state 60
    atributos                      shift and go to state 186
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 220
    menor                          shift and go to state 66
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 351
    eMat                           shift and go to state 222
    p                              shift and go to state 94
    mayor                          shift and go to state 79
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    iSing                          shift and go to state 83
    ternarioBool                   shift and go to state 352
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    tCompareEQ                     shift and go to state 73
    varsOps                        shift and go to state 228
    exp                            shift and go to state 98
    varYVals                       shift and go to state 229
    parenBool                      shift and go to state 84
    expBool                        shift and go to state 353

state 210

    (243) not -> NOT not .

    EQEQ            reduce using rule 243 (not -> NOT not .)
    DISTINTO        reduce using rule 243 (not -> NOT not .)
    AND             reduce using rule 243 (not -> NOT not .)
    OR              reduce using rule 243 (not -> NOT not .)
    ?               reduce using rule 243 (not -> NOT not .)
    ]               reduce using rule 243 (not -> NOT not .)
    )               reduce using rule 243 (not -> NOT not .)
    :               reduce using rule 243 (not -> NOT not .)
    ,               reduce using rule 243 (not -> NOT not .)
    ;               reduce using rule 243 (not -> NOT not .)
    }               reduce using rule 243 (not -> NOT not .)


state 211

    (197) valoresBool -> BOOL .

    EQEQ            reduce using rule 197 (valoresBool -> BOOL .)
    DISTINTO        reduce using rule 197 (valoresBool -> BOOL .)
    AND             reduce using rule 197 (valoresBool -> BOOL .)
    OR              reduce using rule 197 (valoresBool -> BOOL .)
    ?               reduce using rule 197 (valoresBool -> BOOL .)
    ,               reduce using rule 197 (valoresBool -> BOOL .)
    ]               reduce using rule 197 (valoresBool -> BOOL .)
    )               reduce using rule 197 (valoresBool -> BOOL .)
    ;               reduce using rule 197 (valoresBool -> BOOL .)
    :               reduce using rule 197 (valoresBool -> BOOL .)
    }               reduce using rule 197 (valoresBool -> BOOL .)


state 212

    (200) valoresBool -> varsOps .

    EQEQ            reduce using rule 200 (valoresBool -> varsOps .)
    DISTINTO        reduce using rule 200 (valoresBool -> varsOps .)
    AND             reduce using rule 200 (valoresBool -> varsOps .)
    OR              reduce using rule 200 (valoresBool -> varsOps .)
    ?               reduce using rule 200 (valoresBool -> varsOps .)
    ,               reduce using rule 200 (valoresBool -> varsOps .)
    ]               reduce using rule 200 (valoresBool -> varsOps .)
    )               reduce using rule 200 (valoresBool -> varsOps .)
    ;               reduce using rule 200 (valoresBool -> varsOps .)
    :               reduce using rule 200 (valoresBool -> varsOps .)
    }               reduce using rule 200 (valoresBool -> varsOps .)


state 213

    (199) valoresBool -> varYVals .
    (146) varsOps -> varYVals . MASMAS
    (147) varsOps -> varYVals . MENOSMENOS

    EQEQ            reduce using rule 199 (valoresBool -> varYVals .)
    DISTINTO        reduce using rule 199 (valoresBool -> varYVals .)
    AND             reduce using rule 199 (valoresBool -> varYVals .)
    OR              reduce using rule 199 (valoresBool -> varYVals .)
    ?               reduce using rule 199 (valoresBool -> varYVals .)
    ,               reduce using rule 199 (valoresBool -> varYVals .)
    ]               reduce using rule 199 (valoresBool -> varYVals .)
    )               reduce using rule 199 (valoresBool -> varYVals .)
    ;               reduce using rule 199 (valoresBool -> varYVals .)
    :               reduce using rule 199 (valoresBool -> varYVals .)
    }               reduce using rule 199 (valoresBool -> varYVals .)
    MASMAS          shift and go to state 51
    MENOSMENOS      shift and go to state 48


state 214

    (185) exp -> exp ^ . iSing
    (187) exp -> exp ^ . valoresMat
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (56) vec -> . [ elem ]

    -               shift and go to state 76
    +               shift and go to state 75
    INT             shift and go to state 192
    FLOAT           shift and go to state 191
    STRING          shift and go to state 176
    (               shift and go to state 254
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 99
    [               shift and go to state 20

    funcString                     shift and go to state 179
    funcInt                        shift and go to state 187
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33
    iSing                          shift and go to state 355
    valoresMat                     shift and go to state 354
    paren                          shift and go to state 86
    varYVals                       shift and go to state 194
    reg                            shift and go to state 175
    atributos                      shift and go to state 186
    varsOps                        shift and go to state 193

state 215

    (141) reg -> { campos . }

    }               shift and go to state 356


state 216

    (142) campos -> ID . : valores , campos
    (143) campos -> ID . : valores

    :               shift and go to state 357


state 217

    (153) varAsig -> ID . ID . = valores

    =               shift and go to state 358


state 218

    (59) vecVal -> ID [ expresion . ]

    ]               shift and go to state 359


state 219

    (62) vecVal -> ID [ INT . ]
    (154) valoresMat -> INT .
    (226) tCompareEQ -> INT .
    (235) tCompare -> INT .

    ]               shift and go to state 360
    +               reduce using rule 154 (valoresMat -> INT .)
    -               reduce using rule 154 (valoresMat -> INT .)
    *               reduce using rule 154 (valoresMat -> INT .)
    /               reduce using rule 154 (valoresMat -> INT .)
    %               reduce using rule 154 (valoresMat -> INT .)
    ^               reduce using rule 154 (valoresMat -> INT .)
    EQEQ            reduce using rule 226 (tCompareEQ -> INT .)
    DISTINTO        reduce using rule 226 (tCompareEQ -> INT .)
    >               reduce using rule 235 (tCompare -> INT .)
    <               reduce using rule 235 (tCompare -> INT .)


state 220

    (228) tCompareEQ -> funcInt .
    (236) tCompare -> funcInt .
    (156) valoresMat -> funcInt .

    EQEQ            reduce using rule 228 (tCompareEQ -> funcInt .)
    DISTINTO        reduce using rule 228 (tCompareEQ -> funcInt .)
    AND             reduce using rule 228 (tCompareEQ -> funcInt .)
    OR              reduce using rule 228 (tCompareEQ -> funcInt .)
    ?               reduce using rule 228 (tCompareEQ -> funcInt .)
    ,               reduce using rule 228 (tCompareEQ -> funcInt .)
    ]               reduce using rule 228 (tCompareEQ -> funcInt .)
    )               reduce using rule 228 (tCompareEQ -> funcInt .)
    ;               reduce using rule 228 (tCompareEQ -> funcInt .)
    :               reduce using rule 228 (tCompareEQ -> funcInt .)
    }               reduce using rule 228 (tCompareEQ -> funcInt .)
    >               reduce using rule 236 (tCompare -> funcInt .)
    <               reduce using rule 236 (tCompare -> funcInt .)
    +               reduce using rule 156 (valoresMat -> funcInt .)
    -               reduce using rule 156 (valoresMat -> funcInt .)
    *               reduce using rule 156 (valoresMat -> funcInt .)
    /               reduce using rule 156 (valoresMat -> funcInt .)
    %               reduce using rule 156 (valoresMat -> funcInt .)
    ^               reduce using rule 156 (valoresMat -> funcInt .)


state 221

    (42) cosaBooleana -> valoresBool .
    (204) expBool -> valoresBool . OR and
    (206) expBool -> valoresBool . OR valoresBool
    (209) and -> valoresBool . AND eq
    (211) and -> valoresBool . AND valoresBool

    )               reduce using rule 42 (cosaBooleana -> valoresBool .)
    OR              shift and go to state 161
    AND             shift and go to state 160


state 222

    (229) tCompareEQ -> eMat .
    (163) eMat -> eMat . + p
    (165) eMat -> eMat . + valoresMat
    (168) eMat -> eMat . - p
    (170) eMat -> eMat . - valoresMat
    (232) tCompare -> eMat .

    EQEQ            reduce using rule 229 (tCompareEQ -> eMat .)
    DISTINTO        reduce using rule 229 (tCompareEQ -> eMat .)
    +               shift and go to state 163
    -               shift and go to state 164
    >               reduce using rule 232 (tCompare -> eMat .)
    <               reduce using rule 232 (tCompare -> eMat .)


state 223

    (201) valoresBool -> ( . ternarioBool )
    (230) tCompareEQ -> ( . ternarioBool )
    (231) tCompareEQ -> ( . ternarioMat )
    (238) tCompare -> ( . ternarioMat )
    (162) valoresMat -> ( . ternarioMat )
    (246) parenBool -> ( . expBool )
    (195) paren -> ( . eMat )
    (196) paren -> ( . valoresMat )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (51) funcBool -> . COLINEALES ( valores , valores )
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (56) vec -> . [ elem ]
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 180
    FLOAT           shift and go to state 181
    STRING          shift and go to state 176
    (               shift and go to state 362
    BOOL            shift and go to state 182
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75
    [               shift and go to state 20
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 168
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 169
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 361
    eMat                           shift and go to state 171
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 363
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    varsOps                        shift and go to state 174
    exp                            shift and go to state 98
    ternarioBool                   shift and go to state 315
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    expBool                        shift and go to state 364
    varYVals                       shift and go to state 185
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 186

state 224

    (138) varYVals -> ID .
    (59) vecVal -> ID . [ expresion ]
    (62) vecVal -> ID . [ INT ]
    (92) atributos -> ID . . valoresCampos

    MASMAS          reduce using rule 138 (varYVals -> ID .)
    MENOSMENOS      reduce using rule 138 (varYVals -> ID .)
    EQEQ            reduce using rule 138 (varYVals -> ID .)
    DISTINTO        reduce using rule 138 (varYVals -> ID .)
    AND             reduce using rule 138 (varYVals -> ID .)
    OR              reduce using rule 138 (varYVals -> ID .)
    ?               reduce using rule 138 (varYVals -> ID .)
    ,               reduce using rule 138 (varYVals -> ID .)
    ]               reduce using rule 138 (varYVals -> ID .)
    )               reduce using rule 138 (varYVals -> ID .)
    ;               reduce using rule 138 (varYVals -> ID .)
    :               reduce using rule 138 (varYVals -> ID .)
    }               reduce using rule 138 (varYVals -> ID .)
    >               reduce using rule 138 (varYVals -> ID .)
    <               reduce using rule 138 (varYVals -> ID .)
    +               reduce using rule 138 (varYVals -> ID .)
    -               reduce using rule 138 (varYVals -> ID .)
    *               reduce using rule 138 (varYVals -> ID .)
    /               reduce using rule 138 (varYVals -> ID .)
    %               reduce using rule 138 (varYVals -> ID .)
    ^               reduce using rule 138 (varYVals -> ID .)
    [               shift and go to state 103
    .               shift and go to state 202


state 225

    (6) lAbierta -> IF ( cosaBooleana . ) linea
    (7) lAbierta -> IF ( cosaBooleana . ) { g } ELSE lAbierta
    (8) lAbierta -> IF ( cosaBooleana . ) lCerrada ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana . ) { g }
    (14) lCerrada -> IF ( cosaBooleana . ) { g } ELSE { g }
    (15) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE { g }
    (16) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana . ) { g } ELSE lCerrada
    (18) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE COMMENT com lCerrada

    )               shift and go to state 365


state 226

    (226) tCompareEQ -> INT .
    (235) tCompare -> INT .
    (154) valoresMat -> INT .

    EQEQ            reduce using rule 226 (tCompareEQ -> INT .)
    DISTINTO        reduce using rule 226 (tCompareEQ -> INT .)
    AND             reduce using rule 226 (tCompareEQ -> INT .)
    OR              reduce using rule 226 (tCompareEQ -> INT .)
    ?               reduce using rule 226 (tCompareEQ -> INT .)
    ,               reduce using rule 226 (tCompareEQ -> INT .)
    ]               reduce using rule 226 (tCompareEQ -> INT .)
    )               reduce using rule 226 (tCompareEQ -> INT .)
    ;               reduce using rule 226 (tCompareEQ -> INT .)
    :               reduce using rule 226 (tCompareEQ -> INT .)
    }               reduce using rule 226 (tCompareEQ -> INT .)
    >               reduce using rule 235 (tCompare -> INT .)
    <               reduce using rule 235 (tCompare -> INT .)
    +               reduce using rule 154 (valoresMat -> INT .)
    -               reduce using rule 154 (valoresMat -> INT .)
    *               reduce using rule 154 (valoresMat -> INT .)
    /               reduce using rule 154 (valoresMat -> INT .)
    %               reduce using rule 154 (valoresMat -> INT .)
    ^               reduce using rule 154 (valoresMat -> INT .)


state 227

    (227) tCompareEQ -> FLOAT .
    (237) tCompare -> FLOAT .
    (155) valoresMat -> FLOAT .

    EQEQ            reduce using rule 227 (tCompareEQ -> FLOAT .)
    DISTINTO        reduce using rule 227 (tCompareEQ -> FLOAT .)
    AND             reduce using rule 227 (tCompareEQ -> FLOAT .)
    OR              reduce using rule 227 (tCompareEQ -> FLOAT .)
    ?               reduce using rule 227 (tCompareEQ -> FLOAT .)
    ,               reduce using rule 227 (tCompareEQ -> FLOAT .)
    ]               reduce using rule 227 (tCompareEQ -> FLOAT .)
    )               reduce using rule 227 (tCompareEQ -> FLOAT .)
    ;               reduce using rule 227 (tCompareEQ -> FLOAT .)
    :               reduce using rule 227 (tCompareEQ -> FLOAT .)
    }               reduce using rule 227 (tCompareEQ -> FLOAT .)
    >               reduce using rule 237 (tCompare -> FLOAT .)
    <               reduce using rule 237 (tCompare -> FLOAT .)
    +               reduce using rule 155 (valoresMat -> FLOAT .)
    -               reduce using rule 155 (valoresMat -> FLOAT .)
    *               reduce using rule 155 (valoresMat -> FLOAT .)
    /               reduce using rule 155 (valoresMat -> FLOAT .)
    %               reduce using rule 155 (valoresMat -> FLOAT .)
    ^               reduce using rule 155 (valoresMat -> FLOAT .)


state 228

    (200) valoresBool -> varsOps .
    (225) tCompareEQ -> varsOps .
    (233) tCompare -> varsOps .
    (161) valoresMat -> varsOps .

    ?               reduce using rule 200 (valoresBool -> varsOps .)
    OR              reduce using rule 200 (valoresBool -> varsOps .)
    AND             reduce using rule 200 (valoresBool -> varsOps .)
    ,               reduce using rule 200 (valoresBool -> varsOps .)
    ]               reduce using rule 200 (valoresBool -> varsOps .)
    )               reduce using rule 200 (valoresBool -> varsOps .)
    ;               reduce using rule 200 (valoresBool -> varsOps .)
    :               reduce using rule 200 (valoresBool -> varsOps .)
    }               reduce using rule 200 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 225 (tCompareEQ -> varsOps .)
    DISTINTO        reduce using rule 225 (tCompareEQ -> varsOps .)
    >               reduce using rule 233 (tCompare -> varsOps .)
    <               reduce using rule 233 (tCompare -> varsOps .)
    +               reduce using rule 161 (valoresMat -> varsOps .)
    -               reduce using rule 161 (valoresMat -> varsOps .)
    *               reduce using rule 161 (valoresMat -> varsOps .)
    /               reduce using rule 161 (valoresMat -> varsOps .)
    %               reduce using rule 161 (valoresMat -> varsOps .)
    ^               reduce using rule 161 (valoresMat -> varsOps .)


state 229

    (199) valoresBool -> varYVals .
    (146) varsOps -> varYVals . MASMAS
    (147) varsOps -> varYVals . MENOSMENOS
    (224) tCompareEQ -> varYVals .
    (234) tCompare -> varYVals .
    (160) valoresMat -> varYVals .

    ?               reduce using rule 199 (valoresBool -> varYVals .)
    OR              reduce using rule 199 (valoresBool -> varYVals .)
    AND             reduce using rule 199 (valoresBool -> varYVals .)
    ,               reduce using rule 199 (valoresBool -> varYVals .)
    ]               reduce using rule 199 (valoresBool -> varYVals .)
    )               reduce using rule 199 (valoresBool -> varYVals .)
    ;               reduce using rule 199 (valoresBool -> varYVals .)
    :               reduce using rule 199 (valoresBool -> varYVals .)
    }               reduce using rule 199 (valoresBool -> varYVals .)
    MASMAS          shift and go to state 51
    MENOSMENOS      shift and go to state 48
    EQEQ            reduce using rule 224 (tCompareEQ -> varYVals .)
    DISTINTO        reduce using rule 224 (tCompareEQ -> varYVals .)
    >               reduce using rule 234 (tCompare -> varYVals .)
    <               reduce using rule 234 (tCompare -> varYVals .)
    +               reduce using rule 160 (valoresMat -> varYVals .)
    -               reduce using rule 160 (valoresMat -> varYVals .)
    *               reduce using rule 160 (valoresMat -> varYVals .)
    /               reduce using rule 160 (valoresMat -> varYVals .)
    %               reduce using rule 160 (valoresMat -> varYVals .)
    ^               reduce using rule 160 (valoresMat -> varYVals .)


state 230

    (41) cosaBooleana -> expBool .
    (203) expBool -> expBool . OR and
    (205) expBool -> expBool . OR valoresBool

    )               reduce using rule 41 (cosaBooleana -> expBool .)
    OR              shift and go to state 198


state 231

    (50) funcString -> CAPITALIZAR ( valores . )

    )               shift and go to state 366


state 232

    (48) funcInt -> MULTIESCALAR ( valores . , valores param )

    ,               shift and go to state 367


state 233

    (24) lCerrada -> loop COMMENT com . lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (148) varAsig -> . varYVals MULEQ valores
    (149) varAsig -> . varYVals DIVEQ valores
    (150) varAsig -> . varYVals MASEQ valores
    (151) varAsig -> . varYVals MENOSEQ valores
    (152) varAsig -> . varYVals = valores
    (153) varAsig -> . ID . ID = valores
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 368
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 39

state 234

    (22) lCerrada -> loop { g . }

    }               shift and go to state 369


state 235

    (60) vecVal -> vec [ expresion . ]

    ]               shift and go to state 370


state 236

    (63) vecVal -> vec [ INT . ]
    (154) valoresMat -> INT .
    (226) tCompareEQ -> INT .
    (235) tCompare -> INT .

    ]               shift and go to state 371
    +               reduce using rule 154 (valoresMat -> INT .)
    -               reduce using rule 154 (valoresMat -> INT .)
    *               reduce using rule 154 (valoresMat -> INT .)
    /               reduce using rule 154 (valoresMat -> INT .)
    %               reduce using rule 154 (valoresMat -> INT .)
    ^               reduce using rule 154 (valoresMat -> INT .)
    EQEQ            reduce using rule 226 (tCompareEQ -> INT .)
    DISTINTO        reduce using rule 226 (tCompareEQ -> INT .)
    >               reduce using rule 235 (tCompare -> INT .)
    <               reduce using rule 235 (tCompare -> INT .)


state 237

    (12) com -> COMMENT com .

    IF              reduce using rule 12 (com -> COMMENT com .)
    DO              reduce using rule 12 (com -> COMMENT com .)
    RETURN          reduce using rule 12 (com -> COMMENT com .)
    ;               reduce using rule 12 (com -> COMMENT com .)
    WHILE           reduce using rule 12 (com -> COMMENT com .)
    FOR             reduce using rule 12 (com -> COMMENT com .)
    MENOSMENOS      reduce using rule 12 (com -> COMMENT com .)
    MASMAS          reduce using rule 12 (com -> COMMENT com .)
    ID              reduce using rule 12 (com -> COMMENT com .)
    PRINT           reduce using rule 12 (com -> COMMENT com .)
    MULTIESCALAR    reduce using rule 12 (com -> COMMENT com .)
    LENGTH          reduce using rule 12 (com -> COMMENT com .)
    CAPITALIZAR     reduce using rule 12 (com -> COMMENT com .)
    COLINEALES      reduce using rule 12 (com -> COMMENT com .)
    [               reduce using rule 12 (com -> COMMENT com .)


state 238

    (27) lCerrada -> DO COMMENT com lCerrada . WHILE ( valores ) ;

    WHILE           shift and go to state 372


state 239

    (14) lCerrada -> IF ( cosaBooleana . ) { g } ELSE { g }
    (15) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE { g }
    (16) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana . ) { g } ELSE lCerrada
    (18) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE COMMENT com lCerrada

    )               shift and go to state 373


state 240

    (26) lCerrada -> DO lCerrada WHILE ( . valores ) ;
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (141) reg -> . { campos }
    (97) ternario -> . ternarioMat
    (98) ternario -> . ternarioBool
    (99) ternario -> . ( ternarioMat )
    (100) ternario -> . ( ternarioBool )
    (101) ternario -> . ternarioVars
    (102) ternario -> . ( ternarioVars )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 90
    FLOAT           shift and go to state 92
    STRING          shift and go to state 70
    BOOL            shift and go to state 95
    RES             shift and go to state 63
    ID              shift and go to state 88
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 99
    (               shift and go to state 74
    [               shift and go to state 20
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    ?               reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 71
    eMat                           shift and go to state 72
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 77
    vec                            shift and go to state 78
    paren                          shift and go to state 86
    reg                            shift and go to state 80
    expBool                        shift and go to state 81
    ternarioBool                   shift and go to state 82
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 89
    funcReturn                     shift and go to state 91
    valores                        shift and go to state 374
    p                              shift and go to state 94
    varsOps                        shift and go to state 96
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 67
    varYVals                       shift and go to state 100
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 101

state 241

    (25) lCerrada -> DO { g } . WHILE ( valores ) ;

    WHILE           shift and go to state 375


state 242

    (51) funcBool -> COLINEALES ( valores , . valores )
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (141) reg -> . { campos }
    (97) ternario -> . ternarioMat
    (98) ternario -> . ternarioBool
    (99) ternario -> . ( ternarioMat )
    (100) ternario -> . ( ternarioBool )
    (101) ternario -> . ternarioVars
    (102) ternario -> . ( ternarioVars )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 90
    FLOAT           shift and go to state 92
    STRING          shift and go to state 70
    BOOL            shift and go to state 95
    RES             shift and go to state 63
    ID              shift and go to state 88
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 99
    (               shift and go to state 74
    [               shift and go to state 20
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    ?               reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 71
    eMat                           shift and go to state 72
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 77
    vec                            shift and go to state 78
    paren                          shift and go to state 86
    reg                            shift and go to state 80
    expBool                        shift and go to state 81
    ternarioBool                   shift and go to state 82
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 89
    funcReturn                     shift and go to state 91
    valores                        shift and go to state 376
    p                              shift and go to state 94
    varsOps                        shift and go to state 96
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 67
    varYVals                       shift and go to state 100
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 101

state 243

    (33) loop -> WHILE ( valores ) .

    {               reduce using rule 33 (loop -> WHILE ( valores ) .)
    COMMENT         reduce using rule 33 (loop -> WHILE ( valores ) .)
    IF              reduce using rule 33 (loop -> WHILE ( valores ) .)
    DO              reduce using rule 33 (loop -> WHILE ( valores ) .)
    RETURN          reduce using rule 33 (loop -> WHILE ( valores ) .)
    ;               reduce using rule 33 (loop -> WHILE ( valores ) .)
    WHILE           reduce using rule 33 (loop -> WHILE ( valores ) .)
    FOR             reduce using rule 33 (loop -> WHILE ( valores ) .)
    MENOSMENOS      reduce using rule 33 (loop -> WHILE ( valores ) .)
    MASMAS          reduce using rule 33 (loop -> WHILE ( valores ) .)
    ID              reduce using rule 33 (loop -> WHILE ( valores ) .)
    PRINT           reduce using rule 33 (loop -> WHILE ( valores ) .)
    MULTIESCALAR    reduce using rule 33 (loop -> WHILE ( valores ) .)
    LENGTH          reduce using rule 33 (loop -> WHILE ( valores ) .)
    CAPITALIZAR     reduce using rule 33 (loop -> WHILE ( valores ) .)
    COLINEALES      reduce using rule 33 (loop -> WHILE ( valores ) .)
    [               reduce using rule 33 (loop -> WHILE ( valores ) .)


state 244

    (52) funcVoid -> PRINT ( valores ) .

    ;               reduce using rule 52 (funcVoid -> PRINT ( valores ) .)
    )               reduce using rule 52 (funcVoid -> PRINT ( valores ) .)


state 245

    (61) vecVal -> vecVal [ expresion ] .

    .               reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    [               reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    MASMAS          reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    MENOSMENOS      reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    EQEQ            reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    DISTINTO        reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    AND             reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    OR              reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    ?               reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    ,               reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    ]               reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    )               reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    ;               reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    :               reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    }               reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    +               reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    -               reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    *               reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    /               reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    %               reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    ^               reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    >               reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    <               reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    MULEQ           reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    DIVEQ           reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    MASEQ           reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    MENOSEQ         reduce using rule 61 (vecVal -> vecVal [ expresion ] .)
    =               reduce using rule 61 (vecVal -> vecVal [ expresion ] .)


state 246

    (64) vecVal -> vecVal [ INT ] .

    .               reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    [               reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    MASMAS          reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    MENOSMENOS      reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    EQEQ            reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    DISTINTO        reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    AND             reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    OR              reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    ?               reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    ,               reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    ]               reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    )               reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    ;               reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    :               reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    }               reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    +               reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    -               reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    *               reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    /               reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    %               reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    ^               reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    >               reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    <               reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    MULEQ           reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    DIVEQ           reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    MASEQ           reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    MENOSEQ         reduce using rule 64 (vecVal -> vecVal [ INT ] .)
    =               reduce using rule 64 (vecVal -> vecVal [ INT ] .)


state 247

    (34) loop -> FOR ( primParam ; . valores ; tercerParam )
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (141) reg -> . { campos }
    (97) ternario -> . ternarioMat
    (98) ternario -> . ternarioBool
    (99) ternario -> . ( ternarioMat )
    (100) ternario -> . ( ternarioBool )
    (101) ternario -> . ternarioVars
    (102) ternario -> . ( ternarioVars )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 90
    FLOAT           shift and go to state 92
    STRING          shift and go to state 70
    BOOL            shift and go to state 95
    RES             shift and go to state 63
    ID              shift and go to state 88
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 99
    (               shift and go to state 74
    [               shift and go to state 20
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    ?               reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 71
    eMat                           shift and go to state 72
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 77
    vec                            shift and go to state 78
    paren                          shift and go to state 86
    reg                            shift and go to state 80
    expBool                        shift and go to state 81
    ternarioBool                   shift and go to state 82
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 89
    funcReturn                     shift and go to state 91
    valores                        shift and go to state 377
    p                              shift and go to state 94
    varsOps                        shift and go to state 96
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 67
    varYVals                       shift and go to state 100
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 101

state 248

    (49) funcInt -> LENGTH ( valores ) .

    ;               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    ,               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    ]               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    )               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    :               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    }               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    +               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    -               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    *               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    /               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    %               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    ^               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    EQEQ            reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    DISTINTO        reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    >               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    <               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    AND             reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    OR              reduce using rule 49 (funcInt -> LENGTH ( valores ) .)
    ?               reduce using rule 49 (funcInt -> LENGTH ( valores ) .)


state 249

    (208) and -> and AND eq .
    (213) eq -> eq . EQEQ mayor
    (214) eq -> eq . DISTINTO mayor
    (217) eq -> eq . EQEQ tCompareEQ
    (218) eq -> eq . DISTINTO tCompareEQ

    AND             reduce using rule 208 (and -> and AND eq .)
    ?               reduce using rule 208 (and -> and AND eq .)
    OR              reduce using rule 208 (and -> and AND eq .)
    :               reduce using rule 208 (and -> and AND eq .)
    ,               reduce using rule 208 (and -> and AND eq .)
    }               reduce using rule 208 (and -> and AND eq .)
    )               reduce using rule 208 (and -> and AND eq .)
    ]               reduce using rule 208 (and -> and AND eq .)
    ;               reduce using rule 208 (and -> and AND eq .)
    EQEQ            shift and go to state 158
    DISTINTO        shift and go to state 159


state 250

    (210) and -> and AND valoresBool .

    AND             reduce using rule 210 (and -> and AND valoresBool .)
    ?               reduce using rule 210 (and -> and AND valoresBool .)
    OR              reduce using rule 210 (and -> and AND valoresBool .)
    :               reduce using rule 210 (and -> and AND valoresBool .)
    ,               reduce using rule 210 (and -> and AND valoresBool .)
    }               reduce using rule 210 (and -> and AND valoresBool .)
    )               reduce using rule 210 (and -> and AND valoresBool .)
    ]               reduce using rule 210 (and -> and AND valoresBool .)
    ;               reduce using rule 210 (and -> and AND valoresBool .)


state 251

    (199) valoresBool -> varYVals .
    (224) tCompareEQ -> varYVals .
    (146) varsOps -> varYVals . MASMAS
    (147) varsOps -> varYVals . MENOSMENOS
    (234) tCompare -> varYVals .
    (160) valoresMat -> varYVals .

    AND             reduce using rule 199 (valoresBool -> varYVals .)
    OR              reduce using rule 199 (valoresBool -> varYVals .)
    ?               reduce using rule 199 (valoresBool -> varYVals .)
    ,               reduce using rule 199 (valoresBool -> varYVals .)
    ]               reduce using rule 199 (valoresBool -> varYVals .)
    )               reduce using rule 199 (valoresBool -> varYVals .)
    ;               reduce using rule 199 (valoresBool -> varYVals .)
    :               reduce using rule 199 (valoresBool -> varYVals .)
    }               reduce using rule 199 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 224 (tCompareEQ -> varYVals .)
    DISTINTO        reduce using rule 224 (tCompareEQ -> varYVals .)
    MASMAS          shift and go to state 51
    MENOSMENOS      shift and go to state 48
    >               reduce using rule 234 (tCompare -> varYVals .)
    <               reduce using rule 234 (tCompare -> varYVals .)
    +               reduce using rule 160 (valoresMat -> varYVals .)
    -               reduce using rule 160 (valoresMat -> varYVals .)
    *               reduce using rule 160 (valoresMat -> varYVals .)
    /               reduce using rule 160 (valoresMat -> varYVals .)
    %               reduce using rule 160 (valoresMat -> varYVals .)
    ^               reduce using rule 160 (valoresMat -> varYVals .)


state 252

    (57) elem -> valores , elem .

    ]               reduce using rule 57 (elem -> valores , elem .)


state 253

    (183) p -> valoresMat % valoresMat .
    (186) exp -> valoresMat . ^ iSing
    (188) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 183 (p -> valoresMat % valoresMat .)
    /               reduce using rule 183 (p -> valoresMat % valoresMat .)
    %               reduce using rule 183 (p -> valoresMat % valoresMat .)
    +               reduce using rule 183 (p -> valoresMat % valoresMat .)
    -               reduce using rule 183 (p -> valoresMat % valoresMat .)
    :               reduce using rule 183 (p -> valoresMat % valoresMat .)
    EQEQ            reduce using rule 183 (p -> valoresMat % valoresMat .)
    DISTINTO        reduce using rule 183 (p -> valoresMat % valoresMat .)
    >               reduce using rule 183 (p -> valoresMat % valoresMat .)
    <               reduce using rule 183 (p -> valoresMat % valoresMat .)
    ,               reduce using rule 183 (p -> valoresMat % valoresMat .)
    )               reduce using rule 183 (p -> valoresMat % valoresMat .)
    ]               reduce using rule 183 (p -> valoresMat % valoresMat .)
    ;               reduce using rule 183 (p -> valoresMat % valoresMat .)
    }               reduce using rule 183 (p -> valoresMat % valoresMat .)
    AND             reduce using rule 183 (p -> valoresMat % valoresMat .)
    OR              reduce using rule 183 (p -> valoresMat % valoresMat .)
    ?               reduce using rule 183 (p -> valoresMat % valoresMat .)
    ^               shift and go to state 157


state 254

    (162) valoresMat -> ( . ternarioMat )
    (195) paren -> ( . eMat )
    (196) paren -> ( . valoresMat )
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (51) funcBool -> . COLINEALES ( valores , valores )
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (56) vec -> . [ elem ]
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 180
    FLOAT           shift and go to state 181
    STRING          shift and go to state 176
    (               shift and go to state 172
    BOOL            shift and go to state 182
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75
    [               shift and go to state 20
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 168
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 169
    eq                             shift and go to state 69
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 171
    tCompareEQ                     shift and go to state 73
    valoresBool                    shift and go to state 321
    ternarioMat                    shift and go to state 323
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    varsOps                        shift and go to state 174
    exp                            shift and go to state 98
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    expBool                        shift and go to state 325
    varYVals                       shift and go to state 185
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 186

state 255

    (177) p -> valoresMat % exp .
    (185) exp -> exp . ^ iSing
    (187) exp -> exp . ^ valoresMat

    *               reduce using rule 177 (p -> valoresMat % exp .)
    /               reduce using rule 177 (p -> valoresMat % exp .)
    %               reduce using rule 177 (p -> valoresMat % exp .)
    +               reduce using rule 177 (p -> valoresMat % exp .)
    -               reduce using rule 177 (p -> valoresMat % exp .)
    :               reduce using rule 177 (p -> valoresMat % exp .)
    EQEQ            reduce using rule 177 (p -> valoresMat % exp .)
    DISTINTO        reduce using rule 177 (p -> valoresMat % exp .)
    >               reduce using rule 177 (p -> valoresMat % exp .)
    <               reduce using rule 177 (p -> valoresMat % exp .)
    ,               reduce using rule 177 (p -> valoresMat % exp .)
    )               reduce using rule 177 (p -> valoresMat % exp .)
    ]               reduce using rule 177 (p -> valoresMat % exp .)
    ;               reduce using rule 177 (p -> valoresMat % exp .)
    }               reduce using rule 177 (p -> valoresMat % exp .)
    AND             reduce using rule 177 (p -> valoresMat % exp .)
    OR              reduce using rule 177 (p -> valoresMat % exp .)
    ?               reduce using rule 177 (p -> valoresMat % exp .)
    ^               shift and go to state 214


state 256

    (166) eMat -> valoresMat + valoresMat .
    (175) p -> valoresMat . * exp
    (176) p -> valoresMat . / exp
    (177) p -> valoresMat . % exp
    (181) p -> valoresMat . * valoresMat
    (182) p -> valoresMat . / valoresMat
    (183) p -> valoresMat . % valoresMat
    (186) exp -> valoresMat . ^ iSing
    (188) exp -> valoresMat . ^ valoresMat

    +               reduce using rule 166 (eMat -> valoresMat + valoresMat .)
    -               reduce using rule 166 (eMat -> valoresMat + valoresMat .)
    :               reduce using rule 166 (eMat -> valoresMat + valoresMat .)
    EQEQ            reduce using rule 166 (eMat -> valoresMat + valoresMat .)
    DISTINTO        reduce using rule 166 (eMat -> valoresMat + valoresMat .)
    >               reduce using rule 166 (eMat -> valoresMat + valoresMat .)
    <               reduce using rule 166 (eMat -> valoresMat + valoresMat .)
    ,               reduce using rule 166 (eMat -> valoresMat + valoresMat .)
    )               reduce using rule 166 (eMat -> valoresMat + valoresMat .)
    ]               reduce using rule 166 (eMat -> valoresMat + valoresMat .)
    ;               reduce using rule 166 (eMat -> valoresMat + valoresMat .)
    }               reduce using rule 166 (eMat -> valoresMat + valoresMat .)
    AND             reduce using rule 166 (eMat -> valoresMat + valoresMat .)
    OR              reduce using rule 166 (eMat -> valoresMat + valoresMat .)
    ?               reduce using rule 166 (eMat -> valoresMat + valoresMat .)
    *               shift and go to state 154
    /               shift and go to state 156
    %               shift and go to state 152
    ^               shift and go to state 157


state 257

    (164) eMat -> valoresMat + p .
    (172) p -> p . * exp
    (173) p -> p . / exp
    (174) p -> p . % exp
    (178) p -> p . * valoresMat
    (179) p -> p . / valoresMat
    (180) p -> p . % valoresMat

    +               reduce using rule 164 (eMat -> valoresMat + p .)
    -               reduce using rule 164 (eMat -> valoresMat + p .)
    :               reduce using rule 164 (eMat -> valoresMat + p .)
    EQEQ            reduce using rule 164 (eMat -> valoresMat + p .)
    DISTINTO        reduce using rule 164 (eMat -> valoresMat + p .)
    >               reduce using rule 164 (eMat -> valoresMat + p .)
    <               reduce using rule 164 (eMat -> valoresMat + p .)
    ,               reduce using rule 164 (eMat -> valoresMat + p .)
    )               reduce using rule 164 (eMat -> valoresMat + p .)
    ]               reduce using rule 164 (eMat -> valoresMat + p .)
    ;               reduce using rule 164 (eMat -> valoresMat + p .)
    }               reduce using rule 164 (eMat -> valoresMat + p .)
    AND             reduce using rule 164 (eMat -> valoresMat + p .)
    OR              reduce using rule 164 (eMat -> valoresMat + p .)
    ?               reduce using rule 164 (eMat -> valoresMat + p .)
    *               shift and go to state 205
    /               shift and go to state 206
    %               shift and go to state 204


state 258

    (181) p -> valoresMat * valoresMat .
    (186) exp -> valoresMat . ^ iSing
    (188) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 181 (p -> valoresMat * valoresMat .)
    /               reduce using rule 181 (p -> valoresMat * valoresMat .)
    %               reduce using rule 181 (p -> valoresMat * valoresMat .)
    +               reduce using rule 181 (p -> valoresMat * valoresMat .)
    -               reduce using rule 181 (p -> valoresMat * valoresMat .)
    :               reduce using rule 181 (p -> valoresMat * valoresMat .)
    EQEQ            reduce using rule 181 (p -> valoresMat * valoresMat .)
    DISTINTO        reduce using rule 181 (p -> valoresMat * valoresMat .)
    >               reduce using rule 181 (p -> valoresMat * valoresMat .)
    <               reduce using rule 181 (p -> valoresMat * valoresMat .)
    ,               reduce using rule 181 (p -> valoresMat * valoresMat .)
    )               reduce using rule 181 (p -> valoresMat * valoresMat .)
    ]               reduce using rule 181 (p -> valoresMat * valoresMat .)
    ;               reduce using rule 181 (p -> valoresMat * valoresMat .)
    }               reduce using rule 181 (p -> valoresMat * valoresMat .)
    AND             reduce using rule 181 (p -> valoresMat * valoresMat .)
    OR              reduce using rule 181 (p -> valoresMat * valoresMat .)
    ?               reduce using rule 181 (p -> valoresMat * valoresMat .)
    ^               shift and go to state 157


state 259

    (175) p -> valoresMat * exp .
    (185) exp -> exp . ^ iSing
    (187) exp -> exp . ^ valoresMat

    *               reduce using rule 175 (p -> valoresMat * exp .)
    /               reduce using rule 175 (p -> valoresMat * exp .)
    %               reduce using rule 175 (p -> valoresMat * exp .)
    +               reduce using rule 175 (p -> valoresMat * exp .)
    -               reduce using rule 175 (p -> valoresMat * exp .)
    :               reduce using rule 175 (p -> valoresMat * exp .)
    EQEQ            reduce using rule 175 (p -> valoresMat * exp .)
    DISTINTO        reduce using rule 175 (p -> valoresMat * exp .)
    >               reduce using rule 175 (p -> valoresMat * exp .)
    <               reduce using rule 175 (p -> valoresMat * exp .)
    ,               reduce using rule 175 (p -> valoresMat * exp .)
    )               reduce using rule 175 (p -> valoresMat * exp .)
    ]               reduce using rule 175 (p -> valoresMat * exp .)
    ;               reduce using rule 175 (p -> valoresMat * exp .)
    }               reduce using rule 175 (p -> valoresMat * exp .)
    AND             reduce using rule 175 (p -> valoresMat * exp .)
    OR              reduce using rule 175 (p -> valoresMat * exp .)
    ?               reduce using rule 175 (p -> valoresMat * exp .)
    ^               shift and go to state 214


state 260

    (171) eMat -> valoresMat - valoresMat .
    (175) p -> valoresMat . * exp
    (176) p -> valoresMat . / exp
    (177) p -> valoresMat . % exp
    (181) p -> valoresMat . * valoresMat
    (182) p -> valoresMat . / valoresMat
    (183) p -> valoresMat . % valoresMat
    (186) exp -> valoresMat . ^ iSing
    (188) exp -> valoresMat . ^ valoresMat

    +               reduce using rule 171 (eMat -> valoresMat - valoresMat .)
    -               reduce using rule 171 (eMat -> valoresMat - valoresMat .)
    :               reduce using rule 171 (eMat -> valoresMat - valoresMat .)
    EQEQ            reduce using rule 171 (eMat -> valoresMat - valoresMat .)
    DISTINTO        reduce using rule 171 (eMat -> valoresMat - valoresMat .)
    >               reduce using rule 171 (eMat -> valoresMat - valoresMat .)
    <               reduce using rule 171 (eMat -> valoresMat - valoresMat .)
    ,               reduce using rule 171 (eMat -> valoresMat - valoresMat .)
    )               reduce using rule 171 (eMat -> valoresMat - valoresMat .)
    ]               reduce using rule 171 (eMat -> valoresMat - valoresMat .)
    ;               reduce using rule 171 (eMat -> valoresMat - valoresMat .)
    }               reduce using rule 171 (eMat -> valoresMat - valoresMat .)
    AND             reduce using rule 171 (eMat -> valoresMat - valoresMat .)
    OR              reduce using rule 171 (eMat -> valoresMat - valoresMat .)
    ?               reduce using rule 171 (eMat -> valoresMat - valoresMat .)
    *               shift and go to state 154
    /               shift and go to state 156
    %               shift and go to state 152
    ^               shift and go to state 157


state 261

    (169) eMat -> valoresMat - p .
    (172) p -> p . * exp
    (173) p -> p . / exp
    (174) p -> p . % exp
    (178) p -> p . * valoresMat
    (179) p -> p . / valoresMat
    (180) p -> p . % valoresMat

    +               reduce using rule 169 (eMat -> valoresMat - p .)
    -               reduce using rule 169 (eMat -> valoresMat - p .)
    :               reduce using rule 169 (eMat -> valoresMat - p .)
    EQEQ            reduce using rule 169 (eMat -> valoresMat - p .)
    DISTINTO        reduce using rule 169 (eMat -> valoresMat - p .)
    >               reduce using rule 169 (eMat -> valoresMat - p .)
    <               reduce using rule 169 (eMat -> valoresMat - p .)
    ,               reduce using rule 169 (eMat -> valoresMat - p .)
    )               reduce using rule 169 (eMat -> valoresMat - p .)
    ]               reduce using rule 169 (eMat -> valoresMat - p .)
    ;               reduce using rule 169 (eMat -> valoresMat - p .)
    }               reduce using rule 169 (eMat -> valoresMat - p .)
    AND             reduce using rule 169 (eMat -> valoresMat - p .)
    OR              reduce using rule 169 (eMat -> valoresMat - p .)
    ?               reduce using rule 169 (eMat -> valoresMat - p .)
    *               shift and go to state 205
    /               shift and go to state 206
    %               shift and go to state 204


state 262

    (182) p -> valoresMat / valoresMat .
    (186) exp -> valoresMat . ^ iSing
    (188) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 182 (p -> valoresMat / valoresMat .)
    /               reduce using rule 182 (p -> valoresMat / valoresMat .)
    %               reduce using rule 182 (p -> valoresMat / valoresMat .)
    +               reduce using rule 182 (p -> valoresMat / valoresMat .)
    -               reduce using rule 182 (p -> valoresMat / valoresMat .)
    :               reduce using rule 182 (p -> valoresMat / valoresMat .)
    EQEQ            reduce using rule 182 (p -> valoresMat / valoresMat .)
    DISTINTO        reduce using rule 182 (p -> valoresMat / valoresMat .)
    >               reduce using rule 182 (p -> valoresMat / valoresMat .)
    <               reduce using rule 182 (p -> valoresMat / valoresMat .)
    ,               reduce using rule 182 (p -> valoresMat / valoresMat .)
    )               reduce using rule 182 (p -> valoresMat / valoresMat .)
    ]               reduce using rule 182 (p -> valoresMat / valoresMat .)
    ;               reduce using rule 182 (p -> valoresMat / valoresMat .)
    }               reduce using rule 182 (p -> valoresMat / valoresMat .)
    AND             reduce using rule 182 (p -> valoresMat / valoresMat .)
    OR              reduce using rule 182 (p -> valoresMat / valoresMat .)
    ?               reduce using rule 182 (p -> valoresMat / valoresMat .)
    ^               shift and go to state 157


state 263

    (176) p -> valoresMat / exp .
    (185) exp -> exp . ^ iSing
    (187) exp -> exp . ^ valoresMat

    *               reduce using rule 176 (p -> valoresMat / exp .)
    /               reduce using rule 176 (p -> valoresMat / exp .)
    %               reduce using rule 176 (p -> valoresMat / exp .)
    +               reduce using rule 176 (p -> valoresMat / exp .)
    -               reduce using rule 176 (p -> valoresMat / exp .)
    :               reduce using rule 176 (p -> valoresMat / exp .)
    EQEQ            reduce using rule 176 (p -> valoresMat / exp .)
    DISTINTO        reduce using rule 176 (p -> valoresMat / exp .)
    >               reduce using rule 176 (p -> valoresMat / exp .)
    <               reduce using rule 176 (p -> valoresMat / exp .)
    ,               reduce using rule 176 (p -> valoresMat / exp .)
    )               reduce using rule 176 (p -> valoresMat / exp .)
    ]               reduce using rule 176 (p -> valoresMat / exp .)
    ;               reduce using rule 176 (p -> valoresMat / exp .)
    }               reduce using rule 176 (p -> valoresMat / exp .)
    AND             reduce using rule 176 (p -> valoresMat / exp .)
    OR              reduce using rule 176 (p -> valoresMat / exp .)
    ?               reduce using rule 176 (p -> valoresMat / exp .)
    ^               shift and go to state 214


state 264

    (188) exp -> valoresMat ^ valoresMat .

    ^               reduce using rule 188 (exp -> valoresMat ^ valoresMat .)
    *               reduce using rule 188 (exp -> valoresMat ^ valoresMat .)
    /               reduce using rule 188 (exp -> valoresMat ^ valoresMat .)
    %               reduce using rule 188 (exp -> valoresMat ^ valoresMat .)
    +               reduce using rule 188 (exp -> valoresMat ^ valoresMat .)
    -               reduce using rule 188 (exp -> valoresMat ^ valoresMat .)
    ,               reduce using rule 188 (exp -> valoresMat ^ valoresMat .)
    )               reduce using rule 188 (exp -> valoresMat ^ valoresMat .)
    EQEQ            reduce using rule 188 (exp -> valoresMat ^ valoresMat .)
    DISTINTO        reduce using rule 188 (exp -> valoresMat ^ valoresMat .)
    >               reduce using rule 188 (exp -> valoresMat ^ valoresMat .)
    <               reduce using rule 188 (exp -> valoresMat ^ valoresMat .)
    :               reduce using rule 188 (exp -> valoresMat ^ valoresMat .)
    ]               reduce using rule 188 (exp -> valoresMat ^ valoresMat .)
    ;               reduce using rule 188 (exp -> valoresMat ^ valoresMat .)
    AND             reduce using rule 188 (exp -> valoresMat ^ valoresMat .)
    OR              reduce using rule 188 (exp -> valoresMat ^ valoresMat .)
    ?               reduce using rule 188 (exp -> valoresMat ^ valoresMat .)
    }               reduce using rule 188 (exp -> valoresMat ^ valoresMat .)


state 265

    (186) exp -> valoresMat ^ iSing .

    ^               reduce using rule 186 (exp -> valoresMat ^ iSing .)
    *               reduce using rule 186 (exp -> valoresMat ^ iSing .)
    /               reduce using rule 186 (exp -> valoresMat ^ iSing .)
    %               reduce using rule 186 (exp -> valoresMat ^ iSing .)
    +               reduce using rule 186 (exp -> valoresMat ^ iSing .)
    -               reduce using rule 186 (exp -> valoresMat ^ iSing .)
    ,               reduce using rule 186 (exp -> valoresMat ^ iSing .)
    )               reduce using rule 186 (exp -> valoresMat ^ iSing .)
    EQEQ            reduce using rule 186 (exp -> valoresMat ^ iSing .)
    DISTINTO        reduce using rule 186 (exp -> valoresMat ^ iSing .)
    >               reduce using rule 186 (exp -> valoresMat ^ iSing .)
    <               reduce using rule 186 (exp -> valoresMat ^ iSing .)
    :               reduce using rule 186 (exp -> valoresMat ^ iSing .)
    ]               reduce using rule 186 (exp -> valoresMat ^ iSing .)
    ;               reduce using rule 186 (exp -> valoresMat ^ iSing .)
    AND             reduce using rule 186 (exp -> valoresMat ^ iSing .)
    OR              reduce using rule 186 (exp -> valoresMat ^ iSing .)
    ?               reduce using rule 186 (exp -> valoresMat ^ iSing .)
    }               reduce using rule 186 (exp -> valoresMat ^ iSing .)


state 266

    (223) tCompareEQ -> funcBool .

    EQEQ            reduce using rule 223 (tCompareEQ -> funcBool .)
    DISTINTO        reduce using rule 223 (tCompareEQ -> funcBool .)
    AND             reduce using rule 223 (tCompareEQ -> funcBool .)
    OR              reduce using rule 223 (tCompareEQ -> funcBool .)
    ?               reduce using rule 223 (tCompareEQ -> funcBool .)
    ,               reduce using rule 223 (tCompareEQ -> funcBool .)
    ]               reduce using rule 223 (tCompareEQ -> funcBool .)
    )               reduce using rule 223 (tCompareEQ -> funcBool .)
    ;               reduce using rule 223 (tCompareEQ -> funcBool .)
    :               reduce using rule 223 (tCompareEQ -> funcBool .)
    }               reduce using rule 223 (tCompareEQ -> funcBool .)


state 267

    (213) eq -> eq EQEQ mayor .

    EQEQ            reduce using rule 213 (eq -> eq EQEQ mayor .)
    DISTINTO        reduce using rule 213 (eq -> eq EQEQ mayor .)
    AND             reduce using rule 213 (eq -> eq EQEQ mayor .)
    ?               reduce using rule 213 (eq -> eq EQEQ mayor .)
    OR              reduce using rule 213 (eq -> eq EQEQ mayor .)
    ,               reduce using rule 213 (eq -> eq EQEQ mayor .)
    ]               reduce using rule 213 (eq -> eq EQEQ mayor .)
    )               reduce using rule 213 (eq -> eq EQEQ mayor .)
    ;               reduce using rule 213 (eq -> eq EQEQ mayor .)
    :               reduce using rule 213 (eq -> eq EQEQ mayor .)
    }               reduce using rule 213 (eq -> eq EQEQ mayor .)


state 268

    (229) tCompareEQ -> eMat .
    (232) tCompare -> eMat .
    (163) eMat -> eMat . + p
    (165) eMat -> eMat . + valoresMat
    (168) eMat -> eMat . - p
    (170) eMat -> eMat . - valoresMat

    EQEQ            reduce using rule 229 (tCompareEQ -> eMat .)
    DISTINTO        reduce using rule 229 (tCompareEQ -> eMat .)
    AND             reduce using rule 229 (tCompareEQ -> eMat .)
    OR              reduce using rule 229 (tCompareEQ -> eMat .)
    ?               reduce using rule 229 (tCompareEQ -> eMat .)
    ,               reduce using rule 229 (tCompareEQ -> eMat .)
    ]               reduce using rule 229 (tCompareEQ -> eMat .)
    )               reduce using rule 229 (tCompareEQ -> eMat .)
    ;               reduce using rule 229 (tCompareEQ -> eMat .)
    :               reduce using rule 229 (tCompareEQ -> eMat .)
    }               reduce using rule 229 (tCompareEQ -> eMat .)
    >               reduce using rule 232 (tCompare -> eMat .)
    <               reduce using rule 232 (tCompare -> eMat .)
    +               shift and go to state 163
    -               shift and go to state 164


state 269

    (230) tCompareEQ -> ( . ternarioBool )
    (231) tCompareEQ -> ( . ternarioMat )
    (238) tCompare -> ( . ternarioMat )
    (162) valoresMat -> ( . ternarioMat )
    (246) parenBool -> ( . expBool )
    (195) paren -> ( . eMat )
    (196) paren -> ( . valoresMat )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (51) funcBool -> . COLINEALES ( valores , valores )
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (56) vec -> . [ elem ]
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 180
    FLOAT           shift and go to state 181
    STRING          shift and go to state 176
    (               shift and go to state 362
    BOOL            shift and go to state 182
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75
    [               shift and go to state 20
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 168
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 169
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 361
    eMat                           shift and go to state 171
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 363
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    varsOps                        shift and go to state 174
    exp                            shift and go to state 98
    ternarioBool                   shift and go to state 378
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    expBool                        shift and go to state 364
    varYVals                       shift and go to state 185
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 186

state 270

    (217) eq -> eq EQEQ tCompareEQ .

    EQEQ            reduce using rule 217 (eq -> eq EQEQ tCompareEQ .)
    DISTINTO        reduce using rule 217 (eq -> eq EQEQ tCompareEQ .)
    AND             reduce using rule 217 (eq -> eq EQEQ tCompareEQ .)
    ?               reduce using rule 217 (eq -> eq EQEQ tCompareEQ .)
    OR              reduce using rule 217 (eq -> eq EQEQ tCompareEQ .)
    ,               reduce using rule 217 (eq -> eq EQEQ tCompareEQ .)
    ]               reduce using rule 217 (eq -> eq EQEQ tCompareEQ .)
    )               reduce using rule 217 (eq -> eq EQEQ tCompareEQ .)
    ;               reduce using rule 217 (eq -> eq EQEQ tCompareEQ .)
    :               reduce using rule 217 (eq -> eq EQEQ tCompareEQ .)
    }               reduce using rule 217 (eq -> eq EQEQ tCompareEQ .)


state 271

    (222) tCompareEQ -> BOOL .

    EQEQ            reduce using rule 222 (tCompareEQ -> BOOL .)
    DISTINTO        reduce using rule 222 (tCompareEQ -> BOOL .)
    AND             reduce using rule 222 (tCompareEQ -> BOOL .)
    OR              reduce using rule 222 (tCompareEQ -> BOOL .)
    ?               reduce using rule 222 (tCompareEQ -> BOOL .)
    ,               reduce using rule 222 (tCompareEQ -> BOOL .)
    ]               reduce using rule 222 (tCompareEQ -> BOOL .)
    )               reduce using rule 222 (tCompareEQ -> BOOL .)
    ;               reduce using rule 222 (tCompareEQ -> BOOL .)
    :               reduce using rule 222 (tCompareEQ -> BOOL .)
    }               reduce using rule 222 (tCompareEQ -> BOOL .)


state 272

    (225) tCompareEQ -> varsOps .
    (233) tCompare -> varsOps .
    (161) valoresMat -> varsOps .

    EQEQ            reduce using rule 225 (tCompareEQ -> varsOps .)
    DISTINTO        reduce using rule 225 (tCompareEQ -> varsOps .)
    AND             reduce using rule 225 (tCompareEQ -> varsOps .)
    OR              reduce using rule 225 (tCompareEQ -> varsOps .)
    ?               reduce using rule 225 (tCompareEQ -> varsOps .)
    ,               reduce using rule 225 (tCompareEQ -> varsOps .)
    ]               reduce using rule 225 (tCompareEQ -> varsOps .)
    )               reduce using rule 225 (tCompareEQ -> varsOps .)
    ;               reduce using rule 225 (tCompareEQ -> varsOps .)
    :               reduce using rule 225 (tCompareEQ -> varsOps .)
    }               reduce using rule 225 (tCompareEQ -> varsOps .)
    >               reduce using rule 233 (tCompare -> varsOps .)
    <               reduce using rule 233 (tCompare -> varsOps .)
    +               reduce using rule 161 (valoresMat -> varsOps .)
    -               reduce using rule 161 (valoresMat -> varsOps .)
    *               reduce using rule 161 (valoresMat -> varsOps .)
    /               reduce using rule 161 (valoresMat -> varsOps .)
    %               reduce using rule 161 (valoresMat -> varsOps .)
    ^               reduce using rule 161 (valoresMat -> varsOps .)


state 273

    (224) tCompareEQ -> varYVals .
    (234) tCompare -> varYVals .
    (146) varsOps -> varYVals . MASMAS
    (147) varsOps -> varYVals . MENOSMENOS
    (160) valoresMat -> varYVals .

    EQEQ            reduce using rule 224 (tCompareEQ -> varYVals .)
    DISTINTO        reduce using rule 224 (tCompareEQ -> varYVals .)
    AND             reduce using rule 224 (tCompareEQ -> varYVals .)
    OR              reduce using rule 224 (tCompareEQ -> varYVals .)
    ?               reduce using rule 224 (tCompareEQ -> varYVals .)
    ,               reduce using rule 224 (tCompareEQ -> varYVals .)
    ]               reduce using rule 224 (tCompareEQ -> varYVals .)
    )               reduce using rule 224 (tCompareEQ -> varYVals .)
    ;               reduce using rule 224 (tCompareEQ -> varYVals .)
    :               reduce using rule 224 (tCompareEQ -> varYVals .)
    }               reduce using rule 224 (tCompareEQ -> varYVals .)
    >               reduce using rule 234 (tCompare -> varYVals .)
    <               reduce using rule 234 (tCompare -> varYVals .)
    MASMAS          shift and go to state 51
    MENOSMENOS      shift and go to state 48
    +               reduce using rule 160 (valoresMat -> varYVals .)
    -               reduce using rule 160 (valoresMat -> varYVals .)
    *               reduce using rule 160 (valoresMat -> varYVals .)
    /               reduce using rule 160 (valoresMat -> varYVals .)
    %               reduce using rule 160 (valoresMat -> varYVals .)
    ^               reduce using rule 160 (valoresMat -> varYVals .)


state 274

    (214) eq -> eq DISTINTO mayor .

    EQEQ            reduce using rule 214 (eq -> eq DISTINTO mayor .)
    DISTINTO        reduce using rule 214 (eq -> eq DISTINTO mayor .)
    AND             reduce using rule 214 (eq -> eq DISTINTO mayor .)
    ?               reduce using rule 214 (eq -> eq DISTINTO mayor .)
    OR              reduce using rule 214 (eq -> eq DISTINTO mayor .)
    ,               reduce using rule 214 (eq -> eq DISTINTO mayor .)
    ]               reduce using rule 214 (eq -> eq DISTINTO mayor .)
    )               reduce using rule 214 (eq -> eq DISTINTO mayor .)
    ;               reduce using rule 214 (eq -> eq DISTINTO mayor .)
    :               reduce using rule 214 (eq -> eq DISTINTO mayor .)
    }               reduce using rule 214 (eq -> eq DISTINTO mayor .)


state 275

    (218) eq -> eq DISTINTO tCompareEQ .

    EQEQ            reduce using rule 218 (eq -> eq DISTINTO tCompareEQ .)
    DISTINTO        reduce using rule 218 (eq -> eq DISTINTO tCompareEQ .)
    AND             reduce using rule 218 (eq -> eq DISTINTO tCompareEQ .)
    ?               reduce using rule 218 (eq -> eq DISTINTO tCompareEQ .)
    OR              reduce using rule 218 (eq -> eq DISTINTO tCompareEQ .)
    ,               reduce using rule 218 (eq -> eq DISTINTO tCompareEQ .)
    ]               reduce using rule 218 (eq -> eq DISTINTO tCompareEQ .)
    )               reduce using rule 218 (eq -> eq DISTINTO tCompareEQ .)
    ;               reduce using rule 218 (eq -> eq DISTINTO tCompareEQ .)
    :               reduce using rule 218 (eq -> eq DISTINTO tCompareEQ .)
    }               reduce using rule 218 (eq -> eq DISTINTO tCompareEQ .)


state 276

    (209) and -> valoresBool AND eq .
    (213) eq -> eq . EQEQ mayor
    (214) eq -> eq . DISTINTO mayor
    (217) eq -> eq . EQEQ tCompareEQ
    (218) eq -> eq . DISTINTO tCompareEQ

    AND             reduce using rule 209 (and -> valoresBool AND eq .)
    ?               reduce using rule 209 (and -> valoresBool AND eq .)
    OR              reduce using rule 209 (and -> valoresBool AND eq .)
    :               reduce using rule 209 (and -> valoresBool AND eq .)
    ,               reduce using rule 209 (and -> valoresBool AND eq .)
    }               reduce using rule 209 (and -> valoresBool AND eq .)
    )               reduce using rule 209 (and -> valoresBool AND eq .)
    ]               reduce using rule 209 (and -> valoresBool AND eq .)
    ;               reduce using rule 209 (and -> valoresBool AND eq .)
    EQEQ            shift and go to state 158
    DISTINTO        shift and go to state 159


state 277

    (211) and -> valoresBool AND valoresBool .

    AND             reduce using rule 211 (and -> valoresBool AND valoresBool .)
    ?               reduce using rule 211 (and -> valoresBool AND valoresBool .)
    OR              reduce using rule 211 (and -> valoresBool AND valoresBool .)
    :               reduce using rule 211 (and -> valoresBool AND valoresBool .)
    ,               reduce using rule 211 (and -> valoresBool AND valoresBool .)
    }               reduce using rule 211 (and -> valoresBool AND valoresBool .)
    )               reduce using rule 211 (and -> valoresBool AND valoresBool .)
    ]               reduce using rule 211 (and -> valoresBool AND valoresBool .)
    ;               reduce using rule 211 (and -> valoresBool AND valoresBool .)


state 278

    (204) expBool -> valoresBool OR and .
    (208) and -> and . AND eq
    (210) and -> and . AND valoresBool

    ?               reduce using rule 204 (expBool -> valoresBool OR and .)
    OR              reduce using rule 204 (expBool -> valoresBool OR and .)
    :               reduce using rule 204 (expBool -> valoresBool OR and .)
    ;               reduce using rule 204 (expBool -> valoresBool OR and .)
    )               reduce using rule 204 (expBool -> valoresBool OR and .)
    ]               reduce using rule 204 (expBool -> valoresBool OR and .)
    ,               reduce using rule 204 (expBool -> valoresBool OR and .)
    }               reduce using rule 204 (expBool -> valoresBool OR and .)
    AND             shift and go to state 150


state 279

    (206) expBool -> valoresBool OR valoresBool .
    (209) and -> valoresBool . AND eq
    (211) and -> valoresBool . AND valoresBool

    ?               reduce using rule 206 (expBool -> valoresBool OR valoresBool .)
    OR              reduce using rule 206 (expBool -> valoresBool OR valoresBool .)
    :               reduce using rule 206 (expBool -> valoresBool OR valoresBool .)
    ;               reduce using rule 206 (expBool -> valoresBool OR valoresBool .)
    )               reduce using rule 206 (expBool -> valoresBool OR valoresBool .)
    ]               reduce using rule 206 (expBool -> valoresBool OR valoresBool .)
    ,               reduce using rule 206 (expBool -> valoresBool OR valoresBool .)
    }               reduce using rule 206 (expBool -> valoresBool OR valoresBool .)
    AND             shift and go to state 160


state 280

    (120) valoresTernarioVars -> res .

    :               reduce using rule 120 (valoresTernarioVars -> res .)
    ,               reduce using rule 120 (valoresTernarioVars -> res .)
    ]               reduce using rule 120 (valoresTernarioVars -> res .)
    )               reduce using rule 120 (valoresTernarioVars -> res .)
    ;               reduce using rule 120 (valoresTernarioVars -> res .)
    }               reduce using rule 120 (valoresTernarioVars -> res .)


state 281

    (134) valoresTernarioBool -> funcBool .
    (198) valoresBool -> funcBool .
    (223) tCompareEQ -> funcBool .

    :               reduce using rule 134 (valoresTernarioBool -> funcBool .)
    )               reduce using rule 134 (valoresTernarioBool -> funcBool .)
    ,               reduce using rule 134 (valoresTernarioBool -> funcBool .)
    ]               reduce using rule 134 (valoresTernarioBool -> funcBool .)
    ;               reduce using rule 134 (valoresTernarioBool -> funcBool .)
    }               reduce using rule 134 (valoresTernarioBool -> funcBool .)
    ?               reduce using rule 198 (valoresBool -> funcBool .)
    OR              reduce using rule 198 (valoresBool -> funcBool .)
    AND             reduce using rule 198 (valoresBool -> funcBool .)
    EQEQ            reduce using rule 223 (tCompareEQ -> funcBool .)
    DISTINTO        reduce using rule 223 (tCompareEQ -> funcBool .)


state 282

    (121) res -> RES .

    ,               reduce using rule 121 (res -> RES .)
    ]               reduce using rule 121 (res -> RES .)
    )               reduce using rule 121 (res -> RES .)
    ;               reduce using rule 121 (res -> RES .)
    :               reduce using rule 121 (res -> RES .)
    }               reduce using rule 121 (res -> RES .)


state 283

    (126) valoresTernarioMat -> funcInt .
    (156) valoresMat -> funcInt .
    (228) tCompareEQ -> funcInt .
    (236) tCompare -> funcInt .

    :               reduce using rule 126 (valoresTernarioMat -> funcInt .)
    ,               reduce using rule 126 (valoresTernarioMat -> funcInt .)
    ]               reduce using rule 126 (valoresTernarioMat -> funcInt .)
    )               reduce using rule 126 (valoresTernarioMat -> funcInt .)
    ;               reduce using rule 126 (valoresTernarioMat -> funcInt .)
    }               reduce using rule 126 (valoresTernarioMat -> funcInt .)
    +               reduce using rule 156 (valoresMat -> funcInt .)
    -               reduce using rule 156 (valoresMat -> funcInt .)
    *               reduce using rule 156 (valoresMat -> funcInt .)
    /               reduce using rule 156 (valoresMat -> funcInt .)
    %               reduce using rule 156 (valoresMat -> funcInt .)
    ^               reduce using rule 156 (valoresMat -> funcInt .)
    EQEQ            reduce using rule 228 (tCompareEQ -> funcInt .)
    DISTINTO        reduce using rule 228 (tCompareEQ -> funcInt .)
    >               reduce using rule 236 (tCompare -> funcInt .)
    <               reduce using rule 236 (tCompare -> funcInt .)


state 284

    (122) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (204) expBool -> valoresBool . OR and
    (206) expBool -> valoresBool . OR valoresBool
    (103) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (209) and -> valoresBool . AND eq
    (211) and -> valoresBool . AND valoresBool

    ?               shift and go to state 162
    OR              shift and go to state 161
    AND             shift and go to state 160


state 285

    (128) valoresTernarioMat -> eMat .
    (163) eMat -> eMat . + p
    (165) eMat -> eMat . + valoresMat
    (168) eMat -> eMat . - p
    (170) eMat -> eMat . - valoresMat
    (229) tCompareEQ -> eMat .
    (232) tCompare -> eMat .

    :               reduce using rule 128 (valoresTernarioMat -> eMat .)
    ,               reduce using rule 128 (valoresTernarioMat -> eMat .)
    ]               reduce using rule 128 (valoresTernarioMat -> eMat .)
    )               reduce using rule 128 (valoresTernarioMat -> eMat .)
    ;               reduce using rule 128 (valoresTernarioMat -> eMat .)
    }               reduce using rule 128 (valoresTernarioMat -> eMat .)
    +               shift and go to state 163
    -               shift and go to state 164
    EQEQ            reduce using rule 229 (tCompareEQ -> eMat .)
    DISTINTO        reduce using rule 229 (tCompareEQ -> eMat .)
    >               reduce using rule 232 (tCompare -> eMat .)
    <               reduce using rule 232 (tCompare -> eMat .)


state 286

    (131) ternarioBool -> valoresBool ? valoresTernarioBool . : valoresTernarioBool
    (107) ternarioVars -> valoresBool ? valoresTernarioBool . : valoresTernarioVars

    :               shift and go to state 379


state 287

    (129) valoresTernarioMat -> ternarioMat .

    :               reduce using rule 129 (valoresTernarioMat -> ternarioMat .)
    ,               reduce using rule 129 (valoresTernarioMat -> ternarioMat .)
    ]               reduce using rule 129 (valoresTernarioMat -> ternarioMat .)
    )               reduce using rule 129 (valoresTernarioMat -> ternarioMat .)
    ;               reduce using rule 129 (valoresTernarioMat -> ternarioMat .)
    }               reduce using rule 129 (valoresTernarioMat -> ternarioMat .)


state 288

    (114) valoresTernarioVars -> vec .
    (60) vecVal -> vec . [ expresion ]
    (63) vecVal -> vec . [ INT ]

    :               reduce using rule 114 (valoresTernarioVars -> vec .)
    ,               reduce using rule 114 (valoresTernarioVars -> vec .)
    ]               reduce using rule 114 (valoresTernarioVars -> vec .)
    )               reduce using rule 114 (valoresTernarioVars -> vec .)
    ;               reduce using rule 114 (valoresTernarioVars -> vec .)
    }               reduce using rule 114 (valoresTernarioVars -> vec .)
    [               shift and go to state 113


state 289

    (118) valoresTernarioVars -> varsOps .
    (161) valoresMat -> varsOps .
    (200) valoresBool -> varsOps .
    (225) tCompareEQ -> varsOps .
    (233) tCompare -> varsOps .

    :               reduce using rule 118 (valoresTernarioVars -> varsOps .)
    ,               reduce using rule 118 (valoresTernarioVars -> varsOps .)
    ]               reduce using rule 118 (valoresTernarioVars -> varsOps .)
    )               reduce using rule 118 (valoresTernarioVars -> varsOps .)
    ;               reduce using rule 118 (valoresTernarioVars -> varsOps .)
    }               reduce using rule 118 (valoresTernarioVars -> varsOps .)
    +               reduce using rule 161 (valoresMat -> varsOps .)
    -               reduce using rule 161 (valoresMat -> varsOps .)
    *               reduce using rule 161 (valoresMat -> varsOps .)
    /               reduce using rule 161 (valoresMat -> varsOps .)
    %               reduce using rule 161 (valoresMat -> varsOps .)
    ^               reduce using rule 161 (valoresMat -> varsOps .)
    ?               reduce using rule 200 (valoresBool -> varsOps .)
    OR              reduce using rule 200 (valoresBool -> varsOps .)
    AND             reduce using rule 200 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 225 (tCompareEQ -> varsOps .)
    DISTINTO        reduce using rule 225 (tCompareEQ -> varsOps .)
    >               reduce using rule 233 (tCompare -> varsOps .)
    <               reduce using rule 233 (tCompare -> varsOps .)


state 290

    (113) valoresTernarioVars -> reg .
    (93) atributos -> reg . . valoresCampos

    :               reduce using rule 113 (valoresTernarioVars -> reg .)
    ,               reduce using rule 113 (valoresTernarioVars -> reg .)
    ]               reduce using rule 113 (valoresTernarioVars -> reg .)
    )               reduce using rule 113 (valoresTernarioVars -> reg .)
    ;               reduce using rule 113 (valoresTernarioVars -> reg .)
    }               reduce using rule 113 (valoresTernarioVars -> reg .)
    .               shift and go to state 197


state 291

    (103) ternarioVars -> valoresBool ? valoresTernarioVars . : valoresTernarioVars
    (104) ternarioVars -> valoresBool ? valoresTernarioVars . : valoresTernarioMat
    (106) ternarioVars -> valoresBool ? valoresTernarioVars . : valoresTernarioBool

    :               shift and go to state 380


state 292

    (127) valoresTernarioMat -> STRING .
    (159) valoresMat -> STRING .

    :               reduce using rule 127 (valoresTernarioMat -> STRING .)
    ,               reduce using rule 127 (valoresTernarioMat -> STRING .)
    ]               reduce using rule 127 (valoresTernarioMat -> STRING .)
    )               reduce using rule 127 (valoresTernarioMat -> STRING .)
    ;               reduce using rule 127 (valoresTernarioMat -> STRING .)
    }               reduce using rule 127 (valoresTernarioMat -> STRING .)
    +               reduce using rule 159 (valoresMat -> STRING .)
    -               reduce using rule 159 (valoresMat -> STRING .)
    *               reduce using rule 159 (valoresMat -> STRING .)
    /               reduce using rule 159 (valoresMat -> STRING .)
    %               reduce using rule 159 (valoresMat -> STRING .)
    ^               reduce using rule 159 (valoresMat -> STRING .)


state 293

    (135) valoresTernarioBool -> ternarioBool .

    :               reduce using rule 135 (valoresTernarioBool -> ternarioBool .)
    )               reduce using rule 135 (valoresTernarioBool -> ternarioBool .)
    ,               reduce using rule 135 (valoresTernarioBool -> ternarioBool .)
    ]               reduce using rule 135 (valoresTernarioBool -> ternarioBool .)
    ;               reduce using rule 135 (valoresTernarioBool -> ternarioBool .)
    }               reduce using rule 135 (valoresTernarioBool -> ternarioBool .)


state 294

    (122) ternarioMat -> valoresBool ? valoresTernarioMat . : valoresTernarioMat
    (105) ternarioVars -> valoresBool ? valoresTernarioMat . : valoresTernarioVars

    :               shift and go to state 381


state 295

    (124) valoresTernarioMat -> INT .
    (154) valoresMat -> INT .
    (226) tCompareEQ -> INT .
    (235) tCompare -> INT .

    :               reduce using rule 124 (valoresTernarioMat -> INT .)
    ,               reduce using rule 124 (valoresTernarioMat -> INT .)
    ]               reduce using rule 124 (valoresTernarioMat -> INT .)
    )               reduce using rule 124 (valoresTernarioMat -> INT .)
    ;               reduce using rule 124 (valoresTernarioMat -> INT .)
    }               reduce using rule 124 (valoresTernarioMat -> INT .)
    +               reduce using rule 154 (valoresMat -> INT .)
    -               reduce using rule 154 (valoresMat -> INT .)
    *               reduce using rule 154 (valoresMat -> INT .)
    /               reduce using rule 154 (valoresMat -> INT .)
    %               reduce using rule 154 (valoresMat -> INT .)
    ^               reduce using rule 154 (valoresMat -> INT .)
    EQEQ            reduce using rule 226 (tCompareEQ -> INT .)
    DISTINTO        reduce using rule 226 (tCompareEQ -> INT .)
    >               reduce using rule 235 (tCompare -> INT .)
    <               reduce using rule 235 (tCompare -> INT .)


state 296

    (125) valoresTernarioMat -> FLOAT .
    (155) valoresMat -> FLOAT .
    (227) tCompareEQ -> FLOAT .
    (237) tCompare -> FLOAT .

    :               reduce using rule 125 (valoresTernarioMat -> FLOAT .)
    ,               reduce using rule 125 (valoresTernarioMat -> FLOAT .)
    ]               reduce using rule 125 (valoresTernarioMat -> FLOAT .)
    )               reduce using rule 125 (valoresTernarioMat -> FLOAT .)
    ;               reduce using rule 125 (valoresTernarioMat -> FLOAT .)
    }               reduce using rule 125 (valoresTernarioMat -> FLOAT .)
    +               reduce using rule 155 (valoresMat -> FLOAT .)
    -               reduce using rule 155 (valoresMat -> FLOAT .)
    *               reduce using rule 155 (valoresMat -> FLOAT .)
    /               reduce using rule 155 (valoresMat -> FLOAT .)
    %               reduce using rule 155 (valoresMat -> FLOAT .)
    ^               reduce using rule 155 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 227 (tCompareEQ -> FLOAT .)
    DISTINTO        reduce using rule 227 (tCompareEQ -> FLOAT .)
    >               reduce using rule 237 (tCompare -> FLOAT .)
    <               reduce using rule 237 (tCompare -> FLOAT .)


state 297

    (133) valoresTernarioBool -> BOOL .
    (197) valoresBool -> BOOL .
    (222) tCompareEQ -> BOOL .

    :               reduce using rule 133 (valoresTernarioBool -> BOOL .)
    )               reduce using rule 133 (valoresTernarioBool -> BOOL .)
    ,               reduce using rule 133 (valoresTernarioBool -> BOOL .)
    ]               reduce using rule 133 (valoresTernarioBool -> BOOL .)
    ;               reduce using rule 133 (valoresTernarioBool -> BOOL .)
    }               reduce using rule 133 (valoresTernarioBool -> BOOL .)
    ?               reduce using rule 197 (valoresBool -> BOOL .)
    OR              reduce using rule 197 (valoresBool -> BOOL .)
    AND             reduce using rule 197 (valoresBool -> BOOL .)
    EQEQ            reduce using rule 222 (tCompareEQ -> BOOL .)
    DISTINTO        reduce using rule 222 (tCompareEQ -> BOOL .)


state 298

    (137) valoresTernarioBool -> expBool .
    (123) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (132) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> expBool . OR and
    (205) expBool -> expBool . OR valoresBool
    (108) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars

    :               reduce using rule 137 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 199
    OR              shift and go to state 198


state 299

    (130) valoresTernarioMat -> ( . ternarioMat )
    (136) valoresTernarioBool -> ( . ternarioBool )
    (116) valoresTernarioVars -> ( . ternarioVars )
    (162) valoresMat -> ( . ternarioMat )
    (201) valoresBool -> ( . ternarioBool )
    (230) tCompareEQ -> ( . ternarioBool )
    (231) tCompareEQ -> ( . ternarioMat )
    (195) paren -> ( . eMat )
    (196) paren -> ( . valoresMat )
    (238) tCompare -> ( . ternarioMat )
    (246) parenBool -> ( . expBool )
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (56) vec -> . [ elem ]
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 180
    FLOAT           shift and go to state 181
    STRING          shift and go to state 176
    (               shift and go to state 172
    BOOL            shift and go to state 182
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75
    [               shift and go to state 20
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 168
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 169
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 170
    eMat                           shift and go to state 171
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 382
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    exp                            shift and go to state 98
    ternarioBool                   shift and go to state 383
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    expBool                        shift and go to state 183
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 174
    ternarioVars                   shift and go to state 384
    varYVals                       shift and go to state 185
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 186

state 300

    (115) valoresTernarioVars -> ternarioVars .

    :               reduce using rule 115 (valoresTernarioVars -> ternarioVars .)
    ,               reduce using rule 115 (valoresTernarioVars -> ternarioVars .)
    ]               reduce using rule 115 (valoresTernarioVars -> ternarioVars .)
    )               reduce using rule 115 (valoresTernarioVars -> ternarioVars .)
    ;               reduce using rule 115 (valoresTernarioVars -> ternarioVars .)
    }               reduce using rule 115 (valoresTernarioVars -> ternarioVars .)


state 301

    (119) valoresTernarioVars -> varYVals .
    (146) varsOps -> varYVals . MASMAS
    (147) varsOps -> varYVals . MENOSMENOS
    (160) valoresMat -> varYVals .
    (199) valoresBool -> varYVals .
    (224) tCompareEQ -> varYVals .
    (234) tCompare -> varYVals .

    :               reduce using rule 119 (valoresTernarioVars -> varYVals .)
    ,               reduce using rule 119 (valoresTernarioVars -> varYVals .)
    ]               reduce using rule 119 (valoresTernarioVars -> varYVals .)
    )               reduce using rule 119 (valoresTernarioVars -> varYVals .)
    ;               reduce using rule 119 (valoresTernarioVars -> varYVals .)
    }               reduce using rule 119 (valoresTernarioVars -> varYVals .)
    MASMAS          shift and go to state 51
    MENOSMENOS      shift and go to state 48
    +               reduce using rule 160 (valoresMat -> varYVals .)
    -               reduce using rule 160 (valoresMat -> varYVals .)
    *               reduce using rule 160 (valoresMat -> varYVals .)
    /               reduce using rule 160 (valoresMat -> varYVals .)
    %               reduce using rule 160 (valoresMat -> varYVals .)
    ^               reduce using rule 160 (valoresMat -> varYVals .)
    ?               reduce using rule 199 (valoresBool -> varYVals .)
    OR              reduce using rule 199 (valoresBool -> varYVals .)
    AND             reduce using rule 199 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 224 (tCompareEQ -> varYVals .)
    DISTINTO        reduce using rule 224 (tCompareEQ -> varYVals .)
    >               reduce using rule 234 (tCompare -> varYVals .)
    <               reduce using rule 234 (tCompare -> varYVals .)


state 302

    (117) valoresTernarioVars -> atributos .
    (157) valoresMat -> atributos .

    :               reduce using rule 117 (valoresTernarioVars -> atributos .)
    ,               reduce using rule 117 (valoresTernarioVars -> atributos .)
    ]               reduce using rule 117 (valoresTernarioVars -> atributos .)
    )               reduce using rule 117 (valoresTernarioVars -> atributos .)
    ;               reduce using rule 117 (valoresTernarioVars -> atributos .)
    }               reduce using rule 117 (valoresTernarioVars -> atributos .)
    +               reduce using rule 157 (valoresMat -> atributos .)
    -               reduce using rule 157 (valoresMat -> atributos .)
    *               reduce using rule 157 (valoresMat -> atributos .)
    /               reduce using rule 157 (valoresMat -> atributos .)
    %               reduce using rule 157 (valoresMat -> atributos .)
    ^               reduce using rule 157 (valoresMat -> atributos .)


state 303

    (165) eMat -> eMat + valoresMat .
    (175) p -> valoresMat . * exp
    (176) p -> valoresMat . / exp
    (177) p -> valoresMat . % exp
    (181) p -> valoresMat . * valoresMat
    (182) p -> valoresMat . / valoresMat
    (183) p -> valoresMat . % valoresMat
    (186) exp -> valoresMat . ^ iSing
    (188) exp -> valoresMat . ^ valoresMat

    +               reduce using rule 165 (eMat -> eMat + valoresMat .)
    -               reduce using rule 165 (eMat -> eMat + valoresMat .)
    :               reduce using rule 165 (eMat -> eMat + valoresMat .)
    EQEQ            reduce using rule 165 (eMat -> eMat + valoresMat .)
    DISTINTO        reduce using rule 165 (eMat -> eMat + valoresMat .)
    >               reduce using rule 165 (eMat -> eMat + valoresMat .)
    <               reduce using rule 165 (eMat -> eMat + valoresMat .)
    ,               reduce using rule 165 (eMat -> eMat + valoresMat .)
    )               reduce using rule 165 (eMat -> eMat + valoresMat .)
    ]               reduce using rule 165 (eMat -> eMat + valoresMat .)
    ;               reduce using rule 165 (eMat -> eMat + valoresMat .)
    }               reduce using rule 165 (eMat -> eMat + valoresMat .)
    AND             reduce using rule 165 (eMat -> eMat + valoresMat .)
    OR              reduce using rule 165 (eMat -> eMat + valoresMat .)
    ?               reduce using rule 165 (eMat -> eMat + valoresMat .)
    *               shift and go to state 154
    /               shift and go to state 156
    %               shift and go to state 152
    ^               shift and go to state 157


state 304

    (163) eMat -> eMat + p .
    (172) p -> p . * exp
    (173) p -> p . / exp
    (174) p -> p . % exp
    (178) p -> p . * valoresMat
    (179) p -> p . / valoresMat
    (180) p -> p . % valoresMat

    +               reduce using rule 163 (eMat -> eMat + p .)
    -               reduce using rule 163 (eMat -> eMat + p .)
    :               reduce using rule 163 (eMat -> eMat + p .)
    EQEQ            reduce using rule 163 (eMat -> eMat + p .)
    DISTINTO        reduce using rule 163 (eMat -> eMat + p .)
    >               reduce using rule 163 (eMat -> eMat + p .)
    <               reduce using rule 163 (eMat -> eMat + p .)
    ,               reduce using rule 163 (eMat -> eMat + p .)
    )               reduce using rule 163 (eMat -> eMat + p .)
    ]               reduce using rule 163 (eMat -> eMat + p .)
    ;               reduce using rule 163 (eMat -> eMat + p .)
    }               reduce using rule 163 (eMat -> eMat + p .)
    AND             reduce using rule 163 (eMat -> eMat + p .)
    OR              reduce using rule 163 (eMat -> eMat + p .)
    ?               reduce using rule 163 (eMat -> eMat + p .)
    *               shift and go to state 205
    /               shift and go to state 206
    %               shift and go to state 204


state 305

    (170) eMat -> eMat - valoresMat .
    (175) p -> valoresMat . * exp
    (176) p -> valoresMat . / exp
    (177) p -> valoresMat . % exp
    (181) p -> valoresMat . * valoresMat
    (182) p -> valoresMat . / valoresMat
    (183) p -> valoresMat . % valoresMat
    (186) exp -> valoresMat . ^ iSing
    (188) exp -> valoresMat . ^ valoresMat

    +               reduce using rule 170 (eMat -> eMat - valoresMat .)
    -               reduce using rule 170 (eMat -> eMat - valoresMat .)
    :               reduce using rule 170 (eMat -> eMat - valoresMat .)
    EQEQ            reduce using rule 170 (eMat -> eMat - valoresMat .)
    DISTINTO        reduce using rule 170 (eMat -> eMat - valoresMat .)
    >               reduce using rule 170 (eMat -> eMat - valoresMat .)
    <               reduce using rule 170 (eMat -> eMat - valoresMat .)
    ,               reduce using rule 170 (eMat -> eMat - valoresMat .)
    )               reduce using rule 170 (eMat -> eMat - valoresMat .)
    ]               reduce using rule 170 (eMat -> eMat - valoresMat .)
    ;               reduce using rule 170 (eMat -> eMat - valoresMat .)
    }               reduce using rule 170 (eMat -> eMat - valoresMat .)
    AND             reduce using rule 170 (eMat -> eMat - valoresMat .)
    OR              reduce using rule 170 (eMat -> eMat - valoresMat .)
    ?               reduce using rule 170 (eMat -> eMat - valoresMat .)
    *               shift and go to state 154
    /               shift and go to state 156
    %               shift and go to state 152
    ^               shift and go to state 157


state 306

    (168) eMat -> eMat - p .
    (172) p -> p . * exp
    (173) p -> p . / exp
    (174) p -> p . % exp
    (178) p -> p . * valoresMat
    (179) p -> p . / valoresMat
    (180) p -> p . % valoresMat

    +               reduce using rule 168 (eMat -> eMat - p .)
    -               reduce using rule 168 (eMat -> eMat - p .)
    :               reduce using rule 168 (eMat -> eMat - p .)
    EQEQ            reduce using rule 168 (eMat -> eMat - p .)
    DISTINTO        reduce using rule 168 (eMat -> eMat - p .)
    >               reduce using rule 168 (eMat -> eMat - p .)
    <               reduce using rule 168 (eMat -> eMat - p .)
    ,               reduce using rule 168 (eMat -> eMat - p .)
    )               reduce using rule 168 (eMat -> eMat - p .)
    ]               reduce using rule 168 (eMat -> eMat - p .)
    ;               reduce using rule 168 (eMat -> eMat - p .)
    }               reduce using rule 168 (eMat -> eMat - p .)
    AND             reduce using rule 168 (eMat -> eMat - p .)
    OR              reduce using rule 168 (eMat -> eMat - p .)
    ?               reduce using rule 168 (eMat -> eMat - p .)
    *               shift and go to state 205
    /               shift and go to state 206
    %               shift and go to state 204


state 307

    (215) eq -> tCompareEQ EQEQ mayor .

    EQEQ            reduce using rule 215 (eq -> tCompareEQ EQEQ mayor .)
    DISTINTO        reduce using rule 215 (eq -> tCompareEQ EQEQ mayor .)
    AND             reduce using rule 215 (eq -> tCompareEQ EQEQ mayor .)
    ?               reduce using rule 215 (eq -> tCompareEQ EQEQ mayor .)
    OR              reduce using rule 215 (eq -> tCompareEQ EQEQ mayor .)
    ,               reduce using rule 215 (eq -> tCompareEQ EQEQ mayor .)
    ]               reduce using rule 215 (eq -> tCompareEQ EQEQ mayor .)
    )               reduce using rule 215 (eq -> tCompareEQ EQEQ mayor .)
    ;               reduce using rule 215 (eq -> tCompareEQ EQEQ mayor .)
    :               reduce using rule 215 (eq -> tCompareEQ EQEQ mayor .)
    }               reduce using rule 215 (eq -> tCompareEQ EQEQ mayor .)


state 308

    (219) eq -> tCompareEQ EQEQ tCompareEQ .

    EQEQ            reduce using rule 219 (eq -> tCompareEQ EQEQ tCompareEQ .)
    DISTINTO        reduce using rule 219 (eq -> tCompareEQ EQEQ tCompareEQ .)
    AND             reduce using rule 219 (eq -> tCompareEQ EQEQ tCompareEQ .)
    ?               reduce using rule 219 (eq -> tCompareEQ EQEQ tCompareEQ .)
    OR              reduce using rule 219 (eq -> tCompareEQ EQEQ tCompareEQ .)
    ,               reduce using rule 219 (eq -> tCompareEQ EQEQ tCompareEQ .)
    ]               reduce using rule 219 (eq -> tCompareEQ EQEQ tCompareEQ .)
    )               reduce using rule 219 (eq -> tCompareEQ EQEQ tCompareEQ .)
    ;               reduce using rule 219 (eq -> tCompareEQ EQEQ tCompareEQ .)
    :               reduce using rule 219 (eq -> tCompareEQ EQEQ tCompareEQ .)
    }               reduce using rule 219 (eq -> tCompareEQ EQEQ tCompareEQ .)


state 309

    (216) eq -> tCompareEQ DISTINTO mayor .

    EQEQ            reduce using rule 216 (eq -> tCompareEQ DISTINTO mayor .)
    DISTINTO        reduce using rule 216 (eq -> tCompareEQ DISTINTO mayor .)
    AND             reduce using rule 216 (eq -> tCompareEQ DISTINTO mayor .)
    ?               reduce using rule 216 (eq -> tCompareEQ DISTINTO mayor .)
    OR              reduce using rule 216 (eq -> tCompareEQ DISTINTO mayor .)
    ,               reduce using rule 216 (eq -> tCompareEQ DISTINTO mayor .)
    ]               reduce using rule 216 (eq -> tCompareEQ DISTINTO mayor .)
    )               reduce using rule 216 (eq -> tCompareEQ DISTINTO mayor .)
    ;               reduce using rule 216 (eq -> tCompareEQ DISTINTO mayor .)
    :               reduce using rule 216 (eq -> tCompareEQ DISTINTO mayor .)
    }               reduce using rule 216 (eq -> tCompareEQ DISTINTO mayor .)


state 310

    (220) eq -> tCompareEQ DISTINTO tCompareEQ .

    EQEQ            reduce using rule 220 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    DISTINTO        reduce using rule 220 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    AND             reduce using rule 220 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    ?               reduce using rule 220 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    OR              reduce using rule 220 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    ,               reduce using rule 220 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    ]               reduce using rule 220 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    )               reduce using rule 220 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    ;               reduce using rule 220 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    :               reduce using rule 220 (eq -> tCompareEQ DISTINTO tCompareEQ .)
    }               reduce using rule 220 (eq -> tCompareEQ DISTINTO tCompareEQ .)


state 311

    (196) paren -> ( valoresMat ) .

    ^               reduce using rule 196 (paren -> ( valoresMat ) .)
    *               reduce using rule 196 (paren -> ( valoresMat ) .)
    /               reduce using rule 196 (paren -> ( valoresMat ) .)
    %               reduce using rule 196 (paren -> ( valoresMat ) .)
    +               reduce using rule 196 (paren -> ( valoresMat ) .)
    -               reduce using rule 196 (paren -> ( valoresMat ) .)
    :               reduce using rule 196 (paren -> ( valoresMat ) .)
    EQEQ            reduce using rule 196 (paren -> ( valoresMat ) .)
    DISTINTO        reduce using rule 196 (paren -> ( valoresMat ) .)
    >               reduce using rule 196 (paren -> ( valoresMat ) .)
    <               reduce using rule 196 (paren -> ( valoresMat ) .)
    ,               reduce using rule 196 (paren -> ( valoresMat ) .)
    ]               reduce using rule 196 (paren -> ( valoresMat ) .)
    )               reduce using rule 196 (paren -> ( valoresMat ) .)
    ;               reduce using rule 196 (paren -> ( valoresMat ) .)
    }               reduce using rule 196 (paren -> ( valoresMat ) .)
    AND             reduce using rule 196 (paren -> ( valoresMat ) .)
    OR              reduce using rule 196 (paren -> ( valoresMat ) .)
    ?               reduce using rule 196 (paren -> ( valoresMat ) .)


state 312

    (195) paren -> ( eMat ) .

    ^               reduce using rule 195 (paren -> ( eMat ) .)
    *               reduce using rule 195 (paren -> ( eMat ) .)
    /               reduce using rule 195 (paren -> ( eMat ) .)
    %               reduce using rule 195 (paren -> ( eMat ) .)
    +               reduce using rule 195 (paren -> ( eMat ) .)
    -               reduce using rule 195 (paren -> ( eMat ) .)
    :               reduce using rule 195 (paren -> ( eMat ) .)
    EQEQ            reduce using rule 195 (paren -> ( eMat ) .)
    DISTINTO        reduce using rule 195 (paren -> ( eMat ) .)
    >               reduce using rule 195 (paren -> ( eMat ) .)
    <               reduce using rule 195 (paren -> ( eMat ) .)
    ,               reduce using rule 195 (paren -> ( eMat ) .)
    ]               reduce using rule 195 (paren -> ( eMat ) .)
    )               reduce using rule 195 (paren -> ( eMat ) .)
    ;               reduce using rule 195 (paren -> ( eMat ) .)
    }               reduce using rule 195 (paren -> ( eMat ) .)
    AND             reduce using rule 195 (paren -> ( eMat ) .)
    OR              reduce using rule 195 (paren -> ( eMat ) .)
    ?               reduce using rule 195 (paren -> ( eMat ) .)


state 313

    (122) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (204) expBool -> valoresBool . OR and
    (206) expBool -> valoresBool . OR valoresBool
    (209) and -> valoresBool . AND eq
    (211) and -> valoresBool . AND valoresBool

    ?               shift and go to state 385
    OR              shift and go to state 161
    AND             shift and go to state 160


state 314

    (162) valoresMat -> ( ternarioMat . )
    (231) tCompareEQ -> ( ternarioMat . )
    (238) tCompare -> ( ternarioMat . )

    )               shift and go to state 386


state 315

    (201) valoresBool -> ( ternarioBool . )
    (230) tCompareEQ -> ( ternarioBool . )

    )               shift and go to state 387


state 316

    (246) parenBool -> ( expBool . )
    (123) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (132) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> expBool . OR and
    (205) expBool -> expBool . OR valoresBool

    )               shift and go to state 319
    ?               shift and go to state 388
    OR              shift and go to state 198


state 317

    (99) ternario -> ( ternarioMat ) .
    (162) valoresMat -> ( ternarioMat ) .
    (231) tCompareEQ -> ( ternarioMat ) .
    (238) tCompare -> ( ternarioMat ) .

    ,               reduce using rule 99 (ternario -> ( ternarioMat ) .)
    )               reduce using rule 99 (ternario -> ( ternarioMat ) .)
    ]               reduce using rule 99 (ternario -> ( ternarioMat ) .)
    ;               reduce using rule 99 (ternario -> ( ternarioMat ) .)
    }               reduce using rule 99 (ternario -> ( ternarioMat ) .)
    +               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    ^               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    EQEQ            reduce using rule 231 (tCompareEQ -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 231 (tCompareEQ -> ( ternarioMat ) .)
    >               reduce using rule 238 (tCompare -> ( ternarioMat ) .)
    <               reduce using rule 238 (tCompare -> ( ternarioMat ) .)


state 318

    (100) ternario -> ( ternarioBool ) .
    (201) valoresBool -> ( ternarioBool ) .
    (230) tCompareEQ -> ( ternarioBool ) .

    ,               reduce using rule 100 (ternario -> ( ternarioBool ) .)
    )               reduce using rule 100 (ternario -> ( ternarioBool ) .)
    ]               reduce using rule 100 (ternario -> ( ternarioBool ) .)
    ;               reduce using rule 100 (ternario -> ( ternarioBool ) .)
    }               reduce using rule 100 (ternario -> ( ternarioBool ) .)
    OR              reduce using rule 201 (valoresBool -> ( ternarioBool ) .)
    AND             reduce using rule 201 (valoresBool -> ( ternarioBool ) .)
    ?               reduce using rule 201 (valoresBool -> ( ternarioBool ) .)
    EQEQ            reduce using rule 230 (tCompareEQ -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 230 (tCompareEQ -> ( ternarioBool ) .)


state 319

    (246) parenBool -> ( expBool ) .

    EQEQ            reduce using rule 246 (parenBool -> ( expBool ) .)
    DISTINTO        reduce using rule 246 (parenBool -> ( expBool ) .)
    AND             reduce using rule 246 (parenBool -> ( expBool ) .)
    ?               reduce using rule 246 (parenBool -> ( expBool ) .)
    OR              reduce using rule 246 (parenBool -> ( expBool ) .)
    :               reduce using rule 246 (parenBool -> ( expBool ) .)
    ,               reduce using rule 246 (parenBool -> ( expBool ) .)
    ]               reduce using rule 246 (parenBool -> ( expBool ) .)
    )               reduce using rule 246 (parenBool -> ( expBool ) .)
    ;               reduce using rule 246 (parenBool -> ( expBool ) .)
    }               reduce using rule 246 (parenBool -> ( expBool ) .)


state 320

    (102) ternario -> ( ternarioVars ) .

    ,               reduce using rule 102 (ternario -> ( ternarioVars ) .)
    )               reduce using rule 102 (ternario -> ( ternarioVars ) .)
    ]               reduce using rule 102 (ternario -> ( ternarioVars ) .)
    ;               reduce using rule 102 (ternario -> ( ternarioVars ) .)
    }               reduce using rule 102 (ternario -> ( ternarioVars ) .)


state 321

    (122) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (204) expBool -> valoresBool . OR and
    (206) expBool -> valoresBool . OR valoresBool
    (209) and -> valoresBool . AND eq
    (211) and -> valoresBool . AND valoresBool

    ?               shift and go to state 389
    OR              shift and go to state 161
    AND             shift and go to state 160


state 322

    (162) valoresMat -> ( . ternarioMat )
    (201) valoresBool -> ( . ternarioBool )
    (195) paren -> ( . eMat )
    (196) paren -> ( . valoresMat )
    (230) tCompareEQ -> ( . ternarioBool )
    (231) tCompareEQ -> ( . ternarioMat )
    (238) tCompare -> ( . ternarioMat )
    (246) parenBool -> ( . expBool )
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (56) vec -> . [ elem ]
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 180
    FLOAT           shift and go to state 181
    STRING          shift and go to state 176
    (               shift and go to state 172
    BOOL            shift and go to state 182
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75
    [               shift and go to state 20
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 168
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 169
    eq                             shift and go to state 69
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 171
    tCompareEQ                     shift and go to state 73
    valoresBool                    shift and go to state 313
    ternarioMat                    shift and go to state 314
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    varsOps                        shift and go to state 174
    exp                            shift and go to state 98
    ternarioBool                   shift and go to state 315
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    expBool                        shift and go to state 316
    varYVals                       shift and go to state 185
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 186

state 323

    (162) valoresMat -> ( ternarioMat . )

    )               shift and go to state 390


state 324

    (160) valoresMat -> varYVals .
    (146) varsOps -> varYVals . MASMAS
    (147) varsOps -> varYVals . MENOSMENOS
    (199) valoresBool -> varYVals .
    (224) tCompareEQ -> varYVals .
    (234) tCompare -> varYVals .

    )               reduce using rule 160 (valoresMat -> varYVals .)
    +               reduce using rule 160 (valoresMat -> varYVals .)
    -               reduce using rule 160 (valoresMat -> varYVals .)
    *               reduce using rule 160 (valoresMat -> varYVals .)
    /               reduce using rule 160 (valoresMat -> varYVals .)
    %               reduce using rule 160 (valoresMat -> varYVals .)
    ^               reduce using rule 160 (valoresMat -> varYVals .)
    MASMAS          shift and go to state 51
    MENOSMENOS      shift and go to state 48
    ?               reduce using rule 199 (valoresBool -> varYVals .)
    OR              reduce using rule 199 (valoresBool -> varYVals .)
    AND             reduce using rule 199 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 224 (tCompareEQ -> varYVals .)
    DISTINTO        reduce using rule 224 (tCompareEQ -> varYVals .)
    >               reduce using rule 234 (tCompare -> varYVals .)
    <               reduce using rule 234 (tCompare -> varYVals .)


state 325

    (123) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (203) expBool -> expBool . OR and
    (205) expBool -> expBool . OR valoresBool

    ?               shift and go to state 391
    OR              shift and go to state 198


state 326

    (96) valoresCampos -> BEGIN .

    ,               reduce using rule 96 (valoresCampos -> BEGIN .)
    ]               reduce using rule 96 (valoresCampos -> BEGIN .)
    +               reduce using rule 96 (valoresCampos -> BEGIN .)
    -               reduce using rule 96 (valoresCampos -> BEGIN .)
    *               reduce using rule 96 (valoresCampos -> BEGIN .)
    /               reduce using rule 96 (valoresCampos -> BEGIN .)
    %               reduce using rule 96 (valoresCampos -> BEGIN .)
    ^               reduce using rule 96 (valoresCampos -> BEGIN .)
    )               reduce using rule 96 (valoresCampos -> BEGIN .)
    ;               reduce using rule 96 (valoresCampos -> BEGIN .)
    EQEQ            reduce using rule 96 (valoresCampos -> BEGIN .)
    DISTINTO        reduce using rule 96 (valoresCampos -> BEGIN .)
    >               reduce using rule 96 (valoresCampos -> BEGIN .)
    <               reduce using rule 96 (valoresCampos -> BEGIN .)
    AND             reduce using rule 96 (valoresCampos -> BEGIN .)
    OR              reduce using rule 96 (valoresCampos -> BEGIN .)
    ?               reduce using rule 96 (valoresCampos -> BEGIN .)
    :               reduce using rule 96 (valoresCampos -> BEGIN .)
    }               reduce using rule 96 (valoresCampos -> BEGIN .)


state 327

    (95) valoresCampos -> END .

    ,               reduce using rule 95 (valoresCampos -> END .)
    ]               reduce using rule 95 (valoresCampos -> END .)
    +               reduce using rule 95 (valoresCampos -> END .)
    -               reduce using rule 95 (valoresCampos -> END .)
    *               reduce using rule 95 (valoresCampos -> END .)
    /               reduce using rule 95 (valoresCampos -> END .)
    %               reduce using rule 95 (valoresCampos -> END .)
    ^               reduce using rule 95 (valoresCampos -> END .)
    )               reduce using rule 95 (valoresCampos -> END .)
    ;               reduce using rule 95 (valoresCampos -> END .)
    EQEQ            reduce using rule 95 (valoresCampos -> END .)
    DISTINTO        reduce using rule 95 (valoresCampos -> END .)
    >               reduce using rule 95 (valoresCampos -> END .)
    <               reduce using rule 95 (valoresCampos -> END .)
    AND             reduce using rule 95 (valoresCampos -> END .)
    OR              reduce using rule 95 (valoresCampos -> END .)
    ?               reduce using rule 95 (valoresCampos -> END .)
    :               reduce using rule 95 (valoresCampos -> END .)
    }               reduce using rule 95 (valoresCampos -> END .)


state 328

    (93) atributos -> reg . valoresCampos .

    +               reduce using rule 93 (atributos -> reg . valoresCampos .)
    -               reduce using rule 93 (atributos -> reg . valoresCampos .)
    *               reduce using rule 93 (atributos -> reg . valoresCampos .)
    /               reduce using rule 93 (atributos -> reg . valoresCampos .)
    %               reduce using rule 93 (atributos -> reg . valoresCampos .)
    ^               reduce using rule 93 (atributos -> reg . valoresCampos .)
    )               reduce using rule 93 (atributos -> reg . valoresCampos .)
    ,               reduce using rule 93 (atributos -> reg . valoresCampos .)
    ]               reduce using rule 93 (atributos -> reg . valoresCampos .)
    EQEQ            reduce using rule 93 (atributos -> reg . valoresCampos .)
    DISTINTO        reduce using rule 93 (atributos -> reg . valoresCampos .)
    >               reduce using rule 93 (atributos -> reg . valoresCampos .)
    <               reduce using rule 93 (atributos -> reg . valoresCampos .)
    ;               reduce using rule 93 (atributos -> reg . valoresCampos .)
    AND             reduce using rule 93 (atributos -> reg . valoresCampos .)
    OR              reduce using rule 93 (atributos -> reg . valoresCampos .)
    ?               reduce using rule 93 (atributos -> reg . valoresCampos .)
    :               reduce using rule 93 (atributos -> reg . valoresCampos .)
    }               reduce using rule 93 (atributos -> reg . valoresCampos .)


state 329

    (94) valoresCampos -> varYVals .

    ,               reduce using rule 94 (valoresCampos -> varYVals .)
    ]               reduce using rule 94 (valoresCampos -> varYVals .)
    +               reduce using rule 94 (valoresCampos -> varYVals .)
    -               reduce using rule 94 (valoresCampos -> varYVals .)
    *               reduce using rule 94 (valoresCampos -> varYVals .)
    /               reduce using rule 94 (valoresCampos -> varYVals .)
    %               reduce using rule 94 (valoresCampos -> varYVals .)
    ^               reduce using rule 94 (valoresCampos -> varYVals .)
    )               reduce using rule 94 (valoresCampos -> varYVals .)
    ;               reduce using rule 94 (valoresCampos -> varYVals .)
    EQEQ            reduce using rule 94 (valoresCampos -> varYVals .)
    DISTINTO        reduce using rule 94 (valoresCampos -> varYVals .)
    >               reduce using rule 94 (valoresCampos -> varYVals .)
    <               reduce using rule 94 (valoresCampos -> varYVals .)
    AND             reduce using rule 94 (valoresCampos -> varYVals .)
    OR              reduce using rule 94 (valoresCampos -> varYVals .)
    ?               reduce using rule 94 (valoresCampos -> varYVals .)
    :               reduce using rule 94 (valoresCampos -> varYVals .)
    }               reduce using rule 94 (valoresCampos -> varYVals .)


state 330

    (203) expBool -> expBool OR and .
    (208) and -> and . AND eq
    (210) and -> and . AND valoresBool

    ?               reduce using rule 203 (expBool -> expBool OR and .)
    OR              reduce using rule 203 (expBool -> expBool OR and .)
    :               reduce using rule 203 (expBool -> expBool OR and .)
    ;               reduce using rule 203 (expBool -> expBool OR and .)
    )               reduce using rule 203 (expBool -> expBool OR and .)
    ]               reduce using rule 203 (expBool -> expBool OR and .)
    ,               reduce using rule 203 (expBool -> expBool OR and .)
    }               reduce using rule 203 (expBool -> expBool OR and .)
    AND             shift and go to state 150


state 331

    (205) expBool -> expBool OR valoresBool .
    (209) and -> valoresBool . AND eq
    (211) and -> valoresBool . AND valoresBool

    ?               reduce using rule 205 (expBool -> expBool OR valoresBool .)
    OR              reduce using rule 205 (expBool -> expBool OR valoresBool .)
    :               reduce using rule 205 (expBool -> expBool OR valoresBool .)
    ;               reduce using rule 205 (expBool -> expBool OR valoresBool .)
    )               reduce using rule 205 (expBool -> expBool OR valoresBool .)
    ]               reduce using rule 205 (expBool -> expBool OR valoresBool .)
    ,               reduce using rule 205 (expBool -> expBool OR valoresBool .)
    }               reduce using rule 205 (expBool -> expBool OR valoresBool .)
    AND             shift and go to state 160


state 332

    (132) ternarioBool -> expBool ? valoresTernarioBool . : valoresTernarioBool
    (112) ternarioVars -> expBool ? valoresTernarioBool . : valoresTernarioVars

    :               shift and go to state 392


state 333

    (108) ternarioVars -> expBool ? valoresTernarioVars . : valoresTernarioVars
    (109) ternarioVars -> expBool ? valoresTernarioVars . : valoresTernarioMat
    (111) ternarioVars -> expBool ? valoresTernarioVars . : valoresTernarioBool

    :               shift and go to state 393


state 334

    (123) ternarioMat -> expBool ? valoresTernarioMat . : valoresTernarioMat
    (110) ternarioVars -> expBool ? valoresTernarioMat . : valoresTernarioVars

    :               shift and go to state 394


state 335

    (236) tCompare -> funcInt .
    (156) valoresMat -> funcInt .

    EQEQ            reduce using rule 236 (tCompare -> funcInt .)
    DISTINTO        reduce using rule 236 (tCompare -> funcInt .)
    AND             reduce using rule 236 (tCompare -> funcInt .)
    OR              reduce using rule 236 (tCompare -> funcInt .)
    ?               reduce using rule 236 (tCompare -> funcInt .)
    ,               reduce using rule 236 (tCompare -> funcInt .)
    ]               reduce using rule 236 (tCompare -> funcInt .)
    )               reduce using rule 236 (tCompare -> funcInt .)
    ;               reduce using rule 236 (tCompare -> funcInt .)
    :               reduce using rule 236 (tCompare -> funcInt .)
    }               reduce using rule 236 (tCompare -> funcInt .)
    +               reduce using rule 156 (valoresMat -> funcInt .)
    -               reduce using rule 156 (valoresMat -> funcInt .)
    *               reduce using rule 156 (valoresMat -> funcInt .)
    /               reduce using rule 156 (valoresMat -> funcInt .)
    %               reduce using rule 156 (valoresMat -> funcInt .)
    ^               reduce using rule 156 (valoresMat -> funcInt .)


state 336

    (232) tCompare -> eMat .
    (163) eMat -> eMat . + p
    (165) eMat -> eMat . + valoresMat
    (168) eMat -> eMat . - p
    (170) eMat -> eMat . - valoresMat

    EQEQ            reduce using rule 232 (tCompare -> eMat .)
    DISTINTO        reduce using rule 232 (tCompare -> eMat .)
    AND             reduce using rule 232 (tCompare -> eMat .)
    OR              reduce using rule 232 (tCompare -> eMat .)
    ?               reduce using rule 232 (tCompare -> eMat .)
    ,               reduce using rule 232 (tCompare -> eMat .)
    ]               reduce using rule 232 (tCompare -> eMat .)
    )               reduce using rule 232 (tCompare -> eMat .)
    ;               reduce using rule 232 (tCompare -> eMat .)
    :               reduce using rule 232 (tCompare -> eMat .)
    }               reduce using rule 232 (tCompare -> eMat .)
    +               shift and go to state 163
    -               shift and go to state 164


state 337

    (238) tCompare -> ( . ternarioMat )
    (162) valoresMat -> ( . ternarioMat )
    (195) paren -> ( . eMat )
    (196) paren -> ( . valoresMat )
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (51) funcBool -> . COLINEALES ( valores , valores )
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (56) vec -> . [ elem ]
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 180
    FLOAT           shift and go to state 181
    STRING          shift and go to state 176
    (               shift and go to state 172
    BOOL            shift and go to state 182
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75
    [               shift and go to state 20
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 168
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 169
    eq                             shift and go to state 69
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 171
    tCompareEQ                     shift and go to state 73
    valoresBool                    shift and go to state 321
    ternarioMat                    shift and go to state 395
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    varsOps                        shift and go to state 174
    exp                            shift and go to state 98
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    expBool                        shift and go to state 325
    varYVals                       shift and go to state 185
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 186

state 338

    (241) menor -> tCompare < tCompare .

    EQEQ            reduce using rule 241 (menor -> tCompare < tCompare .)
    DISTINTO        reduce using rule 241 (menor -> tCompare < tCompare .)
    AND             reduce using rule 241 (menor -> tCompare < tCompare .)
    ?               reduce using rule 241 (menor -> tCompare < tCompare .)
    OR              reduce using rule 241 (menor -> tCompare < tCompare .)
    :               reduce using rule 241 (menor -> tCompare < tCompare .)
    )               reduce using rule 241 (menor -> tCompare < tCompare .)
    ]               reduce using rule 241 (menor -> tCompare < tCompare .)
    ,               reduce using rule 241 (menor -> tCompare < tCompare .)
    ;               reduce using rule 241 (menor -> tCompare < tCompare .)
    }               reduce using rule 241 (menor -> tCompare < tCompare .)


state 339

    (235) tCompare -> INT .
    (154) valoresMat -> INT .

    EQEQ            reduce using rule 235 (tCompare -> INT .)
    DISTINTO        reduce using rule 235 (tCompare -> INT .)
    AND             reduce using rule 235 (tCompare -> INT .)
    OR              reduce using rule 235 (tCompare -> INT .)
    ?               reduce using rule 235 (tCompare -> INT .)
    ,               reduce using rule 235 (tCompare -> INT .)
    ]               reduce using rule 235 (tCompare -> INT .)
    )               reduce using rule 235 (tCompare -> INT .)
    ;               reduce using rule 235 (tCompare -> INT .)
    :               reduce using rule 235 (tCompare -> INT .)
    }               reduce using rule 235 (tCompare -> INT .)
    +               reduce using rule 154 (valoresMat -> INT .)
    -               reduce using rule 154 (valoresMat -> INT .)
    *               reduce using rule 154 (valoresMat -> INT .)
    /               reduce using rule 154 (valoresMat -> INT .)
    %               reduce using rule 154 (valoresMat -> INT .)
    ^               reduce using rule 154 (valoresMat -> INT .)


state 340

    (237) tCompare -> FLOAT .
    (155) valoresMat -> FLOAT .

    EQEQ            reduce using rule 237 (tCompare -> FLOAT .)
    DISTINTO        reduce using rule 237 (tCompare -> FLOAT .)
    AND             reduce using rule 237 (tCompare -> FLOAT .)
    OR              reduce using rule 237 (tCompare -> FLOAT .)
    ?               reduce using rule 237 (tCompare -> FLOAT .)
    ,               reduce using rule 237 (tCompare -> FLOAT .)
    ]               reduce using rule 237 (tCompare -> FLOAT .)
    )               reduce using rule 237 (tCompare -> FLOAT .)
    ;               reduce using rule 237 (tCompare -> FLOAT .)
    :               reduce using rule 237 (tCompare -> FLOAT .)
    }               reduce using rule 237 (tCompare -> FLOAT .)
    +               reduce using rule 155 (valoresMat -> FLOAT .)
    -               reduce using rule 155 (valoresMat -> FLOAT .)
    *               reduce using rule 155 (valoresMat -> FLOAT .)
    /               reduce using rule 155 (valoresMat -> FLOAT .)
    %               reduce using rule 155 (valoresMat -> FLOAT .)
    ^               reduce using rule 155 (valoresMat -> FLOAT .)


state 341

    (233) tCompare -> varsOps .
    (161) valoresMat -> varsOps .

    EQEQ            reduce using rule 233 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 233 (tCompare -> varsOps .)
    AND             reduce using rule 233 (tCompare -> varsOps .)
    OR              reduce using rule 233 (tCompare -> varsOps .)
    ?               reduce using rule 233 (tCompare -> varsOps .)
    ,               reduce using rule 233 (tCompare -> varsOps .)
    ]               reduce using rule 233 (tCompare -> varsOps .)
    )               reduce using rule 233 (tCompare -> varsOps .)
    ;               reduce using rule 233 (tCompare -> varsOps .)
    :               reduce using rule 233 (tCompare -> varsOps .)
    }               reduce using rule 233 (tCompare -> varsOps .)
    +               reduce using rule 161 (valoresMat -> varsOps .)
    -               reduce using rule 161 (valoresMat -> varsOps .)
    *               reduce using rule 161 (valoresMat -> varsOps .)
    /               reduce using rule 161 (valoresMat -> varsOps .)
    %               reduce using rule 161 (valoresMat -> varsOps .)
    ^               reduce using rule 161 (valoresMat -> varsOps .)


state 342

    (234) tCompare -> varYVals .
    (146) varsOps -> varYVals . MASMAS
    (147) varsOps -> varYVals . MENOSMENOS
    (160) valoresMat -> varYVals .

    EQEQ            reduce using rule 234 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 234 (tCompare -> varYVals .)
    AND             reduce using rule 234 (tCompare -> varYVals .)
    OR              reduce using rule 234 (tCompare -> varYVals .)
    ?               reduce using rule 234 (tCompare -> varYVals .)
    ,               reduce using rule 234 (tCompare -> varYVals .)
    ]               reduce using rule 234 (tCompare -> varYVals .)
    )               reduce using rule 234 (tCompare -> varYVals .)
    ;               reduce using rule 234 (tCompare -> varYVals .)
    :               reduce using rule 234 (tCompare -> varYVals .)
    }               reduce using rule 234 (tCompare -> varYVals .)
    MASMAS          shift and go to state 51
    MENOSMENOS      shift and go to state 48
    +               reduce using rule 160 (valoresMat -> varYVals .)
    -               reduce using rule 160 (valoresMat -> varYVals .)
    *               reduce using rule 160 (valoresMat -> varYVals .)
    /               reduce using rule 160 (valoresMat -> varYVals .)
    %               reduce using rule 160 (valoresMat -> varYVals .)
    ^               reduce using rule 160 (valoresMat -> varYVals .)


state 343

    (239) mayor -> tCompare > tCompare .

    EQEQ            reduce using rule 239 (mayor -> tCompare > tCompare .)
    DISTINTO        reduce using rule 239 (mayor -> tCompare > tCompare .)
    AND             reduce using rule 239 (mayor -> tCompare > tCompare .)
    OR              reduce using rule 239 (mayor -> tCompare > tCompare .)
    ?               reduce using rule 239 (mayor -> tCompare > tCompare .)
    ,               reduce using rule 239 (mayor -> tCompare > tCompare .)
    )               reduce using rule 239 (mayor -> tCompare > tCompare .)
    ]               reduce using rule 239 (mayor -> tCompare > tCompare .)
    :               reduce using rule 239 (mayor -> tCompare > tCompare .)
    ;               reduce using rule 239 (mayor -> tCompare > tCompare .)
    }               reduce using rule 239 (mayor -> tCompare > tCompare .)


state 344

    (92) atributos -> ID . valoresCampos .

    +               reduce using rule 92 (atributos -> ID . valoresCampos .)
    -               reduce using rule 92 (atributos -> ID . valoresCampos .)
    *               reduce using rule 92 (atributos -> ID . valoresCampos .)
    /               reduce using rule 92 (atributos -> ID . valoresCampos .)
    %               reduce using rule 92 (atributos -> ID . valoresCampos .)
    ^               reduce using rule 92 (atributos -> ID . valoresCampos .)
    )               reduce using rule 92 (atributos -> ID . valoresCampos .)
    ,               reduce using rule 92 (atributos -> ID . valoresCampos .)
    ]               reduce using rule 92 (atributos -> ID . valoresCampos .)
    EQEQ            reduce using rule 92 (atributos -> ID . valoresCampos .)
    DISTINTO        reduce using rule 92 (atributos -> ID . valoresCampos .)
    >               reduce using rule 92 (atributos -> ID . valoresCampos .)
    <               reduce using rule 92 (atributos -> ID . valoresCampos .)
    ;               reduce using rule 92 (atributos -> ID . valoresCampos .)
    AND             reduce using rule 92 (atributos -> ID . valoresCampos .)
    OR              reduce using rule 92 (atributos -> ID . valoresCampos .)
    ?               reduce using rule 92 (atributos -> ID . valoresCampos .)
    :               reduce using rule 92 (atributos -> ID . valoresCampos .)
    }               reduce using rule 92 (atributos -> ID . valoresCampos .)


state 345

    (180) p -> p % valoresMat .
    (186) exp -> valoresMat . ^ iSing
    (188) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 180 (p -> p % valoresMat .)
    /               reduce using rule 180 (p -> p % valoresMat .)
    %               reduce using rule 180 (p -> p % valoresMat .)
    +               reduce using rule 180 (p -> p % valoresMat .)
    -               reduce using rule 180 (p -> p % valoresMat .)
    :               reduce using rule 180 (p -> p % valoresMat .)
    EQEQ            reduce using rule 180 (p -> p % valoresMat .)
    DISTINTO        reduce using rule 180 (p -> p % valoresMat .)
    >               reduce using rule 180 (p -> p % valoresMat .)
    <               reduce using rule 180 (p -> p % valoresMat .)
    ,               reduce using rule 180 (p -> p % valoresMat .)
    )               reduce using rule 180 (p -> p % valoresMat .)
    ]               reduce using rule 180 (p -> p % valoresMat .)
    ;               reduce using rule 180 (p -> p % valoresMat .)
    }               reduce using rule 180 (p -> p % valoresMat .)
    AND             reduce using rule 180 (p -> p % valoresMat .)
    OR              reduce using rule 180 (p -> p % valoresMat .)
    ?               reduce using rule 180 (p -> p % valoresMat .)
    ^               shift and go to state 157


state 346

    (174) p -> p % exp .
    (185) exp -> exp . ^ iSing
    (187) exp -> exp . ^ valoresMat

    *               reduce using rule 174 (p -> p % exp .)
    /               reduce using rule 174 (p -> p % exp .)
    %               reduce using rule 174 (p -> p % exp .)
    +               reduce using rule 174 (p -> p % exp .)
    -               reduce using rule 174 (p -> p % exp .)
    :               reduce using rule 174 (p -> p % exp .)
    EQEQ            reduce using rule 174 (p -> p % exp .)
    DISTINTO        reduce using rule 174 (p -> p % exp .)
    >               reduce using rule 174 (p -> p % exp .)
    <               reduce using rule 174 (p -> p % exp .)
    ,               reduce using rule 174 (p -> p % exp .)
    )               reduce using rule 174 (p -> p % exp .)
    ]               reduce using rule 174 (p -> p % exp .)
    ;               reduce using rule 174 (p -> p % exp .)
    }               reduce using rule 174 (p -> p % exp .)
    AND             reduce using rule 174 (p -> p % exp .)
    OR              reduce using rule 174 (p -> p % exp .)
    ?               reduce using rule 174 (p -> p % exp .)
    ^               shift and go to state 214


state 347

    (178) p -> p * valoresMat .
    (186) exp -> valoresMat . ^ iSing
    (188) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 178 (p -> p * valoresMat .)
    /               reduce using rule 178 (p -> p * valoresMat .)
    %               reduce using rule 178 (p -> p * valoresMat .)
    +               reduce using rule 178 (p -> p * valoresMat .)
    -               reduce using rule 178 (p -> p * valoresMat .)
    :               reduce using rule 178 (p -> p * valoresMat .)
    EQEQ            reduce using rule 178 (p -> p * valoresMat .)
    DISTINTO        reduce using rule 178 (p -> p * valoresMat .)
    >               reduce using rule 178 (p -> p * valoresMat .)
    <               reduce using rule 178 (p -> p * valoresMat .)
    ,               reduce using rule 178 (p -> p * valoresMat .)
    )               reduce using rule 178 (p -> p * valoresMat .)
    ]               reduce using rule 178 (p -> p * valoresMat .)
    ;               reduce using rule 178 (p -> p * valoresMat .)
    }               reduce using rule 178 (p -> p * valoresMat .)
    AND             reduce using rule 178 (p -> p * valoresMat .)
    OR              reduce using rule 178 (p -> p * valoresMat .)
    ?               reduce using rule 178 (p -> p * valoresMat .)
    ^               shift and go to state 157


state 348

    (172) p -> p * exp .
    (185) exp -> exp . ^ iSing
    (187) exp -> exp . ^ valoresMat

    *               reduce using rule 172 (p -> p * exp .)
    /               reduce using rule 172 (p -> p * exp .)
    %               reduce using rule 172 (p -> p * exp .)
    +               reduce using rule 172 (p -> p * exp .)
    -               reduce using rule 172 (p -> p * exp .)
    :               reduce using rule 172 (p -> p * exp .)
    EQEQ            reduce using rule 172 (p -> p * exp .)
    DISTINTO        reduce using rule 172 (p -> p * exp .)
    >               reduce using rule 172 (p -> p * exp .)
    <               reduce using rule 172 (p -> p * exp .)
    ,               reduce using rule 172 (p -> p * exp .)
    )               reduce using rule 172 (p -> p * exp .)
    ]               reduce using rule 172 (p -> p * exp .)
    ;               reduce using rule 172 (p -> p * exp .)
    }               reduce using rule 172 (p -> p * exp .)
    AND             reduce using rule 172 (p -> p * exp .)
    OR              reduce using rule 172 (p -> p * exp .)
    ?               reduce using rule 172 (p -> p * exp .)
    ^               shift and go to state 214


state 349

    (179) p -> p / valoresMat .
    (186) exp -> valoresMat . ^ iSing
    (188) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 179 (p -> p / valoresMat .)
    /               reduce using rule 179 (p -> p / valoresMat .)
    %               reduce using rule 179 (p -> p / valoresMat .)
    +               reduce using rule 179 (p -> p / valoresMat .)
    -               reduce using rule 179 (p -> p / valoresMat .)
    :               reduce using rule 179 (p -> p / valoresMat .)
    EQEQ            reduce using rule 179 (p -> p / valoresMat .)
    DISTINTO        reduce using rule 179 (p -> p / valoresMat .)
    >               reduce using rule 179 (p -> p / valoresMat .)
    <               reduce using rule 179 (p -> p / valoresMat .)
    ,               reduce using rule 179 (p -> p / valoresMat .)
    )               reduce using rule 179 (p -> p / valoresMat .)
    ]               reduce using rule 179 (p -> p / valoresMat .)
    ;               reduce using rule 179 (p -> p / valoresMat .)
    }               reduce using rule 179 (p -> p / valoresMat .)
    AND             reduce using rule 179 (p -> p / valoresMat .)
    OR              reduce using rule 179 (p -> p / valoresMat .)
    ?               reduce using rule 179 (p -> p / valoresMat .)
    ^               shift and go to state 157


state 350

    (173) p -> p / exp .
    (185) exp -> exp . ^ iSing
    (187) exp -> exp . ^ valoresMat

    *               reduce using rule 173 (p -> p / exp .)
    /               reduce using rule 173 (p -> p / exp .)
    %               reduce using rule 173 (p -> p / exp .)
    +               reduce using rule 173 (p -> p / exp .)
    -               reduce using rule 173 (p -> p / exp .)
    :               reduce using rule 173 (p -> p / exp .)
    EQEQ            reduce using rule 173 (p -> p / exp .)
    DISTINTO        reduce using rule 173 (p -> p / exp .)
    >               reduce using rule 173 (p -> p / exp .)
    <               reduce using rule 173 (p -> p / exp .)
    ,               reduce using rule 173 (p -> p / exp .)
    )               reduce using rule 173 (p -> p / exp .)
    ]               reduce using rule 173 (p -> p / exp .)
    ;               reduce using rule 173 (p -> p / exp .)
    }               reduce using rule 173 (p -> p / exp .)
    AND             reduce using rule 173 (p -> p / exp .)
    OR              reduce using rule 173 (p -> p / exp .)
    ?               reduce using rule 173 (p -> p / exp .)
    ^               shift and go to state 214


state 351

    (131) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (204) expBool -> valoresBool . OR and
    (206) expBool -> valoresBool . OR valoresBool
    (209) and -> valoresBool . AND eq
    (211) and -> valoresBool . AND valoresBool

    ?               shift and go to state 396
    OR              shift and go to state 161
    AND             shift and go to state 160


state 352

    (201) valoresBool -> ( ternarioBool . )

    )               shift and go to state 397


state 353

    (246) parenBool -> ( expBool . )
    (132) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> expBool . OR and
    (205) expBool -> expBool . OR valoresBool

    )               shift and go to state 319
    ?               shift and go to state 398
    OR              shift and go to state 198


state 354

    (187) exp -> exp ^ valoresMat .

    ^               reduce using rule 187 (exp -> exp ^ valoresMat .)
    *               reduce using rule 187 (exp -> exp ^ valoresMat .)
    /               reduce using rule 187 (exp -> exp ^ valoresMat .)
    %               reduce using rule 187 (exp -> exp ^ valoresMat .)
    +               reduce using rule 187 (exp -> exp ^ valoresMat .)
    -               reduce using rule 187 (exp -> exp ^ valoresMat .)
    ,               reduce using rule 187 (exp -> exp ^ valoresMat .)
    )               reduce using rule 187 (exp -> exp ^ valoresMat .)
    EQEQ            reduce using rule 187 (exp -> exp ^ valoresMat .)
    DISTINTO        reduce using rule 187 (exp -> exp ^ valoresMat .)
    >               reduce using rule 187 (exp -> exp ^ valoresMat .)
    <               reduce using rule 187 (exp -> exp ^ valoresMat .)
    :               reduce using rule 187 (exp -> exp ^ valoresMat .)
    ]               reduce using rule 187 (exp -> exp ^ valoresMat .)
    ;               reduce using rule 187 (exp -> exp ^ valoresMat .)
    AND             reduce using rule 187 (exp -> exp ^ valoresMat .)
    OR              reduce using rule 187 (exp -> exp ^ valoresMat .)
    ?               reduce using rule 187 (exp -> exp ^ valoresMat .)
    }               reduce using rule 187 (exp -> exp ^ valoresMat .)


state 355

    (185) exp -> exp ^ iSing .

    ^               reduce using rule 185 (exp -> exp ^ iSing .)
    *               reduce using rule 185 (exp -> exp ^ iSing .)
    /               reduce using rule 185 (exp -> exp ^ iSing .)
    %               reduce using rule 185 (exp -> exp ^ iSing .)
    +               reduce using rule 185 (exp -> exp ^ iSing .)
    -               reduce using rule 185 (exp -> exp ^ iSing .)
    ,               reduce using rule 185 (exp -> exp ^ iSing .)
    )               reduce using rule 185 (exp -> exp ^ iSing .)
    EQEQ            reduce using rule 185 (exp -> exp ^ iSing .)
    DISTINTO        reduce using rule 185 (exp -> exp ^ iSing .)
    >               reduce using rule 185 (exp -> exp ^ iSing .)
    <               reduce using rule 185 (exp -> exp ^ iSing .)
    :               reduce using rule 185 (exp -> exp ^ iSing .)
    ]               reduce using rule 185 (exp -> exp ^ iSing .)
    ;               reduce using rule 185 (exp -> exp ^ iSing .)
    AND             reduce using rule 185 (exp -> exp ^ iSing .)
    OR              reduce using rule 185 (exp -> exp ^ iSing .)
    ?               reduce using rule 185 (exp -> exp ^ iSing .)
    }               reduce using rule 185 (exp -> exp ^ iSing .)


state 356

    (141) reg -> { campos } .

    .               reduce using rule 141 (reg -> { campos } .)
    ;               reduce using rule 141 (reg -> { campos } .)
    )               reduce using rule 141 (reg -> { campos } .)
    :               reduce using rule 141 (reg -> { campos } .)
    ,               reduce using rule 141 (reg -> { campos } .)
    ]               reduce using rule 141 (reg -> { campos } .)
    }               reduce using rule 141 (reg -> { campos } .)


state 357

    (142) campos -> ID : . valores , campos
    (143) campos -> ID : . valores
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (141) reg -> . { campos }
    (97) ternario -> . ternarioMat
    (98) ternario -> . ternarioBool
    (99) ternario -> . ( ternarioMat )
    (100) ternario -> . ( ternarioBool )
    (101) ternario -> . ternarioVars
    (102) ternario -> . ( ternarioVars )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 90
    FLOAT           shift and go to state 92
    STRING          shift and go to state 70
    BOOL            shift and go to state 95
    RES             shift and go to state 63
    ID              shift and go to state 88
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 99
    (               shift and go to state 74
    [               shift and go to state 20
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    ?               reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 71
    eMat                           shift and go to state 72
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 77
    vec                            shift and go to state 78
    paren                          shift and go to state 86
    reg                            shift and go to state 80
    expBool                        shift and go to state 81
    ternarioBool                   shift and go to state 82
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 89
    funcReturn                     shift and go to state 91
    valores                        shift and go to state 399
    p                              shift and go to state 94
    varsOps                        shift and go to state 96
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 67
    varYVals                       shift and go to state 100
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 101

state 358

    (153) varAsig -> ID . ID = . valores
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (141) reg -> . { campos }
    (97) ternario -> . ternarioMat
    (98) ternario -> . ternarioBool
    (99) ternario -> . ( ternarioMat )
    (100) ternario -> . ( ternarioBool )
    (101) ternario -> . ternarioVars
    (102) ternario -> . ( ternarioVars )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 90
    FLOAT           shift and go to state 92
    STRING          shift and go to state 70
    BOOL            shift and go to state 95
    RES             shift and go to state 63
    ID              shift and go to state 88
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 99
    (               shift and go to state 74
    [               shift and go to state 20
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    ?               reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 71
    eMat                           shift and go to state 72
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 77
    vec                            shift and go to state 78
    paren                          shift and go to state 86
    reg                            shift and go to state 80
    expBool                        shift and go to state 81
    ternarioBool                   shift and go to state 82
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 89
    funcReturn                     shift and go to state 91
    valores                        shift and go to state 400
    p                              shift and go to state 94
    varsOps                        shift and go to state 96
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 67
    varYVals                       shift and go to state 100
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 101

state 359

    (59) vecVal -> ID [ expresion ] .

    .               reduce using rule 59 (vecVal -> ID [ expresion ] .)
    [               reduce using rule 59 (vecVal -> ID [ expresion ] .)
    MASMAS          reduce using rule 59 (vecVal -> ID [ expresion ] .)
    MENOSMENOS      reduce using rule 59 (vecVal -> ID [ expresion ] .)
    EQEQ            reduce using rule 59 (vecVal -> ID [ expresion ] .)
    DISTINTO        reduce using rule 59 (vecVal -> ID [ expresion ] .)
    AND             reduce using rule 59 (vecVal -> ID [ expresion ] .)
    OR              reduce using rule 59 (vecVal -> ID [ expresion ] .)
    ?               reduce using rule 59 (vecVal -> ID [ expresion ] .)
    ,               reduce using rule 59 (vecVal -> ID [ expresion ] .)
    ]               reduce using rule 59 (vecVal -> ID [ expresion ] .)
    )               reduce using rule 59 (vecVal -> ID [ expresion ] .)
    ;               reduce using rule 59 (vecVal -> ID [ expresion ] .)
    :               reduce using rule 59 (vecVal -> ID [ expresion ] .)
    }               reduce using rule 59 (vecVal -> ID [ expresion ] .)
    +               reduce using rule 59 (vecVal -> ID [ expresion ] .)
    -               reduce using rule 59 (vecVal -> ID [ expresion ] .)
    *               reduce using rule 59 (vecVal -> ID [ expresion ] .)
    /               reduce using rule 59 (vecVal -> ID [ expresion ] .)
    %               reduce using rule 59 (vecVal -> ID [ expresion ] .)
    ^               reduce using rule 59 (vecVal -> ID [ expresion ] .)
    >               reduce using rule 59 (vecVal -> ID [ expresion ] .)
    <               reduce using rule 59 (vecVal -> ID [ expresion ] .)
    MULEQ           reduce using rule 59 (vecVal -> ID [ expresion ] .)
    DIVEQ           reduce using rule 59 (vecVal -> ID [ expresion ] .)
    MASEQ           reduce using rule 59 (vecVal -> ID [ expresion ] .)
    MENOSEQ         reduce using rule 59 (vecVal -> ID [ expresion ] .)
    =               reduce using rule 59 (vecVal -> ID [ expresion ] .)


state 360

    (62) vecVal -> ID [ INT ] .

    .               reduce using rule 62 (vecVal -> ID [ INT ] .)
    [               reduce using rule 62 (vecVal -> ID [ INT ] .)
    MASMAS          reduce using rule 62 (vecVal -> ID [ INT ] .)
    MENOSMENOS      reduce using rule 62 (vecVal -> ID [ INT ] .)
    EQEQ            reduce using rule 62 (vecVal -> ID [ INT ] .)
    DISTINTO        reduce using rule 62 (vecVal -> ID [ INT ] .)
    AND             reduce using rule 62 (vecVal -> ID [ INT ] .)
    OR              reduce using rule 62 (vecVal -> ID [ INT ] .)
    ?               reduce using rule 62 (vecVal -> ID [ INT ] .)
    ,               reduce using rule 62 (vecVal -> ID [ INT ] .)
    ]               reduce using rule 62 (vecVal -> ID [ INT ] .)
    )               reduce using rule 62 (vecVal -> ID [ INT ] .)
    ;               reduce using rule 62 (vecVal -> ID [ INT ] .)
    :               reduce using rule 62 (vecVal -> ID [ INT ] .)
    }               reduce using rule 62 (vecVal -> ID [ INT ] .)
    +               reduce using rule 62 (vecVal -> ID [ INT ] .)
    -               reduce using rule 62 (vecVal -> ID [ INT ] .)
    *               reduce using rule 62 (vecVal -> ID [ INT ] .)
    /               reduce using rule 62 (vecVal -> ID [ INT ] .)
    %               reduce using rule 62 (vecVal -> ID [ INT ] .)
    ^               reduce using rule 62 (vecVal -> ID [ INT ] .)
    >               reduce using rule 62 (vecVal -> ID [ INT ] .)
    <               reduce using rule 62 (vecVal -> ID [ INT ] .)
    MULEQ           reduce using rule 62 (vecVal -> ID [ INT ] .)
    DIVEQ           reduce using rule 62 (vecVal -> ID [ INT ] .)
    MASEQ           reduce using rule 62 (vecVal -> ID [ INT ] .)
    MENOSEQ         reduce using rule 62 (vecVal -> ID [ INT ] .)
    =               reduce using rule 62 (vecVal -> ID [ INT ] .)


state 361

    (131) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (122) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (204) expBool -> valoresBool . OR and
    (206) expBool -> valoresBool . OR valoresBool
    (209) and -> valoresBool . AND eq
    (211) and -> valoresBool . AND valoresBool

    ?               shift and go to state 401
    OR              shift and go to state 161
    AND             shift and go to state 160


state 362

    (162) valoresMat -> ( . ternarioMat )
    (201) valoresBool -> ( . ternarioBool )
    (230) tCompareEQ -> ( . ternarioBool )
    (231) tCompareEQ -> ( . ternarioMat )
    (238) tCompare -> ( . ternarioMat )
    (195) paren -> ( . eMat )
    (196) paren -> ( . valoresMat )
    (246) parenBool -> ( . expBool )
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (56) vec -> . [ elem ]
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 180
    FLOAT           shift and go to state 181
    STRING          shift and go to state 176
    (               shift and go to state 172
    BOOL            shift and go to state 182
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75
    [               shift and go to state 20
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 168
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 169
    eq                             shift and go to state 69
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 171
    tCompareEQ                     shift and go to state 73
    valoresBool                    shift and go to state 313
    ternarioMat                    shift and go to state 314
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    varsOps                        shift and go to state 174
    exp                            shift and go to state 98
    ternarioBool                   shift and go to state 315
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    expBool                        shift and go to state 316
    varYVals                       shift and go to state 185
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 186

state 363

    (231) tCompareEQ -> ( ternarioMat . )
    (238) tCompare -> ( ternarioMat . )
    (162) valoresMat -> ( ternarioMat . )

    )               shift and go to state 402


state 364

    (246) parenBool -> ( expBool . )
    (132) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (123) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (203) expBool -> expBool . OR and
    (205) expBool -> expBool . OR valoresBool

    )               shift and go to state 319
    ?               shift and go to state 403
    OR              shift and go to state 198


state 365

    (6) lAbierta -> IF ( cosaBooleana ) . linea
    (7) lAbierta -> IF ( cosaBooleana ) . { g } ELSE lAbierta
    (8) lAbierta -> IF ( cosaBooleana ) . lCerrada ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) . { g }
    (14) lCerrada -> IF ( cosaBooleana ) . { g } ELSE { g }
    (15) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE { g }
    (16) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) . { g } ELSE lCerrada
    (18) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE COMMENT com lCerrada
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (148) varAsig -> . varYVals MULEQ valores
    (149) varAsig -> . varYVals DIVEQ valores
    (150) varAsig -> . varYVals MASEQ valores
    (151) varAsig -> . varYVals MENOSEQ valores
    (152) varAsig -> . varYVals = valores
    (153) varAsig -> . ID . ID = valores
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 408
    COMMENT         shift and go to state 405
    IF              shift and go to state 406
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 407
    lAbierta                       shift and go to state 30
    linea                          shift and go to state 404
    varYVals                       shift and go to state 11
    loop                           shift and go to state 409

state 366

    (50) funcString -> CAPITALIZAR ( valores ) .

    )               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    +               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    -               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    *               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    /               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    %               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    ^               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    ;               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    ,               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    ]               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    EQEQ            reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    DISTINTO        reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    >               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    <               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    AND             reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    OR              reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    ?               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    :               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)
    }               reduce using rule 50 (funcString -> CAPITALIZAR ( valores ) .)


state 367

    (48) funcInt -> MULTIESCALAR ( valores , . valores param )
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (141) reg -> . { campos }
    (97) ternario -> . ternarioMat
    (98) ternario -> . ternarioBool
    (99) ternario -> . ( ternarioMat )
    (100) ternario -> . ( ternarioBool )
    (101) ternario -> . ternarioVars
    (102) ternario -> . ( ternarioVars )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 90
    FLOAT           shift and go to state 92
    STRING          shift and go to state 70
    BOOL            shift and go to state 95
    RES             shift and go to state 63
    ID              shift and go to state 88
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 99
    (               shift and go to state 74
    [               shift and go to state 20
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    ?               reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 72
    tCompareEQ                     shift and go to state 73
    valoresBool                    shift and go to state 71
    ternarioMat                    shift and go to state 77
    vec                            shift and go to state 78
    paren                          shift and go to state 86
    reg                            shift and go to state 80
    expBool                        shift and go to state 81
    ternarioBool                   shift and go to state 82
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 89
    funcReturn                     shift and go to state 91
    valores                        shift and go to state 410
    p                              shift and go to state 94
    varsOps                        shift and go to state 96
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 67
    varYVals                       shift and go to state 100
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 101

state 368

    (24) lCerrada -> loop COMMENT com lCerrada .

    ELSE            reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    COMMENT         reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    IF              reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    DO              reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    WHILE           reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    FOR             reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    RETURN          reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    ;               reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    MENOSMENOS      reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    MASMAS          reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    ID              reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    PRINT           reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    MULTIESCALAR    reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    LENGTH          reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    CAPITALIZAR     reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    COLINEALES      reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    [               reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    $end            reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    }               reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)


state 369

    (22) lCerrada -> loop { g } .

    ELSE            reduce using rule 22 (lCerrada -> loop { g } .)
    COMMENT         reduce using rule 22 (lCerrada -> loop { g } .)
    IF              reduce using rule 22 (lCerrada -> loop { g } .)
    DO              reduce using rule 22 (lCerrada -> loop { g } .)
    WHILE           reduce using rule 22 (lCerrada -> loop { g } .)
    FOR             reduce using rule 22 (lCerrada -> loop { g } .)
    RETURN          reduce using rule 22 (lCerrada -> loop { g } .)
    ;               reduce using rule 22 (lCerrada -> loop { g } .)
    MENOSMENOS      reduce using rule 22 (lCerrada -> loop { g } .)
    MASMAS          reduce using rule 22 (lCerrada -> loop { g } .)
    ID              reduce using rule 22 (lCerrada -> loop { g } .)
    PRINT           reduce using rule 22 (lCerrada -> loop { g } .)
    MULTIESCALAR    reduce using rule 22 (lCerrada -> loop { g } .)
    LENGTH          reduce using rule 22 (lCerrada -> loop { g } .)
    CAPITALIZAR     reduce using rule 22 (lCerrada -> loop { g } .)
    COLINEALES      reduce using rule 22 (lCerrada -> loop { g } .)
    [               reduce using rule 22 (lCerrada -> loop { g } .)
    $end            reduce using rule 22 (lCerrada -> loop { g } .)
    }               reduce using rule 22 (lCerrada -> loop { g } .)


state 370

    (60) vecVal -> vec [ expresion ] .

    .               reduce using rule 60 (vecVal -> vec [ expresion ] .)
    [               reduce using rule 60 (vecVal -> vec [ expresion ] .)
    MASMAS          reduce using rule 60 (vecVal -> vec [ expresion ] .)
    MENOSMENOS      reduce using rule 60 (vecVal -> vec [ expresion ] .)
    EQEQ            reduce using rule 60 (vecVal -> vec [ expresion ] .)
    DISTINTO        reduce using rule 60 (vecVal -> vec [ expresion ] .)
    AND             reduce using rule 60 (vecVal -> vec [ expresion ] .)
    OR              reduce using rule 60 (vecVal -> vec [ expresion ] .)
    ?               reduce using rule 60 (vecVal -> vec [ expresion ] .)
    ,               reduce using rule 60 (vecVal -> vec [ expresion ] .)
    ]               reduce using rule 60 (vecVal -> vec [ expresion ] .)
    )               reduce using rule 60 (vecVal -> vec [ expresion ] .)
    ;               reduce using rule 60 (vecVal -> vec [ expresion ] .)
    :               reduce using rule 60 (vecVal -> vec [ expresion ] .)
    }               reduce using rule 60 (vecVal -> vec [ expresion ] .)
    +               reduce using rule 60 (vecVal -> vec [ expresion ] .)
    -               reduce using rule 60 (vecVal -> vec [ expresion ] .)
    *               reduce using rule 60 (vecVal -> vec [ expresion ] .)
    /               reduce using rule 60 (vecVal -> vec [ expresion ] .)
    %               reduce using rule 60 (vecVal -> vec [ expresion ] .)
    ^               reduce using rule 60 (vecVal -> vec [ expresion ] .)
    >               reduce using rule 60 (vecVal -> vec [ expresion ] .)
    <               reduce using rule 60 (vecVal -> vec [ expresion ] .)
    MULEQ           reduce using rule 60 (vecVal -> vec [ expresion ] .)
    DIVEQ           reduce using rule 60 (vecVal -> vec [ expresion ] .)
    MASEQ           reduce using rule 60 (vecVal -> vec [ expresion ] .)
    MENOSEQ         reduce using rule 60 (vecVal -> vec [ expresion ] .)
    =               reduce using rule 60 (vecVal -> vec [ expresion ] .)


state 371

    (63) vecVal -> vec [ INT ] .

    .               reduce using rule 63 (vecVal -> vec [ INT ] .)
    [               reduce using rule 63 (vecVal -> vec [ INT ] .)
    MASMAS          reduce using rule 63 (vecVal -> vec [ INT ] .)
    MENOSMENOS      reduce using rule 63 (vecVal -> vec [ INT ] .)
    EQEQ            reduce using rule 63 (vecVal -> vec [ INT ] .)
    DISTINTO        reduce using rule 63 (vecVal -> vec [ INT ] .)
    AND             reduce using rule 63 (vecVal -> vec [ INT ] .)
    OR              reduce using rule 63 (vecVal -> vec [ INT ] .)
    ?               reduce using rule 63 (vecVal -> vec [ INT ] .)
    ,               reduce using rule 63 (vecVal -> vec [ INT ] .)
    ]               reduce using rule 63 (vecVal -> vec [ INT ] .)
    )               reduce using rule 63 (vecVal -> vec [ INT ] .)
    ;               reduce using rule 63 (vecVal -> vec [ INT ] .)
    :               reduce using rule 63 (vecVal -> vec [ INT ] .)
    }               reduce using rule 63 (vecVal -> vec [ INT ] .)
    +               reduce using rule 63 (vecVal -> vec [ INT ] .)
    -               reduce using rule 63 (vecVal -> vec [ INT ] .)
    *               reduce using rule 63 (vecVal -> vec [ INT ] .)
    /               reduce using rule 63 (vecVal -> vec [ INT ] .)
    %               reduce using rule 63 (vecVal -> vec [ INT ] .)
    ^               reduce using rule 63 (vecVal -> vec [ INT ] .)
    >               reduce using rule 63 (vecVal -> vec [ INT ] .)
    <               reduce using rule 63 (vecVal -> vec [ INT ] .)
    MULEQ           reduce using rule 63 (vecVal -> vec [ INT ] .)
    DIVEQ           reduce using rule 63 (vecVal -> vec [ INT ] .)
    MASEQ           reduce using rule 63 (vecVal -> vec [ INT ] .)
    MENOSEQ         reduce using rule 63 (vecVal -> vec [ INT ] .)
    =               reduce using rule 63 (vecVal -> vec [ INT ] .)


state 372

    (27) lCerrada -> DO COMMENT com lCerrada WHILE . ( valores ) ;

    (               shift and go to state 411


state 373

    (14) lCerrada -> IF ( cosaBooleana ) . { g } ELSE { g }
    (15) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE { g }
    (16) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) . { g } ELSE lCerrada
    (18) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE COMMENT com lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (148) varAsig -> . varYVals MULEQ valores
    (149) varAsig -> . varYVals DIVEQ valores
    (150) varAsig -> . varYVals MASEQ valores
    (151) varAsig -> . varYVals MENOSEQ valores
    (152) varAsig -> . varYVals = valores
    (153) varAsig -> . ID . ID = valores
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 413
    COMMENT         shift and go to state 405
    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 412
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 39

state 374

    (26) lCerrada -> DO lCerrada WHILE ( valores . ) ;

    )               shift and go to state 414


state 375

    (25) lCerrada -> DO { g } WHILE . ( valores ) ;

    (               shift and go to state 415


state 376

    (51) funcBool -> COLINEALES ( valores , valores . )

    )               shift and go to state 416


state 377

    (34) loop -> FOR ( primParam ; valores . ; tercerParam )

    ;               shift and go to state 417


state 378

    (230) tCompareEQ -> ( ternarioBool . )

    )               shift and go to state 418


state 379

    (131) ternarioBool -> valoresBool ? valoresTernarioBool : . valoresTernarioBool
    (107) ternarioVars -> valoresBool ? valoresTernarioBool : . valoresTernarioVars
    (133) valoresTernarioBool -> . BOOL
    (134) valoresTernarioBool -> . funcBool
    (135) valoresTernarioBool -> . ternarioBool
    (136) valoresTernarioBool -> . ( ternarioBool )
    (137) valoresTernarioBool -> . expBool
    (113) valoresTernarioVars -> . reg
    (114) valoresTernarioVars -> . vec
    (115) valoresTernarioVars -> . ternarioVars
    (116) valoresTernarioVars -> . ( ternarioVars )
    (117) valoresTernarioVars -> . atributos
    (118) valoresTernarioVars -> . varsOps
    (119) valoresTernarioVars -> . varYVals
    (120) valoresTernarioVars -> . res
    (51) funcBool -> . COLINEALES ( valores , valores )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (141) reg -> . { campos }
    (56) vec -> . [ elem ]
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (121) res -> . RES
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (246) parenBool -> . ( expBool )
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )

    BOOL            shift and go to state 297
    (               shift and go to state 423
    COLINEALES      shift and go to state 4
    {               shift and go to state 99
    [               shift and go to state 20
    ID              shift and go to state 178
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 282
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    INT             shift and go to state 226
    FLOAT           shift and go to state 227
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    STRING          shift and go to state 176
    NOT             shift and go to state 97
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 76
    +               shift and go to state 75

    and                            shift and go to state 60
    funcBool                       shift and go to state 281
    funcInt                        shift and go to state 220
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 222
    p                              shift and go to state 94
    valoresTernarioBool            shift and go to state 420
    valoresBool                    shift and go to state 419
    vec                            shift and go to state 288
    paren                          shift and go to state 86
    reg                            shift and go to state 290
    valoresTernarioVars            shift and go to state 421
    expBool                        shift and go to state 422
    ternarioBool                   shift and go to state 293
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    tCompareEQ                     shift and go to state 73
    varsOps                        shift and go to state 424
    res                            shift and go to state 280
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 300
    varYVals                       shift and go to state 425
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 302

state 380

    (103) ternarioVars -> valoresBool ? valoresTernarioVars : . valoresTernarioVars
    (104) ternarioVars -> valoresBool ? valoresTernarioVars : . valoresTernarioMat
    (106) ternarioVars -> valoresBool ? valoresTernarioVars : . valoresTernarioBool
    (113) valoresTernarioVars -> . reg
    (114) valoresTernarioVars -> . vec
    (115) valoresTernarioVars -> . ternarioVars
    (116) valoresTernarioVars -> . ( ternarioVars )
    (117) valoresTernarioVars -> . atributos
    (118) valoresTernarioVars -> . varsOps
    (119) valoresTernarioVars -> . varYVals
    (120) valoresTernarioVars -> . res
    (124) valoresTernarioMat -> . INT
    (125) valoresTernarioMat -> . FLOAT
    (126) valoresTernarioMat -> . funcInt
    (127) valoresTernarioMat -> . STRING
    (128) valoresTernarioMat -> . eMat
    (129) valoresTernarioMat -> . ternarioMat
    (130) valoresTernarioMat -> . ( ternarioMat )
    (133) valoresTernarioBool -> . BOOL
    (134) valoresTernarioBool -> . funcBool
    (135) valoresTernarioBool -> . ternarioBool
    (136) valoresTernarioBool -> . ( ternarioBool )
    (137) valoresTernarioBool -> . expBool
    (141) reg -> . { campos }
    (56) vec -> . [ elem ]
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (121) res -> . RES
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    (               shift and go to state 430
    INT             shift and go to state 295
    FLOAT           shift and go to state 296
    STRING          shift and go to state 292
    BOOL            shift and go to state 297
    {               shift and go to state 99
    [               shift and go to state 20
    ID              shift and go to state 178
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 282
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    atributos                      shift and go to state 302
    funcBool                       shift and go to state 281
    funcInt                        shift and go to state 283
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 285
    tCompareEQ                     shift and go to state 73
    valoresTernarioBool            shift and go to state 427
    valoresBool                    shift and go to state 426
    ternarioMat                    shift and go to state 287
    vec                            shift and go to state 288
    paren                          shift and go to state 86
    reg                            shift and go to state 290
    valoresTernarioVars            shift and go to state 428
    exp                            shift and go to state 98
    ternarioBool                   shift and go to state 293
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    valoresTernarioMat             shift and go to state 429
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 432
    res                            shift and go to state 280
    ternarioVars                   shift and go to state 300
    varYVals                       shift and go to state 433
    parenBool                      shift and go to state 84
    expBool                        shift and go to state 431

state 381

    (122) ternarioMat -> valoresBool ? valoresTernarioMat : . valoresTernarioMat
    (105) ternarioVars -> valoresBool ? valoresTernarioMat : . valoresTernarioVars
    (124) valoresTernarioMat -> . INT
    (125) valoresTernarioMat -> . FLOAT
    (126) valoresTernarioMat -> . funcInt
    (127) valoresTernarioMat -> . STRING
    (128) valoresTernarioMat -> . eMat
    (129) valoresTernarioMat -> . ternarioMat
    (130) valoresTernarioMat -> . ( ternarioMat )
    (113) valoresTernarioVars -> . reg
    (114) valoresTernarioVars -> . vec
    (115) valoresTernarioVars -> . ternarioVars
    (116) valoresTernarioVars -> . ( ternarioVars )
    (117) valoresTernarioVars -> . atributos
    (118) valoresTernarioVars -> . varsOps
    (119) valoresTernarioVars -> . varYVals
    (120) valoresTernarioVars -> . res
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (141) reg -> . { campos }
    (56) vec -> . [ elem ]
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (121) res -> . RES
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (51) funcBool -> . COLINEALES ( valores , valores )
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 295
    FLOAT           shift and go to state 296
    STRING          shift and go to state 292
    (               shift and go to state 435
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    {               shift and go to state 99
    [               shift and go to state 20
    ID              shift and go to state 178
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 282
    BOOL            shift and go to state 182
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    atributos                      shift and go to state 302
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 283
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 434
    eMat                           shift and go to state 285
    tCompareEQ                     shift and go to state 73
    res                            shift and go to state 280
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 287
    vec                            shift and go to state 288
    paren                          shift and go to state 86
    reg                            shift and go to state 290
    valoresTernarioVars            shift and go to state 436
    exp                            shift and go to state 98
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    valoresTernarioMat             shift and go to state 437
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 289
    ternarioVars                   shift and go to state 300
    varYVals                       shift and go to state 301
    parenBool                      shift and go to state 84
    expBool                        shift and go to state 438

state 382

    (130) valoresTernarioMat -> ( ternarioMat . )
    (162) valoresMat -> ( ternarioMat . )
    (231) tCompareEQ -> ( ternarioMat . )
    (238) tCompare -> ( ternarioMat . )

    )               shift and go to state 439


state 383

    (136) valoresTernarioBool -> ( ternarioBool . )
    (201) valoresBool -> ( ternarioBool . )
    (230) tCompareEQ -> ( ternarioBool . )

    )               shift and go to state 440


state 384

    (116) valoresTernarioVars -> ( ternarioVars . )

    )               shift and go to state 441


state 385

    (122) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (124) valoresTernarioMat -> . INT
    (125) valoresTernarioMat -> . FLOAT
    (126) valoresTernarioMat -> . funcInt
    (127) valoresTernarioMat -> . STRING
    (128) valoresTernarioMat -> . eMat
    (129) valoresTernarioMat -> . ternarioMat
    (130) valoresTernarioMat -> . ( ternarioMat )
    (133) valoresTernarioBool -> . BOOL
    (134) valoresTernarioBool -> . funcBool
    (135) valoresTernarioBool -> . ternarioBool
    (136) valoresTernarioBool -> . ( ternarioBool )
    (137) valoresTernarioBool -> . expBool
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (56) vec -> . [ elem ]
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 295
    FLOAT           shift and go to state 296
    STRING          shift and go to state 292
    (               shift and go to state 444
    BOOL            shift and go to state 297
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75
    [               shift and go to state 20
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 281
    funcInt                        shift and go to state 283
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 313
    eMat                           shift and go to state 285
    tCompareEQ                     shift and go to state 73
    valoresTernarioBool            shift and go to state 442
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 287
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    varsOps                        shift and go to state 174
    exp                            shift and go to state 98
    ternarioBool                   shift and go to state 293
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    valoresTernarioMat             shift and go to state 443
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    expBool                        shift and go to state 445
    varYVals                       shift and go to state 185
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 186

state 386

    (162) valoresMat -> ( ternarioMat ) .
    (231) tCompareEQ -> ( ternarioMat ) .
    (238) tCompare -> ( ternarioMat ) .

    )               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    +               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    ^               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    EQEQ            reduce using rule 231 (tCompareEQ -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 231 (tCompareEQ -> ( ternarioMat ) .)
    >               reduce using rule 238 (tCompare -> ( ternarioMat ) .)
    <               reduce using rule 238 (tCompare -> ( ternarioMat ) .)


state 387

    (201) valoresBool -> ( ternarioBool ) .
    (230) tCompareEQ -> ( ternarioBool ) .

    ?               reduce using rule 201 (valoresBool -> ( ternarioBool ) .)
    OR              reduce using rule 201 (valoresBool -> ( ternarioBool ) .)
    AND             reduce using rule 201 (valoresBool -> ( ternarioBool ) .)
    ,               reduce using rule 201 (valoresBool -> ( ternarioBool ) .)
    ]               reduce using rule 201 (valoresBool -> ( ternarioBool ) .)
    )               reduce using rule 201 (valoresBool -> ( ternarioBool ) .)
    ;               reduce using rule 201 (valoresBool -> ( ternarioBool ) .)
    :               reduce using rule 201 (valoresBool -> ( ternarioBool ) .)
    }               reduce using rule 201 (valoresBool -> ( ternarioBool ) .)
    EQEQ            reduce using rule 230 (tCompareEQ -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 230 (tCompareEQ -> ( ternarioBool ) .)


state 388

    (123) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (132) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (124) valoresTernarioMat -> . INT
    (125) valoresTernarioMat -> . FLOAT
    (126) valoresTernarioMat -> . funcInt
    (127) valoresTernarioMat -> . STRING
    (128) valoresTernarioMat -> . eMat
    (129) valoresTernarioMat -> . ternarioMat
    (130) valoresTernarioMat -> . ( ternarioMat )
    (133) valoresTernarioBool -> . BOOL
    (134) valoresTernarioBool -> . funcBool
    (135) valoresTernarioBool -> . ternarioBool
    (136) valoresTernarioBool -> . ( ternarioBool )
    (137) valoresTernarioBool -> . expBool
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (56) vec -> . [ elem ]
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 295
    FLOAT           shift and go to state 296
    STRING          shift and go to state 292
    (               shift and go to state 444
    BOOL            shift and go to state 297
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75
    [               shift and go to state 20
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 281
    funcInt                        shift and go to state 283
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 313
    eMat                           shift and go to state 285
    tCompareEQ                     shift and go to state 73
    valoresTernarioBool            shift and go to state 446
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 287
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    varsOps                        shift and go to state 174
    exp                            shift and go to state 98
    ternarioBool                   shift and go to state 293
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    valoresTernarioMat             shift and go to state 447
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    expBool                        shift and go to state 445
    varYVals                       shift and go to state 185
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 186

state 389

    (122) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (124) valoresTernarioMat -> . INT
    (125) valoresTernarioMat -> . FLOAT
    (126) valoresTernarioMat -> . funcInt
    (127) valoresTernarioMat -> . STRING
    (128) valoresTernarioMat -> . eMat
    (129) valoresTernarioMat -> . ternarioMat
    (130) valoresTernarioMat -> . ( ternarioMat )
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (51) funcBool -> . COLINEALES ( valores , valores )
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (56) vec -> . [ elem ]
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 295
    FLOAT           shift and go to state 296
    STRING          shift and go to state 292
    (               shift and go to state 448
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    BOOL            shift and go to state 182
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75
    [               shift and go to state 20
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 283
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 285
    tCompareEQ                     shift and go to state 73
    valoresBool                    shift and go to state 321
    ternarioMat                    shift and go to state 287
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    varsOps                        shift and go to state 174
    exp                            shift and go to state 98
    tCompare                       shift and go to state 85
    valoresTernarioMat             shift and go to state 443
    not                            shift and go to state 87
    expBool                        shift and go to state 325
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    iSing                          shift and go to state 83
    varYVals                       shift and go to state 185
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 186

state 390

    (162) valoresMat -> ( ternarioMat ) .

    ^               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    +               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    ,               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    ]               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    EQEQ            reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    >               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    <               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    )               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    ;               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    AND             reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    OR              reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    ?               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    :               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    }               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)


state 391

    (123) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (124) valoresTernarioMat -> . INT
    (125) valoresTernarioMat -> . FLOAT
    (126) valoresTernarioMat -> . funcInt
    (127) valoresTernarioMat -> . STRING
    (128) valoresTernarioMat -> . eMat
    (129) valoresTernarioMat -> . ternarioMat
    (130) valoresTernarioMat -> . ( ternarioMat )
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (51) funcBool -> . COLINEALES ( valores , valores )
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (56) vec -> . [ elem ]
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 295
    FLOAT           shift and go to state 296
    STRING          shift and go to state 292
    (               shift and go to state 448
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    BOOL            shift and go to state 182
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75
    [               shift and go to state 20
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 283
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 285
    tCompareEQ                     shift and go to state 73
    valoresBool                    shift and go to state 321
    ternarioMat                    shift and go to state 287
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    varsOps                        shift and go to state 174
    exp                            shift and go to state 98
    tCompare                       shift and go to state 85
    valoresTernarioMat             shift and go to state 447
    not                            shift and go to state 87
    expBool                        shift and go to state 325
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    iSing                          shift and go to state 83
    varYVals                       shift and go to state 185
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 186

state 392

    (132) ternarioBool -> expBool ? valoresTernarioBool : . valoresTernarioBool
    (112) ternarioVars -> expBool ? valoresTernarioBool : . valoresTernarioVars
    (133) valoresTernarioBool -> . BOOL
    (134) valoresTernarioBool -> . funcBool
    (135) valoresTernarioBool -> . ternarioBool
    (136) valoresTernarioBool -> . ( ternarioBool )
    (137) valoresTernarioBool -> . expBool
    (113) valoresTernarioVars -> . reg
    (114) valoresTernarioVars -> . vec
    (115) valoresTernarioVars -> . ternarioVars
    (116) valoresTernarioVars -> . ( ternarioVars )
    (117) valoresTernarioVars -> . atributos
    (118) valoresTernarioVars -> . varsOps
    (119) valoresTernarioVars -> . varYVals
    (120) valoresTernarioVars -> . res
    (51) funcBool -> . COLINEALES ( valores , valores )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (141) reg -> . { campos }
    (56) vec -> . [ elem ]
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (121) res -> . RES
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (246) parenBool -> . ( expBool )
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )

    BOOL            shift and go to state 297
    (               shift and go to state 423
    COLINEALES      shift and go to state 4
    {               shift and go to state 99
    [               shift and go to state 20
    ID              shift and go to state 178
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 282
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    INT             shift and go to state 226
    FLOAT           shift and go to state 227
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    STRING          shift and go to state 176
    NOT             shift and go to state 97
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 76
    +               shift and go to state 75

    and                            shift and go to state 60
    funcBool                       shift and go to state 281
    funcInt                        shift and go to state 220
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 222
    p                              shift and go to state 94
    valoresTernarioBool            shift and go to state 449
    valoresBool                    shift and go to state 419
    vec                            shift and go to state 288
    paren                          shift and go to state 86
    reg                            shift and go to state 290
    valoresTernarioVars            shift and go to state 450
    expBool                        shift and go to state 422
    ternarioBool                   shift and go to state 293
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    tCompareEQ                     shift and go to state 73
    varsOps                        shift and go to state 424
    res                            shift and go to state 280
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 300
    varYVals                       shift and go to state 425
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 302

state 393

    (108) ternarioVars -> expBool ? valoresTernarioVars : . valoresTernarioVars
    (109) ternarioVars -> expBool ? valoresTernarioVars : . valoresTernarioMat
    (111) ternarioVars -> expBool ? valoresTernarioVars : . valoresTernarioBool
    (113) valoresTernarioVars -> . reg
    (114) valoresTernarioVars -> . vec
    (115) valoresTernarioVars -> . ternarioVars
    (116) valoresTernarioVars -> . ( ternarioVars )
    (117) valoresTernarioVars -> . atributos
    (118) valoresTernarioVars -> . varsOps
    (119) valoresTernarioVars -> . varYVals
    (120) valoresTernarioVars -> . res
    (124) valoresTernarioMat -> . INT
    (125) valoresTernarioMat -> . FLOAT
    (126) valoresTernarioMat -> . funcInt
    (127) valoresTernarioMat -> . STRING
    (128) valoresTernarioMat -> . eMat
    (129) valoresTernarioMat -> . ternarioMat
    (130) valoresTernarioMat -> . ( ternarioMat )
    (133) valoresTernarioBool -> . BOOL
    (134) valoresTernarioBool -> . funcBool
    (135) valoresTernarioBool -> . ternarioBool
    (136) valoresTernarioBool -> . ( ternarioBool )
    (137) valoresTernarioBool -> . expBool
    (141) reg -> . { campos }
    (56) vec -> . [ elem ]
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (121) res -> . RES
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    (               shift and go to state 430
    INT             shift and go to state 295
    FLOAT           shift and go to state 296
    STRING          shift and go to state 292
    BOOL            shift and go to state 297
    {               shift and go to state 99
    [               shift and go to state 20
    ID              shift and go to state 178
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 282
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 281
    funcInt                        shift and go to state 283
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 426
    eMat                           shift and go to state 285
    tCompareEQ                     shift and go to state 73
    valoresTernarioBool            shift and go to state 451
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 287
    vec                            shift and go to state 288
    paren                          shift and go to state 86
    reg                            shift and go to state 290
    valoresTernarioVars            shift and go to state 452
    expBool                        shift and go to state 431
    ternarioBool                   shift and go to state 293
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    valoresTernarioMat             shift and go to state 453
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 432
    res                            shift and go to state 280
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 300
    varYVals                       shift and go to state 433
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 302

state 394

    (123) ternarioMat -> expBool ? valoresTernarioMat : . valoresTernarioMat
    (110) ternarioVars -> expBool ? valoresTernarioMat : . valoresTernarioVars
    (124) valoresTernarioMat -> . INT
    (125) valoresTernarioMat -> . FLOAT
    (126) valoresTernarioMat -> . funcInt
    (127) valoresTernarioMat -> . STRING
    (128) valoresTernarioMat -> . eMat
    (129) valoresTernarioMat -> . ternarioMat
    (130) valoresTernarioMat -> . ( ternarioMat )
    (113) valoresTernarioVars -> . reg
    (114) valoresTernarioVars -> . vec
    (115) valoresTernarioVars -> . ternarioVars
    (116) valoresTernarioVars -> . ( ternarioVars )
    (117) valoresTernarioVars -> . atributos
    (118) valoresTernarioVars -> . varsOps
    (119) valoresTernarioVars -> . varYVals
    (120) valoresTernarioVars -> . res
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (141) reg -> . { campos }
    (56) vec -> . [ elem ]
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (121) res -> . RES
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (51) funcBool -> . COLINEALES ( valores , valores )
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 295
    FLOAT           shift and go to state 296
    STRING          shift and go to state 292
    (               shift and go to state 435
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    {               shift and go to state 99
    [               shift and go to state 20
    ID              shift and go to state 178
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 282
    BOOL            shift and go to state 182
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 283
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 434
    eMat                           shift and go to state 285
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 287
    vec                            shift and go to state 288
    paren                          shift and go to state 86
    reg                            shift and go to state 290
    valoresTernarioVars            shift and go to state 455
    expBool                        shift and go to state 438
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    valoresTernarioMat             shift and go to state 454
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 289
    res                            shift and go to state 280
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 300
    varYVals                       shift and go to state 301
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 302

state 395

    (238) tCompare -> ( ternarioMat . )
    (162) valoresMat -> ( ternarioMat . )

    )               shift and go to state 456


state 396

    (131) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (133) valoresTernarioBool -> . BOOL
    (134) valoresTernarioBool -> . funcBool
    (135) valoresTernarioBool -> . ternarioBool
    (136) valoresTernarioBool -> . ( ternarioBool )
    (137) valoresTernarioBool -> . expBool
    (51) funcBool -> . COLINEALES ( valores , valores )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (56) vec -> . [ elem ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (246) parenBool -> . ( expBool )
    (141) reg -> . { campos }
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )

    BOOL            shift and go to state 297
    (               shift and go to state 457
    COLINEALES      shift and go to state 4
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    ID              shift and go to state 224
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    INT             shift and go to state 226
    FLOAT           shift and go to state 227
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    STRING          shift and go to state 176
    NOT             shift and go to state 97
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75

    and                            shift and go to state 60
    atributos                      shift and go to state 186
    funcBool                       shift and go to state 281
    funcInt                        shift and go to state 220
    menor                          shift and go to state 66
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 351
    eMat                           shift and go to state 222
    p                              shift and go to state 94
    valoresTernarioBool            shift and go to state 442
    mayor                          shift and go to state 79
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    iSing                          shift and go to state 83
    ternarioBool                   shift and go to state 293
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    tCompareEQ                     shift and go to state 73
    varsOps                        shift and go to state 228
    exp                            shift and go to state 98
    varYVals                       shift and go to state 229
    parenBool                      shift and go to state 84
    expBool                        shift and go to state 458

state 397

    (201) valoresBool -> ( ternarioBool ) .

    EQEQ            reduce using rule 201 (valoresBool -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 201 (valoresBool -> ( ternarioBool ) .)
    AND             reduce using rule 201 (valoresBool -> ( ternarioBool ) .)
    OR              reduce using rule 201 (valoresBool -> ( ternarioBool ) .)
    ?               reduce using rule 201 (valoresBool -> ( ternarioBool ) .)
    ,               reduce using rule 201 (valoresBool -> ( ternarioBool ) .)
    ]               reduce using rule 201 (valoresBool -> ( ternarioBool ) .)
    )               reduce using rule 201 (valoresBool -> ( ternarioBool ) .)
    ;               reduce using rule 201 (valoresBool -> ( ternarioBool ) .)
    :               reduce using rule 201 (valoresBool -> ( ternarioBool ) .)
    }               reduce using rule 201 (valoresBool -> ( ternarioBool ) .)


state 398

    (132) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (133) valoresTernarioBool -> . BOOL
    (134) valoresTernarioBool -> . funcBool
    (135) valoresTernarioBool -> . ternarioBool
    (136) valoresTernarioBool -> . ( ternarioBool )
    (137) valoresTernarioBool -> . expBool
    (51) funcBool -> . COLINEALES ( valores , valores )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (56) vec -> . [ elem ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (246) parenBool -> . ( expBool )
    (141) reg -> . { campos }
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )

    BOOL            shift and go to state 297
    (               shift and go to state 457
    COLINEALES      shift and go to state 4
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    ID              shift and go to state 224
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    INT             shift and go to state 226
    FLOAT           shift and go to state 227
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    STRING          shift and go to state 176
    NOT             shift and go to state 97
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75

    and                            shift and go to state 60
    atributos                      shift and go to state 186
    funcBool                       shift and go to state 281
    funcInt                        shift and go to state 220
    menor                          shift and go to state 66
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 351
    eMat                           shift and go to state 222
    p                              shift and go to state 94
    valoresTernarioBool            shift and go to state 446
    mayor                          shift and go to state 79
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    iSing                          shift and go to state 83
    ternarioBool                   shift and go to state 293
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    tCompareEQ                     shift and go to state 73
    varsOps                        shift and go to state 228
    exp                            shift and go to state 98
    varYVals                       shift and go to state 229
    parenBool                      shift and go to state 84
    expBool                        shift and go to state 458

state 399

    (142) campos -> ID : valores . , campos
    (143) campos -> ID : valores .

    ,               shift and go to state 459
    }               reduce using rule 143 (campos -> ID : valores .)


state 400

    (153) varAsig -> ID . ID = valores .

    ;               reduce using rule 153 (varAsig -> ID . ID = valores .)
    )               reduce using rule 153 (varAsig -> ID . ID = valores .)


state 401

    (131) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (122) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (133) valoresTernarioBool -> . BOOL
    (134) valoresTernarioBool -> . funcBool
    (135) valoresTernarioBool -> . ternarioBool
    (136) valoresTernarioBool -> . ( ternarioBool )
    (137) valoresTernarioBool -> . expBool
    (124) valoresTernarioMat -> . INT
    (125) valoresTernarioMat -> . FLOAT
    (126) valoresTernarioMat -> . funcInt
    (127) valoresTernarioMat -> . STRING
    (128) valoresTernarioMat -> . eMat
    (129) valoresTernarioMat -> . ternarioMat
    (130) valoresTernarioMat -> . ( ternarioMat )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (141) reg -> . { campos }
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (56) vec -> . [ elem ]
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    BOOL            shift and go to state 297
    (               shift and go to state 462
    INT             shift and go to state 295
    FLOAT           shift and go to state 296
    STRING          shift and go to state 292
    COLINEALES      shift and go to state 4
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    ID              shift and go to state 88
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75
    [               shift and go to state 20
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 281
    funcInt                        shift and go to state 283
    menor                          shift and go to state 66
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 460
    eMat                           shift and go to state 285
    tCompareEQ                     shift and go to state 73
    valoresTernarioBool            shift and go to state 442
    mayor                          shift and go to state 79
    ternarioMat                    shift and go to state 287
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    iSing                          shift and go to state 83
    expBool                        shift and go to state 464
    ternarioBool                   shift and go to state 293
    tCompare                       shift and go to state 85
    valoresTernarioMat             shift and go to state 443
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 461
    exp                            shift and go to state 98
    varYVals                       shift and go to state 463
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 186

state 402

    (231) tCompareEQ -> ( ternarioMat ) .
    (238) tCompare -> ( ternarioMat ) .
    (162) valoresMat -> ( ternarioMat ) .

    EQEQ            reduce using rule 231 (tCompareEQ -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 231 (tCompareEQ -> ( ternarioMat ) .)
    AND             reduce using rule 231 (tCompareEQ -> ( ternarioMat ) .)
    OR              reduce using rule 231 (tCompareEQ -> ( ternarioMat ) .)
    ?               reduce using rule 231 (tCompareEQ -> ( ternarioMat ) .)
    ,               reduce using rule 231 (tCompareEQ -> ( ternarioMat ) .)
    ]               reduce using rule 231 (tCompareEQ -> ( ternarioMat ) .)
    )               reduce using rule 231 (tCompareEQ -> ( ternarioMat ) .)
    ;               reduce using rule 231 (tCompareEQ -> ( ternarioMat ) .)
    :               reduce using rule 231 (tCompareEQ -> ( ternarioMat ) .)
    }               reduce using rule 231 (tCompareEQ -> ( ternarioMat ) .)
    >               reduce using rule 238 (tCompare -> ( ternarioMat ) .)
    <               reduce using rule 238 (tCompare -> ( ternarioMat ) .)
    +               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    ^               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)


state 403

    (132) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (123) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (133) valoresTernarioBool -> . BOOL
    (134) valoresTernarioBool -> . funcBool
    (135) valoresTernarioBool -> . ternarioBool
    (136) valoresTernarioBool -> . ( ternarioBool )
    (137) valoresTernarioBool -> . expBool
    (124) valoresTernarioMat -> . INT
    (125) valoresTernarioMat -> . FLOAT
    (126) valoresTernarioMat -> . funcInt
    (127) valoresTernarioMat -> . STRING
    (128) valoresTernarioMat -> . eMat
    (129) valoresTernarioMat -> . ternarioMat
    (130) valoresTernarioMat -> . ( ternarioMat )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (141) reg -> . { campos }
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (56) vec -> . [ elem ]
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    BOOL            shift and go to state 297
    (               shift and go to state 462
    INT             shift and go to state 295
    FLOAT           shift and go to state 296
    STRING          shift and go to state 292
    COLINEALES      shift and go to state 4
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    ID              shift and go to state 88
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75
    [               shift and go to state 20
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 281
    funcInt                        shift and go to state 283
    menor                          shift and go to state 66
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 460
    eMat                           shift and go to state 285
    tCompareEQ                     shift and go to state 73
    valoresTernarioBool            shift and go to state 446
    mayor                          shift and go to state 79
    ternarioMat                    shift and go to state 287
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    iSing                          shift and go to state 83
    expBool                        shift and go to state 464
    ternarioBool                   shift and go to state 293
    tCompare                       shift and go to state 85
    valoresTernarioMat             shift and go to state 447
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 461
    exp                            shift and go to state 98
    varYVals                       shift and go to state 463
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 186

state 404

    (6) lAbierta -> IF ( cosaBooleana ) linea .

    COMMENT         reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    IF              reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    DO              reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    WHILE           reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    FOR             reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    RETURN          reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    ;               reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    MENOSMENOS      reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    MASMAS          reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    ID              reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    PRINT           reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    MULTIESCALAR    reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    LENGTH          reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    CAPITALIZAR     reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    COLINEALES      reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    [               reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    $end            reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    }               reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)


state 405

    (16) lCerrada -> IF ( cosaBooleana ) COMMENT . com lCerrada ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) COMMENT . com lCerrada ELSE lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT . com lCerrada ELSE COMMENT com lCerrada
    (12) com -> . COMMENT com
    (13) com -> . empty
    (55) empty -> .

    COMMENT         shift and go to state 115
    IF              reduce using rule 55 (empty -> .)
    DO              reduce using rule 55 (empty -> .)
    RETURN          reduce using rule 55 (empty -> .)
    ;               reduce using rule 55 (empty -> .)
    WHILE           reduce using rule 55 (empty -> .)
    FOR             reduce using rule 55 (empty -> .)
    MENOSMENOS      reduce using rule 55 (empty -> .)
    MASMAS          reduce using rule 55 (empty -> .)
    ID              reduce using rule 55 (empty -> .)
    PRINT           reduce using rule 55 (empty -> .)
    MULTIESCALAR    reduce using rule 55 (empty -> .)
    LENGTH          reduce using rule 55 (empty -> .)
    CAPITALIZAR     reduce using rule 55 (empty -> .)
    COLINEALES      reduce using rule 55 (empty -> .)
    [               reduce using rule 55 (empty -> .)

    com                            shift and go to state 465
    empty                          shift and go to state 117

state 406

    (14) lCerrada -> IF . ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF . ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (6) lAbierta -> IF . ( cosaBooleana ) linea
    (7) lAbierta -> IF . ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> IF . ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> IF . ( cosaBooleana ) { g }

    (               shift and go to state 466


state 407

    (8) lAbierta -> IF ( cosaBooleana ) lCerrada . ELSE lAbierta
    (15) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE { g }
    (18) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE COMMENT com lCerrada
    (5) linea -> lCerrada .

    ELSE            shift and go to state 467
    COMMENT         reduce using rule 5 (linea -> lCerrada .)
    IF              reduce using rule 5 (linea -> lCerrada .)
    DO              reduce using rule 5 (linea -> lCerrada .)
    WHILE           reduce using rule 5 (linea -> lCerrada .)
    FOR             reduce using rule 5 (linea -> lCerrada .)
    RETURN          reduce using rule 5 (linea -> lCerrada .)
    ;               reduce using rule 5 (linea -> lCerrada .)
    MENOSMENOS      reduce using rule 5 (linea -> lCerrada .)
    MASMAS          reduce using rule 5 (linea -> lCerrada .)
    ID              reduce using rule 5 (linea -> lCerrada .)
    PRINT           reduce using rule 5 (linea -> lCerrada .)
    MULTIESCALAR    reduce using rule 5 (linea -> lCerrada .)
    LENGTH          reduce using rule 5 (linea -> lCerrada .)
    CAPITALIZAR     reduce using rule 5 (linea -> lCerrada .)
    COLINEALES      reduce using rule 5 (linea -> lCerrada .)
    [               reduce using rule 5 (linea -> lCerrada .)
    $end            reduce using rule 5 (linea -> lCerrada .)
    }               reduce using rule 5 (linea -> lCerrada .)


state 408

    (7) lAbierta -> IF ( cosaBooleana ) { . g } ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) { . g }
    (14) lCerrada -> IF ( cosaBooleana ) { . g } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { . g } ELSE lCerrada
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (55) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (148) varAsig -> . varYVals MULEQ valores
    (149) varAsig -> . varYVals DIVEQ valores
    (150) varAsig -> . varYVals MASEQ valores
    (151) varAsig -> . varYVals MENOSEQ valores
    (152) varAsig -> . varYVals = valores
    (153) varAsig -> . ID . ID = valores
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 55 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    linea                          shift and go to state 34
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 13
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 468
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 30
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 32

state 409

    (22) lCerrada -> loop . { g }
    (23) lCerrada -> loop . lCerrada
    (24) lCerrada -> loop . COMMENT com lCerrada
    (10) lAbierta -> loop . lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (148) varAsig -> . varYVals MULEQ valores
    (149) varAsig -> . varYVals DIVEQ valores
    (150) varAsig -> . varYVals MASEQ valores
    (151) varAsig -> . varYVals MENOSEQ valores
    (152) varAsig -> . varYVals = valores
    (153) varAsig -> . ID . ID = valores
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 112
    COMMENT         shift and go to state 109
    IF              shift and go to state 406
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 110
    lAbierta                       shift and go to state 111
    loop                           shift and go to state 409
    varYVals                       shift and go to state 11

state 410

    (48) funcInt -> MULTIESCALAR ( valores , valores . param )
    (53) param -> . , valores
    (54) param -> . empty
    (55) empty -> .

    ,               shift and go to state 470
    )               reduce using rule 55 (empty -> .)

    empty                          shift and go to state 471
    param                          shift and go to state 469

state 411

    (27) lCerrada -> DO COMMENT com lCerrada WHILE ( . valores ) ;
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (141) reg -> . { campos }
    (97) ternario -> . ternarioMat
    (98) ternario -> . ternarioBool
    (99) ternario -> . ( ternarioMat )
    (100) ternario -> . ( ternarioBool )
    (101) ternario -> . ternarioVars
    (102) ternario -> . ( ternarioVars )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 90
    FLOAT           shift and go to state 92
    STRING          shift and go to state 70
    BOOL            shift and go to state 95
    RES             shift and go to state 63
    ID              shift and go to state 88
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 99
    (               shift and go to state 74
    [               shift and go to state 20
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    ?               reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 71
    eMat                           shift and go to state 72
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 77
    vec                            shift and go to state 78
    paren                          shift and go to state 86
    reg                            shift and go to state 80
    expBool                        shift and go to state 81
    ternarioBool                   shift and go to state 82
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 89
    varYVals                       shift and go to state 100
    funcReturn                     shift and go to state 91
    valores                        shift and go to state 472
    p                              shift and go to state 94
    varsOps                        shift and go to state 96
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 67
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 101

state 412

    (15) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE { g }
    (18) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE COMMENT com lCerrada

    ELSE            shift and go to state 473


state 413

    (14) lCerrada -> IF ( cosaBooleana ) { . g } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { . g } ELSE lCerrada
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (55) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (148) varAsig -> . varYVals MULEQ valores
    (149) varAsig -> . varYVals DIVEQ valores
    (150) varAsig -> . varYVals MASEQ valores
    (151) varAsig -> . varYVals MENOSEQ valores
    (152) varAsig -> . varYVals = valores
    (153) varAsig -> . ID . ID = valores
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 55 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 13
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 474
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 30
    loop                           shift and go to state 32
    varYVals                       shift and go to state 11
    linea                          shift and go to state 34

state 414

    (26) lCerrada -> DO lCerrada WHILE ( valores ) . ;

    ;               shift and go to state 475


state 415

    (25) lCerrada -> DO { g } WHILE ( . valores ) ;
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (141) reg -> . { campos }
    (97) ternario -> . ternarioMat
    (98) ternario -> . ternarioBool
    (99) ternario -> . ( ternarioMat )
    (100) ternario -> . ( ternarioBool )
    (101) ternario -> . ternarioVars
    (102) ternario -> . ( ternarioVars )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 90
    FLOAT           shift and go to state 92
    STRING          shift and go to state 70
    BOOL            shift and go to state 95
    RES             shift and go to state 63
    ID              shift and go to state 88
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 99
    (               shift and go to state 74
    [               shift and go to state 20
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    ?               reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 71
    eMat                           shift and go to state 72
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 77
    vec                            shift and go to state 78
    paren                          shift and go to state 86
    reg                            shift and go to state 80
    expBool                        shift and go to state 81
    ternarioBool                   shift and go to state 82
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 89
    funcReturn                     shift and go to state 91
    valores                        shift and go to state 476
    p                              shift and go to state 94
    varsOps                        shift and go to state 96
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 67
    varYVals                       shift and go to state 100
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 101

state 416

    (51) funcBool -> COLINEALES ( valores , valores ) .

    ?               reduce using rule 51 (funcBool -> COLINEALES ( valores , valores ) .)
    OR              reduce using rule 51 (funcBool -> COLINEALES ( valores , valores ) .)
    AND             reduce using rule 51 (funcBool -> COLINEALES ( valores , valores ) .)
    EQEQ            reduce using rule 51 (funcBool -> COLINEALES ( valores , valores ) .)
    DISTINTO        reduce using rule 51 (funcBool -> COLINEALES ( valores , valores ) .)
    ]               reduce using rule 51 (funcBool -> COLINEALES ( valores , valores ) .)
    :               reduce using rule 51 (funcBool -> COLINEALES ( valores , valores ) .)
    ;               reduce using rule 51 (funcBool -> COLINEALES ( valores , valores ) .)
    ,               reduce using rule 51 (funcBool -> COLINEALES ( valores , valores ) .)
    )               reduce using rule 51 (funcBool -> COLINEALES ( valores , valores ) .)
    }               reduce using rule 51 (funcBool -> COLINEALES ( valores , valores ) .)


state 417

    (34) loop -> FOR ( primParam ; valores ; . tercerParam )
    (37) tercerParam -> . varsOps
    (38) tercerParam -> . varAsig
    (39) tercerParam -> . func
    (40) tercerParam -> . empty
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (148) varAsig -> . varYVals MULEQ valores
    (149) varAsig -> . varYVals DIVEQ valores
    (150) varAsig -> . varYVals MASEQ valores
    (151) varAsig -> . varYVals MENOSEQ valores
    (152) varAsig -> . varYVals = valores
    (153) varAsig -> . ID . ID = valores
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (55) empty -> .
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    )               reduce using rule 55 (empty -> .)
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    varAsig                        shift and go to state 479
    funcVoid                       shift and go to state 15
    funcBool                       shift and go to state 3
    funcString                     shift and go to state 25
    funcInt                        shift and go to state 5
    funcReturn                     shift and go to state 26
    vec                            shift and go to state 33
    varsOps                        shift and go to state 481
    func                           shift and go to state 477
    varYVals                       shift and go to state 11
    vecVal                         shift and go to state 8
    empty                          shift and go to state 480
    tercerParam                    shift and go to state 478

state 418

    (230) tCompareEQ -> ( ternarioBool ) .

    EQEQ            reduce using rule 230 (tCompareEQ -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 230 (tCompareEQ -> ( ternarioBool ) .)
    AND             reduce using rule 230 (tCompareEQ -> ( ternarioBool ) .)
    OR              reduce using rule 230 (tCompareEQ -> ( ternarioBool ) .)
    ?               reduce using rule 230 (tCompareEQ -> ( ternarioBool ) .)
    ,               reduce using rule 230 (tCompareEQ -> ( ternarioBool ) .)
    ]               reduce using rule 230 (tCompareEQ -> ( ternarioBool ) .)
    )               reduce using rule 230 (tCompareEQ -> ( ternarioBool ) .)
    ;               reduce using rule 230 (tCompareEQ -> ( ternarioBool ) .)
    :               reduce using rule 230 (tCompareEQ -> ( ternarioBool ) .)
    }               reduce using rule 230 (tCompareEQ -> ( ternarioBool ) .)


state 419

    (131) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (204) expBool -> valoresBool . OR and
    (206) expBool -> valoresBool . OR valoresBool
    (103) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (209) and -> valoresBool . AND eq
    (211) and -> valoresBool . AND valoresBool

    ?               shift and go to state 482
    OR              shift and go to state 161
    AND             shift and go to state 160


state 420

    (131) ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .

    )               reduce using rule 131 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    :               reduce using rule 131 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    ;               reduce using rule 131 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    ,               reduce using rule 131 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    ]               reduce using rule 131 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    }               reduce using rule 131 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)


state 421

    (107) ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .

    ;               reduce using rule 107 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    )               reduce using rule 107 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    :               reduce using rule 107 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    ,               reduce using rule 107 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    ]               reduce using rule 107 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    }               reduce using rule 107 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)


state 422

    (137) valoresTernarioBool -> expBool .
    (132) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> expBool . OR and
    (205) expBool -> expBool . OR valoresBool
    (108) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars

    ,               reduce using rule 137 (valoresTernarioBool -> expBool .)
    ]               reduce using rule 137 (valoresTernarioBool -> expBool .)
    )               reduce using rule 137 (valoresTernarioBool -> expBool .)
    ;               reduce using rule 137 (valoresTernarioBool -> expBool .)
    :               reduce using rule 137 (valoresTernarioBool -> expBool .)
    }               reduce using rule 137 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 483
    OR              shift and go to state 198


state 423

    (136) valoresTernarioBool -> ( . ternarioBool )
    (116) valoresTernarioVars -> ( . ternarioVars )
    (201) valoresBool -> ( . ternarioBool )
    (230) tCompareEQ -> ( . ternarioBool )
    (231) tCompareEQ -> ( . ternarioMat )
    (238) tCompare -> ( . ternarioMat )
    (162) valoresMat -> ( . ternarioMat )
    (246) parenBool -> ( . expBool )
    (195) paren -> ( . eMat )
    (196) paren -> ( . valoresMat )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (51) funcBool -> . COLINEALES ( valores , valores )
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (56) vec -> . [ elem ]
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 180
    FLOAT           shift and go to state 181
    STRING          shift and go to state 176
    (               shift and go to state 362
    BOOL            shift and go to state 182
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75
    [               shift and go to state 20
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 168
    menor                          shift and go to state 66
    valoresMat                     shift and go to state 169
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 484
    eMat                           shift and go to state 171
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 363
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    expBool                        shift and go to state 485
    ternarioBool                   shift and go to state 383
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 174
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 384
    mayor                          shift and go to state 79
    varYVals                       shift and go to state 185
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 186

state 424

    (118) valoresTernarioVars -> varsOps .
    (200) valoresBool -> varsOps .
    (225) tCompareEQ -> varsOps .
    (233) tCompare -> varsOps .
    (161) valoresMat -> varsOps .

    ,               reduce using rule 118 (valoresTernarioVars -> varsOps .)
    ]               reduce using rule 118 (valoresTernarioVars -> varsOps .)
    )               reduce using rule 118 (valoresTernarioVars -> varsOps .)
    ;               reduce using rule 118 (valoresTernarioVars -> varsOps .)
    :               reduce using rule 118 (valoresTernarioVars -> varsOps .)
    }               reduce using rule 118 (valoresTernarioVars -> varsOps .)
    ?               reduce using rule 200 (valoresBool -> varsOps .)
    OR              reduce using rule 200 (valoresBool -> varsOps .)
    AND             reduce using rule 200 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 225 (tCompareEQ -> varsOps .)
    DISTINTO        reduce using rule 225 (tCompareEQ -> varsOps .)
    >               reduce using rule 233 (tCompare -> varsOps .)
    <               reduce using rule 233 (tCompare -> varsOps .)
    +               reduce using rule 161 (valoresMat -> varsOps .)
    -               reduce using rule 161 (valoresMat -> varsOps .)
    *               reduce using rule 161 (valoresMat -> varsOps .)
    /               reduce using rule 161 (valoresMat -> varsOps .)
    %               reduce using rule 161 (valoresMat -> varsOps .)
    ^               reduce using rule 161 (valoresMat -> varsOps .)


state 425

    (119) valoresTernarioVars -> varYVals .
    (146) varsOps -> varYVals . MASMAS
    (147) varsOps -> varYVals . MENOSMENOS
    (199) valoresBool -> varYVals .
    (224) tCompareEQ -> varYVals .
    (234) tCompare -> varYVals .
    (160) valoresMat -> varYVals .

    ,               reduce using rule 119 (valoresTernarioVars -> varYVals .)
    ]               reduce using rule 119 (valoresTernarioVars -> varYVals .)
    )               reduce using rule 119 (valoresTernarioVars -> varYVals .)
    ;               reduce using rule 119 (valoresTernarioVars -> varYVals .)
    :               reduce using rule 119 (valoresTernarioVars -> varYVals .)
    }               reduce using rule 119 (valoresTernarioVars -> varYVals .)
    MASMAS          shift and go to state 51
    MENOSMENOS      shift and go to state 48
    ?               reduce using rule 199 (valoresBool -> varYVals .)
    OR              reduce using rule 199 (valoresBool -> varYVals .)
    AND             reduce using rule 199 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 224 (tCompareEQ -> varYVals .)
    DISTINTO        reduce using rule 224 (tCompareEQ -> varYVals .)
    >               reduce using rule 234 (tCompare -> varYVals .)
    <               reduce using rule 234 (tCompare -> varYVals .)
    +               reduce using rule 160 (valoresMat -> varYVals .)
    -               reduce using rule 160 (valoresMat -> varYVals .)
    *               reduce using rule 160 (valoresMat -> varYVals .)
    /               reduce using rule 160 (valoresMat -> varYVals .)
    %               reduce using rule 160 (valoresMat -> varYVals .)
    ^               reduce using rule 160 (valoresMat -> varYVals .)


state 426

    (103) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (122) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (204) expBool -> valoresBool . OR and
    (206) expBool -> valoresBool . OR valoresBool
    (209) and -> valoresBool . AND eq
    (211) and -> valoresBool . AND valoresBool

    ?               shift and go to state 486
    OR              shift and go to state 161
    AND             shift and go to state 160


state 427

    (106) ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .

    ;               reduce using rule 106 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    )               reduce using rule 106 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    :               reduce using rule 106 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    ,               reduce using rule 106 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    ]               reduce using rule 106 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    }               reduce using rule 106 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)


state 428

    (103) ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .

    ;               reduce using rule 103 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    )               reduce using rule 103 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    :               reduce using rule 103 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    ,               reduce using rule 103 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    ]               reduce using rule 103 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    }               reduce using rule 103 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)


state 429

    (104) ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .

    ;               reduce using rule 104 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    )               reduce using rule 104 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    :               reduce using rule 104 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    ,               reduce using rule 104 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    ]               reduce using rule 104 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    }               reduce using rule 104 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)


state 430

    (116) valoresTernarioVars -> ( . ternarioVars )
    (130) valoresTernarioMat -> ( . ternarioMat )
    (136) valoresTernarioBool -> ( . ternarioBool )
    (201) valoresBool -> ( . ternarioBool )
    (162) valoresMat -> ( . ternarioMat )
    (230) tCompareEQ -> ( . ternarioBool )
    (231) tCompareEQ -> ( . ternarioMat )
    (195) paren -> ( . eMat )
    (196) paren -> ( . valoresMat )
    (238) tCompare -> ( . ternarioMat )
    (246) parenBool -> ( . expBool )
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (56) vec -> . [ elem ]
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 180
    FLOAT           shift and go to state 181
    STRING          shift and go to state 176
    (               shift and go to state 172
    BOOL            shift and go to state 182
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75
    [               shift and go to state 20
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 168
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 169
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 426
    eMat                           shift and go to state 171
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 382
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    exp                            shift and go to state 98
    ternarioBool                   shift and go to state 383
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    expBool                        shift and go to state 487
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 174
    ternarioVars                   shift and go to state 384
    varYVals                       shift and go to state 185
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 186

state 431

    (137) valoresTernarioBool -> expBool .
    (108) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (123) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (132) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> expBool . OR and
    (205) expBool -> expBool . OR valoresBool

    :               reduce using rule 137 (valoresTernarioBool -> expBool .)
    ,               reduce using rule 137 (valoresTernarioBool -> expBool .)
    ]               reduce using rule 137 (valoresTernarioBool -> expBool .)
    )               reduce using rule 137 (valoresTernarioBool -> expBool .)
    ;               reduce using rule 137 (valoresTernarioBool -> expBool .)
    }               reduce using rule 137 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 488
    OR              shift and go to state 198


state 432

    (118) valoresTernarioVars -> varsOps .
    (200) valoresBool -> varsOps .
    (161) valoresMat -> varsOps .
    (225) tCompareEQ -> varsOps .
    (233) tCompare -> varsOps .

    :               reduce using rule 118 (valoresTernarioVars -> varsOps .)
    ,               reduce using rule 118 (valoresTernarioVars -> varsOps .)
    ]               reduce using rule 118 (valoresTernarioVars -> varsOps .)
    )               reduce using rule 118 (valoresTernarioVars -> varsOps .)
    ;               reduce using rule 118 (valoresTernarioVars -> varsOps .)
    }               reduce using rule 118 (valoresTernarioVars -> varsOps .)
    ?               reduce using rule 200 (valoresBool -> varsOps .)
    OR              reduce using rule 200 (valoresBool -> varsOps .)
    AND             reduce using rule 200 (valoresBool -> varsOps .)
    +               reduce using rule 161 (valoresMat -> varsOps .)
    -               reduce using rule 161 (valoresMat -> varsOps .)
    *               reduce using rule 161 (valoresMat -> varsOps .)
    /               reduce using rule 161 (valoresMat -> varsOps .)
    %               reduce using rule 161 (valoresMat -> varsOps .)
    ^               reduce using rule 161 (valoresMat -> varsOps .)
    EQEQ            reduce using rule 225 (tCompareEQ -> varsOps .)
    DISTINTO        reduce using rule 225 (tCompareEQ -> varsOps .)
    >               reduce using rule 233 (tCompare -> varsOps .)
    <               reduce using rule 233 (tCompare -> varsOps .)


state 433

    (119) valoresTernarioVars -> varYVals .
    (146) varsOps -> varYVals . MASMAS
    (147) varsOps -> varYVals . MENOSMENOS
    (199) valoresBool -> varYVals .
    (160) valoresMat -> varYVals .
    (224) tCompareEQ -> varYVals .
    (234) tCompare -> varYVals .

    :               reduce using rule 119 (valoresTernarioVars -> varYVals .)
    ,               reduce using rule 119 (valoresTernarioVars -> varYVals .)
    ]               reduce using rule 119 (valoresTernarioVars -> varYVals .)
    )               reduce using rule 119 (valoresTernarioVars -> varYVals .)
    ;               reduce using rule 119 (valoresTernarioVars -> varYVals .)
    }               reduce using rule 119 (valoresTernarioVars -> varYVals .)
    MASMAS          shift and go to state 51
    MENOSMENOS      shift and go to state 48
    ?               reduce using rule 199 (valoresBool -> varYVals .)
    OR              reduce using rule 199 (valoresBool -> varYVals .)
    AND             reduce using rule 199 (valoresBool -> varYVals .)
    +               reduce using rule 160 (valoresMat -> varYVals .)
    -               reduce using rule 160 (valoresMat -> varYVals .)
    *               reduce using rule 160 (valoresMat -> varYVals .)
    /               reduce using rule 160 (valoresMat -> varYVals .)
    %               reduce using rule 160 (valoresMat -> varYVals .)
    ^               reduce using rule 160 (valoresMat -> varYVals .)
    EQEQ            reduce using rule 224 (tCompareEQ -> varYVals .)
    DISTINTO        reduce using rule 224 (tCompareEQ -> varYVals .)
    >               reduce using rule 234 (tCompare -> varYVals .)
    <               reduce using rule 234 (tCompare -> varYVals .)


state 434

    (122) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (103) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (204) expBool -> valoresBool . OR and
    (206) expBool -> valoresBool . OR valoresBool
    (209) and -> valoresBool . AND eq
    (211) and -> valoresBool . AND valoresBool

    ?               shift and go to state 489
    OR              shift and go to state 161
    AND             shift and go to state 160


state 435

    (130) valoresTernarioMat -> ( . ternarioMat )
    (116) valoresTernarioVars -> ( . ternarioVars )
    (162) valoresMat -> ( . ternarioMat )
    (201) valoresBool -> ( . ternarioBool )
    (195) paren -> ( . eMat )
    (196) paren -> ( . valoresMat )
    (230) tCompareEQ -> ( . ternarioBool )
    (231) tCompareEQ -> ( . ternarioMat )
    (238) tCompare -> ( . ternarioMat )
    (246) parenBool -> ( . expBool )
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (56) vec -> . [ elem ]
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 180
    FLOAT           shift and go to state 181
    STRING          shift and go to state 176
    (               shift and go to state 172
    BOOL            shift and go to state 182
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75
    [               shift and go to state 20
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 168
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 169
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 490
    eMat                           shift and go to state 171
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 382
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    exp                            shift and go to state 98
    ternarioBool                   shift and go to state 315
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    expBool                        shift and go to state 491
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 174
    ternarioVars                   shift and go to state 384
    varYVals                       shift and go to state 185
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 186

state 436

    (105) ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .

    ;               reduce using rule 105 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    )               reduce using rule 105 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    :               reduce using rule 105 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    ,               reduce using rule 105 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    ]               reduce using rule 105 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    }               reduce using rule 105 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)


state 437

    (122) ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .

    ]               reduce using rule 122 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    )               reduce using rule 122 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    :               reduce using rule 122 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    ;               reduce using rule 122 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    ,               reduce using rule 122 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    }               reduce using rule 122 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)


state 438

    (123) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (108) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (203) expBool -> expBool . OR and
    (205) expBool -> expBool . OR valoresBool

    ?               shift and go to state 492
    OR              shift and go to state 198


state 439

    (130) valoresTernarioMat -> ( ternarioMat ) .
    (162) valoresMat -> ( ternarioMat ) .
    (231) tCompareEQ -> ( ternarioMat ) .
    (238) tCompare -> ( ternarioMat ) .

    :               reduce using rule 130 (valoresTernarioMat -> ( ternarioMat ) .)
    ,               reduce using rule 130 (valoresTernarioMat -> ( ternarioMat ) .)
    ]               reduce using rule 130 (valoresTernarioMat -> ( ternarioMat ) .)
    )               reduce using rule 130 (valoresTernarioMat -> ( ternarioMat ) .)
    ;               reduce using rule 130 (valoresTernarioMat -> ( ternarioMat ) .)
    }               reduce using rule 130 (valoresTernarioMat -> ( ternarioMat ) .)
    +               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    ^               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    EQEQ            reduce using rule 231 (tCompareEQ -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 231 (tCompareEQ -> ( ternarioMat ) .)
    >               reduce using rule 238 (tCompare -> ( ternarioMat ) .)
    <               reduce using rule 238 (tCompare -> ( ternarioMat ) .)


state 440

    (136) valoresTernarioBool -> ( ternarioBool ) .
    (201) valoresBool -> ( ternarioBool ) .
    (230) tCompareEQ -> ( ternarioBool ) .

    :               reduce using rule 136 (valoresTernarioBool -> ( ternarioBool ) .)
    )               reduce using rule 136 (valoresTernarioBool -> ( ternarioBool ) .)
    ,               reduce using rule 136 (valoresTernarioBool -> ( ternarioBool ) .)
    ]               reduce using rule 136 (valoresTernarioBool -> ( ternarioBool ) .)
    ;               reduce using rule 136 (valoresTernarioBool -> ( ternarioBool ) .)
    }               reduce using rule 136 (valoresTernarioBool -> ( ternarioBool ) .)
    ?               reduce using rule 201 (valoresBool -> ( ternarioBool ) .)
    OR              reduce using rule 201 (valoresBool -> ( ternarioBool ) .)
    AND             reduce using rule 201 (valoresBool -> ( ternarioBool ) .)
    EQEQ            reduce using rule 230 (tCompareEQ -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 230 (tCompareEQ -> ( ternarioBool ) .)


state 441

    (116) valoresTernarioVars -> ( ternarioVars ) .

    :               reduce using rule 116 (valoresTernarioVars -> ( ternarioVars ) .)
    ,               reduce using rule 116 (valoresTernarioVars -> ( ternarioVars ) .)
    ]               reduce using rule 116 (valoresTernarioVars -> ( ternarioVars ) .)
    )               reduce using rule 116 (valoresTernarioVars -> ( ternarioVars ) .)
    ;               reduce using rule 116 (valoresTernarioVars -> ( ternarioVars ) .)
    }               reduce using rule 116 (valoresTernarioVars -> ( ternarioVars ) .)


state 442

    (131) ternarioBool -> valoresBool ? valoresTernarioBool . : valoresTernarioBool

    :               shift and go to state 493


state 443

    (122) ternarioMat -> valoresBool ? valoresTernarioMat . : valoresTernarioMat

    :               shift and go to state 494


state 444

    (130) valoresTernarioMat -> ( . ternarioMat )
    (136) valoresTernarioBool -> ( . ternarioBool )
    (162) valoresMat -> ( . ternarioMat )
    (201) valoresBool -> ( . ternarioBool )
    (230) tCompareEQ -> ( . ternarioBool )
    (231) tCompareEQ -> ( . ternarioMat )
    (195) paren -> ( . eMat )
    (196) paren -> ( . valoresMat )
    (238) tCompare -> ( . ternarioMat )
    (246) parenBool -> ( . expBool )
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (56) vec -> . [ elem ]
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 180
    FLOAT           shift and go to state 181
    STRING          shift and go to state 176
    (               shift and go to state 172
    BOOL            shift and go to state 182
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75
    [               shift and go to state 20
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 168
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 169
    eq                             shift and go to state 69
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 171
    tCompareEQ                     shift and go to state 73
    valoresBool                    shift and go to state 313
    ternarioMat                    shift and go to state 382
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    varsOps                        shift and go to state 174
    exp                            shift and go to state 98
    ternarioBool                   shift and go to state 383
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    expBool                        shift and go to state 316
    varYVals                       shift and go to state 185
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 186

state 445

    (137) valoresTernarioBool -> expBool .
    (123) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (132) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> expBool . OR and
    (205) expBool -> expBool . OR valoresBool

    :               reduce using rule 137 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 388
    OR              shift and go to state 198


state 446

    (132) ternarioBool -> expBool ? valoresTernarioBool . : valoresTernarioBool

    :               shift and go to state 495


state 447

    (123) ternarioMat -> expBool ? valoresTernarioMat . : valoresTernarioMat

    :               shift and go to state 496


state 448

    (130) valoresTernarioMat -> ( . ternarioMat )
    (162) valoresMat -> ( . ternarioMat )
    (201) valoresBool -> ( . ternarioBool )
    (195) paren -> ( . eMat )
    (196) paren -> ( . valoresMat )
    (230) tCompareEQ -> ( . ternarioBool )
    (231) tCompareEQ -> ( . ternarioMat )
    (238) tCompare -> ( . ternarioMat )
    (246) parenBool -> ( . expBool )
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (56) vec -> . [ elem ]
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 180
    FLOAT           shift and go to state 181
    STRING          shift and go to state 176
    (               shift and go to state 172
    BOOL            shift and go to state 182
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75
    [               shift and go to state 20
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 168
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 169
    eq                             shift and go to state 69
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 171
    tCompareEQ                     shift and go to state 73
    valoresBool                    shift and go to state 313
    ternarioMat                    shift and go to state 382
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    varsOps                        shift and go to state 174
    exp                            shift and go to state 98
    ternarioBool                   shift and go to state 315
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    expBool                        shift and go to state 316
    varYVals                       shift and go to state 185
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 186

state 449

    (132) ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .

    )               reduce using rule 132 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    :               reduce using rule 132 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    ;               reduce using rule 132 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    ,               reduce using rule 132 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    ]               reduce using rule 132 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    }               reduce using rule 132 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)


state 450

    (112) ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .

    ;               reduce using rule 112 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    )               reduce using rule 112 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    :               reduce using rule 112 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    ,               reduce using rule 112 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    ]               reduce using rule 112 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    }               reduce using rule 112 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)


state 451

    (111) ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .

    ;               reduce using rule 111 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    )               reduce using rule 111 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    :               reduce using rule 111 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    ,               reduce using rule 111 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    ]               reduce using rule 111 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    }               reduce using rule 111 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)


state 452

    (108) ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .

    ;               reduce using rule 108 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    )               reduce using rule 108 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    :               reduce using rule 108 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    ,               reduce using rule 108 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    ]               reduce using rule 108 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    }               reduce using rule 108 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)


state 453

    (109) ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .

    ;               reduce using rule 109 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    )               reduce using rule 109 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    :               reduce using rule 109 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    ,               reduce using rule 109 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    ]               reduce using rule 109 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    }               reduce using rule 109 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)


state 454

    (123) ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .

    ]               reduce using rule 123 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    )               reduce using rule 123 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    :               reduce using rule 123 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    ;               reduce using rule 123 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    ,               reduce using rule 123 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    }               reduce using rule 123 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)


state 455

    (110) ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .

    ;               reduce using rule 110 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    )               reduce using rule 110 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    :               reduce using rule 110 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    ,               reduce using rule 110 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    ]               reduce using rule 110 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    }               reduce using rule 110 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)


state 456

    (238) tCompare -> ( ternarioMat ) .
    (162) valoresMat -> ( ternarioMat ) .

    EQEQ            reduce using rule 238 (tCompare -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 238 (tCompare -> ( ternarioMat ) .)
    AND             reduce using rule 238 (tCompare -> ( ternarioMat ) .)
    OR              reduce using rule 238 (tCompare -> ( ternarioMat ) .)
    ?               reduce using rule 238 (tCompare -> ( ternarioMat ) .)
    ,               reduce using rule 238 (tCompare -> ( ternarioMat ) .)
    ]               reduce using rule 238 (tCompare -> ( ternarioMat ) .)
    )               reduce using rule 238 (tCompare -> ( ternarioMat ) .)
    ;               reduce using rule 238 (tCompare -> ( ternarioMat ) .)
    :               reduce using rule 238 (tCompare -> ( ternarioMat ) .)
    }               reduce using rule 238 (tCompare -> ( ternarioMat ) .)
    +               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)
    ^               reduce using rule 162 (valoresMat -> ( ternarioMat ) .)


state 457

    (136) valoresTernarioBool -> ( . ternarioBool )
    (201) valoresBool -> ( . ternarioBool )
    (230) tCompareEQ -> ( . ternarioBool )
    (231) tCompareEQ -> ( . ternarioMat )
    (238) tCompare -> ( . ternarioMat )
    (162) valoresMat -> ( . ternarioMat )
    (246) parenBool -> ( . expBool )
    (195) paren -> ( . eMat )
    (196) paren -> ( . valoresMat )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (51) funcBool -> . COLINEALES ( valores , valores )
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (56) vec -> . [ elem ]
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 180
    FLOAT           shift and go to state 181
    STRING          shift and go to state 176
    (               shift and go to state 362
    BOOL            shift and go to state 182
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75
    [               shift and go to state 20
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 168
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 169
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 361
    eMat                           shift and go to state 171
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 363
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    varsOps                        shift and go to state 174
    exp                            shift and go to state 98
    ternarioBool                   shift and go to state 383
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    expBool                        shift and go to state 364
    varYVals                       shift and go to state 185
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 186

state 458

    (137) valoresTernarioBool -> expBool .
    (132) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> expBool . OR and
    (205) expBool -> expBool . OR valoresBool

    )               reduce using rule 137 (valoresTernarioBool -> expBool .)
    :               reduce using rule 137 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 398
    OR              shift and go to state 198


state 459

    (142) campos -> ID : valores , . campos
    (142) campos -> . ID : valores , campos
    (143) campos -> . ID : valores

    ID              shift and go to state 216

    campos                         shift and go to state 497

state 460

    (131) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (204) expBool -> valoresBool . OR and
    (206) expBool -> valoresBool . OR valoresBool
    (122) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (209) and -> valoresBool . AND eq
    (211) and -> valoresBool . AND valoresBool

    ?               shift and go to state 401
    OR              shift and go to state 161
    AND             shift and go to state 160


state 461

    (200) valoresBool -> varsOps .
    (161) valoresMat -> varsOps .
    (225) tCompareEQ -> varsOps .
    (233) tCompare -> varsOps .

    ?               reduce using rule 200 (valoresBool -> varsOps .)
    OR              reduce using rule 200 (valoresBool -> varsOps .)
    AND             reduce using rule 200 (valoresBool -> varsOps .)
    +               reduce using rule 161 (valoresMat -> varsOps .)
    -               reduce using rule 161 (valoresMat -> varsOps .)
    *               reduce using rule 161 (valoresMat -> varsOps .)
    /               reduce using rule 161 (valoresMat -> varsOps .)
    %               reduce using rule 161 (valoresMat -> varsOps .)
    ^               reduce using rule 161 (valoresMat -> varsOps .)
    EQEQ            reduce using rule 225 (tCompareEQ -> varsOps .)
    DISTINTO        reduce using rule 225 (tCompareEQ -> varsOps .)
    >               reduce using rule 233 (tCompare -> varsOps .)
    <               reduce using rule 233 (tCompare -> varsOps .)


state 462

    (136) valoresTernarioBool -> ( . ternarioBool )
    (130) valoresTernarioMat -> ( . ternarioMat )
    (201) valoresBool -> ( . ternarioBool )
    (162) valoresMat -> ( . ternarioMat )
    (230) tCompareEQ -> ( . ternarioBool )
    (231) tCompareEQ -> ( . ternarioMat )
    (238) tCompare -> ( . ternarioMat )
    (195) paren -> ( . eMat )
    (196) paren -> ( . valoresMat )
    (246) parenBool -> ( . expBool )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (56) vec -> . [ elem ]
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 180
    FLOAT           shift and go to state 181
    STRING          shift and go to state 176
    (               shift and go to state 172
    BOOL            shift and go to state 182
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75
    [               shift and go to state 20
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 168
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 169
    eq                             shift and go to state 69
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 171
    tCompareEQ                     shift and go to state 73
    valoresBool                    shift and go to state 361
    ternarioMat                    shift and go to state 382
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    varsOps                        shift and go to state 174
    exp                            shift and go to state 98
    ternarioBool                   shift and go to state 383
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    expBool                        shift and go to state 364
    varYVals                       shift and go to state 185
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 186

state 463

    (199) valoresBool -> varYVals .
    (160) valoresMat -> varYVals .
    (146) varsOps -> varYVals . MASMAS
    (147) varsOps -> varYVals . MENOSMENOS
    (224) tCompareEQ -> varYVals .
    (234) tCompare -> varYVals .

    ?               reduce using rule 199 (valoresBool -> varYVals .)
    OR              reduce using rule 199 (valoresBool -> varYVals .)
    AND             reduce using rule 199 (valoresBool -> varYVals .)
    +               reduce using rule 160 (valoresMat -> varYVals .)
    -               reduce using rule 160 (valoresMat -> varYVals .)
    *               reduce using rule 160 (valoresMat -> varYVals .)
    /               reduce using rule 160 (valoresMat -> varYVals .)
    %               reduce using rule 160 (valoresMat -> varYVals .)
    ^               reduce using rule 160 (valoresMat -> varYVals .)
    MASMAS          shift and go to state 51
    MENOSMENOS      shift and go to state 48
    EQEQ            reduce using rule 224 (tCompareEQ -> varYVals .)
    DISTINTO        reduce using rule 224 (tCompareEQ -> varYVals .)
    >               reduce using rule 234 (tCompare -> varYVals .)
    <               reduce using rule 234 (tCompare -> varYVals .)


state 464

    (137) valoresTernarioBool -> expBool .
    (132) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> expBool . OR and
    (205) expBool -> expBool . OR valoresBool
    (123) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat

    :               reduce using rule 137 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 403
    OR              shift and go to state 198


state 465

    (16) lCerrada -> IF ( cosaBooleana ) COMMENT com . lCerrada ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) COMMENT com . lCerrada ELSE lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com . lCerrada ELSE COMMENT com lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (148) varAsig -> . varYVals MULEQ valores
    (149) varAsig -> . varYVals DIVEQ valores
    (150) varAsig -> . varYVals MASEQ valores
    (151) varAsig -> . varYVals MENOSEQ valores
    (152) varAsig -> . varYVals = valores
    (153) varAsig -> . ID . ID = valores
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 498
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 39

state 466

    (14) lCerrada -> IF ( . cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( . cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (6) lAbierta -> IF ( . cosaBooleana ) linea
    (7) lAbierta -> IF ( . cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> IF ( . cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> IF ( . cosaBooleana ) { g }
    (41) cosaBooleana -> . expBool
    (42) cosaBooleana -> . valoresBool
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (56) vec -> . [ elem ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (246) parenBool -> . ( expBool )
    (141) reg -> . { campos }
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )

    BOOL            shift and go to state 182
    (               shift and go to state 223
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    )               reduce using rule 202 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 224
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    INT             shift and go to state 226
    FLOAT           shift and go to state 227
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    STRING          shift and go to state 176
    NOT             shift and go to state 97
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75

    and                            shift and go to state 60
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 220
    menor                          shift and go to state 66
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 221
    eMat                           shift and go to state 222
    p                              shift and go to state 94
    atributos                      shift and go to state 186
    mayor                          shift and go to state 79
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    varsOps                        shift and go to state 228
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    cosaBooleana                   shift and go to state 499
    funcString                     shift and go to state 179
    tCompareEQ                     shift and go to state 73
    exp                            shift and go to state 98
    varYVals                       shift and go to state 229
    parenBool                      shift and go to state 84
    expBool                        shift and go to state 230

state 467

    (8) lAbierta -> IF ( cosaBooleana ) lCerrada ELSE . lAbierta
    (15) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . { g }
    (18) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . COMMENT com lCerrada
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (148) varAsig -> . varYVals MULEQ valores
    (149) varAsig -> . varYVals DIVEQ valores
    (150) varAsig -> . varYVals MASEQ valores
    (151) varAsig -> . varYVals MENOSEQ valores
    (152) varAsig -> . varYVals = valores
    (153) varAsig -> . ID . ID = valores
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 503
    COMMENT         shift and go to state 500
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 501
    lAbierta                       shift and go to state 502
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 32

state 468

    (7) lAbierta -> IF ( cosaBooleana ) { g . } ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) { g . }
    (14) lCerrada -> IF ( cosaBooleana ) { g . } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g . } ELSE lCerrada

    }               shift and go to state 504


state 469

    (48) funcInt -> MULTIESCALAR ( valores , valores param . )

    )               shift and go to state 505


state 470

    (53) param -> , . valores
    (78) valores -> . varYVals
    (79) valores -> . varsOps
    (80) valores -> . eMat
    (81) valores -> . expBool
    (82) valores -> . funcReturn
    (83) valores -> . reg
    (84) valores -> . INT
    (85) valores -> . FLOAT
    (86) valores -> . STRING
    (87) valores -> . BOOL
    (88) valores -> . ternario
    (89) valores -> . atributos
    (90) valores -> . vec
    (91) valores -> . RES
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (141) reg -> . { campos }
    (97) ternario -> . ternarioMat
    (98) ternario -> . ternarioBool
    (99) ternario -> . ( ternarioMat )
    (100) ternario -> . ( ternarioBool )
    (101) ternario -> . ternarioVars
    (102) ternario -> . ( ternarioVars )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (56) vec -> . [ elem ]
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 90
    FLOAT           shift and go to state 92
    STRING          shift and go to state 70
    BOOL            shift and go to state 95
    RES             shift and go to state 63
    ID              shift and go to state 88
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    {               shift and go to state 99
    (               shift and go to state 74
    [               shift and go to state 20
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    ?               reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    ternario                       shift and go to state 61
    funcBool                       shift and go to state 62
    funcInt                        shift and go to state 64
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 71
    eMat                           shift and go to state 72
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 77
    vec                            shift and go to state 78
    paren                          shift and go to state 86
    reg                            shift and go to state 80
    expBool                        shift and go to state 81
    ternarioBool                   shift and go to state 82
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 89
    funcReturn                     shift and go to state 91
    valores                        shift and go to state 506
    p                              shift and go to state 94
    varsOps                        shift and go to state 96
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 67
    varYVals                       shift and go to state 100
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 101

state 471

    (54) param -> empty .

    )               reduce using rule 54 (param -> empty .)


state 472

    (27) lCerrada -> DO COMMENT com lCerrada WHILE ( valores . ) ;

    )               shift and go to state 507


state 473

    (15) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . { g }
    (18) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . COMMENT com lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (148) varAsig -> . varYVals MULEQ valores
    (149) varAsig -> . varYVals DIVEQ valores
    (150) varAsig -> . varYVals MASEQ valores
    (151) varAsig -> . varYVals MENOSEQ valores
    (152) varAsig -> . varYVals = valores
    (153) varAsig -> . ID . ID = valores
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 503
    COMMENT         shift and go to state 500
    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 501
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 39

state 474

    (14) lCerrada -> IF ( cosaBooleana ) { g . } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g . } ELSE lCerrada

    }               shift and go to state 508


state 475

    (26) lCerrada -> DO lCerrada WHILE ( valores ) ; .

    ELSE            reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    COMMENT         reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    IF              reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    DO              reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    WHILE           reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    FOR             reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    RETURN          reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    ;               reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    MENOSMENOS      reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    MASMAS          reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    ID              reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    PRINT           reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    MULTIESCALAR    reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    LENGTH          reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    CAPITALIZAR     reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    COLINEALES      reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    [               reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    $end            reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    }               reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)


state 476

    (25) lCerrada -> DO { g } WHILE ( valores . ) ;

    )               shift and go to state 509


state 477

    (39) tercerParam -> func .

    )               reduce using rule 39 (tercerParam -> func .)


state 478

    (34) loop -> FOR ( primParam ; valores ; tercerParam . )

    )               shift and go to state 510


state 479

    (38) tercerParam -> varAsig .

    )               reduce using rule 38 (tercerParam -> varAsig .)


state 480

    (40) tercerParam -> empty .

    )               reduce using rule 40 (tercerParam -> empty .)


state 481

    (37) tercerParam -> varsOps .

    )               reduce using rule 37 (tercerParam -> varsOps .)


state 482

    (131) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (103) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (133) valoresTernarioBool -> . BOOL
    (134) valoresTernarioBool -> . funcBool
    (135) valoresTernarioBool -> . ternarioBool
    (136) valoresTernarioBool -> . ( ternarioBool )
    (137) valoresTernarioBool -> . expBool
    (113) valoresTernarioVars -> . reg
    (114) valoresTernarioVars -> . vec
    (115) valoresTernarioVars -> . ternarioVars
    (116) valoresTernarioVars -> . ( ternarioVars )
    (117) valoresTernarioVars -> . atributos
    (118) valoresTernarioVars -> . varsOps
    (119) valoresTernarioVars -> . varYVals
    (120) valoresTernarioVars -> . res
    (124) valoresTernarioMat -> . INT
    (125) valoresTernarioMat -> . FLOAT
    (126) valoresTernarioMat -> . funcInt
    (127) valoresTernarioMat -> . STRING
    (128) valoresTernarioMat -> . eMat
    (129) valoresTernarioMat -> . ternarioMat
    (130) valoresTernarioMat -> . ( ternarioMat )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (141) reg -> . { campos }
    (56) vec -> . [ elem ]
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (121) res -> . RES
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    BOOL            shift and go to state 297
    (               shift and go to state 514
    INT             shift and go to state 295
    FLOAT           shift and go to state 296
    STRING          shift and go to state 292
    COLINEALES      shift and go to state 4
    {               shift and go to state 99
    [               shift and go to state 20
    ID              shift and go to state 178
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 282
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 281
    funcInt                        shift and go to state 283
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 511
    eMat                           shift and go to state 285
    tCompareEQ                     shift and go to state 73
    valoresTernarioBool            shift and go to state 286
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 287
    vec                            shift and go to state 288
    paren                          shift and go to state 86
    reg                            shift and go to state 290
    valoresTernarioVars            shift and go to state 291
    expBool                        shift and go to state 512
    ternarioBool                   shift and go to state 293
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    valoresTernarioMat             shift and go to state 513
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 432
    res                            shift and go to state 280
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 300
    varYVals                       shift and go to state 433
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 302

state 483

    (132) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (133) valoresTernarioBool -> . BOOL
    (134) valoresTernarioBool -> . funcBool
    (135) valoresTernarioBool -> . ternarioBool
    (136) valoresTernarioBool -> . ( ternarioBool )
    (137) valoresTernarioBool -> . expBool
    (113) valoresTernarioVars -> . reg
    (114) valoresTernarioVars -> . vec
    (115) valoresTernarioVars -> . ternarioVars
    (116) valoresTernarioVars -> . ( ternarioVars )
    (117) valoresTernarioVars -> . atributos
    (118) valoresTernarioVars -> . varsOps
    (119) valoresTernarioVars -> . varYVals
    (120) valoresTernarioVars -> . res
    (124) valoresTernarioMat -> . INT
    (125) valoresTernarioMat -> . FLOAT
    (126) valoresTernarioMat -> . funcInt
    (127) valoresTernarioMat -> . STRING
    (128) valoresTernarioMat -> . eMat
    (129) valoresTernarioMat -> . ternarioMat
    (130) valoresTernarioMat -> . ( ternarioMat )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (141) reg -> . { campos }
    (56) vec -> . [ elem ]
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (121) res -> . RES
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    BOOL            shift and go to state 297
    (               shift and go to state 514
    INT             shift and go to state 295
    FLOAT           shift and go to state 296
    STRING          shift and go to state 292
    COLINEALES      shift and go to state 4
    {               shift and go to state 99
    [               shift and go to state 20
    ID              shift and go to state 178
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 282
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 281
    funcInt                        shift and go to state 283
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 511
    eMat                           shift and go to state 285
    tCompareEQ                     shift and go to state 73
    valoresTernarioBool            shift and go to state 332
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 287
    vec                            shift and go to state 288
    paren                          shift and go to state 86
    reg                            shift and go to state 290
    valoresTernarioVars            shift and go to state 333
    expBool                        shift and go to state 512
    ternarioBool                   shift and go to state 293
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    valoresTernarioMat             shift and go to state 515
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 432
    res                            shift and go to state 280
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 300
    varYVals                       shift and go to state 433
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 302

state 484

    (131) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (122) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (204) expBool -> valoresBool . OR and
    (206) expBool -> valoresBool . OR valoresBool
    (209) and -> valoresBool . AND eq
    (211) and -> valoresBool . AND valoresBool

    ?               shift and go to state 516
    OR              shift and go to state 161
    AND             shift and go to state 160


state 485

    (246) parenBool -> ( expBool . )
    (132) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (123) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (203) expBool -> expBool . OR and
    (205) expBool -> expBool . OR valoresBool

    )               shift and go to state 319
    ?               shift and go to state 517
    OR              shift and go to state 198


state 486

    (103) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (122) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (113) valoresTernarioVars -> . reg
    (114) valoresTernarioVars -> . vec
    (115) valoresTernarioVars -> . ternarioVars
    (116) valoresTernarioVars -> . ( ternarioVars )
    (117) valoresTernarioVars -> . atributos
    (118) valoresTernarioVars -> . varsOps
    (119) valoresTernarioVars -> . varYVals
    (120) valoresTernarioVars -> . res
    (124) valoresTernarioMat -> . INT
    (125) valoresTernarioMat -> . FLOAT
    (126) valoresTernarioMat -> . funcInt
    (127) valoresTernarioMat -> . STRING
    (128) valoresTernarioMat -> . eMat
    (129) valoresTernarioMat -> . ternarioMat
    (130) valoresTernarioMat -> . ( ternarioMat )
    (133) valoresTernarioBool -> . BOOL
    (134) valoresTernarioBool -> . funcBool
    (135) valoresTernarioBool -> . ternarioBool
    (136) valoresTernarioBool -> . ( ternarioBool )
    (137) valoresTernarioBool -> . expBool
    (141) reg -> . { campos }
    (56) vec -> . [ elem ]
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (121) res -> . RES
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    (               shift and go to state 430
    INT             shift and go to state 295
    FLOAT           shift and go to state 296
    STRING          shift and go to state 292
    BOOL            shift and go to state 297
    {               shift and go to state 99
    [               shift and go to state 20
    ID              shift and go to state 178
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 282
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    atributos                      shift and go to state 302
    funcBool                       shift and go to state 281
    funcInt                        shift and go to state 283
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 285
    tCompareEQ                     shift and go to state 73
    valoresTernarioBool            shift and go to state 518
    valoresBool                    shift and go to state 426
    ternarioMat                    shift and go to state 287
    vec                            shift and go to state 288
    paren                          shift and go to state 86
    reg                            shift and go to state 290
    valoresTernarioVars            shift and go to state 291
    exp                            shift and go to state 98
    ternarioBool                   shift and go to state 293
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    valoresTernarioMat             shift and go to state 519
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 432
    res                            shift and go to state 280
    ternarioVars                   shift and go to state 300
    varYVals                       shift and go to state 433
    parenBool                      shift and go to state 84
    expBool                        shift and go to state 431

state 487

    (246) parenBool -> ( expBool . )
    (108) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (123) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (132) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> expBool . OR and
    (205) expBool -> expBool . OR valoresBool

    )               shift and go to state 319
    ?               shift and go to state 488
    OR              shift and go to state 198


state 488

    (108) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (123) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (132) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (113) valoresTernarioVars -> . reg
    (114) valoresTernarioVars -> . vec
    (115) valoresTernarioVars -> . ternarioVars
    (116) valoresTernarioVars -> . ( ternarioVars )
    (117) valoresTernarioVars -> . atributos
    (118) valoresTernarioVars -> . varsOps
    (119) valoresTernarioVars -> . varYVals
    (120) valoresTernarioVars -> . res
    (124) valoresTernarioMat -> . INT
    (125) valoresTernarioMat -> . FLOAT
    (126) valoresTernarioMat -> . funcInt
    (127) valoresTernarioMat -> . STRING
    (128) valoresTernarioMat -> . eMat
    (129) valoresTernarioMat -> . ternarioMat
    (130) valoresTernarioMat -> . ( ternarioMat )
    (133) valoresTernarioBool -> . BOOL
    (134) valoresTernarioBool -> . funcBool
    (135) valoresTernarioBool -> . ternarioBool
    (136) valoresTernarioBool -> . ( ternarioBool )
    (137) valoresTernarioBool -> . expBool
    (141) reg -> . { campos }
    (56) vec -> . [ elem ]
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (121) res -> . RES
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    (               shift and go to state 430
    INT             shift and go to state 295
    FLOAT           shift and go to state 296
    STRING          shift and go to state 292
    BOOL            shift and go to state 297
    {               shift and go to state 99
    [               shift and go to state 20
    ID              shift and go to state 178
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 282
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 281
    funcInt                        shift and go to state 283
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 426
    eMat                           shift and go to state 285
    tCompareEQ                     shift and go to state 73
    valoresTernarioBool            shift and go to state 520
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 287
    vec                            shift and go to state 288
    paren                          shift and go to state 86
    reg                            shift and go to state 290
    valoresTernarioVars            shift and go to state 333
    expBool                        shift and go to state 431
    ternarioBool                   shift and go to state 293
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    valoresTernarioMat             shift and go to state 521
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 432
    res                            shift and go to state 280
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 300
    varYVals                       shift and go to state 433
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 302

state 489

    (122) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (103) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (124) valoresTernarioMat -> . INT
    (125) valoresTernarioMat -> . FLOAT
    (126) valoresTernarioMat -> . funcInt
    (127) valoresTernarioMat -> . STRING
    (128) valoresTernarioMat -> . eMat
    (129) valoresTernarioMat -> . ternarioMat
    (130) valoresTernarioMat -> . ( ternarioMat )
    (113) valoresTernarioVars -> . reg
    (114) valoresTernarioVars -> . vec
    (115) valoresTernarioVars -> . ternarioVars
    (116) valoresTernarioVars -> . ( ternarioVars )
    (117) valoresTernarioVars -> . atributos
    (118) valoresTernarioVars -> . varsOps
    (119) valoresTernarioVars -> . varYVals
    (120) valoresTernarioVars -> . res
    (133) valoresTernarioBool -> . BOOL
    (134) valoresTernarioBool -> . funcBool
    (135) valoresTernarioBool -> . ternarioBool
    (136) valoresTernarioBool -> . ( ternarioBool )
    (137) valoresTernarioBool -> . expBool
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (141) reg -> . { campos }
    (56) vec -> . [ elem ]
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (121) res -> . RES
    (51) funcBool -> . COLINEALES ( valores , valores )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 295
    FLOAT           shift and go to state 296
    STRING          shift and go to state 292
    (               shift and go to state 523
    BOOL            shift and go to state 297
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    {               shift and go to state 99
    [               shift and go to state 20
    ID              shift and go to state 178
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 282
    COLINEALES      shift and go to state 4
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    atributos                      shift and go to state 302
    funcBool                       shift and go to state 281
    funcInt                        shift and go to state 283
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 490
    eMat                           shift and go to state 285
    tCompareEQ                     shift and go to state 73
    valoresTernarioBool            shift and go to state 522
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 287
    vec                            shift and go to state 288
    paren                          shift and go to state 86
    reg                            shift and go to state 290
    valoresTernarioVars            shift and go to state 291
    exp                            shift and go to state 98
    ternarioBool                   shift and go to state 293
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    valoresTernarioMat             shift and go to state 294
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 289
    res                            shift and go to state 280
    ternarioVars                   shift and go to state 300
    varYVals                       shift and go to state 301
    parenBool                      shift and go to state 84
    expBool                        shift and go to state 524

state 490

    (122) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (103) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (131) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (204) expBool -> valoresBool . OR and
    (206) expBool -> valoresBool . OR valoresBool
    (209) and -> valoresBool . AND eq
    (211) and -> valoresBool . AND valoresBool

    ?               shift and go to state 525
    OR              shift and go to state 161
    AND             shift and go to state 160


state 491

    (246) parenBool -> ( expBool . )
    (123) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (108) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (132) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> expBool . OR and
    (205) expBool -> expBool . OR valoresBool

    )               shift and go to state 319
    ?               shift and go to state 526
    OR              shift and go to state 198


state 492

    (123) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (108) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (124) valoresTernarioMat -> . INT
    (125) valoresTernarioMat -> . FLOAT
    (126) valoresTernarioMat -> . funcInt
    (127) valoresTernarioMat -> . STRING
    (128) valoresTernarioMat -> . eMat
    (129) valoresTernarioMat -> . ternarioMat
    (130) valoresTernarioMat -> . ( ternarioMat )
    (113) valoresTernarioVars -> . reg
    (114) valoresTernarioVars -> . vec
    (115) valoresTernarioVars -> . ternarioVars
    (116) valoresTernarioVars -> . ( ternarioVars )
    (117) valoresTernarioVars -> . atributos
    (118) valoresTernarioVars -> . varsOps
    (119) valoresTernarioVars -> . varYVals
    (120) valoresTernarioVars -> . res
    (133) valoresTernarioBool -> . BOOL
    (134) valoresTernarioBool -> . funcBool
    (135) valoresTernarioBool -> . ternarioBool
    (136) valoresTernarioBool -> . ( ternarioBool )
    (137) valoresTernarioBool -> . expBool
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (141) reg -> . { campos }
    (56) vec -> . [ elem ]
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (121) res -> . RES
    (51) funcBool -> . COLINEALES ( valores , valores )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 295
    FLOAT           shift and go to state 296
    STRING          shift and go to state 292
    (               shift and go to state 523
    BOOL            shift and go to state 297
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    {               shift and go to state 99
    [               shift and go to state 20
    ID              shift and go to state 178
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 282
    COLINEALES      shift and go to state 4
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 281
    funcInt                        shift and go to state 283
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 490
    eMat                           shift and go to state 285
    tCompareEQ                     shift and go to state 73
    valoresTernarioBool            shift and go to state 527
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 287
    vec                            shift and go to state 288
    paren                          shift and go to state 86
    reg                            shift and go to state 290
    valoresTernarioVars            shift and go to state 333
    expBool                        shift and go to state 524
    ternarioBool                   shift and go to state 293
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    valoresTernarioMat             shift and go to state 334
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 289
    res                            shift and go to state 280
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 300
    varYVals                       shift and go to state 301
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 302

state 493

    (131) ternarioBool -> valoresBool ? valoresTernarioBool : . valoresTernarioBool
    (133) valoresTernarioBool -> . BOOL
    (134) valoresTernarioBool -> . funcBool
    (135) valoresTernarioBool -> . ternarioBool
    (136) valoresTernarioBool -> . ( ternarioBool )
    (137) valoresTernarioBool -> . expBool
    (51) funcBool -> . COLINEALES ( valores , valores )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (56) vec -> . [ elem ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (246) parenBool -> . ( expBool )
    (141) reg -> . { campos }
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )

    BOOL            shift and go to state 297
    (               shift and go to state 457
    COLINEALES      shift and go to state 4
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    ID              shift and go to state 224
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    INT             shift and go to state 226
    FLOAT           shift and go to state 227
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    STRING          shift and go to state 176
    NOT             shift and go to state 97
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75

    and                            shift and go to state 60
    atributos                      shift and go to state 186
    funcBool                       shift and go to state 281
    funcInt                        shift and go to state 220
    menor                          shift and go to state 66
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 351
    eMat                           shift and go to state 222
    p                              shift and go to state 94
    valoresTernarioBool            shift and go to state 420
    mayor                          shift and go to state 79
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    iSing                          shift and go to state 83
    ternarioBool                   shift and go to state 293
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    tCompareEQ                     shift and go to state 73
    varsOps                        shift and go to state 228
    exp                            shift and go to state 98
    varYVals                       shift and go to state 229
    parenBool                      shift and go to state 84
    expBool                        shift and go to state 458

state 494

    (122) ternarioMat -> valoresBool ? valoresTernarioMat : . valoresTernarioMat
    (124) valoresTernarioMat -> . INT
    (125) valoresTernarioMat -> . FLOAT
    (126) valoresTernarioMat -> . funcInt
    (127) valoresTernarioMat -> . STRING
    (128) valoresTernarioMat -> . eMat
    (129) valoresTernarioMat -> . ternarioMat
    (130) valoresTernarioMat -> . ( ternarioMat )
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (51) funcBool -> . COLINEALES ( valores , valores )
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (56) vec -> . [ elem ]
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 295
    FLOAT           shift and go to state 296
    STRING          shift and go to state 292
    (               shift and go to state 448
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    BOOL            shift and go to state 182
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75
    [               shift and go to state 20
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 283
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 285
    tCompareEQ                     shift and go to state 73
    valoresBool                    shift and go to state 321
    ternarioMat                    shift and go to state 287
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    varsOps                        shift and go to state 174
    exp                            shift and go to state 98
    tCompare                       shift and go to state 85
    valoresTernarioMat             shift and go to state 437
    not                            shift and go to state 87
    expBool                        shift and go to state 325
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    iSing                          shift and go to state 83
    varYVals                       shift and go to state 185
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 186

state 495

    (132) ternarioBool -> expBool ? valoresTernarioBool : . valoresTernarioBool
    (133) valoresTernarioBool -> . BOOL
    (134) valoresTernarioBool -> . funcBool
    (135) valoresTernarioBool -> . ternarioBool
    (136) valoresTernarioBool -> . ( ternarioBool )
    (137) valoresTernarioBool -> . expBool
    (51) funcBool -> . COLINEALES ( valores , valores )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (56) vec -> . [ elem ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (246) parenBool -> . ( expBool )
    (141) reg -> . { campos }
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )

    BOOL            shift and go to state 297
    (               shift and go to state 457
    COLINEALES      shift and go to state 4
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    ID              shift and go to state 224
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    INT             shift and go to state 226
    FLOAT           shift and go to state 227
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    STRING          shift and go to state 176
    NOT             shift and go to state 97
    CAPITALIZAR     shift and go to state 27
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75

    and                            shift and go to state 60
    atributos                      shift and go to state 186
    funcBool                       shift and go to state 281
    funcInt                        shift and go to state 220
    menor                          shift and go to state 66
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 351
    eMat                           shift and go to state 222
    p                              shift and go to state 94
    valoresTernarioBool            shift and go to state 449
    mayor                          shift and go to state 79
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    iSing                          shift and go to state 83
    ternarioBool                   shift and go to state 293
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    tCompareEQ                     shift and go to state 73
    varsOps                        shift and go to state 228
    exp                            shift and go to state 98
    varYVals                       shift and go to state 229
    parenBool                      shift and go to state 84
    expBool                        shift and go to state 458

state 496

    (123) ternarioMat -> expBool ? valoresTernarioMat : . valoresTernarioMat
    (124) valoresTernarioMat -> . INT
    (125) valoresTernarioMat -> . FLOAT
    (126) valoresTernarioMat -> . funcInt
    (127) valoresTernarioMat -> . STRING
    (128) valoresTernarioMat -> . eMat
    (129) valoresTernarioMat -> . ternarioMat
    (130) valoresTernarioMat -> . ( ternarioMat )
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (51) funcBool -> . COLINEALES ( valores , valores )
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (56) vec -> . [ elem ]
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 295
    FLOAT           shift and go to state 296
    STRING          shift and go to state 292
    (               shift and go to state 448
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    BOOL            shift and go to state 182
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75
    [               shift and go to state 20
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 283
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 285
    tCompareEQ                     shift and go to state 73
    valoresBool                    shift and go to state 321
    ternarioMat                    shift and go to state 287
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    varsOps                        shift and go to state 174
    exp                            shift and go to state 98
    tCompare                       shift and go to state 85
    valoresTernarioMat             shift and go to state 454
    not                            shift and go to state 87
    expBool                        shift and go to state 325
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    iSing                          shift and go to state 83
    varYVals                       shift and go to state 185
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 186

state 497

    (142) campos -> ID : valores , campos .

    }               reduce using rule 142 (campos -> ID : valores , campos .)


state 498

    (16) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada . ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada . ELSE lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada . ELSE COMMENT com lCerrada

    ELSE            shift and go to state 528


state 499

    (14) lCerrada -> IF ( cosaBooleana . ) { g } ELSE { g }
    (15) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE { g }
    (16) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana . ) { g } ELSE lCerrada
    (18) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (6) lAbierta -> IF ( cosaBooleana . ) linea
    (7) lAbierta -> IF ( cosaBooleana . ) { g } ELSE lAbierta
    (8) lAbierta -> IF ( cosaBooleana . ) lCerrada ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana . ) { g }

    )               shift and go to state 529


state 500

    (20) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT . com lCerrada
    (12) com -> . COMMENT com
    (13) com -> . empty
    (55) empty -> .

    COMMENT         shift and go to state 115
    IF              reduce using rule 55 (empty -> .)
    DO              reduce using rule 55 (empty -> .)
    RETURN          reduce using rule 55 (empty -> .)
    ;               reduce using rule 55 (empty -> .)
    WHILE           reduce using rule 55 (empty -> .)
    FOR             reduce using rule 55 (empty -> .)
    MENOSMENOS      reduce using rule 55 (empty -> .)
    MASMAS          reduce using rule 55 (empty -> .)
    ID              reduce using rule 55 (empty -> .)
    PRINT           reduce using rule 55 (empty -> .)
    MULTIESCALAR    reduce using rule 55 (empty -> .)
    LENGTH          reduce using rule 55 (empty -> .)
    CAPITALIZAR     reduce using rule 55 (empty -> .)
    COLINEALES      reduce using rule 55 (empty -> .)
    [               reduce using rule 55 (empty -> .)

    com                            shift and go to state 530
    empty                          shift and go to state 117

state 501

    (18) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .

    ELSE            reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    COMMENT         reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    IF              reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    DO              reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    WHILE           reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    FOR             reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    RETURN          reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    ;               reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    MENOSMENOS      reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    MASMAS          reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    ID              reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    PRINT           reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    MULTIESCALAR    reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    LENGTH          reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    CAPITALIZAR     reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    COLINEALES      reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    [               reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    $end            reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    }               reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)


state 502

    (8) lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .

    COMMENT         reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    IF              reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    DO              reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    WHILE           reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    FOR             reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    RETURN          reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    ;               reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    MENOSMENOS      reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    MASMAS          reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    ID              reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    PRINT           reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    MULTIESCALAR    reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    LENGTH          reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    CAPITALIZAR     reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    COLINEALES      reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    [               reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    $end            reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    }               reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)


state 503

    (15) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { . g }
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (55) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (148) varAsig -> . varYVals MULEQ valores
    (149) varAsig -> . varYVals DIVEQ valores
    (150) varAsig -> . varYVals MASEQ valores
    (151) varAsig -> . varYVals MENOSEQ valores
    (152) varAsig -> . varYVals = valores
    (153) varAsig -> . ID . ID = valores
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 55 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 13
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 531
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 30
    loop                           shift and go to state 32
    varYVals                       shift and go to state 11
    linea                          shift and go to state 34

state 504

    (7) lAbierta -> IF ( cosaBooleana ) { g } . ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) { g } .
    (14) lCerrada -> IF ( cosaBooleana ) { g } . ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g } . ELSE lCerrada

    ELSE            shift and go to state 532
    COMMENT         reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    IF              reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    DO              reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    WHILE           reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    FOR             reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    RETURN          reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    ;               reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MENOSMENOS      reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MASMAS          reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    ID              reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    PRINT           reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MULTIESCALAR    reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    LENGTH          reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    CAPITALIZAR     reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    COLINEALES      reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    [               reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    $end            reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    }               reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)


state 505

    (48) funcInt -> MULTIESCALAR ( valores , valores param ) .

    ;               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ,               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ]               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    )               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    :               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    }               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    +               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    -               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    *               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    /               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    %               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ^               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    EQEQ            reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    DISTINTO        reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    >               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    <               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    AND             reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    OR              reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ?               reduce using rule 48 (funcInt -> MULTIESCALAR ( valores , valores param ) .)


state 506

    (53) param -> , valores .

    )               reduce using rule 53 (param -> , valores .)


state 507

    (27) lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) . ;

    ;               shift and go to state 533


state 508

    (14) lCerrada -> IF ( cosaBooleana ) { g } . ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g } . ELSE lCerrada

    ELSE            shift and go to state 534


state 509

    (25) lCerrada -> DO { g } WHILE ( valores ) . ;

    ;               shift and go to state 535


state 510

    (34) loop -> FOR ( primParam ; valores ; tercerParam ) .

    {               reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    COMMENT         reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    IF              reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    DO              reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    RETURN          reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    ;               reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    WHILE           reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    FOR             reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    MENOSMENOS      reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    MASMAS          reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    ID              reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    PRINT           reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    MULTIESCALAR    reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    LENGTH          reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    CAPITALIZAR     reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    COLINEALES      reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    [               reduce using rule 34 (loop -> FOR ( primParam ; valores ; tercerParam ) .)


state 511

    (131) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (204) expBool -> valoresBool . OR and
    (206) expBool -> valoresBool . OR valoresBool
    (103) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (122) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (209) and -> valoresBool . AND eq
    (211) and -> valoresBool . AND valoresBool

    ?               shift and go to state 516
    OR              shift and go to state 161
    AND             shift and go to state 160


state 512

    (137) valoresTernarioBool -> expBool .
    (132) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> expBool . OR and
    (205) expBool -> expBool . OR valoresBool
    (108) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (123) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat

    :               reduce using rule 137 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 517
    OR              shift and go to state 198


state 513

    (105) ternarioVars -> valoresBool ? valoresTernarioMat . : valoresTernarioVars

    :               shift and go to state 536


state 514

    (136) valoresTernarioBool -> ( . ternarioBool )
    (116) valoresTernarioVars -> ( . ternarioVars )
    (130) valoresTernarioMat -> ( . ternarioMat )
    (201) valoresBool -> ( . ternarioBool )
    (162) valoresMat -> ( . ternarioMat )
    (230) tCompareEQ -> ( . ternarioBool )
    (231) tCompareEQ -> ( . ternarioMat )
    (238) tCompare -> ( . ternarioMat )
    (195) paren -> ( . eMat )
    (196) paren -> ( . valoresMat )
    (246) parenBool -> ( . expBool )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (56) vec -> . [ elem ]
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 180
    FLOAT           shift and go to state 181
    STRING          shift and go to state 176
    (               shift and go to state 172
    BOOL            shift and go to state 182
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75
    [               shift and go to state 20
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 168
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 169
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 484
    eMat                           shift and go to state 171
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 382
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    exp                            shift and go to state 98
    ternarioBool                   shift and go to state 383
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    expBool                        shift and go to state 485
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 174
    ternarioVars                   shift and go to state 384
    varYVals                       shift and go to state 185
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 186

state 515

    (110) ternarioVars -> expBool ? valoresTernarioMat . : valoresTernarioVars

    :               shift and go to state 537


state 516

    (131) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (103) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (122) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (133) valoresTernarioBool -> . BOOL
    (134) valoresTernarioBool -> . funcBool
    (135) valoresTernarioBool -> . ternarioBool
    (136) valoresTernarioBool -> . ( ternarioBool )
    (137) valoresTernarioBool -> . expBool
    (113) valoresTernarioVars -> . reg
    (114) valoresTernarioVars -> . vec
    (115) valoresTernarioVars -> . ternarioVars
    (116) valoresTernarioVars -> . ( ternarioVars )
    (117) valoresTernarioVars -> . atributos
    (118) valoresTernarioVars -> . varsOps
    (119) valoresTernarioVars -> . varYVals
    (120) valoresTernarioVars -> . res
    (124) valoresTernarioMat -> . INT
    (125) valoresTernarioMat -> . FLOAT
    (126) valoresTernarioMat -> . funcInt
    (127) valoresTernarioMat -> . STRING
    (128) valoresTernarioMat -> . eMat
    (129) valoresTernarioMat -> . ternarioMat
    (130) valoresTernarioMat -> . ( ternarioMat )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (141) reg -> . { campos }
    (56) vec -> . [ elem ]
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (121) res -> . RES
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    BOOL            shift and go to state 297
    (               shift and go to state 514
    INT             shift and go to state 295
    FLOAT           shift and go to state 296
    STRING          shift and go to state 292
    COLINEALES      shift and go to state 4
    {               shift and go to state 99
    [               shift and go to state 20
    ID              shift and go to state 178
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 282
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 281
    funcInt                        shift and go to state 283
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 511
    eMat                           shift and go to state 285
    tCompareEQ                     shift and go to state 73
    valoresTernarioBool            shift and go to state 286
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 287
    vec                            shift and go to state 288
    paren                          shift and go to state 86
    reg                            shift and go to state 290
    valoresTernarioVars            shift and go to state 291
    expBool                        shift and go to state 512
    ternarioBool                   shift and go to state 293
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    valoresTernarioMat             shift and go to state 519
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 432
    res                            shift and go to state 280
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 300
    varYVals                       shift and go to state 433
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 302

state 517

    (132) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (108) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (123) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (133) valoresTernarioBool -> . BOOL
    (134) valoresTernarioBool -> . funcBool
    (135) valoresTernarioBool -> . ternarioBool
    (136) valoresTernarioBool -> . ( ternarioBool )
    (137) valoresTernarioBool -> . expBool
    (113) valoresTernarioVars -> . reg
    (114) valoresTernarioVars -> . vec
    (115) valoresTernarioVars -> . ternarioVars
    (116) valoresTernarioVars -> . ( ternarioVars )
    (117) valoresTernarioVars -> . atributos
    (118) valoresTernarioVars -> . varsOps
    (119) valoresTernarioVars -> . varYVals
    (120) valoresTernarioVars -> . res
    (124) valoresTernarioMat -> . INT
    (125) valoresTernarioMat -> . FLOAT
    (126) valoresTernarioMat -> . funcInt
    (127) valoresTernarioMat -> . STRING
    (128) valoresTernarioMat -> . eMat
    (129) valoresTernarioMat -> . ternarioMat
    (130) valoresTernarioMat -> . ( ternarioMat )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (141) reg -> . { campos }
    (56) vec -> . [ elem ]
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (121) res -> . RES
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    BOOL            shift and go to state 297
    (               shift and go to state 514
    INT             shift and go to state 295
    FLOAT           shift and go to state 296
    STRING          shift and go to state 292
    COLINEALES      shift and go to state 4
    {               shift and go to state 99
    [               shift and go to state 20
    ID              shift and go to state 178
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 282
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 281
    funcInt                        shift and go to state 283
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 511
    eMat                           shift and go to state 285
    tCompareEQ                     shift and go to state 73
    valoresTernarioBool            shift and go to state 332
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 287
    vec                            shift and go to state 288
    paren                          shift and go to state 86
    reg                            shift and go to state 290
    valoresTernarioVars            shift and go to state 333
    expBool                        shift and go to state 512
    ternarioBool                   shift and go to state 293
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    valoresTernarioMat             shift and go to state 521
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 432
    res                            shift and go to state 280
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 300
    varYVals                       shift and go to state 433
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 302

state 518

    (107) ternarioVars -> valoresBool ? valoresTernarioBool . : valoresTernarioVars
    (131) ternarioBool -> valoresBool ? valoresTernarioBool . : valoresTernarioBool

    :               shift and go to state 538


state 519

    (105) ternarioVars -> valoresBool ? valoresTernarioMat . : valoresTernarioVars
    (122) ternarioMat -> valoresBool ? valoresTernarioMat . : valoresTernarioMat

    :               shift and go to state 539


state 520

    (112) ternarioVars -> expBool ? valoresTernarioBool . : valoresTernarioVars
    (132) ternarioBool -> expBool ? valoresTernarioBool . : valoresTernarioBool

    :               shift and go to state 540


state 521

    (110) ternarioVars -> expBool ? valoresTernarioMat . : valoresTernarioVars
    (123) ternarioMat -> expBool ? valoresTernarioMat . : valoresTernarioMat

    :               shift and go to state 541


state 522

    (107) ternarioVars -> valoresBool ? valoresTernarioBool . : valoresTernarioVars

    :               shift and go to state 542


state 523

    (130) valoresTernarioMat -> ( . ternarioMat )
    (116) valoresTernarioVars -> ( . ternarioVars )
    (136) valoresTernarioBool -> ( . ternarioBool )
    (162) valoresMat -> ( . ternarioMat )
    (201) valoresBool -> ( . ternarioBool )
    (230) tCompareEQ -> ( . ternarioBool )
    (231) tCompareEQ -> ( . ternarioMat )
    (195) paren -> ( . eMat )
    (196) paren -> ( . valoresMat )
    (238) tCompare -> ( . ternarioMat )
    (246) parenBool -> ( . expBool )
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (56) vec -> . [ elem ]
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 180
    FLOAT           shift and go to state 181
    STRING          shift and go to state 176
    (               shift and go to state 172
    BOOL            shift and go to state 182
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75
    [               shift and go to state 20
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 168
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 169
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 490
    eMat                           shift and go to state 171
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 382
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    exp                            shift and go to state 98
    ternarioBool                   shift and go to state 383
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    expBool                        shift and go to state 491
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 174
    ternarioVars                   shift and go to state 384
    varYVals                       shift and go to state 185
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 186

state 524

    (137) valoresTernarioBool -> expBool .
    (123) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (108) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (132) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> expBool . OR and
    (205) expBool -> expBool . OR valoresBool

    :               reduce using rule 137 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 526
    OR              shift and go to state 198


state 525

    (122) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (103) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (131) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (124) valoresTernarioMat -> . INT
    (125) valoresTernarioMat -> . FLOAT
    (126) valoresTernarioMat -> . funcInt
    (127) valoresTernarioMat -> . STRING
    (128) valoresTernarioMat -> . eMat
    (129) valoresTernarioMat -> . ternarioMat
    (130) valoresTernarioMat -> . ( ternarioMat )
    (113) valoresTernarioVars -> . reg
    (114) valoresTernarioVars -> . vec
    (115) valoresTernarioVars -> . ternarioVars
    (116) valoresTernarioVars -> . ( ternarioVars )
    (117) valoresTernarioVars -> . atributos
    (118) valoresTernarioVars -> . varsOps
    (119) valoresTernarioVars -> . varYVals
    (120) valoresTernarioVars -> . res
    (133) valoresTernarioBool -> . BOOL
    (134) valoresTernarioBool -> . funcBool
    (135) valoresTernarioBool -> . ternarioBool
    (136) valoresTernarioBool -> . ( ternarioBool )
    (137) valoresTernarioBool -> . expBool
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (141) reg -> . { campos }
    (56) vec -> . [ elem ]
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (121) res -> . RES
    (51) funcBool -> . COLINEALES ( valores , valores )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 295
    FLOAT           shift and go to state 296
    STRING          shift and go to state 292
    (               shift and go to state 523
    BOOL            shift and go to state 297
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    {               shift and go to state 99
    [               shift and go to state 20
    ID              shift and go to state 178
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 282
    COLINEALES      shift and go to state 4
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    atributos                      shift and go to state 302
    funcBool                       shift and go to state 281
    funcInt                        shift and go to state 283
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 490
    eMat                           shift and go to state 285
    tCompareEQ                     shift and go to state 73
    valoresTernarioBool            shift and go to state 518
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 287
    vec                            shift and go to state 288
    paren                          shift and go to state 86
    reg                            shift and go to state 290
    valoresTernarioVars            shift and go to state 291
    exp                            shift and go to state 98
    ternarioBool                   shift and go to state 293
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    valoresTernarioMat             shift and go to state 294
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 289
    res                            shift and go to state 280
    ternarioVars                   shift and go to state 300
    varYVals                       shift and go to state 301
    parenBool                      shift and go to state 84
    expBool                        shift and go to state 524

state 526

    (123) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (108) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (132) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (124) valoresTernarioMat -> . INT
    (125) valoresTernarioMat -> . FLOAT
    (126) valoresTernarioMat -> . funcInt
    (127) valoresTernarioMat -> . STRING
    (128) valoresTernarioMat -> . eMat
    (129) valoresTernarioMat -> . ternarioMat
    (130) valoresTernarioMat -> . ( ternarioMat )
    (113) valoresTernarioVars -> . reg
    (114) valoresTernarioVars -> . vec
    (115) valoresTernarioVars -> . ternarioVars
    (116) valoresTernarioVars -> . ( ternarioVars )
    (117) valoresTernarioVars -> . atributos
    (118) valoresTernarioVars -> . varsOps
    (119) valoresTernarioVars -> . varYVals
    (120) valoresTernarioVars -> . res
    (133) valoresTernarioBool -> . BOOL
    (134) valoresTernarioBool -> . funcBool
    (135) valoresTernarioBool -> . ternarioBool
    (136) valoresTernarioBool -> . ( ternarioBool )
    (137) valoresTernarioBool -> . expBool
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (141) reg -> . { campos }
    (56) vec -> . [ elem ]
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (121) res -> . RES
    (51) funcBool -> . COLINEALES ( valores , valores )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 295
    FLOAT           shift and go to state 296
    STRING          shift and go to state 292
    (               shift and go to state 523
    BOOL            shift and go to state 297
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    {               shift and go to state 99
    [               shift and go to state 20
    ID              shift and go to state 178
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 282
    COLINEALES      shift and go to state 4
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 281
    funcInt                        shift and go to state 283
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 490
    eMat                           shift and go to state 285
    tCompareEQ                     shift and go to state 73
    valoresTernarioBool            shift and go to state 520
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 287
    vec                            shift and go to state 288
    paren                          shift and go to state 86
    reg                            shift and go to state 290
    valoresTernarioVars            shift and go to state 333
    expBool                        shift and go to state 524
    ternarioBool                   shift and go to state 293
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    valoresTernarioMat             shift and go to state 334
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 289
    res                            shift and go to state 280
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 300
    varYVals                       shift and go to state 301
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 302

state 527

    (112) ternarioVars -> expBool ? valoresTernarioBool . : valoresTernarioVars

    :               shift and go to state 543


state 528

    (16) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE . { g }
    (19) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE . lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE . COMMENT com lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (148) varAsig -> . varYVals MULEQ valores
    (149) varAsig -> . varYVals DIVEQ valores
    (150) varAsig -> . varYVals MASEQ valores
    (151) varAsig -> . varYVals MENOSEQ valores
    (152) varAsig -> . varYVals = valores
    (153) varAsig -> . ID . ID = valores
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 546
    COMMENT         shift and go to state 544
    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 545
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 39

state 529

    (14) lCerrada -> IF ( cosaBooleana ) . { g } ELSE { g }
    (15) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE { g }
    (16) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) . { g } ELSE lCerrada
    (18) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE COMMENT com lCerrada
    (6) lAbierta -> IF ( cosaBooleana ) . linea
    (7) lAbierta -> IF ( cosaBooleana ) . { g } ELSE lAbierta
    (8) lAbierta -> IF ( cosaBooleana ) . lCerrada ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) . { g }
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (148) varAsig -> . varYVals MULEQ valores
    (149) varAsig -> . varYVals DIVEQ valores
    (150) varAsig -> . varYVals MASEQ valores
    (151) varAsig -> . varYVals MENOSEQ valores
    (152) varAsig -> . varYVals = valores
    (153) varAsig -> . ID . ID = valores
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 548
    COMMENT         shift and go to state 405
    IF              shift and go to state 406
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 547
    lAbierta                       shift and go to state 30
    linea                          shift and go to state 404
    varYVals                       shift and go to state 11
    loop                           shift and go to state 409

state 530

    (20) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com . lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (148) varAsig -> . varYVals MULEQ valores
    (149) varAsig -> . varYVals DIVEQ valores
    (150) varAsig -> . varYVals MASEQ valores
    (151) varAsig -> . varYVals MENOSEQ valores
    (152) varAsig -> . varYVals = valores
    (153) varAsig -> . ID . ID = valores
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 549
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 39

state 531

    (15) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g . }

    }               shift and go to state 550


state 532

    (7) lAbierta -> IF ( cosaBooleana ) { g } ELSE . lAbierta
    (14) lCerrada -> IF ( cosaBooleana ) { g } ELSE . { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g } ELSE . lCerrada
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (148) varAsig -> . varYVals MULEQ valores
    (149) varAsig -> . varYVals DIVEQ valores
    (150) varAsig -> . varYVals MASEQ valores
    (151) varAsig -> . varYVals MENOSEQ valores
    (152) varAsig -> . varYVals = valores
    (153) varAsig -> . ID . ID = valores
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 553
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 551
    lAbierta                       shift and go to state 552
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 32

state 533

    (27) lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .

    ELSE            reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    COMMENT         reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    IF              reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    DO              reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    WHILE           reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    FOR             reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    RETURN          reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    ;               reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    MENOSMENOS      reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    MASMAS          reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    ID              reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    PRINT           reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    MULTIESCALAR    reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    LENGTH          reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    CAPITALIZAR     reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    COLINEALES      reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    [               reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    $end            reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)
    }               reduce using rule 27 (lCerrada -> DO COMMENT com lCerrada WHILE ( valores ) ; .)


state 534

    (14) lCerrada -> IF ( cosaBooleana ) { g } ELSE . { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g } ELSE . lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (148) varAsig -> . varYVals MULEQ valores
    (149) varAsig -> . varYVals DIVEQ valores
    (150) varAsig -> . varYVals MASEQ valores
    (151) varAsig -> . varYVals MENOSEQ valores
    (152) varAsig -> . varYVals = valores
    (153) varAsig -> . ID . ID = valores
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 553
    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 551
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 39

state 535

    (25) lCerrada -> DO { g } WHILE ( valores ) ; .

    ELSE            reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    COMMENT         reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    IF              reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    DO              reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    WHILE           reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    FOR             reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    RETURN          reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    ;               reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    MENOSMENOS      reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    MASMAS          reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    ID              reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    PRINT           reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    MULTIESCALAR    reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    LENGTH          reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    CAPITALIZAR     reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    COLINEALES      reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    [               reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    $end            reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    }               reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)


state 536

    (105) ternarioVars -> valoresBool ? valoresTernarioMat : . valoresTernarioVars
    (113) valoresTernarioVars -> . reg
    (114) valoresTernarioVars -> . vec
    (115) valoresTernarioVars -> . ternarioVars
    (116) valoresTernarioVars -> . ( ternarioVars )
    (117) valoresTernarioVars -> . atributos
    (118) valoresTernarioVars -> . varsOps
    (119) valoresTernarioVars -> . varYVals
    (120) valoresTernarioVars -> . res
    (141) reg -> . { campos }
    (56) vec -> . [ elem ]
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (121) res -> . RES
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (51) funcBool -> . COLINEALES ( valores , valores )
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (246) parenBool -> . ( expBool )
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )

    (               shift and go to state 556
    {               shift and go to state 99
    [               shift and go to state 20
    ID              shift and go to state 178
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 282
    BOOL            shift and go to state 182
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    INT             shift and go to state 226
    FLOAT           shift and go to state 227
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    STRING          shift and go to state 176
    NOT             shift and go to state 97
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 76
    +               shift and go to state 75

    and                            shift and go to state 60
    atributos                      shift and go to state 302
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 220
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 554
    eMat                           shift and go to state 222
    p                              shift and go to state 94
    res                            shift and go to state 280
    vecVal                         shift and go to state 8
    vec                            shift and go to state 288
    paren                          shift and go to state 86
    reg                            shift and go to state 290
    valoresTernarioVars            shift and go to state 436
    exp                            shift and go to state 98
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    tCompareEQ                     shift and go to state 73
    varsOps                        shift and go to state 424
    ternarioVars                   shift and go to state 300
    varYVals                       shift and go to state 425
    parenBool                      shift and go to state 84
    expBool                        shift and go to state 555

state 537

    (110) ternarioVars -> expBool ? valoresTernarioMat : . valoresTernarioVars
    (113) valoresTernarioVars -> . reg
    (114) valoresTernarioVars -> . vec
    (115) valoresTernarioVars -> . ternarioVars
    (116) valoresTernarioVars -> . ( ternarioVars )
    (117) valoresTernarioVars -> . atributos
    (118) valoresTernarioVars -> . varsOps
    (119) valoresTernarioVars -> . varYVals
    (120) valoresTernarioVars -> . res
    (141) reg -> . { campos }
    (56) vec -> . [ elem ]
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (121) res -> . RES
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (51) funcBool -> . COLINEALES ( valores , valores )
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (246) parenBool -> . ( expBool )
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )

    (               shift and go to state 556
    {               shift and go to state 99
    [               shift and go to state 20
    ID              shift and go to state 178
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 282
    BOOL            shift and go to state 182
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    INT             shift and go to state 226
    FLOAT           shift and go to state 227
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    STRING          shift and go to state 176
    NOT             shift and go to state 97
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 76
    +               shift and go to state 75

    and                            shift and go to state 60
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 220
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 554
    eMat                           shift and go to state 222
    p                              shift and go to state 94
    vecVal                         shift and go to state 8
    vec                            shift and go to state 288
    paren                          shift and go to state 86
    reg                            shift and go to state 290
    valoresTernarioVars            shift and go to state 455
    expBool                        shift and go to state 555
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    tCompareEQ                     shift and go to state 73
    varsOps                        shift and go to state 424
    res                            shift and go to state 280
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 300
    varYVals                       shift and go to state 425
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 302

state 538

    (107) ternarioVars -> valoresBool ? valoresTernarioBool : . valoresTernarioVars
    (131) ternarioBool -> valoresBool ? valoresTernarioBool : . valoresTernarioBool
    (113) valoresTernarioVars -> . reg
    (114) valoresTernarioVars -> . vec
    (115) valoresTernarioVars -> . ternarioVars
    (116) valoresTernarioVars -> . ( ternarioVars )
    (117) valoresTernarioVars -> . atributos
    (118) valoresTernarioVars -> . varsOps
    (119) valoresTernarioVars -> . varYVals
    (120) valoresTernarioVars -> . res
    (133) valoresTernarioBool -> . BOOL
    (134) valoresTernarioBool -> . funcBool
    (135) valoresTernarioBool -> . ternarioBool
    (136) valoresTernarioBool -> . ( ternarioBool )
    (137) valoresTernarioBool -> . expBool
    (141) reg -> . { campos }
    (56) vec -> . [ elem ]
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (121) res -> . RES
    (51) funcBool -> . COLINEALES ( valores , valores )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (246) parenBool -> . ( expBool )
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )

    (               shift and go to state 559
    BOOL            shift and go to state 297
    {               shift and go to state 99
    [               shift and go to state 20
    ID              shift and go to state 178
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 282
    COLINEALES      shift and go to state 4
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    INT             shift and go to state 226
    FLOAT           shift and go to state 227
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    STRING          shift and go to state 176
    NOT             shift and go to state 97
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 76
    +               shift and go to state 75

    and                            shift and go to state 60
    atributos                      shift and go to state 302
    funcBool                       shift and go to state 281
    funcInt                        shift and go to state 220
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 557
    eMat                           shift and go to state 222
    p                              shift and go to state 94
    valoresTernarioBool            shift and go to state 420
    vecVal                         shift and go to state 8
    vec                            shift and go to state 288
    paren                          shift and go to state 86
    reg                            shift and go to state 290
    valoresTernarioVars            shift and go to state 421
    exp                            shift and go to state 98
    ternarioBool                   shift and go to state 293
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    tCompareEQ                     shift and go to state 73
    varsOps                        shift and go to state 424
    res                            shift and go to state 280
    ternarioVars                   shift and go to state 300
    varYVals                       shift and go to state 425
    parenBool                      shift and go to state 84
    expBool                        shift and go to state 558

state 539

    (105) ternarioVars -> valoresBool ? valoresTernarioMat : . valoresTernarioVars
    (122) ternarioMat -> valoresBool ? valoresTernarioMat : . valoresTernarioMat
    (113) valoresTernarioVars -> . reg
    (114) valoresTernarioVars -> . vec
    (115) valoresTernarioVars -> . ternarioVars
    (116) valoresTernarioVars -> . ( ternarioVars )
    (117) valoresTernarioVars -> . atributos
    (118) valoresTernarioVars -> . varsOps
    (119) valoresTernarioVars -> . varYVals
    (120) valoresTernarioVars -> . res
    (124) valoresTernarioMat -> . INT
    (125) valoresTernarioMat -> . FLOAT
    (126) valoresTernarioMat -> . funcInt
    (127) valoresTernarioMat -> . STRING
    (128) valoresTernarioMat -> . eMat
    (129) valoresTernarioMat -> . ternarioMat
    (130) valoresTernarioMat -> . ( ternarioMat )
    (141) reg -> . { campos }
    (56) vec -> . [ elem ]
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (121) res -> . RES
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (51) funcBool -> . COLINEALES ( valores , valores )
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    (               shift and go to state 561
    INT             shift and go to state 295
    FLOAT           shift and go to state 296
    STRING          shift and go to state 292
    {               shift and go to state 99
    [               shift and go to state 20
    ID              shift and go to state 178
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 282
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    BOOL            shift and go to state 182
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    atributos                      shift and go to state 302
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 283
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 560
    eMat                           shift and go to state 285
    tCompareEQ                     shift and go to state 73
    res                            shift and go to state 280
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 287
    vec                            shift and go to state 288
    paren                          shift and go to state 86
    reg                            shift and go to state 290
    valoresTernarioVars            shift and go to state 436
    exp                            shift and go to state 98
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    valoresTernarioMat             shift and go to state 437
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 432
    ternarioVars                   shift and go to state 300
    varYVals                       shift and go to state 433
    parenBool                      shift and go to state 84
    expBool                        shift and go to state 562

state 540

    (112) ternarioVars -> expBool ? valoresTernarioBool : . valoresTernarioVars
    (132) ternarioBool -> expBool ? valoresTernarioBool : . valoresTernarioBool
    (113) valoresTernarioVars -> . reg
    (114) valoresTernarioVars -> . vec
    (115) valoresTernarioVars -> . ternarioVars
    (116) valoresTernarioVars -> . ( ternarioVars )
    (117) valoresTernarioVars -> . atributos
    (118) valoresTernarioVars -> . varsOps
    (119) valoresTernarioVars -> . varYVals
    (120) valoresTernarioVars -> . res
    (133) valoresTernarioBool -> . BOOL
    (134) valoresTernarioBool -> . funcBool
    (135) valoresTernarioBool -> . ternarioBool
    (136) valoresTernarioBool -> . ( ternarioBool )
    (137) valoresTernarioBool -> . expBool
    (141) reg -> . { campos }
    (56) vec -> . [ elem ]
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (121) res -> . RES
    (51) funcBool -> . COLINEALES ( valores , valores )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (246) parenBool -> . ( expBool )
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )

    (               shift and go to state 559
    BOOL            shift and go to state 297
    {               shift and go to state 99
    [               shift and go to state 20
    ID              shift and go to state 178
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 282
    COLINEALES      shift and go to state 4
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    INT             shift and go to state 226
    FLOAT           shift and go to state 227
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    STRING          shift and go to state 176
    NOT             shift and go to state 97
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 76
    +               shift and go to state 75

    and                            shift and go to state 60
    funcBool                       shift and go to state 281
    funcInt                        shift and go to state 220
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 557
    eMat                           shift and go to state 222
    p                              shift and go to state 94
    valoresTernarioBool            shift and go to state 449
    vecVal                         shift and go to state 8
    vec                            shift and go to state 288
    paren                          shift and go to state 86
    reg                            shift and go to state 290
    valoresTernarioVars            shift and go to state 450
    expBool                        shift and go to state 558
    ternarioBool                   shift and go to state 293
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    tCompareEQ                     shift and go to state 73
    varsOps                        shift and go to state 424
    res                            shift and go to state 280
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 300
    varYVals                       shift and go to state 425
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 302

state 541

    (110) ternarioVars -> expBool ? valoresTernarioMat : . valoresTernarioVars
    (123) ternarioMat -> expBool ? valoresTernarioMat : . valoresTernarioMat
    (113) valoresTernarioVars -> . reg
    (114) valoresTernarioVars -> . vec
    (115) valoresTernarioVars -> . ternarioVars
    (116) valoresTernarioVars -> . ( ternarioVars )
    (117) valoresTernarioVars -> . atributos
    (118) valoresTernarioVars -> . varsOps
    (119) valoresTernarioVars -> . varYVals
    (120) valoresTernarioVars -> . res
    (124) valoresTernarioMat -> . INT
    (125) valoresTernarioMat -> . FLOAT
    (126) valoresTernarioMat -> . funcInt
    (127) valoresTernarioMat -> . STRING
    (128) valoresTernarioMat -> . eMat
    (129) valoresTernarioMat -> . ternarioMat
    (130) valoresTernarioMat -> . ( ternarioMat )
    (141) reg -> . { campos }
    (56) vec -> . [ elem ]
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (121) res -> . RES
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (51) funcBool -> . COLINEALES ( valores , valores )
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    (               shift and go to state 561
    INT             shift and go to state 295
    FLOAT           shift and go to state 296
    STRING          shift and go to state 292
    {               shift and go to state 99
    [               shift and go to state 20
    ID              shift and go to state 178
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 282
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    BOOL            shift and go to state 182
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 283
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 560
    eMat                           shift and go to state 285
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 287
    vec                            shift and go to state 288
    paren                          shift and go to state 86
    reg                            shift and go to state 290
    valoresTernarioVars            shift and go to state 455
    expBool                        shift and go to state 562
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    valoresTernarioMat             shift and go to state 454
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 432
    res                            shift and go to state 280
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 300
    varYVals                       shift and go to state 433
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 302

state 542

    (107) ternarioVars -> valoresBool ? valoresTernarioBool : . valoresTernarioVars
    (113) valoresTernarioVars -> . reg
    (114) valoresTernarioVars -> . vec
    (115) valoresTernarioVars -> . ternarioVars
    (116) valoresTernarioVars -> . ( ternarioVars )
    (117) valoresTernarioVars -> . atributos
    (118) valoresTernarioVars -> . varsOps
    (119) valoresTernarioVars -> . varYVals
    (120) valoresTernarioVars -> . res
    (141) reg -> . { campos }
    (56) vec -> . [ elem ]
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (121) res -> . RES
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (51) funcBool -> . COLINEALES ( valores , valores )
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (246) parenBool -> . ( expBool )
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )

    (               shift and go to state 556
    {               shift and go to state 99
    [               shift and go to state 20
    ID              shift and go to state 178
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 282
    BOOL            shift and go to state 182
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    INT             shift and go to state 226
    FLOAT           shift and go to state 227
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    STRING          shift and go to state 176
    NOT             shift and go to state 97
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 76
    +               shift and go to state 75

    and                            shift and go to state 60
    atributos                      shift and go to state 302
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 220
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 554
    eMat                           shift and go to state 222
    p                              shift and go to state 94
    vecVal                         shift and go to state 8
    vec                            shift and go to state 288
    paren                          shift and go to state 86
    reg                            shift and go to state 290
    valoresTernarioVars            shift and go to state 421
    exp                            shift and go to state 98
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    tCompareEQ                     shift and go to state 73
    varsOps                        shift and go to state 424
    res                            shift and go to state 280
    ternarioVars                   shift and go to state 300
    varYVals                       shift and go to state 425
    parenBool                      shift and go to state 84
    expBool                        shift and go to state 555

state 543

    (112) ternarioVars -> expBool ? valoresTernarioBool : . valoresTernarioVars
    (113) valoresTernarioVars -> . reg
    (114) valoresTernarioVars -> . vec
    (115) valoresTernarioVars -> . ternarioVars
    (116) valoresTernarioVars -> . ( ternarioVars )
    (117) valoresTernarioVars -> . atributos
    (118) valoresTernarioVars -> . varsOps
    (119) valoresTernarioVars -> . varYVals
    (120) valoresTernarioVars -> . res
    (141) reg -> . { campos }
    (56) vec -> . [ elem ]
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (121) res -> . RES
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (51) funcBool -> . COLINEALES ( valores , valores )
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (246) parenBool -> . ( expBool )
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )

    (               shift and go to state 556
    {               shift and go to state 99
    [               shift and go to state 20
    ID              shift and go to state 178
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 282
    BOOL            shift and go to state 182
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    INT             shift and go to state 226
    FLOAT           shift and go to state 227
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    STRING          shift and go to state 176
    NOT             shift and go to state 97
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 76
    +               shift and go to state 75

    and                            shift and go to state 60
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 220
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 554
    eMat                           shift and go to state 222
    p                              shift and go to state 94
    vecVal                         shift and go to state 8
    vec                            shift and go to state 288
    paren                          shift and go to state 86
    reg                            shift and go to state 290
    valoresTernarioVars            shift and go to state 450
    expBool                        shift and go to state 555
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    tCompareEQ                     shift and go to state 73
    varsOps                        shift and go to state 424
    res                            shift and go to state 280
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 300
    varYVals                       shift and go to state 425
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 302

state 544

    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT . com lCerrada
    (12) com -> . COMMENT com
    (13) com -> . empty
    (55) empty -> .

    COMMENT         shift and go to state 115
    IF              reduce using rule 55 (empty -> .)
    DO              reduce using rule 55 (empty -> .)
    RETURN          reduce using rule 55 (empty -> .)
    ;               reduce using rule 55 (empty -> .)
    WHILE           reduce using rule 55 (empty -> .)
    FOR             reduce using rule 55 (empty -> .)
    MENOSMENOS      reduce using rule 55 (empty -> .)
    MASMAS          reduce using rule 55 (empty -> .)
    ID              reduce using rule 55 (empty -> .)
    PRINT           reduce using rule 55 (empty -> .)
    MULTIESCALAR    reduce using rule 55 (empty -> .)
    LENGTH          reduce using rule 55 (empty -> .)
    CAPITALIZAR     reduce using rule 55 (empty -> .)
    COLINEALES      reduce using rule 55 (empty -> .)
    [               reduce using rule 55 (empty -> .)

    com                            shift and go to state 563
    empty                          shift and go to state 117

state 545

    (19) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .

    ELSE            reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    COMMENT         reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    IF              reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    DO              reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    WHILE           reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    FOR             reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    RETURN          reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    ;               reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    MENOSMENOS      reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    MASMAS          reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    ID              reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    PRINT           reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    MULTIESCALAR    reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    LENGTH          reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    CAPITALIZAR     reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    COLINEALES      reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    [               reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    $end            reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    }               reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)


state 546

    (16) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { . g }
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (55) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (148) varAsig -> . varYVals MULEQ valores
    (149) varAsig -> . varYVals DIVEQ valores
    (150) varAsig -> . varYVals MASEQ valores
    (151) varAsig -> . varYVals MENOSEQ valores
    (152) varAsig -> . varYVals = valores
    (153) varAsig -> . ID . ID = valores
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 55 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 13
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 564
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 30
    loop                           shift and go to state 32
    varYVals                       shift and go to state 11
    linea                          shift and go to state 34

state 547

    (15) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE { g }
    (18) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE COMMENT com lCerrada
    (8) lAbierta -> IF ( cosaBooleana ) lCerrada . ELSE lAbierta
    (5) linea -> lCerrada .

    ELSE            shift and go to state 565
    COMMENT         reduce using rule 5 (linea -> lCerrada .)
    IF              reduce using rule 5 (linea -> lCerrada .)
    DO              reduce using rule 5 (linea -> lCerrada .)
    WHILE           reduce using rule 5 (linea -> lCerrada .)
    FOR             reduce using rule 5 (linea -> lCerrada .)
    RETURN          reduce using rule 5 (linea -> lCerrada .)
    ;               reduce using rule 5 (linea -> lCerrada .)
    MENOSMENOS      reduce using rule 5 (linea -> lCerrada .)
    MASMAS          reduce using rule 5 (linea -> lCerrada .)
    ID              reduce using rule 5 (linea -> lCerrada .)
    PRINT           reduce using rule 5 (linea -> lCerrada .)
    MULTIESCALAR    reduce using rule 5 (linea -> lCerrada .)
    LENGTH          reduce using rule 5 (linea -> lCerrada .)
    CAPITALIZAR     reduce using rule 5 (linea -> lCerrada .)
    COLINEALES      reduce using rule 5 (linea -> lCerrada .)
    [               reduce using rule 5 (linea -> lCerrada .)
    $end            reduce using rule 5 (linea -> lCerrada .)
    }               reduce using rule 5 (linea -> lCerrada .)


state 548

    (14) lCerrada -> IF ( cosaBooleana ) { . g } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { . g } ELSE lCerrada
    (7) lAbierta -> IF ( cosaBooleana ) { . g } ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) { . g }
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (55) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (148) varAsig -> . varYVals MULEQ valores
    (149) varAsig -> . varYVals DIVEQ valores
    (150) varAsig -> . varYVals MASEQ valores
    (151) varAsig -> . varYVals MENOSEQ valores
    (152) varAsig -> . varYVals = valores
    (153) varAsig -> . ID . ID = valores
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 55 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    linea                          shift and go to state 34
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 13
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 566
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 30
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 32

state 549

    (20) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .

    ELSE            reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    COMMENT         reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    IF              reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    DO              reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    WHILE           reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    FOR             reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    RETURN          reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    ;               reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    MENOSMENOS      reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    MASMAS          reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    ID              reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    PRINT           reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    MULTIESCALAR    reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    LENGTH          reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    CAPITALIZAR     reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    COLINEALES      reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    [               reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    $end            reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    }               reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)


state 550

    (15) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .

    ELSE            reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    COMMENT         reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    IF              reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    DO              reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    WHILE           reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    FOR             reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    RETURN          reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    ;               reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    MENOSMENOS      reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    MASMAS          reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    ID              reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    PRINT           reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    MULTIESCALAR    reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    LENGTH          reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    CAPITALIZAR     reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    COLINEALES      reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    [               reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    $end            reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    }               reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)


state 551

    (17) lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .

    ELSE            reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    COMMENT         reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    IF              reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    DO              reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    WHILE           reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    FOR             reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    RETURN          reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    ;               reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    MENOSMENOS      reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    MASMAS          reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    ID              reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    PRINT           reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    MULTIESCALAR    reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    LENGTH          reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    CAPITALIZAR     reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    COLINEALES      reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    [               reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    $end            reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    }               reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)


state 552

    (7) lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .

    COMMENT         reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    IF              reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    DO              reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    WHILE           reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    FOR             reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    RETURN          reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    ;               reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    MENOSMENOS      reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    MASMAS          reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    ID              reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    PRINT           reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    MULTIESCALAR    reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    LENGTH          reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    CAPITALIZAR     reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    COLINEALES      reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    [               reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    $end            reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    }               reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)


state 553

    (14) lCerrada -> IF ( cosaBooleana ) { g } ELSE { . g }
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (55) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (148) varAsig -> . varYVals MULEQ valores
    (149) varAsig -> . varYVals DIVEQ valores
    (150) varAsig -> . varYVals MASEQ valores
    (151) varAsig -> . varYVals MENOSEQ valores
    (152) varAsig -> . varYVals = valores
    (153) varAsig -> . ID . ID = valores
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 55 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 13
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 567
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 30
    loop                           shift and go to state 32
    varYVals                       shift and go to state 11
    linea                          shift and go to state 34

state 554

    (103) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (204) expBool -> valoresBool . OR and
    (206) expBool -> valoresBool . OR valoresBool
    (209) and -> valoresBool . AND eq
    (211) and -> valoresBool . AND valoresBool

    ?               shift and go to state 568
    OR              shift and go to state 161
    AND             shift and go to state 160


state 555

    (108) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (203) expBool -> expBool . OR and
    (205) expBool -> expBool . OR valoresBool

    ?               shift and go to state 569
    OR              shift and go to state 198


state 556

    (116) valoresTernarioVars -> ( . ternarioVars )
    (201) valoresBool -> ( . ternarioBool )
    (230) tCompareEQ -> ( . ternarioBool )
    (231) tCompareEQ -> ( . ternarioMat )
    (238) tCompare -> ( . ternarioMat )
    (162) valoresMat -> ( . ternarioMat )
    (246) parenBool -> ( . expBool )
    (195) paren -> ( . eMat )
    (196) paren -> ( . valoresMat )
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (51) funcBool -> . COLINEALES ( valores , valores )
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (56) vec -> . [ elem ]
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 180
    FLOAT           shift and go to state 181
    STRING          shift and go to state 176
    (               shift and go to state 362
    BOOL            shift and go to state 182
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75
    [               shift and go to state 20
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 168
    menor                          shift and go to state 66
    valoresMat                     shift and go to state 169
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 570
    eMat                           shift and go to state 171
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 363
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    expBool                        shift and go to state 571
    ternarioBool                   shift and go to state 315
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 174
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 384
    mayor                          shift and go to state 79
    varYVals                       shift and go to state 185
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 186

state 557

    (103) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (131) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (204) expBool -> valoresBool . OR and
    (206) expBool -> valoresBool . OR valoresBool
    (209) and -> valoresBool . AND eq
    (211) and -> valoresBool . AND valoresBool

    ?               shift and go to state 572
    OR              shift and go to state 161
    AND             shift and go to state 160


state 558

    (137) valoresTernarioBool -> expBool .
    (108) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (132) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> expBool . OR and
    (205) expBool -> expBool . OR valoresBool

    ,               reduce using rule 137 (valoresTernarioBool -> expBool .)
    ]               reduce using rule 137 (valoresTernarioBool -> expBool .)
    )               reduce using rule 137 (valoresTernarioBool -> expBool .)
    ;               reduce using rule 137 (valoresTernarioBool -> expBool .)
    :               reduce using rule 137 (valoresTernarioBool -> expBool .)
    }               reduce using rule 137 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 573
    OR              shift and go to state 198


state 559

    (116) valoresTernarioVars -> ( . ternarioVars )
    (136) valoresTernarioBool -> ( . ternarioBool )
    (201) valoresBool -> ( . ternarioBool )
    (230) tCompareEQ -> ( . ternarioBool )
    (231) tCompareEQ -> ( . ternarioMat )
    (238) tCompare -> ( . ternarioMat )
    (162) valoresMat -> ( . ternarioMat )
    (246) parenBool -> ( . expBool )
    (195) paren -> ( . eMat )
    (196) paren -> ( . valoresMat )
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (51) funcBool -> . COLINEALES ( valores , valores )
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (56) vec -> . [ elem ]
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 180
    FLOAT           shift and go to state 181
    STRING          shift and go to state 176
    (               shift and go to state 362
    BOOL            shift and go to state 182
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75
    [               shift and go to state 20
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 168
    menor                          shift and go to state 66
    valoresMat                     shift and go to state 169
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 570
    eMat                           shift and go to state 171
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 363
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    expBool                        shift and go to state 571
    ternarioBool                   shift and go to state 383
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 174
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 384
    mayor                          shift and go to state 79
    varYVals                       shift and go to state 185
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 186

state 560

    (103) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (122) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (204) expBool -> valoresBool . OR and
    (206) expBool -> valoresBool . OR valoresBool
    (209) and -> valoresBool . AND eq
    (211) and -> valoresBool . AND valoresBool

    ?               shift and go to state 574
    OR              shift and go to state 161
    AND             shift and go to state 160


state 561

    (116) valoresTernarioVars -> ( . ternarioVars )
    (130) valoresTernarioMat -> ( . ternarioMat )
    (201) valoresBool -> ( . ternarioBool )
    (162) valoresMat -> ( . ternarioMat )
    (230) tCompareEQ -> ( . ternarioBool )
    (231) tCompareEQ -> ( . ternarioMat )
    (195) paren -> ( . eMat )
    (196) paren -> ( . valoresMat )
    (238) tCompare -> ( . ternarioMat )
    (246) parenBool -> ( . expBool )
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (50) funcString -> . CAPITALIZAR ( valores )
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (51) funcBool -> . COLINEALES ( valores , valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (141) reg -> . { campos }
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (56) vec -> . [ elem ]
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    INT             shift and go to state 180
    FLOAT           shift and go to state 181
    STRING          shift and go to state 176
    (               shift and go to state 172
    BOOL            shift and go to state 182
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    ID              shift and go to state 178
    CAPITALIZAR     shift and go to state 27
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    {               shift and go to state 99
    -               shift and go to state 76
    +               shift and go to state 75
    [               shift and go to state 20
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 167
    funcInt                        shift and go to state 168
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 169
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 426
    eMat                           shift and go to state 171
    tCompareEQ                     shift and go to state 73
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 382
    vec                            shift and go to state 33
    paren                          shift and go to state 86
    reg                            shift and go to state 175
    exp                            shift and go to state 98
    ternarioBool                   shift and go to state 315
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    not                            shift and go to state 87
    expBool                        shift and go to state 487
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 174
    ternarioVars                   shift and go to state 384
    varYVals                       shift and go to state 185
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 186

state 562

    (108) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (123) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (203) expBool -> expBool . OR and
    (205) expBool -> expBool . OR valoresBool

    ?               shift and go to state 575
    OR              shift and go to state 198


state 563

    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com . lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (148) varAsig -> . varYVals MULEQ valores
    (149) varAsig -> . varYVals DIVEQ valores
    (150) varAsig -> . varYVals MASEQ valores
    (151) varAsig -> . varYVals MENOSEQ valores
    (152) varAsig -> . varYVals = valores
    (153) varAsig -> . ID . ID = valores
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    IF              shift and go to state 36
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 576
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 39

state 564

    (16) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g . }

    }               shift and go to state 577


state 565

    (15) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . { g }
    (18) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . COMMENT com lCerrada
    (8) lAbierta -> IF ( cosaBooleana ) lCerrada ELSE . lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (148) varAsig -> . varYVals MULEQ valores
    (149) varAsig -> . varYVals DIVEQ valores
    (150) varAsig -> . varYVals MASEQ valores
    (151) varAsig -> . varYVals MENOSEQ valores
    (152) varAsig -> . varYVals = valores
    (153) varAsig -> . ID . ID = valores
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 503
    COMMENT         shift and go to state 500
    IF              shift and go to state 406
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 501
    lAbierta                       shift and go to state 502
    loop                           shift and go to state 409
    varYVals                       shift and go to state 11

state 566

    (14) lCerrada -> IF ( cosaBooleana ) { g . } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g . } ELSE lCerrada
    (7) lAbierta -> IF ( cosaBooleana ) { g . } ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) { g . }

    }               shift and go to state 578


state 567

    (14) lCerrada -> IF ( cosaBooleana ) { g } ELSE { g . }

    }               shift and go to state 579


state 568

    (103) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (113) valoresTernarioVars -> . reg
    (114) valoresTernarioVars -> . vec
    (115) valoresTernarioVars -> . ternarioVars
    (116) valoresTernarioVars -> . ( ternarioVars )
    (117) valoresTernarioVars -> . atributos
    (118) valoresTernarioVars -> . varsOps
    (119) valoresTernarioVars -> . varYVals
    (120) valoresTernarioVars -> . res
    (124) valoresTernarioMat -> . INT
    (125) valoresTernarioMat -> . FLOAT
    (126) valoresTernarioMat -> . funcInt
    (127) valoresTernarioMat -> . STRING
    (128) valoresTernarioMat -> . eMat
    (129) valoresTernarioMat -> . ternarioMat
    (130) valoresTernarioMat -> . ( ternarioMat )
    (133) valoresTernarioBool -> . BOOL
    (134) valoresTernarioBool -> . funcBool
    (135) valoresTernarioBool -> . ternarioBool
    (136) valoresTernarioBool -> . ( ternarioBool )
    (137) valoresTernarioBool -> . expBool
    (141) reg -> . { campos }
    (56) vec -> . [ elem ]
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (121) res -> . RES
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    (               shift and go to state 430
    INT             shift and go to state 295
    FLOAT           shift and go to state 296
    STRING          shift and go to state 292
    BOOL            shift and go to state 297
    {               shift and go to state 99
    [               shift and go to state 20
    ID              shift and go to state 178
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 282
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    atributos                      shift and go to state 302
    funcBool                       shift and go to state 281
    funcInt                        shift and go to state 283
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 285
    tCompareEQ                     shift and go to state 73
    valoresTernarioBool            shift and go to state 522
    valoresBool                    shift and go to state 426
    ternarioMat                    shift and go to state 287
    vec                            shift and go to state 288
    paren                          shift and go to state 86
    reg                            shift and go to state 290
    valoresTernarioVars            shift and go to state 291
    exp                            shift and go to state 98
    ternarioBool                   shift and go to state 293
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    valoresTernarioMat             shift and go to state 513
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 432
    res                            shift and go to state 280
    ternarioVars                   shift and go to state 300
    varYVals                       shift and go to state 433
    parenBool                      shift and go to state 84
    expBool                        shift and go to state 431

state 569

    (108) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (113) valoresTernarioVars -> . reg
    (114) valoresTernarioVars -> . vec
    (115) valoresTernarioVars -> . ternarioVars
    (116) valoresTernarioVars -> . ( ternarioVars )
    (117) valoresTernarioVars -> . atributos
    (118) valoresTernarioVars -> . varsOps
    (119) valoresTernarioVars -> . varYVals
    (120) valoresTernarioVars -> . res
    (124) valoresTernarioMat -> . INT
    (125) valoresTernarioMat -> . FLOAT
    (126) valoresTernarioMat -> . funcInt
    (127) valoresTernarioMat -> . STRING
    (128) valoresTernarioMat -> . eMat
    (129) valoresTernarioMat -> . ternarioMat
    (130) valoresTernarioMat -> . ( ternarioMat )
    (133) valoresTernarioBool -> . BOOL
    (134) valoresTernarioBool -> . funcBool
    (135) valoresTernarioBool -> . ternarioBool
    (136) valoresTernarioBool -> . ( ternarioBool )
    (137) valoresTernarioBool -> . expBool
    (141) reg -> . { campos }
    (56) vec -> . [ elem ]
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (121) res -> . RES
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    (               shift and go to state 430
    INT             shift and go to state 295
    FLOAT           shift and go to state 296
    STRING          shift and go to state 292
    BOOL            shift and go to state 297
    {               shift and go to state 99
    [               shift and go to state 20
    ID              shift and go to state 178
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 282
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 281
    funcInt                        shift and go to state 283
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 426
    eMat                           shift and go to state 285
    tCompareEQ                     shift and go to state 73
    valoresTernarioBool            shift and go to state 527
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 287
    vec                            shift and go to state 288
    paren                          shift and go to state 86
    reg                            shift and go to state 290
    valoresTernarioVars            shift and go to state 333
    expBool                        shift and go to state 431
    ternarioBool                   shift and go to state 293
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    valoresTernarioMat             shift and go to state 515
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 432
    res                            shift and go to state 280
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 300
    varYVals                       shift and go to state 433
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 302

state 570

    (103) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (131) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (122) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (204) expBool -> valoresBool . OR and
    (206) expBool -> valoresBool . OR valoresBool
    (209) and -> valoresBool . AND eq
    (211) and -> valoresBool . AND valoresBool

    ?               shift and go to state 580
    OR              shift and go to state 161
    AND             shift and go to state 160


state 571

    (246) parenBool -> ( expBool . )
    (108) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (132) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (123) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (203) expBool -> expBool . OR and
    (205) expBool -> expBool . OR valoresBool

    )               shift and go to state 319
    ?               shift and go to state 581
    OR              shift and go to state 198


state 572

    (103) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (131) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (113) valoresTernarioVars -> . reg
    (114) valoresTernarioVars -> . vec
    (115) valoresTernarioVars -> . ternarioVars
    (116) valoresTernarioVars -> . ( ternarioVars )
    (117) valoresTernarioVars -> . atributos
    (118) valoresTernarioVars -> . varsOps
    (119) valoresTernarioVars -> . varYVals
    (120) valoresTernarioVars -> . res
    (124) valoresTernarioMat -> . INT
    (125) valoresTernarioMat -> . FLOAT
    (126) valoresTernarioMat -> . funcInt
    (127) valoresTernarioMat -> . STRING
    (128) valoresTernarioMat -> . eMat
    (129) valoresTernarioMat -> . ternarioMat
    (130) valoresTernarioMat -> . ( ternarioMat )
    (133) valoresTernarioBool -> . BOOL
    (134) valoresTernarioBool -> . funcBool
    (135) valoresTernarioBool -> . ternarioBool
    (136) valoresTernarioBool -> . ( ternarioBool )
    (137) valoresTernarioBool -> . expBool
    (141) reg -> . { campos }
    (56) vec -> . [ elem ]
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (121) res -> . RES
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    (               shift and go to state 430
    INT             shift and go to state 295
    FLOAT           shift and go to state 296
    STRING          shift and go to state 292
    BOOL            shift and go to state 297
    {               shift and go to state 99
    [               shift and go to state 20
    ID              shift and go to state 178
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 282
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    atributos                      shift and go to state 302
    funcBool                       shift and go to state 281
    funcInt                        shift and go to state 283
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 285
    tCompareEQ                     shift and go to state 73
    valoresTernarioBool            shift and go to state 518
    valoresBool                    shift and go to state 426
    ternarioMat                    shift and go to state 287
    vec                            shift and go to state 288
    paren                          shift and go to state 86
    reg                            shift and go to state 290
    valoresTernarioVars            shift and go to state 291
    exp                            shift and go to state 98
    ternarioBool                   shift and go to state 293
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    valoresTernarioMat             shift and go to state 513
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 432
    res                            shift and go to state 280
    ternarioVars                   shift and go to state 300
    varYVals                       shift and go to state 433
    parenBool                      shift and go to state 84
    expBool                        shift and go to state 431

state 573

    (108) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (132) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (113) valoresTernarioVars -> . reg
    (114) valoresTernarioVars -> . vec
    (115) valoresTernarioVars -> . ternarioVars
    (116) valoresTernarioVars -> . ( ternarioVars )
    (117) valoresTernarioVars -> . atributos
    (118) valoresTernarioVars -> . varsOps
    (119) valoresTernarioVars -> . varYVals
    (120) valoresTernarioVars -> . res
    (124) valoresTernarioMat -> . INT
    (125) valoresTernarioMat -> . FLOAT
    (126) valoresTernarioMat -> . funcInt
    (127) valoresTernarioMat -> . STRING
    (128) valoresTernarioMat -> . eMat
    (129) valoresTernarioMat -> . ternarioMat
    (130) valoresTernarioMat -> . ( ternarioMat )
    (133) valoresTernarioBool -> . BOOL
    (134) valoresTernarioBool -> . funcBool
    (135) valoresTernarioBool -> . ternarioBool
    (136) valoresTernarioBool -> . ( ternarioBool )
    (137) valoresTernarioBool -> . expBool
    (141) reg -> . { campos }
    (56) vec -> . [ elem ]
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (121) res -> . RES
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    (               shift and go to state 430
    INT             shift and go to state 295
    FLOAT           shift and go to state 296
    STRING          shift and go to state 292
    BOOL            shift and go to state 297
    {               shift and go to state 99
    [               shift and go to state 20
    ID              shift and go to state 178
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 282
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 281
    funcInt                        shift and go to state 283
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 426
    eMat                           shift and go to state 285
    tCompareEQ                     shift and go to state 73
    valoresTernarioBool            shift and go to state 520
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 287
    vec                            shift and go to state 288
    paren                          shift and go to state 86
    reg                            shift and go to state 290
    valoresTernarioVars            shift and go to state 333
    expBool                        shift and go to state 431
    ternarioBool                   shift and go to state 293
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    valoresTernarioMat             shift and go to state 515
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 432
    res                            shift and go to state 280
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 300
    varYVals                       shift and go to state 433
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 302

state 574

    (103) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (122) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (113) valoresTernarioVars -> . reg
    (114) valoresTernarioVars -> . vec
    (115) valoresTernarioVars -> . ternarioVars
    (116) valoresTernarioVars -> . ( ternarioVars )
    (117) valoresTernarioVars -> . atributos
    (118) valoresTernarioVars -> . varsOps
    (119) valoresTernarioVars -> . varYVals
    (120) valoresTernarioVars -> . res
    (124) valoresTernarioMat -> . INT
    (125) valoresTernarioMat -> . FLOAT
    (126) valoresTernarioMat -> . funcInt
    (127) valoresTernarioMat -> . STRING
    (128) valoresTernarioMat -> . eMat
    (129) valoresTernarioMat -> . ternarioMat
    (130) valoresTernarioMat -> . ( ternarioMat )
    (133) valoresTernarioBool -> . BOOL
    (134) valoresTernarioBool -> . funcBool
    (135) valoresTernarioBool -> . ternarioBool
    (136) valoresTernarioBool -> . ( ternarioBool )
    (137) valoresTernarioBool -> . expBool
    (141) reg -> . { campos }
    (56) vec -> . [ elem ]
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (121) res -> . RES
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    (               shift and go to state 430
    INT             shift and go to state 295
    FLOAT           shift and go to state 296
    STRING          shift and go to state 292
    BOOL            shift and go to state 297
    {               shift and go to state 99
    [               shift and go to state 20
    ID              shift and go to state 178
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 282
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    atributos                      shift and go to state 302
    funcBool                       shift and go to state 281
    funcInt                        shift and go to state 283
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 285
    tCompareEQ                     shift and go to state 73
    valoresTernarioBool            shift and go to state 522
    valoresBool                    shift and go to state 426
    ternarioMat                    shift and go to state 287
    vec                            shift and go to state 288
    paren                          shift and go to state 86
    reg                            shift and go to state 290
    valoresTernarioVars            shift and go to state 291
    exp                            shift and go to state 98
    ternarioBool                   shift and go to state 293
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    valoresTernarioMat             shift and go to state 519
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 432
    res                            shift and go to state 280
    ternarioVars                   shift and go to state 300
    varYVals                       shift and go to state 433
    parenBool                      shift and go to state 84
    expBool                        shift and go to state 431

state 575

    (108) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (123) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (113) valoresTernarioVars -> . reg
    (114) valoresTernarioVars -> . vec
    (115) valoresTernarioVars -> . ternarioVars
    (116) valoresTernarioVars -> . ( ternarioVars )
    (117) valoresTernarioVars -> . atributos
    (118) valoresTernarioVars -> . varsOps
    (119) valoresTernarioVars -> . varYVals
    (120) valoresTernarioVars -> . res
    (124) valoresTernarioMat -> . INT
    (125) valoresTernarioMat -> . FLOAT
    (126) valoresTernarioMat -> . funcInt
    (127) valoresTernarioMat -> . STRING
    (128) valoresTernarioMat -> . eMat
    (129) valoresTernarioMat -> . ternarioMat
    (130) valoresTernarioMat -> . ( ternarioMat )
    (133) valoresTernarioBool -> . BOOL
    (134) valoresTernarioBool -> . funcBool
    (135) valoresTernarioBool -> . ternarioBool
    (136) valoresTernarioBool -> . ( ternarioBool )
    (137) valoresTernarioBool -> . expBool
    (141) reg -> . { campos }
    (56) vec -> . [ elem ]
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (121) res -> . RES
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    (               shift and go to state 430
    INT             shift and go to state 295
    FLOAT           shift and go to state 296
    STRING          shift and go to state 292
    BOOL            shift and go to state 297
    {               shift and go to state 99
    [               shift and go to state 20
    ID              shift and go to state 178
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 282
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 281
    funcInt                        shift and go to state 283
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 426
    eMat                           shift and go to state 285
    tCompareEQ                     shift and go to state 73
    valoresTernarioBool            shift and go to state 527
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 287
    vec                            shift and go to state 288
    paren                          shift and go to state 86
    reg                            shift and go to state 290
    valoresTernarioVars            shift and go to state 333
    expBool                        shift and go to state 431
    ternarioBool                   shift and go to state 293
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    valoresTernarioMat             shift and go to state 521
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 432
    res                            shift and go to state 280
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 300
    varYVals                       shift and go to state 433
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 302

state 576

    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .

    ELSE            reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    COMMENT         reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    IF              reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    DO              reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    WHILE           reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    FOR             reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    RETURN          reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    ;               reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    MENOSMENOS      reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    MASMAS          reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    ID              reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    PRINT           reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    MULTIESCALAR    reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    LENGTH          reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    CAPITALIZAR     reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    COLINEALES      reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    [               reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    $end            reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    }               reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)


state 577

    (16) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .

    ELSE            reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    COMMENT         reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    IF              reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    DO              reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    WHILE           reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    FOR             reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    RETURN          reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    ;               reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    MENOSMENOS      reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    MASMAS          reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    ID              reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    PRINT           reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    MULTIESCALAR    reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    LENGTH          reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    CAPITALIZAR     reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    COLINEALES      reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    [               reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    $end            reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    }               reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)


state 578

    (14) lCerrada -> IF ( cosaBooleana ) { g } . ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g } . ELSE lCerrada
    (7) lAbierta -> IF ( cosaBooleana ) { g } . ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) { g } .

    ELSE            shift and go to state 582
    COMMENT         reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    IF              reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    DO              reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    WHILE           reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    FOR             reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    RETURN          reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    ;               reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MENOSMENOS      reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MASMAS          reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    ID              reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    PRINT           reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MULTIESCALAR    reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    LENGTH          reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    CAPITALIZAR     reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    COLINEALES      reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    [               reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    $end            reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    }               reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)


state 579

    (14) lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .

    ELSE            reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    COMMENT         reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    IF              reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    DO              reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    WHILE           reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    FOR             reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    RETURN          reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    ;               reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    MENOSMENOS      reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    MASMAS          reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    ID              reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    PRINT           reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    MULTIESCALAR    reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    LENGTH          reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    CAPITALIZAR     reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    COLINEALES      reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    [               reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    $end            reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    }               reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)


state 580

    (103) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (131) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (122) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (113) valoresTernarioVars -> . reg
    (114) valoresTernarioVars -> . vec
    (115) valoresTernarioVars -> . ternarioVars
    (116) valoresTernarioVars -> . ( ternarioVars )
    (117) valoresTernarioVars -> . atributos
    (118) valoresTernarioVars -> . varsOps
    (119) valoresTernarioVars -> . varYVals
    (120) valoresTernarioVars -> . res
    (124) valoresTernarioMat -> . INT
    (125) valoresTernarioMat -> . FLOAT
    (126) valoresTernarioMat -> . funcInt
    (127) valoresTernarioMat -> . STRING
    (128) valoresTernarioMat -> . eMat
    (129) valoresTernarioMat -> . ternarioMat
    (130) valoresTernarioMat -> . ( ternarioMat )
    (133) valoresTernarioBool -> . BOOL
    (134) valoresTernarioBool -> . funcBool
    (135) valoresTernarioBool -> . ternarioBool
    (136) valoresTernarioBool -> . ( ternarioBool )
    (137) valoresTernarioBool -> . expBool
    (141) reg -> . { campos }
    (56) vec -> . [ elem ]
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (121) res -> . RES
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    (               shift and go to state 430
    INT             shift and go to state 295
    FLOAT           shift and go to state 296
    STRING          shift and go to state 292
    BOOL            shift and go to state 297
    {               shift and go to state 99
    [               shift and go to state 20
    ID              shift and go to state 178
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 282
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    atributos                      shift and go to state 302
    funcBool                       shift and go to state 281
    funcInt                        shift and go to state 283
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 285
    tCompareEQ                     shift and go to state 73
    valoresTernarioBool            shift and go to state 518
    valoresBool                    shift and go to state 426
    ternarioMat                    shift and go to state 287
    vec                            shift and go to state 288
    paren                          shift and go to state 86
    reg                            shift and go to state 290
    valoresTernarioVars            shift and go to state 291
    exp                            shift and go to state 98
    ternarioBool                   shift and go to state 293
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    valoresTernarioMat             shift and go to state 519
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 432
    res                            shift and go to state 280
    ternarioVars                   shift and go to state 300
    varYVals                       shift and go to state 433
    parenBool                      shift and go to state 84
    expBool                        shift and go to state 431

state 581

    (108) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (132) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (123) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (113) valoresTernarioVars -> . reg
    (114) valoresTernarioVars -> . vec
    (115) valoresTernarioVars -> . ternarioVars
    (116) valoresTernarioVars -> . ( ternarioVars )
    (117) valoresTernarioVars -> . atributos
    (118) valoresTernarioVars -> . varsOps
    (119) valoresTernarioVars -> . varYVals
    (120) valoresTernarioVars -> . res
    (124) valoresTernarioMat -> . INT
    (125) valoresTernarioMat -> . FLOAT
    (126) valoresTernarioMat -> . funcInt
    (127) valoresTernarioMat -> . STRING
    (128) valoresTernarioMat -> . eMat
    (129) valoresTernarioMat -> . ternarioMat
    (130) valoresTernarioMat -> . ( ternarioMat )
    (133) valoresTernarioBool -> . BOOL
    (134) valoresTernarioBool -> . funcBool
    (135) valoresTernarioBool -> . ternarioBool
    (136) valoresTernarioBool -> . ( ternarioBool )
    (137) valoresTernarioBool -> . expBool
    (141) reg -> . { campos }
    (56) vec -> . [ elem ]
    (103) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (104) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (105) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (106) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (107) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (108) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (110) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (111) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (112) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (92) atributos -> . ID . valoresCampos
    (93) atributos -> . reg . valoresCampos
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (121) res -> . RES
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (163) eMat -> . eMat + p
    (164) eMat -> . valoresMat + p
    (165) eMat -> . eMat + valoresMat
    (166) eMat -> . valoresMat + valoresMat
    (167) eMat -> . p
    (168) eMat -> . eMat - p
    (169) eMat -> . valoresMat - p
    (170) eMat -> . eMat - valoresMat
    (171) eMat -> . valoresMat - valoresMat
    (122) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (123) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (51) funcBool -> . COLINEALES ( valores , valores )
    (131) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (132) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (203) expBool -> . expBool OR and
    (204) expBool -> . valoresBool OR and
    (205) expBool -> . expBool OR valoresBool
    (206) expBool -> . valoresBool OR valoresBool
    (207) expBool -> . and
    (197) valoresBool -> . BOOL
    (198) valoresBool -> . funcBool
    (199) valoresBool -> . varYVals
    (200) valoresBool -> . varsOps
    (201) valoresBool -> . ( ternarioBool )
    (202) valoresBool -> .
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (154) valoresMat -> . INT
    (155) valoresMat -> . FLOAT
    (156) valoresMat -> . funcInt
    (157) valoresMat -> . atributos
    (158) valoresMat -> . funcString
    (159) valoresMat -> . STRING
    (160) valoresMat -> . varYVals
    (161) valoresMat -> . varsOps
    (162) valoresMat -> . ( ternarioMat )
    (172) p -> . p * exp
    (173) p -> . p / exp
    (174) p -> . p % exp
    (175) p -> . valoresMat * exp
    (176) p -> . valoresMat / exp
    (177) p -> . valoresMat % exp
    (178) p -> . p * valoresMat
    (179) p -> . p / valoresMat
    (180) p -> . p % valoresMat
    (181) p -> . valoresMat * valoresMat
    (182) p -> . valoresMat / valoresMat
    (183) p -> . valoresMat % valoresMat
    (184) p -> . exp
    (208) and -> . and AND eq
    (209) and -> . valoresBool AND eq
    (210) and -> . and AND valoresBool
    (211) and -> . valoresBool AND valoresBool
    (212) and -> . eq
    (50) funcString -> . CAPITALIZAR ( valores )
    (185) exp -> . exp ^ iSing
    (186) exp -> . valoresMat ^ iSing
    (187) exp -> . exp ^ valoresMat
    (188) exp -> . valoresMat ^ valoresMat
    (189) exp -> . iSing
    (213) eq -> . eq EQEQ mayor
    (214) eq -> . eq DISTINTO mayor
    (215) eq -> . tCompareEQ EQEQ mayor
    (216) eq -> . tCompareEQ DISTINTO mayor
    (217) eq -> . eq EQEQ tCompareEQ
    (218) eq -> . eq DISTINTO tCompareEQ
    (219) eq -> . tCompareEQ EQEQ tCompareEQ
    (220) eq -> . tCompareEQ DISTINTO tCompareEQ
    (221) eq -> . mayor
    (190) iSing -> . - paren
    (191) iSing -> . + paren
    (192) iSing -> . - valoresMat
    (193) iSing -> . + valoresMat
    (194) iSing -> . paren
    (222) tCompareEQ -> . BOOL
    (223) tCompareEQ -> . funcBool
    (224) tCompareEQ -> . varYVals
    (225) tCompareEQ -> . varsOps
    (226) tCompareEQ -> . INT
    (227) tCompareEQ -> . FLOAT
    (228) tCompareEQ -> . funcInt
    (229) tCompareEQ -> . eMat
    (230) tCompareEQ -> . ( ternarioBool )
    (231) tCompareEQ -> . ( ternarioMat )
    (239) mayor -> . tCompare > tCompare
    (240) mayor -> . menor
    (195) paren -> . ( eMat )
    (196) paren -> . ( valoresMat )
    (232) tCompare -> . eMat
    (233) tCompare -> . varsOps
    (234) tCompare -> . varYVals
    (235) tCompare -> . INT
    (236) tCompare -> . funcInt
    (237) tCompare -> . FLOAT
    (238) tCompare -> . ( ternarioMat )
    (241) menor -> . tCompare < tCompare
    (242) menor -> . not
    (243) not -> . NOT not
    (244) not -> . NOT valoresBool
    (245) not -> . parenBool
    (246) parenBool -> . ( expBool )

    (               shift and go to state 430
    INT             shift and go to state 295
    FLOAT           shift and go to state 296
    STRING          shift and go to state 292
    BOOL            shift and go to state 297
    {               shift and go to state 99
    [               shift and go to state 20
    ID              shift and go to state 178
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    RES             shift and go to state 282
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 202 (valoresBool -> .)
    OR              reduce using rule 202 (valoresBool -> .)
    AND             reduce using rule 202 (valoresBool -> .)
    CAPITALIZAR     shift and go to state 27
    -               shift and go to state 76
    +               shift and go to state 75
    NOT             shift and go to state 97

    and                            shift and go to state 60
    funcBool                       shift and go to state 281
    funcInt                        shift and go to state 283
    menor                          shift and go to state 66
    mayor                          shift and go to state 79
    valoresMat                     shift and go to state 68
    eq                             shift and go to state 69
    valoresBool                    shift and go to state 426
    eMat                           shift and go to state 285
    tCompareEQ                     shift and go to state 73
    valoresTernarioBool            shift and go to state 520
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 287
    vec                            shift and go to state 288
    paren                          shift and go to state 86
    reg                            shift and go to state 290
    valoresTernarioVars            shift and go to state 333
    expBool                        shift and go to state 431
    ternarioBool                   shift and go to state 293
    iSing                          shift and go to state 83
    tCompare                       shift and go to state 85
    valoresTernarioMat             shift and go to state 521
    not                            shift and go to state 87
    funcString                     shift and go to state 179
    p                              shift and go to state 94
    varsOps                        shift and go to state 432
    res                            shift and go to state 280
    exp                            shift and go to state 98
    ternarioVars                   shift and go to state 300
    varYVals                       shift and go to state 433
    parenBool                      shift and go to state 84
    atributos                      shift and go to state 302

state 582

    (14) lCerrada -> IF ( cosaBooleana ) { g } ELSE . { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g } ELSE . lCerrada
    (7) lAbierta -> IF ( cosaBooleana ) { g } ELSE . lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) lCerrada -> . DO COMMENT com lCerrada WHILE ( valores ) ;
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (28) sentencia -> . varsOps ;
    (29) sentencia -> . func ;
    (30) sentencia -> . varAsig ;
    (31) sentencia -> . RETURN ;
    (32) sentencia -> . ;
    (33) loop -> . WHILE ( valores )
    (34) loop -> . FOR ( primParam ; valores ; tercerParam )
    (144) varsOps -> . MENOSMENOS varYVals
    (145) varsOps -> . MASMAS varYVals
    (146) varsOps -> . varYVals MASMAS
    (147) varsOps -> . varYVals MENOSMENOS
    (43) func -> . funcReturn
    (44) func -> . funcVoid
    (148) varAsig -> . varYVals MULEQ valores
    (149) varAsig -> . varYVals DIVEQ valores
    (150) varAsig -> . varYVals MASEQ valores
    (151) varAsig -> . varYVals MENOSEQ valores
    (152) varAsig -> . varYVals = valores
    (153) varAsig -> . ID . ID = valores
    (138) varYVals -> . ID
    (139) varYVals -> . vecVal
    (140) varYVals -> . vecVal . varYVals
    (45) funcReturn -> . funcInt
    (46) funcReturn -> . funcString
    (47) funcReturn -> . funcBool
    (52) funcVoid -> . PRINT ( valores )
    (59) vecVal -> . ID [ expresion ]
    (60) vecVal -> . vec [ expresion ]
    (61) vecVal -> . vecVal [ expresion ]
    (62) vecVal -> . ID [ INT ]
    (63) vecVal -> . vec [ INT ]
    (64) vecVal -> . vecVal [ INT ]
    (48) funcInt -> . MULTIESCALAR ( valores , valores param )
    (49) funcInt -> . LENGTH ( valores )
    (50) funcString -> . CAPITALIZAR ( valores )
    (51) funcBool -> . COLINEALES ( valores , valores )
    (56) vec -> . [ elem ]

    {               shift and go to state 553
    IF              shift and go to state 406
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 29
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 551
    lAbierta                       shift and go to state 552
    loop                           shift and go to state 409
    varYVals                       shift and go to state 11
