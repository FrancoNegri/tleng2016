Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> g
Rule 1     g -> linea g
Rule 2     g -> COMMENT g
Rule 3     g -> empty
Rule 4     linea -> lAbierta
Rule 5     linea -> lCerrada
Rule 6     lAbierta -> IF ( cosaBooleana ) linea
Rule 7     lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta
Rule 8     lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta
Rule 9     lAbierta -> IF ( cosaBooleana ) { g }
Rule 10    lAbierta -> loop lAbierta
Rule 11    lCerrada -> sentencia
Rule 12    com -> COMMENT com
Rule 13    com -> empty
Rule 14    lCerrada -> IF ( cosaBooleana ) { g } ELSE { g }
Rule 15    lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g }
Rule 16    lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
Rule 17    lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada
Rule 18    lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada
Rule 19    lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
Rule 20    lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
Rule 21    lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
Rule 22    lCerrada -> loop { g }
Rule 23    lCerrada -> loop lCerrada
Rule 24    lCerrada -> DO { g } WHILE ( valores ) ;
Rule 25    lCerrada -> DO lCerrada WHILE ( valores ) ;
Rule 26    sentencia -> varsOps ;
Rule 27    sentencia -> func ;
Rule 28    sentencia -> varAsig ;
Rule 29    sentencia -> RETURN ;
Rule 30    sentencia -> ;
Rule 31    loop -> WHILE ( valores )
Rule 32    loop -> FOR ( primParam ; valores ; tercerParam )
Rule 33    cosaBooleana -> expBool
Rule 34    cosaBooleana -> valoresBool
Rule 35    primParam -> varAsig
Rule 36    primParam -> empty
Rule 37    tercerParam -> varsOps
Rule 38    tercerParam -> varAsig
Rule 39    tercerParam -> func
Rule 40    tercerParam -> empty
Rule 41    func -> funcReturn
Rule 42    func -> funcVoid
Rule 43    funcReturn -> funcInt
Rule 44    funcReturn -> funcString
Rule 45    funcReturn -> funcBool
Rule 46    funcInt -> MULTIESCALAR ( valores , valores param )
Rule 47    funcInt -> LENGTH ( valores )
Rule 48    funcString -> CAPITALIZAR ( valores )
Rule 49    funcBool -> COLINEALES ( valores , valores )
Rule 50    funcVoid -> PRINT ( valores )
Rule 51    param -> , valores
Rule 52    param -> empty
Rule 53    empty -> <empty>
Rule 54    vec -> [ elem ]
Rule 55    elem -> valores , elem
Rule 56    elem -> valores
Rule 57    valores -> eMat
Rule 58    valores -> expBool
Rule 59    valores -> funcReturn
Rule 60    valores -> reg
Rule 61    valores -> INT
Rule 62    valores -> FLOAT
Rule 63    valores -> STRING
Rule 64    valores -> BOOL
Rule 65    valores -> varYVals
Rule 66    valores -> varsOps
Rule 67    valores -> vec
Rule 68    valores -> ternario
Rule 69    valores -> atributos
Rule 70    valores -> RES
Rule 71    atributos -> ID . valoresCampos
Rule 72    valoresCampos -> varYVals
Rule 73    valoresCampos -> END
Rule 74    valoresCampos -> BEGIN
Rule 75    ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars
Rule 76    ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat
Rule 77    ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars
Rule 78    ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool
Rule 79    ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars
Rule 80    ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars
Rule 81    ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat
Rule 82    ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars
Rule 83    ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool
Rule 84    ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars
Rule 85    valoresTernarioVars -> varsOps
Rule 86    valoresTernarioVars -> varYVals
Rule 87    valoresTernarioVars -> reg
Rule 88    valoresTernarioVars -> vec
Rule 89    valoresTernarioVars -> ternarioVars
Rule 90    valoresTernarioVars -> ( ternarioVars )
Rule 91    valoresTernarioVars -> atributos
Rule 92    valoresTernarioVars -> RES
Rule 93    varYVals -> ID
Rule 94    varYVals -> vecVal
Rule 95    varYVals -> vecVal . varYVals
Rule 96    vecVal -> ID m
Rule 97    m -> [ INT ]
Rule 98    m -> [ INT ] m
Rule 99    m -> [ varYVals ] m
Rule 100   m -> [ varYVals ]
Rule 101   m -> [ eMat ] m
Rule 102   m -> [ eMat ]
Rule 103   reg -> { campos }
Rule 104   campos -> ID : valores , campos
Rule 105   campos -> ID : valores
Rule 106   varsOps -> MENOSMENOS varYVals
Rule 107   varsOps -> MASMAS varYVals
Rule 108   varsOps -> varYVals MASMAS
Rule 109   varsOps -> varYVals MENOSMENOS
Rule 110   valoresAsig -> valores
Rule 111   varAsig -> varYVals MULEQ valoresAsig
Rule 112   varAsig -> varYVals DIVEQ valoresAsig
Rule 113   varAsig -> varYVals MASEQ valoresAsig
Rule 114   varAsig -> varYVals MENOSEQ valoresAsig
Rule 115   varAsig -> varYVals = valoresAsig
Rule 116   varAsig -> ID . ID = valoresAsig
Rule 117   valoresMat -> INT
Rule 118   valoresMat -> FLOAT
Rule 119   valoresMat -> funcInt
Rule 120   valoresMat -> varYVals
Rule 121   valoresMat -> varsOps
Rule 122   valoresMat -> STRING
Rule 123   valoresMat -> ( ternarioMat )
Rule 124   ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat
Rule 125   ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat
Rule 126   valoresTernarioMat -> INT
Rule 127   valoresTernarioMat -> FLOAT
Rule 128   valoresTernarioMat -> funcInt
Rule 129   valoresTernarioMat -> STRING
Rule 130   valoresTernarioMat -> eMat
Rule 131   valoresTernarioMat -> ternarioMat
Rule 132   valoresTernarioMat -> ( ternarioMat )
Rule 133   eMat -> eMat + p
Rule 134   eMat -> eMat - p
Rule 135   eMat -> valoresMat + p
Rule 136   eMat -> valoresMat - p
Rule 137   eMat -> eMat + valoresMat
Rule 138   eMat -> eMat - valoresMat
Rule 139   eMat -> valoresMat + valoresMat
Rule 140   eMat -> valoresMat - valoresMat
Rule 141   eMat -> p
Rule 142   p -> p * exp
Rule 143   p -> p / exp
Rule 144   p -> p % exp
Rule 145   p -> valoresMat * exp
Rule 146   p -> valoresMat / exp
Rule 147   p -> valoresMat % exp
Rule 148   p -> p * valoresMat
Rule 149   p -> p / valoresMat
Rule 150   p -> p % valoresMat
Rule 151   p -> valoresMat * valoresMat
Rule 152   p -> valoresMat / valoresMat
Rule 153   p -> valoresMat % valoresMat
Rule 154   p -> exp
Rule 155   exp -> exp ^ iSing
Rule 156   exp -> valoresMat ^ iSing
Rule 157   exp -> exp ^ valoresMat
Rule 158   exp -> valoresMat ^ valoresMat
Rule 159   exp -> iSing
Rule 160   iSing -> - paren
Rule 161   iSing -> + paren
Rule 162   iSing -> - valoresMat
Rule 163   iSing -> + valoresMat
Rule 164   iSing -> paren
Rule 165   paren -> ( eMat )
Rule 166   paren -> ( valoresMat )
Rule 167   valoresBool -> BOOL
Rule 168   valoresBool -> funcBool
Rule 169   valoresBool -> varYVals
Rule 170   valoresBool -> varsOps
Rule 171   valoresBool -> ( ternarioBool )
Rule 172   valoresBool -> <empty>
Rule 173   ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool
Rule 174   ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool
Rule 175   valoresTernarioBool -> BOOL
Rule 176   valoresTernarioBool -> funcBool
Rule 177   valoresTernarioBool -> ternarioBool
Rule 178   valoresTernarioBool -> ( ternarioBool )
Rule 179   valoresTernarioBool -> expBool
Rule 180   ternario -> ternarioMat
Rule 181   ternario -> ternarioBool
Rule 182   ternario -> ( ternarioMat )
Rule 183   ternario -> ( ternarioBool )
Rule 184   ternario -> ternarioVars
Rule 185   ternario -> ( ternarioVars )
Rule 186   expBool -> expBool OR and
Rule 187   expBool -> valoresBool OR and
Rule 188   expBool -> expBool OR valoresBool
Rule 189   expBool -> valoresBool OR valoresBool
Rule 190   expBool -> and
Rule 191   and -> and AND eq
Rule 192   and -> valoresBool AND eq
Rule 193   and -> and AND valoresBool
Rule 194   and -> valoresBool AND valoresBool
Rule 195   and -> eq
Rule 196   eq -> eq EQEQ mayor
Rule 197   eq -> eq DISTINTO mayor
Rule 198   eq -> tCompare EQEQ mayor
Rule 199   eq -> tCompare DISTINTO mayor
Rule 200   eq -> eq EQEQ tCompare
Rule 201   eq -> eq DISTINTO tCompare
Rule 202   eq -> tCompare EQEQ tCompare
Rule 203   eq -> tCompare DISTINTO tCompare
Rule 204   eq -> mayor
Rule 205   tCompare -> eMat
Rule 206   tCompare -> varsOps
Rule 207   tCompare -> varYVals
Rule 208   tCompare -> INT
Rule 209   tCompare -> funcInt
Rule 210   tCompare -> FLOAT
Rule 211   tCompare -> ( ternarioBool )
Rule 212   tCompare -> ( ternarioMat )
Rule 213   mayor -> tCompare > tCompare
Rule 214   mayor -> menor
Rule 215   menor -> tCompare < tCompare
Rule 216   menor -> not
Rule 217   not -> NOT not
Rule 218   not -> NOT valoresBool
Rule 219   not -> parenBool
Rule 220   parenBool -> ( expBool )

Terminals, with rules where they appear

%                    : 144 147 150 153
(                    : 6 7 8 9 14 15 16 17 18 19 20 21 24 25 31 32 46 47 48 49 50 90 123 132 165 166 171 178 182 183 185 211 212 220
)                    : 6 7 8 9 14 15 16 17 18 19 20 21 24 25 31 32 46 47 48 49 50 90 123 132 165 166 171 178 182 183 185 211 212 220
*                    : 142 145 148 151
+                    : 133 135 137 139 161 163
,                    : 46 49 51 55 104
-                    : 134 136 138 140 160 162
.                    : 71 95 116
/                    : 143 146 149 152
:                    : 75 76 77 78 79 80 81 82 83 84 104 105 124 125 173 174
;                    : 24 25 26 27 28 29 30 32 32
<                    : 215
=                    : 115 116
>                    : 213
?                    : 75 76 77 78 79 80 81 82 83 84 124 125 173 174
AND                  : 191 192 193 194
BEGIN                : 74
BOOL                 : 64 167 175
CAPITALIZAR          : 48
COLINEALES           : 49
COMMENT              : 2 12 16 19 20 21 21
DISTINTO             : 197 199 201 203
DIVEQ                : 112
DO                   : 24 25
ELSE                 : 7 8 14 15 16 17 18 19 20 21
END                  : 73
EQEQ                 : 196 198 200 202
FLOAT                : 62 118 127 210
FOR                  : 32
ID                   : 71 93 96 104 105 116 116
IF                   : 6 7 8 9 14 15 16 17 18 19 20 21
INT                  : 61 97 98 117 126 208
LENGTH               : 47
MASEQ                : 113
MASMAS               : 107 108
MENOSEQ              : 114
MENOSMENOS           : 106 109
MULEQ                : 111
MULTIESCALAR         : 46
NOT                  : 217 218
OR                   : 186 187 188 189
PRINT                : 50
RES                  : 70 92
RETURN               : 29
STRING               : 63 122 129
WHILE                : 24 25 31
[                    : 54 97 98 99 100 101 102
]                    : 54 97 98 99 100 101 102
^                    : 155 156 157 158
error                : 
{                    : 7 9 14 14 15 16 17 22 24 103
}                    : 7 9 14 14 15 16 17 22 24 103

Nonterminals, with rules where they appear

and                  : 186 187 190 191 193
atributos            : 69 91
campos               : 103 104
com                  : 12 16 19 20 21 21
cosaBooleana         : 6 7 8 9 14 15 16 17 18 19 20 21
eMat                 : 57 101 102 130 133 134 137 138 165 205
elem                 : 54 55
empty                : 3 13 36 40 52
eq                   : 191 192 195 196 197 200 201
exp                  : 142 143 144 145 146 147 154 155 157
expBool              : 33 58 80 81 82 83 84 125 174 179 186 188 220
func                 : 27 39
funcBool             : 45 168 176
funcInt              : 43 119 128 209
funcReturn           : 41 59
funcString           : 44
funcVoid             : 42
g                    : 1 2 7 9 14 14 15 16 17 22 24 0
iSing                : 155 156 159
lAbierta             : 4 7 8 10
lCerrada             : 5 8 15 16 17 18 18 19 19 20 20 21 21 23 25
linea                : 1 6
loop                 : 10 22 23
m                    : 96 98 99 101
mayor                : 196 197 198 199 204
menor                : 214
not                  : 216 217
p                    : 133 134 135 136 141 142 143 144 148 149 150
param                : 46
paren                : 160 161 164
parenBool            : 219
primParam            : 32
reg                  : 60 87
sentencia            : 11
tCompare             : 198 199 200 201 202 202 203 203 213 213 215 215
tercerParam          : 32
ternario             : 68
ternarioBool         : 171 177 178 181 183 211
ternarioMat          : 123 131 132 180 182 212
ternarioVars         : 89 90 184 185
valores              : 24 25 31 32 46 46 47 48 49 49 50 51 55 56 104 105 110
valoresAsig          : 111 112 113 114 115 116
valoresBool          : 34 75 76 77 78 79 124 173 187 188 189 189 192 193 194 194 218
valoresCampos        : 71
valoresMat           : 135 136 137 138 139 139 140 140 145 146 147 148 149 150 151 151 152 152 153 153 156 157 158 158 162 163 166
valoresTernarioBool  : 78 79 83 84 173 173 174 174
valoresTernarioMat   : 76 77 81 82 124 124 125 125
valoresTernarioVars  : 75 75 76 77 78 79 80 80 81 82 83 84
varAsig              : 28 35 38
varYVals             : 65 72 86 95 99 100 106 107 108 109 111 112 113 114 115 120 169 207
varsOps              : 26 37 66 85 121 170 206
vec                  : 67 88
vecVal               : 94 95

Parsing method: LALR

state 0

    (0) S' -> . g
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (53) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . DO { g } WHILE ( valores ) ;
    (25) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (31) loop -> . WHILE ( valores )
    (32) loop -> . FOR ( primParam ; valores ; tercerParam )
    (26) sentencia -> . varsOps ;
    (27) sentencia -> . func ;
    (28) sentencia -> . varAsig ;
    (29) sentencia -> . RETURN ;
    (30) sentencia -> . ;
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (41) func -> . funcReturn
    (42) func -> . funcVoid
    (111) varAsig -> . varYVals MULEQ valoresAsig
    (112) varAsig -> . varYVals DIVEQ valoresAsig
    (113) varAsig -> . varYVals MASEQ valoresAsig
    (114) varAsig -> . varYVals MENOSEQ valoresAsig
    (115) varAsig -> . varYVals = valoresAsig
    (116) varAsig -> . ID . ID = valoresAsig
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (50) funcVoid -> . PRINT ( valores )
    (96) vecVal -> . ID m
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )

    COMMENT         shift and go to state 9
    $end            reduce using rule 53 (empty -> .)
    IF              shift and go to state 21
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    empty                          shift and go to state 13
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 22
    g                              shift and go to state 23
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 29
    loop                           shift and go to state 31
    varYVals                       shift and go to state 11
    linea                          shift and go to state 32

state 1

    (24) lCerrada -> DO . { g } WHILE ( valores ) ;
    (25) lCerrada -> DO . lCerrada WHILE ( valores ) ;
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . DO { g } WHILE ( valores ) ;
    (25) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (26) sentencia -> . varsOps ;
    (27) sentencia -> . func ;
    (28) sentencia -> . varAsig ;
    (29) sentencia -> . RETURN ;
    (30) sentencia -> . ;
    (31) loop -> . WHILE ( valores )
    (32) loop -> . FOR ( primParam ; valores ; tercerParam )
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (41) func -> . funcReturn
    (42) func -> . funcVoid
    (111) varAsig -> . varYVals MULEQ valoresAsig
    (112) varAsig -> . varYVals DIVEQ valoresAsig
    (113) varAsig -> . varYVals MASEQ valoresAsig
    (114) varAsig -> . varYVals MENOSEQ valoresAsig
    (115) varAsig -> . varYVals = valoresAsig
    (116) varAsig -> . ID . ID = valoresAsig
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (50) funcVoid -> . PRINT ( valores )
    (96) vecVal -> . ID m
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )

    {               shift and go to state 35
    IF              shift and go to state 33
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 22
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 34
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 36

state 2

    (29) sentencia -> RETURN . ;

    ;               shift and go to state 37


state 3

    (45) funcReturn -> funcBool .

    )               reduce using rule 45 (funcReturn -> funcBool .)
    ;               reduce using rule 45 (funcReturn -> funcBool .)


state 4

    (49) funcBool -> COLINEALES . ( valores , valores )

    (               shift and go to state 38


state 5

    (43) funcReturn -> funcInt .

    )               reduce using rule 43 (funcReturn -> funcInt .)
    ;               reduce using rule 43 (funcReturn -> funcInt .)


state 6

    (31) loop -> WHILE . ( valores )

    (               shift and go to state 39


state 7

    (50) funcVoid -> PRINT . ( valores )

    (               shift and go to state 40


state 8

    (94) varYVals -> vecVal .
    (95) varYVals -> vecVal . . varYVals

    MASMAS          reduce using rule 94 (varYVals -> vecVal .)
    MENOSMENOS      reduce using rule 94 (varYVals -> vecVal .)
    ,               reduce using rule 94 (varYVals -> vecVal .)
    +               reduce using rule 94 (varYVals -> vecVal .)
    -               reduce using rule 94 (varYVals -> vecVal .)
    *               reduce using rule 94 (varYVals -> vecVal .)
    /               reduce using rule 94 (varYVals -> vecVal .)
    %               reduce using rule 94 (varYVals -> vecVal .)
    ^               reduce using rule 94 (varYVals -> vecVal .)
    OR              reduce using rule 94 (varYVals -> vecVal .)
    AND             reduce using rule 94 (varYVals -> vecVal .)
    ?               reduce using rule 94 (varYVals -> vecVal .)
    EQEQ            reduce using rule 94 (varYVals -> vecVal .)
    DISTINTO        reduce using rule 94 (varYVals -> vecVal .)
    >               reduce using rule 94 (varYVals -> vecVal .)
    <               reduce using rule 94 (varYVals -> vecVal .)
    ;               reduce using rule 94 (varYVals -> vecVal .)
    )               reduce using rule 94 (varYVals -> vecVal .)
    ]               reduce using rule 94 (varYVals -> vecVal .)
    :               reduce using rule 94 (varYVals -> vecVal .)
    }               reduce using rule 94 (varYVals -> vecVal .)
    MULEQ           reduce using rule 94 (varYVals -> vecVal .)
    DIVEQ           reduce using rule 94 (varYVals -> vecVal .)
    MASEQ           reduce using rule 94 (varYVals -> vecVal .)
    MENOSEQ         reduce using rule 94 (varYVals -> vecVal .)
    =               reduce using rule 94 (varYVals -> vecVal .)
    .               shift and go to state 41


state 9

    (2) g -> COMMENT . g
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (53) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . DO { g } WHILE ( valores ) ;
    (25) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (31) loop -> . WHILE ( valores )
    (32) loop -> . FOR ( primParam ; valores ; tercerParam )
    (26) sentencia -> . varsOps ;
    (27) sentencia -> . func ;
    (28) sentencia -> . varAsig ;
    (29) sentencia -> . RETURN ;
    (30) sentencia -> . ;
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (41) func -> . funcReturn
    (42) func -> . funcVoid
    (111) varAsig -> . varYVals MULEQ valoresAsig
    (112) varAsig -> . varYVals DIVEQ valoresAsig
    (113) varAsig -> . varYVals MASEQ valoresAsig
    (114) varAsig -> . varYVals MENOSEQ valoresAsig
    (115) varAsig -> . varYVals = valoresAsig
    (116) varAsig -> . ID . ID = valoresAsig
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (50) funcVoid -> . PRINT ( valores )
    (96) vecVal -> . ID m
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )

    COMMENT         shift and go to state 9
    $end            reduce using rule 53 (empty -> .)
    }               reduce using rule 53 (empty -> .)
    IF              shift and go to state 21
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    empty                          shift and go to state 13
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 22
    g                              shift and go to state 42
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 29
    loop                           shift and go to state 31
    varYVals                       shift and go to state 11
    linea                          shift and go to state 32

state 10

    (11) lCerrada -> sentencia .

    ELSE            reduce using rule 11 (lCerrada -> sentencia .)
    COMMENT         reduce using rule 11 (lCerrada -> sentencia .)
    IF              reduce using rule 11 (lCerrada -> sentencia .)
    DO              reduce using rule 11 (lCerrada -> sentencia .)
    WHILE           reduce using rule 11 (lCerrada -> sentencia .)
    FOR             reduce using rule 11 (lCerrada -> sentencia .)
    RETURN          reduce using rule 11 (lCerrada -> sentencia .)
    ;               reduce using rule 11 (lCerrada -> sentencia .)
    MENOSMENOS      reduce using rule 11 (lCerrada -> sentencia .)
    MASMAS          reduce using rule 11 (lCerrada -> sentencia .)
    ID              reduce using rule 11 (lCerrada -> sentencia .)
    PRINT           reduce using rule 11 (lCerrada -> sentencia .)
    MULTIESCALAR    reduce using rule 11 (lCerrada -> sentencia .)
    LENGTH          reduce using rule 11 (lCerrada -> sentencia .)
    CAPITALIZAR     reduce using rule 11 (lCerrada -> sentencia .)
    COLINEALES      reduce using rule 11 (lCerrada -> sentencia .)
    $end            reduce using rule 11 (lCerrada -> sentencia .)
    }               reduce using rule 11 (lCerrada -> sentencia .)


state 11

    (108) varsOps -> varYVals . MASMAS
    (109) varsOps -> varYVals . MENOSMENOS
    (111) varAsig -> varYVals . MULEQ valoresAsig
    (112) varAsig -> varYVals . DIVEQ valoresAsig
    (113) varAsig -> varYVals . MASEQ valoresAsig
    (114) varAsig -> varYVals . MENOSEQ valoresAsig
    (115) varAsig -> varYVals . = valoresAsig

    MASMAS          shift and go to state 47
    MENOSMENOS      shift and go to state 44
    MULEQ           shift and go to state 48
    DIVEQ           shift and go to state 49
    MASEQ           shift and go to state 45
    MENOSEQ         shift and go to state 43
    =               shift and go to state 46


state 12

    (30) sentencia -> ; .

    WHILE           reduce using rule 30 (sentencia -> ; .)
    ELSE            reduce using rule 30 (sentencia -> ; .)
    COMMENT         reduce using rule 30 (sentencia -> ; .)
    IF              reduce using rule 30 (sentencia -> ; .)
    DO              reduce using rule 30 (sentencia -> ; .)
    FOR             reduce using rule 30 (sentencia -> ; .)
    RETURN          reduce using rule 30 (sentencia -> ; .)
    ;               reduce using rule 30 (sentencia -> ; .)
    MENOSMENOS      reduce using rule 30 (sentencia -> ; .)
    MASMAS          reduce using rule 30 (sentencia -> ; .)
    ID              reduce using rule 30 (sentencia -> ; .)
    PRINT           reduce using rule 30 (sentencia -> ; .)
    MULTIESCALAR    reduce using rule 30 (sentencia -> ; .)
    LENGTH          reduce using rule 30 (sentencia -> ; .)
    CAPITALIZAR     reduce using rule 30 (sentencia -> ; .)
    COLINEALES      reduce using rule 30 (sentencia -> ; .)
    $end            reduce using rule 30 (sentencia -> ; .)
    }               reduce using rule 30 (sentencia -> ; .)


state 13

    (3) g -> empty .

    $end            reduce using rule 3 (g -> empty .)
    }               reduce using rule 3 (g -> empty .)


state 14

    (26) sentencia -> varsOps . ;

    ;               shift and go to state 50


state 15

    (42) func -> funcVoid .

    ;               reduce using rule 42 (func -> funcVoid .)
    )               reduce using rule 42 (func -> funcVoid .)


state 16

    (106) varsOps -> MENOSMENOS . varYVals
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (96) vecVal -> . ID m

    ID              shift and go to state 52

    varYVals                       shift and go to state 51
    vecVal                         shift and go to state 8

state 17

    (32) loop -> FOR . ( primParam ; valores ; tercerParam )

    (               shift and go to state 53


state 18

    (47) funcInt -> LENGTH . ( valores )

    (               shift and go to state 54


state 19

    (27) sentencia -> func . ;

    ;               shift and go to state 55


state 20

    (116) varAsig -> ID . . ID = valoresAsig
    (93) varYVals -> ID .
    (96) vecVal -> ID . m
    (97) m -> . [ INT ]
    (98) m -> . [ INT ] m
    (99) m -> . [ varYVals ] m
    (100) m -> . [ varYVals ]
    (101) m -> . [ eMat ] m
    (102) m -> . [ eMat ]

    .               shift and go to state 57
    MASMAS          reduce using rule 93 (varYVals -> ID .)
    MENOSMENOS      reduce using rule 93 (varYVals -> ID .)
    MULEQ           reduce using rule 93 (varYVals -> ID .)
    DIVEQ           reduce using rule 93 (varYVals -> ID .)
    MASEQ           reduce using rule 93 (varYVals -> ID .)
    MENOSEQ         reduce using rule 93 (varYVals -> ID .)
    =               reduce using rule 93 (varYVals -> ID .)
    [               shift and go to state 58

    m                              shift and go to state 56

state 21

    (6) lAbierta -> IF . ( cosaBooleana ) linea
    (7) lAbierta -> IF . ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> IF . ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> IF . ( cosaBooleana ) { g }
    (14) lCerrada -> IF . ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF . ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada

    (               shift and go to state 59


state 22

    (28) sentencia -> varAsig . ;

    ;               shift and go to state 60


state 23

    (0) S' -> g .



state 24

    (44) funcReturn -> funcString .

    )               reduce using rule 44 (funcReturn -> funcString .)
    ,               reduce using rule 44 (funcReturn -> funcString .)
    ;               reduce using rule 44 (funcReturn -> funcString .)
    ]               reduce using rule 44 (funcReturn -> funcString .)
    }               reduce using rule 44 (funcReturn -> funcString .)


state 25

    (46) funcInt -> MULTIESCALAR . ( valores , valores param )

    (               shift and go to state 61


state 26

    (41) func -> funcReturn .

    ;               reduce using rule 41 (func -> funcReturn .)
    )               reduce using rule 41 (func -> funcReturn .)


state 27

    (48) funcString -> CAPITALIZAR . ( valores )

    (               shift and go to state 62


state 28

    (5) linea -> lCerrada .

    COMMENT         reduce using rule 5 (linea -> lCerrada .)
    IF              reduce using rule 5 (linea -> lCerrada .)
    DO              reduce using rule 5 (linea -> lCerrada .)
    WHILE           reduce using rule 5 (linea -> lCerrada .)
    FOR             reduce using rule 5 (linea -> lCerrada .)
    RETURN          reduce using rule 5 (linea -> lCerrada .)
    ;               reduce using rule 5 (linea -> lCerrada .)
    MENOSMENOS      reduce using rule 5 (linea -> lCerrada .)
    MASMAS          reduce using rule 5 (linea -> lCerrada .)
    ID              reduce using rule 5 (linea -> lCerrada .)
    PRINT           reduce using rule 5 (linea -> lCerrada .)
    MULTIESCALAR    reduce using rule 5 (linea -> lCerrada .)
    LENGTH          reduce using rule 5 (linea -> lCerrada .)
    CAPITALIZAR     reduce using rule 5 (linea -> lCerrada .)
    COLINEALES      reduce using rule 5 (linea -> lCerrada .)
    }               reduce using rule 5 (linea -> lCerrada .)
    $end            reduce using rule 5 (linea -> lCerrada .)


state 29

    (4) linea -> lAbierta .

    COMMENT         reduce using rule 4 (linea -> lAbierta .)
    IF              reduce using rule 4 (linea -> lAbierta .)
    DO              reduce using rule 4 (linea -> lAbierta .)
    WHILE           reduce using rule 4 (linea -> lAbierta .)
    FOR             reduce using rule 4 (linea -> lAbierta .)
    RETURN          reduce using rule 4 (linea -> lAbierta .)
    ;               reduce using rule 4 (linea -> lAbierta .)
    MENOSMENOS      reduce using rule 4 (linea -> lAbierta .)
    MASMAS          reduce using rule 4 (linea -> lAbierta .)
    ID              reduce using rule 4 (linea -> lAbierta .)
    PRINT           reduce using rule 4 (linea -> lAbierta .)
    MULTIESCALAR    reduce using rule 4 (linea -> lAbierta .)
    LENGTH          reduce using rule 4 (linea -> lAbierta .)
    CAPITALIZAR     reduce using rule 4 (linea -> lAbierta .)
    COLINEALES      reduce using rule 4 (linea -> lAbierta .)
    $end            reduce using rule 4 (linea -> lAbierta .)
    }               reduce using rule 4 (linea -> lAbierta .)


state 30

    (107) varsOps -> MASMAS . varYVals
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (96) vecVal -> . ID m

    ID              shift and go to state 52

    varYVals                       shift and go to state 63
    vecVal                         shift and go to state 8

state 31

    (10) lAbierta -> loop . lAbierta
    (22) lCerrada -> loop . { g }
    (23) lCerrada -> loop . lCerrada
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . DO { g } WHILE ( valores ) ;
    (25) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (31) loop -> . WHILE ( valores )
    (32) loop -> . FOR ( primParam ; valores ; tercerParam )
    (26) sentencia -> . varsOps ;
    (27) sentencia -> . func ;
    (28) sentencia -> . varAsig ;
    (29) sentencia -> . RETURN ;
    (30) sentencia -> . ;
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (41) func -> . funcReturn
    (42) func -> . funcVoid
    (111) varAsig -> . varYVals MULEQ valoresAsig
    (112) varAsig -> . varYVals DIVEQ valoresAsig
    (113) varAsig -> . varYVals MASEQ valoresAsig
    (114) varAsig -> . varYVals MENOSEQ valoresAsig
    (115) varAsig -> . varYVals = valoresAsig
    (116) varAsig -> . ID . ID = valoresAsig
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (50) funcVoid -> . PRINT ( valores )
    (96) vecVal -> . ID m
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )

    {               shift and go to state 66
    IF              shift and go to state 21
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 22
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 64
    lAbierta                       shift and go to state 65
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 31

state 32

    (1) g -> linea . g
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (53) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . DO { g } WHILE ( valores ) ;
    (25) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (31) loop -> . WHILE ( valores )
    (32) loop -> . FOR ( primParam ; valores ; tercerParam )
    (26) sentencia -> . varsOps ;
    (27) sentencia -> . func ;
    (28) sentencia -> . varAsig ;
    (29) sentencia -> . RETURN ;
    (30) sentencia -> . ;
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (41) func -> . funcReturn
    (42) func -> . funcVoid
    (111) varAsig -> . varYVals MULEQ valoresAsig
    (112) varAsig -> . varYVals DIVEQ valoresAsig
    (113) varAsig -> . varYVals MASEQ valoresAsig
    (114) varAsig -> . varYVals MENOSEQ valoresAsig
    (115) varAsig -> . varYVals = valoresAsig
    (116) varAsig -> . ID . ID = valoresAsig
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (50) funcVoid -> . PRINT ( valores )
    (96) vecVal -> . ID m
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )

    COMMENT         shift and go to state 9
    $end            reduce using rule 53 (empty -> .)
    }               reduce using rule 53 (empty -> .)
    IF              shift and go to state 21
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    empty                          shift and go to state 13
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 22
    g                              shift and go to state 67
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 29
    loop                           shift and go to state 31
    varYVals                       shift and go to state 11
    linea                          shift and go to state 32

state 33

    (14) lCerrada -> IF . ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF . ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada

    (               shift and go to state 68


state 34

    (25) lCerrada -> DO lCerrada . WHILE ( valores ) ;

    WHILE           shift and go to state 69


state 35

    (24) lCerrada -> DO { . g } WHILE ( valores ) ;
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (53) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . DO { g } WHILE ( valores ) ;
    (25) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (31) loop -> . WHILE ( valores )
    (32) loop -> . FOR ( primParam ; valores ; tercerParam )
    (26) sentencia -> . varsOps ;
    (27) sentencia -> . func ;
    (28) sentencia -> . varAsig ;
    (29) sentencia -> . RETURN ;
    (30) sentencia -> . ;
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (41) func -> . funcReturn
    (42) func -> . funcVoid
    (111) varAsig -> . varYVals MULEQ valoresAsig
    (112) varAsig -> . varYVals DIVEQ valoresAsig
    (113) varAsig -> . varYVals MASEQ valoresAsig
    (114) varAsig -> . varYVals MENOSEQ valoresAsig
    (115) varAsig -> . varYVals = valoresAsig
    (116) varAsig -> . ID . ID = valoresAsig
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (50) funcVoid -> . PRINT ( valores )
    (96) vecVal -> . ID m
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )

    COMMENT         shift and go to state 9
    }               reduce using rule 53 (empty -> .)
    IF              shift and go to state 21
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    linea                          shift and go to state 32
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    empty                          shift and go to state 13
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 22
    g                              shift and go to state 70
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 29
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 31

state 36

    (22) lCerrada -> loop . { g }
    (23) lCerrada -> loop . lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . DO { g } WHILE ( valores ) ;
    (25) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (26) sentencia -> . varsOps ;
    (27) sentencia -> . func ;
    (28) sentencia -> . varAsig ;
    (29) sentencia -> . RETURN ;
    (30) sentencia -> . ;
    (31) loop -> . WHILE ( valores )
    (32) loop -> . FOR ( primParam ; valores ; tercerParam )
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (41) func -> . funcReturn
    (42) func -> . funcVoid
    (111) varAsig -> . varYVals MULEQ valoresAsig
    (112) varAsig -> . varYVals DIVEQ valoresAsig
    (113) varAsig -> . varYVals MASEQ valoresAsig
    (114) varAsig -> . varYVals MENOSEQ valoresAsig
    (115) varAsig -> . varYVals = valoresAsig
    (116) varAsig -> . ID . ID = valoresAsig
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (50) funcVoid -> . PRINT ( valores )
    (96) vecVal -> . ID m
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )

    {               shift and go to state 66
    IF              shift and go to state 33
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 22
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 64
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 36

state 37

    (29) sentencia -> RETURN ; .

    WHILE           reduce using rule 29 (sentencia -> RETURN ; .)
    ELSE            reduce using rule 29 (sentencia -> RETURN ; .)
    COMMENT         reduce using rule 29 (sentencia -> RETURN ; .)
    IF              reduce using rule 29 (sentencia -> RETURN ; .)
    DO              reduce using rule 29 (sentencia -> RETURN ; .)
    FOR             reduce using rule 29 (sentencia -> RETURN ; .)
    RETURN          reduce using rule 29 (sentencia -> RETURN ; .)
    ;               reduce using rule 29 (sentencia -> RETURN ; .)
    MENOSMENOS      reduce using rule 29 (sentencia -> RETURN ; .)
    MASMAS          reduce using rule 29 (sentencia -> RETURN ; .)
    ID              reduce using rule 29 (sentencia -> RETURN ; .)
    PRINT           reduce using rule 29 (sentencia -> RETURN ; .)
    MULTIESCALAR    reduce using rule 29 (sentencia -> RETURN ; .)
    LENGTH          reduce using rule 29 (sentencia -> RETURN ; .)
    CAPITALIZAR     reduce using rule 29 (sentencia -> RETURN ; .)
    COLINEALES      reduce using rule 29 (sentencia -> RETURN ; .)
    $end            reduce using rule 29 (sentencia -> RETURN ; .)
    }               reduce using rule 29 (sentencia -> RETURN ; .)


state 38

    (49) funcBool -> COLINEALES ( . valores , valores )
    (57) valores -> . eMat
    (58) valores -> . expBool
    (59) valores -> . funcReturn
    (60) valores -> . reg
    (61) valores -> . INT
    (62) valores -> . FLOAT
    (63) valores -> . STRING
    (64) valores -> . BOOL
    (65) valores -> . varYVals
    (66) valores -> . varsOps
    (67) valores -> . vec
    (68) valores -> . ternario
    (69) valores -> . atributos
    (70) valores -> . RES
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (103) reg -> . { campos }
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (54) vec -> . [ elem ]
    (180) ternario -> . ternarioMat
    (181) ternario -> . ternarioBool
    (182) ternario -> . ( ternarioMat )
    (183) ternario -> . ( ternarioBool )
    (184) ternario -> . ternarioVars
    (185) ternario -> . ( ternarioVars )
    (71) atributos -> . ID . valoresCampos
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )
    (96) vecVal -> . ID m
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    ?               reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 101
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 39

    (31) loop -> WHILE ( . valores )
    (57) valores -> . eMat
    (58) valores -> . expBool
    (59) valores -> . funcReturn
    (60) valores -> . reg
    (61) valores -> . INT
    (62) valores -> . FLOAT
    (63) valores -> . STRING
    (64) valores -> . BOOL
    (65) valores -> . varYVals
    (66) valores -> . varsOps
    (67) valores -> . vec
    (68) valores -> . ternario
    (69) valores -> . atributos
    (70) valores -> . RES
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (103) reg -> . { campos }
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (54) vec -> . [ elem ]
    (180) ternario -> . ternarioMat
    (181) ternario -> . ternarioBool
    (182) ternario -> . ( ternarioMat )
    (183) ternario -> . ( ternarioBool )
    (184) ternario -> . ternarioVars
    (185) ternario -> . ( ternarioVars )
    (71) atributos -> . ID . valoresCampos
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )
    (96) vecVal -> . ID m
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    ?               reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 111
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 40

    (50) funcVoid -> PRINT ( . valores )
    (57) valores -> . eMat
    (58) valores -> . expBool
    (59) valores -> . funcReturn
    (60) valores -> . reg
    (61) valores -> . INT
    (62) valores -> . FLOAT
    (63) valores -> . STRING
    (64) valores -> . BOOL
    (65) valores -> . varYVals
    (66) valores -> . varsOps
    (67) valores -> . vec
    (68) valores -> . ternario
    (69) valores -> . atributos
    (70) valores -> . RES
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (103) reg -> . { campos }
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (54) vec -> . [ elem ]
    (180) ternario -> . ternarioMat
    (181) ternario -> . ternarioBool
    (182) ternario -> . ( ternarioMat )
    (183) ternario -> . ( ternarioBool )
    (184) ternario -> . ternarioVars
    (185) ternario -> . ( ternarioVars )
    (71) atributos -> . ID . valoresCampos
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )
    (96) vecVal -> . ID m
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    ?               reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 112
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 41

    (95) varYVals -> vecVal . . varYVals
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (96) vecVal -> . ID m

    ID              shift and go to state 52

    varYVals                       shift and go to state 113
    vecVal                         shift and go to state 8

state 42

    (2) g -> COMMENT g .

    $end            reduce using rule 2 (g -> COMMENT g .)
    }               reduce using rule 2 (g -> COMMENT g .)


state 43

    (114) varAsig -> varYVals MENOSEQ . valoresAsig
    (110) valoresAsig -> . valores
    (57) valores -> . eMat
    (58) valores -> . expBool
    (59) valores -> . funcReturn
    (60) valores -> . reg
    (61) valores -> . INT
    (62) valores -> . FLOAT
    (63) valores -> . STRING
    (64) valores -> . BOOL
    (65) valores -> . varYVals
    (66) valores -> . varsOps
    (67) valores -> . vec
    (68) valores -> . ternario
    (69) valores -> . atributos
    (70) valores -> . RES
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (103) reg -> . { campos }
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (54) vec -> . [ elem ]
    (180) ternario -> . ternarioMat
    (181) ternario -> . ternarioBool
    (182) ternario -> . ( ternarioMat )
    (183) ternario -> . ( ternarioBool )
    (184) ternario -> . ternarioVars
    (185) ternario -> . ( ternarioVars )
    (71) atributos -> . ID . valoresCampos
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )
    (96) vecVal -> . ID m
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    ?               reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    valoresAsig                    shift and go to state 114
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 115
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 44

    (109) varsOps -> varYVals MENOSMENOS .

    )               reduce using rule 109 (varsOps -> varYVals MENOSMENOS .)
    +               reduce using rule 109 (varsOps -> varYVals MENOSMENOS .)
    -               reduce using rule 109 (varsOps -> varYVals MENOSMENOS .)
    *               reduce using rule 109 (varsOps -> varYVals MENOSMENOS .)
    /               reduce using rule 109 (varsOps -> varYVals MENOSMENOS .)
    %               reduce using rule 109 (varsOps -> varYVals MENOSMENOS .)
    ^               reduce using rule 109 (varsOps -> varYVals MENOSMENOS .)
    OR              reduce using rule 109 (varsOps -> varYVals MENOSMENOS .)
    AND             reduce using rule 109 (varsOps -> varYVals MENOSMENOS .)
    ?               reduce using rule 109 (varsOps -> varYVals MENOSMENOS .)
    EQEQ            reduce using rule 109 (varsOps -> varYVals MENOSMENOS .)
    DISTINTO        reduce using rule 109 (varsOps -> varYVals MENOSMENOS .)
    >               reduce using rule 109 (varsOps -> varYVals MENOSMENOS .)
    <               reduce using rule 109 (varsOps -> varYVals MENOSMENOS .)
    :               reduce using rule 109 (varsOps -> varYVals MENOSMENOS .)
    ;               reduce using rule 109 (varsOps -> varYVals MENOSMENOS .)
    ,               reduce using rule 109 (varsOps -> varYVals MENOSMENOS .)
    ]               reduce using rule 109 (varsOps -> varYVals MENOSMENOS .)
    }               reduce using rule 109 (varsOps -> varYVals MENOSMENOS .)


state 45

    (113) varAsig -> varYVals MASEQ . valoresAsig
    (110) valoresAsig -> . valores
    (57) valores -> . eMat
    (58) valores -> . expBool
    (59) valores -> . funcReturn
    (60) valores -> . reg
    (61) valores -> . INT
    (62) valores -> . FLOAT
    (63) valores -> . STRING
    (64) valores -> . BOOL
    (65) valores -> . varYVals
    (66) valores -> . varsOps
    (67) valores -> . vec
    (68) valores -> . ternario
    (69) valores -> . atributos
    (70) valores -> . RES
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (103) reg -> . { campos }
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (54) vec -> . [ elem ]
    (180) ternario -> . ternarioMat
    (181) ternario -> . ternarioBool
    (182) ternario -> . ( ternarioMat )
    (183) ternario -> . ( ternarioBool )
    (184) ternario -> . ternarioVars
    (185) ternario -> . ( ternarioVars )
    (71) atributos -> . ID . valoresCampos
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )
    (96) vecVal -> . ID m
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    ?               reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    valoresAsig                    shift and go to state 116
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 115
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 46

    (115) varAsig -> varYVals = . valoresAsig
    (110) valoresAsig -> . valores
    (57) valores -> . eMat
    (58) valores -> . expBool
    (59) valores -> . funcReturn
    (60) valores -> . reg
    (61) valores -> . INT
    (62) valores -> . FLOAT
    (63) valores -> . STRING
    (64) valores -> . BOOL
    (65) valores -> . varYVals
    (66) valores -> . varsOps
    (67) valores -> . vec
    (68) valores -> . ternario
    (69) valores -> . atributos
    (70) valores -> . RES
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (103) reg -> . { campos }
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (54) vec -> . [ elem ]
    (180) ternario -> . ternarioMat
    (181) ternario -> . ternarioBool
    (182) ternario -> . ( ternarioMat )
    (183) ternario -> . ( ternarioBool )
    (184) ternario -> . ternarioVars
    (185) ternario -> . ( ternarioVars )
    (71) atributos -> . ID . valoresCampos
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )
    (96) vecVal -> . ID m
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    ?               reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    valoresAsig                    shift and go to state 117
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 115
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 47

    (108) varsOps -> varYVals MASMAS .

    )               reduce using rule 108 (varsOps -> varYVals MASMAS .)
    +               reduce using rule 108 (varsOps -> varYVals MASMAS .)
    -               reduce using rule 108 (varsOps -> varYVals MASMAS .)
    *               reduce using rule 108 (varsOps -> varYVals MASMAS .)
    /               reduce using rule 108 (varsOps -> varYVals MASMAS .)
    %               reduce using rule 108 (varsOps -> varYVals MASMAS .)
    ^               reduce using rule 108 (varsOps -> varYVals MASMAS .)
    OR              reduce using rule 108 (varsOps -> varYVals MASMAS .)
    AND             reduce using rule 108 (varsOps -> varYVals MASMAS .)
    ?               reduce using rule 108 (varsOps -> varYVals MASMAS .)
    EQEQ            reduce using rule 108 (varsOps -> varYVals MASMAS .)
    DISTINTO        reduce using rule 108 (varsOps -> varYVals MASMAS .)
    >               reduce using rule 108 (varsOps -> varYVals MASMAS .)
    <               reduce using rule 108 (varsOps -> varYVals MASMAS .)
    :               reduce using rule 108 (varsOps -> varYVals MASMAS .)
    ;               reduce using rule 108 (varsOps -> varYVals MASMAS .)
    ,               reduce using rule 108 (varsOps -> varYVals MASMAS .)
    ]               reduce using rule 108 (varsOps -> varYVals MASMAS .)
    }               reduce using rule 108 (varsOps -> varYVals MASMAS .)


state 48

    (111) varAsig -> varYVals MULEQ . valoresAsig
    (110) valoresAsig -> . valores
    (57) valores -> . eMat
    (58) valores -> . expBool
    (59) valores -> . funcReturn
    (60) valores -> . reg
    (61) valores -> . INT
    (62) valores -> . FLOAT
    (63) valores -> . STRING
    (64) valores -> . BOOL
    (65) valores -> . varYVals
    (66) valores -> . varsOps
    (67) valores -> . vec
    (68) valores -> . ternario
    (69) valores -> . atributos
    (70) valores -> . RES
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (103) reg -> . { campos }
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (54) vec -> . [ elem ]
    (180) ternario -> . ternarioMat
    (181) ternario -> . ternarioBool
    (182) ternario -> . ( ternarioMat )
    (183) ternario -> . ( ternarioBool )
    (184) ternario -> . ternarioVars
    (185) ternario -> . ( ternarioVars )
    (71) atributos -> . ID . valoresCampos
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )
    (96) vecVal -> . ID m
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    ?               reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    valoresAsig                    shift and go to state 118
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 115
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 49

    (112) varAsig -> varYVals DIVEQ . valoresAsig
    (110) valoresAsig -> . valores
    (57) valores -> . eMat
    (58) valores -> . expBool
    (59) valores -> . funcReturn
    (60) valores -> . reg
    (61) valores -> . INT
    (62) valores -> . FLOAT
    (63) valores -> . STRING
    (64) valores -> . BOOL
    (65) valores -> . varYVals
    (66) valores -> . varsOps
    (67) valores -> . vec
    (68) valores -> . ternario
    (69) valores -> . atributos
    (70) valores -> . RES
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (103) reg -> . { campos }
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (54) vec -> . [ elem ]
    (180) ternario -> . ternarioMat
    (181) ternario -> . ternarioBool
    (182) ternario -> . ( ternarioMat )
    (183) ternario -> . ( ternarioBool )
    (184) ternario -> . ternarioVars
    (185) ternario -> . ( ternarioVars )
    (71) atributos -> . ID . valoresCampos
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )
    (96) vecVal -> . ID m
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    ?               reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    valoresAsig                    shift and go to state 119
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 115
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 50

    (26) sentencia -> varsOps ; .

    WHILE           reduce using rule 26 (sentencia -> varsOps ; .)
    ELSE            reduce using rule 26 (sentencia -> varsOps ; .)
    COMMENT         reduce using rule 26 (sentencia -> varsOps ; .)
    IF              reduce using rule 26 (sentencia -> varsOps ; .)
    DO              reduce using rule 26 (sentencia -> varsOps ; .)
    FOR             reduce using rule 26 (sentencia -> varsOps ; .)
    RETURN          reduce using rule 26 (sentencia -> varsOps ; .)
    ;               reduce using rule 26 (sentencia -> varsOps ; .)
    MENOSMENOS      reduce using rule 26 (sentencia -> varsOps ; .)
    MASMAS          reduce using rule 26 (sentencia -> varsOps ; .)
    ID              reduce using rule 26 (sentencia -> varsOps ; .)
    PRINT           reduce using rule 26 (sentencia -> varsOps ; .)
    MULTIESCALAR    reduce using rule 26 (sentencia -> varsOps ; .)
    LENGTH          reduce using rule 26 (sentencia -> varsOps ; .)
    CAPITALIZAR     reduce using rule 26 (sentencia -> varsOps ; .)
    COLINEALES      reduce using rule 26 (sentencia -> varsOps ; .)
    $end            reduce using rule 26 (sentencia -> varsOps ; .)
    }               reduce using rule 26 (sentencia -> varsOps ; .)


state 51

    (106) varsOps -> MENOSMENOS varYVals .

    )               reduce using rule 106 (varsOps -> MENOSMENOS varYVals .)
    +               reduce using rule 106 (varsOps -> MENOSMENOS varYVals .)
    -               reduce using rule 106 (varsOps -> MENOSMENOS varYVals .)
    *               reduce using rule 106 (varsOps -> MENOSMENOS varYVals .)
    /               reduce using rule 106 (varsOps -> MENOSMENOS varYVals .)
    %               reduce using rule 106 (varsOps -> MENOSMENOS varYVals .)
    ^               reduce using rule 106 (varsOps -> MENOSMENOS varYVals .)
    OR              reduce using rule 106 (varsOps -> MENOSMENOS varYVals .)
    AND             reduce using rule 106 (varsOps -> MENOSMENOS varYVals .)
    ?               reduce using rule 106 (varsOps -> MENOSMENOS varYVals .)
    EQEQ            reduce using rule 106 (varsOps -> MENOSMENOS varYVals .)
    DISTINTO        reduce using rule 106 (varsOps -> MENOSMENOS varYVals .)
    >               reduce using rule 106 (varsOps -> MENOSMENOS varYVals .)
    <               reduce using rule 106 (varsOps -> MENOSMENOS varYVals .)
    :               reduce using rule 106 (varsOps -> MENOSMENOS varYVals .)
    ;               reduce using rule 106 (varsOps -> MENOSMENOS varYVals .)
    ,               reduce using rule 106 (varsOps -> MENOSMENOS varYVals .)
    ]               reduce using rule 106 (varsOps -> MENOSMENOS varYVals .)
    }               reduce using rule 106 (varsOps -> MENOSMENOS varYVals .)


state 52

    (93) varYVals -> ID .
    (96) vecVal -> ID . m
    (97) m -> . [ INT ]
    (98) m -> . [ INT ] m
    (99) m -> . [ varYVals ] m
    (100) m -> . [ varYVals ]
    (101) m -> . [ eMat ] m
    (102) m -> . [ eMat ]

    MASMAS          reduce using rule 93 (varYVals -> ID .)
    MENOSMENOS      reduce using rule 93 (varYVals -> ID .)
    *               reduce using rule 93 (varYVals -> ID .)
    /               reduce using rule 93 (varYVals -> ID .)
    %               reduce using rule 93 (varYVals -> ID .)
    ^               reduce using rule 93 (varYVals -> ID .)
    +               reduce using rule 93 (varYVals -> ID .)
    -               reduce using rule 93 (varYVals -> ID .)
    ,               reduce using rule 93 (varYVals -> ID .)
    EQEQ            reduce using rule 93 (varYVals -> ID .)
    DISTINTO        reduce using rule 93 (varYVals -> ID .)
    >               reduce using rule 93 (varYVals -> ID .)
    <               reduce using rule 93 (varYVals -> ID .)
    )               reduce using rule 93 (varYVals -> ID .)
    ;               reduce using rule 93 (varYVals -> ID .)
    ]               reduce using rule 93 (varYVals -> ID .)
    AND             reduce using rule 93 (varYVals -> ID .)
    OR              reduce using rule 93 (varYVals -> ID .)
    ?               reduce using rule 93 (varYVals -> ID .)
    :               reduce using rule 93 (varYVals -> ID .)
    }               reduce using rule 93 (varYVals -> ID .)
    MULEQ           reduce using rule 93 (varYVals -> ID .)
    DIVEQ           reduce using rule 93 (varYVals -> ID .)
    MASEQ           reduce using rule 93 (varYVals -> ID .)
    MENOSEQ         reduce using rule 93 (varYVals -> ID .)
    =               reduce using rule 93 (varYVals -> ID .)
    [               shift and go to state 58

    m                              shift and go to state 56

state 53

    (32) loop -> FOR ( . primParam ; valores ; tercerParam )
    (35) primParam -> . varAsig
    (36) primParam -> . empty
    (111) varAsig -> . varYVals MULEQ valoresAsig
    (112) varAsig -> . varYVals DIVEQ valoresAsig
    (113) varAsig -> . varYVals MASEQ valoresAsig
    (114) varAsig -> . varYVals MENOSEQ valoresAsig
    (115) varAsig -> . varYVals = valoresAsig
    (116) varAsig -> . ID . ID = valoresAsig
    (53) empty -> .
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (96) vecVal -> . ID m

    ID              shift and go to state 20
    ;               reduce using rule 53 (empty -> .)

    varAsig                        shift and go to state 120
    primParam                      shift and go to state 121
    varYVals                       shift and go to state 122
    vecVal                         shift and go to state 8
    empty                          shift and go to state 123

state 54

    (47) funcInt -> LENGTH ( . valores )
    (57) valores -> . eMat
    (58) valores -> . expBool
    (59) valores -> . funcReturn
    (60) valores -> . reg
    (61) valores -> . INT
    (62) valores -> . FLOAT
    (63) valores -> . STRING
    (64) valores -> . BOOL
    (65) valores -> . varYVals
    (66) valores -> . varsOps
    (67) valores -> . vec
    (68) valores -> . ternario
    (69) valores -> . atributos
    (70) valores -> . RES
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (103) reg -> . { campos }
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (54) vec -> . [ elem ]
    (180) ternario -> . ternarioMat
    (181) ternario -> . ternarioBool
    (182) ternario -> . ( ternarioMat )
    (183) ternario -> . ( ternarioBool )
    (184) ternario -> . ternarioVars
    (185) ternario -> . ( ternarioVars )
    (71) atributos -> . ID . valoresCampos
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )
    (96) vecVal -> . ID m
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    ?               reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 124
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 55

    (27) sentencia -> func ; .

    WHILE           reduce using rule 27 (sentencia -> func ; .)
    ELSE            reduce using rule 27 (sentencia -> func ; .)
    COMMENT         reduce using rule 27 (sentencia -> func ; .)
    IF              reduce using rule 27 (sentencia -> func ; .)
    DO              reduce using rule 27 (sentencia -> func ; .)
    FOR             reduce using rule 27 (sentencia -> func ; .)
    RETURN          reduce using rule 27 (sentencia -> func ; .)
    ;               reduce using rule 27 (sentencia -> func ; .)
    MENOSMENOS      reduce using rule 27 (sentencia -> func ; .)
    MASMAS          reduce using rule 27 (sentencia -> func ; .)
    ID              reduce using rule 27 (sentencia -> func ; .)
    PRINT           reduce using rule 27 (sentencia -> func ; .)
    MULTIESCALAR    reduce using rule 27 (sentencia -> func ; .)
    LENGTH          reduce using rule 27 (sentencia -> func ; .)
    CAPITALIZAR     reduce using rule 27 (sentencia -> func ; .)
    COLINEALES      reduce using rule 27 (sentencia -> func ; .)
    $end            reduce using rule 27 (sentencia -> func ; .)
    }               reduce using rule 27 (sentencia -> func ; .)


state 56

    (96) vecVal -> ID m .

    .               reduce using rule 96 (vecVal -> ID m .)
    MASMAS          reduce using rule 96 (vecVal -> ID m .)
    MENOSMENOS      reduce using rule 96 (vecVal -> ID m .)
    )               reduce using rule 96 (vecVal -> ID m .)
    +               reduce using rule 96 (vecVal -> ID m .)
    -               reduce using rule 96 (vecVal -> ID m .)
    *               reduce using rule 96 (vecVal -> ID m .)
    /               reduce using rule 96 (vecVal -> ID m .)
    %               reduce using rule 96 (vecVal -> ID m .)
    ^               reduce using rule 96 (vecVal -> ID m .)
    ?               reduce using rule 96 (vecVal -> ID m .)
    OR              reduce using rule 96 (vecVal -> ID m .)
    AND             reduce using rule 96 (vecVal -> ID m .)
    EQEQ            reduce using rule 96 (vecVal -> ID m .)
    DISTINTO        reduce using rule 96 (vecVal -> ID m .)
    >               reduce using rule 96 (vecVal -> ID m .)
    <               reduce using rule 96 (vecVal -> ID m .)
    MULEQ           reduce using rule 96 (vecVal -> ID m .)
    DIVEQ           reduce using rule 96 (vecVal -> ID m .)
    MASEQ           reduce using rule 96 (vecVal -> ID m .)
    MENOSEQ         reduce using rule 96 (vecVal -> ID m .)
    =               reduce using rule 96 (vecVal -> ID m .)
    ;               reduce using rule 96 (vecVal -> ID m .)
    ,               reduce using rule 96 (vecVal -> ID m .)
    ]               reduce using rule 96 (vecVal -> ID m .)
    :               reduce using rule 96 (vecVal -> ID m .)
    }               reduce using rule 96 (vecVal -> ID m .)


state 57

    (116) varAsig -> ID . . ID = valoresAsig

    ID              shift and go to state 125


state 58

    (97) m -> [ . INT ]
    (98) m -> [ . INT ] m
    (99) m -> [ . varYVals ] m
    (100) m -> [ . varYVals ]
    (101) m -> [ . eMat ] m
    (102) m -> [ . eMat ]
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (96) vecVal -> . ID m
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )

    INT             shift and go to state 130
    ID              shift and go to state 52
    FLOAT           shift and go to state 131
    STRING          shift and go to state 129
    (               shift and go to state 128
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    -               shift and go to state 85
    +               shift and go to state 84

    eMat                           shift and go to state 127
    funcInt                        shift and go to state 126
    p                              shift and go to state 102
    varsOps                        shift and go to state 132
    valoresMat                     shift and go to state 78
    paren                          shift and go to state 94
    exp                            shift and go to state 106
    varYVals                       shift and go to state 133
    vecVal                         shift and go to state 8
    iSing                          shift and go to state 91

state 59

    (6) lAbierta -> IF ( . cosaBooleana ) linea
    (7) lAbierta -> IF ( . cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> IF ( . cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> IF ( . cosaBooleana ) { g }
    (14) lCerrada -> IF ( . cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( . cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (33) cosaBooleana -> . expBool
    (34) cosaBooleana -> . valoresBool
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (49) funcBool -> . COLINEALES ( valores , valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (96) vecVal -> . ID m
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (220) parenBool -> . ( expBool )
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )

    BOOL            shift and go to state 142
    (               shift and go to state 138
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    )               reduce using rule 172 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    STRING          shift and go to state 129
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    and                            shift and go to state 71
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 135
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 136
    eMat                           shift and go to state 137
    mayor                          shift and go to state 108
    paren                          shift and go to state 94
    varsOps                        shift and go to state 143
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    cosaBooleana                   shift and go to state 139
    p                              shift and go to state 102
    exp                            shift and go to state 106
    varYVals                       shift and go to state 144
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 145

state 60

    (28) sentencia -> varAsig ; .

    WHILE           reduce using rule 28 (sentencia -> varAsig ; .)
    ELSE            reduce using rule 28 (sentencia -> varAsig ; .)
    COMMENT         reduce using rule 28 (sentencia -> varAsig ; .)
    IF              reduce using rule 28 (sentencia -> varAsig ; .)
    DO              reduce using rule 28 (sentencia -> varAsig ; .)
    FOR             reduce using rule 28 (sentencia -> varAsig ; .)
    RETURN          reduce using rule 28 (sentencia -> varAsig ; .)
    ;               reduce using rule 28 (sentencia -> varAsig ; .)
    MENOSMENOS      reduce using rule 28 (sentencia -> varAsig ; .)
    MASMAS          reduce using rule 28 (sentencia -> varAsig ; .)
    ID              reduce using rule 28 (sentencia -> varAsig ; .)
    PRINT           reduce using rule 28 (sentencia -> varAsig ; .)
    MULTIESCALAR    reduce using rule 28 (sentencia -> varAsig ; .)
    LENGTH          reduce using rule 28 (sentencia -> varAsig ; .)
    CAPITALIZAR     reduce using rule 28 (sentencia -> varAsig ; .)
    COLINEALES      reduce using rule 28 (sentencia -> varAsig ; .)
    $end            reduce using rule 28 (sentencia -> varAsig ; .)
    }               reduce using rule 28 (sentencia -> varAsig ; .)


state 61

    (46) funcInt -> MULTIESCALAR ( . valores , valores param )
    (57) valores -> . eMat
    (58) valores -> . expBool
    (59) valores -> . funcReturn
    (60) valores -> . reg
    (61) valores -> . INT
    (62) valores -> . FLOAT
    (63) valores -> . STRING
    (64) valores -> . BOOL
    (65) valores -> . varYVals
    (66) valores -> . varsOps
    (67) valores -> . vec
    (68) valores -> . ternario
    (69) valores -> . atributos
    (70) valores -> . RES
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (103) reg -> . { campos }
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (54) vec -> . [ elem ]
    (180) ternario -> . ternarioMat
    (181) ternario -> . ternarioBool
    (182) ternario -> . ( ternarioMat )
    (183) ternario -> . ( ternarioBool )
    (184) ternario -> . ternarioVars
    (185) ternario -> . ( ternarioVars )
    (71) atributos -> . ID . valoresCampos
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )
    (96) vecVal -> . ID m
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    ?               reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 146
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 62

    (48) funcString -> CAPITALIZAR ( . valores )
    (57) valores -> . eMat
    (58) valores -> . expBool
    (59) valores -> . funcReturn
    (60) valores -> . reg
    (61) valores -> . INT
    (62) valores -> . FLOAT
    (63) valores -> . STRING
    (64) valores -> . BOOL
    (65) valores -> . varYVals
    (66) valores -> . varsOps
    (67) valores -> . vec
    (68) valores -> . ternario
    (69) valores -> . atributos
    (70) valores -> . RES
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (103) reg -> . { campos }
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (54) vec -> . [ elem ]
    (180) ternario -> . ternarioMat
    (181) ternario -> . ternarioBool
    (182) ternario -> . ( ternarioMat )
    (183) ternario -> . ( ternarioBool )
    (184) ternario -> . ternarioVars
    (185) ternario -> . ( ternarioVars )
    (71) atributos -> . ID . valoresCampos
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )
    (96) vecVal -> . ID m
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    ?               reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 147
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 63

    (107) varsOps -> MASMAS varYVals .

    )               reduce using rule 107 (varsOps -> MASMAS varYVals .)
    +               reduce using rule 107 (varsOps -> MASMAS varYVals .)
    -               reduce using rule 107 (varsOps -> MASMAS varYVals .)
    *               reduce using rule 107 (varsOps -> MASMAS varYVals .)
    /               reduce using rule 107 (varsOps -> MASMAS varYVals .)
    %               reduce using rule 107 (varsOps -> MASMAS varYVals .)
    ^               reduce using rule 107 (varsOps -> MASMAS varYVals .)
    OR              reduce using rule 107 (varsOps -> MASMAS varYVals .)
    AND             reduce using rule 107 (varsOps -> MASMAS varYVals .)
    ?               reduce using rule 107 (varsOps -> MASMAS varYVals .)
    EQEQ            reduce using rule 107 (varsOps -> MASMAS varYVals .)
    DISTINTO        reduce using rule 107 (varsOps -> MASMAS varYVals .)
    >               reduce using rule 107 (varsOps -> MASMAS varYVals .)
    <               reduce using rule 107 (varsOps -> MASMAS varYVals .)
    :               reduce using rule 107 (varsOps -> MASMAS varYVals .)
    ;               reduce using rule 107 (varsOps -> MASMAS varYVals .)
    ,               reduce using rule 107 (varsOps -> MASMAS varYVals .)
    ]               reduce using rule 107 (varsOps -> MASMAS varYVals .)
    }               reduce using rule 107 (varsOps -> MASMAS varYVals .)


state 64

    (23) lCerrada -> loop lCerrada .

    ELSE            reduce using rule 23 (lCerrada -> loop lCerrada .)
    COMMENT         reduce using rule 23 (lCerrada -> loop lCerrada .)
    IF              reduce using rule 23 (lCerrada -> loop lCerrada .)
    DO              reduce using rule 23 (lCerrada -> loop lCerrada .)
    WHILE           reduce using rule 23 (lCerrada -> loop lCerrada .)
    FOR             reduce using rule 23 (lCerrada -> loop lCerrada .)
    RETURN          reduce using rule 23 (lCerrada -> loop lCerrada .)
    ;               reduce using rule 23 (lCerrada -> loop lCerrada .)
    MENOSMENOS      reduce using rule 23 (lCerrada -> loop lCerrada .)
    MASMAS          reduce using rule 23 (lCerrada -> loop lCerrada .)
    ID              reduce using rule 23 (lCerrada -> loop lCerrada .)
    PRINT           reduce using rule 23 (lCerrada -> loop lCerrada .)
    MULTIESCALAR    reduce using rule 23 (lCerrada -> loop lCerrada .)
    LENGTH          reduce using rule 23 (lCerrada -> loop lCerrada .)
    CAPITALIZAR     reduce using rule 23 (lCerrada -> loop lCerrada .)
    COLINEALES      reduce using rule 23 (lCerrada -> loop lCerrada .)
    $end            reduce using rule 23 (lCerrada -> loop lCerrada .)
    }               reduce using rule 23 (lCerrada -> loop lCerrada .)


state 65

    (10) lAbierta -> loop lAbierta .

    COMMENT         reduce using rule 10 (lAbierta -> loop lAbierta .)
    IF              reduce using rule 10 (lAbierta -> loop lAbierta .)
    DO              reduce using rule 10 (lAbierta -> loop lAbierta .)
    WHILE           reduce using rule 10 (lAbierta -> loop lAbierta .)
    FOR             reduce using rule 10 (lAbierta -> loop lAbierta .)
    RETURN          reduce using rule 10 (lAbierta -> loop lAbierta .)
    ;               reduce using rule 10 (lAbierta -> loop lAbierta .)
    MENOSMENOS      reduce using rule 10 (lAbierta -> loop lAbierta .)
    MASMAS          reduce using rule 10 (lAbierta -> loop lAbierta .)
    ID              reduce using rule 10 (lAbierta -> loop lAbierta .)
    PRINT           reduce using rule 10 (lAbierta -> loop lAbierta .)
    MULTIESCALAR    reduce using rule 10 (lAbierta -> loop lAbierta .)
    LENGTH          reduce using rule 10 (lAbierta -> loop lAbierta .)
    CAPITALIZAR     reduce using rule 10 (lAbierta -> loop lAbierta .)
    COLINEALES      reduce using rule 10 (lAbierta -> loop lAbierta .)
    }               reduce using rule 10 (lAbierta -> loop lAbierta .)
    $end            reduce using rule 10 (lAbierta -> loop lAbierta .)


state 66

    (22) lCerrada -> loop { . g }
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (53) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . DO { g } WHILE ( valores ) ;
    (25) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (31) loop -> . WHILE ( valores )
    (32) loop -> . FOR ( primParam ; valores ; tercerParam )
    (26) sentencia -> . varsOps ;
    (27) sentencia -> . func ;
    (28) sentencia -> . varAsig ;
    (29) sentencia -> . RETURN ;
    (30) sentencia -> . ;
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (41) func -> . funcReturn
    (42) func -> . funcVoid
    (111) varAsig -> . varYVals MULEQ valoresAsig
    (112) varAsig -> . varYVals DIVEQ valoresAsig
    (113) varAsig -> . varYVals MASEQ valoresAsig
    (114) varAsig -> . varYVals MENOSEQ valoresAsig
    (115) varAsig -> . varYVals = valoresAsig
    (116) varAsig -> . ID . ID = valoresAsig
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (50) funcVoid -> . PRINT ( valores )
    (96) vecVal -> . ID m
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )

    COMMENT         shift and go to state 9
    }               reduce using rule 53 (empty -> .)
    IF              shift and go to state 21
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    linea                          shift and go to state 32
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    empty                          shift and go to state 13
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 22
    g                              shift and go to state 148
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 29
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 31

state 67

    (1) g -> linea g .

    $end            reduce using rule 1 (g -> linea g .)
    }               reduce using rule 1 (g -> linea g .)


state 68

    (14) lCerrada -> IF ( . cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( . cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (33) cosaBooleana -> . expBool
    (34) cosaBooleana -> . valoresBool
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (49) funcBool -> . COLINEALES ( valores , valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (96) vecVal -> . ID m
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (220) parenBool -> . ( expBool )
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )

    BOOL            shift and go to state 142
    (               shift and go to state 138
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    )               reduce using rule 172 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    STRING          shift and go to state 129
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    and                            shift and go to state 71
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 135
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 136
    eMat                           shift and go to state 137
    mayor                          shift and go to state 108
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    cosaBooleana                   shift and go to state 149
    p                              shift and go to state 102
    varsOps                        shift and go to state 143
    exp                            shift and go to state 106
    varYVals                       shift and go to state 144
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 145

state 69

    (25) lCerrada -> DO lCerrada WHILE . ( valores ) ;

    (               shift and go to state 150


state 70

    (24) lCerrada -> DO { g . } WHILE ( valores ) ;

    }               shift and go to state 151


state 71

    (190) expBool -> and .
    (191) and -> and . AND eq
    (193) and -> and . AND valoresBool

    OR              reduce using rule 190 (expBool -> and .)
    ?               reduce using rule 190 (expBool -> and .)
    )               reduce using rule 190 (expBool -> and .)
    ;               reduce using rule 190 (expBool -> and .)
    ,               reduce using rule 190 (expBool -> and .)
    ]               reduce using rule 190 (expBool -> and .)
    :               reduce using rule 190 (expBool -> and .)
    }               reduce using rule 190 (expBool -> and .)
    AND             shift and go to state 152


state 72

    (68) valores -> ternario .

    ;               reduce using rule 68 (valores -> ternario .)
    )               reduce using rule 68 (valores -> ternario .)
    ,               reduce using rule 68 (valores -> ternario .)
    ]               reduce using rule 68 (valores -> ternario .)
    }               reduce using rule 68 (valores -> ternario .)


state 73

    (45) funcReturn -> funcBool .
    (168) valoresBool -> funcBool .

    ,               reduce using rule 45 (funcReturn -> funcBool .)
    ;               reduce using rule 45 (funcReturn -> funcBool .)
    )               reduce using rule 45 (funcReturn -> funcBool .)
    ]               reduce using rule 45 (funcReturn -> funcBool .)
    }               reduce using rule 45 (funcReturn -> funcBool .)
    OR              reduce using rule 168 (valoresBool -> funcBool .)
    AND             reduce using rule 168 (valoresBool -> funcBool .)
    ?               reduce using rule 168 (valoresBool -> funcBool .)


state 74

    (70) valores -> RES .

    ;               reduce using rule 70 (valores -> RES .)
    )               reduce using rule 70 (valores -> RES .)
    ,               reduce using rule 70 (valores -> RES .)
    ]               reduce using rule 70 (valores -> RES .)
    }               reduce using rule 70 (valores -> RES .)


state 75

    (43) funcReturn -> funcInt .
    (119) valoresMat -> funcInt .
    (209) tCompare -> funcInt .

    ,               reduce using rule 43 (funcReturn -> funcInt .)
    ;               reduce using rule 43 (funcReturn -> funcInt .)
    )               reduce using rule 43 (funcReturn -> funcInt .)
    ]               reduce using rule 43 (funcReturn -> funcInt .)
    }               reduce using rule 43 (funcReturn -> funcInt .)
    +               reduce using rule 119 (valoresMat -> funcInt .)
    -               reduce using rule 119 (valoresMat -> funcInt .)
    *               reduce using rule 119 (valoresMat -> funcInt .)
    /               reduce using rule 119 (valoresMat -> funcInt .)
    %               reduce using rule 119 (valoresMat -> funcInt .)
    ^               reduce using rule 119 (valoresMat -> funcInt .)
    EQEQ            reduce using rule 209 (tCompare -> funcInt .)
    DISTINTO        reduce using rule 209 (tCompare -> funcInt .)
    >               reduce using rule 209 (tCompare -> funcInt .)
    <               reduce using rule 209 (tCompare -> funcInt .)


state 76

    (214) mayor -> menor .

    EQEQ            reduce using rule 214 (mayor -> menor .)
    DISTINTO        reduce using rule 214 (mayor -> menor .)
    AND             reduce using rule 214 (mayor -> menor .)
    ?               reduce using rule 214 (mayor -> menor .)
    OR              reduce using rule 214 (mayor -> menor .)
    ,               reduce using rule 214 (mayor -> menor .)
    )               reduce using rule 214 (mayor -> menor .)
    ;               reduce using rule 214 (mayor -> menor .)
    ]               reduce using rule 214 (mayor -> menor .)
    :               reduce using rule 214 (mayor -> menor .)
    }               reduce using rule 214 (mayor -> menor .)


state 77

    (184) ternario -> ternarioVars .

    ,               reduce using rule 184 (ternario -> ternarioVars .)
    ;               reduce using rule 184 (ternario -> ternarioVars .)
    )               reduce using rule 184 (ternario -> ternarioVars .)
    }               reduce using rule 184 (ternario -> ternarioVars .)
    ]               reduce using rule 184 (ternario -> ternarioVars .)


state 78

    (135) eMat -> valoresMat . + p
    (136) eMat -> valoresMat . - p
    (139) eMat -> valoresMat . + valoresMat
    (140) eMat -> valoresMat . - valoresMat
    (145) p -> valoresMat . * exp
    (146) p -> valoresMat . / exp
    (147) p -> valoresMat . % exp
    (151) p -> valoresMat . * valoresMat
    (152) p -> valoresMat . / valoresMat
    (153) p -> valoresMat . % valoresMat
    (156) exp -> valoresMat . ^ iSing
    (158) exp -> valoresMat . ^ valoresMat

    +               shift and go to state 154
    -               shift and go to state 156
    *               shift and go to state 155
    /               shift and go to state 157
    %               shift and go to state 153
    ^               shift and go to state 158


state 79

    (195) and -> eq .
    (196) eq -> eq . EQEQ mayor
    (197) eq -> eq . DISTINTO mayor
    (200) eq -> eq . EQEQ tCompare
    (201) eq -> eq . DISTINTO tCompare

    AND             reduce using rule 195 (and -> eq .)
    OR              reduce using rule 195 (and -> eq .)
    ?               reduce using rule 195 (and -> eq .)
    ,               reduce using rule 195 (and -> eq .)
    )               reduce using rule 195 (and -> eq .)
    ;               reduce using rule 195 (and -> eq .)
    ]               reduce using rule 195 (and -> eq .)
    :               reduce using rule 195 (and -> eq .)
    }               reduce using rule 195 (and -> eq .)
    EQEQ            shift and go to state 159
    DISTINTO        shift and go to state 160


state 80

    (187) expBool -> valoresBool . OR and
    (189) expBool -> valoresBool . OR valoresBool
    (192) and -> valoresBool . AND eq
    (194) and -> valoresBool . AND valoresBool
    (124) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (173) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (75) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars

    OR              shift and go to state 162
    AND             shift and go to state 161
    ?               shift and go to state 163


state 81

    (63) valores -> STRING .
    (122) valoresMat -> STRING .

    ;               reduce using rule 63 (valores -> STRING .)
    )               reduce using rule 63 (valores -> STRING .)
    ,               reduce using rule 63 (valores -> STRING .)
    ]               reduce using rule 63 (valores -> STRING .)
    }               reduce using rule 63 (valores -> STRING .)
    +               reduce using rule 122 (valoresMat -> STRING .)
    -               reduce using rule 122 (valoresMat -> STRING .)
    *               reduce using rule 122 (valoresMat -> STRING .)
    /               reduce using rule 122 (valoresMat -> STRING .)
    %               reduce using rule 122 (valoresMat -> STRING .)
    ^               reduce using rule 122 (valoresMat -> STRING .)


state 82

    (57) valores -> eMat .
    (133) eMat -> eMat . + p
    (134) eMat -> eMat . - p
    (137) eMat -> eMat . + valoresMat
    (138) eMat -> eMat . - valoresMat
    (205) tCompare -> eMat .

    ;               reduce using rule 57 (valores -> eMat .)
    )               reduce using rule 57 (valores -> eMat .)
    ,               reduce using rule 57 (valores -> eMat .)
    ]               reduce using rule 57 (valores -> eMat .)
    }               reduce using rule 57 (valores -> eMat .)
    +               shift and go to state 164
    -               shift and go to state 165
    EQEQ            reduce using rule 205 (tCompare -> eMat .)
    DISTINTO        reduce using rule 205 (tCompare -> eMat .)
    >               reduce using rule 205 (tCompare -> eMat .)
    <               reduce using rule 205 (tCompare -> eMat .)


state 83

    (182) ternario -> ( . ternarioMat )
    (183) ternario -> ( . ternarioBool )
    (185) ternario -> ( . ternarioVars )
    (123) valoresMat -> ( . ternarioMat )
    (171) valoresBool -> ( . ternarioBool )
    (211) tCompare -> ( . ternarioBool )
    (212) tCompare -> ( . ternarioMat )
    (165) paren -> ( . eMat )
    (166) paren -> ( . valoresMat )
    (220) parenBool -> ( . expBool )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (49) funcBool -> . COLINEALES ( valores , valores )
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (96) vecVal -> . ID m
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 129
    (               shift and go to state 170
    BOOL            shift and go to state 142
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 169
    valoresBool                    shift and go to state 168
    ternarioMat                    shift and go to state 171
    paren                          shift and go to state 94
    varsOps                        shift and go to state 175
    ternarioBool                   shift and go to state 172
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    iSing                          shift and go to state 91
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 176
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 178

state 84

    (161) iSing -> + . paren
    (163) iSing -> + . valoresMat
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (96) vecVal -> . ID m

    (               shift and go to state 180
    INT             shift and go to state 182
    FLOAT           shift and go to state 131
    STRING          shift and go to state 129
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30

    funcInt                        shift and go to state 126
    varsOps                        shift and go to state 132
    valoresMat                     shift and go to state 179
    paren                          shift and go to state 181
    varYVals                       shift and go to state 183
    vecVal                         shift and go to state 8

state 85

    (160) iSing -> - . paren
    (162) iSing -> - . valoresMat
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (96) vecVal -> . ID m

    (               shift and go to state 180
    INT             shift and go to state 182
    FLOAT           shift and go to state 131
    STRING          shift and go to state 129
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30

    funcInt                        shift and go to state 126
    varsOps                        shift and go to state 132
    valoresMat                     shift and go to state 184
    paren                          shift and go to state 185
    varYVals                       shift and go to state 183
    vecVal                         shift and go to state 8

state 86

    (180) ternario -> ternarioMat .

    ,               reduce using rule 180 (ternario -> ternarioMat .)
    ;               reduce using rule 180 (ternario -> ternarioMat .)
    )               reduce using rule 180 (ternario -> ternarioMat .)
    }               reduce using rule 180 (ternario -> ternarioMat .)
    ]               reduce using rule 180 (ternario -> ternarioMat .)


state 87

    (67) valores -> vec .

    ;               reduce using rule 67 (valores -> vec .)
    )               reduce using rule 67 (valores -> vec .)
    ,               reduce using rule 67 (valores -> vec .)
    ]               reduce using rule 67 (valores -> vec .)
    }               reduce using rule 67 (valores -> vec .)


state 88

    (60) valores -> reg .

    ;               reduce using rule 60 (valores -> reg .)
    )               reduce using rule 60 (valores -> reg .)
    ,               reduce using rule 60 (valores -> reg .)
    ]               reduce using rule 60 (valores -> reg .)
    }               reduce using rule 60 (valores -> reg .)


state 89

    (58) valores -> expBool .
    (186) expBool -> expBool . OR and
    (188) expBool -> expBool . OR valoresBool
    (125) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (174) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (80) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars

    ;               reduce using rule 58 (valores -> expBool .)
    )               reduce using rule 58 (valores -> expBool .)
    ,               reduce using rule 58 (valores -> expBool .)
    ]               reduce using rule 58 (valores -> expBool .)
    }               reduce using rule 58 (valores -> expBool .)
    OR              shift and go to state 186
    ?               shift and go to state 187


state 90

    (181) ternario -> ternarioBool .

    ,               reduce using rule 181 (ternario -> ternarioBool .)
    ;               reduce using rule 181 (ternario -> ternarioBool .)
    )               reduce using rule 181 (ternario -> ternarioBool .)
    }               reduce using rule 181 (ternario -> ternarioBool .)
    ]               reduce using rule 181 (ternario -> ternarioBool .)


state 91

    (159) exp -> iSing .

    ^               reduce using rule 159 (exp -> iSing .)
    *               reduce using rule 159 (exp -> iSing .)
    /               reduce using rule 159 (exp -> iSing .)
    %               reduce using rule 159 (exp -> iSing .)
    +               reduce using rule 159 (exp -> iSing .)
    -               reduce using rule 159 (exp -> iSing .)
    EQEQ            reduce using rule 159 (exp -> iSing .)
    DISTINTO        reduce using rule 159 (exp -> iSing .)
    >               reduce using rule 159 (exp -> iSing .)
    <               reduce using rule 159 (exp -> iSing .)
    )               reduce using rule 159 (exp -> iSing .)
    ,               reduce using rule 159 (exp -> iSing .)
    }               reduce using rule 159 (exp -> iSing .)
    ;               reduce using rule 159 (exp -> iSing .)
    ]               reduce using rule 159 (exp -> iSing .)
    AND             reduce using rule 159 (exp -> iSing .)
    OR              reduce using rule 159 (exp -> iSing .)
    ?               reduce using rule 159 (exp -> iSing .)
    :               reduce using rule 159 (exp -> iSing .)


state 92

    (219) not -> parenBool .

    EQEQ            reduce using rule 219 (not -> parenBool .)
    DISTINTO        reduce using rule 219 (not -> parenBool .)
    AND             reduce using rule 219 (not -> parenBool .)
    OR              reduce using rule 219 (not -> parenBool .)
    ?               reduce using rule 219 (not -> parenBool .)
    ;               reduce using rule 219 (not -> parenBool .)
    )               reduce using rule 219 (not -> parenBool .)
    :               reduce using rule 219 (not -> parenBool .)
    ,               reduce using rule 219 (not -> parenBool .)
    ]               reduce using rule 219 (not -> parenBool .)
    }               reduce using rule 219 (not -> parenBool .)


state 93

    (198) eq -> tCompare . EQEQ mayor
    (199) eq -> tCompare . DISTINTO mayor
    (202) eq -> tCompare . EQEQ tCompare
    (203) eq -> tCompare . DISTINTO tCompare
    (213) mayor -> tCompare . > tCompare
    (215) menor -> tCompare . < tCompare

    EQEQ            shift and go to state 189
    DISTINTO        shift and go to state 188
    >               shift and go to state 191
    <               shift and go to state 190


state 94

    (164) iSing -> paren .

    ^               reduce using rule 164 (iSing -> paren .)
    *               reduce using rule 164 (iSing -> paren .)
    /               reduce using rule 164 (iSing -> paren .)
    %               reduce using rule 164 (iSing -> paren .)
    +               reduce using rule 164 (iSing -> paren .)
    -               reduce using rule 164 (iSing -> paren .)
    :               reduce using rule 164 (iSing -> paren .)
    EQEQ            reduce using rule 164 (iSing -> paren .)
    DISTINTO        reduce using rule 164 (iSing -> paren .)
    >               reduce using rule 164 (iSing -> paren .)
    <               reduce using rule 164 (iSing -> paren .)
    )               reduce using rule 164 (iSing -> paren .)
    ,               reduce using rule 164 (iSing -> paren .)
    ;               reduce using rule 164 (iSing -> paren .)
    ]               reduce using rule 164 (iSing -> paren .)
    AND             reduce using rule 164 (iSing -> paren .)
    OR              reduce using rule 164 (iSing -> paren .)
    ?               reduce using rule 164 (iSing -> paren .)
    }               reduce using rule 164 (iSing -> paren .)


state 95

    (216) menor -> not .

    EQEQ            reduce using rule 216 (menor -> not .)
    DISTINTO        reduce using rule 216 (menor -> not .)
    AND             reduce using rule 216 (menor -> not .)
    ?               reduce using rule 216 (menor -> not .)
    OR              reduce using rule 216 (menor -> not .)
    )               reduce using rule 216 (menor -> not .)
    :               reduce using rule 216 (menor -> not .)
    ,               reduce using rule 216 (menor -> not .)
    ;               reduce using rule 216 (menor -> not .)
    ]               reduce using rule 216 (menor -> not .)
    }               reduce using rule 216 (menor -> not .)


state 96

    (54) vec -> [ . elem ]
    (55) elem -> . valores , elem
    (56) elem -> . valores
    (57) valores -> . eMat
    (58) valores -> . expBool
    (59) valores -> . funcReturn
    (60) valores -> . reg
    (61) valores -> . INT
    (62) valores -> . FLOAT
    (63) valores -> . STRING
    (64) valores -> . BOOL
    (65) valores -> . varYVals
    (66) valores -> . varsOps
    (67) valores -> . vec
    (68) valores -> . ternario
    (69) valores -> . atributos
    (70) valores -> . RES
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (103) reg -> . { campos }
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (54) vec -> . [ elem ]
    (180) ternario -> . ternarioMat
    (181) ternario -> . ternarioBool
    (182) ternario -> . ( ternarioMat )
    (183) ternario -> . ( ternarioBool )
    (184) ternario -> . ternarioVars
    (185) ternario -> . ( ternarioVars )
    (71) atributos -> . ID . valoresCampos
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )
    (96) vecVal -> . ID m
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    ?               reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    valores                        shift and go to state 192
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 99
    elem                           shift and go to state 193
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 97

    (93) varYVals -> ID .
    (71) atributos -> ID . . valoresCampos
    (96) vecVal -> ID . m
    (97) m -> . [ INT ]
    (98) m -> . [ INT ] m
    (99) m -> . [ varYVals ] m
    (100) m -> . [ varYVals ]
    (101) m -> . [ eMat ] m
    (102) m -> . [ eMat ]

    MASMAS          reduce using rule 93 (varYVals -> ID .)
    MENOSMENOS      reduce using rule 93 (varYVals -> ID .)
    ,               reduce using rule 93 (varYVals -> ID .)
    +               reduce using rule 93 (varYVals -> ID .)
    -               reduce using rule 93 (varYVals -> ID .)
    *               reduce using rule 93 (varYVals -> ID .)
    /               reduce using rule 93 (varYVals -> ID .)
    %               reduce using rule 93 (varYVals -> ID .)
    ^               reduce using rule 93 (varYVals -> ID .)
    OR              reduce using rule 93 (varYVals -> ID .)
    AND             reduce using rule 93 (varYVals -> ID .)
    ?               reduce using rule 93 (varYVals -> ID .)
    EQEQ            reduce using rule 93 (varYVals -> ID .)
    DISTINTO        reduce using rule 93 (varYVals -> ID .)
    >               reduce using rule 93 (varYVals -> ID .)
    <               reduce using rule 93 (varYVals -> ID .)
    ;               reduce using rule 93 (varYVals -> ID .)
    )               reduce using rule 93 (varYVals -> ID .)
    :               reduce using rule 93 (varYVals -> ID .)
    ]               reduce using rule 93 (varYVals -> ID .)
    }               reduce using rule 93 (varYVals -> ID .)
    .               shift and go to state 194
    [               shift and go to state 58

    m                              shift and go to state 56

state 98

    (61) valores -> INT .
    (117) valoresMat -> INT .
    (208) tCompare -> INT .

    ;               reduce using rule 61 (valores -> INT .)
    )               reduce using rule 61 (valores -> INT .)
    ,               reduce using rule 61 (valores -> INT .)
    ]               reduce using rule 61 (valores -> INT .)
    }               reduce using rule 61 (valores -> INT .)
    +               reduce using rule 117 (valoresMat -> INT .)
    -               reduce using rule 117 (valoresMat -> INT .)
    *               reduce using rule 117 (valoresMat -> INT .)
    /               reduce using rule 117 (valoresMat -> INT .)
    %               reduce using rule 117 (valoresMat -> INT .)
    ^               reduce using rule 117 (valoresMat -> INT .)
    EQEQ            reduce using rule 208 (tCompare -> INT .)
    DISTINTO        reduce using rule 208 (tCompare -> INT .)
    >               reduce using rule 208 (tCompare -> INT .)
    <               reduce using rule 208 (tCompare -> INT .)


state 99

    (59) valores -> funcReturn .

    ;               reduce using rule 59 (valores -> funcReturn .)
    )               reduce using rule 59 (valores -> funcReturn .)
    ,               reduce using rule 59 (valores -> funcReturn .)
    ]               reduce using rule 59 (valores -> funcReturn .)
    }               reduce using rule 59 (valores -> funcReturn .)


state 100

    (62) valores -> FLOAT .
    (118) valoresMat -> FLOAT .
    (210) tCompare -> FLOAT .

    ;               reduce using rule 62 (valores -> FLOAT .)
    )               reduce using rule 62 (valores -> FLOAT .)
    ,               reduce using rule 62 (valores -> FLOAT .)
    ]               reduce using rule 62 (valores -> FLOAT .)
    }               reduce using rule 62 (valores -> FLOAT .)
    +               reduce using rule 118 (valoresMat -> FLOAT .)
    -               reduce using rule 118 (valoresMat -> FLOAT .)
    *               reduce using rule 118 (valoresMat -> FLOAT .)
    /               reduce using rule 118 (valoresMat -> FLOAT .)
    %               reduce using rule 118 (valoresMat -> FLOAT .)
    ^               reduce using rule 118 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 210 (tCompare -> FLOAT .)
    DISTINTO        reduce using rule 210 (tCompare -> FLOAT .)
    >               reduce using rule 210 (tCompare -> FLOAT .)
    <               reduce using rule 210 (tCompare -> FLOAT .)


state 101

    (49) funcBool -> COLINEALES ( valores . , valores )

    ,               shift and go to state 195


state 102

    (141) eMat -> p .
    (142) p -> p . * exp
    (143) p -> p . / exp
    (144) p -> p . % exp
    (148) p -> p . * valoresMat
    (149) p -> p . / valoresMat
    (150) p -> p . % valoresMat

    +               reduce using rule 141 (eMat -> p .)
    -               reduce using rule 141 (eMat -> p .)
    EQEQ            reduce using rule 141 (eMat -> p .)
    DISTINTO        reduce using rule 141 (eMat -> p .)
    >               reduce using rule 141 (eMat -> p .)
    <               reduce using rule 141 (eMat -> p .)
    :               reduce using rule 141 (eMat -> p .)
    ,               reduce using rule 141 (eMat -> p .)
    ]               reduce using rule 141 (eMat -> p .)
    )               reduce using rule 141 (eMat -> p .)
    AND             reduce using rule 141 (eMat -> p .)
    OR              reduce using rule 141 (eMat -> p .)
    ?               reduce using rule 141 (eMat -> p .)
    ;               reduce using rule 141 (eMat -> p .)
    }               reduce using rule 141 (eMat -> p .)
    *               shift and go to state 197
    /               shift and go to state 198
    %               shift and go to state 196


state 103

    (64) valores -> BOOL .
    (167) valoresBool -> BOOL .

    ;               reduce using rule 64 (valores -> BOOL .)
    )               reduce using rule 64 (valores -> BOOL .)
    ,               reduce using rule 64 (valores -> BOOL .)
    ]               reduce using rule 64 (valores -> BOOL .)
    }               reduce using rule 64 (valores -> BOOL .)
    OR              reduce using rule 167 (valoresBool -> BOOL .)
    AND             reduce using rule 167 (valoresBool -> BOOL .)
    ?               reduce using rule 167 (valoresBool -> BOOL .)


state 104

    (66) valores -> varsOps .
    (121) valoresMat -> varsOps .
    (170) valoresBool -> varsOps .
    (206) tCompare -> varsOps .

    ;               reduce using rule 66 (valores -> varsOps .)
    )               reduce using rule 66 (valores -> varsOps .)
    ,               reduce using rule 66 (valores -> varsOps .)
    ]               reduce using rule 66 (valores -> varsOps .)
    }               reduce using rule 66 (valores -> varsOps .)
    +               reduce using rule 121 (valoresMat -> varsOps .)
    -               reduce using rule 121 (valoresMat -> varsOps .)
    *               reduce using rule 121 (valoresMat -> varsOps .)
    /               reduce using rule 121 (valoresMat -> varsOps .)
    %               reduce using rule 121 (valoresMat -> varsOps .)
    ^               reduce using rule 121 (valoresMat -> varsOps .)
    OR              reduce using rule 170 (valoresBool -> varsOps .)
    AND             reduce using rule 170 (valoresBool -> varsOps .)
    ?               reduce using rule 170 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 206 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 206 (tCompare -> varsOps .)
    >               reduce using rule 206 (tCompare -> varsOps .)
    <               reduce using rule 206 (tCompare -> varsOps .)


state 105

    (217) not -> NOT . not
    (218) not -> NOT . valoresBool
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (220) parenBool -> . ( expBool )
    (49) funcBool -> . COLINEALES ( valores , valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (96) vecVal -> . ID m

    NOT             shift and go to state 105
    BOOL            shift and go to state 142
    (               shift and go to state 199
    EQEQ            reduce using rule 172 (valoresBool -> .)
    DISTINTO        reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    ?               reduce using rule 172 (valoresBool -> .)
    ,               reduce using rule 172 (valoresBool -> .)
    )               reduce using rule 172 (valoresBool -> .)
    ;               reduce using rule 172 (valoresBool -> .)
    ]               reduce using rule 172 (valoresBool -> .)
    :               reduce using rule 172 (valoresBool -> .)
    }               reduce using rule 172 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30

    funcBool                       shift and go to state 134
    parenBool                      shift and go to state 92
    varsOps                        shift and go to state 201
    vecVal                         shift and go to state 8
    not                            shift and go to state 200
    varYVals                       shift and go to state 202
    valoresBool                    shift and go to state 203

state 106

    (154) p -> exp .
    (155) exp -> exp . ^ iSing
    (157) exp -> exp . ^ valoresMat

    *               reduce using rule 154 (p -> exp .)
    /               reduce using rule 154 (p -> exp .)
    %               reduce using rule 154 (p -> exp .)
    +               reduce using rule 154 (p -> exp .)
    -               reduce using rule 154 (p -> exp .)
    ,               reduce using rule 154 (p -> exp .)
    EQEQ            reduce using rule 154 (p -> exp .)
    DISTINTO        reduce using rule 154 (p -> exp .)
    >               reduce using rule 154 (p -> exp .)
    <               reduce using rule 154 (p -> exp .)
    )               reduce using rule 154 (p -> exp .)
    ;               reduce using rule 154 (p -> exp .)
    ]               reduce using rule 154 (p -> exp .)
    :               reduce using rule 154 (p -> exp .)
    }               reduce using rule 154 (p -> exp .)
    AND             reduce using rule 154 (p -> exp .)
    OR              reduce using rule 154 (p -> exp .)
    ?               reduce using rule 154 (p -> exp .)
    ^               shift and go to state 204


state 107

    (103) reg -> { . campos }
    (104) campos -> . ID : valores , campos
    (105) campos -> . ID : valores

    ID              shift and go to state 206

    campos                         shift and go to state 205

state 108

    (204) eq -> mayor .

    EQEQ            reduce using rule 204 (eq -> mayor .)
    DISTINTO        reduce using rule 204 (eq -> mayor .)
    AND             reduce using rule 204 (eq -> mayor .)
    OR              reduce using rule 204 (eq -> mayor .)
    ?               reduce using rule 204 (eq -> mayor .)
    ;               reduce using rule 204 (eq -> mayor .)
    )               reduce using rule 204 (eq -> mayor .)
    :               reduce using rule 204 (eq -> mayor .)
    ,               reduce using rule 204 (eq -> mayor .)
    }               reduce using rule 204 (eq -> mayor .)
    ]               reduce using rule 204 (eq -> mayor .)


state 109

    (65) valores -> varYVals .
    (108) varsOps -> varYVals . MASMAS
    (109) varsOps -> varYVals . MENOSMENOS
    (120) valoresMat -> varYVals .
    (169) valoresBool -> varYVals .
    (207) tCompare -> varYVals .

    ;               reduce using rule 65 (valores -> varYVals .)
    )               reduce using rule 65 (valores -> varYVals .)
    ,               reduce using rule 65 (valores -> varYVals .)
    ]               reduce using rule 65 (valores -> varYVals .)
    }               reduce using rule 65 (valores -> varYVals .)
    MASMAS          shift and go to state 47
    MENOSMENOS      shift and go to state 44
    +               reduce using rule 120 (valoresMat -> varYVals .)
    -               reduce using rule 120 (valoresMat -> varYVals .)
    *               reduce using rule 120 (valoresMat -> varYVals .)
    /               reduce using rule 120 (valoresMat -> varYVals .)
    %               reduce using rule 120 (valoresMat -> varYVals .)
    ^               reduce using rule 120 (valoresMat -> varYVals .)
    OR              reduce using rule 169 (valoresBool -> varYVals .)
    AND             reduce using rule 169 (valoresBool -> varYVals .)
    ?               reduce using rule 169 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 207 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 207 (tCompare -> varYVals .)
    >               reduce using rule 207 (tCompare -> varYVals .)
    <               reduce using rule 207 (tCompare -> varYVals .)


state 110

    (69) valores -> atributos .

    ;               reduce using rule 69 (valores -> atributos .)
    )               reduce using rule 69 (valores -> atributos .)
    ,               reduce using rule 69 (valores -> atributos .)
    ]               reduce using rule 69 (valores -> atributos .)
    }               reduce using rule 69 (valores -> atributos .)


state 111

    (31) loop -> WHILE ( valores . )

    )               shift and go to state 207


state 112

    (50) funcVoid -> PRINT ( valores . )

    )               shift and go to state 208


state 113

    (95) varYVals -> vecVal . varYVals .

    MASMAS          reduce using rule 95 (varYVals -> vecVal . varYVals .)
    MENOSMENOS      reduce using rule 95 (varYVals -> vecVal . varYVals .)
    ,               reduce using rule 95 (varYVals -> vecVal . varYVals .)
    +               reduce using rule 95 (varYVals -> vecVal . varYVals .)
    -               reduce using rule 95 (varYVals -> vecVal . varYVals .)
    *               reduce using rule 95 (varYVals -> vecVal . varYVals .)
    /               reduce using rule 95 (varYVals -> vecVal . varYVals .)
    %               reduce using rule 95 (varYVals -> vecVal . varYVals .)
    ^               reduce using rule 95 (varYVals -> vecVal . varYVals .)
    OR              reduce using rule 95 (varYVals -> vecVal . varYVals .)
    AND             reduce using rule 95 (varYVals -> vecVal . varYVals .)
    ?               reduce using rule 95 (varYVals -> vecVal . varYVals .)
    EQEQ            reduce using rule 95 (varYVals -> vecVal . varYVals .)
    DISTINTO        reduce using rule 95 (varYVals -> vecVal . varYVals .)
    >               reduce using rule 95 (varYVals -> vecVal . varYVals .)
    <               reduce using rule 95 (varYVals -> vecVal . varYVals .)
    ;               reduce using rule 95 (varYVals -> vecVal . varYVals .)
    )               reduce using rule 95 (varYVals -> vecVal . varYVals .)
    ]               reduce using rule 95 (varYVals -> vecVal . varYVals .)
    :               reduce using rule 95 (varYVals -> vecVal . varYVals .)
    }               reduce using rule 95 (varYVals -> vecVal . varYVals .)
    MULEQ           reduce using rule 95 (varYVals -> vecVal . varYVals .)
    DIVEQ           reduce using rule 95 (varYVals -> vecVal . varYVals .)
    MASEQ           reduce using rule 95 (varYVals -> vecVal . varYVals .)
    MENOSEQ         reduce using rule 95 (varYVals -> vecVal . varYVals .)
    =               reduce using rule 95 (varYVals -> vecVal . varYVals .)


state 114

    (114) varAsig -> varYVals MENOSEQ valoresAsig .

    ;               reduce using rule 114 (varAsig -> varYVals MENOSEQ valoresAsig .)
    )               reduce using rule 114 (varAsig -> varYVals MENOSEQ valoresAsig .)


state 115

    (110) valoresAsig -> valores .

    ;               reduce using rule 110 (valoresAsig -> valores .)
    )               reduce using rule 110 (valoresAsig -> valores .)


state 116

    (113) varAsig -> varYVals MASEQ valoresAsig .

    ;               reduce using rule 113 (varAsig -> varYVals MASEQ valoresAsig .)
    )               reduce using rule 113 (varAsig -> varYVals MASEQ valoresAsig .)


state 117

    (115) varAsig -> varYVals = valoresAsig .

    ;               reduce using rule 115 (varAsig -> varYVals = valoresAsig .)
    )               reduce using rule 115 (varAsig -> varYVals = valoresAsig .)


state 118

    (111) varAsig -> varYVals MULEQ valoresAsig .

    ;               reduce using rule 111 (varAsig -> varYVals MULEQ valoresAsig .)
    )               reduce using rule 111 (varAsig -> varYVals MULEQ valoresAsig .)


state 119

    (112) varAsig -> varYVals DIVEQ valoresAsig .

    ;               reduce using rule 112 (varAsig -> varYVals DIVEQ valoresAsig .)
    )               reduce using rule 112 (varAsig -> varYVals DIVEQ valoresAsig .)


state 120

    (35) primParam -> varAsig .

    ;               reduce using rule 35 (primParam -> varAsig .)


state 121

    (32) loop -> FOR ( primParam . ; valores ; tercerParam )

    ;               shift and go to state 209


state 122

    (111) varAsig -> varYVals . MULEQ valoresAsig
    (112) varAsig -> varYVals . DIVEQ valoresAsig
    (113) varAsig -> varYVals . MASEQ valoresAsig
    (114) varAsig -> varYVals . MENOSEQ valoresAsig
    (115) varAsig -> varYVals . = valoresAsig

    MULEQ           shift and go to state 48
    DIVEQ           shift and go to state 49
    MASEQ           shift and go to state 45
    MENOSEQ         shift and go to state 43
    =               shift and go to state 46


state 123

    (36) primParam -> empty .

    ;               reduce using rule 36 (primParam -> empty .)


state 124

    (47) funcInt -> LENGTH ( valores . )

    )               shift and go to state 210


state 125

    (116) varAsig -> ID . ID . = valoresAsig

    =               shift and go to state 211


state 126

    (119) valoresMat -> funcInt .

    ^               reduce using rule 119 (valoresMat -> funcInt .)
    *               reduce using rule 119 (valoresMat -> funcInt .)
    /               reduce using rule 119 (valoresMat -> funcInt .)
    %               reduce using rule 119 (valoresMat -> funcInt .)
    +               reduce using rule 119 (valoresMat -> funcInt .)
    -               reduce using rule 119 (valoresMat -> funcInt .)
    ,               reduce using rule 119 (valoresMat -> funcInt .)
    EQEQ            reduce using rule 119 (valoresMat -> funcInt .)
    DISTINTO        reduce using rule 119 (valoresMat -> funcInt .)
    >               reduce using rule 119 (valoresMat -> funcInt .)
    <               reduce using rule 119 (valoresMat -> funcInt .)
    )               reduce using rule 119 (valoresMat -> funcInt .)
    ;               reduce using rule 119 (valoresMat -> funcInt .)
    ]               reduce using rule 119 (valoresMat -> funcInt .)
    AND             reduce using rule 119 (valoresMat -> funcInt .)
    OR              reduce using rule 119 (valoresMat -> funcInt .)
    ?               reduce using rule 119 (valoresMat -> funcInt .)
    :               reduce using rule 119 (valoresMat -> funcInt .)
    }               reduce using rule 119 (valoresMat -> funcInt .)


state 127

    (101) m -> [ eMat . ] m
    (102) m -> [ eMat . ]
    (133) eMat -> eMat . + p
    (134) eMat -> eMat . - p
    (137) eMat -> eMat . + valoresMat
    (138) eMat -> eMat . - valoresMat

    ]               shift and go to state 212
    +               shift and go to state 164
    -               shift and go to state 165


state 128

    (123) valoresMat -> ( . ternarioMat )
    (165) paren -> ( . eMat )
    (166) paren -> ( . valoresMat )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (49) funcBool -> . COLINEALES ( valores , valores )
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (96) vecVal -> . ID m
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 129
    (               shift and go to state 170
    BOOL            shift and go to state 142
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 213
    eMat                           shift and go to state 169
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 214
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 215

state 129

    (122) valoresMat -> STRING .

    )               reduce using rule 122 (valoresMat -> STRING .)
    +               reduce using rule 122 (valoresMat -> STRING .)
    -               reduce using rule 122 (valoresMat -> STRING .)
    *               reduce using rule 122 (valoresMat -> STRING .)
    /               reduce using rule 122 (valoresMat -> STRING .)
    %               reduce using rule 122 (valoresMat -> STRING .)
    ^               reduce using rule 122 (valoresMat -> STRING .)
    ,               reduce using rule 122 (valoresMat -> STRING .)
    EQEQ            reduce using rule 122 (valoresMat -> STRING .)
    DISTINTO        reduce using rule 122 (valoresMat -> STRING .)
    >               reduce using rule 122 (valoresMat -> STRING .)
    <               reduce using rule 122 (valoresMat -> STRING .)
    ;               reduce using rule 122 (valoresMat -> STRING .)
    ]               reduce using rule 122 (valoresMat -> STRING .)
    AND             reduce using rule 122 (valoresMat -> STRING .)
    OR              reduce using rule 122 (valoresMat -> STRING .)
    ?               reduce using rule 122 (valoresMat -> STRING .)
    :               reduce using rule 122 (valoresMat -> STRING .)
    }               reduce using rule 122 (valoresMat -> STRING .)


state 130

    (97) m -> [ INT . ]
    (98) m -> [ INT . ] m
    (117) valoresMat -> INT .

    ]               shift and go to state 216
    +               reduce using rule 117 (valoresMat -> INT .)
    -               reduce using rule 117 (valoresMat -> INT .)
    *               reduce using rule 117 (valoresMat -> INT .)
    /               reduce using rule 117 (valoresMat -> INT .)
    %               reduce using rule 117 (valoresMat -> INT .)
    ^               reduce using rule 117 (valoresMat -> INT .)


state 131

    (118) valoresMat -> FLOAT .

    ^               reduce using rule 118 (valoresMat -> FLOAT .)
    *               reduce using rule 118 (valoresMat -> FLOAT .)
    /               reduce using rule 118 (valoresMat -> FLOAT .)
    %               reduce using rule 118 (valoresMat -> FLOAT .)
    +               reduce using rule 118 (valoresMat -> FLOAT .)
    -               reduce using rule 118 (valoresMat -> FLOAT .)
    ,               reduce using rule 118 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 118 (valoresMat -> FLOAT .)
    DISTINTO        reduce using rule 118 (valoresMat -> FLOAT .)
    >               reduce using rule 118 (valoresMat -> FLOAT .)
    <               reduce using rule 118 (valoresMat -> FLOAT .)
    )               reduce using rule 118 (valoresMat -> FLOAT .)
    ;               reduce using rule 118 (valoresMat -> FLOAT .)
    ]               reduce using rule 118 (valoresMat -> FLOAT .)
    AND             reduce using rule 118 (valoresMat -> FLOAT .)
    OR              reduce using rule 118 (valoresMat -> FLOAT .)
    ?               reduce using rule 118 (valoresMat -> FLOAT .)
    :               reduce using rule 118 (valoresMat -> FLOAT .)
    }               reduce using rule 118 (valoresMat -> FLOAT .)


state 132

    (121) valoresMat -> varsOps .

    ^               reduce using rule 121 (valoresMat -> varsOps .)
    *               reduce using rule 121 (valoresMat -> varsOps .)
    /               reduce using rule 121 (valoresMat -> varsOps .)
    %               reduce using rule 121 (valoresMat -> varsOps .)
    +               reduce using rule 121 (valoresMat -> varsOps .)
    -               reduce using rule 121 (valoresMat -> varsOps .)
    ,               reduce using rule 121 (valoresMat -> varsOps .)
    EQEQ            reduce using rule 121 (valoresMat -> varsOps .)
    DISTINTO        reduce using rule 121 (valoresMat -> varsOps .)
    >               reduce using rule 121 (valoresMat -> varsOps .)
    <               reduce using rule 121 (valoresMat -> varsOps .)
    )               reduce using rule 121 (valoresMat -> varsOps .)
    ;               reduce using rule 121 (valoresMat -> varsOps .)
    ]               reduce using rule 121 (valoresMat -> varsOps .)
    AND             reduce using rule 121 (valoresMat -> varsOps .)
    OR              reduce using rule 121 (valoresMat -> varsOps .)
    ?               reduce using rule 121 (valoresMat -> varsOps .)
    :               reduce using rule 121 (valoresMat -> varsOps .)
    }               reduce using rule 121 (valoresMat -> varsOps .)


state 133

    (99) m -> [ varYVals . ] m
    (100) m -> [ varYVals . ]
    (120) valoresMat -> varYVals .
    (108) varsOps -> varYVals . MASMAS
    (109) varsOps -> varYVals . MENOSMENOS

    ]               shift and go to state 217
    +               reduce using rule 120 (valoresMat -> varYVals .)
    -               reduce using rule 120 (valoresMat -> varYVals .)
    *               reduce using rule 120 (valoresMat -> varYVals .)
    /               reduce using rule 120 (valoresMat -> varYVals .)
    %               reduce using rule 120 (valoresMat -> varYVals .)
    ^               reduce using rule 120 (valoresMat -> varYVals .)
    MASMAS          shift and go to state 47
    MENOSMENOS      shift and go to state 44


state 134

    (168) valoresBool -> funcBool .

    ?               reduce using rule 168 (valoresBool -> funcBool .)
    OR              reduce using rule 168 (valoresBool -> funcBool .)
    AND             reduce using rule 168 (valoresBool -> funcBool .)
    EQEQ            reduce using rule 168 (valoresBool -> funcBool .)
    DISTINTO        reduce using rule 168 (valoresBool -> funcBool .)
    ,               reduce using rule 168 (valoresBool -> funcBool .)
    )               reduce using rule 168 (valoresBool -> funcBool .)
    ;               reduce using rule 168 (valoresBool -> funcBool .)
    ]               reduce using rule 168 (valoresBool -> funcBool .)
    :               reduce using rule 168 (valoresBool -> funcBool .)
    }               reduce using rule 168 (valoresBool -> funcBool .)


state 135

    (209) tCompare -> funcInt .
    (119) valoresMat -> funcInt .

    >               reduce using rule 209 (tCompare -> funcInt .)
    <               reduce using rule 209 (tCompare -> funcInt .)
    EQEQ            reduce using rule 209 (tCompare -> funcInt .)
    DISTINTO        reduce using rule 209 (tCompare -> funcInt .)
    AND             reduce using rule 209 (tCompare -> funcInt .)
    OR              reduce using rule 209 (tCompare -> funcInt .)
    ?               reduce using rule 209 (tCompare -> funcInt .)
    ,               reduce using rule 209 (tCompare -> funcInt .)
    )               reduce using rule 209 (tCompare -> funcInt .)
    ;               reduce using rule 209 (tCompare -> funcInt .)
    ]               reduce using rule 209 (tCompare -> funcInt .)
    :               reduce using rule 209 (tCompare -> funcInt .)
    }               reduce using rule 209 (tCompare -> funcInt .)
    +               reduce using rule 119 (valoresMat -> funcInt .)
    -               reduce using rule 119 (valoresMat -> funcInt .)
    *               reduce using rule 119 (valoresMat -> funcInt .)
    /               reduce using rule 119 (valoresMat -> funcInt .)
    %               reduce using rule 119 (valoresMat -> funcInt .)
    ^               reduce using rule 119 (valoresMat -> funcInt .)


state 136

    (34) cosaBooleana -> valoresBool .
    (187) expBool -> valoresBool . OR and
    (189) expBool -> valoresBool . OR valoresBool
    (192) and -> valoresBool . AND eq
    (194) and -> valoresBool . AND valoresBool

    )               reduce using rule 34 (cosaBooleana -> valoresBool .)
    OR              shift and go to state 162
    AND             shift and go to state 161


state 137

    (205) tCompare -> eMat .
    (133) eMat -> eMat . + p
    (134) eMat -> eMat . - p
    (137) eMat -> eMat . + valoresMat
    (138) eMat -> eMat . - valoresMat

    >               reduce using rule 205 (tCompare -> eMat .)
    <               reduce using rule 205 (tCompare -> eMat .)
    EQEQ            reduce using rule 205 (tCompare -> eMat .)
    DISTINTO        reduce using rule 205 (tCompare -> eMat .)
    AND             reduce using rule 205 (tCompare -> eMat .)
    OR              reduce using rule 205 (tCompare -> eMat .)
    ?               reduce using rule 205 (tCompare -> eMat .)
    ,               reduce using rule 205 (tCompare -> eMat .)
    )               reduce using rule 205 (tCompare -> eMat .)
    ;               reduce using rule 205 (tCompare -> eMat .)
    ]               reduce using rule 205 (tCompare -> eMat .)
    :               reduce using rule 205 (tCompare -> eMat .)
    }               reduce using rule 205 (tCompare -> eMat .)
    +               shift and go to state 164
    -               shift and go to state 165


state 138

    (171) valoresBool -> ( . ternarioBool )
    (211) tCompare -> ( . ternarioBool )
    (212) tCompare -> ( . ternarioMat )
    (123) valoresMat -> ( . ternarioMat )
    (220) parenBool -> ( . expBool )
    (165) paren -> ( . eMat )
    (166) paren -> ( . valoresMat )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (49) funcBool -> . COLINEALES ( valores , valores )
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (96) vecVal -> . ID m
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 129
    (               shift and go to state 170
    BOOL            shift and go to state 142
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 218
    eMat                           shift and go to state 169
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 219
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    ternarioBool                   shift and go to state 220
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 221

state 139

    (6) lAbierta -> IF ( cosaBooleana . ) linea
    (7) lAbierta -> IF ( cosaBooleana . ) { g } ELSE lAbierta
    (8) lAbierta -> IF ( cosaBooleana . ) lCerrada ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana . ) { g }
    (14) lCerrada -> IF ( cosaBooleana . ) { g } ELSE { g }
    (15) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE { g }
    (16) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana . ) { g } ELSE lCerrada
    (18) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE COMMENT com lCerrada

    )               shift and go to state 222


state 140

    (208) tCompare -> INT .
    (117) valoresMat -> INT .

    >               reduce using rule 208 (tCompare -> INT .)
    <               reduce using rule 208 (tCompare -> INT .)
    EQEQ            reduce using rule 208 (tCompare -> INT .)
    DISTINTO        reduce using rule 208 (tCompare -> INT .)
    AND             reduce using rule 208 (tCompare -> INT .)
    OR              reduce using rule 208 (tCompare -> INT .)
    ?               reduce using rule 208 (tCompare -> INT .)
    ,               reduce using rule 208 (tCompare -> INT .)
    )               reduce using rule 208 (tCompare -> INT .)
    ;               reduce using rule 208 (tCompare -> INT .)
    ]               reduce using rule 208 (tCompare -> INT .)
    :               reduce using rule 208 (tCompare -> INT .)
    }               reduce using rule 208 (tCompare -> INT .)
    +               reduce using rule 117 (valoresMat -> INT .)
    -               reduce using rule 117 (valoresMat -> INT .)
    *               reduce using rule 117 (valoresMat -> INT .)
    /               reduce using rule 117 (valoresMat -> INT .)
    %               reduce using rule 117 (valoresMat -> INT .)
    ^               reduce using rule 117 (valoresMat -> INT .)


state 141

    (210) tCompare -> FLOAT .
    (118) valoresMat -> FLOAT .

    >               reduce using rule 210 (tCompare -> FLOAT .)
    <               reduce using rule 210 (tCompare -> FLOAT .)
    EQEQ            reduce using rule 210 (tCompare -> FLOAT .)
    DISTINTO        reduce using rule 210 (tCompare -> FLOAT .)
    AND             reduce using rule 210 (tCompare -> FLOAT .)
    OR              reduce using rule 210 (tCompare -> FLOAT .)
    ?               reduce using rule 210 (tCompare -> FLOAT .)
    ,               reduce using rule 210 (tCompare -> FLOAT .)
    )               reduce using rule 210 (tCompare -> FLOAT .)
    ;               reduce using rule 210 (tCompare -> FLOAT .)
    ]               reduce using rule 210 (tCompare -> FLOAT .)
    :               reduce using rule 210 (tCompare -> FLOAT .)
    }               reduce using rule 210 (tCompare -> FLOAT .)
    +               reduce using rule 118 (valoresMat -> FLOAT .)
    -               reduce using rule 118 (valoresMat -> FLOAT .)
    *               reduce using rule 118 (valoresMat -> FLOAT .)
    /               reduce using rule 118 (valoresMat -> FLOAT .)
    %               reduce using rule 118 (valoresMat -> FLOAT .)
    ^               reduce using rule 118 (valoresMat -> FLOAT .)


state 142

    (167) valoresBool -> BOOL .

    ?               reduce using rule 167 (valoresBool -> BOOL .)
    OR              reduce using rule 167 (valoresBool -> BOOL .)
    AND             reduce using rule 167 (valoresBool -> BOOL .)
    EQEQ            reduce using rule 167 (valoresBool -> BOOL .)
    DISTINTO        reduce using rule 167 (valoresBool -> BOOL .)
    ,               reduce using rule 167 (valoresBool -> BOOL .)
    )               reduce using rule 167 (valoresBool -> BOOL .)
    ;               reduce using rule 167 (valoresBool -> BOOL .)
    ]               reduce using rule 167 (valoresBool -> BOOL .)
    :               reduce using rule 167 (valoresBool -> BOOL .)
    }               reduce using rule 167 (valoresBool -> BOOL .)


state 143

    (170) valoresBool -> varsOps .
    (206) tCompare -> varsOps .
    (121) valoresMat -> varsOps .

    ?               reduce using rule 170 (valoresBool -> varsOps .)
    OR              reduce using rule 170 (valoresBool -> varsOps .)
    AND             reduce using rule 170 (valoresBool -> varsOps .)
    )               reduce using rule 170 (valoresBool -> varsOps .)
    ,               reduce using rule 170 (valoresBool -> varsOps .)
    ;               reduce using rule 170 (valoresBool -> varsOps .)
    ]               reduce using rule 170 (valoresBool -> varsOps .)
    :               reduce using rule 170 (valoresBool -> varsOps .)
    }               reduce using rule 170 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 206 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 206 (tCompare -> varsOps .)
    >               reduce using rule 206 (tCompare -> varsOps .)
    <               reduce using rule 206 (tCompare -> varsOps .)
    +               reduce using rule 121 (valoresMat -> varsOps .)
    -               reduce using rule 121 (valoresMat -> varsOps .)
    *               reduce using rule 121 (valoresMat -> varsOps .)
    /               reduce using rule 121 (valoresMat -> varsOps .)
    %               reduce using rule 121 (valoresMat -> varsOps .)
    ^               reduce using rule 121 (valoresMat -> varsOps .)


state 144

    (169) valoresBool -> varYVals .
    (108) varsOps -> varYVals . MASMAS
    (109) varsOps -> varYVals . MENOSMENOS
    (207) tCompare -> varYVals .
    (120) valoresMat -> varYVals .

    ?               reduce using rule 169 (valoresBool -> varYVals .)
    OR              reduce using rule 169 (valoresBool -> varYVals .)
    AND             reduce using rule 169 (valoresBool -> varYVals .)
    )               reduce using rule 169 (valoresBool -> varYVals .)
    ,               reduce using rule 169 (valoresBool -> varYVals .)
    ;               reduce using rule 169 (valoresBool -> varYVals .)
    ]               reduce using rule 169 (valoresBool -> varYVals .)
    :               reduce using rule 169 (valoresBool -> varYVals .)
    }               reduce using rule 169 (valoresBool -> varYVals .)
    MASMAS          shift and go to state 47
    MENOSMENOS      shift and go to state 44
    EQEQ            reduce using rule 207 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 207 (tCompare -> varYVals .)
    >               reduce using rule 207 (tCompare -> varYVals .)
    <               reduce using rule 207 (tCompare -> varYVals .)
    +               reduce using rule 120 (valoresMat -> varYVals .)
    -               reduce using rule 120 (valoresMat -> varYVals .)
    *               reduce using rule 120 (valoresMat -> varYVals .)
    /               reduce using rule 120 (valoresMat -> varYVals .)
    %               reduce using rule 120 (valoresMat -> varYVals .)
    ^               reduce using rule 120 (valoresMat -> varYVals .)


state 145

    (33) cosaBooleana -> expBool .
    (186) expBool -> expBool . OR and
    (188) expBool -> expBool . OR valoresBool

    )               reduce using rule 33 (cosaBooleana -> expBool .)
    OR              shift and go to state 186


state 146

    (46) funcInt -> MULTIESCALAR ( valores . , valores param )

    ,               shift and go to state 223


state 147

    (48) funcString -> CAPITALIZAR ( valores . )

    )               shift and go to state 224


state 148

    (22) lCerrada -> loop { g . }

    }               shift and go to state 225


state 149

    (14) lCerrada -> IF ( cosaBooleana . ) { g } ELSE { g }
    (15) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE { g }
    (16) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana . ) { g } ELSE lCerrada
    (18) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE COMMENT com lCerrada

    )               shift and go to state 226


state 150

    (25) lCerrada -> DO lCerrada WHILE ( . valores ) ;
    (57) valores -> . eMat
    (58) valores -> . expBool
    (59) valores -> . funcReturn
    (60) valores -> . reg
    (61) valores -> . INT
    (62) valores -> . FLOAT
    (63) valores -> . STRING
    (64) valores -> . BOOL
    (65) valores -> . varYVals
    (66) valores -> . varsOps
    (67) valores -> . vec
    (68) valores -> . ternario
    (69) valores -> . atributos
    (70) valores -> . RES
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (103) reg -> . { campos }
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (54) vec -> . [ elem ]
    (180) ternario -> . ternarioMat
    (181) ternario -> . ternarioBool
    (182) ternario -> . ( ternarioMat )
    (183) ternario -> . ( ternarioBool )
    (184) ternario -> . ternarioVars
    (185) ternario -> . ( ternarioVars )
    (71) atributos -> . ID . valoresCampos
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )
    (96) vecVal -> . ID m
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    ?               reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 227
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 151

    (24) lCerrada -> DO { g } . WHILE ( valores ) ;

    WHILE           shift and go to state 228


state 152

    (191) and -> and AND . eq
    (193) and -> and AND . valoresBool
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (49) funcBool -> . COLINEALES ( valores , valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (96) vecVal -> . ID m
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (220) parenBool -> . ( expBool )
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )

    BOOL            shift and go to state 142
    (               shift and go to state 138
    AND             reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    ?               reduce using rule 172 (valoresBool -> .)
    ,               reduce using rule 172 (valoresBool -> .)
    )               reduce using rule 172 (valoresBool -> .)
    ;               reduce using rule 172 (valoresBool -> .)
    ]               reduce using rule 172 (valoresBool -> .)
    :               reduce using rule 172 (valoresBool -> .)
    }               reduce using rule 172 (valoresBool -> .)
    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    COLINEALES      shift and go to state 4
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    STRING          shift and go to state 129
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 135
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 229
    mayor                          shift and go to state 108
    valoresBool                    shift and go to state 230
    eMat                           shift and go to state 137
    vecVal                         shift and go to state 8
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 143
    exp                            shift and go to state 106
    varYVals                       shift and go to state 231
    parenBool                      shift and go to state 92

state 153

    (147) p -> valoresMat % . exp
    (153) p -> valoresMat % . valoresMat
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (96) vecVal -> . ID m

    INT             shift and go to state 182
    FLOAT           shift and go to state 131
    STRING          shift and go to state 129
    (               shift and go to state 128
    -               shift and go to state 85
    +               shift and go to state 84
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30

    valoresMat                     shift and go to state 232
    funcInt                        shift and go to state 126
    varsOps                        shift and go to state 132
    exp                            shift and go to state 233
    paren                          shift and go to state 94
    varYVals                       shift and go to state 183
    vecVal                         shift and go to state 8
    iSing                          shift and go to state 91

state 154

    (135) eMat -> valoresMat + . p
    (139) eMat -> valoresMat + . valoresMat
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (96) vecVal -> . ID m
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )

    INT             shift and go to state 182
    FLOAT           shift and go to state 131
    STRING          shift and go to state 129
    (               shift and go to state 128
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    -               shift and go to state 85
    +               shift and go to state 84

    valoresMat                     shift and go to state 234
    funcInt                        shift and go to state 126
    p                              shift and go to state 235
    varsOps                        shift and go to state 132
    exp                            shift and go to state 106
    paren                          shift and go to state 94
    varYVals                       shift and go to state 183
    vecVal                         shift and go to state 8
    iSing                          shift and go to state 91

state 155

    (145) p -> valoresMat * . exp
    (151) p -> valoresMat * . valoresMat
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (96) vecVal -> . ID m

    INT             shift and go to state 182
    FLOAT           shift and go to state 131
    STRING          shift and go to state 129
    (               shift and go to state 128
    -               shift and go to state 85
    +               shift and go to state 84
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30

    valoresMat                     shift and go to state 236
    funcInt                        shift and go to state 126
    varsOps                        shift and go to state 132
    exp                            shift and go to state 237
    paren                          shift and go to state 94
    varYVals                       shift and go to state 183
    vecVal                         shift and go to state 8
    iSing                          shift and go to state 91

state 156

    (136) eMat -> valoresMat - . p
    (140) eMat -> valoresMat - . valoresMat
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (96) vecVal -> . ID m
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )

    INT             shift and go to state 182
    FLOAT           shift and go to state 131
    STRING          shift and go to state 129
    (               shift and go to state 128
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    -               shift and go to state 85
    +               shift and go to state 84

    valoresMat                     shift and go to state 238
    funcInt                        shift and go to state 126
    p                              shift and go to state 239
    varsOps                        shift and go to state 132
    exp                            shift and go to state 106
    paren                          shift and go to state 94
    varYVals                       shift and go to state 183
    vecVal                         shift and go to state 8
    iSing                          shift and go to state 91

state 157

    (146) p -> valoresMat / . exp
    (152) p -> valoresMat / . valoresMat
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (96) vecVal -> . ID m

    INT             shift and go to state 182
    FLOAT           shift and go to state 131
    STRING          shift and go to state 129
    (               shift and go to state 128
    -               shift and go to state 85
    +               shift and go to state 84
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30

    valoresMat                     shift and go to state 240
    funcInt                        shift and go to state 126
    varsOps                        shift and go to state 132
    exp                            shift and go to state 241
    paren                          shift and go to state 94
    varYVals                       shift and go to state 183
    vecVal                         shift and go to state 8
    iSing                          shift and go to state 91

state 158

    (156) exp -> valoresMat ^ . iSing
    (158) exp -> valoresMat ^ . valoresMat
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (96) vecVal -> . ID m

    -               shift and go to state 85
    +               shift and go to state 84
    INT             shift and go to state 182
    FLOAT           shift and go to state 131
    STRING          shift and go to state 129
    (               shift and go to state 128
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30

    funcInt                        shift and go to state 126
    iSing                          shift and go to state 243
    valoresMat                     shift and go to state 242
    paren                          shift and go to state 94
    varYVals                       shift and go to state 183
    vecVal                         shift and go to state 8
    varsOps                        shift and go to state 132

state 159

    (196) eq -> eq EQEQ . mayor
    (200) eq -> eq EQEQ . tCompare
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (96) vecVal -> . ID m
    (220) parenBool -> . ( expBool )
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )

    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    (               shift and go to state 245
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 52
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    NOT             shift and go to state 105
    STRING          shift and go to state 129
    -               shift and go to state 85
    +               shift and go to state 84

    funcInt                        shift and go to state 135
    menor                          shift and go to state 76
    mayor                          shift and go to state 244
    valoresMat                     shift and go to state 78
    eMat                           shift and go to state 137
    vecVal                         shift and go to state 8
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 246
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 247
    exp                            shift and go to state 106
    varYVals                       shift and go to state 248
    parenBool                      shift and go to state 92

state 160

    (197) eq -> eq DISTINTO . mayor
    (201) eq -> eq DISTINTO . tCompare
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (96) vecVal -> . ID m
    (220) parenBool -> . ( expBool )
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )

    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    (               shift and go to state 245
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 52
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    NOT             shift and go to state 105
    STRING          shift and go to state 129
    -               shift and go to state 85
    +               shift and go to state 84

    funcInt                        shift and go to state 135
    menor                          shift and go to state 76
    mayor                          shift and go to state 249
    valoresMat                     shift and go to state 78
    eMat                           shift and go to state 137
    vecVal                         shift and go to state 8
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 250
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 247
    exp                            shift and go to state 106
    varYVals                       shift and go to state 248
    parenBool                      shift and go to state 92

state 161

    (192) and -> valoresBool AND . eq
    (194) and -> valoresBool AND . valoresBool
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (49) funcBool -> . COLINEALES ( valores , valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (96) vecVal -> . ID m
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (220) parenBool -> . ( expBool )
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )

    BOOL            shift and go to state 142
    (               shift and go to state 138
    AND             reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    ?               reduce using rule 172 (valoresBool -> .)
    ,               reduce using rule 172 (valoresBool -> .)
    )               reduce using rule 172 (valoresBool -> .)
    ;               reduce using rule 172 (valoresBool -> .)
    ]               reduce using rule 172 (valoresBool -> .)
    :               reduce using rule 172 (valoresBool -> .)
    }               reduce using rule 172 (valoresBool -> .)
    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    COLINEALES      shift and go to state 4
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    STRING          shift and go to state 129
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 135
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 251
    mayor                          shift and go to state 108
    valoresBool                    shift and go to state 252
    eMat                           shift and go to state 137
    vecVal                         shift and go to state 8
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 143
    exp                            shift and go to state 106
    varYVals                       shift and go to state 231
    parenBool                      shift and go to state 92

state 162

    (187) expBool -> valoresBool OR . and
    (189) expBool -> valoresBool OR . valoresBool
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (49) funcBool -> . COLINEALES ( valores , valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (96) vecVal -> . ID m
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (220) parenBool -> . ( expBool )
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )

    BOOL            shift and go to state 142
    (               shift and go to state 138
    AND             reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    ?               reduce using rule 172 (valoresBool -> .)
    ,               reduce using rule 172 (valoresBool -> .)
    )               reduce using rule 172 (valoresBool -> .)
    ;               reduce using rule 172 (valoresBool -> .)
    ]               reduce using rule 172 (valoresBool -> .)
    :               reduce using rule 172 (valoresBool -> .)
    }               reduce using rule 172 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    STRING          shift and go to state 129
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    and                            shift and go to state 253
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 135
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    mayor                          shift and go to state 108
    valoresBool                    shift and go to state 254
    eMat                           shift and go to state 137
    vecVal                         shift and go to state 8
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 143
    exp                            shift and go to state 106
    varYVals                       shift and go to state 144
    parenBool                      shift and go to state 92

state 163

    (124) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (173) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (75) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (175) valoresTernarioBool -> . BOOL
    (176) valoresTernarioBool -> . funcBool
    (177) valoresTernarioBool -> . ternarioBool
    (178) valoresTernarioBool -> . ( ternarioBool )
    (179) valoresTernarioBool -> . expBool
    (85) valoresTernarioVars -> . varsOps
    (86) valoresTernarioVars -> . varYVals
    (87) valoresTernarioVars -> . reg
    (88) valoresTernarioVars -> . vec
    (89) valoresTernarioVars -> . ternarioVars
    (90) valoresTernarioVars -> . ( ternarioVars )
    (91) valoresTernarioVars -> . atributos
    (92) valoresTernarioVars -> . RES
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (49) funcBool -> . COLINEALES ( valores , valores )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (103) reg -> . { campos }
    (54) vec -> . [ elem ]
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (71) atributos -> . ID . valoresCampos
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (96) vecVal -> . ID m
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    (               shift and go to state 273
    BOOL            shift and go to state 271
    RES             shift and go to state 257
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 261
    valoresBool                    shift and go to state 259
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 265
    expBool                        shift and go to state 276
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 268
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 272
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 275
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 164

    (133) eMat -> eMat + . p
    (137) eMat -> eMat + . valoresMat
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (96) vecVal -> . ID m
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )

    INT             shift and go to state 182
    FLOAT           shift and go to state 131
    STRING          shift and go to state 129
    (               shift and go to state 128
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    -               shift and go to state 85
    +               shift and go to state 84

    valoresMat                     shift and go to state 277
    funcInt                        shift and go to state 126
    p                              shift and go to state 278
    varsOps                        shift and go to state 132
    exp                            shift and go to state 106
    paren                          shift and go to state 94
    varYVals                       shift and go to state 183
    vecVal                         shift and go to state 8
    iSing                          shift and go to state 91

state 165

    (134) eMat -> eMat - . p
    (138) eMat -> eMat - . valoresMat
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (96) vecVal -> . ID m
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )

    INT             shift and go to state 182
    FLOAT           shift and go to state 131
    STRING          shift and go to state 129
    (               shift and go to state 128
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    -               shift and go to state 85
    +               shift and go to state 84

    valoresMat                     shift and go to state 279
    funcInt                        shift and go to state 126
    p                              shift and go to state 280
    varsOps                        shift and go to state 132
    exp                            shift and go to state 106
    paren                          shift and go to state 94
    varYVals                       shift and go to state 183
    vecVal                         shift and go to state 8
    iSing                          shift and go to state 91

state 166

    (119) valoresMat -> funcInt .
    (209) tCompare -> funcInt .

    )               reduce using rule 119 (valoresMat -> funcInt .)
    +               reduce using rule 119 (valoresMat -> funcInt .)
    -               reduce using rule 119 (valoresMat -> funcInt .)
    *               reduce using rule 119 (valoresMat -> funcInt .)
    /               reduce using rule 119 (valoresMat -> funcInt .)
    %               reduce using rule 119 (valoresMat -> funcInt .)
    ^               reduce using rule 119 (valoresMat -> funcInt .)
    EQEQ            reduce using rule 209 (tCompare -> funcInt .)
    DISTINTO        reduce using rule 209 (tCompare -> funcInt .)
    >               reduce using rule 209 (tCompare -> funcInt .)
    <               reduce using rule 209 (tCompare -> funcInt .)


state 167

    (166) paren -> ( valoresMat . )
    (135) eMat -> valoresMat . + p
    (136) eMat -> valoresMat . - p
    (139) eMat -> valoresMat . + valoresMat
    (140) eMat -> valoresMat . - valoresMat
    (145) p -> valoresMat . * exp
    (146) p -> valoresMat . / exp
    (147) p -> valoresMat . % exp
    (151) p -> valoresMat . * valoresMat
    (152) p -> valoresMat . / valoresMat
    (153) p -> valoresMat . % valoresMat
    (156) exp -> valoresMat . ^ iSing
    (158) exp -> valoresMat . ^ valoresMat

    )               shift and go to state 281
    +               shift and go to state 154
    -               shift and go to state 156
    *               shift and go to state 155
    /               shift and go to state 157
    %               shift and go to state 153
    ^               shift and go to state 158


state 168

    (124) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (173) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (75) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (187) expBool -> valoresBool . OR and
    (189) expBool -> valoresBool . OR valoresBool
    (192) and -> valoresBool . AND eq
    (194) and -> valoresBool . AND valoresBool

    ?               shift and go to state 163
    OR              shift and go to state 162
    AND             shift and go to state 161


state 169

    (165) paren -> ( eMat . )
    (133) eMat -> eMat . + p
    (134) eMat -> eMat . - p
    (137) eMat -> eMat . + valoresMat
    (138) eMat -> eMat . - valoresMat
    (205) tCompare -> eMat .

    )               shift and go to state 282
    +               shift and go to state 164
    -               shift and go to state 165
    EQEQ            reduce using rule 205 (tCompare -> eMat .)
    DISTINTO        reduce using rule 205 (tCompare -> eMat .)
    >               reduce using rule 205 (tCompare -> eMat .)
    <               reduce using rule 205 (tCompare -> eMat .)


state 170

    (123) valoresMat -> ( . ternarioMat )
    (171) valoresBool -> ( . ternarioBool )
    (211) tCompare -> ( . ternarioBool )
    (212) tCompare -> ( . ternarioMat )
    (165) paren -> ( . eMat )
    (166) paren -> ( . valoresMat )
    (220) parenBool -> ( . expBool )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (49) funcBool -> . COLINEALES ( valores , valores )
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (96) vecVal -> . ID m
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 129
    (               shift and go to state 170
    BOOL            shift and go to state 142
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 283
    eMat                           shift and go to state 169
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 284
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    ternarioBool                   shift and go to state 220
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 285

state 171

    (182) ternario -> ( ternarioMat . )
    (123) valoresMat -> ( ternarioMat . )
    (212) tCompare -> ( ternarioMat . )

    )               shift and go to state 286


state 172

    (183) ternario -> ( ternarioBool . )
    (171) valoresBool -> ( ternarioBool . )
    (211) tCompare -> ( ternarioBool . )

    )               shift and go to state 287


state 173

    (117) valoresMat -> INT .
    (208) tCompare -> INT .

    )               reduce using rule 117 (valoresMat -> INT .)
    +               reduce using rule 117 (valoresMat -> INT .)
    -               reduce using rule 117 (valoresMat -> INT .)
    *               reduce using rule 117 (valoresMat -> INT .)
    /               reduce using rule 117 (valoresMat -> INT .)
    %               reduce using rule 117 (valoresMat -> INT .)
    ^               reduce using rule 117 (valoresMat -> INT .)
    EQEQ            reduce using rule 208 (tCompare -> INT .)
    DISTINTO        reduce using rule 208 (tCompare -> INT .)
    >               reduce using rule 208 (tCompare -> INT .)
    <               reduce using rule 208 (tCompare -> INT .)


state 174

    (118) valoresMat -> FLOAT .
    (210) tCompare -> FLOAT .

    )               reduce using rule 118 (valoresMat -> FLOAT .)
    +               reduce using rule 118 (valoresMat -> FLOAT .)
    -               reduce using rule 118 (valoresMat -> FLOAT .)
    *               reduce using rule 118 (valoresMat -> FLOAT .)
    /               reduce using rule 118 (valoresMat -> FLOAT .)
    %               reduce using rule 118 (valoresMat -> FLOAT .)
    ^               reduce using rule 118 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 210 (tCompare -> FLOAT .)
    DISTINTO        reduce using rule 210 (tCompare -> FLOAT .)
    >               reduce using rule 210 (tCompare -> FLOAT .)
    <               reduce using rule 210 (tCompare -> FLOAT .)


state 175

    (121) valoresMat -> varsOps .
    (170) valoresBool -> varsOps .
    (206) tCompare -> varsOps .

    +               reduce using rule 121 (valoresMat -> varsOps .)
    -               reduce using rule 121 (valoresMat -> varsOps .)
    *               reduce using rule 121 (valoresMat -> varsOps .)
    /               reduce using rule 121 (valoresMat -> varsOps .)
    %               reduce using rule 121 (valoresMat -> varsOps .)
    ^               reduce using rule 121 (valoresMat -> varsOps .)
    )               reduce using rule 121 (valoresMat -> varsOps .)
    ?               reduce using rule 170 (valoresBool -> varsOps .)
    OR              reduce using rule 170 (valoresBool -> varsOps .)
    AND             reduce using rule 170 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 206 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 206 (tCompare -> varsOps .)
    >               reduce using rule 206 (tCompare -> varsOps .)
    <               reduce using rule 206 (tCompare -> varsOps .)


state 176

    (185) ternario -> ( ternarioVars . )

    )               shift and go to state 288


state 177

    (120) valoresMat -> varYVals .
    (169) valoresBool -> varYVals .
    (108) varsOps -> varYVals . MASMAS
    (109) varsOps -> varYVals . MENOSMENOS
    (207) tCompare -> varYVals .

    +               reduce using rule 120 (valoresMat -> varYVals .)
    -               reduce using rule 120 (valoresMat -> varYVals .)
    *               reduce using rule 120 (valoresMat -> varYVals .)
    /               reduce using rule 120 (valoresMat -> varYVals .)
    %               reduce using rule 120 (valoresMat -> varYVals .)
    ^               reduce using rule 120 (valoresMat -> varYVals .)
    )               reduce using rule 120 (valoresMat -> varYVals .)
    ?               reduce using rule 169 (valoresBool -> varYVals .)
    OR              reduce using rule 169 (valoresBool -> varYVals .)
    AND             reduce using rule 169 (valoresBool -> varYVals .)
    MASMAS          shift and go to state 47
    MENOSMENOS      shift and go to state 44
    EQEQ            reduce using rule 207 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 207 (tCompare -> varYVals .)
    >               reduce using rule 207 (tCompare -> varYVals .)
    <               reduce using rule 207 (tCompare -> varYVals .)


state 178

    (220) parenBool -> ( expBool . )
    (125) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (174) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (80) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (186) expBool -> expBool . OR and
    (188) expBool -> expBool . OR valoresBool

    )               shift and go to state 289
    ?               shift and go to state 187
    OR              shift and go to state 186


state 179

    (163) iSing -> + valoresMat .

    ^               reduce using rule 163 (iSing -> + valoresMat .)
    *               reduce using rule 163 (iSing -> + valoresMat .)
    /               reduce using rule 163 (iSing -> + valoresMat .)
    %               reduce using rule 163 (iSing -> + valoresMat .)
    +               reduce using rule 163 (iSing -> + valoresMat .)
    -               reduce using rule 163 (iSing -> + valoresMat .)
    :               reduce using rule 163 (iSing -> + valoresMat .)
    EQEQ            reduce using rule 163 (iSing -> + valoresMat .)
    DISTINTO        reduce using rule 163 (iSing -> + valoresMat .)
    >               reduce using rule 163 (iSing -> + valoresMat .)
    <               reduce using rule 163 (iSing -> + valoresMat .)
    )               reduce using rule 163 (iSing -> + valoresMat .)
    ,               reduce using rule 163 (iSing -> + valoresMat .)
    ;               reduce using rule 163 (iSing -> + valoresMat .)
    ]               reduce using rule 163 (iSing -> + valoresMat .)
    AND             reduce using rule 163 (iSing -> + valoresMat .)
    OR              reduce using rule 163 (iSing -> + valoresMat .)
    ?               reduce using rule 163 (iSing -> + valoresMat .)
    }               reduce using rule 163 (iSing -> + valoresMat .)


state 180

    (165) paren -> ( . eMat )
    (166) paren -> ( . valoresMat )
    (123) valoresMat -> ( . ternarioMat )
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (96) vecVal -> . ID m
    (49) funcBool -> . COLINEALES ( valores , valores )
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 129
    (               shift and go to state 290
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    BOOL            shift and go to state 142
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 213
    eMat                           shift and go to state 169
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 214
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    varYVals                       shift and go to state 291
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 215

state 181

    (161) iSing -> + paren .

    ^               reduce using rule 161 (iSing -> + paren .)
    *               reduce using rule 161 (iSing -> + paren .)
    /               reduce using rule 161 (iSing -> + paren .)
    %               reduce using rule 161 (iSing -> + paren .)
    +               reduce using rule 161 (iSing -> + paren .)
    -               reduce using rule 161 (iSing -> + paren .)
    :               reduce using rule 161 (iSing -> + paren .)
    EQEQ            reduce using rule 161 (iSing -> + paren .)
    DISTINTO        reduce using rule 161 (iSing -> + paren .)
    >               reduce using rule 161 (iSing -> + paren .)
    <               reduce using rule 161 (iSing -> + paren .)
    )               reduce using rule 161 (iSing -> + paren .)
    ,               reduce using rule 161 (iSing -> + paren .)
    ;               reduce using rule 161 (iSing -> + paren .)
    ]               reduce using rule 161 (iSing -> + paren .)
    AND             reduce using rule 161 (iSing -> + paren .)
    OR              reduce using rule 161 (iSing -> + paren .)
    ?               reduce using rule 161 (iSing -> + paren .)
    }               reduce using rule 161 (iSing -> + paren .)


state 182

    (117) valoresMat -> INT .

    ^               reduce using rule 117 (valoresMat -> INT .)
    *               reduce using rule 117 (valoresMat -> INT .)
    /               reduce using rule 117 (valoresMat -> INT .)
    %               reduce using rule 117 (valoresMat -> INT .)
    +               reduce using rule 117 (valoresMat -> INT .)
    -               reduce using rule 117 (valoresMat -> INT .)
    ,               reduce using rule 117 (valoresMat -> INT .)
    EQEQ            reduce using rule 117 (valoresMat -> INT .)
    DISTINTO        reduce using rule 117 (valoresMat -> INT .)
    >               reduce using rule 117 (valoresMat -> INT .)
    <               reduce using rule 117 (valoresMat -> INT .)
    )               reduce using rule 117 (valoresMat -> INT .)
    ;               reduce using rule 117 (valoresMat -> INT .)
    ]               reduce using rule 117 (valoresMat -> INT .)
    AND             reduce using rule 117 (valoresMat -> INT .)
    OR              reduce using rule 117 (valoresMat -> INT .)
    ?               reduce using rule 117 (valoresMat -> INT .)
    :               reduce using rule 117 (valoresMat -> INT .)
    }               reduce using rule 117 (valoresMat -> INT .)


state 183

    (120) valoresMat -> varYVals .
    (108) varsOps -> varYVals . MASMAS
    (109) varsOps -> varYVals . MENOSMENOS

    ^               reduce using rule 120 (valoresMat -> varYVals .)
    *               reduce using rule 120 (valoresMat -> varYVals .)
    /               reduce using rule 120 (valoresMat -> varYVals .)
    %               reduce using rule 120 (valoresMat -> varYVals .)
    +               reduce using rule 120 (valoresMat -> varYVals .)
    -               reduce using rule 120 (valoresMat -> varYVals .)
    ,               reduce using rule 120 (valoresMat -> varYVals .)
    EQEQ            reduce using rule 120 (valoresMat -> varYVals .)
    DISTINTO        reduce using rule 120 (valoresMat -> varYVals .)
    >               reduce using rule 120 (valoresMat -> varYVals .)
    <               reduce using rule 120 (valoresMat -> varYVals .)
    )               reduce using rule 120 (valoresMat -> varYVals .)
    ;               reduce using rule 120 (valoresMat -> varYVals .)
    ]               reduce using rule 120 (valoresMat -> varYVals .)
    AND             reduce using rule 120 (valoresMat -> varYVals .)
    OR              reduce using rule 120 (valoresMat -> varYVals .)
    ?               reduce using rule 120 (valoresMat -> varYVals .)
    :               reduce using rule 120 (valoresMat -> varYVals .)
    }               reduce using rule 120 (valoresMat -> varYVals .)
    MASMAS          shift and go to state 47
    MENOSMENOS      shift and go to state 44


state 184

    (162) iSing -> - valoresMat .

    ^               reduce using rule 162 (iSing -> - valoresMat .)
    *               reduce using rule 162 (iSing -> - valoresMat .)
    /               reduce using rule 162 (iSing -> - valoresMat .)
    %               reduce using rule 162 (iSing -> - valoresMat .)
    +               reduce using rule 162 (iSing -> - valoresMat .)
    -               reduce using rule 162 (iSing -> - valoresMat .)
    :               reduce using rule 162 (iSing -> - valoresMat .)
    EQEQ            reduce using rule 162 (iSing -> - valoresMat .)
    DISTINTO        reduce using rule 162 (iSing -> - valoresMat .)
    >               reduce using rule 162 (iSing -> - valoresMat .)
    <               reduce using rule 162 (iSing -> - valoresMat .)
    )               reduce using rule 162 (iSing -> - valoresMat .)
    ,               reduce using rule 162 (iSing -> - valoresMat .)
    ;               reduce using rule 162 (iSing -> - valoresMat .)
    ]               reduce using rule 162 (iSing -> - valoresMat .)
    AND             reduce using rule 162 (iSing -> - valoresMat .)
    OR              reduce using rule 162 (iSing -> - valoresMat .)
    ?               reduce using rule 162 (iSing -> - valoresMat .)
    }               reduce using rule 162 (iSing -> - valoresMat .)


state 185

    (160) iSing -> - paren .

    ^               reduce using rule 160 (iSing -> - paren .)
    *               reduce using rule 160 (iSing -> - paren .)
    /               reduce using rule 160 (iSing -> - paren .)
    %               reduce using rule 160 (iSing -> - paren .)
    +               reduce using rule 160 (iSing -> - paren .)
    -               reduce using rule 160 (iSing -> - paren .)
    :               reduce using rule 160 (iSing -> - paren .)
    EQEQ            reduce using rule 160 (iSing -> - paren .)
    DISTINTO        reduce using rule 160 (iSing -> - paren .)
    >               reduce using rule 160 (iSing -> - paren .)
    <               reduce using rule 160 (iSing -> - paren .)
    )               reduce using rule 160 (iSing -> - paren .)
    ,               reduce using rule 160 (iSing -> - paren .)
    ;               reduce using rule 160 (iSing -> - paren .)
    ]               reduce using rule 160 (iSing -> - paren .)
    AND             reduce using rule 160 (iSing -> - paren .)
    OR              reduce using rule 160 (iSing -> - paren .)
    ?               reduce using rule 160 (iSing -> - paren .)
    }               reduce using rule 160 (iSing -> - paren .)


state 186

    (186) expBool -> expBool OR . and
    (188) expBool -> expBool OR . valoresBool
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (49) funcBool -> . COLINEALES ( valores , valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (96) vecVal -> . ID m
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (220) parenBool -> . ( expBool )
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )

    BOOL            shift and go to state 142
    (               shift and go to state 138
    AND             reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    ?               reduce using rule 172 (valoresBool -> .)
    ,               reduce using rule 172 (valoresBool -> .)
    )               reduce using rule 172 (valoresBool -> .)
    ;               reduce using rule 172 (valoresBool -> .)
    ]               reduce using rule 172 (valoresBool -> .)
    :               reduce using rule 172 (valoresBool -> .)
    }               reduce using rule 172 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    STRING          shift and go to state 129
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    and                            shift and go to state 292
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 135
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    mayor                          shift and go to state 108
    valoresBool                    shift and go to state 293
    eMat                           shift and go to state 137
    vecVal                         shift and go to state 8
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 143
    exp                            shift and go to state 106
    varYVals                       shift and go to state 144
    parenBool                      shift and go to state 92

state 187

    (125) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (174) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (80) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (175) valoresTernarioBool -> . BOOL
    (176) valoresTernarioBool -> . funcBool
    (177) valoresTernarioBool -> . ternarioBool
    (178) valoresTernarioBool -> . ( ternarioBool )
    (179) valoresTernarioBool -> . expBool
    (85) valoresTernarioVars -> . varsOps
    (86) valoresTernarioVars -> . varYVals
    (87) valoresTernarioVars -> . reg
    (88) valoresTernarioVars -> . vec
    (89) valoresTernarioVars -> . ternarioVars
    (90) valoresTernarioVars -> . ( ternarioVars )
    (91) valoresTernarioVars -> . atributos
    (92) valoresTernarioVars -> . RES
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (49) funcBool -> . COLINEALES ( valores , valores )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (103) reg -> . { campos }
    (54) vec -> . [ elem ]
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (71) atributos -> . ID . valoresCampos
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (96) vecVal -> . ID m
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    (               shift and go to state 273
    BOOL            shift and go to state 271
    RES             shift and go to state 257
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 259
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 294
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 295
    expBool                        shift and go to state 276
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 296
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 272
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 275
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 188

    (199) eq -> tCompare DISTINTO . mayor
    (203) eq -> tCompare DISTINTO . tCompare
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (96) vecVal -> . ID m
    (220) parenBool -> . ( expBool )
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )

    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    (               shift and go to state 245
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 52
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    NOT             shift and go to state 105
    STRING          shift and go to state 129
    -               shift and go to state 85
    +               shift and go to state 84

    funcInt                        shift and go to state 135
    menor                          shift and go to state 76
    mayor                          shift and go to state 297
    valoresMat                     shift and go to state 78
    eMat                           shift and go to state 137
    vecVal                         shift and go to state 8
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 298
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 247
    exp                            shift and go to state 106
    varYVals                       shift and go to state 248
    parenBool                      shift and go to state 92

state 189

    (198) eq -> tCompare EQEQ . mayor
    (202) eq -> tCompare EQEQ . tCompare
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (96) vecVal -> . ID m
    (220) parenBool -> . ( expBool )
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )

    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    (               shift and go to state 245
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 52
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    NOT             shift and go to state 105
    STRING          shift and go to state 129
    -               shift and go to state 85
    +               shift and go to state 84

    funcInt                        shift and go to state 135
    menor                          shift and go to state 76
    mayor                          shift and go to state 299
    valoresMat                     shift and go to state 78
    eMat                           shift and go to state 137
    vecVal                         shift and go to state 8
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 300
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 247
    exp                            shift and go to state 106
    varYVals                       shift and go to state 248
    parenBool                      shift and go to state 92

state 190

    (215) menor -> tCompare < . tCompare
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (96) vecVal -> . ID m
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )

    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    (               shift and go to state 301
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 52
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    STRING          shift and go to state 129
    -               shift and go to state 85
    +               shift and go to state 84

    eMat                           shift and go to state 137
    funcInt                        shift and go to state 135
    p                              shift and go to state 102
    tCompare                       shift and go to state 302
    varsOps                        shift and go to state 247
    valoresMat                     shift and go to state 78
    paren                          shift and go to state 94
    exp                            shift and go to state 106
    varYVals                       shift and go to state 248
    vecVal                         shift and go to state 8
    iSing                          shift and go to state 91

state 191

    (213) mayor -> tCompare > . tCompare
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (96) vecVal -> . ID m
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )

    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    (               shift and go to state 301
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 52
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    STRING          shift and go to state 129
    -               shift and go to state 85
    +               shift and go to state 84

    eMat                           shift and go to state 137
    funcInt                        shift and go to state 135
    p                              shift and go to state 102
    tCompare                       shift and go to state 303
    varsOps                        shift and go to state 247
    valoresMat                     shift and go to state 78
    paren                          shift and go to state 94
    exp                            shift and go to state 106
    varYVals                       shift and go to state 248
    vecVal                         shift and go to state 8
    iSing                          shift and go to state 91

state 192

    (55) elem -> valores . , elem
    (56) elem -> valores .

    ,               shift and go to state 304
    ]               reduce using rule 56 (elem -> valores .)


state 193

    (54) vec -> [ elem . ]

    ]               shift and go to state 305


state 194

    (71) atributos -> ID . . valoresCampos
    (72) valoresCampos -> . varYVals
    (73) valoresCampos -> . END
    (74) valoresCampos -> . BEGIN
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (96) vecVal -> . ID m

    END             shift and go to state 307
    BEGIN           shift and go to state 306
    ID              shift and go to state 52

    varYVals                       shift and go to state 309
    vecVal                         shift and go to state 8
    valoresCampos                  shift and go to state 308

state 195

    (49) funcBool -> COLINEALES ( valores , . valores )
    (57) valores -> . eMat
    (58) valores -> . expBool
    (59) valores -> . funcReturn
    (60) valores -> . reg
    (61) valores -> . INT
    (62) valores -> . FLOAT
    (63) valores -> . STRING
    (64) valores -> . BOOL
    (65) valores -> . varYVals
    (66) valores -> . varsOps
    (67) valores -> . vec
    (68) valores -> . ternario
    (69) valores -> . atributos
    (70) valores -> . RES
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (103) reg -> . { campos }
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (54) vec -> . [ elem ]
    (180) ternario -> . ternarioMat
    (181) ternario -> . ternarioBool
    (182) ternario -> . ( ternarioMat )
    (183) ternario -> . ( ternarioBool )
    (184) ternario -> . ternarioVars
    (185) ternario -> . ( ternarioVars )
    (71) atributos -> . ID . valoresCampos
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )
    (96) vecVal -> . ID m
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    ?               reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 310
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 196

    (144) p -> p % . exp
    (150) p -> p % . valoresMat
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (96) vecVal -> . ID m

    INT             shift and go to state 182
    FLOAT           shift and go to state 131
    STRING          shift and go to state 129
    (               shift and go to state 128
    -               shift and go to state 85
    +               shift and go to state 84
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30

    exp                            shift and go to state 312
    funcInt                        shift and go to state 126
    iSing                          shift and go to state 91
    valoresMat                     shift and go to state 311
    paren                          shift and go to state 94
    varYVals                       shift and go to state 183
    vecVal                         shift and go to state 8
    varsOps                        shift and go to state 132

state 197

    (142) p -> p * . exp
    (148) p -> p * . valoresMat
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (96) vecVal -> . ID m

    INT             shift and go to state 182
    FLOAT           shift and go to state 131
    STRING          shift and go to state 129
    (               shift and go to state 128
    -               shift and go to state 85
    +               shift and go to state 84
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30

    exp                            shift and go to state 314
    funcInt                        shift and go to state 126
    iSing                          shift and go to state 91
    valoresMat                     shift and go to state 313
    paren                          shift and go to state 94
    varYVals                       shift and go to state 183
    vecVal                         shift and go to state 8
    varsOps                        shift and go to state 132

state 198

    (143) p -> p / . exp
    (149) p -> p / . valoresMat
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (96) vecVal -> . ID m

    INT             shift and go to state 182
    FLOAT           shift and go to state 131
    STRING          shift and go to state 129
    (               shift and go to state 128
    -               shift and go to state 85
    +               shift and go to state 84
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30

    exp                            shift and go to state 316
    funcInt                        shift and go to state 126
    iSing                          shift and go to state 91
    valoresMat                     shift and go to state 315
    paren                          shift and go to state 94
    varYVals                       shift and go to state 183
    vecVal                         shift and go to state 8
    varsOps                        shift and go to state 132

state 199

    (171) valoresBool -> ( . ternarioBool )
    (220) parenBool -> ( . expBool )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (49) funcBool -> . COLINEALES ( valores , valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (96) vecVal -> . ID m
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (220) parenBool -> . ( expBool )
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )

    BOOL            shift and go to state 142
    (               shift and go to state 138
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    STRING          shift and go to state 129
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    and                            shift and go to state 71
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 135
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 317
    eMat                           shift and go to state 137
    mayor                          shift and go to state 108
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    ternarioBool                   shift and go to state 318
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 143
    exp                            shift and go to state 106
    varYVals                       shift and go to state 144
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 319

state 200

    (217) not -> NOT not .

    EQEQ            reduce using rule 217 (not -> NOT not .)
    DISTINTO        reduce using rule 217 (not -> NOT not .)
    AND             reduce using rule 217 (not -> NOT not .)
    OR              reduce using rule 217 (not -> NOT not .)
    ?               reduce using rule 217 (not -> NOT not .)
    ;               reduce using rule 217 (not -> NOT not .)
    )               reduce using rule 217 (not -> NOT not .)
    :               reduce using rule 217 (not -> NOT not .)
    ,               reduce using rule 217 (not -> NOT not .)
    ]               reduce using rule 217 (not -> NOT not .)
    }               reduce using rule 217 (not -> NOT not .)


state 201

    (170) valoresBool -> varsOps .

    EQEQ            reduce using rule 170 (valoresBool -> varsOps .)
    DISTINTO        reduce using rule 170 (valoresBool -> varsOps .)
    AND             reduce using rule 170 (valoresBool -> varsOps .)
    OR              reduce using rule 170 (valoresBool -> varsOps .)
    ?               reduce using rule 170 (valoresBool -> varsOps .)
    ,               reduce using rule 170 (valoresBool -> varsOps .)
    )               reduce using rule 170 (valoresBool -> varsOps .)
    ;               reduce using rule 170 (valoresBool -> varsOps .)
    ]               reduce using rule 170 (valoresBool -> varsOps .)
    :               reduce using rule 170 (valoresBool -> varsOps .)
    }               reduce using rule 170 (valoresBool -> varsOps .)


state 202

    (169) valoresBool -> varYVals .
    (108) varsOps -> varYVals . MASMAS
    (109) varsOps -> varYVals . MENOSMENOS

    EQEQ            reduce using rule 169 (valoresBool -> varYVals .)
    DISTINTO        reduce using rule 169 (valoresBool -> varYVals .)
    AND             reduce using rule 169 (valoresBool -> varYVals .)
    OR              reduce using rule 169 (valoresBool -> varYVals .)
    ?               reduce using rule 169 (valoresBool -> varYVals .)
    ,               reduce using rule 169 (valoresBool -> varYVals .)
    )               reduce using rule 169 (valoresBool -> varYVals .)
    ;               reduce using rule 169 (valoresBool -> varYVals .)
    ]               reduce using rule 169 (valoresBool -> varYVals .)
    :               reduce using rule 169 (valoresBool -> varYVals .)
    }               reduce using rule 169 (valoresBool -> varYVals .)
    MASMAS          shift and go to state 47
    MENOSMENOS      shift and go to state 44


state 203

    (218) not -> NOT valoresBool .

    EQEQ            reduce using rule 218 (not -> NOT valoresBool .)
    DISTINTO        reduce using rule 218 (not -> NOT valoresBool .)
    AND             reduce using rule 218 (not -> NOT valoresBool .)
    OR              reduce using rule 218 (not -> NOT valoresBool .)
    ?               reduce using rule 218 (not -> NOT valoresBool .)
    ;               reduce using rule 218 (not -> NOT valoresBool .)
    )               reduce using rule 218 (not -> NOT valoresBool .)
    :               reduce using rule 218 (not -> NOT valoresBool .)
    ,               reduce using rule 218 (not -> NOT valoresBool .)
    ]               reduce using rule 218 (not -> NOT valoresBool .)
    }               reduce using rule 218 (not -> NOT valoresBool .)


state 204

    (155) exp -> exp ^ . iSing
    (157) exp -> exp ^ . valoresMat
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (96) vecVal -> . ID m

    -               shift and go to state 85
    +               shift and go to state 84
    INT             shift and go to state 182
    FLOAT           shift and go to state 131
    STRING          shift and go to state 129
    (               shift and go to state 128
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30

    funcInt                        shift and go to state 126
    iSing                          shift and go to state 321
    valoresMat                     shift and go to state 320
    paren                          shift and go to state 94
    varYVals                       shift and go to state 183
    vecVal                         shift and go to state 8
    varsOps                        shift and go to state 132

state 205

    (103) reg -> { campos . }

    }               shift and go to state 322


state 206

    (104) campos -> ID . : valores , campos
    (105) campos -> ID . : valores

    :               shift and go to state 323


state 207

    (31) loop -> WHILE ( valores ) .

    {               reduce using rule 31 (loop -> WHILE ( valores ) .)
    IF              reduce using rule 31 (loop -> WHILE ( valores ) .)
    DO              reduce using rule 31 (loop -> WHILE ( valores ) .)
    RETURN          reduce using rule 31 (loop -> WHILE ( valores ) .)
    ;               reduce using rule 31 (loop -> WHILE ( valores ) .)
    WHILE           reduce using rule 31 (loop -> WHILE ( valores ) .)
    FOR             reduce using rule 31 (loop -> WHILE ( valores ) .)
    MENOSMENOS      reduce using rule 31 (loop -> WHILE ( valores ) .)
    MASMAS          reduce using rule 31 (loop -> WHILE ( valores ) .)
    ID              reduce using rule 31 (loop -> WHILE ( valores ) .)
    PRINT           reduce using rule 31 (loop -> WHILE ( valores ) .)
    MULTIESCALAR    reduce using rule 31 (loop -> WHILE ( valores ) .)
    LENGTH          reduce using rule 31 (loop -> WHILE ( valores ) .)
    CAPITALIZAR     reduce using rule 31 (loop -> WHILE ( valores ) .)
    COLINEALES      reduce using rule 31 (loop -> WHILE ( valores ) .)


state 208

    (50) funcVoid -> PRINT ( valores ) .

    ;               reduce using rule 50 (funcVoid -> PRINT ( valores ) .)
    )               reduce using rule 50 (funcVoid -> PRINT ( valores ) .)


state 209

    (32) loop -> FOR ( primParam ; . valores ; tercerParam )
    (57) valores -> . eMat
    (58) valores -> . expBool
    (59) valores -> . funcReturn
    (60) valores -> . reg
    (61) valores -> . INT
    (62) valores -> . FLOAT
    (63) valores -> . STRING
    (64) valores -> . BOOL
    (65) valores -> . varYVals
    (66) valores -> . varsOps
    (67) valores -> . vec
    (68) valores -> . ternario
    (69) valores -> . atributos
    (70) valores -> . RES
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (103) reg -> . { campos }
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (54) vec -> . [ elem ]
    (180) ternario -> . ternarioMat
    (181) ternario -> . ternarioBool
    (182) ternario -> . ( ternarioMat )
    (183) ternario -> . ( ternarioBool )
    (184) ternario -> . ternarioVars
    (185) ternario -> . ( ternarioVars )
    (71) atributos -> . ID . valoresCampos
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )
    (96) vecVal -> . ID m
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    ?               reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 324
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 210

    (47) funcInt -> LENGTH ( valores ) .

    EQEQ            reduce using rule 47 (funcInt -> LENGTH ( valores ) .)
    DISTINTO        reduce using rule 47 (funcInt -> LENGTH ( valores ) .)
    >               reduce using rule 47 (funcInt -> LENGTH ( valores ) .)
    <               reduce using rule 47 (funcInt -> LENGTH ( valores ) .)
    +               reduce using rule 47 (funcInt -> LENGTH ( valores ) .)
    -               reduce using rule 47 (funcInt -> LENGTH ( valores ) .)
    *               reduce using rule 47 (funcInt -> LENGTH ( valores ) .)
    /               reduce using rule 47 (funcInt -> LENGTH ( valores ) .)
    %               reduce using rule 47 (funcInt -> LENGTH ( valores ) .)
    ^               reduce using rule 47 (funcInt -> LENGTH ( valores ) .)
    :               reduce using rule 47 (funcInt -> LENGTH ( valores ) .)
    ;               reduce using rule 47 (funcInt -> LENGTH ( valores ) .)
    ,               reduce using rule 47 (funcInt -> LENGTH ( valores ) .)
    )               reduce using rule 47 (funcInt -> LENGTH ( valores ) .)
    ]               reduce using rule 47 (funcInt -> LENGTH ( valores ) .)
    }               reduce using rule 47 (funcInt -> LENGTH ( valores ) .)
    AND             reduce using rule 47 (funcInt -> LENGTH ( valores ) .)
    OR              reduce using rule 47 (funcInt -> LENGTH ( valores ) .)
    ?               reduce using rule 47 (funcInt -> LENGTH ( valores ) .)


state 211

    (116) varAsig -> ID . ID = . valoresAsig
    (110) valoresAsig -> . valores
    (57) valores -> . eMat
    (58) valores -> . expBool
    (59) valores -> . funcReturn
    (60) valores -> . reg
    (61) valores -> . INT
    (62) valores -> . FLOAT
    (63) valores -> . STRING
    (64) valores -> . BOOL
    (65) valores -> . varYVals
    (66) valores -> . varsOps
    (67) valores -> . vec
    (68) valores -> . ternario
    (69) valores -> . atributos
    (70) valores -> . RES
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (103) reg -> . { campos }
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (54) vec -> . [ elem ]
    (180) ternario -> . ternarioMat
    (181) ternario -> . ternarioBool
    (182) ternario -> . ( ternarioMat )
    (183) ternario -> . ( ternarioBool )
    (184) ternario -> . ternarioVars
    (185) ternario -> . ( ternarioVars )
    (71) atributos -> . ID . valoresCampos
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )
    (96) vecVal -> . ID m
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    ?               reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    valoresAsig                    shift and go to state 325
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 115
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 212

    (101) m -> [ eMat ] . m
    (102) m -> [ eMat ] .
    (97) m -> . [ INT ]
    (98) m -> . [ INT ] m
    (99) m -> . [ varYVals ] m
    (100) m -> . [ varYVals ]
    (101) m -> . [ eMat ] m
    (102) m -> . [ eMat ]

    .               reduce using rule 102 (m -> [ eMat ] .)
    MASMAS          reduce using rule 102 (m -> [ eMat ] .)
    MENOSMENOS      reduce using rule 102 (m -> [ eMat ] .)
    MULEQ           reduce using rule 102 (m -> [ eMat ] .)
    DIVEQ           reduce using rule 102 (m -> [ eMat ] .)
    MASEQ           reduce using rule 102 (m -> [ eMat ] .)
    MENOSEQ         reduce using rule 102 (m -> [ eMat ] .)
    =               reduce using rule 102 (m -> [ eMat ] .)
    ,               reduce using rule 102 (m -> [ eMat ] .)
    +               reduce using rule 102 (m -> [ eMat ] .)
    -               reduce using rule 102 (m -> [ eMat ] .)
    *               reduce using rule 102 (m -> [ eMat ] .)
    /               reduce using rule 102 (m -> [ eMat ] .)
    %               reduce using rule 102 (m -> [ eMat ] .)
    ^               reduce using rule 102 (m -> [ eMat ] .)
    OR              reduce using rule 102 (m -> [ eMat ] .)
    AND             reduce using rule 102 (m -> [ eMat ] .)
    ?               reduce using rule 102 (m -> [ eMat ] .)
    EQEQ            reduce using rule 102 (m -> [ eMat ] .)
    DISTINTO        reduce using rule 102 (m -> [ eMat ] .)
    >               reduce using rule 102 (m -> [ eMat ] .)
    <               reduce using rule 102 (m -> [ eMat ] .)
    )               reduce using rule 102 (m -> [ eMat ] .)
    ;               reduce using rule 102 (m -> [ eMat ] .)
    ]               reduce using rule 102 (m -> [ eMat ] .)
    :               reduce using rule 102 (m -> [ eMat ] .)
    }               reduce using rule 102 (m -> [ eMat ] .)
    [               shift and go to state 58

    m                              shift and go to state 326

state 213

    (124) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (187) expBool -> valoresBool . OR and
    (189) expBool -> valoresBool . OR valoresBool
    (192) and -> valoresBool . AND eq
    (194) and -> valoresBool . AND valoresBool

    ?               shift and go to state 327
    OR              shift and go to state 162
    AND             shift and go to state 161


state 214

    (123) valoresMat -> ( ternarioMat . )

    )               shift and go to state 328


state 215

    (125) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (186) expBool -> expBool . OR and
    (188) expBool -> expBool . OR valoresBool

    ?               shift and go to state 329
    OR              shift and go to state 186


state 216

    (97) m -> [ INT ] .
    (98) m -> [ INT ] . m
    (97) m -> . [ INT ]
    (98) m -> . [ INT ] m
    (99) m -> . [ varYVals ] m
    (100) m -> . [ varYVals ]
    (101) m -> . [ eMat ] m
    (102) m -> . [ eMat ]

    .               reduce using rule 97 (m -> [ INT ] .)
    MASMAS          reduce using rule 97 (m -> [ INT ] .)
    MENOSMENOS      reduce using rule 97 (m -> [ INT ] .)
    MULEQ           reduce using rule 97 (m -> [ INT ] .)
    DIVEQ           reduce using rule 97 (m -> [ INT ] .)
    MASEQ           reduce using rule 97 (m -> [ INT ] .)
    MENOSEQ         reduce using rule 97 (m -> [ INT ] .)
    =               reduce using rule 97 (m -> [ INT ] .)
    ,               reduce using rule 97 (m -> [ INT ] .)
    +               reduce using rule 97 (m -> [ INT ] .)
    -               reduce using rule 97 (m -> [ INT ] .)
    *               reduce using rule 97 (m -> [ INT ] .)
    /               reduce using rule 97 (m -> [ INT ] .)
    %               reduce using rule 97 (m -> [ INT ] .)
    ^               reduce using rule 97 (m -> [ INT ] .)
    OR              reduce using rule 97 (m -> [ INT ] .)
    AND             reduce using rule 97 (m -> [ INT ] .)
    ?               reduce using rule 97 (m -> [ INT ] .)
    EQEQ            reduce using rule 97 (m -> [ INT ] .)
    DISTINTO        reduce using rule 97 (m -> [ INT ] .)
    >               reduce using rule 97 (m -> [ INT ] .)
    <               reduce using rule 97 (m -> [ INT ] .)
    )               reduce using rule 97 (m -> [ INT ] .)
    ;               reduce using rule 97 (m -> [ INT ] .)
    ]               reduce using rule 97 (m -> [ INT ] .)
    :               reduce using rule 97 (m -> [ INT ] .)
    }               reduce using rule 97 (m -> [ INT ] .)
    [               shift and go to state 58

    m                              shift and go to state 330

state 217

    (99) m -> [ varYVals ] . m
    (100) m -> [ varYVals ] .
    (97) m -> . [ INT ]
    (98) m -> . [ INT ] m
    (99) m -> . [ varYVals ] m
    (100) m -> . [ varYVals ]
    (101) m -> . [ eMat ] m
    (102) m -> . [ eMat ]

    .               reduce using rule 100 (m -> [ varYVals ] .)
    MASMAS          reduce using rule 100 (m -> [ varYVals ] .)
    MENOSMENOS      reduce using rule 100 (m -> [ varYVals ] .)
    MULEQ           reduce using rule 100 (m -> [ varYVals ] .)
    DIVEQ           reduce using rule 100 (m -> [ varYVals ] .)
    MASEQ           reduce using rule 100 (m -> [ varYVals ] .)
    MENOSEQ         reduce using rule 100 (m -> [ varYVals ] .)
    =               reduce using rule 100 (m -> [ varYVals ] .)
    ,               reduce using rule 100 (m -> [ varYVals ] .)
    +               reduce using rule 100 (m -> [ varYVals ] .)
    -               reduce using rule 100 (m -> [ varYVals ] .)
    *               reduce using rule 100 (m -> [ varYVals ] .)
    /               reduce using rule 100 (m -> [ varYVals ] .)
    %               reduce using rule 100 (m -> [ varYVals ] .)
    ^               reduce using rule 100 (m -> [ varYVals ] .)
    OR              reduce using rule 100 (m -> [ varYVals ] .)
    AND             reduce using rule 100 (m -> [ varYVals ] .)
    ?               reduce using rule 100 (m -> [ varYVals ] .)
    EQEQ            reduce using rule 100 (m -> [ varYVals ] .)
    DISTINTO        reduce using rule 100 (m -> [ varYVals ] .)
    >               reduce using rule 100 (m -> [ varYVals ] .)
    <               reduce using rule 100 (m -> [ varYVals ] .)
    )               reduce using rule 100 (m -> [ varYVals ] .)
    ;               reduce using rule 100 (m -> [ varYVals ] .)
    ]               reduce using rule 100 (m -> [ varYVals ] .)
    :               reduce using rule 100 (m -> [ varYVals ] .)
    }               reduce using rule 100 (m -> [ varYVals ] .)
    [               shift and go to state 58

    m                              shift and go to state 331

state 218

    (173) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (124) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (187) expBool -> valoresBool . OR and
    (189) expBool -> valoresBool . OR valoresBool
    (192) and -> valoresBool . AND eq
    (194) and -> valoresBool . AND valoresBool

    ?               shift and go to state 332
    OR              shift and go to state 162
    AND             shift and go to state 161


state 219

    (212) tCompare -> ( ternarioMat . )
    (123) valoresMat -> ( ternarioMat . )

    )               shift and go to state 333


state 220

    (171) valoresBool -> ( ternarioBool . )
    (211) tCompare -> ( ternarioBool . )

    )               shift and go to state 334


state 221

    (220) parenBool -> ( expBool . )
    (174) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (125) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (186) expBool -> expBool . OR and
    (188) expBool -> expBool . OR valoresBool

    )               shift and go to state 289
    ?               shift and go to state 335
    OR              shift and go to state 186


state 222

    (6) lAbierta -> IF ( cosaBooleana ) . linea
    (7) lAbierta -> IF ( cosaBooleana ) . { g } ELSE lAbierta
    (8) lAbierta -> IF ( cosaBooleana ) . lCerrada ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) . { g }
    (14) lCerrada -> IF ( cosaBooleana ) . { g } ELSE { g }
    (15) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE { g }
    (16) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) . { g } ELSE lCerrada
    (18) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE COMMENT com lCerrada
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . DO { g } WHILE ( valores ) ;
    (25) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (26) sentencia -> . varsOps ;
    (27) sentencia -> . func ;
    (28) sentencia -> . varAsig ;
    (29) sentencia -> . RETURN ;
    (30) sentencia -> . ;
    (31) loop -> . WHILE ( valores )
    (32) loop -> . FOR ( primParam ; valores ; tercerParam )
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (41) func -> . funcReturn
    (42) func -> . funcVoid
    (111) varAsig -> . varYVals MULEQ valoresAsig
    (112) varAsig -> . varYVals DIVEQ valoresAsig
    (113) varAsig -> . varYVals MASEQ valoresAsig
    (114) varAsig -> . varYVals MENOSEQ valoresAsig
    (115) varAsig -> . varYVals = valoresAsig
    (116) varAsig -> . ID . ID = valoresAsig
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (50) funcVoid -> . PRINT ( valores )
    (96) vecVal -> . ID m
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )

    {               shift and go to state 340
    COMMENT         shift and go to state 337
    IF              shift and go to state 338
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 22
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 339
    lAbierta                       shift and go to state 29
    linea                          shift and go to state 336
    varYVals                       shift and go to state 11
    loop                           shift and go to state 341

state 223

    (46) funcInt -> MULTIESCALAR ( valores , . valores param )
    (57) valores -> . eMat
    (58) valores -> . expBool
    (59) valores -> . funcReturn
    (60) valores -> . reg
    (61) valores -> . INT
    (62) valores -> . FLOAT
    (63) valores -> . STRING
    (64) valores -> . BOOL
    (65) valores -> . varYVals
    (66) valores -> . varsOps
    (67) valores -> . vec
    (68) valores -> . ternario
    (69) valores -> . atributos
    (70) valores -> . RES
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (103) reg -> . { campos }
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (54) vec -> . [ elem ]
    (180) ternario -> . ternarioMat
    (181) ternario -> . ternarioBool
    (182) ternario -> . ( ternarioMat )
    (183) ternario -> . ( ternarioBool )
    (184) ternario -> . ternarioVars
    (185) ternario -> . ( ternarioVars )
    (71) atributos -> . ID . valoresCampos
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )
    (96) vecVal -> . ID m
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    ?               reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 342
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 224

    (48) funcString -> CAPITALIZAR ( valores ) .

    ;               reduce using rule 48 (funcString -> CAPITALIZAR ( valores ) .)
    )               reduce using rule 48 (funcString -> CAPITALIZAR ( valores ) .)
    ,               reduce using rule 48 (funcString -> CAPITALIZAR ( valores ) .)
    ]               reduce using rule 48 (funcString -> CAPITALIZAR ( valores ) .)
    }               reduce using rule 48 (funcString -> CAPITALIZAR ( valores ) .)


state 225

    (22) lCerrada -> loop { g } .

    ELSE            reduce using rule 22 (lCerrada -> loop { g } .)
    COMMENT         reduce using rule 22 (lCerrada -> loop { g } .)
    IF              reduce using rule 22 (lCerrada -> loop { g } .)
    DO              reduce using rule 22 (lCerrada -> loop { g } .)
    WHILE           reduce using rule 22 (lCerrada -> loop { g } .)
    FOR             reduce using rule 22 (lCerrada -> loop { g } .)
    RETURN          reduce using rule 22 (lCerrada -> loop { g } .)
    ;               reduce using rule 22 (lCerrada -> loop { g } .)
    MENOSMENOS      reduce using rule 22 (lCerrada -> loop { g } .)
    MASMAS          reduce using rule 22 (lCerrada -> loop { g } .)
    ID              reduce using rule 22 (lCerrada -> loop { g } .)
    PRINT           reduce using rule 22 (lCerrada -> loop { g } .)
    MULTIESCALAR    reduce using rule 22 (lCerrada -> loop { g } .)
    LENGTH          reduce using rule 22 (lCerrada -> loop { g } .)
    CAPITALIZAR     reduce using rule 22 (lCerrada -> loop { g } .)
    COLINEALES      reduce using rule 22 (lCerrada -> loop { g } .)
    $end            reduce using rule 22 (lCerrada -> loop { g } .)
    }               reduce using rule 22 (lCerrada -> loop { g } .)


state 226

    (14) lCerrada -> IF ( cosaBooleana ) . { g } ELSE { g }
    (15) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE { g }
    (16) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) . { g } ELSE lCerrada
    (18) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE COMMENT com lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . DO { g } WHILE ( valores ) ;
    (25) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (26) sentencia -> . varsOps ;
    (27) sentencia -> . func ;
    (28) sentencia -> . varAsig ;
    (29) sentencia -> . RETURN ;
    (30) sentencia -> . ;
    (31) loop -> . WHILE ( valores )
    (32) loop -> . FOR ( primParam ; valores ; tercerParam )
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (41) func -> . funcReturn
    (42) func -> . funcVoid
    (111) varAsig -> . varYVals MULEQ valoresAsig
    (112) varAsig -> . varYVals DIVEQ valoresAsig
    (113) varAsig -> . varYVals MASEQ valoresAsig
    (114) varAsig -> . varYVals MENOSEQ valoresAsig
    (115) varAsig -> . varYVals = valoresAsig
    (116) varAsig -> . ID . ID = valoresAsig
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (50) funcVoid -> . PRINT ( valores )
    (96) vecVal -> . ID m
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )

    {               shift and go to state 344
    COMMENT         shift and go to state 337
    IF              shift and go to state 33
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 22
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 343
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 36

state 227

    (25) lCerrada -> DO lCerrada WHILE ( valores . ) ;

    )               shift and go to state 345


state 228

    (24) lCerrada -> DO { g } WHILE . ( valores ) ;

    (               shift and go to state 346


state 229

    (191) and -> and AND eq .
    (196) eq -> eq . EQEQ mayor
    (197) eq -> eq . DISTINTO mayor
    (200) eq -> eq . EQEQ tCompare
    (201) eq -> eq . DISTINTO tCompare

    AND             reduce using rule 191 (and -> and AND eq .)
    OR              reduce using rule 191 (and -> and AND eq .)
    ?               reduce using rule 191 (and -> and AND eq .)
    ,               reduce using rule 191 (and -> and AND eq .)
    )               reduce using rule 191 (and -> and AND eq .)
    ;               reduce using rule 191 (and -> and AND eq .)
    ]               reduce using rule 191 (and -> and AND eq .)
    :               reduce using rule 191 (and -> and AND eq .)
    }               reduce using rule 191 (and -> and AND eq .)
    EQEQ            shift and go to state 159
    DISTINTO        shift and go to state 160


state 230

    (193) and -> and AND valoresBool .

    AND             reduce using rule 193 (and -> and AND valoresBool .)
    OR              reduce using rule 193 (and -> and AND valoresBool .)
    ?               reduce using rule 193 (and -> and AND valoresBool .)
    ,               reduce using rule 193 (and -> and AND valoresBool .)
    )               reduce using rule 193 (and -> and AND valoresBool .)
    ;               reduce using rule 193 (and -> and AND valoresBool .)
    ]               reduce using rule 193 (and -> and AND valoresBool .)
    :               reduce using rule 193 (and -> and AND valoresBool .)
    }               reduce using rule 193 (and -> and AND valoresBool .)


state 231

    (169) valoresBool -> varYVals .
    (207) tCompare -> varYVals .
    (108) varsOps -> varYVals . MASMAS
    (109) varsOps -> varYVals . MENOSMENOS
    (120) valoresMat -> varYVals .

    AND             reduce using rule 169 (valoresBool -> varYVals .)
    OR              reduce using rule 169 (valoresBool -> varYVals .)
    ?               reduce using rule 169 (valoresBool -> varYVals .)
    ,               reduce using rule 169 (valoresBool -> varYVals .)
    )               reduce using rule 169 (valoresBool -> varYVals .)
    ;               reduce using rule 169 (valoresBool -> varYVals .)
    ]               reduce using rule 169 (valoresBool -> varYVals .)
    :               reduce using rule 169 (valoresBool -> varYVals .)
    }               reduce using rule 169 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 207 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 207 (tCompare -> varYVals .)
    >               reduce using rule 207 (tCompare -> varYVals .)
    <               reduce using rule 207 (tCompare -> varYVals .)
    MASMAS          shift and go to state 47
    MENOSMENOS      shift and go to state 44
    +               reduce using rule 120 (valoresMat -> varYVals .)
    -               reduce using rule 120 (valoresMat -> varYVals .)
    *               reduce using rule 120 (valoresMat -> varYVals .)
    /               reduce using rule 120 (valoresMat -> varYVals .)
    %               reduce using rule 120 (valoresMat -> varYVals .)
    ^               reduce using rule 120 (valoresMat -> varYVals .)


state 232

    (153) p -> valoresMat % valoresMat .
    (156) exp -> valoresMat . ^ iSing
    (158) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 153 (p -> valoresMat % valoresMat .)
    /               reduce using rule 153 (p -> valoresMat % valoresMat .)
    %               reduce using rule 153 (p -> valoresMat % valoresMat .)
    +               reduce using rule 153 (p -> valoresMat % valoresMat .)
    -               reduce using rule 153 (p -> valoresMat % valoresMat .)
    ,               reduce using rule 153 (p -> valoresMat % valoresMat .)
    EQEQ            reduce using rule 153 (p -> valoresMat % valoresMat .)
    DISTINTO        reduce using rule 153 (p -> valoresMat % valoresMat .)
    >               reduce using rule 153 (p -> valoresMat % valoresMat .)
    <               reduce using rule 153 (p -> valoresMat % valoresMat .)
    )               reduce using rule 153 (p -> valoresMat % valoresMat .)
    ;               reduce using rule 153 (p -> valoresMat % valoresMat .)
    ]               reduce using rule 153 (p -> valoresMat % valoresMat .)
    :               reduce using rule 153 (p -> valoresMat % valoresMat .)
    }               reduce using rule 153 (p -> valoresMat % valoresMat .)
    AND             reduce using rule 153 (p -> valoresMat % valoresMat .)
    OR              reduce using rule 153 (p -> valoresMat % valoresMat .)
    ?               reduce using rule 153 (p -> valoresMat % valoresMat .)
    ^               shift and go to state 158


state 233

    (147) p -> valoresMat % exp .
    (155) exp -> exp . ^ iSing
    (157) exp -> exp . ^ valoresMat

    *               reduce using rule 147 (p -> valoresMat % exp .)
    /               reduce using rule 147 (p -> valoresMat % exp .)
    %               reduce using rule 147 (p -> valoresMat % exp .)
    +               reduce using rule 147 (p -> valoresMat % exp .)
    -               reduce using rule 147 (p -> valoresMat % exp .)
    ,               reduce using rule 147 (p -> valoresMat % exp .)
    EQEQ            reduce using rule 147 (p -> valoresMat % exp .)
    DISTINTO        reduce using rule 147 (p -> valoresMat % exp .)
    >               reduce using rule 147 (p -> valoresMat % exp .)
    <               reduce using rule 147 (p -> valoresMat % exp .)
    )               reduce using rule 147 (p -> valoresMat % exp .)
    ;               reduce using rule 147 (p -> valoresMat % exp .)
    ]               reduce using rule 147 (p -> valoresMat % exp .)
    :               reduce using rule 147 (p -> valoresMat % exp .)
    }               reduce using rule 147 (p -> valoresMat % exp .)
    AND             reduce using rule 147 (p -> valoresMat % exp .)
    OR              reduce using rule 147 (p -> valoresMat % exp .)
    ?               reduce using rule 147 (p -> valoresMat % exp .)
    ^               shift and go to state 204


state 234

    (139) eMat -> valoresMat + valoresMat .
    (145) p -> valoresMat . * exp
    (146) p -> valoresMat . / exp
    (147) p -> valoresMat . % exp
    (151) p -> valoresMat . * valoresMat
    (152) p -> valoresMat . / valoresMat
    (153) p -> valoresMat . % valoresMat
    (156) exp -> valoresMat . ^ iSing
    (158) exp -> valoresMat . ^ valoresMat

    +               reduce using rule 139 (eMat -> valoresMat + valoresMat .)
    -               reduce using rule 139 (eMat -> valoresMat + valoresMat .)
    EQEQ            reduce using rule 139 (eMat -> valoresMat + valoresMat .)
    DISTINTO        reduce using rule 139 (eMat -> valoresMat + valoresMat .)
    >               reduce using rule 139 (eMat -> valoresMat + valoresMat .)
    <               reduce using rule 139 (eMat -> valoresMat + valoresMat .)
    :               reduce using rule 139 (eMat -> valoresMat + valoresMat .)
    ,               reduce using rule 139 (eMat -> valoresMat + valoresMat .)
    ]               reduce using rule 139 (eMat -> valoresMat + valoresMat .)
    )               reduce using rule 139 (eMat -> valoresMat + valoresMat .)
    AND             reduce using rule 139 (eMat -> valoresMat + valoresMat .)
    OR              reduce using rule 139 (eMat -> valoresMat + valoresMat .)
    ?               reduce using rule 139 (eMat -> valoresMat + valoresMat .)
    ;               reduce using rule 139 (eMat -> valoresMat + valoresMat .)
    }               reduce using rule 139 (eMat -> valoresMat + valoresMat .)
    *               shift and go to state 155
    /               shift and go to state 157
    %               shift and go to state 153
    ^               shift and go to state 158


state 235

    (135) eMat -> valoresMat + p .
    (142) p -> p . * exp
    (143) p -> p . / exp
    (144) p -> p . % exp
    (148) p -> p . * valoresMat
    (149) p -> p . / valoresMat
    (150) p -> p . % valoresMat

    +               reduce using rule 135 (eMat -> valoresMat + p .)
    -               reduce using rule 135 (eMat -> valoresMat + p .)
    EQEQ            reduce using rule 135 (eMat -> valoresMat + p .)
    DISTINTO        reduce using rule 135 (eMat -> valoresMat + p .)
    >               reduce using rule 135 (eMat -> valoresMat + p .)
    <               reduce using rule 135 (eMat -> valoresMat + p .)
    :               reduce using rule 135 (eMat -> valoresMat + p .)
    ,               reduce using rule 135 (eMat -> valoresMat + p .)
    ]               reduce using rule 135 (eMat -> valoresMat + p .)
    )               reduce using rule 135 (eMat -> valoresMat + p .)
    AND             reduce using rule 135 (eMat -> valoresMat + p .)
    OR              reduce using rule 135 (eMat -> valoresMat + p .)
    ?               reduce using rule 135 (eMat -> valoresMat + p .)
    ;               reduce using rule 135 (eMat -> valoresMat + p .)
    }               reduce using rule 135 (eMat -> valoresMat + p .)
    *               shift and go to state 197
    /               shift and go to state 198
    %               shift and go to state 196


state 236

    (151) p -> valoresMat * valoresMat .
    (156) exp -> valoresMat . ^ iSing
    (158) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 151 (p -> valoresMat * valoresMat .)
    /               reduce using rule 151 (p -> valoresMat * valoresMat .)
    %               reduce using rule 151 (p -> valoresMat * valoresMat .)
    +               reduce using rule 151 (p -> valoresMat * valoresMat .)
    -               reduce using rule 151 (p -> valoresMat * valoresMat .)
    ,               reduce using rule 151 (p -> valoresMat * valoresMat .)
    EQEQ            reduce using rule 151 (p -> valoresMat * valoresMat .)
    DISTINTO        reduce using rule 151 (p -> valoresMat * valoresMat .)
    >               reduce using rule 151 (p -> valoresMat * valoresMat .)
    <               reduce using rule 151 (p -> valoresMat * valoresMat .)
    )               reduce using rule 151 (p -> valoresMat * valoresMat .)
    ;               reduce using rule 151 (p -> valoresMat * valoresMat .)
    ]               reduce using rule 151 (p -> valoresMat * valoresMat .)
    :               reduce using rule 151 (p -> valoresMat * valoresMat .)
    }               reduce using rule 151 (p -> valoresMat * valoresMat .)
    AND             reduce using rule 151 (p -> valoresMat * valoresMat .)
    OR              reduce using rule 151 (p -> valoresMat * valoresMat .)
    ?               reduce using rule 151 (p -> valoresMat * valoresMat .)
    ^               shift and go to state 158


state 237

    (145) p -> valoresMat * exp .
    (155) exp -> exp . ^ iSing
    (157) exp -> exp . ^ valoresMat

    *               reduce using rule 145 (p -> valoresMat * exp .)
    /               reduce using rule 145 (p -> valoresMat * exp .)
    %               reduce using rule 145 (p -> valoresMat * exp .)
    +               reduce using rule 145 (p -> valoresMat * exp .)
    -               reduce using rule 145 (p -> valoresMat * exp .)
    ,               reduce using rule 145 (p -> valoresMat * exp .)
    EQEQ            reduce using rule 145 (p -> valoresMat * exp .)
    DISTINTO        reduce using rule 145 (p -> valoresMat * exp .)
    >               reduce using rule 145 (p -> valoresMat * exp .)
    <               reduce using rule 145 (p -> valoresMat * exp .)
    )               reduce using rule 145 (p -> valoresMat * exp .)
    ;               reduce using rule 145 (p -> valoresMat * exp .)
    ]               reduce using rule 145 (p -> valoresMat * exp .)
    :               reduce using rule 145 (p -> valoresMat * exp .)
    }               reduce using rule 145 (p -> valoresMat * exp .)
    AND             reduce using rule 145 (p -> valoresMat * exp .)
    OR              reduce using rule 145 (p -> valoresMat * exp .)
    ?               reduce using rule 145 (p -> valoresMat * exp .)
    ^               shift and go to state 204


state 238

    (140) eMat -> valoresMat - valoresMat .
    (145) p -> valoresMat . * exp
    (146) p -> valoresMat . / exp
    (147) p -> valoresMat . % exp
    (151) p -> valoresMat . * valoresMat
    (152) p -> valoresMat . / valoresMat
    (153) p -> valoresMat . % valoresMat
    (156) exp -> valoresMat . ^ iSing
    (158) exp -> valoresMat . ^ valoresMat

    +               reduce using rule 140 (eMat -> valoresMat - valoresMat .)
    -               reduce using rule 140 (eMat -> valoresMat - valoresMat .)
    EQEQ            reduce using rule 140 (eMat -> valoresMat - valoresMat .)
    DISTINTO        reduce using rule 140 (eMat -> valoresMat - valoresMat .)
    >               reduce using rule 140 (eMat -> valoresMat - valoresMat .)
    <               reduce using rule 140 (eMat -> valoresMat - valoresMat .)
    :               reduce using rule 140 (eMat -> valoresMat - valoresMat .)
    ,               reduce using rule 140 (eMat -> valoresMat - valoresMat .)
    ]               reduce using rule 140 (eMat -> valoresMat - valoresMat .)
    )               reduce using rule 140 (eMat -> valoresMat - valoresMat .)
    AND             reduce using rule 140 (eMat -> valoresMat - valoresMat .)
    OR              reduce using rule 140 (eMat -> valoresMat - valoresMat .)
    ?               reduce using rule 140 (eMat -> valoresMat - valoresMat .)
    ;               reduce using rule 140 (eMat -> valoresMat - valoresMat .)
    }               reduce using rule 140 (eMat -> valoresMat - valoresMat .)
    *               shift and go to state 155
    /               shift and go to state 157
    %               shift and go to state 153
    ^               shift and go to state 158


state 239

    (136) eMat -> valoresMat - p .
    (142) p -> p . * exp
    (143) p -> p . / exp
    (144) p -> p . % exp
    (148) p -> p . * valoresMat
    (149) p -> p . / valoresMat
    (150) p -> p . % valoresMat

    +               reduce using rule 136 (eMat -> valoresMat - p .)
    -               reduce using rule 136 (eMat -> valoresMat - p .)
    EQEQ            reduce using rule 136 (eMat -> valoresMat - p .)
    DISTINTO        reduce using rule 136 (eMat -> valoresMat - p .)
    >               reduce using rule 136 (eMat -> valoresMat - p .)
    <               reduce using rule 136 (eMat -> valoresMat - p .)
    :               reduce using rule 136 (eMat -> valoresMat - p .)
    ,               reduce using rule 136 (eMat -> valoresMat - p .)
    ]               reduce using rule 136 (eMat -> valoresMat - p .)
    )               reduce using rule 136 (eMat -> valoresMat - p .)
    AND             reduce using rule 136 (eMat -> valoresMat - p .)
    OR              reduce using rule 136 (eMat -> valoresMat - p .)
    ?               reduce using rule 136 (eMat -> valoresMat - p .)
    ;               reduce using rule 136 (eMat -> valoresMat - p .)
    }               reduce using rule 136 (eMat -> valoresMat - p .)
    *               shift and go to state 197
    /               shift and go to state 198
    %               shift and go to state 196


state 240

    (152) p -> valoresMat / valoresMat .
    (156) exp -> valoresMat . ^ iSing
    (158) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 152 (p -> valoresMat / valoresMat .)
    /               reduce using rule 152 (p -> valoresMat / valoresMat .)
    %               reduce using rule 152 (p -> valoresMat / valoresMat .)
    +               reduce using rule 152 (p -> valoresMat / valoresMat .)
    -               reduce using rule 152 (p -> valoresMat / valoresMat .)
    ,               reduce using rule 152 (p -> valoresMat / valoresMat .)
    EQEQ            reduce using rule 152 (p -> valoresMat / valoresMat .)
    DISTINTO        reduce using rule 152 (p -> valoresMat / valoresMat .)
    >               reduce using rule 152 (p -> valoresMat / valoresMat .)
    <               reduce using rule 152 (p -> valoresMat / valoresMat .)
    )               reduce using rule 152 (p -> valoresMat / valoresMat .)
    ;               reduce using rule 152 (p -> valoresMat / valoresMat .)
    ]               reduce using rule 152 (p -> valoresMat / valoresMat .)
    :               reduce using rule 152 (p -> valoresMat / valoresMat .)
    }               reduce using rule 152 (p -> valoresMat / valoresMat .)
    AND             reduce using rule 152 (p -> valoresMat / valoresMat .)
    OR              reduce using rule 152 (p -> valoresMat / valoresMat .)
    ?               reduce using rule 152 (p -> valoresMat / valoresMat .)
    ^               shift and go to state 158


state 241

    (146) p -> valoresMat / exp .
    (155) exp -> exp . ^ iSing
    (157) exp -> exp . ^ valoresMat

    *               reduce using rule 146 (p -> valoresMat / exp .)
    /               reduce using rule 146 (p -> valoresMat / exp .)
    %               reduce using rule 146 (p -> valoresMat / exp .)
    +               reduce using rule 146 (p -> valoresMat / exp .)
    -               reduce using rule 146 (p -> valoresMat / exp .)
    ,               reduce using rule 146 (p -> valoresMat / exp .)
    EQEQ            reduce using rule 146 (p -> valoresMat / exp .)
    DISTINTO        reduce using rule 146 (p -> valoresMat / exp .)
    >               reduce using rule 146 (p -> valoresMat / exp .)
    <               reduce using rule 146 (p -> valoresMat / exp .)
    )               reduce using rule 146 (p -> valoresMat / exp .)
    ;               reduce using rule 146 (p -> valoresMat / exp .)
    ]               reduce using rule 146 (p -> valoresMat / exp .)
    :               reduce using rule 146 (p -> valoresMat / exp .)
    }               reduce using rule 146 (p -> valoresMat / exp .)
    AND             reduce using rule 146 (p -> valoresMat / exp .)
    OR              reduce using rule 146 (p -> valoresMat / exp .)
    ?               reduce using rule 146 (p -> valoresMat / exp .)
    ^               shift and go to state 204


state 242

    (158) exp -> valoresMat ^ valoresMat .

    ^               reduce using rule 158 (exp -> valoresMat ^ valoresMat .)
    *               reduce using rule 158 (exp -> valoresMat ^ valoresMat .)
    /               reduce using rule 158 (exp -> valoresMat ^ valoresMat .)
    %               reduce using rule 158 (exp -> valoresMat ^ valoresMat .)
    +               reduce using rule 158 (exp -> valoresMat ^ valoresMat .)
    -               reduce using rule 158 (exp -> valoresMat ^ valoresMat .)
    EQEQ            reduce using rule 158 (exp -> valoresMat ^ valoresMat .)
    DISTINTO        reduce using rule 158 (exp -> valoresMat ^ valoresMat .)
    >               reduce using rule 158 (exp -> valoresMat ^ valoresMat .)
    <               reduce using rule 158 (exp -> valoresMat ^ valoresMat .)
    )               reduce using rule 158 (exp -> valoresMat ^ valoresMat .)
    ,               reduce using rule 158 (exp -> valoresMat ^ valoresMat .)
    }               reduce using rule 158 (exp -> valoresMat ^ valoresMat .)
    ;               reduce using rule 158 (exp -> valoresMat ^ valoresMat .)
    ]               reduce using rule 158 (exp -> valoresMat ^ valoresMat .)
    AND             reduce using rule 158 (exp -> valoresMat ^ valoresMat .)
    OR              reduce using rule 158 (exp -> valoresMat ^ valoresMat .)
    ?               reduce using rule 158 (exp -> valoresMat ^ valoresMat .)
    :               reduce using rule 158 (exp -> valoresMat ^ valoresMat .)


state 243

    (156) exp -> valoresMat ^ iSing .

    ^               reduce using rule 156 (exp -> valoresMat ^ iSing .)
    *               reduce using rule 156 (exp -> valoresMat ^ iSing .)
    /               reduce using rule 156 (exp -> valoresMat ^ iSing .)
    %               reduce using rule 156 (exp -> valoresMat ^ iSing .)
    +               reduce using rule 156 (exp -> valoresMat ^ iSing .)
    -               reduce using rule 156 (exp -> valoresMat ^ iSing .)
    EQEQ            reduce using rule 156 (exp -> valoresMat ^ iSing .)
    DISTINTO        reduce using rule 156 (exp -> valoresMat ^ iSing .)
    >               reduce using rule 156 (exp -> valoresMat ^ iSing .)
    <               reduce using rule 156 (exp -> valoresMat ^ iSing .)
    )               reduce using rule 156 (exp -> valoresMat ^ iSing .)
    ,               reduce using rule 156 (exp -> valoresMat ^ iSing .)
    }               reduce using rule 156 (exp -> valoresMat ^ iSing .)
    ;               reduce using rule 156 (exp -> valoresMat ^ iSing .)
    ]               reduce using rule 156 (exp -> valoresMat ^ iSing .)
    AND             reduce using rule 156 (exp -> valoresMat ^ iSing .)
    OR              reduce using rule 156 (exp -> valoresMat ^ iSing .)
    ?               reduce using rule 156 (exp -> valoresMat ^ iSing .)
    :               reduce using rule 156 (exp -> valoresMat ^ iSing .)


state 244

    (196) eq -> eq EQEQ mayor .

    EQEQ            reduce using rule 196 (eq -> eq EQEQ mayor .)
    DISTINTO        reduce using rule 196 (eq -> eq EQEQ mayor .)
    AND             reduce using rule 196 (eq -> eq EQEQ mayor .)
    OR              reduce using rule 196 (eq -> eq EQEQ mayor .)
    ?               reduce using rule 196 (eq -> eq EQEQ mayor .)
    ;               reduce using rule 196 (eq -> eq EQEQ mayor .)
    )               reduce using rule 196 (eq -> eq EQEQ mayor .)
    :               reduce using rule 196 (eq -> eq EQEQ mayor .)
    ,               reduce using rule 196 (eq -> eq EQEQ mayor .)
    }               reduce using rule 196 (eq -> eq EQEQ mayor .)
    ]               reduce using rule 196 (eq -> eq EQEQ mayor .)


state 245

    (211) tCompare -> ( . ternarioBool )
    (212) tCompare -> ( . ternarioMat )
    (123) valoresMat -> ( . ternarioMat )
    (220) parenBool -> ( . expBool )
    (165) paren -> ( . eMat )
    (166) paren -> ( . valoresMat )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (49) funcBool -> . COLINEALES ( valores , valores )
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (96) vecVal -> . ID m
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 129
    (               shift and go to state 170
    BOOL            shift and go to state 142
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 218
    eMat                           shift and go to state 169
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 219
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    ternarioBool                   shift and go to state 347
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 221

state 246

    (200) eq -> eq EQEQ tCompare .
    (213) mayor -> tCompare . > tCompare
    (215) menor -> tCompare . < tCompare

    EQEQ            reduce using rule 200 (eq -> eq EQEQ tCompare .)
    DISTINTO        reduce using rule 200 (eq -> eq EQEQ tCompare .)
    AND             reduce using rule 200 (eq -> eq EQEQ tCompare .)
    OR              reduce using rule 200 (eq -> eq EQEQ tCompare .)
    ?               reduce using rule 200 (eq -> eq EQEQ tCompare .)
    ;               reduce using rule 200 (eq -> eq EQEQ tCompare .)
    )               reduce using rule 200 (eq -> eq EQEQ tCompare .)
    :               reduce using rule 200 (eq -> eq EQEQ tCompare .)
    ,               reduce using rule 200 (eq -> eq EQEQ tCompare .)
    }               reduce using rule 200 (eq -> eq EQEQ tCompare .)
    ]               reduce using rule 200 (eq -> eq EQEQ tCompare .)
    >               shift and go to state 191
    <               shift and go to state 190


state 247

    (206) tCompare -> varsOps .
    (121) valoresMat -> varsOps .

    >               reduce using rule 206 (tCompare -> varsOps .)
    <               reduce using rule 206 (tCompare -> varsOps .)
    EQEQ            reduce using rule 206 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 206 (tCompare -> varsOps .)
    AND             reduce using rule 206 (tCompare -> varsOps .)
    OR              reduce using rule 206 (tCompare -> varsOps .)
    ?               reduce using rule 206 (tCompare -> varsOps .)
    ,               reduce using rule 206 (tCompare -> varsOps .)
    )               reduce using rule 206 (tCompare -> varsOps .)
    ;               reduce using rule 206 (tCompare -> varsOps .)
    ]               reduce using rule 206 (tCompare -> varsOps .)
    :               reduce using rule 206 (tCompare -> varsOps .)
    }               reduce using rule 206 (tCompare -> varsOps .)
    +               reduce using rule 121 (valoresMat -> varsOps .)
    -               reduce using rule 121 (valoresMat -> varsOps .)
    *               reduce using rule 121 (valoresMat -> varsOps .)
    /               reduce using rule 121 (valoresMat -> varsOps .)
    %               reduce using rule 121 (valoresMat -> varsOps .)
    ^               reduce using rule 121 (valoresMat -> varsOps .)


state 248

    (207) tCompare -> varYVals .
    (108) varsOps -> varYVals . MASMAS
    (109) varsOps -> varYVals . MENOSMENOS
    (120) valoresMat -> varYVals .

    >               reduce using rule 207 (tCompare -> varYVals .)
    <               reduce using rule 207 (tCompare -> varYVals .)
    EQEQ            reduce using rule 207 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 207 (tCompare -> varYVals .)
    AND             reduce using rule 207 (tCompare -> varYVals .)
    OR              reduce using rule 207 (tCompare -> varYVals .)
    ?               reduce using rule 207 (tCompare -> varYVals .)
    ,               reduce using rule 207 (tCompare -> varYVals .)
    )               reduce using rule 207 (tCompare -> varYVals .)
    ;               reduce using rule 207 (tCompare -> varYVals .)
    ]               reduce using rule 207 (tCompare -> varYVals .)
    :               reduce using rule 207 (tCompare -> varYVals .)
    }               reduce using rule 207 (tCompare -> varYVals .)
    MASMAS          shift and go to state 47
    MENOSMENOS      shift and go to state 44
    +               reduce using rule 120 (valoresMat -> varYVals .)
    -               reduce using rule 120 (valoresMat -> varYVals .)
    *               reduce using rule 120 (valoresMat -> varYVals .)
    /               reduce using rule 120 (valoresMat -> varYVals .)
    %               reduce using rule 120 (valoresMat -> varYVals .)
    ^               reduce using rule 120 (valoresMat -> varYVals .)


state 249

    (197) eq -> eq DISTINTO mayor .

    EQEQ            reduce using rule 197 (eq -> eq DISTINTO mayor .)
    DISTINTO        reduce using rule 197 (eq -> eq DISTINTO mayor .)
    AND             reduce using rule 197 (eq -> eq DISTINTO mayor .)
    OR              reduce using rule 197 (eq -> eq DISTINTO mayor .)
    ?               reduce using rule 197 (eq -> eq DISTINTO mayor .)
    ;               reduce using rule 197 (eq -> eq DISTINTO mayor .)
    )               reduce using rule 197 (eq -> eq DISTINTO mayor .)
    :               reduce using rule 197 (eq -> eq DISTINTO mayor .)
    ,               reduce using rule 197 (eq -> eq DISTINTO mayor .)
    }               reduce using rule 197 (eq -> eq DISTINTO mayor .)
    ]               reduce using rule 197 (eq -> eq DISTINTO mayor .)


state 250

    (201) eq -> eq DISTINTO tCompare .
    (213) mayor -> tCompare . > tCompare
    (215) menor -> tCompare . < tCompare

    EQEQ            reduce using rule 201 (eq -> eq DISTINTO tCompare .)
    DISTINTO        reduce using rule 201 (eq -> eq DISTINTO tCompare .)
    AND             reduce using rule 201 (eq -> eq DISTINTO tCompare .)
    OR              reduce using rule 201 (eq -> eq DISTINTO tCompare .)
    ?               reduce using rule 201 (eq -> eq DISTINTO tCompare .)
    ;               reduce using rule 201 (eq -> eq DISTINTO tCompare .)
    )               reduce using rule 201 (eq -> eq DISTINTO tCompare .)
    :               reduce using rule 201 (eq -> eq DISTINTO tCompare .)
    ,               reduce using rule 201 (eq -> eq DISTINTO tCompare .)
    }               reduce using rule 201 (eq -> eq DISTINTO tCompare .)
    ]               reduce using rule 201 (eq -> eq DISTINTO tCompare .)
    >               shift and go to state 191
    <               shift and go to state 190


state 251

    (192) and -> valoresBool AND eq .
    (196) eq -> eq . EQEQ mayor
    (197) eq -> eq . DISTINTO mayor
    (200) eq -> eq . EQEQ tCompare
    (201) eq -> eq . DISTINTO tCompare

    AND             reduce using rule 192 (and -> valoresBool AND eq .)
    OR              reduce using rule 192 (and -> valoresBool AND eq .)
    ?               reduce using rule 192 (and -> valoresBool AND eq .)
    ,               reduce using rule 192 (and -> valoresBool AND eq .)
    )               reduce using rule 192 (and -> valoresBool AND eq .)
    ;               reduce using rule 192 (and -> valoresBool AND eq .)
    ]               reduce using rule 192 (and -> valoresBool AND eq .)
    :               reduce using rule 192 (and -> valoresBool AND eq .)
    }               reduce using rule 192 (and -> valoresBool AND eq .)
    EQEQ            shift and go to state 159
    DISTINTO        shift and go to state 160


state 252

    (194) and -> valoresBool AND valoresBool .

    AND             reduce using rule 194 (and -> valoresBool AND valoresBool .)
    OR              reduce using rule 194 (and -> valoresBool AND valoresBool .)
    ?               reduce using rule 194 (and -> valoresBool AND valoresBool .)
    ,               reduce using rule 194 (and -> valoresBool AND valoresBool .)
    )               reduce using rule 194 (and -> valoresBool AND valoresBool .)
    ;               reduce using rule 194 (and -> valoresBool AND valoresBool .)
    ]               reduce using rule 194 (and -> valoresBool AND valoresBool .)
    :               reduce using rule 194 (and -> valoresBool AND valoresBool .)
    }               reduce using rule 194 (and -> valoresBool AND valoresBool .)


state 253

    (187) expBool -> valoresBool OR and .
    (191) and -> and . AND eq
    (193) and -> and . AND valoresBool

    OR              reduce using rule 187 (expBool -> valoresBool OR and .)
    ?               reduce using rule 187 (expBool -> valoresBool OR and .)
    )               reduce using rule 187 (expBool -> valoresBool OR and .)
    ;               reduce using rule 187 (expBool -> valoresBool OR and .)
    ,               reduce using rule 187 (expBool -> valoresBool OR and .)
    ]               reduce using rule 187 (expBool -> valoresBool OR and .)
    :               reduce using rule 187 (expBool -> valoresBool OR and .)
    }               reduce using rule 187 (expBool -> valoresBool OR and .)
    AND             shift and go to state 152


state 254

    (189) expBool -> valoresBool OR valoresBool .
    (192) and -> valoresBool . AND eq
    (194) and -> valoresBool . AND valoresBool

    OR              reduce using rule 189 (expBool -> valoresBool OR valoresBool .)
    ?               reduce using rule 189 (expBool -> valoresBool OR valoresBool .)
    )               reduce using rule 189 (expBool -> valoresBool OR valoresBool .)
    ;               reduce using rule 189 (expBool -> valoresBool OR valoresBool .)
    ,               reduce using rule 189 (expBool -> valoresBool OR valoresBool .)
    ]               reduce using rule 189 (expBool -> valoresBool OR valoresBool .)
    :               reduce using rule 189 (expBool -> valoresBool OR valoresBool .)
    }               reduce using rule 189 (expBool -> valoresBool OR valoresBool .)
    AND             shift and go to state 161


state 255

    (91) valoresTernarioVars -> atributos .

    :               reduce using rule 91 (valoresTernarioVars -> atributos .)
    ,               reduce using rule 91 (valoresTernarioVars -> atributos .)
    )               reduce using rule 91 (valoresTernarioVars -> atributos .)
    ;               reduce using rule 91 (valoresTernarioVars -> atributos .)
    ]               reduce using rule 91 (valoresTernarioVars -> atributos .)
    }               reduce using rule 91 (valoresTernarioVars -> atributos .)


state 256

    (176) valoresTernarioBool -> funcBool .
    (168) valoresBool -> funcBool .

    )               reduce using rule 176 (valoresTernarioBool -> funcBool .)
    :               reduce using rule 176 (valoresTernarioBool -> funcBool .)
    ,               reduce using rule 176 (valoresTernarioBool -> funcBool .)
    ;               reduce using rule 176 (valoresTernarioBool -> funcBool .)
    ]               reduce using rule 176 (valoresTernarioBool -> funcBool .)
    }               reduce using rule 176 (valoresTernarioBool -> funcBool .)
    ?               reduce using rule 168 (valoresBool -> funcBool .)
    OR              reduce using rule 168 (valoresBool -> funcBool .)
    AND             reduce using rule 168 (valoresBool -> funcBool .)


state 257

    (92) valoresTernarioVars -> RES .

    :               reduce using rule 92 (valoresTernarioVars -> RES .)
    ,               reduce using rule 92 (valoresTernarioVars -> RES .)
    )               reduce using rule 92 (valoresTernarioVars -> RES .)
    ;               reduce using rule 92 (valoresTernarioVars -> RES .)
    ]               reduce using rule 92 (valoresTernarioVars -> RES .)
    }               reduce using rule 92 (valoresTernarioVars -> RES .)


state 258

    (128) valoresTernarioMat -> funcInt .
    (119) valoresMat -> funcInt .
    (209) tCompare -> funcInt .

    ,               reduce using rule 128 (valoresTernarioMat -> funcInt .)
    )               reduce using rule 128 (valoresTernarioMat -> funcInt .)
    ;               reduce using rule 128 (valoresTernarioMat -> funcInt .)
    ]               reduce using rule 128 (valoresTernarioMat -> funcInt .)
    :               reduce using rule 128 (valoresTernarioMat -> funcInt .)
    }               reduce using rule 128 (valoresTernarioMat -> funcInt .)
    +               reduce using rule 119 (valoresMat -> funcInt .)
    -               reduce using rule 119 (valoresMat -> funcInt .)
    *               reduce using rule 119 (valoresMat -> funcInt .)
    /               reduce using rule 119 (valoresMat -> funcInt .)
    %               reduce using rule 119 (valoresMat -> funcInt .)
    ^               reduce using rule 119 (valoresMat -> funcInt .)
    EQEQ            reduce using rule 209 (tCompare -> funcInt .)
    DISTINTO        reduce using rule 209 (tCompare -> funcInt .)
    >               reduce using rule 209 (tCompare -> funcInt .)
    <               reduce using rule 209 (tCompare -> funcInt .)


state 259

    (124) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (173) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> valoresBool . OR and
    (189) expBool -> valoresBool . OR valoresBool
    (75) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (192) and -> valoresBool . AND eq
    (194) and -> valoresBool . AND valoresBool

    ?               shift and go to state 163
    OR              shift and go to state 162
    AND             shift and go to state 161


state 260

    (130) valoresTernarioMat -> eMat .
    (133) eMat -> eMat . + p
    (134) eMat -> eMat . - p
    (137) eMat -> eMat . + valoresMat
    (138) eMat -> eMat . - valoresMat
    (205) tCompare -> eMat .

    ,               reduce using rule 130 (valoresTernarioMat -> eMat .)
    )               reduce using rule 130 (valoresTernarioMat -> eMat .)
    ;               reduce using rule 130 (valoresTernarioMat -> eMat .)
    ]               reduce using rule 130 (valoresTernarioMat -> eMat .)
    :               reduce using rule 130 (valoresTernarioMat -> eMat .)
    }               reduce using rule 130 (valoresTernarioMat -> eMat .)
    +               shift and go to state 164
    -               shift and go to state 165
    EQEQ            reduce using rule 205 (tCompare -> eMat .)
    DISTINTO        reduce using rule 205 (tCompare -> eMat .)
    >               reduce using rule 205 (tCompare -> eMat .)
    <               reduce using rule 205 (tCompare -> eMat .)


state 261

    (173) ternarioBool -> valoresBool ? valoresTernarioBool . : valoresTernarioBool
    (79) ternarioVars -> valoresBool ? valoresTernarioBool . : valoresTernarioVars

    :               shift and go to state 348


state 262

    (131) valoresTernarioMat -> ternarioMat .

    ,               reduce using rule 131 (valoresTernarioMat -> ternarioMat .)
    )               reduce using rule 131 (valoresTernarioMat -> ternarioMat .)
    ;               reduce using rule 131 (valoresTernarioMat -> ternarioMat .)
    ]               reduce using rule 131 (valoresTernarioMat -> ternarioMat .)
    :               reduce using rule 131 (valoresTernarioMat -> ternarioMat .)
    }               reduce using rule 131 (valoresTernarioMat -> ternarioMat .)


state 263

    (88) valoresTernarioVars -> vec .

    :               reduce using rule 88 (valoresTernarioVars -> vec .)
    ,               reduce using rule 88 (valoresTernarioVars -> vec .)
    )               reduce using rule 88 (valoresTernarioVars -> vec .)
    ;               reduce using rule 88 (valoresTernarioVars -> vec .)
    ]               reduce using rule 88 (valoresTernarioVars -> vec .)
    }               reduce using rule 88 (valoresTernarioVars -> vec .)


state 264

    (87) valoresTernarioVars -> reg .

    :               reduce using rule 87 (valoresTernarioVars -> reg .)
    ,               reduce using rule 87 (valoresTernarioVars -> reg .)
    )               reduce using rule 87 (valoresTernarioVars -> reg .)
    ;               reduce using rule 87 (valoresTernarioVars -> reg .)
    ]               reduce using rule 87 (valoresTernarioVars -> reg .)
    }               reduce using rule 87 (valoresTernarioVars -> reg .)


state 265

    (75) ternarioVars -> valoresBool ? valoresTernarioVars . : valoresTernarioVars
    (76) ternarioVars -> valoresBool ? valoresTernarioVars . : valoresTernarioMat
    (78) ternarioVars -> valoresBool ? valoresTernarioVars . : valoresTernarioBool

    :               shift and go to state 349


state 266

    (129) valoresTernarioMat -> STRING .
    (122) valoresMat -> STRING .

    ,               reduce using rule 129 (valoresTernarioMat -> STRING .)
    )               reduce using rule 129 (valoresTernarioMat -> STRING .)
    ;               reduce using rule 129 (valoresTernarioMat -> STRING .)
    ]               reduce using rule 129 (valoresTernarioMat -> STRING .)
    :               reduce using rule 129 (valoresTernarioMat -> STRING .)
    }               reduce using rule 129 (valoresTernarioMat -> STRING .)
    +               reduce using rule 122 (valoresMat -> STRING .)
    -               reduce using rule 122 (valoresMat -> STRING .)
    *               reduce using rule 122 (valoresMat -> STRING .)
    /               reduce using rule 122 (valoresMat -> STRING .)
    %               reduce using rule 122 (valoresMat -> STRING .)
    ^               reduce using rule 122 (valoresMat -> STRING .)


state 267

    (177) valoresTernarioBool -> ternarioBool .

    )               reduce using rule 177 (valoresTernarioBool -> ternarioBool .)
    :               reduce using rule 177 (valoresTernarioBool -> ternarioBool .)
    ,               reduce using rule 177 (valoresTernarioBool -> ternarioBool .)
    ;               reduce using rule 177 (valoresTernarioBool -> ternarioBool .)
    ]               reduce using rule 177 (valoresTernarioBool -> ternarioBool .)
    }               reduce using rule 177 (valoresTernarioBool -> ternarioBool .)


state 268

    (124) ternarioMat -> valoresBool ? valoresTernarioMat . : valoresTernarioMat
    (77) ternarioVars -> valoresBool ? valoresTernarioMat . : valoresTernarioVars

    :               shift and go to state 350


state 269

    (126) valoresTernarioMat -> INT .
    (117) valoresMat -> INT .
    (208) tCompare -> INT .

    ,               reduce using rule 126 (valoresTernarioMat -> INT .)
    )               reduce using rule 126 (valoresTernarioMat -> INT .)
    ;               reduce using rule 126 (valoresTernarioMat -> INT .)
    ]               reduce using rule 126 (valoresTernarioMat -> INT .)
    :               reduce using rule 126 (valoresTernarioMat -> INT .)
    }               reduce using rule 126 (valoresTernarioMat -> INT .)
    +               reduce using rule 117 (valoresMat -> INT .)
    -               reduce using rule 117 (valoresMat -> INT .)
    *               reduce using rule 117 (valoresMat -> INT .)
    /               reduce using rule 117 (valoresMat -> INT .)
    %               reduce using rule 117 (valoresMat -> INT .)
    ^               reduce using rule 117 (valoresMat -> INT .)
    EQEQ            reduce using rule 208 (tCompare -> INT .)
    DISTINTO        reduce using rule 208 (tCompare -> INT .)
    >               reduce using rule 208 (tCompare -> INT .)
    <               reduce using rule 208 (tCompare -> INT .)


state 270

    (127) valoresTernarioMat -> FLOAT .
    (118) valoresMat -> FLOAT .
    (210) tCompare -> FLOAT .

    ,               reduce using rule 127 (valoresTernarioMat -> FLOAT .)
    )               reduce using rule 127 (valoresTernarioMat -> FLOAT .)
    ;               reduce using rule 127 (valoresTernarioMat -> FLOAT .)
    ]               reduce using rule 127 (valoresTernarioMat -> FLOAT .)
    :               reduce using rule 127 (valoresTernarioMat -> FLOAT .)
    }               reduce using rule 127 (valoresTernarioMat -> FLOAT .)
    +               reduce using rule 118 (valoresMat -> FLOAT .)
    -               reduce using rule 118 (valoresMat -> FLOAT .)
    *               reduce using rule 118 (valoresMat -> FLOAT .)
    /               reduce using rule 118 (valoresMat -> FLOAT .)
    %               reduce using rule 118 (valoresMat -> FLOAT .)
    ^               reduce using rule 118 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 210 (tCompare -> FLOAT .)
    DISTINTO        reduce using rule 210 (tCompare -> FLOAT .)
    >               reduce using rule 210 (tCompare -> FLOAT .)
    <               reduce using rule 210 (tCompare -> FLOAT .)


state 271

    (175) valoresTernarioBool -> BOOL .
    (167) valoresBool -> BOOL .

    )               reduce using rule 175 (valoresTernarioBool -> BOOL .)
    :               reduce using rule 175 (valoresTernarioBool -> BOOL .)
    ,               reduce using rule 175 (valoresTernarioBool -> BOOL .)
    ;               reduce using rule 175 (valoresTernarioBool -> BOOL .)
    ]               reduce using rule 175 (valoresTernarioBool -> BOOL .)
    }               reduce using rule 175 (valoresTernarioBool -> BOOL .)
    ?               reduce using rule 167 (valoresBool -> BOOL .)
    OR              reduce using rule 167 (valoresBool -> BOOL .)
    AND             reduce using rule 167 (valoresBool -> BOOL .)


state 272

    (85) valoresTernarioVars -> varsOps .
    (121) valoresMat -> varsOps .
    (170) valoresBool -> varsOps .
    (206) tCompare -> varsOps .

    ,               reduce using rule 85 (valoresTernarioVars -> varsOps .)
    )               reduce using rule 85 (valoresTernarioVars -> varsOps .)
    ;               reduce using rule 85 (valoresTernarioVars -> varsOps .)
    ]               reduce using rule 85 (valoresTernarioVars -> varsOps .)
    :               reduce using rule 85 (valoresTernarioVars -> varsOps .)
    }               reduce using rule 85 (valoresTernarioVars -> varsOps .)
    +               reduce using rule 121 (valoresMat -> varsOps .)
    -               reduce using rule 121 (valoresMat -> varsOps .)
    *               reduce using rule 121 (valoresMat -> varsOps .)
    /               reduce using rule 121 (valoresMat -> varsOps .)
    %               reduce using rule 121 (valoresMat -> varsOps .)
    ^               reduce using rule 121 (valoresMat -> varsOps .)
    ?               reduce using rule 170 (valoresBool -> varsOps .)
    OR              reduce using rule 170 (valoresBool -> varsOps .)
    AND             reduce using rule 170 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 206 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 206 (tCompare -> varsOps .)
    >               reduce using rule 206 (tCompare -> varsOps .)
    <               reduce using rule 206 (tCompare -> varsOps .)


state 273

    (132) valoresTernarioMat -> ( . ternarioMat )
    (178) valoresTernarioBool -> ( . ternarioBool )
    (90) valoresTernarioVars -> ( . ternarioVars )
    (123) valoresMat -> ( . ternarioMat )
    (171) valoresBool -> ( . ternarioBool )
    (211) tCompare -> ( . ternarioBool )
    (212) tCompare -> ( . ternarioMat )
    (165) paren -> ( . eMat )
    (166) paren -> ( . valoresMat )
    (220) parenBool -> ( . expBool )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (49) funcBool -> . COLINEALES ( valores , valores )
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (96) vecVal -> . ID m
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 129
    (               shift and go to state 170
    BOOL            shift and go to state 142
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 169
    valoresBool                    shift and go to state 168
    ternarioMat                    shift and go to state 351
    paren                          shift and go to state 94
    varsOps                        shift and go to state 175
    ternarioBool                   shift and go to state 352
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    iSing                          shift and go to state 91
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 353
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 178

state 274

    (89) valoresTernarioVars -> ternarioVars .

    :               reduce using rule 89 (valoresTernarioVars -> ternarioVars .)
    ,               reduce using rule 89 (valoresTernarioVars -> ternarioVars .)
    )               reduce using rule 89 (valoresTernarioVars -> ternarioVars .)
    ;               reduce using rule 89 (valoresTernarioVars -> ternarioVars .)
    ]               reduce using rule 89 (valoresTernarioVars -> ternarioVars .)
    }               reduce using rule 89 (valoresTernarioVars -> ternarioVars .)


state 275

    (86) valoresTernarioVars -> varYVals .
    (108) varsOps -> varYVals . MASMAS
    (109) varsOps -> varYVals . MENOSMENOS
    (120) valoresMat -> varYVals .
    (169) valoresBool -> varYVals .
    (207) tCompare -> varYVals .

    ,               reduce using rule 86 (valoresTernarioVars -> varYVals .)
    )               reduce using rule 86 (valoresTernarioVars -> varYVals .)
    ;               reduce using rule 86 (valoresTernarioVars -> varYVals .)
    ]               reduce using rule 86 (valoresTernarioVars -> varYVals .)
    :               reduce using rule 86 (valoresTernarioVars -> varYVals .)
    }               reduce using rule 86 (valoresTernarioVars -> varYVals .)
    MASMAS          shift and go to state 47
    MENOSMENOS      shift and go to state 44
    +               reduce using rule 120 (valoresMat -> varYVals .)
    -               reduce using rule 120 (valoresMat -> varYVals .)
    *               reduce using rule 120 (valoresMat -> varYVals .)
    /               reduce using rule 120 (valoresMat -> varYVals .)
    %               reduce using rule 120 (valoresMat -> varYVals .)
    ^               reduce using rule 120 (valoresMat -> varYVals .)
    ?               reduce using rule 169 (valoresBool -> varYVals .)
    OR              reduce using rule 169 (valoresBool -> varYVals .)
    AND             reduce using rule 169 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 207 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 207 (tCompare -> varYVals .)
    >               reduce using rule 207 (tCompare -> varYVals .)
    <               reduce using rule 207 (tCompare -> varYVals .)


state 276

    (179) valoresTernarioBool -> expBool .
    (125) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (174) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> expBool . OR and
    (188) expBool -> expBool . OR valoresBool
    (80) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars

    :               reduce using rule 179 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 187
    OR              shift and go to state 186


state 277

    (137) eMat -> eMat + valoresMat .
    (145) p -> valoresMat . * exp
    (146) p -> valoresMat . / exp
    (147) p -> valoresMat . % exp
    (151) p -> valoresMat . * valoresMat
    (152) p -> valoresMat . / valoresMat
    (153) p -> valoresMat . % valoresMat
    (156) exp -> valoresMat . ^ iSing
    (158) exp -> valoresMat . ^ valoresMat

    +               reduce using rule 137 (eMat -> eMat + valoresMat .)
    -               reduce using rule 137 (eMat -> eMat + valoresMat .)
    EQEQ            reduce using rule 137 (eMat -> eMat + valoresMat .)
    DISTINTO        reduce using rule 137 (eMat -> eMat + valoresMat .)
    >               reduce using rule 137 (eMat -> eMat + valoresMat .)
    <               reduce using rule 137 (eMat -> eMat + valoresMat .)
    :               reduce using rule 137 (eMat -> eMat + valoresMat .)
    ,               reduce using rule 137 (eMat -> eMat + valoresMat .)
    ]               reduce using rule 137 (eMat -> eMat + valoresMat .)
    )               reduce using rule 137 (eMat -> eMat + valoresMat .)
    AND             reduce using rule 137 (eMat -> eMat + valoresMat .)
    OR              reduce using rule 137 (eMat -> eMat + valoresMat .)
    ?               reduce using rule 137 (eMat -> eMat + valoresMat .)
    ;               reduce using rule 137 (eMat -> eMat + valoresMat .)
    }               reduce using rule 137 (eMat -> eMat + valoresMat .)
    *               shift and go to state 155
    /               shift and go to state 157
    %               shift and go to state 153
    ^               shift and go to state 158


state 278

    (133) eMat -> eMat + p .
    (142) p -> p . * exp
    (143) p -> p . / exp
    (144) p -> p . % exp
    (148) p -> p . * valoresMat
    (149) p -> p . / valoresMat
    (150) p -> p . % valoresMat

    +               reduce using rule 133 (eMat -> eMat + p .)
    -               reduce using rule 133 (eMat -> eMat + p .)
    EQEQ            reduce using rule 133 (eMat -> eMat + p .)
    DISTINTO        reduce using rule 133 (eMat -> eMat + p .)
    >               reduce using rule 133 (eMat -> eMat + p .)
    <               reduce using rule 133 (eMat -> eMat + p .)
    :               reduce using rule 133 (eMat -> eMat + p .)
    ,               reduce using rule 133 (eMat -> eMat + p .)
    ]               reduce using rule 133 (eMat -> eMat + p .)
    )               reduce using rule 133 (eMat -> eMat + p .)
    AND             reduce using rule 133 (eMat -> eMat + p .)
    OR              reduce using rule 133 (eMat -> eMat + p .)
    ?               reduce using rule 133 (eMat -> eMat + p .)
    ;               reduce using rule 133 (eMat -> eMat + p .)
    }               reduce using rule 133 (eMat -> eMat + p .)
    *               shift and go to state 197
    /               shift and go to state 198
    %               shift and go to state 196


state 279

    (138) eMat -> eMat - valoresMat .
    (145) p -> valoresMat . * exp
    (146) p -> valoresMat . / exp
    (147) p -> valoresMat . % exp
    (151) p -> valoresMat . * valoresMat
    (152) p -> valoresMat . / valoresMat
    (153) p -> valoresMat . % valoresMat
    (156) exp -> valoresMat . ^ iSing
    (158) exp -> valoresMat . ^ valoresMat

    +               reduce using rule 138 (eMat -> eMat - valoresMat .)
    -               reduce using rule 138 (eMat -> eMat - valoresMat .)
    EQEQ            reduce using rule 138 (eMat -> eMat - valoresMat .)
    DISTINTO        reduce using rule 138 (eMat -> eMat - valoresMat .)
    >               reduce using rule 138 (eMat -> eMat - valoresMat .)
    <               reduce using rule 138 (eMat -> eMat - valoresMat .)
    :               reduce using rule 138 (eMat -> eMat - valoresMat .)
    ,               reduce using rule 138 (eMat -> eMat - valoresMat .)
    ]               reduce using rule 138 (eMat -> eMat - valoresMat .)
    )               reduce using rule 138 (eMat -> eMat - valoresMat .)
    AND             reduce using rule 138 (eMat -> eMat - valoresMat .)
    OR              reduce using rule 138 (eMat -> eMat - valoresMat .)
    ?               reduce using rule 138 (eMat -> eMat - valoresMat .)
    ;               reduce using rule 138 (eMat -> eMat - valoresMat .)
    }               reduce using rule 138 (eMat -> eMat - valoresMat .)
    *               shift and go to state 155
    /               shift and go to state 157
    %               shift and go to state 153
    ^               shift and go to state 158


state 280

    (134) eMat -> eMat - p .
    (142) p -> p . * exp
    (143) p -> p . / exp
    (144) p -> p . % exp
    (148) p -> p . * valoresMat
    (149) p -> p . / valoresMat
    (150) p -> p . % valoresMat

    +               reduce using rule 134 (eMat -> eMat - p .)
    -               reduce using rule 134 (eMat -> eMat - p .)
    EQEQ            reduce using rule 134 (eMat -> eMat - p .)
    DISTINTO        reduce using rule 134 (eMat -> eMat - p .)
    >               reduce using rule 134 (eMat -> eMat - p .)
    <               reduce using rule 134 (eMat -> eMat - p .)
    :               reduce using rule 134 (eMat -> eMat - p .)
    ,               reduce using rule 134 (eMat -> eMat - p .)
    ]               reduce using rule 134 (eMat -> eMat - p .)
    )               reduce using rule 134 (eMat -> eMat - p .)
    AND             reduce using rule 134 (eMat -> eMat - p .)
    OR              reduce using rule 134 (eMat -> eMat - p .)
    ?               reduce using rule 134 (eMat -> eMat - p .)
    ;               reduce using rule 134 (eMat -> eMat - p .)
    }               reduce using rule 134 (eMat -> eMat - p .)
    *               shift and go to state 197
    /               shift and go to state 198
    %               shift and go to state 196


state 281

    (166) paren -> ( valoresMat ) .

    ^               reduce using rule 166 (paren -> ( valoresMat ) .)
    *               reduce using rule 166 (paren -> ( valoresMat ) .)
    /               reduce using rule 166 (paren -> ( valoresMat ) .)
    %               reduce using rule 166 (paren -> ( valoresMat ) .)
    +               reduce using rule 166 (paren -> ( valoresMat ) .)
    -               reduce using rule 166 (paren -> ( valoresMat ) .)
    ,               reduce using rule 166 (paren -> ( valoresMat ) .)
    EQEQ            reduce using rule 166 (paren -> ( valoresMat ) .)
    DISTINTO        reduce using rule 166 (paren -> ( valoresMat ) .)
    >               reduce using rule 166 (paren -> ( valoresMat ) .)
    <               reduce using rule 166 (paren -> ( valoresMat ) .)
    )               reduce using rule 166 (paren -> ( valoresMat ) .)
    ;               reduce using rule 166 (paren -> ( valoresMat ) .)
    ]               reduce using rule 166 (paren -> ( valoresMat ) .)
    AND             reduce using rule 166 (paren -> ( valoresMat ) .)
    OR              reduce using rule 166 (paren -> ( valoresMat ) .)
    ?               reduce using rule 166 (paren -> ( valoresMat ) .)
    :               reduce using rule 166 (paren -> ( valoresMat ) .)
    }               reduce using rule 166 (paren -> ( valoresMat ) .)


state 282

    (165) paren -> ( eMat ) .

    ^               reduce using rule 165 (paren -> ( eMat ) .)
    *               reduce using rule 165 (paren -> ( eMat ) .)
    /               reduce using rule 165 (paren -> ( eMat ) .)
    %               reduce using rule 165 (paren -> ( eMat ) .)
    +               reduce using rule 165 (paren -> ( eMat ) .)
    -               reduce using rule 165 (paren -> ( eMat ) .)
    ,               reduce using rule 165 (paren -> ( eMat ) .)
    EQEQ            reduce using rule 165 (paren -> ( eMat ) .)
    DISTINTO        reduce using rule 165 (paren -> ( eMat ) .)
    >               reduce using rule 165 (paren -> ( eMat ) .)
    <               reduce using rule 165 (paren -> ( eMat ) .)
    )               reduce using rule 165 (paren -> ( eMat ) .)
    ;               reduce using rule 165 (paren -> ( eMat ) .)
    ]               reduce using rule 165 (paren -> ( eMat ) .)
    AND             reduce using rule 165 (paren -> ( eMat ) .)
    OR              reduce using rule 165 (paren -> ( eMat ) .)
    ?               reduce using rule 165 (paren -> ( eMat ) .)
    :               reduce using rule 165 (paren -> ( eMat ) .)
    }               reduce using rule 165 (paren -> ( eMat ) .)


state 283

    (124) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (173) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> valoresBool . OR and
    (189) expBool -> valoresBool . OR valoresBool
    (192) and -> valoresBool . AND eq
    (194) and -> valoresBool . AND valoresBool

    ?               shift and go to state 354
    OR              shift and go to state 162
    AND             shift and go to state 161


state 284

    (123) valoresMat -> ( ternarioMat . )
    (212) tCompare -> ( ternarioMat . )

    )               shift and go to state 355


state 285

    (220) parenBool -> ( expBool . )
    (125) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (174) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> expBool . OR and
    (188) expBool -> expBool . OR valoresBool

    )               shift and go to state 289
    ?               shift and go to state 356
    OR              shift and go to state 186


state 286

    (182) ternario -> ( ternarioMat ) .
    (123) valoresMat -> ( ternarioMat ) .
    (212) tCompare -> ( ternarioMat ) .

    ,               reduce using rule 182 (ternario -> ( ternarioMat ) .)
    ;               reduce using rule 182 (ternario -> ( ternarioMat ) .)
    )               reduce using rule 182 (ternario -> ( ternarioMat ) .)
    }               reduce using rule 182 (ternario -> ( ternarioMat ) .)
    ]               reduce using rule 182 (ternario -> ( ternarioMat ) .)
    +               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    ^               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    EQEQ            reduce using rule 212 (tCompare -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 212 (tCompare -> ( ternarioMat ) .)
    >               reduce using rule 212 (tCompare -> ( ternarioMat ) .)
    <               reduce using rule 212 (tCompare -> ( ternarioMat ) .)


state 287

    (183) ternario -> ( ternarioBool ) .
    (171) valoresBool -> ( ternarioBool ) .
    (211) tCompare -> ( ternarioBool ) .

    ,               reduce using rule 183 (ternario -> ( ternarioBool ) .)
    ;               reduce using rule 183 (ternario -> ( ternarioBool ) .)
    )               reduce using rule 183 (ternario -> ( ternarioBool ) .)
    }               reduce using rule 183 (ternario -> ( ternarioBool ) .)
    ]               reduce using rule 183 (ternario -> ( ternarioBool ) .)
    OR              reduce using rule 171 (valoresBool -> ( ternarioBool ) .)
    AND             reduce using rule 171 (valoresBool -> ( ternarioBool ) .)
    ?               reduce using rule 171 (valoresBool -> ( ternarioBool ) .)
    EQEQ            reduce using rule 211 (tCompare -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 211 (tCompare -> ( ternarioBool ) .)
    >               reduce using rule 211 (tCompare -> ( ternarioBool ) .)
    <               reduce using rule 211 (tCompare -> ( ternarioBool ) .)


state 288

    (185) ternario -> ( ternarioVars ) .

    ,               reduce using rule 185 (ternario -> ( ternarioVars ) .)
    ;               reduce using rule 185 (ternario -> ( ternarioVars ) .)
    )               reduce using rule 185 (ternario -> ( ternarioVars ) .)
    }               reduce using rule 185 (ternario -> ( ternarioVars ) .)
    ]               reduce using rule 185 (ternario -> ( ternarioVars ) .)


state 289

    (220) parenBool -> ( expBool ) .

    EQEQ            reduce using rule 220 (parenBool -> ( expBool ) .)
    DISTINTO        reduce using rule 220 (parenBool -> ( expBool ) .)
    AND             reduce using rule 220 (parenBool -> ( expBool ) .)
    ?               reduce using rule 220 (parenBool -> ( expBool ) .)
    OR              reduce using rule 220 (parenBool -> ( expBool ) .)
    :               reduce using rule 220 (parenBool -> ( expBool ) .)
    )               reduce using rule 220 (parenBool -> ( expBool ) .)
    ,               reduce using rule 220 (parenBool -> ( expBool ) .)
    ;               reduce using rule 220 (parenBool -> ( expBool ) .)
    ]               reduce using rule 220 (parenBool -> ( expBool ) .)
    }               reduce using rule 220 (parenBool -> ( expBool ) .)


state 290

    (123) valoresMat -> ( . ternarioMat )
    (171) valoresBool -> ( . ternarioBool )
    (165) paren -> ( . eMat )
    (166) paren -> ( . valoresMat )
    (211) tCompare -> ( . ternarioBool )
    (212) tCompare -> ( . ternarioMat )
    (220) parenBool -> ( . expBool )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (49) funcBool -> . COLINEALES ( valores , valores )
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (96) vecVal -> . ID m
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 129
    (               shift and go to state 170
    BOOL            shift and go to state 142
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 283
    eMat                           shift and go to state 169
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 284
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    ternarioBool                   shift and go to state 220
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 285

state 291

    (120) valoresMat -> varYVals .
    (108) varsOps -> varYVals . MASMAS
    (109) varsOps -> varYVals . MENOSMENOS
    (169) valoresBool -> varYVals .
    (207) tCompare -> varYVals .

    )               reduce using rule 120 (valoresMat -> varYVals .)
    +               reduce using rule 120 (valoresMat -> varYVals .)
    -               reduce using rule 120 (valoresMat -> varYVals .)
    *               reduce using rule 120 (valoresMat -> varYVals .)
    /               reduce using rule 120 (valoresMat -> varYVals .)
    %               reduce using rule 120 (valoresMat -> varYVals .)
    ^               reduce using rule 120 (valoresMat -> varYVals .)
    MASMAS          shift and go to state 47
    MENOSMENOS      shift and go to state 44
    ?               reduce using rule 169 (valoresBool -> varYVals .)
    OR              reduce using rule 169 (valoresBool -> varYVals .)
    AND             reduce using rule 169 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 207 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 207 (tCompare -> varYVals .)
    >               reduce using rule 207 (tCompare -> varYVals .)
    <               reduce using rule 207 (tCompare -> varYVals .)


state 292

    (186) expBool -> expBool OR and .
    (191) and -> and . AND eq
    (193) and -> and . AND valoresBool

    OR              reduce using rule 186 (expBool -> expBool OR and .)
    ?               reduce using rule 186 (expBool -> expBool OR and .)
    )               reduce using rule 186 (expBool -> expBool OR and .)
    ;               reduce using rule 186 (expBool -> expBool OR and .)
    ,               reduce using rule 186 (expBool -> expBool OR and .)
    ]               reduce using rule 186 (expBool -> expBool OR and .)
    :               reduce using rule 186 (expBool -> expBool OR and .)
    }               reduce using rule 186 (expBool -> expBool OR and .)
    AND             shift and go to state 152


state 293

    (188) expBool -> expBool OR valoresBool .
    (192) and -> valoresBool . AND eq
    (194) and -> valoresBool . AND valoresBool

    OR              reduce using rule 188 (expBool -> expBool OR valoresBool .)
    ?               reduce using rule 188 (expBool -> expBool OR valoresBool .)
    )               reduce using rule 188 (expBool -> expBool OR valoresBool .)
    ;               reduce using rule 188 (expBool -> expBool OR valoresBool .)
    ,               reduce using rule 188 (expBool -> expBool OR valoresBool .)
    ]               reduce using rule 188 (expBool -> expBool OR valoresBool .)
    :               reduce using rule 188 (expBool -> expBool OR valoresBool .)
    }               reduce using rule 188 (expBool -> expBool OR valoresBool .)
    AND             shift and go to state 161


state 294

    (174) ternarioBool -> expBool ? valoresTernarioBool . : valoresTernarioBool
    (84) ternarioVars -> expBool ? valoresTernarioBool . : valoresTernarioVars

    :               shift and go to state 357


state 295

    (80) ternarioVars -> expBool ? valoresTernarioVars . : valoresTernarioVars
    (81) ternarioVars -> expBool ? valoresTernarioVars . : valoresTernarioMat
    (83) ternarioVars -> expBool ? valoresTernarioVars . : valoresTernarioBool

    :               shift and go to state 358


state 296

    (125) ternarioMat -> expBool ? valoresTernarioMat . : valoresTernarioMat
    (82) ternarioVars -> expBool ? valoresTernarioMat . : valoresTernarioVars

    :               shift and go to state 359


state 297

    (199) eq -> tCompare DISTINTO mayor .

    EQEQ            reduce using rule 199 (eq -> tCompare DISTINTO mayor .)
    DISTINTO        reduce using rule 199 (eq -> tCompare DISTINTO mayor .)
    AND             reduce using rule 199 (eq -> tCompare DISTINTO mayor .)
    OR              reduce using rule 199 (eq -> tCompare DISTINTO mayor .)
    ?               reduce using rule 199 (eq -> tCompare DISTINTO mayor .)
    ;               reduce using rule 199 (eq -> tCompare DISTINTO mayor .)
    )               reduce using rule 199 (eq -> tCompare DISTINTO mayor .)
    :               reduce using rule 199 (eq -> tCompare DISTINTO mayor .)
    ,               reduce using rule 199 (eq -> tCompare DISTINTO mayor .)
    }               reduce using rule 199 (eq -> tCompare DISTINTO mayor .)
    ]               reduce using rule 199 (eq -> tCompare DISTINTO mayor .)


state 298

    (203) eq -> tCompare DISTINTO tCompare .
    (213) mayor -> tCompare . > tCompare
    (215) menor -> tCompare . < tCompare

    EQEQ            reduce using rule 203 (eq -> tCompare DISTINTO tCompare .)
    DISTINTO        reduce using rule 203 (eq -> tCompare DISTINTO tCompare .)
    AND             reduce using rule 203 (eq -> tCompare DISTINTO tCompare .)
    OR              reduce using rule 203 (eq -> tCompare DISTINTO tCompare .)
    ?               reduce using rule 203 (eq -> tCompare DISTINTO tCompare .)
    ;               reduce using rule 203 (eq -> tCompare DISTINTO tCompare .)
    )               reduce using rule 203 (eq -> tCompare DISTINTO tCompare .)
    :               reduce using rule 203 (eq -> tCompare DISTINTO tCompare .)
    ,               reduce using rule 203 (eq -> tCompare DISTINTO tCompare .)
    }               reduce using rule 203 (eq -> tCompare DISTINTO tCompare .)
    ]               reduce using rule 203 (eq -> tCompare DISTINTO tCompare .)
    >               shift and go to state 191
    <               shift and go to state 190


state 299

    (198) eq -> tCompare EQEQ mayor .

    EQEQ            reduce using rule 198 (eq -> tCompare EQEQ mayor .)
    DISTINTO        reduce using rule 198 (eq -> tCompare EQEQ mayor .)
    AND             reduce using rule 198 (eq -> tCompare EQEQ mayor .)
    OR              reduce using rule 198 (eq -> tCompare EQEQ mayor .)
    ?               reduce using rule 198 (eq -> tCompare EQEQ mayor .)
    ;               reduce using rule 198 (eq -> tCompare EQEQ mayor .)
    )               reduce using rule 198 (eq -> tCompare EQEQ mayor .)
    :               reduce using rule 198 (eq -> tCompare EQEQ mayor .)
    ,               reduce using rule 198 (eq -> tCompare EQEQ mayor .)
    }               reduce using rule 198 (eq -> tCompare EQEQ mayor .)
    ]               reduce using rule 198 (eq -> tCompare EQEQ mayor .)


state 300

    (202) eq -> tCompare EQEQ tCompare .
    (213) mayor -> tCompare . > tCompare
    (215) menor -> tCompare . < tCompare

    EQEQ            reduce using rule 202 (eq -> tCompare EQEQ tCompare .)
    DISTINTO        reduce using rule 202 (eq -> tCompare EQEQ tCompare .)
    AND             reduce using rule 202 (eq -> tCompare EQEQ tCompare .)
    OR              reduce using rule 202 (eq -> tCompare EQEQ tCompare .)
    ?               reduce using rule 202 (eq -> tCompare EQEQ tCompare .)
    ;               reduce using rule 202 (eq -> tCompare EQEQ tCompare .)
    )               reduce using rule 202 (eq -> tCompare EQEQ tCompare .)
    :               reduce using rule 202 (eq -> tCompare EQEQ tCompare .)
    ,               reduce using rule 202 (eq -> tCompare EQEQ tCompare .)
    }               reduce using rule 202 (eq -> tCompare EQEQ tCompare .)
    ]               reduce using rule 202 (eq -> tCompare EQEQ tCompare .)
    >               shift and go to state 191
    <               shift and go to state 190


state 301

    (211) tCompare -> ( . ternarioBool )
    (212) tCompare -> ( . ternarioMat )
    (123) valoresMat -> ( . ternarioMat )
    (165) paren -> ( . eMat )
    (166) paren -> ( . valoresMat )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (49) funcBool -> . COLINEALES ( valores , valores )
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (96) vecVal -> . ID m
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 129
    (               shift and go to state 170
    BOOL            shift and go to state 142
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 218
    eMat                           shift and go to state 169
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 219
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    ternarioBool                   shift and go to state 347
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 360

state 302

    (215) menor -> tCompare < tCompare .

    EQEQ            reduce using rule 215 (menor -> tCompare < tCompare .)
    DISTINTO        reduce using rule 215 (menor -> tCompare < tCompare .)
    AND             reduce using rule 215 (menor -> tCompare < tCompare .)
    ?               reduce using rule 215 (menor -> tCompare < tCompare .)
    OR              reduce using rule 215 (menor -> tCompare < tCompare .)
    )               reduce using rule 215 (menor -> tCompare < tCompare .)
    :               reduce using rule 215 (menor -> tCompare < tCompare .)
    ,               reduce using rule 215 (menor -> tCompare < tCompare .)
    ;               reduce using rule 215 (menor -> tCompare < tCompare .)
    ]               reduce using rule 215 (menor -> tCompare < tCompare .)
    }               reduce using rule 215 (menor -> tCompare < tCompare .)


state 303

    (213) mayor -> tCompare > tCompare .

    EQEQ            reduce using rule 213 (mayor -> tCompare > tCompare .)
    DISTINTO        reduce using rule 213 (mayor -> tCompare > tCompare .)
    AND             reduce using rule 213 (mayor -> tCompare > tCompare .)
    ?               reduce using rule 213 (mayor -> tCompare > tCompare .)
    OR              reduce using rule 213 (mayor -> tCompare > tCompare .)
    ,               reduce using rule 213 (mayor -> tCompare > tCompare .)
    )               reduce using rule 213 (mayor -> tCompare > tCompare .)
    ;               reduce using rule 213 (mayor -> tCompare > tCompare .)
    ]               reduce using rule 213 (mayor -> tCompare > tCompare .)
    :               reduce using rule 213 (mayor -> tCompare > tCompare .)
    }               reduce using rule 213 (mayor -> tCompare > tCompare .)


state 304

    (55) elem -> valores , . elem
    (55) elem -> . valores , elem
    (56) elem -> . valores
    (57) valores -> . eMat
    (58) valores -> . expBool
    (59) valores -> . funcReturn
    (60) valores -> . reg
    (61) valores -> . INT
    (62) valores -> . FLOAT
    (63) valores -> . STRING
    (64) valores -> . BOOL
    (65) valores -> . varYVals
    (66) valores -> . varsOps
    (67) valores -> . vec
    (68) valores -> . ternario
    (69) valores -> . atributos
    (70) valores -> . RES
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (103) reg -> . { campos }
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (54) vec -> . [ elem ]
    (180) ternario -> . ternarioMat
    (181) ternario -> . ternarioBool
    (182) ternario -> . ( ternarioMat )
    (183) ternario -> . ( ternarioBool )
    (184) ternario -> . ternarioVars
    (185) ternario -> . ( ternarioVars )
    (71) atributos -> . ID . valoresCampos
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )
    (96) vecVal -> . ID m
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    ?               reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    elem                           shift and go to state 361
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 192
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 305

    (54) vec -> [ elem ] .

    )               reduce using rule 54 (vec -> [ elem ] .)
    :               reduce using rule 54 (vec -> [ elem ] .)
    ,               reduce using rule 54 (vec -> [ elem ] .)
    ;               reduce using rule 54 (vec -> [ elem ] .)
    ]               reduce using rule 54 (vec -> [ elem ] .)
    }               reduce using rule 54 (vec -> [ elem ] .)


state 306

    (74) valoresCampos -> BEGIN .

    ,               reduce using rule 74 (valoresCampos -> BEGIN .)
    )               reduce using rule 74 (valoresCampos -> BEGIN .)
    ;               reduce using rule 74 (valoresCampos -> BEGIN .)
    ]               reduce using rule 74 (valoresCampos -> BEGIN .)
    :               reduce using rule 74 (valoresCampos -> BEGIN .)
    }               reduce using rule 74 (valoresCampos -> BEGIN .)


state 307

    (73) valoresCampos -> END .

    ,               reduce using rule 73 (valoresCampos -> END .)
    )               reduce using rule 73 (valoresCampos -> END .)
    ;               reduce using rule 73 (valoresCampos -> END .)
    ]               reduce using rule 73 (valoresCampos -> END .)
    :               reduce using rule 73 (valoresCampos -> END .)
    }               reduce using rule 73 (valoresCampos -> END .)


state 308

    (71) atributos -> ID . valoresCampos .

    :               reduce using rule 71 (atributos -> ID . valoresCampos .)
    ;               reduce using rule 71 (atributos -> ID . valoresCampos .)
    )               reduce using rule 71 (atributos -> ID . valoresCampos .)
    ,               reduce using rule 71 (atributos -> ID . valoresCampos .)
    ]               reduce using rule 71 (atributos -> ID . valoresCampos .)
    }               reduce using rule 71 (atributos -> ID . valoresCampos .)


state 309

    (72) valoresCampos -> varYVals .

    ,               reduce using rule 72 (valoresCampos -> varYVals .)
    )               reduce using rule 72 (valoresCampos -> varYVals .)
    ;               reduce using rule 72 (valoresCampos -> varYVals .)
    ]               reduce using rule 72 (valoresCampos -> varYVals .)
    :               reduce using rule 72 (valoresCampos -> varYVals .)
    }               reduce using rule 72 (valoresCampos -> varYVals .)


state 310

    (49) funcBool -> COLINEALES ( valores , valores . )

    )               shift and go to state 362


state 311

    (150) p -> p % valoresMat .
    (156) exp -> valoresMat . ^ iSing
    (158) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 150 (p -> p % valoresMat .)
    /               reduce using rule 150 (p -> p % valoresMat .)
    %               reduce using rule 150 (p -> p % valoresMat .)
    +               reduce using rule 150 (p -> p % valoresMat .)
    -               reduce using rule 150 (p -> p % valoresMat .)
    ,               reduce using rule 150 (p -> p % valoresMat .)
    EQEQ            reduce using rule 150 (p -> p % valoresMat .)
    DISTINTO        reduce using rule 150 (p -> p % valoresMat .)
    >               reduce using rule 150 (p -> p % valoresMat .)
    <               reduce using rule 150 (p -> p % valoresMat .)
    )               reduce using rule 150 (p -> p % valoresMat .)
    ;               reduce using rule 150 (p -> p % valoresMat .)
    ]               reduce using rule 150 (p -> p % valoresMat .)
    :               reduce using rule 150 (p -> p % valoresMat .)
    }               reduce using rule 150 (p -> p % valoresMat .)
    AND             reduce using rule 150 (p -> p % valoresMat .)
    OR              reduce using rule 150 (p -> p % valoresMat .)
    ?               reduce using rule 150 (p -> p % valoresMat .)
    ^               shift and go to state 158


state 312

    (144) p -> p % exp .
    (155) exp -> exp . ^ iSing
    (157) exp -> exp . ^ valoresMat

    *               reduce using rule 144 (p -> p % exp .)
    /               reduce using rule 144 (p -> p % exp .)
    %               reduce using rule 144 (p -> p % exp .)
    +               reduce using rule 144 (p -> p % exp .)
    -               reduce using rule 144 (p -> p % exp .)
    ,               reduce using rule 144 (p -> p % exp .)
    EQEQ            reduce using rule 144 (p -> p % exp .)
    DISTINTO        reduce using rule 144 (p -> p % exp .)
    >               reduce using rule 144 (p -> p % exp .)
    <               reduce using rule 144 (p -> p % exp .)
    )               reduce using rule 144 (p -> p % exp .)
    ;               reduce using rule 144 (p -> p % exp .)
    ]               reduce using rule 144 (p -> p % exp .)
    :               reduce using rule 144 (p -> p % exp .)
    }               reduce using rule 144 (p -> p % exp .)
    AND             reduce using rule 144 (p -> p % exp .)
    OR              reduce using rule 144 (p -> p % exp .)
    ?               reduce using rule 144 (p -> p % exp .)
    ^               shift and go to state 204


state 313

    (148) p -> p * valoresMat .
    (156) exp -> valoresMat . ^ iSing
    (158) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 148 (p -> p * valoresMat .)
    /               reduce using rule 148 (p -> p * valoresMat .)
    %               reduce using rule 148 (p -> p * valoresMat .)
    +               reduce using rule 148 (p -> p * valoresMat .)
    -               reduce using rule 148 (p -> p * valoresMat .)
    ,               reduce using rule 148 (p -> p * valoresMat .)
    EQEQ            reduce using rule 148 (p -> p * valoresMat .)
    DISTINTO        reduce using rule 148 (p -> p * valoresMat .)
    >               reduce using rule 148 (p -> p * valoresMat .)
    <               reduce using rule 148 (p -> p * valoresMat .)
    )               reduce using rule 148 (p -> p * valoresMat .)
    ;               reduce using rule 148 (p -> p * valoresMat .)
    ]               reduce using rule 148 (p -> p * valoresMat .)
    :               reduce using rule 148 (p -> p * valoresMat .)
    }               reduce using rule 148 (p -> p * valoresMat .)
    AND             reduce using rule 148 (p -> p * valoresMat .)
    OR              reduce using rule 148 (p -> p * valoresMat .)
    ?               reduce using rule 148 (p -> p * valoresMat .)
    ^               shift and go to state 158


state 314

    (142) p -> p * exp .
    (155) exp -> exp . ^ iSing
    (157) exp -> exp . ^ valoresMat

    *               reduce using rule 142 (p -> p * exp .)
    /               reduce using rule 142 (p -> p * exp .)
    %               reduce using rule 142 (p -> p * exp .)
    +               reduce using rule 142 (p -> p * exp .)
    -               reduce using rule 142 (p -> p * exp .)
    ,               reduce using rule 142 (p -> p * exp .)
    EQEQ            reduce using rule 142 (p -> p * exp .)
    DISTINTO        reduce using rule 142 (p -> p * exp .)
    >               reduce using rule 142 (p -> p * exp .)
    <               reduce using rule 142 (p -> p * exp .)
    )               reduce using rule 142 (p -> p * exp .)
    ;               reduce using rule 142 (p -> p * exp .)
    ]               reduce using rule 142 (p -> p * exp .)
    :               reduce using rule 142 (p -> p * exp .)
    }               reduce using rule 142 (p -> p * exp .)
    AND             reduce using rule 142 (p -> p * exp .)
    OR              reduce using rule 142 (p -> p * exp .)
    ?               reduce using rule 142 (p -> p * exp .)
    ^               shift and go to state 204


state 315

    (149) p -> p / valoresMat .
    (156) exp -> valoresMat . ^ iSing
    (158) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 149 (p -> p / valoresMat .)
    /               reduce using rule 149 (p -> p / valoresMat .)
    %               reduce using rule 149 (p -> p / valoresMat .)
    +               reduce using rule 149 (p -> p / valoresMat .)
    -               reduce using rule 149 (p -> p / valoresMat .)
    ,               reduce using rule 149 (p -> p / valoresMat .)
    EQEQ            reduce using rule 149 (p -> p / valoresMat .)
    DISTINTO        reduce using rule 149 (p -> p / valoresMat .)
    >               reduce using rule 149 (p -> p / valoresMat .)
    <               reduce using rule 149 (p -> p / valoresMat .)
    )               reduce using rule 149 (p -> p / valoresMat .)
    ;               reduce using rule 149 (p -> p / valoresMat .)
    ]               reduce using rule 149 (p -> p / valoresMat .)
    :               reduce using rule 149 (p -> p / valoresMat .)
    }               reduce using rule 149 (p -> p / valoresMat .)
    AND             reduce using rule 149 (p -> p / valoresMat .)
    OR              reduce using rule 149 (p -> p / valoresMat .)
    ?               reduce using rule 149 (p -> p / valoresMat .)
    ^               shift and go to state 158


state 316

    (143) p -> p / exp .
    (155) exp -> exp . ^ iSing
    (157) exp -> exp . ^ valoresMat

    *               reduce using rule 143 (p -> p / exp .)
    /               reduce using rule 143 (p -> p / exp .)
    %               reduce using rule 143 (p -> p / exp .)
    +               reduce using rule 143 (p -> p / exp .)
    -               reduce using rule 143 (p -> p / exp .)
    ,               reduce using rule 143 (p -> p / exp .)
    EQEQ            reduce using rule 143 (p -> p / exp .)
    DISTINTO        reduce using rule 143 (p -> p / exp .)
    >               reduce using rule 143 (p -> p / exp .)
    <               reduce using rule 143 (p -> p / exp .)
    )               reduce using rule 143 (p -> p / exp .)
    ;               reduce using rule 143 (p -> p / exp .)
    ]               reduce using rule 143 (p -> p / exp .)
    :               reduce using rule 143 (p -> p / exp .)
    }               reduce using rule 143 (p -> p / exp .)
    AND             reduce using rule 143 (p -> p / exp .)
    OR              reduce using rule 143 (p -> p / exp .)
    ?               reduce using rule 143 (p -> p / exp .)
    ^               shift and go to state 204


state 317

    (173) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> valoresBool . OR and
    (189) expBool -> valoresBool . OR valoresBool
    (192) and -> valoresBool . AND eq
    (194) and -> valoresBool . AND valoresBool

    ?               shift and go to state 363
    OR              shift and go to state 162
    AND             shift and go to state 161


state 318

    (171) valoresBool -> ( ternarioBool . )

    )               shift and go to state 364


state 319

    (220) parenBool -> ( expBool . )
    (174) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> expBool . OR and
    (188) expBool -> expBool . OR valoresBool

    )               shift and go to state 289
    ?               shift and go to state 365
    OR              shift and go to state 186


state 320

    (157) exp -> exp ^ valoresMat .

    ^               reduce using rule 157 (exp -> exp ^ valoresMat .)
    *               reduce using rule 157 (exp -> exp ^ valoresMat .)
    /               reduce using rule 157 (exp -> exp ^ valoresMat .)
    %               reduce using rule 157 (exp -> exp ^ valoresMat .)
    +               reduce using rule 157 (exp -> exp ^ valoresMat .)
    -               reduce using rule 157 (exp -> exp ^ valoresMat .)
    EQEQ            reduce using rule 157 (exp -> exp ^ valoresMat .)
    DISTINTO        reduce using rule 157 (exp -> exp ^ valoresMat .)
    >               reduce using rule 157 (exp -> exp ^ valoresMat .)
    <               reduce using rule 157 (exp -> exp ^ valoresMat .)
    )               reduce using rule 157 (exp -> exp ^ valoresMat .)
    ,               reduce using rule 157 (exp -> exp ^ valoresMat .)
    }               reduce using rule 157 (exp -> exp ^ valoresMat .)
    ;               reduce using rule 157 (exp -> exp ^ valoresMat .)
    ]               reduce using rule 157 (exp -> exp ^ valoresMat .)
    AND             reduce using rule 157 (exp -> exp ^ valoresMat .)
    OR              reduce using rule 157 (exp -> exp ^ valoresMat .)
    ?               reduce using rule 157 (exp -> exp ^ valoresMat .)
    :               reduce using rule 157 (exp -> exp ^ valoresMat .)


state 321

    (155) exp -> exp ^ iSing .

    ^               reduce using rule 155 (exp -> exp ^ iSing .)
    *               reduce using rule 155 (exp -> exp ^ iSing .)
    /               reduce using rule 155 (exp -> exp ^ iSing .)
    %               reduce using rule 155 (exp -> exp ^ iSing .)
    +               reduce using rule 155 (exp -> exp ^ iSing .)
    -               reduce using rule 155 (exp -> exp ^ iSing .)
    EQEQ            reduce using rule 155 (exp -> exp ^ iSing .)
    DISTINTO        reduce using rule 155 (exp -> exp ^ iSing .)
    >               reduce using rule 155 (exp -> exp ^ iSing .)
    <               reduce using rule 155 (exp -> exp ^ iSing .)
    )               reduce using rule 155 (exp -> exp ^ iSing .)
    ,               reduce using rule 155 (exp -> exp ^ iSing .)
    }               reduce using rule 155 (exp -> exp ^ iSing .)
    ;               reduce using rule 155 (exp -> exp ^ iSing .)
    ]               reduce using rule 155 (exp -> exp ^ iSing .)
    AND             reduce using rule 155 (exp -> exp ^ iSing .)
    OR              reduce using rule 155 (exp -> exp ^ iSing .)
    ?               reduce using rule 155 (exp -> exp ^ iSing .)
    :               reduce using rule 155 (exp -> exp ^ iSing .)


state 322

    (103) reg -> { campos } .

    :               reduce using rule 103 (reg -> { campos } .)
    ,               reduce using rule 103 (reg -> { campos } .)
    ]               reduce using rule 103 (reg -> { campos } .)
    )               reduce using rule 103 (reg -> { campos } .)
    ;               reduce using rule 103 (reg -> { campos } .)
    }               reduce using rule 103 (reg -> { campos } .)


state 323

    (104) campos -> ID : . valores , campos
    (105) campos -> ID : . valores
    (57) valores -> . eMat
    (58) valores -> . expBool
    (59) valores -> . funcReturn
    (60) valores -> . reg
    (61) valores -> . INT
    (62) valores -> . FLOAT
    (63) valores -> . STRING
    (64) valores -> . BOOL
    (65) valores -> . varYVals
    (66) valores -> . varsOps
    (67) valores -> . vec
    (68) valores -> . ternario
    (69) valores -> . atributos
    (70) valores -> . RES
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (103) reg -> . { campos }
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (54) vec -> . [ elem ]
    (180) ternario -> . ternarioMat
    (181) ternario -> . ternarioBool
    (182) ternario -> . ( ternarioMat )
    (183) ternario -> . ( ternarioBool )
    (184) ternario -> . ternarioVars
    (185) ternario -> . ( ternarioVars )
    (71) atributos -> . ID . valoresCampos
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )
    (96) vecVal -> . ID m
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    ?               reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 366
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 324

    (32) loop -> FOR ( primParam ; valores . ; tercerParam )

    ;               shift and go to state 367


state 325

    (116) varAsig -> ID . ID = valoresAsig .

    ;               reduce using rule 116 (varAsig -> ID . ID = valoresAsig .)
    )               reduce using rule 116 (varAsig -> ID . ID = valoresAsig .)


state 326

    (101) m -> [ eMat ] m .

    .               reduce using rule 101 (m -> [ eMat ] m .)
    MASMAS          reduce using rule 101 (m -> [ eMat ] m .)
    MENOSMENOS      reduce using rule 101 (m -> [ eMat ] m .)
    MULEQ           reduce using rule 101 (m -> [ eMat ] m .)
    DIVEQ           reduce using rule 101 (m -> [ eMat ] m .)
    MASEQ           reduce using rule 101 (m -> [ eMat ] m .)
    MENOSEQ         reduce using rule 101 (m -> [ eMat ] m .)
    =               reduce using rule 101 (m -> [ eMat ] m .)
    ,               reduce using rule 101 (m -> [ eMat ] m .)
    +               reduce using rule 101 (m -> [ eMat ] m .)
    -               reduce using rule 101 (m -> [ eMat ] m .)
    *               reduce using rule 101 (m -> [ eMat ] m .)
    /               reduce using rule 101 (m -> [ eMat ] m .)
    %               reduce using rule 101 (m -> [ eMat ] m .)
    ^               reduce using rule 101 (m -> [ eMat ] m .)
    OR              reduce using rule 101 (m -> [ eMat ] m .)
    AND             reduce using rule 101 (m -> [ eMat ] m .)
    ?               reduce using rule 101 (m -> [ eMat ] m .)
    EQEQ            reduce using rule 101 (m -> [ eMat ] m .)
    DISTINTO        reduce using rule 101 (m -> [ eMat ] m .)
    >               reduce using rule 101 (m -> [ eMat ] m .)
    <               reduce using rule 101 (m -> [ eMat ] m .)
    )               reduce using rule 101 (m -> [ eMat ] m .)
    ;               reduce using rule 101 (m -> [ eMat ] m .)
    ]               reduce using rule 101 (m -> [ eMat ] m .)
    :               reduce using rule 101 (m -> [ eMat ] m .)
    }               reduce using rule 101 (m -> [ eMat ] m .)


state 327

    (124) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (49) funcBool -> . COLINEALES ( valores , valores )
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (96) vecVal -> . ID m
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    (               shift and go to state 368
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    BOOL            shift and go to state 142
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 213
    eMat                           shift and go to state 260
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 262
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 369
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 215

state 328

    (123) valoresMat -> ( ternarioMat ) .

    ^               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    +               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    ,               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    EQEQ            reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    >               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    <               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    )               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    ;               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    ]               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    AND             reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    OR              reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    ?               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    :               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    }               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)


state 329

    (125) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (49) funcBool -> . COLINEALES ( valores , valores )
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (96) vecVal -> . ID m
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    (               shift and go to state 368
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    BOOL            shift and go to state 142
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 213
    eMat                           shift and go to state 260
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 262
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 370
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 215

state 330

    (98) m -> [ INT ] m .

    .               reduce using rule 98 (m -> [ INT ] m .)
    MASMAS          reduce using rule 98 (m -> [ INT ] m .)
    MENOSMENOS      reduce using rule 98 (m -> [ INT ] m .)
    MULEQ           reduce using rule 98 (m -> [ INT ] m .)
    DIVEQ           reduce using rule 98 (m -> [ INT ] m .)
    MASEQ           reduce using rule 98 (m -> [ INT ] m .)
    MENOSEQ         reduce using rule 98 (m -> [ INT ] m .)
    =               reduce using rule 98 (m -> [ INT ] m .)
    ,               reduce using rule 98 (m -> [ INT ] m .)
    +               reduce using rule 98 (m -> [ INT ] m .)
    -               reduce using rule 98 (m -> [ INT ] m .)
    *               reduce using rule 98 (m -> [ INT ] m .)
    /               reduce using rule 98 (m -> [ INT ] m .)
    %               reduce using rule 98 (m -> [ INT ] m .)
    ^               reduce using rule 98 (m -> [ INT ] m .)
    OR              reduce using rule 98 (m -> [ INT ] m .)
    AND             reduce using rule 98 (m -> [ INT ] m .)
    ?               reduce using rule 98 (m -> [ INT ] m .)
    EQEQ            reduce using rule 98 (m -> [ INT ] m .)
    DISTINTO        reduce using rule 98 (m -> [ INT ] m .)
    >               reduce using rule 98 (m -> [ INT ] m .)
    <               reduce using rule 98 (m -> [ INT ] m .)
    )               reduce using rule 98 (m -> [ INT ] m .)
    ;               reduce using rule 98 (m -> [ INT ] m .)
    ]               reduce using rule 98 (m -> [ INT ] m .)
    :               reduce using rule 98 (m -> [ INT ] m .)
    }               reduce using rule 98 (m -> [ INT ] m .)


state 331

    (99) m -> [ varYVals ] m .

    .               reduce using rule 99 (m -> [ varYVals ] m .)
    MASMAS          reduce using rule 99 (m -> [ varYVals ] m .)
    MENOSMENOS      reduce using rule 99 (m -> [ varYVals ] m .)
    MULEQ           reduce using rule 99 (m -> [ varYVals ] m .)
    DIVEQ           reduce using rule 99 (m -> [ varYVals ] m .)
    MASEQ           reduce using rule 99 (m -> [ varYVals ] m .)
    MENOSEQ         reduce using rule 99 (m -> [ varYVals ] m .)
    =               reduce using rule 99 (m -> [ varYVals ] m .)
    ,               reduce using rule 99 (m -> [ varYVals ] m .)
    +               reduce using rule 99 (m -> [ varYVals ] m .)
    -               reduce using rule 99 (m -> [ varYVals ] m .)
    *               reduce using rule 99 (m -> [ varYVals ] m .)
    /               reduce using rule 99 (m -> [ varYVals ] m .)
    %               reduce using rule 99 (m -> [ varYVals ] m .)
    ^               reduce using rule 99 (m -> [ varYVals ] m .)
    OR              reduce using rule 99 (m -> [ varYVals ] m .)
    AND             reduce using rule 99 (m -> [ varYVals ] m .)
    ?               reduce using rule 99 (m -> [ varYVals ] m .)
    EQEQ            reduce using rule 99 (m -> [ varYVals ] m .)
    DISTINTO        reduce using rule 99 (m -> [ varYVals ] m .)
    >               reduce using rule 99 (m -> [ varYVals ] m .)
    <               reduce using rule 99 (m -> [ varYVals ] m .)
    )               reduce using rule 99 (m -> [ varYVals ] m .)
    ;               reduce using rule 99 (m -> [ varYVals ] m .)
    ]               reduce using rule 99 (m -> [ varYVals ] m .)
    :               reduce using rule 99 (m -> [ varYVals ] m .)
    }               reduce using rule 99 (m -> [ varYVals ] m .)


state 332

    (173) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (124) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (175) valoresTernarioBool -> . BOOL
    (176) valoresTernarioBool -> . funcBool
    (177) valoresTernarioBool -> . ternarioBool
    (178) valoresTernarioBool -> . ( ternarioBool )
    (179) valoresTernarioBool -> . expBool
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (49) funcBool -> . COLINEALES ( valores , valores )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (96) vecVal -> . ID m
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    BOOL            shift and go to state 271
    (               shift and go to state 374
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    COLINEALES      shift and go to state 4
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 371
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 372
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 262
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    ternarioBool                   shift and go to state 267
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 369
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 373
    exp                            shift and go to state 106
    varYVals                       shift and go to state 375
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 376

state 333

    (212) tCompare -> ( ternarioMat ) .
    (123) valoresMat -> ( ternarioMat ) .

    >               reduce using rule 212 (tCompare -> ( ternarioMat ) .)
    <               reduce using rule 212 (tCompare -> ( ternarioMat ) .)
    EQEQ            reduce using rule 212 (tCompare -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 212 (tCompare -> ( ternarioMat ) .)
    AND             reduce using rule 212 (tCompare -> ( ternarioMat ) .)
    OR              reduce using rule 212 (tCompare -> ( ternarioMat ) .)
    ?               reduce using rule 212 (tCompare -> ( ternarioMat ) .)
    ,               reduce using rule 212 (tCompare -> ( ternarioMat ) .)
    )               reduce using rule 212 (tCompare -> ( ternarioMat ) .)
    ;               reduce using rule 212 (tCompare -> ( ternarioMat ) .)
    ]               reduce using rule 212 (tCompare -> ( ternarioMat ) .)
    :               reduce using rule 212 (tCompare -> ( ternarioMat ) .)
    }               reduce using rule 212 (tCompare -> ( ternarioMat ) .)
    +               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    ^               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)


state 334

    (171) valoresBool -> ( ternarioBool ) .
    (211) tCompare -> ( ternarioBool ) .

    ?               reduce using rule 171 (valoresBool -> ( ternarioBool ) .)
    OR              reduce using rule 171 (valoresBool -> ( ternarioBool ) .)
    AND             reduce using rule 171 (valoresBool -> ( ternarioBool ) .)
    )               reduce using rule 171 (valoresBool -> ( ternarioBool ) .)
    ,               reduce using rule 171 (valoresBool -> ( ternarioBool ) .)
    ;               reduce using rule 171 (valoresBool -> ( ternarioBool ) .)
    ]               reduce using rule 171 (valoresBool -> ( ternarioBool ) .)
    :               reduce using rule 171 (valoresBool -> ( ternarioBool ) .)
    }               reduce using rule 171 (valoresBool -> ( ternarioBool ) .)
    EQEQ            reduce using rule 211 (tCompare -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 211 (tCompare -> ( ternarioBool ) .)
    >               reduce using rule 211 (tCompare -> ( ternarioBool ) .)
    <               reduce using rule 211 (tCompare -> ( ternarioBool ) .)


state 335

    (174) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (125) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (175) valoresTernarioBool -> . BOOL
    (176) valoresTernarioBool -> . funcBool
    (177) valoresTernarioBool -> . ternarioBool
    (178) valoresTernarioBool -> . ( ternarioBool )
    (179) valoresTernarioBool -> . expBool
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (49) funcBool -> . COLINEALES ( valores , valores )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (96) vecVal -> . ID m
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    BOOL            shift and go to state 271
    (               shift and go to state 374
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    COLINEALES      shift and go to state 4
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 371
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 377
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 262
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    ternarioBool                   shift and go to state 267
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 370
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 373
    exp                            shift and go to state 106
    varYVals                       shift and go to state 375
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 376

state 336

    (6) lAbierta -> IF ( cosaBooleana ) linea .

    COMMENT         reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    IF              reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    DO              reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    WHILE           reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    FOR             reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    RETURN          reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    ;               reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    MENOSMENOS      reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    MASMAS          reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    ID              reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    PRINT           reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    MULTIESCALAR    reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    LENGTH          reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    CAPITALIZAR     reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    COLINEALES      reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    }               reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    $end            reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)


state 337

    (16) lCerrada -> IF ( cosaBooleana ) COMMENT . com lCerrada ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) COMMENT . com lCerrada ELSE lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT . com lCerrada ELSE COMMENT com lCerrada
    (12) com -> . COMMENT com
    (13) com -> . empty
    (53) empty -> .

    COMMENT         shift and go to state 378
    IF              reduce using rule 53 (empty -> .)
    DO              reduce using rule 53 (empty -> .)
    RETURN          reduce using rule 53 (empty -> .)
    ;               reduce using rule 53 (empty -> .)
    WHILE           reduce using rule 53 (empty -> .)
    FOR             reduce using rule 53 (empty -> .)
    MENOSMENOS      reduce using rule 53 (empty -> .)
    MASMAS          reduce using rule 53 (empty -> .)
    ID              reduce using rule 53 (empty -> .)
    PRINT           reduce using rule 53 (empty -> .)
    MULTIESCALAR    reduce using rule 53 (empty -> .)
    LENGTH          reduce using rule 53 (empty -> .)
    CAPITALIZAR     reduce using rule 53 (empty -> .)
    COLINEALES      reduce using rule 53 (empty -> .)

    com                            shift and go to state 379
    empty                          shift and go to state 380

state 338

    (14) lCerrada -> IF . ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF . ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (6) lAbierta -> IF . ( cosaBooleana ) linea
    (7) lAbierta -> IF . ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> IF . ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> IF . ( cosaBooleana ) { g }

    (               shift and go to state 381


state 339

    (8) lAbierta -> IF ( cosaBooleana ) lCerrada . ELSE lAbierta
    (15) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE { g }
    (18) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE COMMENT com lCerrada
    (5) linea -> lCerrada .

    ELSE            shift and go to state 382
    COMMENT         reduce using rule 5 (linea -> lCerrada .)
    IF              reduce using rule 5 (linea -> lCerrada .)
    DO              reduce using rule 5 (linea -> lCerrada .)
    WHILE           reduce using rule 5 (linea -> lCerrada .)
    FOR             reduce using rule 5 (linea -> lCerrada .)
    RETURN          reduce using rule 5 (linea -> lCerrada .)
    ;               reduce using rule 5 (linea -> lCerrada .)
    MENOSMENOS      reduce using rule 5 (linea -> lCerrada .)
    MASMAS          reduce using rule 5 (linea -> lCerrada .)
    ID              reduce using rule 5 (linea -> lCerrada .)
    PRINT           reduce using rule 5 (linea -> lCerrada .)
    MULTIESCALAR    reduce using rule 5 (linea -> lCerrada .)
    LENGTH          reduce using rule 5 (linea -> lCerrada .)
    CAPITALIZAR     reduce using rule 5 (linea -> lCerrada .)
    COLINEALES      reduce using rule 5 (linea -> lCerrada .)
    $end            reduce using rule 5 (linea -> lCerrada .)
    }               reduce using rule 5 (linea -> lCerrada .)


state 340

    (7) lAbierta -> IF ( cosaBooleana ) { . g } ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) { . g }
    (14) lCerrada -> IF ( cosaBooleana ) { . g } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { . g } ELSE lCerrada
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (53) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . DO { g } WHILE ( valores ) ;
    (25) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (31) loop -> . WHILE ( valores )
    (32) loop -> . FOR ( primParam ; valores ; tercerParam )
    (26) sentencia -> . varsOps ;
    (27) sentencia -> . func ;
    (28) sentencia -> . varAsig ;
    (29) sentencia -> . RETURN ;
    (30) sentencia -> . ;
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (41) func -> . funcReturn
    (42) func -> . funcVoid
    (111) varAsig -> . varYVals MULEQ valoresAsig
    (112) varAsig -> . varYVals DIVEQ valoresAsig
    (113) varAsig -> . varYVals MASEQ valoresAsig
    (114) varAsig -> . varYVals MENOSEQ valoresAsig
    (115) varAsig -> . varYVals = valoresAsig
    (116) varAsig -> . ID . ID = valoresAsig
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (50) funcVoid -> . PRINT ( valores )
    (96) vecVal -> . ID m
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )

    COMMENT         shift and go to state 9
    }               reduce using rule 53 (empty -> .)
    IF              shift and go to state 21
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    linea                          shift and go to state 32
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    empty                          shift and go to state 13
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 22
    g                              shift and go to state 383
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 29
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 31

state 341

    (22) lCerrada -> loop . { g }
    (23) lCerrada -> loop . lCerrada
    (10) lAbierta -> loop . lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . DO { g } WHILE ( valores ) ;
    (25) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (26) sentencia -> . varsOps ;
    (27) sentencia -> . func ;
    (28) sentencia -> . varAsig ;
    (29) sentencia -> . RETURN ;
    (30) sentencia -> . ;
    (31) loop -> . WHILE ( valores )
    (32) loop -> . FOR ( primParam ; valores ; tercerParam )
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (41) func -> . funcReturn
    (42) func -> . funcVoid
    (111) varAsig -> . varYVals MULEQ valoresAsig
    (112) varAsig -> . varYVals DIVEQ valoresAsig
    (113) varAsig -> . varYVals MASEQ valoresAsig
    (114) varAsig -> . varYVals MENOSEQ valoresAsig
    (115) varAsig -> . varYVals = valoresAsig
    (116) varAsig -> . ID . ID = valoresAsig
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (50) funcVoid -> . PRINT ( valores )
    (96) vecVal -> . ID m
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )

    {               shift and go to state 66
    IF              shift and go to state 338
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 22
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 64
    lAbierta                       shift and go to state 65
    loop                           shift and go to state 341
    varYVals                       shift and go to state 11

state 342

    (46) funcInt -> MULTIESCALAR ( valores , valores . param )
    (51) param -> . , valores
    (52) param -> . empty
    (53) empty -> .

    ,               shift and go to state 385
    )               reduce using rule 53 (empty -> .)

    empty                          shift and go to state 386
    param                          shift and go to state 384

state 343

    (15) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE { g }
    (18) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE COMMENT com lCerrada

    ELSE            shift and go to state 387


state 344

    (14) lCerrada -> IF ( cosaBooleana ) { . g } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { . g } ELSE lCerrada
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (53) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . DO { g } WHILE ( valores ) ;
    (25) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (31) loop -> . WHILE ( valores )
    (32) loop -> . FOR ( primParam ; valores ; tercerParam )
    (26) sentencia -> . varsOps ;
    (27) sentencia -> . func ;
    (28) sentencia -> . varAsig ;
    (29) sentencia -> . RETURN ;
    (30) sentencia -> . ;
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (41) func -> . funcReturn
    (42) func -> . funcVoid
    (111) varAsig -> . varYVals MULEQ valoresAsig
    (112) varAsig -> . varYVals DIVEQ valoresAsig
    (113) varAsig -> . varYVals MASEQ valoresAsig
    (114) varAsig -> . varYVals MENOSEQ valoresAsig
    (115) varAsig -> . varYVals = valoresAsig
    (116) varAsig -> . ID . ID = valoresAsig
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (50) funcVoid -> . PRINT ( valores )
    (96) vecVal -> . ID m
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )

    COMMENT         shift and go to state 9
    }               reduce using rule 53 (empty -> .)
    IF              shift and go to state 21
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    empty                          shift and go to state 13
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 22
    g                              shift and go to state 388
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 29
    loop                           shift and go to state 31
    varYVals                       shift and go to state 11
    linea                          shift and go to state 32

state 345

    (25) lCerrada -> DO lCerrada WHILE ( valores ) . ;

    ;               shift and go to state 389


state 346

    (24) lCerrada -> DO { g } WHILE ( . valores ) ;
    (57) valores -> . eMat
    (58) valores -> . expBool
    (59) valores -> . funcReturn
    (60) valores -> . reg
    (61) valores -> . INT
    (62) valores -> . FLOAT
    (63) valores -> . STRING
    (64) valores -> . BOOL
    (65) valores -> . varYVals
    (66) valores -> . varsOps
    (67) valores -> . vec
    (68) valores -> . ternario
    (69) valores -> . atributos
    (70) valores -> . RES
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (103) reg -> . { campos }
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (54) vec -> . [ elem ]
    (180) ternario -> . ternarioMat
    (181) ternario -> . ternarioBool
    (182) ternario -> . ( ternarioMat )
    (183) ternario -> . ( ternarioBool )
    (184) ternario -> . ternarioVars
    (185) ternario -> . ( ternarioVars )
    (71) atributos -> . ID . valoresCampos
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )
    (96) vecVal -> . ID m
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    ?               reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 390
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 347

    (211) tCompare -> ( ternarioBool . )

    )               shift and go to state 391


state 348

    (173) ternarioBool -> valoresBool ? valoresTernarioBool : . valoresTernarioBool
    (79) ternarioVars -> valoresBool ? valoresTernarioBool : . valoresTernarioVars
    (175) valoresTernarioBool -> . BOOL
    (176) valoresTernarioBool -> . funcBool
    (177) valoresTernarioBool -> . ternarioBool
    (178) valoresTernarioBool -> . ( ternarioBool )
    (179) valoresTernarioBool -> . expBool
    (85) valoresTernarioVars -> . varsOps
    (86) valoresTernarioVars -> . varYVals
    (87) valoresTernarioVars -> . reg
    (88) valoresTernarioVars -> . vec
    (89) valoresTernarioVars -> . ternarioVars
    (90) valoresTernarioVars -> . ( ternarioVars )
    (91) valoresTernarioVars -> . atributos
    (92) valoresTernarioVars -> . RES
    (49) funcBool -> . COLINEALES ( valores , valores )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (103) reg -> . { campos }
    (54) vec -> . [ elem ]
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (71) atributos -> . ID . valoresCampos
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (96) vecVal -> . ID m
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (220) parenBool -> . ( expBool )
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )

    BOOL            shift and go to state 271
    (               shift and go to state 397
    RES             shift and go to state 257
    COLINEALES      shift and go to state 4
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    STRING          shift and go to state 129
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 135
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    mayor                          shift and go to state 108
    valoresBool                    shift and go to state 392
    eMat                           shift and go to state 137
    valoresTernarioBool            shift and go to state 393
    vecVal                         shift and go to state 8
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 394
    expBool                        shift and go to state 395
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 396
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 398
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 349

    (75) ternarioVars -> valoresBool ? valoresTernarioVars : . valoresTernarioVars
    (76) ternarioVars -> valoresBool ? valoresTernarioVars : . valoresTernarioMat
    (78) ternarioVars -> valoresBool ? valoresTernarioVars : . valoresTernarioBool
    (85) valoresTernarioVars -> . varsOps
    (86) valoresTernarioVars -> . varYVals
    (87) valoresTernarioVars -> . reg
    (88) valoresTernarioVars -> . vec
    (89) valoresTernarioVars -> . ternarioVars
    (90) valoresTernarioVars -> . ( ternarioVars )
    (91) valoresTernarioVars -> . atributos
    (92) valoresTernarioVars -> . RES
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (175) valoresTernarioBool -> . BOOL
    (176) valoresTernarioBool -> . funcBool
    (177) valoresTernarioBool -> . ternarioBool
    (178) valoresTernarioBool -> . ( ternarioBool )
    (179) valoresTernarioBool -> . expBool
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (103) reg -> . { campos }
    (54) vec -> . [ elem ]
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (71) atributos -> . ID . valoresCampos
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (49) funcBool -> . COLINEALES ( valores , valores )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (96) vecVal -> . ID m
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    (               shift and go to state 405
    RES             shift and go to state 257
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    BOOL            shift and go to state 271
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    atributos                      shift and go to state 255
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 400
    valoresBool                    shift and go to state 399
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 401
    exp                            shift and go to state 106
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 402
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 404
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 406
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 403

state 350

    (124) ternarioMat -> valoresBool ? valoresTernarioMat : . valoresTernarioMat
    (77) ternarioVars -> valoresBool ? valoresTernarioMat : . valoresTernarioVars
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (85) valoresTernarioVars -> . varsOps
    (86) valoresTernarioVars -> . varYVals
    (87) valoresTernarioVars -> . reg
    (88) valoresTernarioVars -> . vec
    (89) valoresTernarioVars -> . ternarioVars
    (90) valoresTernarioVars -> . ( ternarioVars )
    (91) valoresTernarioVars -> . atributos
    (92) valoresTernarioVars -> . RES
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (103) reg -> . { campos }
    (54) vec -> . [ elem ]
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (71) atributos -> . ID . valoresCampos
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (96) vecVal -> . ID m
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (49) funcBool -> . COLINEALES ( valores , valores )
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    (               shift and go to state 408
    RES             shift and go to state 257
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    BOOL            shift and go to state 142
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    atributos                      shift and go to state 255
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 260
    valoresBool                    shift and go to state 407
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 409
    exp                            shift and go to state 106
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 410
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 272
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 275
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 411

state 351

    (132) valoresTernarioMat -> ( ternarioMat . )
    (123) valoresMat -> ( ternarioMat . )
    (212) tCompare -> ( ternarioMat . )

    )               shift and go to state 412


state 352

    (178) valoresTernarioBool -> ( ternarioBool . )
    (171) valoresBool -> ( ternarioBool . )
    (211) tCompare -> ( ternarioBool . )

    )               shift and go to state 413


state 353

    (90) valoresTernarioVars -> ( ternarioVars . )

    )               shift and go to state 414


state 354

    (124) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (173) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (175) valoresTernarioBool -> . BOOL
    (176) valoresTernarioBool -> . funcBool
    (177) valoresTernarioBool -> . ternarioBool
    (178) valoresTernarioBool -> . ( ternarioBool )
    (179) valoresTernarioBool -> . expBool
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (49) funcBool -> . COLINEALES ( valores , valores )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (96) vecVal -> . ID m
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    (               shift and go to state 415
    BOOL            shift and go to state 271
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 283
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 372
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 262
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    ternarioBool                   shift and go to state 267
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 369
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 416

state 355

    (123) valoresMat -> ( ternarioMat ) .
    (212) tCompare -> ( ternarioMat ) .

    )               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    +               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    ^               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    EQEQ            reduce using rule 212 (tCompare -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 212 (tCompare -> ( ternarioMat ) .)
    >               reduce using rule 212 (tCompare -> ( ternarioMat ) .)
    <               reduce using rule 212 (tCompare -> ( ternarioMat ) .)


state 356

    (125) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (174) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (175) valoresTernarioBool -> . BOOL
    (176) valoresTernarioBool -> . funcBool
    (177) valoresTernarioBool -> . ternarioBool
    (178) valoresTernarioBool -> . ( ternarioBool )
    (179) valoresTernarioBool -> . expBool
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (49) funcBool -> . COLINEALES ( valores , valores )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (96) vecVal -> . ID m
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    (               shift and go to state 415
    BOOL            shift and go to state 271
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 283
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 377
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 262
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    ternarioBool                   shift and go to state 267
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 370
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 416

state 357

    (174) ternarioBool -> expBool ? valoresTernarioBool : . valoresTernarioBool
    (84) ternarioVars -> expBool ? valoresTernarioBool : . valoresTernarioVars
    (175) valoresTernarioBool -> . BOOL
    (176) valoresTernarioBool -> . funcBool
    (177) valoresTernarioBool -> . ternarioBool
    (178) valoresTernarioBool -> . ( ternarioBool )
    (179) valoresTernarioBool -> . expBool
    (85) valoresTernarioVars -> . varsOps
    (86) valoresTernarioVars -> . varYVals
    (87) valoresTernarioVars -> . reg
    (88) valoresTernarioVars -> . vec
    (89) valoresTernarioVars -> . ternarioVars
    (90) valoresTernarioVars -> . ( ternarioVars )
    (91) valoresTernarioVars -> . atributos
    (92) valoresTernarioVars -> . RES
    (49) funcBool -> . COLINEALES ( valores , valores )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (103) reg -> . { campos }
    (54) vec -> . [ elem ]
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (71) atributos -> . ID . valoresCampos
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (96) vecVal -> . ID m
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (220) parenBool -> . ( expBool )
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )

    BOOL            shift and go to state 271
    (               shift and go to state 397
    RES             shift and go to state 257
    COLINEALES      shift and go to state 4
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    STRING          shift and go to state 129
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 135
    not                            shift and go to state 95
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    mayor                          shift and go to state 108
    eMat                           shift and go to state 137
    valoresTernarioBool            shift and go to state 417
    valoresBool                    shift and go to state 392
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 418
    expBool                        shift and go to state 395
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    vecVal                         shift and go to state 8
    p                              shift and go to state 102
    varsOps                        shift and go to state 396
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 398
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 358

    (80) ternarioVars -> expBool ? valoresTernarioVars : . valoresTernarioVars
    (81) ternarioVars -> expBool ? valoresTernarioVars : . valoresTernarioMat
    (83) ternarioVars -> expBool ? valoresTernarioVars : . valoresTernarioBool
    (85) valoresTernarioVars -> . varsOps
    (86) valoresTernarioVars -> . varYVals
    (87) valoresTernarioVars -> . reg
    (88) valoresTernarioVars -> . vec
    (89) valoresTernarioVars -> . ternarioVars
    (90) valoresTernarioVars -> . ( ternarioVars )
    (91) valoresTernarioVars -> . atributos
    (92) valoresTernarioVars -> . RES
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (175) valoresTernarioBool -> . BOOL
    (176) valoresTernarioBool -> . funcBool
    (177) valoresTernarioBool -> . ternarioBool
    (178) valoresTernarioBool -> . ( ternarioBool )
    (179) valoresTernarioBool -> . expBool
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (103) reg -> . { campos }
    (54) vec -> . [ elem ]
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (71) atributos -> . ID . valoresCampos
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (49) funcBool -> . COLINEALES ( valores , valores )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (96) vecVal -> . ID m
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    (               shift and go to state 405
    RES             shift and go to state 257
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    BOOL            shift and go to state 271
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 399
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 419
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 421
    expBool                        shift and go to state 403
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 420
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 404
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 406
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 359

    (125) ternarioMat -> expBool ? valoresTernarioMat : . valoresTernarioMat
    (82) ternarioVars -> expBool ? valoresTernarioMat : . valoresTernarioVars
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (85) valoresTernarioVars -> . varsOps
    (86) valoresTernarioVars -> . varYVals
    (87) valoresTernarioVars -> . reg
    (88) valoresTernarioVars -> . vec
    (89) valoresTernarioVars -> . ternarioVars
    (90) valoresTernarioVars -> . ( ternarioVars )
    (91) valoresTernarioVars -> . atributos
    (92) valoresTernarioVars -> . RES
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (103) reg -> . { campos }
    (54) vec -> . [ elem ]
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (71) atributos -> . ID . valoresCampos
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (96) vecVal -> . ID m
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (49) funcBool -> . COLINEALES ( valores , valores )
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    (               shift and go to state 408
    RES             shift and go to state 257
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    BOOL            shift and go to state 142
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 407
    eMat                           shift and go to state 260
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 423
    expBool                        shift and go to state 411
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 422
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 272
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 275
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 360

    (174) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (125) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (186) expBool -> expBool . OR and
    (188) expBool -> expBool . OR valoresBool

    ?               shift and go to state 335
    OR              shift and go to state 186


state 361

    (55) elem -> valores , elem .

    ]               reduce using rule 55 (elem -> valores , elem .)


state 362

    (49) funcBool -> COLINEALES ( valores , valores ) .

    ;               reduce using rule 49 (funcBool -> COLINEALES ( valores , valores ) .)
    ?               reduce using rule 49 (funcBool -> COLINEALES ( valores , valores ) .)
    OR              reduce using rule 49 (funcBool -> COLINEALES ( valores , valores ) .)
    AND             reduce using rule 49 (funcBool -> COLINEALES ( valores , valores ) .)
    )               reduce using rule 49 (funcBool -> COLINEALES ( valores , valores ) .)
    ,               reduce using rule 49 (funcBool -> COLINEALES ( valores , valores ) .)
    ]               reduce using rule 49 (funcBool -> COLINEALES ( valores , valores ) .)
    :               reduce using rule 49 (funcBool -> COLINEALES ( valores , valores ) .)
    }               reduce using rule 49 (funcBool -> COLINEALES ( valores , valores ) .)
    EQEQ            reduce using rule 49 (funcBool -> COLINEALES ( valores , valores ) .)
    DISTINTO        reduce using rule 49 (funcBool -> COLINEALES ( valores , valores ) .)


state 363

    (173) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (175) valoresTernarioBool -> . BOOL
    (176) valoresTernarioBool -> . funcBool
    (177) valoresTernarioBool -> . ternarioBool
    (178) valoresTernarioBool -> . ( ternarioBool )
    (179) valoresTernarioBool -> . expBool
    (49) funcBool -> . COLINEALES ( valores , valores )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (96) vecVal -> . ID m
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (220) parenBool -> . ( expBool )
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )

    BOOL            shift and go to state 271
    (               shift and go to state 424
    COLINEALES      shift and go to state 4
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    STRING          shift and go to state 129
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 135
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 317
    eMat                           shift and go to state 137
    valoresTernarioBool            shift and go to state 372
    mayor                          shift and go to state 108
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    ternarioBool                   shift and go to state 267
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 143
    exp                            shift and go to state 106
    varYVals                       shift and go to state 144
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 425

state 364

    (171) valoresBool -> ( ternarioBool ) .

    EQEQ            reduce using rule 171 (valoresBool -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 171 (valoresBool -> ( ternarioBool ) .)
    AND             reduce using rule 171 (valoresBool -> ( ternarioBool ) .)
    OR              reduce using rule 171 (valoresBool -> ( ternarioBool ) .)
    ?               reduce using rule 171 (valoresBool -> ( ternarioBool ) .)
    ,               reduce using rule 171 (valoresBool -> ( ternarioBool ) .)
    )               reduce using rule 171 (valoresBool -> ( ternarioBool ) .)
    ;               reduce using rule 171 (valoresBool -> ( ternarioBool ) .)
    ]               reduce using rule 171 (valoresBool -> ( ternarioBool ) .)
    :               reduce using rule 171 (valoresBool -> ( ternarioBool ) .)
    }               reduce using rule 171 (valoresBool -> ( ternarioBool ) .)


state 365

    (174) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (175) valoresTernarioBool -> . BOOL
    (176) valoresTernarioBool -> . funcBool
    (177) valoresTernarioBool -> . ternarioBool
    (178) valoresTernarioBool -> . ( ternarioBool )
    (179) valoresTernarioBool -> . expBool
    (49) funcBool -> . COLINEALES ( valores , valores )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (96) vecVal -> . ID m
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (220) parenBool -> . ( expBool )
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )

    BOOL            shift and go to state 271
    (               shift and go to state 424
    COLINEALES      shift and go to state 4
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    STRING          shift and go to state 129
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 135
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 317
    eMat                           shift and go to state 137
    valoresTernarioBool            shift and go to state 377
    mayor                          shift and go to state 108
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    ternarioBool                   shift and go to state 267
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 143
    exp                            shift and go to state 106
    varYVals                       shift and go to state 144
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 425

state 366

    (104) campos -> ID : valores . , campos
    (105) campos -> ID : valores .

    ,               shift and go to state 426
    }               reduce using rule 105 (campos -> ID : valores .)


state 367

    (32) loop -> FOR ( primParam ; valores ; . tercerParam )
    (37) tercerParam -> . varsOps
    (38) tercerParam -> . varAsig
    (39) tercerParam -> . func
    (40) tercerParam -> . empty
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (111) varAsig -> . varYVals MULEQ valoresAsig
    (112) varAsig -> . varYVals DIVEQ valoresAsig
    (113) varAsig -> . varYVals MASEQ valoresAsig
    (114) varAsig -> . varYVals MENOSEQ valoresAsig
    (115) varAsig -> . varYVals = valoresAsig
    (116) varAsig -> . ID . ID = valoresAsig
    (41) func -> . funcReturn
    (42) func -> . funcVoid
    (53) empty -> .
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (50) funcVoid -> . PRINT ( valores )
    (96) vecVal -> . ID m
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )

    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    )               reduce using rule 53 (empty -> .)
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    varAsig                        shift and go to state 429
    funcVoid                       shift and go to state 15
    funcBool                       shift and go to state 3
    funcString                     shift and go to state 24
    funcInt                        shift and go to state 5
    funcReturn                     shift and go to state 26
    varsOps                        shift and go to state 431
    func                           shift and go to state 427
    varYVals                       shift and go to state 11
    vecVal                         shift and go to state 8
    empty                          shift and go to state 430
    tercerParam                    shift and go to state 428

state 368

    (132) valoresTernarioMat -> ( . ternarioMat )
    (123) valoresMat -> ( . ternarioMat )
    (171) valoresBool -> ( . ternarioBool )
    (165) paren -> ( . eMat )
    (166) paren -> ( . valoresMat )
    (211) tCompare -> ( . ternarioBool )
    (212) tCompare -> ( . ternarioMat )
    (220) parenBool -> ( . expBool )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (49) funcBool -> . COLINEALES ( valores , valores )
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (96) vecVal -> . ID m
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 129
    (               shift and go to state 170
    BOOL            shift and go to state 142
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 283
    eMat                           shift and go to state 169
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 351
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    ternarioBool                   shift and go to state 220
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 285

state 369

    (124) ternarioMat -> valoresBool ? valoresTernarioMat . : valoresTernarioMat

    :               shift and go to state 432


state 370

    (125) ternarioMat -> expBool ? valoresTernarioMat . : valoresTernarioMat

    :               shift and go to state 433


state 371

    (173) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> valoresBool . OR and
    (189) expBool -> valoresBool . OR valoresBool
    (124) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (192) and -> valoresBool . AND eq
    (194) and -> valoresBool . AND valoresBool

    ?               shift and go to state 332
    OR              shift and go to state 162
    AND             shift and go to state 161


state 372

    (173) ternarioBool -> valoresBool ? valoresTernarioBool . : valoresTernarioBool

    :               shift and go to state 434


state 373

    (170) valoresBool -> varsOps .
    (121) valoresMat -> varsOps .
    (206) tCompare -> varsOps .

    ?               reduce using rule 170 (valoresBool -> varsOps .)
    OR              reduce using rule 170 (valoresBool -> varsOps .)
    AND             reduce using rule 170 (valoresBool -> varsOps .)
    +               reduce using rule 121 (valoresMat -> varsOps .)
    -               reduce using rule 121 (valoresMat -> varsOps .)
    *               reduce using rule 121 (valoresMat -> varsOps .)
    /               reduce using rule 121 (valoresMat -> varsOps .)
    %               reduce using rule 121 (valoresMat -> varsOps .)
    ^               reduce using rule 121 (valoresMat -> varsOps .)
    EQEQ            reduce using rule 206 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 206 (tCompare -> varsOps .)
    >               reduce using rule 206 (tCompare -> varsOps .)
    <               reduce using rule 206 (tCompare -> varsOps .)


state 374

    (178) valoresTernarioBool -> ( . ternarioBool )
    (132) valoresTernarioMat -> ( . ternarioMat )
    (171) valoresBool -> ( . ternarioBool )
    (123) valoresMat -> ( . ternarioMat )
    (211) tCompare -> ( . ternarioBool )
    (212) tCompare -> ( . ternarioMat )
    (165) paren -> ( . eMat )
    (166) paren -> ( . valoresMat )
    (220) parenBool -> ( . expBool )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (49) funcBool -> . COLINEALES ( valores , valores )
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (96) vecVal -> . ID m
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 129
    (               shift and go to state 170
    BOOL            shift and go to state 142
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 218
    eMat                           shift and go to state 169
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 351
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    ternarioBool                   shift and go to state 352
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 221

state 375

    (169) valoresBool -> varYVals .
    (120) valoresMat -> varYVals .
    (108) varsOps -> varYVals . MASMAS
    (109) varsOps -> varYVals . MENOSMENOS
    (207) tCompare -> varYVals .

    ?               reduce using rule 169 (valoresBool -> varYVals .)
    OR              reduce using rule 169 (valoresBool -> varYVals .)
    AND             reduce using rule 169 (valoresBool -> varYVals .)
    +               reduce using rule 120 (valoresMat -> varYVals .)
    -               reduce using rule 120 (valoresMat -> varYVals .)
    *               reduce using rule 120 (valoresMat -> varYVals .)
    /               reduce using rule 120 (valoresMat -> varYVals .)
    %               reduce using rule 120 (valoresMat -> varYVals .)
    ^               reduce using rule 120 (valoresMat -> varYVals .)
    MASMAS          shift and go to state 47
    MENOSMENOS      shift and go to state 44
    EQEQ            reduce using rule 207 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 207 (tCompare -> varYVals .)
    >               reduce using rule 207 (tCompare -> varYVals .)
    <               reduce using rule 207 (tCompare -> varYVals .)


state 376

    (179) valoresTernarioBool -> expBool .
    (174) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> expBool . OR and
    (188) expBool -> expBool . OR valoresBool
    (125) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat

    :               reduce using rule 179 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 335
    OR              shift and go to state 186


state 377

    (174) ternarioBool -> expBool ? valoresTernarioBool . : valoresTernarioBool

    :               shift and go to state 435


state 378

    (12) com -> COMMENT . com
    (12) com -> . COMMENT com
    (13) com -> . empty
    (53) empty -> .

    COMMENT         shift and go to state 378
    IF              reduce using rule 53 (empty -> .)
    DO              reduce using rule 53 (empty -> .)
    RETURN          reduce using rule 53 (empty -> .)
    ;               reduce using rule 53 (empty -> .)
    WHILE           reduce using rule 53 (empty -> .)
    FOR             reduce using rule 53 (empty -> .)
    MENOSMENOS      reduce using rule 53 (empty -> .)
    MASMAS          reduce using rule 53 (empty -> .)
    ID              reduce using rule 53 (empty -> .)
    PRINT           reduce using rule 53 (empty -> .)
    MULTIESCALAR    reduce using rule 53 (empty -> .)
    LENGTH          reduce using rule 53 (empty -> .)
    CAPITALIZAR     reduce using rule 53 (empty -> .)
    COLINEALES      reduce using rule 53 (empty -> .)

    com                            shift and go to state 436
    empty                          shift and go to state 380

state 379

    (16) lCerrada -> IF ( cosaBooleana ) COMMENT com . lCerrada ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) COMMENT com . lCerrada ELSE lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com . lCerrada ELSE COMMENT com lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . DO { g } WHILE ( valores ) ;
    (25) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (26) sentencia -> . varsOps ;
    (27) sentencia -> . func ;
    (28) sentencia -> . varAsig ;
    (29) sentencia -> . RETURN ;
    (30) sentencia -> . ;
    (31) loop -> . WHILE ( valores )
    (32) loop -> . FOR ( primParam ; valores ; tercerParam )
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (41) func -> . funcReturn
    (42) func -> . funcVoid
    (111) varAsig -> . varYVals MULEQ valoresAsig
    (112) varAsig -> . varYVals DIVEQ valoresAsig
    (113) varAsig -> . varYVals MASEQ valoresAsig
    (114) varAsig -> . varYVals MENOSEQ valoresAsig
    (115) varAsig -> . varYVals = valoresAsig
    (116) varAsig -> . ID . ID = valoresAsig
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (50) funcVoid -> . PRINT ( valores )
    (96) vecVal -> . ID m
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )

    IF              shift and go to state 33
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 22
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 437
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 36

state 380

    (13) com -> empty .

    IF              reduce using rule 13 (com -> empty .)
    DO              reduce using rule 13 (com -> empty .)
    RETURN          reduce using rule 13 (com -> empty .)
    ;               reduce using rule 13 (com -> empty .)
    WHILE           reduce using rule 13 (com -> empty .)
    FOR             reduce using rule 13 (com -> empty .)
    MENOSMENOS      reduce using rule 13 (com -> empty .)
    MASMAS          reduce using rule 13 (com -> empty .)
    ID              reduce using rule 13 (com -> empty .)
    PRINT           reduce using rule 13 (com -> empty .)
    MULTIESCALAR    reduce using rule 13 (com -> empty .)
    LENGTH          reduce using rule 13 (com -> empty .)
    CAPITALIZAR     reduce using rule 13 (com -> empty .)
    COLINEALES      reduce using rule 13 (com -> empty .)


state 381

    (14) lCerrada -> IF ( . cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( . cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (6) lAbierta -> IF ( . cosaBooleana ) linea
    (7) lAbierta -> IF ( . cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> IF ( . cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> IF ( . cosaBooleana ) { g }
    (33) cosaBooleana -> . expBool
    (34) cosaBooleana -> . valoresBool
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (49) funcBool -> . COLINEALES ( valores , valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (96) vecVal -> . ID m
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (220) parenBool -> . ( expBool )
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )

    BOOL            shift and go to state 142
    (               shift and go to state 138
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    )               reduce using rule 172 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    STRING          shift and go to state 129
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    and                            shift and go to state 71
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 135
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 136
    eMat                           shift and go to state 137
    mayor                          shift and go to state 108
    paren                          shift and go to state 94
    varsOps                        shift and go to state 143
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    cosaBooleana                   shift and go to state 438
    p                              shift and go to state 102
    exp                            shift and go to state 106
    varYVals                       shift and go to state 144
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 145

state 382

    (8) lAbierta -> IF ( cosaBooleana ) lCerrada ELSE . lAbierta
    (15) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . { g }
    (18) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . COMMENT com lCerrada
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . DO { g } WHILE ( valores ) ;
    (25) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (31) loop -> . WHILE ( valores )
    (32) loop -> . FOR ( primParam ; valores ; tercerParam )
    (26) sentencia -> . varsOps ;
    (27) sentencia -> . func ;
    (28) sentencia -> . varAsig ;
    (29) sentencia -> . RETURN ;
    (30) sentencia -> . ;
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (41) func -> . funcReturn
    (42) func -> . funcVoid
    (111) varAsig -> . varYVals MULEQ valoresAsig
    (112) varAsig -> . varYVals DIVEQ valoresAsig
    (113) varAsig -> . varYVals MASEQ valoresAsig
    (114) varAsig -> . varYVals MENOSEQ valoresAsig
    (115) varAsig -> . varYVals = valoresAsig
    (116) varAsig -> . ID . ID = valoresAsig
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (50) funcVoid -> . PRINT ( valores )
    (96) vecVal -> . ID m
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )

    {               shift and go to state 442
    COMMENT         shift and go to state 439
    IF              shift and go to state 21
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 22
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 440
    lAbierta                       shift and go to state 441
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 31

state 383

    (7) lAbierta -> IF ( cosaBooleana ) { g . } ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) { g . }
    (14) lCerrada -> IF ( cosaBooleana ) { g . } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g . } ELSE lCerrada

    }               shift and go to state 443


state 384

    (46) funcInt -> MULTIESCALAR ( valores , valores param . )

    )               shift and go to state 444


state 385

    (51) param -> , . valores
    (57) valores -> . eMat
    (58) valores -> . expBool
    (59) valores -> . funcReturn
    (60) valores -> . reg
    (61) valores -> . INT
    (62) valores -> . FLOAT
    (63) valores -> . STRING
    (64) valores -> . BOOL
    (65) valores -> . varYVals
    (66) valores -> . varsOps
    (67) valores -> . vec
    (68) valores -> . ternario
    (69) valores -> . atributos
    (70) valores -> . RES
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (103) reg -> . { campos }
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (54) vec -> . [ elem ]
    (180) ternario -> . ternarioMat
    (181) ternario -> . ternarioBool
    (182) ternario -> . ( ternarioMat )
    (183) ternario -> . ( ternarioBool )
    (184) ternario -> . ternarioVars
    (185) ternario -> . ( ternarioVars )
    (71) atributos -> . ID . valoresCampos
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )
    (96) vecVal -> . ID m
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    ?               reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 445
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 386

    (52) param -> empty .

    )               reduce using rule 52 (param -> empty .)


state 387

    (15) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . { g }
    (18) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . COMMENT com lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . DO { g } WHILE ( valores ) ;
    (25) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (26) sentencia -> . varsOps ;
    (27) sentencia -> . func ;
    (28) sentencia -> . varAsig ;
    (29) sentencia -> . RETURN ;
    (30) sentencia -> . ;
    (31) loop -> . WHILE ( valores )
    (32) loop -> . FOR ( primParam ; valores ; tercerParam )
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (41) func -> . funcReturn
    (42) func -> . funcVoid
    (111) varAsig -> . varYVals MULEQ valoresAsig
    (112) varAsig -> . varYVals DIVEQ valoresAsig
    (113) varAsig -> . varYVals MASEQ valoresAsig
    (114) varAsig -> . varYVals MENOSEQ valoresAsig
    (115) varAsig -> . varYVals = valoresAsig
    (116) varAsig -> . ID . ID = valoresAsig
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (50) funcVoid -> . PRINT ( valores )
    (96) vecVal -> . ID m
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )

    {               shift and go to state 442
    COMMENT         shift and go to state 439
    IF              shift and go to state 33
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 22
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 440
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 36

state 388

    (14) lCerrada -> IF ( cosaBooleana ) { g . } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g . } ELSE lCerrada

    }               shift and go to state 446


state 389

    (25) lCerrada -> DO lCerrada WHILE ( valores ) ; .

    ELSE            reduce using rule 25 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    COMMENT         reduce using rule 25 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    IF              reduce using rule 25 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    DO              reduce using rule 25 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    WHILE           reduce using rule 25 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    FOR             reduce using rule 25 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    RETURN          reduce using rule 25 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    ;               reduce using rule 25 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    MENOSMENOS      reduce using rule 25 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    MASMAS          reduce using rule 25 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    ID              reduce using rule 25 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    PRINT           reduce using rule 25 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    MULTIESCALAR    reduce using rule 25 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    LENGTH          reduce using rule 25 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    CAPITALIZAR     reduce using rule 25 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    COLINEALES      reduce using rule 25 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    $end            reduce using rule 25 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    }               reduce using rule 25 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)


state 390

    (24) lCerrada -> DO { g } WHILE ( valores . ) ;

    )               shift and go to state 447


state 391

    (211) tCompare -> ( ternarioBool ) .

    >               reduce using rule 211 (tCompare -> ( ternarioBool ) .)
    <               reduce using rule 211 (tCompare -> ( ternarioBool ) .)
    EQEQ            reduce using rule 211 (tCompare -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 211 (tCompare -> ( ternarioBool ) .)
    AND             reduce using rule 211 (tCompare -> ( ternarioBool ) .)
    OR              reduce using rule 211 (tCompare -> ( ternarioBool ) .)
    ?               reduce using rule 211 (tCompare -> ( ternarioBool ) .)
    ,               reduce using rule 211 (tCompare -> ( ternarioBool ) .)
    )               reduce using rule 211 (tCompare -> ( ternarioBool ) .)
    ;               reduce using rule 211 (tCompare -> ( ternarioBool ) .)
    ]               reduce using rule 211 (tCompare -> ( ternarioBool ) .)
    :               reduce using rule 211 (tCompare -> ( ternarioBool ) .)
    }               reduce using rule 211 (tCompare -> ( ternarioBool ) .)


state 392

    (173) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> valoresBool . OR and
    (189) expBool -> valoresBool . OR valoresBool
    (75) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (192) and -> valoresBool . AND eq
    (194) and -> valoresBool . AND valoresBool

    ?               shift and go to state 448
    OR              shift and go to state 162
    AND             shift and go to state 161


state 393

    (173) ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .

    )               reduce using rule 173 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    ,               reduce using rule 173 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    ]               reduce using rule 173 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    ;               reduce using rule 173 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    :               reduce using rule 173 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    }               reduce using rule 173 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)


state 394

    (79) ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .

    :               reduce using rule 79 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    )               reduce using rule 79 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    ;               reduce using rule 79 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    ,               reduce using rule 79 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    ]               reduce using rule 79 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    }               reduce using rule 79 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)


state 395

    (179) valoresTernarioBool -> expBool .
    (174) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> expBool . OR and
    (188) expBool -> expBool . OR valoresBool
    (80) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars

    ,               reduce using rule 179 (valoresTernarioBool -> expBool .)
    )               reduce using rule 179 (valoresTernarioBool -> expBool .)
    ;               reduce using rule 179 (valoresTernarioBool -> expBool .)
    ]               reduce using rule 179 (valoresTernarioBool -> expBool .)
    :               reduce using rule 179 (valoresTernarioBool -> expBool .)
    }               reduce using rule 179 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 449
    OR              shift and go to state 186


state 396

    (85) valoresTernarioVars -> varsOps .
    (170) valoresBool -> varsOps .
    (206) tCompare -> varsOps .
    (121) valoresMat -> varsOps .

    ,               reduce using rule 85 (valoresTernarioVars -> varsOps .)
    )               reduce using rule 85 (valoresTernarioVars -> varsOps .)
    ;               reduce using rule 85 (valoresTernarioVars -> varsOps .)
    ]               reduce using rule 85 (valoresTernarioVars -> varsOps .)
    :               reduce using rule 85 (valoresTernarioVars -> varsOps .)
    }               reduce using rule 85 (valoresTernarioVars -> varsOps .)
    ?               reduce using rule 170 (valoresBool -> varsOps .)
    OR              reduce using rule 170 (valoresBool -> varsOps .)
    AND             reduce using rule 170 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 206 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 206 (tCompare -> varsOps .)
    >               reduce using rule 206 (tCompare -> varsOps .)
    <               reduce using rule 206 (tCompare -> varsOps .)
    +               reduce using rule 121 (valoresMat -> varsOps .)
    -               reduce using rule 121 (valoresMat -> varsOps .)
    *               reduce using rule 121 (valoresMat -> varsOps .)
    /               reduce using rule 121 (valoresMat -> varsOps .)
    %               reduce using rule 121 (valoresMat -> varsOps .)
    ^               reduce using rule 121 (valoresMat -> varsOps .)


state 397

    (178) valoresTernarioBool -> ( . ternarioBool )
    (90) valoresTernarioVars -> ( . ternarioVars )
    (171) valoresBool -> ( . ternarioBool )
    (211) tCompare -> ( . ternarioBool )
    (212) tCompare -> ( . ternarioMat )
    (123) valoresMat -> ( . ternarioMat )
    (220) parenBool -> ( . expBool )
    (165) paren -> ( . eMat )
    (166) paren -> ( . valoresMat )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (49) funcBool -> . COLINEALES ( valores , valores )
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (96) vecVal -> . ID m
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 129
    (               shift and go to state 170
    BOOL            shift and go to state 142
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 450
    eMat                           shift and go to state 169
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 219
    paren                          shift and go to state 94
    ternarioBool                   shift and go to state 352
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 353
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 451

state 398

    (86) valoresTernarioVars -> varYVals .
    (108) varsOps -> varYVals . MASMAS
    (109) varsOps -> varYVals . MENOSMENOS
    (169) valoresBool -> varYVals .
    (207) tCompare -> varYVals .
    (120) valoresMat -> varYVals .

    ,               reduce using rule 86 (valoresTernarioVars -> varYVals .)
    )               reduce using rule 86 (valoresTernarioVars -> varYVals .)
    ;               reduce using rule 86 (valoresTernarioVars -> varYVals .)
    ]               reduce using rule 86 (valoresTernarioVars -> varYVals .)
    :               reduce using rule 86 (valoresTernarioVars -> varYVals .)
    }               reduce using rule 86 (valoresTernarioVars -> varYVals .)
    MASMAS          shift and go to state 47
    MENOSMENOS      shift and go to state 44
    ?               reduce using rule 169 (valoresBool -> varYVals .)
    OR              reduce using rule 169 (valoresBool -> varYVals .)
    AND             reduce using rule 169 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 207 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 207 (tCompare -> varYVals .)
    >               reduce using rule 207 (tCompare -> varYVals .)
    <               reduce using rule 207 (tCompare -> varYVals .)
    +               reduce using rule 120 (valoresMat -> varYVals .)
    -               reduce using rule 120 (valoresMat -> varYVals .)
    *               reduce using rule 120 (valoresMat -> varYVals .)
    /               reduce using rule 120 (valoresMat -> varYVals .)
    %               reduce using rule 120 (valoresMat -> varYVals .)
    ^               reduce using rule 120 (valoresMat -> varYVals .)


state 399

    (75) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (124) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (173) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> valoresBool . OR and
    (189) expBool -> valoresBool . OR valoresBool
    (192) and -> valoresBool . AND eq
    (194) and -> valoresBool . AND valoresBool

    ?               shift and go to state 452
    OR              shift and go to state 162
    AND             shift and go to state 161


state 400

    (78) ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .

    :               reduce using rule 78 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    )               reduce using rule 78 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    ;               reduce using rule 78 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    ,               reduce using rule 78 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    ]               reduce using rule 78 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    }               reduce using rule 78 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)


state 401

    (75) ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .

    :               reduce using rule 75 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    )               reduce using rule 75 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    ;               reduce using rule 75 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    ,               reduce using rule 75 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    ]               reduce using rule 75 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    }               reduce using rule 75 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)


state 402

    (76) ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .

    :               reduce using rule 76 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    )               reduce using rule 76 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    ;               reduce using rule 76 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    ,               reduce using rule 76 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    ]               reduce using rule 76 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    }               reduce using rule 76 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)


state 403

    (179) valoresTernarioBool -> expBool .
    (80) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (125) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (174) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> expBool . OR and
    (188) expBool -> expBool . OR valoresBool

    :               reduce using rule 179 (valoresTernarioBool -> expBool .)
    ,               reduce using rule 179 (valoresTernarioBool -> expBool .)
    )               reduce using rule 179 (valoresTernarioBool -> expBool .)
    ;               reduce using rule 179 (valoresTernarioBool -> expBool .)
    ]               reduce using rule 179 (valoresTernarioBool -> expBool .)
    }               reduce using rule 179 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 453
    OR              shift and go to state 186


state 404

    (85) valoresTernarioVars -> varsOps .
    (170) valoresBool -> varsOps .
    (121) valoresMat -> varsOps .
    (206) tCompare -> varsOps .

    :               reduce using rule 85 (valoresTernarioVars -> varsOps .)
    ,               reduce using rule 85 (valoresTernarioVars -> varsOps .)
    )               reduce using rule 85 (valoresTernarioVars -> varsOps .)
    ;               reduce using rule 85 (valoresTernarioVars -> varsOps .)
    ]               reduce using rule 85 (valoresTernarioVars -> varsOps .)
    }               reduce using rule 85 (valoresTernarioVars -> varsOps .)
    ?               reduce using rule 170 (valoresBool -> varsOps .)
    OR              reduce using rule 170 (valoresBool -> varsOps .)
    AND             reduce using rule 170 (valoresBool -> varsOps .)
    +               reduce using rule 121 (valoresMat -> varsOps .)
    -               reduce using rule 121 (valoresMat -> varsOps .)
    *               reduce using rule 121 (valoresMat -> varsOps .)
    /               reduce using rule 121 (valoresMat -> varsOps .)
    %               reduce using rule 121 (valoresMat -> varsOps .)
    ^               reduce using rule 121 (valoresMat -> varsOps .)
    EQEQ            reduce using rule 206 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 206 (tCompare -> varsOps .)
    >               reduce using rule 206 (tCompare -> varsOps .)
    <               reduce using rule 206 (tCompare -> varsOps .)


state 405

    (90) valoresTernarioVars -> ( . ternarioVars )
    (132) valoresTernarioMat -> ( . ternarioMat )
    (178) valoresTernarioBool -> ( . ternarioBool )
    (171) valoresBool -> ( . ternarioBool )
    (123) valoresMat -> ( . ternarioMat )
    (211) tCompare -> ( . ternarioBool )
    (212) tCompare -> ( . ternarioMat )
    (165) paren -> ( . eMat )
    (166) paren -> ( . valoresMat )
    (220) parenBool -> ( . expBool )
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (49) funcBool -> . COLINEALES ( valores , valores )
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (96) vecVal -> . ID m
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 129
    (               shift and go to state 170
    BOOL            shift and go to state 142
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 169
    valoresBool                    shift and go to state 399
    ternarioMat                    shift and go to state 351
    paren                          shift and go to state 94
    varsOps                        shift and go to state 175
    ternarioBool                   shift and go to state 352
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    iSing                          shift and go to state 91
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 353
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 454

state 406

    (86) valoresTernarioVars -> varYVals .
    (108) varsOps -> varYVals . MASMAS
    (109) varsOps -> varYVals . MENOSMENOS
    (169) valoresBool -> varYVals .
    (120) valoresMat -> varYVals .
    (207) tCompare -> varYVals .

    :               reduce using rule 86 (valoresTernarioVars -> varYVals .)
    ,               reduce using rule 86 (valoresTernarioVars -> varYVals .)
    )               reduce using rule 86 (valoresTernarioVars -> varYVals .)
    ;               reduce using rule 86 (valoresTernarioVars -> varYVals .)
    ]               reduce using rule 86 (valoresTernarioVars -> varYVals .)
    }               reduce using rule 86 (valoresTernarioVars -> varYVals .)
    MASMAS          shift and go to state 47
    MENOSMENOS      shift and go to state 44
    ?               reduce using rule 169 (valoresBool -> varYVals .)
    OR              reduce using rule 169 (valoresBool -> varYVals .)
    AND             reduce using rule 169 (valoresBool -> varYVals .)
    +               reduce using rule 120 (valoresMat -> varYVals .)
    -               reduce using rule 120 (valoresMat -> varYVals .)
    *               reduce using rule 120 (valoresMat -> varYVals .)
    /               reduce using rule 120 (valoresMat -> varYVals .)
    %               reduce using rule 120 (valoresMat -> varYVals .)
    ^               reduce using rule 120 (valoresMat -> varYVals .)
    EQEQ            reduce using rule 207 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 207 (tCompare -> varYVals .)
    >               reduce using rule 207 (tCompare -> varYVals .)
    <               reduce using rule 207 (tCompare -> varYVals .)


state 407

    (124) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (75) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (187) expBool -> valoresBool . OR and
    (189) expBool -> valoresBool . OR valoresBool
    (192) and -> valoresBool . AND eq
    (194) and -> valoresBool . AND valoresBool

    ?               shift and go to state 455
    OR              shift and go to state 162
    AND             shift and go to state 161


state 408

    (132) valoresTernarioMat -> ( . ternarioMat )
    (90) valoresTernarioVars -> ( . ternarioVars )
    (123) valoresMat -> ( . ternarioMat )
    (171) valoresBool -> ( . ternarioBool )
    (165) paren -> ( . eMat )
    (166) paren -> ( . valoresMat )
    (211) tCompare -> ( . ternarioBool )
    (212) tCompare -> ( . ternarioMat )
    (220) parenBool -> ( . expBool )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (49) funcBool -> . COLINEALES ( valores , valores )
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (96) vecVal -> . ID m
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 129
    (               shift and go to state 170
    BOOL            shift and go to state 142
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 169
    valoresBool                    shift and go to state 456
    ternarioMat                    shift and go to state 351
    paren                          shift and go to state 94
    varsOps                        shift and go to state 175
    ternarioBool                   shift and go to state 220
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    iSing                          shift and go to state 91
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 353
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 457

state 409

    (77) ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .

    :               reduce using rule 77 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    )               reduce using rule 77 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    ;               reduce using rule 77 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    ,               reduce using rule 77 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    ]               reduce using rule 77 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    }               reduce using rule 77 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)


state 410

    (124) ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .

    )               reduce using rule 124 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    ;               reduce using rule 124 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    :               reduce using rule 124 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    ,               reduce using rule 124 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    ]               reduce using rule 124 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    }               reduce using rule 124 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)


state 411

    (125) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (80) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (186) expBool -> expBool . OR and
    (188) expBool -> expBool . OR valoresBool

    ?               shift and go to state 458
    OR              shift and go to state 186


state 412

    (132) valoresTernarioMat -> ( ternarioMat ) .
    (123) valoresMat -> ( ternarioMat ) .
    (212) tCompare -> ( ternarioMat ) .

    ,               reduce using rule 132 (valoresTernarioMat -> ( ternarioMat ) .)
    )               reduce using rule 132 (valoresTernarioMat -> ( ternarioMat ) .)
    ;               reduce using rule 132 (valoresTernarioMat -> ( ternarioMat ) .)
    ]               reduce using rule 132 (valoresTernarioMat -> ( ternarioMat ) .)
    :               reduce using rule 132 (valoresTernarioMat -> ( ternarioMat ) .)
    }               reduce using rule 132 (valoresTernarioMat -> ( ternarioMat ) .)
    +               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    ^               reduce using rule 123 (valoresMat -> ( ternarioMat ) .)
    EQEQ            reduce using rule 212 (tCompare -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 212 (tCompare -> ( ternarioMat ) .)
    >               reduce using rule 212 (tCompare -> ( ternarioMat ) .)
    <               reduce using rule 212 (tCompare -> ( ternarioMat ) .)


state 413

    (178) valoresTernarioBool -> ( ternarioBool ) .
    (171) valoresBool -> ( ternarioBool ) .
    (211) tCompare -> ( ternarioBool ) .

    )               reduce using rule 178 (valoresTernarioBool -> ( ternarioBool ) .)
    :               reduce using rule 178 (valoresTernarioBool -> ( ternarioBool ) .)
    ,               reduce using rule 178 (valoresTernarioBool -> ( ternarioBool ) .)
    ;               reduce using rule 178 (valoresTernarioBool -> ( ternarioBool ) .)
    ]               reduce using rule 178 (valoresTernarioBool -> ( ternarioBool ) .)
    }               reduce using rule 178 (valoresTernarioBool -> ( ternarioBool ) .)
    ?               reduce using rule 171 (valoresBool -> ( ternarioBool ) .)
    OR              reduce using rule 171 (valoresBool -> ( ternarioBool ) .)
    AND             reduce using rule 171 (valoresBool -> ( ternarioBool ) .)
    EQEQ            reduce using rule 211 (tCompare -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 211 (tCompare -> ( ternarioBool ) .)
    >               reduce using rule 211 (tCompare -> ( ternarioBool ) .)
    <               reduce using rule 211 (tCompare -> ( ternarioBool ) .)


state 414

    (90) valoresTernarioVars -> ( ternarioVars ) .

    :               reduce using rule 90 (valoresTernarioVars -> ( ternarioVars ) .)
    ,               reduce using rule 90 (valoresTernarioVars -> ( ternarioVars ) .)
    )               reduce using rule 90 (valoresTernarioVars -> ( ternarioVars ) .)
    ;               reduce using rule 90 (valoresTernarioVars -> ( ternarioVars ) .)
    ]               reduce using rule 90 (valoresTernarioVars -> ( ternarioVars ) .)
    }               reduce using rule 90 (valoresTernarioVars -> ( ternarioVars ) .)


state 415

    (132) valoresTernarioMat -> ( . ternarioMat )
    (178) valoresTernarioBool -> ( . ternarioBool )
    (123) valoresMat -> ( . ternarioMat )
    (171) valoresBool -> ( . ternarioBool )
    (211) tCompare -> ( . ternarioBool )
    (212) tCompare -> ( . ternarioMat )
    (165) paren -> ( . eMat )
    (166) paren -> ( . valoresMat )
    (220) parenBool -> ( . expBool )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (49) funcBool -> . COLINEALES ( valores , valores )
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (96) vecVal -> . ID m
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 129
    (               shift and go to state 170
    BOOL            shift and go to state 142
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 283
    eMat                           shift and go to state 169
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 351
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    ternarioBool                   shift and go to state 352
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 285

state 416

    (179) valoresTernarioBool -> expBool .
    (125) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (174) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> expBool . OR and
    (188) expBool -> expBool . OR valoresBool

    :               reduce using rule 179 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 356
    OR              shift and go to state 186


state 417

    (174) ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .

    )               reduce using rule 174 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    ,               reduce using rule 174 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    ]               reduce using rule 174 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    ;               reduce using rule 174 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    :               reduce using rule 174 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    }               reduce using rule 174 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)


state 418

    (84) ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .

    :               reduce using rule 84 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    )               reduce using rule 84 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    ;               reduce using rule 84 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    ,               reduce using rule 84 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    ]               reduce using rule 84 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    }               reduce using rule 84 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)


state 419

    (83) ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .

    :               reduce using rule 83 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    )               reduce using rule 83 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    ;               reduce using rule 83 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    ,               reduce using rule 83 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    ]               reduce using rule 83 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    }               reduce using rule 83 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)


state 420

    (81) ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .

    :               reduce using rule 81 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    )               reduce using rule 81 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    ;               reduce using rule 81 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    ,               reduce using rule 81 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    ]               reduce using rule 81 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    }               reduce using rule 81 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)


state 421

    (80) ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .

    :               reduce using rule 80 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    )               reduce using rule 80 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    ;               reduce using rule 80 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    ,               reduce using rule 80 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    ]               reduce using rule 80 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    }               reduce using rule 80 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)


state 422

    (125) ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .

    )               reduce using rule 125 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    ;               reduce using rule 125 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    :               reduce using rule 125 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    ,               reduce using rule 125 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    ]               reduce using rule 125 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    }               reduce using rule 125 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)


state 423

    (82) ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .

    :               reduce using rule 82 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    )               reduce using rule 82 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    ;               reduce using rule 82 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    ,               reduce using rule 82 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    ]               reduce using rule 82 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    }               reduce using rule 82 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)


state 424

    (178) valoresTernarioBool -> ( . ternarioBool )
    (171) valoresBool -> ( . ternarioBool )
    (211) tCompare -> ( . ternarioBool )
    (212) tCompare -> ( . ternarioMat )
    (123) valoresMat -> ( . ternarioMat )
    (220) parenBool -> ( . expBool )
    (165) paren -> ( . eMat )
    (166) paren -> ( . valoresMat )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (49) funcBool -> . COLINEALES ( valores , valores )
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (96) vecVal -> . ID m
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 129
    (               shift and go to state 170
    BOOL            shift and go to state 142
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 218
    eMat                           shift and go to state 169
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 219
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    ternarioBool                   shift and go to state 352
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 221

state 425

    (179) valoresTernarioBool -> expBool .
    (174) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> expBool . OR and
    (188) expBool -> expBool . OR valoresBool

    )               reduce using rule 179 (valoresTernarioBool -> expBool .)
    :               reduce using rule 179 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 365
    OR              shift and go to state 186


state 426

    (104) campos -> ID : valores , . campos
    (104) campos -> . ID : valores , campos
    (105) campos -> . ID : valores

    ID              shift and go to state 206

    campos                         shift and go to state 459

state 427

    (39) tercerParam -> func .

    )               reduce using rule 39 (tercerParam -> func .)


state 428

    (32) loop -> FOR ( primParam ; valores ; tercerParam . )

    )               shift and go to state 460


state 429

    (38) tercerParam -> varAsig .

    )               reduce using rule 38 (tercerParam -> varAsig .)


state 430

    (40) tercerParam -> empty .

    )               reduce using rule 40 (tercerParam -> empty .)


state 431

    (37) tercerParam -> varsOps .

    )               reduce using rule 37 (tercerParam -> varsOps .)


state 432

    (124) ternarioMat -> valoresBool ? valoresTernarioMat : . valoresTernarioMat
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (49) funcBool -> . COLINEALES ( valores , valores )
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (96) vecVal -> . ID m
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    (               shift and go to state 368
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    BOOL            shift and go to state 142
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 213
    eMat                           shift and go to state 260
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 262
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 410
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 215

state 433

    (125) ternarioMat -> expBool ? valoresTernarioMat : . valoresTernarioMat
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (49) funcBool -> . COLINEALES ( valores , valores )
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (96) vecVal -> . ID m
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    (               shift and go to state 368
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    BOOL            shift and go to state 142
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 213
    eMat                           shift and go to state 260
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 262
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 422
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 215

state 434

    (173) ternarioBool -> valoresBool ? valoresTernarioBool : . valoresTernarioBool
    (175) valoresTernarioBool -> . BOOL
    (176) valoresTernarioBool -> . funcBool
    (177) valoresTernarioBool -> . ternarioBool
    (178) valoresTernarioBool -> . ( ternarioBool )
    (179) valoresTernarioBool -> . expBool
    (49) funcBool -> . COLINEALES ( valores , valores )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (96) vecVal -> . ID m
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (220) parenBool -> . ( expBool )
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )

    BOOL            shift and go to state 271
    (               shift and go to state 424
    COLINEALES      shift and go to state 4
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    STRING          shift and go to state 129
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 135
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 317
    eMat                           shift and go to state 137
    valoresTernarioBool            shift and go to state 393
    mayor                          shift and go to state 108
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    ternarioBool                   shift and go to state 267
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 143
    exp                            shift and go to state 106
    varYVals                       shift and go to state 144
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 425

state 435

    (174) ternarioBool -> expBool ? valoresTernarioBool : . valoresTernarioBool
    (175) valoresTernarioBool -> . BOOL
    (176) valoresTernarioBool -> . funcBool
    (177) valoresTernarioBool -> . ternarioBool
    (178) valoresTernarioBool -> . ( ternarioBool )
    (179) valoresTernarioBool -> . expBool
    (49) funcBool -> . COLINEALES ( valores , valores )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (96) vecVal -> . ID m
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (220) parenBool -> . ( expBool )
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )

    BOOL            shift and go to state 271
    (               shift and go to state 424
    COLINEALES      shift and go to state 4
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    STRING          shift and go to state 129
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 135
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 317
    eMat                           shift and go to state 137
    valoresTernarioBool            shift and go to state 417
    mayor                          shift and go to state 108
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    ternarioBool                   shift and go to state 267
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 143
    exp                            shift and go to state 106
    varYVals                       shift and go to state 144
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 425

state 436

    (12) com -> COMMENT com .

    IF              reduce using rule 12 (com -> COMMENT com .)
    DO              reduce using rule 12 (com -> COMMENT com .)
    RETURN          reduce using rule 12 (com -> COMMENT com .)
    ;               reduce using rule 12 (com -> COMMENT com .)
    WHILE           reduce using rule 12 (com -> COMMENT com .)
    FOR             reduce using rule 12 (com -> COMMENT com .)
    MENOSMENOS      reduce using rule 12 (com -> COMMENT com .)
    MASMAS          reduce using rule 12 (com -> COMMENT com .)
    ID              reduce using rule 12 (com -> COMMENT com .)
    PRINT           reduce using rule 12 (com -> COMMENT com .)
    MULTIESCALAR    reduce using rule 12 (com -> COMMENT com .)
    LENGTH          reduce using rule 12 (com -> COMMENT com .)
    CAPITALIZAR     reduce using rule 12 (com -> COMMENT com .)
    COLINEALES      reduce using rule 12 (com -> COMMENT com .)


state 437

    (16) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada . ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada . ELSE lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada . ELSE COMMENT com lCerrada

    ELSE            shift and go to state 461


state 438

    (14) lCerrada -> IF ( cosaBooleana . ) { g } ELSE { g }
    (15) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE { g }
    (16) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana . ) { g } ELSE lCerrada
    (18) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (6) lAbierta -> IF ( cosaBooleana . ) linea
    (7) lAbierta -> IF ( cosaBooleana . ) { g } ELSE lAbierta
    (8) lAbierta -> IF ( cosaBooleana . ) lCerrada ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana . ) { g }

    )               shift and go to state 462


state 439

    (20) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT . com lCerrada
    (12) com -> . COMMENT com
    (13) com -> . empty
    (53) empty -> .

    COMMENT         shift and go to state 378
    IF              reduce using rule 53 (empty -> .)
    DO              reduce using rule 53 (empty -> .)
    RETURN          reduce using rule 53 (empty -> .)
    ;               reduce using rule 53 (empty -> .)
    WHILE           reduce using rule 53 (empty -> .)
    FOR             reduce using rule 53 (empty -> .)
    MENOSMENOS      reduce using rule 53 (empty -> .)
    MASMAS          reduce using rule 53 (empty -> .)
    ID              reduce using rule 53 (empty -> .)
    PRINT           reduce using rule 53 (empty -> .)
    MULTIESCALAR    reduce using rule 53 (empty -> .)
    LENGTH          reduce using rule 53 (empty -> .)
    CAPITALIZAR     reduce using rule 53 (empty -> .)
    COLINEALES      reduce using rule 53 (empty -> .)

    com                            shift and go to state 463
    empty                          shift and go to state 380

state 440

    (18) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .

    ELSE            reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    COMMENT         reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    IF              reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    DO              reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    WHILE           reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    FOR             reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    RETURN          reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    ;               reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    MENOSMENOS      reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    MASMAS          reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    ID              reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    PRINT           reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    MULTIESCALAR    reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    LENGTH          reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    CAPITALIZAR     reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    COLINEALES      reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    $end            reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    }               reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)


state 441

    (8) lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .

    COMMENT         reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    IF              reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    DO              reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    WHILE           reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    FOR             reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    RETURN          reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    ;               reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    MENOSMENOS      reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    MASMAS          reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    ID              reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    PRINT           reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    MULTIESCALAR    reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    LENGTH          reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    CAPITALIZAR     reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    COLINEALES      reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    }               reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    $end            reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)


state 442

    (15) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { . g }
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (53) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . DO { g } WHILE ( valores ) ;
    (25) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (31) loop -> . WHILE ( valores )
    (32) loop -> . FOR ( primParam ; valores ; tercerParam )
    (26) sentencia -> . varsOps ;
    (27) sentencia -> . func ;
    (28) sentencia -> . varAsig ;
    (29) sentencia -> . RETURN ;
    (30) sentencia -> . ;
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (41) func -> . funcReturn
    (42) func -> . funcVoid
    (111) varAsig -> . varYVals MULEQ valoresAsig
    (112) varAsig -> . varYVals DIVEQ valoresAsig
    (113) varAsig -> . varYVals MASEQ valoresAsig
    (114) varAsig -> . varYVals MENOSEQ valoresAsig
    (115) varAsig -> . varYVals = valoresAsig
    (116) varAsig -> . ID . ID = valoresAsig
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (50) funcVoid -> . PRINT ( valores )
    (96) vecVal -> . ID m
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )

    COMMENT         shift and go to state 9
    }               reduce using rule 53 (empty -> .)
    IF              shift and go to state 21
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    empty                          shift and go to state 13
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 22
    g                              shift and go to state 464
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 29
    loop                           shift and go to state 31
    varYVals                       shift and go to state 11
    linea                          shift and go to state 32

state 443

    (7) lAbierta -> IF ( cosaBooleana ) { g } . ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) { g } .
    (14) lCerrada -> IF ( cosaBooleana ) { g } . ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g } . ELSE lCerrada

    ELSE            shift and go to state 465
    COMMENT         reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    IF              reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    DO              reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    WHILE           reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    FOR             reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    RETURN          reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    ;               reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MENOSMENOS      reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MASMAS          reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    ID              reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    PRINT           reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MULTIESCALAR    reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    LENGTH          reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    CAPITALIZAR     reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    COLINEALES      reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    }               reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    $end            reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)


state 444

    (46) funcInt -> MULTIESCALAR ( valores , valores param ) .

    EQEQ            reduce using rule 46 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    DISTINTO        reduce using rule 46 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    >               reduce using rule 46 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    <               reduce using rule 46 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    +               reduce using rule 46 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    -               reduce using rule 46 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    *               reduce using rule 46 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    /               reduce using rule 46 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    %               reduce using rule 46 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ^               reduce using rule 46 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    :               reduce using rule 46 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ;               reduce using rule 46 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ,               reduce using rule 46 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    )               reduce using rule 46 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ]               reduce using rule 46 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    }               reduce using rule 46 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    AND             reduce using rule 46 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    OR              reduce using rule 46 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ?               reduce using rule 46 (funcInt -> MULTIESCALAR ( valores , valores param ) .)


state 445

    (51) param -> , valores .

    )               reduce using rule 51 (param -> , valores .)


state 446

    (14) lCerrada -> IF ( cosaBooleana ) { g } . ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g } . ELSE lCerrada

    ELSE            shift and go to state 466


state 447

    (24) lCerrada -> DO { g } WHILE ( valores ) . ;

    ;               shift and go to state 467


state 448

    (173) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (75) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (175) valoresTernarioBool -> . BOOL
    (176) valoresTernarioBool -> . funcBool
    (177) valoresTernarioBool -> . ternarioBool
    (178) valoresTernarioBool -> . ( ternarioBool )
    (179) valoresTernarioBool -> . expBool
    (85) valoresTernarioVars -> . varsOps
    (86) valoresTernarioVars -> . varYVals
    (87) valoresTernarioVars -> . reg
    (88) valoresTernarioVars -> . vec
    (89) valoresTernarioVars -> . ternarioVars
    (90) valoresTernarioVars -> . ( ternarioVars )
    (91) valoresTernarioVars -> . atributos
    (92) valoresTernarioVars -> . RES
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (49) funcBool -> . COLINEALES ( valores , valores )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (103) reg -> . { campos }
    (54) vec -> . [ elem ]
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (71) atributos -> . ID . valoresCampos
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (96) vecVal -> . ID m
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    BOOL            shift and go to state 271
    (               shift and go to state 471
    RES             shift and go to state 257
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    COLINEALES      shift and go to state 4
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 261
    valoresBool                    shift and go to state 468
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 265
    expBool                        shift and go to state 469
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 470
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 404
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 406
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 449

    (174) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (80) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (175) valoresTernarioBool -> . BOOL
    (176) valoresTernarioBool -> . funcBool
    (177) valoresTernarioBool -> . ternarioBool
    (178) valoresTernarioBool -> . ( ternarioBool )
    (179) valoresTernarioBool -> . expBool
    (85) valoresTernarioVars -> . varsOps
    (86) valoresTernarioVars -> . varYVals
    (87) valoresTernarioVars -> . reg
    (88) valoresTernarioVars -> . vec
    (89) valoresTernarioVars -> . ternarioVars
    (90) valoresTernarioVars -> . ( ternarioVars )
    (91) valoresTernarioVars -> . atributos
    (92) valoresTernarioVars -> . RES
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (49) funcBool -> . COLINEALES ( valores , valores )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (103) reg -> . { campos }
    (54) vec -> . [ elem ]
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (71) atributos -> . ID . valoresCampos
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (96) vecVal -> . ID m
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    BOOL            shift and go to state 271
    (               shift and go to state 471
    RES             shift and go to state 257
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    COLINEALES      shift and go to state 4
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 468
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 294
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 295
    expBool                        shift and go to state 469
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 472
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 404
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 406
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 450

    (173) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (75) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (124) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (187) expBool -> valoresBool . OR and
    (189) expBool -> valoresBool . OR valoresBool
    (192) and -> valoresBool . AND eq
    (194) and -> valoresBool . AND valoresBool

    ?               shift and go to state 473
    OR              shift and go to state 162
    AND             shift and go to state 161


state 451

    (220) parenBool -> ( expBool . )
    (174) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (80) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (125) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (186) expBool -> expBool . OR and
    (188) expBool -> expBool . OR valoresBool

    )               shift and go to state 289
    ?               shift and go to state 474
    OR              shift and go to state 186


state 452

    (75) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (124) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (173) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (85) valoresTernarioVars -> . varsOps
    (86) valoresTernarioVars -> . varYVals
    (87) valoresTernarioVars -> . reg
    (88) valoresTernarioVars -> . vec
    (89) valoresTernarioVars -> . ternarioVars
    (90) valoresTernarioVars -> . ( ternarioVars )
    (91) valoresTernarioVars -> . atributos
    (92) valoresTernarioVars -> . RES
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (175) valoresTernarioBool -> . BOOL
    (176) valoresTernarioBool -> . funcBool
    (177) valoresTernarioBool -> . ternarioBool
    (178) valoresTernarioBool -> . ( ternarioBool )
    (179) valoresTernarioBool -> . expBool
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (103) reg -> . { campos }
    (54) vec -> . [ elem ]
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (71) atributos -> . ID . valoresCampos
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (49) funcBool -> . COLINEALES ( valores , valores )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (96) vecVal -> . ID m
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    (               shift and go to state 405
    RES             shift and go to state 257
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    BOOL            shift and go to state 271
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    atributos                      shift and go to state 255
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 475
    valoresBool                    shift and go to state 399
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 265
    exp                            shift and go to state 106
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 476
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 404
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 406
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 403

state 453

    (80) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (125) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (174) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (85) valoresTernarioVars -> . varsOps
    (86) valoresTernarioVars -> . varYVals
    (87) valoresTernarioVars -> . reg
    (88) valoresTernarioVars -> . vec
    (89) valoresTernarioVars -> . ternarioVars
    (90) valoresTernarioVars -> . ( ternarioVars )
    (91) valoresTernarioVars -> . atributos
    (92) valoresTernarioVars -> . RES
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (175) valoresTernarioBool -> . BOOL
    (176) valoresTernarioBool -> . funcBool
    (177) valoresTernarioBool -> . ternarioBool
    (178) valoresTernarioBool -> . ( ternarioBool )
    (179) valoresTernarioBool -> . expBool
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (103) reg -> . { campos }
    (54) vec -> . [ elem ]
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (71) atributos -> . ID . valoresCampos
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (49) funcBool -> . COLINEALES ( valores , valores )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (96) vecVal -> . ID m
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    (               shift and go to state 405
    RES             shift and go to state 257
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    BOOL            shift and go to state 271
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 399
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 477
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 295
    expBool                        shift and go to state 403
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 478
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 404
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 406
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 454

    (220) parenBool -> ( expBool . )
    (80) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (125) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (174) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> expBool . OR and
    (188) expBool -> expBool . OR valoresBool

    )               shift and go to state 289
    ?               shift and go to state 453
    OR              shift and go to state 186


state 455

    (124) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (75) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (85) valoresTernarioVars -> . varsOps
    (86) valoresTernarioVars -> . varYVals
    (87) valoresTernarioVars -> . reg
    (88) valoresTernarioVars -> . vec
    (89) valoresTernarioVars -> . ternarioVars
    (90) valoresTernarioVars -> . ( ternarioVars )
    (91) valoresTernarioVars -> . atributos
    (92) valoresTernarioVars -> . RES
    (175) valoresTernarioBool -> . BOOL
    (176) valoresTernarioBool -> . funcBool
    (177) valoresTernarioBool -> . ternarioBool
    (178) valoresTernarioBool -> . ( ternarioBool )
    (179) valoresTernarioBool -> . expBool
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (103) reg -> . { campos }
    (54) vec -> . [ elem ]
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (71) atributos -> . ID . valoresCampos
    (49) funcBool -> . COLINEALES ( valores , valores )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (96) vecVal -> . ID m
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    (               shift and go to state 481
    RES             shift and go to state 257
    BOOL            shift and go to state 271
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    COLINEALES      shift and go to state 4
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    atributos                      shift and go to state 255
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 479
    valoresBool                    shift and go to state 456
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 265
    exp                            shift and go to state 106
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 268
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 272
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 275
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 480

state 456

    (124) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (75) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (173) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> valoresBool . OR and
    (189) expBool -> valoresBool . OR valoresBool
    (192) and -> valoresBool . AND eq
    (194) and -> valoresBool . AND valoresBool

    ?               shift and go to state 482
    OR              shift and go to state 162
    AND             shift and go to state 161


state 457

    (220) parenBool -> ( expBool . )
    (125) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (80) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (174) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> expBool . OR and
    (188) expBool -> expBool . OR valoresBool

    )               shift and go to state 289
    ?               shift and go to state 483
    OR              shift and go to state 186


state 458

    (125) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (80) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (85) valoresTernarioVars -> . varsOps
    (86) valoresTernarioVars -> . varYVals
    (87) valoresTernarioVars -> . reg
    (88) valoresTernarioVars -> . vec
    (89) valoresTernarioVars -> . ternarioVars
    (90) valoresTernarioVars -> . ( ternarioVars )
    (91) valoresTernarioVars -> . atributos
    (92) valoresTernarioVars -> . RES
    (175) valoresTernarioBool -> . BOOL
    (176) valoresTernarioBool -> . funcBool
    (177) valoresTernarioBool -> . ternarioBool
    (178) valoresTernarioBool -> . ( ternarioBool )
    (179) valoresTernarioBool -> . expBool
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (103) reg -> . { campos }
    (54) vec -> . [ elem ]
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (71) atributos -> . ID . valoresCampos
    (49) funcBool -> . COLINEALES ( valores , valores )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (96) vecVal -> . ID m
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    (               shift and go to state 481
    RES             shift and go to state 257
    BOOL            shift and go to state 271
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    COLINEALES      shift and go to state 4
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 456
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 484
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 295
    expBool                        shift and go to state 480
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 296
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 272
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 275
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 459

    (104) campos -> ID : valores , campos .

    }               reduce using rule 104 (campos -> ID : valores , campos .)


state 460

    (32) loop -> FOR ( primParam ; valores ; tercerParam ) .

    {               reduce using rule 32 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    IF              reduce using rule 32 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    DO              reduce using rule 32 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    RETURN          reduce using rule 32 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    ;               reduce using rule 32 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    WHILE           reduce using rule 32 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    FOR             reduce using rule 32 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    MENOSMENOS      reduce using rule 32 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    MASMAS          reduce using rule 32 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    ID              reduce using rule 32 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    PRINT           reduce using rule 32 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    MULTIESCALAR    reduce using rule 32 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    LENGTH          reduce using rule 32 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    CAPITALIZAR     reduce using rule 32 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    COLINEALES      reduce using rule 32 (loop -> FOR ( primParam ; valores ; tercerParam ) .)


state 461

    (16) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE . { g }
    (19) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE . lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE . COMMENT com lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . DO { g } WHILE ( valores ) ;
    (25) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (26) sentencia -> . varsOps ;
    (27) sentencia -> . func ;
    (28) sentencia -> . varAsig ;
    (29) sentencia -> . RETURN ;
    (30) sentencia -> . ;
    (31) loop -> . WHILE ( valores )
    (32) loop -> . FOR ( primParam ; valores ; tercerParam )
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (41) func -> . funcReturn
    (42) func -> . funcVoid
    (111) varAsig -> . varYVals MULEQ valoresAsig
    (112) varAsig -> . varYVals DIVEQ valoresAsig
    (113) varAsig -> . varYVals MASEQ valoresAsig
    (114) varAsig -> . varYVals MENOSEQ valoresAsig
    (115) varAsig -> . varYVals = valoresAsig
    (116) varAsig -> . ID . ID = valoresAsig
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (50) funcVoid -> . PRINT ( valores )
    (96) vecVal -> . ID m
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )

    {               shift and go to state 487
    COMMENT         shift and go to state 485
    IF              shift and go to state 33
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 22
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 486
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 36

state 462

    (14) lCerrada -> IF ( cosaBooleana ) . { g } ELSE { g }
    (15) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE { g }
    (16) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) . { g } ELSE lCerrada
    (18) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE COMMENT com lCerrada
    (6) lAbierta -> IF ( cosaBooleana ) . linea
    (7) lAbierta -> IF ( cosaBooleana ) . { g } ELSE lAbierta
    (8) lAbierta -> IF ( cosaBooleana ) . lCerrada ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) . { g }
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . DO { g } WHILE ( valores ) ;
    (25) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (26) sentencia -> . varsOps ;
    (27) sentencia -> . func ;
    (28) sentencia -> . varAsig ;
    (29) sentencia -> . RETURN ;
    (30) sentencia -> . ;
    (31) loop -> . WHILE ( valores )
    (32) loop -> . FOR ( primParam ; valores ; tercerParam )
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (41) func -> . funcReturn
    (42) func -> . funcVoid
    (111) varAsig -> . varYVals MULEQ valoresAsig
    (112) varAsig -> . varYVals DIVEQ valoresAsig
    (113) varAsig -> . varYVals MASEQ valoresAsig
    (114) varAsig -> . varYVals MENOSEQ valoresAsig
    (115) varAsig -> . varYVals = valoresAsig
    (116) varAsig -> . ID . ID = valoresAsig
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (50) funcVoid -> . PRINT ( valores )
    (96) vecVal -> . ID m
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )

    {               shift and go to state 489
    COMMENT         shift and go to state 337
    IF              shift and go to state 338
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 22
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 488
    lAbierta                       shift and go to state 29
    linea                          shift and go to state 336
    varYVals                       shift and go to state 11
    loop                           shift and go to state 341

state 463

    (20) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com . lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . DO { g } WHILE ( valores ) ;
    (25) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (26) sentencia -> . varsOps ;
    (27) sentencia -> . func ;
    (28) sentencia -> . varAsig ;
    (29) sentencia -> . RETURN ;
    (30) sentencia -> . ;
    (31) loop -> . WHILE ( valores )
    (32) loop -> . FOR ( primParam ; valores ; tercerParam )
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (41) func -> . funcReturn
    (42) func -> . funcVoid
    (111) varAsig -> . varYVals MULEQ valoresAsig
    (112) varAsig -> . varYVals DIVEQ valoresAsig
    (113) varAsig -> . varYVals MASEQ valoresAsig
    (114) varAsig -> . varYVals MENOSEQ valoresAsig
    (115) varAsig -> . varYVals = valoresAsig
    (116) varAsig -> . ID . ID = valoresAsig
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (50) funcVoid -> . PRINT ( valores )
    (96) vecVal -> . ID m
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )

    IF              shift and go to state 33
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 22
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 490
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 36

state 464

    (15) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g . }

    }               shift and go to state 491


state 465

    (7) lAbierta -> IF ( cosaBooleana ) { g } ELSE . lAbierta
    (14) lCerrada -> IF ( cosaBooleana ) { g } ELSE . { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g } ELSE . lCerrada
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . DO { g } WHILE ( valores ) ;
    (25) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (31) loop -> . WHILE ( valores )
    (32) loop -> . FOR ( primParam ; valores ; tercerParam )
    (26) sentencia -> . varsOps ;
    (27) sentencia -> . func ;
    (28) sentencia -> . varAsig ;
    (29) sentencia -> . RETURN ;
    (30) sentencia -> . ;
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (41) func -> . funcReturn
    (42) func -> . funcVoid
    (111) varAsig -> . varYVals MULEQ valoresAsig
    (112) varAsig -> . varYVals DIVEQ valoresAsig
    (113) varAsig -> . varYVals MASEQ valoresAsig
    (114) varAsig -> . varYVals MENOSEQ valoresAsig
    (115) varAsig -> . varYVals = valoresAsig
    (116) varAsig -> . ID . ID = valoresAsig
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (50) funcVoid -> . PRINT ( valores )
    (96) vecVal -> . ID m
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )

    {               shift and go to state 494
    IF              shift and go to state 21
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 22
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 492
    lAbierta                       shift and go to state 493
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 31

state 466

    (14) lCerrada -> IF ( cosaBooleana ) { g } ELSE . { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g } ELSE . lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . DO { g } WHILE ( valores ) ;
    (25) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (26) sentencia -> . varsOps ;
    (27) sentencia -> . func ;
    (28) sentencia -> . varAsig ;
    (29) sentencia -> . RETURN ;
    (30) sentencia -> . ;
    (31) loop -> . WHILE ( valores )
    (32) loop -> . FOR ( primParam ; valores ; tercerParam )
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (41) func -> . funcReturn
    (42) func -> . funcVoid
    (111) varAsig -> . varYVals MULEQ valoresAsig
    (112) varAsig -> . varYVals DIVEQ valoresAsig
    (113) varAsig -> . varYVals MASEQ valoresAsig
    (114) varAsig -> . varYVals MENOSEQ valoresAsig
    (115) varAsig -> . varYVals = valoresAsig
    (116) varAsig -> . ID . ID = valoresAsig
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (50) funcVoid -> . PRINT ( valores )
    (96) vecVal -> . ID m
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )

    {               shift and go to state 494
    IF              shift and go to state 33
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 22
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 492
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 36

state 467

    (24) lCerrada -> DO { g } WHILE ( valores ) ; .

    ELSE            reduce using rule 24 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    COMMENT         reduce using rule 24 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    IF              reduce using rule 24 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    DO              reduce using rule 24 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    WHILE           reduce using rule 24 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    FOR             reduce using rule 24 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    RETURN          reduce using rule 24 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    ;               reduce using rule 24 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    MENOSMENOS      reduce using rule 24 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    MASMAS          reduce using rule 24 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    ID              reduce using rule 24 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    PRINT           reduce using rule 24 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    MULTIESCALAR    reduce using rule 24 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    LENGTH          reduce using rule 24 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    CAPITALIZAR     reduce using rule 24 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    COLINEALES      reduce using rule 24 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    $end            reduce using rule 24 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    }               reduce using rule 24 (lCerrada -> DO { g } WHILE ( valores ) ; .)


state 468

    (173) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> valoresBool . OR and
    (189) expBool -> valoresBool . OR valoresBool
    (75) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (124) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (192) and -> valoresBool . AND eq
    (194) and -> valoresBool . AND valoresBool

    ?               shift and go to state 473
    OR              shift and go to state 162
    AND             shift and go to state 161


state 469

    (179) valoresTernarioBool -> expBool .
    (174) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> expBool . OR and
    (188) expBool -> expBool . OR valoresBool
    (80) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (125) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat

    :               reduce using rule 179 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 474
    OR              shift and go to state 186


state 470

    (77) ternarioVars -> valoresBool ? valoresTernarioMat . : valoresTernarioVars

    :               shift and go to state 495


state 471

    (178) valoresTernarioBool -> ( . ternarioBool )
    (90) valoresTernarioVars -> ( . ternarioVars )
    (132) valoresTernarioMat -> ( . ternarioMat )
    (171) valoresBool -> ( . ternarioBool )
    (123) valoresMat -> ( . ternarioMat )
    (211) tCompare -> ( . ternarioBool )
    (212) tCompare -> ( . ternarioMat )
    (165) paren -> ( . eMat )
    (166) paren -> ( . valoresMat )
    (220) parenBool -> ( . expBool )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (49) funcBool -> . COLINEALES ( valores , valores )
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (96) vecVal -> . ID m
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 129
    (               shift and go to state 170
    BOOL            shift and go to state 142
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 169
    valoresBool                    shift and go to state 450
    ternarioMat                    shift and go to state 351
    paren                          shift and go to state 94
    varsOps                        shift and go to state 175
    ternarioBool                   shift and go to state 352
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    iSing                          shift and go to state 91
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 353
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 451

state 472

    (82) ternarioVars -> expBool ? valoresTernarioMat . : valoresTernarioVars

    :               shift and go to state 496


state 473

    (173) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (75) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (124) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (175) valoresTernarioBool -> . BOOL
    (176) valoresTernarioBool -> . funcBool
    (177) valoresTernarioBool -> . ternarioBool
    (178) valoresTernarioBool -> . ( ternarioBool )
    (179) valoresTernarioBool -> . expBool
    (85) valoresTernarioVars -> . varsOps
    (86) valoresTernarioVars -> . varYVals
    (87) valoresTernarioVars -> . reg
    (88) valoresTernarioVars -> . vec
    (89) valoresTernarioVars -> . ternarioVars
    (90) valoresTernarioVars -> . ( ternarioVars )
    (91) valoresTernarioVars -> . atributos
    (92) valoresTernarioVars -> . RES
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (49) funcBool -> . COLINEALES ( valores , valores )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (103) reg -> . { campos }
    (54) vec -> . [ elem ]
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (71) atributos -> . ID . valoresCampos
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (96) vecVal -> . ID m
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    BOOL            shift and go to state 271
    (               shift and go to state 471
    RES             shift and go to state 257
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    COLINEALES      shift and go to state 4
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 261
    valoresBool                    shift and go to state 468
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 265
    expBool                        shift and go to state 469
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 476
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 404
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 406
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 474

    (174) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (80) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (125) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (175) valoresTernarioBool -> . BOOL
    (176) valoresTernarioBool -> . funcBool
    (177) valoresTernarioBool -> . ternarioBool
    (178) valoresTernarioBool -> . ( ternarioBool )
    (179) valoresTernarioBool -> . expBool
    (85) valoresTernarioVars -> . varsOps
    (86) valoresTernarioVars -> . varYVals
    (87) valoresTernarioVars -> . reg
    (88) valoresTernarioVars -> . vec
    (89) valoresTernarioVars -> . ternarioVars
    (90) valoresTernarioVars -> . ( ternarioVars )
    (91) valoresTernarioVars -> . atributos
    (92) valoresTernarioVars -> . RES
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (49) funcBool -> . COLINEALES ( valores , valores )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (103) reg -> . { campos }
    (54) vec -> . [ elem ]
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (71) atributos -> . ID . valoresCampos
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (96) vecVal -> . ID m
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    BOOL            shift and go to state 271
    (               shift and go to state 471
    RES             shift and go to state 257
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    COLINEALES      shift and go to state 4
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 468
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 294
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 295
    expBool                        shift and go to state 469
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 478
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 404
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 406
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 475

    (79) ternarioVars -> valoresBool ? valoresTernarioBool . : valoresTernarioVars
    (173) ternarioBool -> valoresBool ? valoresTernarioBool . : valoresTernarioBool

    :               shift and go to state 497


state 476

    (77) ternarioVars -> valoresBool ? valoresTernarioMat . : valoresTernarioVars
    (124) ternarioMat -> valoresBool ? valoresTernarioMat . : valoresTernarioMat

    :               shift and go to state 498


state 477

    (84) ternarioVars -> expBool ? valoresTernarioBool . : valoresTernarioVars
    (174) ternarioBool -> expBool ? valoresTernarioBool . : valoresTernarioBool

    :               shift and go to state 499


state 478

    (82) ternarioVars -> expBool ? valoresTernarioMat . : valoresTernarioVars
    (125) ternarioMat -> expBool ? valoresTernarioMat . : valoresTernarioMat

    :               shift and go to state 500


state 479

    (79) ternarioVars -> valoresBool ? valoresTernarioBool . : valoresTernarioVars

    :               shift and go to state 501


state 480

    (179) valoresTernarioBool -> expBool .
    (125) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (80) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (174) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> expBool . OR and
    (188) expBool -> expBool . OR valoresBool

    :               reduce using rule 179 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 483
    OR              shift and go to state 186


state 481

    (132) valoresTernarioMat -> ( . ternarioMat )
    (90) valoresTernarioVars -> ( . ternarioVars )
    (178) valoresTernarioBool -> ( . ternarioBool )
    (123) valoresMat -> ( . ternarioMat )
    (171) valoresBool -> ( . ternarioBool )
    (211) tCompare -> ( . ternarioBool )
    (212) tCompare -> ( . ternarioMat )
    (165) paren -> ( . eMat )
    (166) paren -> ( . valoresMat )
    (220) parenBool -> ( . expBool )
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (49) funcBool -> . COLINEALES ( valores , valores )
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (96) vecVal -> . ID m
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 129
    (               shift and go to state 170
    BOOL            shift and go to state 142
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 169
    valoresBool                    shift and go to state 456
    ternarioMat                    shift and go to state 351
    paren                          shift and go to state 94
    varsOps                        shift and go to state 175
    ternarioBool                   shift and go to state 352
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    iSing                          shift and go to state 91
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 353
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 457

state 482

    (124) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (75) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (173) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (85) valoresTernarioVars -> . varsOps
    (86) valoresTernarioVars -> . varYVals
    (87) valoresTernarioVars -> . reg
    (88) valoresTernarioVars -> . vec
    (89) valoresTernarioVars -> . ternarioVars
    (90) valoresTernarioVars -> . ( ternarioVars )
    (91) valoresTernarioVars -> . atributos
    (92) valoresTernarioVars -> . RES
    (175) valoresTernarioBool -> . BOOL
    (176) valoresTernarioBool -> . funcBool
    (177) valoresTernarioBool -> . ternarioBool
    (178) valoresTernarioBool -> . ( ternarioBool )
    (179) valoresTernarioBool -> . expBool
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (103) reg -> . { campos }
    (54) vec -> . [ elem ]
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (71) atributos -> . ID . valoresCampos
    (49) funcBool -> . COLINEALES ( valores , valores )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (96) vecVal -> . ID m
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    (               shift and go to state 481
    RES             shift and go to state 257
    BOOL            shift and go to state 271
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    COLINEALES      shift and go to state 4
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    atributos                      shift and go to state 255
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 475
    valoresBool                    shift and go to state 456
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 265
    exp                            shift and go to state 106
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 268
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 272
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 275
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 480

state 483

    (125) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (80) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (174) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (85) valoresTernarioVars -> . varsOps
    (86) valoresTernarioVars -> . varYVals
    (87) valoresTernarioVars -> . reg
    (88) valoresTernarioVars -> . vec
    (89) valoresTernarioVars -> . ternarioVars
    (90) valoresTernarioVars -> . ( ternarioVars )
    (91) valoresTernarioVars -> . atributos
    (92) valoresTernarioVars -> . RES
    (175) valoresTernarioBool -> . BOOL
    (176) valoresTernarioBool -> . funcBool
    (177) valoresTernarioBool -> . ternarioBool
    (178) valoresTernarioBool -> . ( ternarioBool )
    (179) valoresTernarioBool -> . expBool
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (103) reg -> . { campos }
    (54) vec -> . [ elem ]
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (71) atributos -> . ID . valoresCampos
    (49) funcBool -> . COLINEALES ( valores , valores )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (96) vecVal -> . ID m
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    (               shift and go to state 481
    RES             shift and go to state 257
    BOOL            shift and go to state 271
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    COLINEALES      shift and go to state 4
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 456
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 477
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 295
    expBool                        shift and go to state 480
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 296
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 272
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 275
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 484

    (84) ternarioVars -> expBool ? valoresTernarioBool . : valoresTernarioVars

    :               shift and go to state 502


state 485

    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT . com lCerrada
    (12) com -> . COMMENT com
    (13) com -> . empty
    (53) empty -> .

    COMMENT         shift and go to state 378
    IF              reduce using rule 53 (empty -> .)
    DO              reduce using rule 53 (empty -> .)
    RETURN          reduce using rule 53 (empty -> .)
    ;               reduce using rule 53 (empty -> .)
    WHILE           reduce using rule 53 (empty -> .)
    FOR             reduce using rule 53 (empty -> .)
    MENOSMENOS      reduce using rule 53 (empty -> .)
    MASMAS          reduce using rule 53 (empty -> .)
    ID              reduce using rule 53 (empty -> .)
    PRINT           reduce using rule 53 (empty -> .)
    MULTIESCALAR    reduce using rule 53 (empty -> .)
    LENGTH          reduce using rule 53 (empty -> .)
    CAPITALIZAR     reduce using rule 53 (empty -> .)
    COLINEALES      reduce using rule 53 (empty -> .)

    com                            shift and go to state 503
    empty                          shift and go to state 380

state 486

    (19) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .

    ELSE            reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    COMMENT         reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    IF              reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    DO              reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    WHILE           reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    FOR             reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    RETURN          reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    ;               reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    MENOSMENOS      reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    MASMAS          reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    ID              reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    PRINT           reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    MULTIESCALAR    reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    LENGTH          reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    CAPITALIZAR     reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    COLINEALES      reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    $end            reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    }               reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)


state 487

    (16) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { . g }
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (53) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . DO { g } WHILE ( valores ) ;
    (25) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (31) loop -> . WHILE ( valores )
    (32) loop -> . FOR ( primParam ; valores ; tercerParam )
    (26) sentencia -> . varsOps ;
    (27) sentencia -> . func ;
    (28) sentencia -> . varAsig ;
    (29) sentencia -> . RETURN ;
    (30) sentencia -> . ;
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (41) func -> . funcReturn
    (42) func -> . funcVoid
    (111) varAsig -> . varYVals MULEQ valoresAsig
    (112) varAsig -> . varYVals DIVEQ valoresAsig
    (113) varAsig -> . varYVals MASEQ valoresAsig
    (114) varAsig -> . varYVals MENOSEQ valoresAsig
    (115) varAsig -> . varYVals = valoresAsig
    (116) varAsig -> . ID . ID = valoresAsig
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (50) funcVoid -> . PRINT ( valores )
    (96) vecVal -> . ID m
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )

    COMMENT         shift and go to state 9
    }               reduce using rule 53 (empty -> .)
    IF              shift and go to state 21
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    empty                          shift and go to state 13
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 22
    g                              shift and go to state 504
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 29
    loop                           shift and go to state 31
    varYVals                       shift and go to state 11
    linea                          shift and go to state 32

state 488

    (15) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE { g }
    (18) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE COMMENT com lCerrada
    (8) lAbierta -> IF ( cosaBooleana ) lCerrada . ELSE lAbierta
    (5) linea -> lCerrada .

    ELSE            shift and go to state 505
    COMMENT         reduce using rule 5 (linea -> lCerrada .)
    IF              reduce using rule 5 (linea -> lCerrada .)
    DO              reduce using rule 5 (linea -> lCerrada .)
    WHILE           reduce using rule 5 (linea -> lCerrada .)
    FOR             reduce using rule 5 (linea -> lCerrada .)
    RETURN          reduce using rule 5 (linea -> lCerrada .)
    ;               reduce using rule 5 (linea -> lCerrada .)
    MENOSMENOS      reduce using rule 5 (linea -> lCerrada .)
    MASMAS          reduce using rule 5 (linea -> lCerrada .)
    ID              reduce using rule 5 (linea -> lCerrada .)
    PRINT           reduce using rule 5 (linea -> lCerrada .)
    MULTIESCALAR    reduce using rule 5 (linea -> lCerrada .)
    LENGTH          reduce using rule 5 (linea -> lCerrada .)
    CAPITALIZAR     reduce using rule 5 (linea -> lCerrada .)
    COLINEALES      reduce using rule 5 (linea -> lCerrada .)
    $end            reduce using rule 5 (linea -> lCerrada .)
    }               reduce using rule 5 (linea -> lCerrada .)


state 489

    (14) lCerrada -> IF ( cosaBooleana ) { . g } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { . g } ELSE lCerrada
    (7) lAbierta -> IF ( cosaBooleana ) { . g } ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) { . g }
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (53) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . DO { g } WHILE ( valores ) ;
    (25) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (31) loop -> . WHILE ( valores )
    (32) loop -> . FOR ( primParam ; valores ; tercerParam )
    (26) sentencia -> . varsOps ;
    (27) sentencia -> . func ;
    (28) sentencia -> . varAsig ;
    (29) sentencia -> . RETURN ;
    (30) sentencia -> . ;
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (41) func -> . funcReturn
    (42) func -> . funcVoid
    (111) varAsig -> . varYVals MULEQ valoresAsig
    (112) varAsig -> . varYVals DIVEQ valoresAsig
    (113) varAsig -> . varYVals MASEQ valoresAsig
    (114) varAsig -> . varYVals MENOSEQ valoresAsig
    (115) varAsig -> . varYVals = valoresAsig
    (116) varAsig -> . ID . ID = valoresAsig
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (50) funcVoid -> . PRINT ( valores )
    (96) vecVal -> . ID m
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )

    COMMENT         shift and go to state 9
    }               reduce using rule 53 (empty -> .)
    IF              shift and go to state 21
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    linea                          shift and go to state 32
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    empty                          shift and go to state 13
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 22
    g                              shift and go to state 506
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 29
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 31

state 490

    (20) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .

    ELSE            reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    COMMENT         reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    IF              reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    DO              reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    WHILE           reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    FOR             reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    RETURN          reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    ;               reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    MENOSMENOS      reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    MASMAS          reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    ID              reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    PRINT           reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    MULTIESCALAR    reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    LENGTH          reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    CAPITALIZAR     reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    COLINEALES      reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    $end            reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    }               reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)


state 491

    (15) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .

    ELSE            reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    COMMENT         reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    IF              reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    DO              reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    WHILE           reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    FOR             reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    RETURN          reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    ;               reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    MENOSMENOS      reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    MASMAS          reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    ID              reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    PRINT           reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    MULTIESCALAR    reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    LENGTH          reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    CAPITALIZAR     reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    COLINEALES      reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    $end            reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    }               reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)


state 492

    (17) lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .

    ELSE            reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    COMMENT         reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    IF              reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    DO              reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    WHILE           reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    FOR             reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    RETURN          reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    ;               reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    MENOSMENOS      reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    MASMAS          reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    ID              reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    PRINT           reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    MULTIESCALAR    reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    LENGTH          reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    CAPITALIZAR     reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    COLINEALES      reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    $end            reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    }               reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)


state 493

    (7) lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .

    COMMENT         reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    IF              reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    DO              reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    WHILE           reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    FOR             reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    RETURN          reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    ;               reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    MENOSMENOS      reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    MASMAS          reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    ID              reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    PRINT           reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    MULTIESCALAR    reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    LENGTH          reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    CAPITALIZAR     reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    COLINEALES      reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    }               reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    $end            reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)


state 494

    (14) lCerrada -> IF ( cosaBooleana ) { g } ELSE { . g }
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (53) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . DO { g } WHILE ( valores ) ;
    (25) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (31) loop -> . WHILE ( valores )
    (32) loop -> . FOR ( primParam ; valores ; tercerParam )
    (26) sentencia -> . varsOps ;
    (27) sentencia -> . func ;
    (28) sentencia -> . varAsig ;
    (29) sentencia -> . RETURN ;
    (30) sentencia -> . ;
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (41) func -> . funcReturn
    (42) func -> . funcVoid
    (111) varAsig -> . varYVals MULEQ valoresAsig
    (112) varAsig -> . varYVals DIVEQ valoresAsig
    (113) varAsig -> . varYVals MASEQ valoresAsig
    (114) varAsig -> . varYVals MENOSEQ valoresAsig
    (115) varAsig -> . varYVals = valoresAsig
    (116) varAsig -> . ID . ID = valoresAsig
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (50) funcVoid -> . PRINT ( valores )
    (96) vecVal -> . ID m
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )

    COMMENT         shift and go to state 9
    }               reduce using rule 53 (empty -> .)
    IF              shift and go to state 21
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    empty                          shift and go to state 13
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 22
    g                              shift and go to state 507
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 29
    loop                           shift and go to state 31
    varYVals                       shift and go to state 11
    linea                          shift and go to state 32

state 495

    (77) ternarioVars -> valoresBool ? valoresTernarioMat : . valoresTernarioVars
    (85) valoresTernarioVars -> . varsOps
    (86) valoresTernarioVars -> . varYVals
    (87) valoresTernarioVars -> . reg
    (88) valoresTernarioVars -> . vec
    (89) valoresTernarioVars -> . ternarioVars
    (90) valoresTernarioVars -> . ( ternarioVars )
    (91) valoresTernarioVars -> . atributos
    (92) valoresTernarioVars -> . RES
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (103) reg -> . { campos }
    (54) vec -> . [ elem ]
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (71) atributos -> . ID . valoresCampos
    (96) vecVal -> . ID m
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (49) funcBool -> . COLINEALES ( valores , valores )
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (220) parenBool -> . ( expBool )
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )

    (               shift and go to state 509
    RES             shift and go to state 257
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    BOOL            shift and go to state 142
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    STRING          shift and go to state 129
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    and                            shift and go to state 71
    atributos                      shift and go to state 255
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 135
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 508
    eMat                           shift and go to state 137
    vecVal                         shift and go to state 8
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 409
    exp                            shift and go to state 106
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    varYVals                       shift and go to state 398
    p                              shift and go to state 102
    varsOps                        shift and go to state 396
    ternarioVars                   shift and go to state 274
    mayor                          shift and go to state 108
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 510

state 496

    (82) ternarioVars -> expBool ? valoresTernarioMat : . valoresTernarioVars
    (85) valoresTernarioVars -> . varsOps
    (86) valoresTernarioVars -> . varYVals
    (87) valoresTernarioVars -> . reg
    (88) valoresTernarioVars -> . vec
    (89) valoresTernarioVars -> . ternarioVars
    (90) valoresTernarioVars -> . ( ternarioVars )
    (91) valoresTernarioVars -> . atributos
    (92) valoresTernarioVars -> . RES
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (103) reg -> . { campos }
    (54) vec -> . [ elem ]
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (71) atributos -> . ID . valoresCampos
    (96) vecVal -> . ID m
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (49) funcBool -> . COLINEALES ( valores , valores )
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (220) parenBool -> . ( expBool )
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )

    (               shift and go to state 509
    RES             shift and go to state 257
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    BOOL            shift and go to state 142
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    STRING          shift and go to state 129
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    and                            shift and go to state 71
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 135
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 508
    eMat                           shift and go to state 137
    vecVal                         shift and go to state 8
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 423
    expBool                        shift and go to state 510
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    varYVals                       shift and go to state 398
    p                              shift and go to state 102
    varsOps                        shift and go to state 396
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    mayor                          shift and go to state 108
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 497

    (79) ternarioVars -> valoresBool ? valoresTernarioBool : . valoresTernarioVars
    (173) ternarioBool -> valoresBool ? valoresTernarioBool : . valoresTernarioBool
    (85) valoresTernarioVars -> . varsOps
    (86) valoresTernarioVars -> . varYVals
    (87) valoresTernarioVars -> . reg
    (88) valoresTernarioVars -> . vec
    (89) valoresTernarioVars -> . ternarioVars
    (90) valoresTernarioVars -> . ( ternarioVars )
    (91) valoresTernarioVars -> . atributos
    (92) valoresTernarioVars -> . RES
    (175) valoresTernarioBool -> . BOOL
    (176) valoresTernarioBool -> . funcBool
    (177) valoresTernarioBool -> . ternarioBool
    (178) valoresTernarioBool -> . ( ternarioBool )
    (179) valoresTernarioBool -> . expBool
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (103) reg -> . { campos }
    (54) vec -> . [ elem ]
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (71) atributos -> . ID . valoresCampos
    (49) funcBool -> . COLINEALES ( valores , valores )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (96) vecVal -> . ID m
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (220) parenBool -> . ( expBool )
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )

    (               shift and go to state 513
    RES             shift and go to state 257
    BOOL            shift and go to state 271
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    COLINEALES      shift and go to state 4
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    STRING          shift and go to state 129
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    and                            shift and go to state 71
    atributos                      shift and go to state 255
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 135
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 511
    eMat                           shift and go to state 137
    valoresTernarioBool            shift and go to state 393
    mayor                          shift and go to state 108
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 394
    exp                            shift and go to state 106
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 396
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 398
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 512

state 498

    (77) ternarioVars -> valoresBool ? valoresTernarioMat : . valoresTernarioVars
    (124) ternarioMat -> valoresBool ? valoresTernarioMat : . valoresTernarioMat
    (85) valoresTernarioVars -> . varsOps
    (86) valoresTernarioVars -> . varYVals
    (87) valoresTernarioVars -> . reg
    (88) valoresTernarioVars -> . vec
    (89) valoresTernarioVars -> . ternarioVars
    (90) valoresTernarioVars -> . ( ternarioVars )
    (91) valoresTernarioVars -> . atributos
    (92) valoresTernarioVars -> . RES
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (103) reg -> . { campos }
    (54) vec -> . [ elem ]
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (71) atributos -> . ID . valoresCampos
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (96) vecVal -> . ID m
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (49) funcBool -> . COLINEALES ( valores , valores )
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    (               shift and go to state 515
    RES             shift and go to state 257
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    BOOL            shift and go to state 142
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    atributos                      shift and go to state 255
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 514
    eMat                           shift and go to state 260
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 409
    exp                            shift and go to state 106
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 410
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 404
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 406
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 516

state 499

    (84) ternarioVars -> expBool ? valoresTernarioBool : . valoresTernarioVars
    (174) ternarioBool -> expBool ? valoresTernarioBool : . valoresTernarioBool
    (85) valoresTernarioVars -> . varsOps
    (86) valoresTernarioVars -> . varYVals
    (87) valoresTernarioVars -> . reg
    (88) valoresTernarioVars -> . vec
    (89) valoresTernarioVars -> . ternarioVars
    (90) valoresTernarioVars -> . ( ternarioVars )
    (91) valoresTernarioVars -> . atributos
    (92) valoresTernarioVars -> . RES
    (175) valoresTernarioBool -> . BOOL
    (176) valoresTernarioBool -> . funcBool
    (177) valoresTernarioBool -> . ternarioBool
    (178) valoresTernarioBool -> . ( ternarioBool )
    (179) valoresTernarioBool -> . expBool
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (103) reg -> . { campos }
    (54) vec -> . [ elem ]
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (71) atributos -> . ID . valoresCampos
    (49) funcBool -> . COLINEALES ( valores , valores )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (96) vecVal -> . ID m
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (220) parenBool -> . ( expBool )
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )

    (               shift and go to state 513
    RES             shift and go to state 257
    BOOL            shift and go to state 271
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    COLINEALES      shift and go to state 4
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    STRING          shift and go to state 129
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 135
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 511
    eMat                           shift and go to state 137
    valoresTernarioBool            shift and go to state 417
    vecVal                         shift and go to state 8
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 418
    expBool                        shift and go to state 512
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    varYVals                       shift and go to state 398
    p                              shift and go to state 102
    varsOps                        shift and go to state 396
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    mayor                          shift and go to state 108
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 500

    (82) ternarioVars -> expBool ? valoresTernarioMat : . valoresTernarioVars
    (125) ternarioMat -> expBool ? valoresTernarioMat : . valoresTernarioMat
    (85) valoresTernarioVars -> . varsOps
    (86) valoresTernarioVars -> . varYVals
    (87) valoresTernarioVars -> . reg
    (88) valoresTernarioVars -> . vec
    (89) valoresTernarioVars -> . ternarioVars
    (90) valoresTernarioVars -> . ( ternarioVars )
    (91) valoresTernarioVars -> . atributos
    (92) valoresTernarioVars -> . RES
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (103) reg -> . { campos }
    (54) vec -> . [ elem ]
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (71) atributos -> . ID . valoresCampos
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (96) vecVal -> . ID m
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (49) funcBool -> . COLINEALES ( valores , valores )
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    (               shift and go to state 515
    RES             shift and go to state 257
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    BOOL            shift and go to state 142
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 514
    eMat                           shift and go to state 260
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 423
    expBool                        shift and go to state 516
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 422
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 404
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 406
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 501

    (79) ternarioVars -> valoresBool ? valoresTernarioBool : . valoresTernarioVars
    (85) valoresTernarioVars -> . varsOps
    (86) valoresTernarioVars -> . varYVals
    (87) valoresTernarioVars -> . reg
    (88) valoresTernarioVars -> . vec
    (89) valoresTernarioVars -> . ternarioVars
    (90) valoresTernarioVars -> . ( ternarioVars )
    (91) valoresTernarioVars -> . atributos
    (92) valoresTernarioVars -> . RES
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (103) reg -> . { campos }
    (54) vec -> . [ elem ]
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (71) atributos -> . ID . valoresCampos
    (96) vecVal -> . ID m
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (49) funcBool -> . COLINEALES ( valores , valores )
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (220) parenBool -> . ( expBool )
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )

    (               shift and go to state 509
    RES             shift and go to state 257
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    BOOL            shift and go to state 142
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    STRING          shift and go to state 129
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    and                            shift and go to state 71
    atributos                      shift and go to state 255
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 135
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 508
    eMat                           shift and go to state 137
    mayor                          shift and go to state 108
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 394
    exp                            shift and go to state 106
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 396
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 398
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 510

state 502

    (84) ternarioVars -> expBool ? valoresTernarioBool : . valoresTernarioVars
    (85) valoresTernarioVars -> . varsOps
    (86) valoresTernarioVars -> . varYVals
    (87) valoresTernarioVars -> . reg
    (88) valoresTernarioVars -> . vec
    (89) valoresTernarioVars -> . ternarioVars
    (90) valoresTernarioVars -> . ( ternarioVars )
    (91) valoresTernarioVars -> . atributos
    (92) valoresTernarioVars -> . RES
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (103) reg -> . { campos }
    (54) vec -> . [ elem ]
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (71) atributos -> . ID . valoresCampos
    (96) vecVal -> . ID m
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (49) funcBool -> . COLINEALES ( valores , valores )
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (220) parenBool -> . ( expBool )
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )

    (               shift and go to state 509
    RES             shift and go to state 257
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    BOOL            shift and go to state 142
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    STRING          shift and go to state 129
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    and                            shift and go to state 71
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 135
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 508
    eMat                           shift and go to state 137
    vecVal                         shift and go to state 8
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 418
    expBool                        shift and go to state 510
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    varYVals                       shift and go to state 398
    p                              shift and go to state 102
    varsOps                        shift and go to state 396
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    mayor                          shift and go to state 108
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 503

    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com . lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . DO { g } WHILE ( valores ) ;
    (25) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (26) sentencia -> . varsOps ;
    (27) sentencia -> . func ;
    (28) sentencia -> . varAsig ;
    (29) sentencia -> . RETURN ;
    (30) sentencia -> . ;
    (31) loop -> . WHILE ( valores )
    (32) loop -> . FOR ( primParam ; valores ; tercerParam )
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (41) func -> . funcReturn
    (42) func -> . funcVoid
    (111) varAsig -> . varYVals MULEQ valoresAsig
    (112) varAsig -> . varYVals DIVEQ valoresAsig
    (113) varAsig -> . varYVals MASEQ valoresAsig
    (114) varAsig -> . varYVals MENOSEQ valoresAsig
    (115) varAsig -> . varYVals = valoresAsig
    (116) varAsig -> . ID . ID = valoresAsig
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (50) funcVoid -> . PRINT ( valores )
    (96) vecVal -> . ID m
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )

    IF              shift and go to state 33
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 22
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 517
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 36

state 504

    (16) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g . }

    }               shift and go to state 518


state 505

    (15) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . { g }
    (18) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . COMMENT com lCerrada
    (8) lAbierta -> IF ( cosaBooleana ) lCerrada ELSE . lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . DO { g } WHILE ( valores ) ;
    (25) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (26) sentencia -> . varsOps ;
    (27) sentencia -> . func ;
    (28) sentencia -> . varAsig ;
    (29) sentencia -> . RETURN ;
    (30) sentencia -> . ;
    (31) loop -> . WHILE ( valores )
    (32) loop -> . FOR ( primParam ; valores ; tercerParam )
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (41) func -> . funcReturn
    (42) func -> . funcVoid
    (111) varAsig -> . varYVals MULEQ valoresAsig
    (112) varAsig -> . varYVals DIVEQ valoresAsig
    (113) varAsig -> . varYVals MASEQ valoresAsig
    (114) varAsig -> . varYVals MENOSEQ valoresAsig
    (115) varAsig -> . varYVals = valoresAsig
    (116) varAsig -> . ID . ID = valoresAsig
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (50) funcVoid -> . PRINT ( valores )
    (96) vecVal -> . ID m
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )

    {               shift and go to state 442
    COMMENT         shift and go to state 439
    IF              shift and go to state 338
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 22
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 440
    lAbierta                       shift and go to state 441
    loop                           shift and go to state 341
    varYVals                       shift and go to state 11

state 506

    (14) lCerrada -> IF ( cosaBooleana ) { g . } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g . } ELSE lCerrada
    (7) lAbierta -> IF ( cosaBooleana ) { g . } ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) { g . }

    }               shift and go to state 519


state 507

    (14) lCerrada -> IF ( cosaBooleana ) { g } ELSE { g . }

    }               shift and go to state 520


state 508

    (75) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (187) expBool -> valoresBool . OR and
    (189) expBool -> valoresBool . OR valoresBool
    (192) and -> valoresBool . AND eq
    (194) and -> valoresBool . AND valoresBool

    ?               shift and go to state 521
    OR              shift and go to state 162
    AND             shift and go to state 161


state 509

    (90) valoresTernarioVars -> ( . ternarioVars )
    (171) valoresBool -> ( . ternarioBool )
    (211) tCompare -> ( . ternarioBool )
    (212) tCompare -> ( . ternarioMat )
    (123) valoresMat -> ( . ternarioMat )
    (220) parenBool -> ( . expBool )
    (165) paren -> ( . eMat )
    (166) paren -> ( . valoresMat )
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (49) funcBool -> . COLINEALES ( valores , valores )
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (96) vecVal -> . ID m
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 129
    (               shift and go to state 170
    BOOL            shift and go to state 142
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 522
    eMat                           shift and go to state 169
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 219
    paren                          shift and go to state 94
    ternarioBool                   shift and go to state 220
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 353
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 523

state 510

    (80) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (186) expBool -> expBool . OR and
    (188) expBool -> expBool . OR valoresBool

    ?               shift and go to state 524
    OR              shift and go to state 186


state 511

    (75) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (173) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (187) expBool -> valoresBool . OR and
    (189) expBool -> valoresBool . OR valoresBool
    (192) and -> valoresBool . AND eq
    (194) and -> valoresBool . AND valoresBool

    ?               shift and go to state 525
    OR              shift and go to state 162
    AND             shift and go to state 161


state 512

    (179) valoresTernarioBool -> expBool .
    (80) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (174) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> expBool . OR and
    (188) expBool -> expBool . OR valoresBool

    ,               reduce using rule 179 (valoresTernarioBool -> expBool .)
    )               reduce using rule 179 (valoresTernarioBool -> expBool .)
    ;               reduce using rule 179 (valoresTernarioBool -> expBool .)
    ]               reduce using rule 179 (valoresTernarioBool -> expBool .)
    :               reduce using rule 179 (valoresTernarioBool -> expBool .)
    }               reduce using rule 179 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 526
    OR              shift and go to state 186


state 513

    (90) valoresTernarioVars -> ( . ternarioVars )
    (178) valoresTernarioBool -> ( . ternarioBool )
    (171) valoresBool -> ( . ternarioBool )
    (211) tCompare -> ( . ternarioBool )
    (212) tCompare -> ( . ternarioMat )
    (123) valoresMat -> ( . ternarioMat )
    (220) parenBool -> ( . expBool )
    (165) paren -> ( . eMat )
    (166) paren -> ( . valoresMat )
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (49) funcBool -> . COLINEALES ( valores , valores )
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (96) vecVal -> . ID m
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 129
    (               shift and go to state 170
    BOOL            shift and go to state 142
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 522
    eMat                           shift and go to state 169
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 219
    paren                          shift and go to state 94
    ternarioBool                   shift and go to state 352
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 353
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 523

state 514

    (75) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (124) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (187) expBool -> valoresBool . OR and
    (189) expBool -> valoresBool . OR valoresBool
    (192) and -> valoresBool . AND eq
    (194) and -> valoresBool . AND valoresBool

    ?               shift and go to state 527
    OR              shift and go to state 162
    AND             shift and go to state 161


state 515

    (90) valoresTernarioVars -> ( . ternarioVars )
    (132) valoresTernarioMat -> ( . ternarioMat )
    (171) valoresBool -> ( . ternarioBool )
    (123) valoresMat -> ( . ternarioMat )
    (211) tCompare -> ( . ternarioBool )
    (212) tCompare -> ( . ternarioMat )
    (165) paren -> ( . eMat )
    (166) paren -> ( . valoresMat )
    (220) parenBool -> ( . expBool )
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (49) funcBool -> . COLINEALES ( valores , valores )
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (96) vecVal -> . ID m
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 129
    (               shift and go to state 170
    BOOL            shift and go to state 142
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    ID              shift and go to state 52
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 134
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 169
    valoresBool                    shift and go to state 399
    ternarioMat                    shift and go to state 351
    paren                          shift and go to state 94
    varsOps                        shift and go to state 175
    ternarioBool                   shift and go to state 220
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    iSing                          shift and go to state 91
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 353
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 454

state 516

    (80) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (125) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (186) expBool -> expBool . OR and
    (188) expBool -> expBool . OR valoresBool

    ?               shift and go to state 528
    OR              shift and go to state 186


state 517

    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .

    ELSE            reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    COMMENT         reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    IF              reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    DO              reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    WHILE           reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    FOR             reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    RETURN          reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    ;               reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    MENOSMENOS      reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    MASMAS          reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    ID              reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    PRINT           reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    MULTIESCALAR    reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    LENGTH          reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    CAPITALIZAR     reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    COLINEALES      reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    $end            reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    }               reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)


state 518

    (16) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .

    ELSE            reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    COMMENT         reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    IF              reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    DO              reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    WHILE           reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    FOR             reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    RETURN          reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    ;               reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    MENOSMENOS      reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    MASMAS          reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    ID              reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    PRINT           reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    MULTIESCALAR    reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    LENGTH          reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    CAPITALIZAR     reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    COLINEALES      reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    $end            reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    }               reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)


state 519

    (14) lCerrada -> IF ( cosaBooleana ) { g } . ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g } . ELSE lCerrada
    (7) lAbierta -> IF ( cosaBooleana ) { g } . ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) { g } .

    ELSE            shift and go to state 529
    COMMENT         reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    IF              reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    DO              reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    WHILE           reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    FOR             reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    RETURN          reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    ;               reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MENOSMENOS      reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MASMAS          reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    ID              reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    PRINT           reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MULTIESCALAR    reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    LENGTH          reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    CAPITALIZAR     reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    COLINEALES      reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    $end            reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    }               reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)


state 520

    (14) lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .

    ELSE            reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    COMMENT         reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    IF              reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    DO              reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    WHILE           reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    FOR             reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    RETURN          reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    ;               reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    MENOSMENOS      reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    MASMAS          reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    ID              reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    PRINT           reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    MULTIESCALAR    reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    LENGTH          reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    CAPITALIZAR     reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    COLINEALES      reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    $end            reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    }               reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)


state 521

    (75) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (85) valoresTernarioVars -> . varsOps
    (86) valoresTernarioVars -> . varYVals
    (87) valoresTernarioVars -> . reg
    (88) valoresTernarioVars -> . vec
    (89) valoresTernarioVars -> . ternarioVars
    (90) valoresTernarioVars -> . ( ternarioVars )
    (91) valoresTernarioVars -> . atributos
    (92) valoresTernarioVars -> . RES
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (175) valoresTernarioBool -> . BOOL
    (176) valoresTernarioBool -> . funcBool
    (177) valoresTernarioBool -> . ternarioBool
    (178) valoresTernarioBool -> . ( ternarioBool )
    (179) valoresTernarioBool -> . expBool
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (103) reg -> . { campos }
    (54) vec -> . [ elem ]
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (71) atributos -> . ID . valoresCampos
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (49) funcBool -> . COLINEALES ( valores , valores )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (96) vecVal -> . ID m
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    (               shift and go to state 405
    RES             shift and go to state 257
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    BOOL            shift and go to state 271
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    atributos                      shift and go to state 255
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 479
    valoresBool                    shift and go to state 399
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 265
    exp                            shift and go to state 106
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 470
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 404
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 406
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 403

state 522

    (75) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (173) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (124) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (187) expBool -> valoresBool . OR and
    (189) expBool -> valoresBool . OR valoresBool
    (192) and -> valoresBool . AND eq
    (194) and -> valoresBool . AND valoresBool

    ?               shift and go to state 530
    OR              shift and go to state 162
    AND             shift and go to state 161


state 523

    (220) parenBool -> ( expBool . )
    (80) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (174) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (125) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (186) expBool -> expBool . OR and
    (188) expBool -> expBool . OR valoresBool

    )               shift and go to state 289
    ?               shift and go to state 531
    OR              shift and go to state 186


state 524

    (80) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (85) valoresTernarioVars -> . varsOps
    (86) valoresTernarioVars -> . varYVals
    (87) valoresTernarioVars -> . reg
    (88) valoresTernarioVars -> . vec
    (89) valoresTernarioVars -> . ternarioVars
    (90) valoresTernarioVars -> . ( ternarioVars )
    (91) valoresTernarioVars -> . atributos
    (92) valoresTernarioVars -> . RES
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (175) valoresTernarioBool -> . BOOL
    (176) valoresTernarioBool -> . funcBool
    (177) valoresTernarioBool -> . ternarioBool
    (178) valoresTernarioBool -> . ( ternarioBool )
    (179) valoresTernarioBool -> . expBool
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (103) reg -> . { campos }
    (54) vec -> . [ elem ]
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (71) atributos -> . ID . valoresCampos
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (49) funcBool -> . COLINEALES ( valores , valores )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (96) vecVal -> . ID m
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    (               shift and go to state 405
    RES             shift and go to state 257
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    BOOL            shift and go to state 271
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 399
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 484
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 295
    expBool                        shift and go to state 403
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 472
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 404
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 406
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 525

    (75) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (173) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (85) valoresTernarioVars -> . varsOps
    (86) valoresTernarioVars -> . varYVals
    (87) valoresTernarioVars -> . reg
    (88) valoresTernarioVars -> . vec
    (89) valoresTernarioVars -> . ternarioVars
    (90) valoresTernarioVars -> . ( ternarioVars )
    (91) valoresTernarioVars -> . atributos
    (92) valoresTernarioVars -> . RES
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (175) valoresTernarioBool -> . BOOL
    (176) valoresTernarioBool -> . funcBool
    (177) valoresTernarioBool -> . ternarioBool
    (178) valoresTernarioBool -> . ( ternarioBool )
    (179) valoresTernarioBool -> . expBool
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (103) reg -> . { campos }
    (54) vec -> . [ elem ]
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (71) atributos -> . ID . valoresCampos
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (49) funcBool -> . COLINEALES ( valores , valores )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (96) vecVal -> . ID m
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    (               shift and go to state 405
    RES             shift and go to state 257
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    BOOL            shift and go to state 271
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    atributos                      shift and go to state 255
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 475
    valoresBool                    shift and go to state 399
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 265
    exp                            shift and go to state 106
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 470
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 404
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 406
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 403

state 526

    (80) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (174) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (85) valoresTernarioVars -> . varsOps
    (86) valoresTernarioVars -> . varYVals
    (87) valoresTernarioVars -> . reg
    (88) valoresTernarioVars -> . vec
    (89) valoresTernarioVars -> . ternarioVars
    (90) valoresTernarioVars -> . ( ternarioVars )
    (91) valoresTernarioVars -> . atributos
    (92) valoresTernarioVars -> . RES
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (175) valoresTernarioBool -> . BOOL
    (176) valoresTernarioBool -> . funcBool
    (177) valoresTernarioBool -> . ternarioBool
    (178) valoresTernarioBool -> . ( ternarioBool )
    (179) valoresTernarioBool -> . expBool
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (103) reg -> . { campos }
    (54) vec -> . [ elem ]
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (71) atributos -> . ID . valoresCampos
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (49) funcBool -> . COLINEALES ( valores , valores )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (96) vecVal -> . ID m
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    (               shift and go to state 405
    RES             shift and go to state 257
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    BOOL            shift and go to state 271
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 399
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 477
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 295
    expBool                        shift and go to state 403
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 472
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 404
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 406
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 527

    (75) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (124) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (85) valoresTernarioVars -> . varsOps
    (86) valoresTernarioVars -> . varYVals
    (87) valoresTernarioVars -> . reg
    (88) valoresTernarioVars -> . vec
    (89) valoresTernarioVars -> . ternarioVars
    (90) valoresTernarioVars -> . ( ternarioVars )
    (91) valoresTernarioVars -> . atributos
    (92) valoresTernarioVars -> . RES
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (175) valoresTernarioBool -> . BOOL
    (176) valoresTernarioBool -> . funcBool
    (177) valoresTernarioBool -> . ternarioBool
    (178) valoresTernarioBool -> . ( ternarioBool )
    (179) valoresTernarioBool -> . expBool
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (103) reg -> . { campos }
    (54) vec -> . [ elem ]
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (71) atributos -> . ID . valoresCampos
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (49) funcBool -> . COLINEALES ( valores , valores )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (96) vecVal -> . ID m
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    (               shift and go to state 405
    RES             shift and go to state 257
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    BOOL            shift and go to state 271
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    atributos                      shift and go to state 255
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 479
    valoresBool                    shift and go to state 399
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 265
    exp                            shift and go to state 106
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 476
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 404
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 406
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 403

state 528

    (80) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (125) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (85) valoresTernarioVars -> . varsOps
    (86) valoresTernarioVars -> . varYVals
    (87) valoresTernarioVars -> . reg
    (88) valoresTernarioVars -> . vec
    (89) valoresTernarioVars -> . ternarioVars
    (90) valoresTernarioVars -> . ( ternarioVars )
    (91) valoresTernarioVars -> . atributos
    (92) valoresTernarioVars -> . RES
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (175) valoresTernarioBool -> . BOOL
    (176) valoresTernarioBool -> . funcBool
    (177) valoresTernarioBool -> . ternarioBool
    (178) valoresTernarioBool -> . ( ternarioBool )
    (179) valoresTernarioBool -> . expBool
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (103) reg -> . { campos }
    (54) vec -> . [ elem ]
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (71) atributos -> . ID . valoresCampos
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (49) funcBool -> . COLINEALES ( valores , valores )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (96) vecVal -> . ID m
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    (               shift and go to state 405
    RES             shift and go to state 257
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    BOOL            shift and go to state 271
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 399
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 484
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 295
    expBool                        shift and go to state 403
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 478
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 404
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 406
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 529

    (14) lCerrada -> IF ( cosaBooleana ) { g } ELSE . { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g } ELSE . lCerrada
    (7) lAbierta -> IF ( cosaBooleana ) { g } ELSE . lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . DO { g } WHILE ( valores ) ;
    (25) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (26) sentencia -> . varsOps ;
    (27) sentencia -> . func ;
    (28) sentencia -> . varAsig ;
    (29) sentencia -> . RETURN ;
    (30) sentencia -> . ;
    (31) loop -> . WHILE ( valores )
    (32) loop -> . FOR ( primParam ; valores ; tercerParam )
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (41) func -> . funcReturn
    (42) func -> . funcVoid
    (111) varAsig -> . varYVals MULEQ valoresAsig
    (112) varAsig -> . varYVals DIVEQ valoresAsig
    (113) varAsig -> . varYVals MASEQ valoresAsig
    (114) varAsig -> . varYVals MENOSEQ valoresAsig
    (115) varAsig -> . varYVals = valoresAsig
    (116) varAsig -> . ID . ID = valoresAsig
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (43) funcReturn -> . funcInt
    (44) funcReturn -> . funcString
    (45) funcReturn -> . funcBool
    (50) funcVoid -> . PRINT ( valores )
    (96) vecVal -> . ID m
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (48) funcString -> . CAPITALIZAR ( valores )
    (49) funcBool -> . COLINEALES ( valores , valores )

    {               shift and go to state 494
    IF              shift and go to state 338
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 22
    funcString                     shift and go to state 24
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 492
    lAbierta                       shift and go to state 493
    loop                           shift and go to state 341
    varYVals                       shift and go to state 11

state 530

    (75) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (173) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (124) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (85) valoresTernarioVars -> . varsOps
    (86) valoresTernarioVars -> . varYVals
    (87) valoresTernarioVars -> . reg
    (88) valoresTernarioVars -> . vec
    (89) valoresTernarioVars -> . ternarioVars
    (90) valoresTernarioVars -> . ( ternarioVars )
    (91) valoresTernarioVars -> . atributos
    (92) valoresTernarioVars -> . RES
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (175) valoresTernarioBool -> . BOOL
    (176) valoresTernarioBool -> . funcBool
    (177) valoresTernarioBool -> . ternarioBool
    (178) valoresTernarioBool -> . ( ternarioBool )
    (179) valoresTernarioBool -> . expBool
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (103) reg -> . { campos }
    (54) vec -> . [ elem ]
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (71) atributos -> . ID . valoresCampos
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (49) funcBool -> . COLINEALES ( valores , valores )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (96) vecVal -> . ID m
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    (               shift and go to state 405
    RES             shift and go to state 257
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    BOOL            shift and go to state 271
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    atributos                      shift and go to state 255
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 475
    valoresBool                    shift and go to state 399
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 265
    exp                            shift and go to state 106
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 476
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 404
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 406
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 403

state 531

    (80) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (174) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (125) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (85) valoresTernarioVars -> . varsOps
    (86) valoresTernarioVars -> . varYVals
    (87) valoresTernarioVars -> . reg
    (88) valoresTernarioVars -> . vec
    (89) valoresTernarioVars -> . ternarioVars
    (90) valoresTernarioVars -> . ( ternarioVars )
    (91) valoresTernarioVars -> . atributos
    (92) valoresTernarioVars -> . RES
    (126) valoresTernarioMat -> . INT
    (127) valoresTernarioMat -> . FLOAT
    (128) valoresTernarioMat -> . funcInt
    (129) valoresTernarioMat -> . STRING
    (130) valoresTernarioMat -> . eMat
    (131) valoresTernarioMat -> . ternarioMat
    (132) valoresTernarioMat -> . ( ternarioMat )
    (175) valoresTernarioBool -> . BOOL
    (176) valoresTernarioBool -> . funcBool
    (177) valoresTernarioBool -> . ternarioBool
    (178) valoresTernarioBool -> . ( ternarioBool )
    (179) valoresTernarioBool -> . expBool
    (106) varsOps -> . MENOSMENOS varYVals
    (107) varsOps -> . MASMAS varYVals
    (108) varsOps -> . varYVals MASMAS
    (109) varsOps -> . varYVals MENOSMENOS
    (93) varYVals -> . ID
    (94) varYVals -> . vecVal
    (95) varYVals -> . vecVal . varYVals
    (103) reg -> . { campos }
    (54) vec -> . [ elem ]
    (75) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (77) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (78) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (79) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (80) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (82) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (83) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (84) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (71) atributos -> . ID . valoresCampos
    (46) funcInt -> . MULTIESCALAR ( valores , valores param )
    (47) funcInt -> . LENGTH ( valores )
    (133) eMat -> . eMat + p
    (134) eMat -> . eMat - p
    (135) eMat -> . valoresMat + p
    (136) eMat -> . valoresMat - p
    (137) eMat -> . eMat + valoresMat
    (138) eMat -> . eMat - valoresMat
    (139) eMat -> . valoresMat + valoresMat
    (140) eMat -> . valoresMat - valoresMat
    (141) eMat -> . p
    (124) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (125) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (49) funcBool -> . COLINEALES ( valores , valores )
    (173) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (174) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (186) expBool -> . expBool OR and
    (187) expBool -> . valoresBool OR and
    (188) expBool -> . expBool OR valoresBool
    (189) expBool -> . valoresBool OR valoresBool
    (190) expBool -> . and
    (96) vecVal -> . ID m
    (167) valoresBool -> . BOOL
    (168) valoresBool -> . funcBool
    (169) valoresBool -> . varYVals
    (170) valoresBool -> . varsOps
    (171) valoresBool -> . ( ternarioBool )
    (172) valoresBool -> .
    (117) valoresMat -> . INT
    (118) valoresMat -> . FLOAT
    (119) valoresMat -> . funcInt
    (120) valoresMat -> . varYVals
    (121) valoresMat -> . varsOps
    (122) valoresMat -> . STRING
    (123) valoresMat -> . ( ternarioMat )
    (142) p -> . p * exp
    (143) p -> . p / exp
    (144) p -> . p % exp
    (145) p -> . valoresMat * exp
    (146) p -> . valoresMat / exp
    (147) p -> . valoresMat % exp
    (148) p -> . p * valoresMat
    (149) p -> . p / valoresMat
    (150) p -> . p % valoresMat
    (151) p -> . valoresMat * valoresMat
    (152) p -> . valoresMat / valoresMat
    (153) p -> . valoresMat % valoresMat
    (154) p -> . exp
    (191) and -> . and AND eq
    (192) and -> . valoresBool AND eq
    (193) and -> . and AND valoresBool
    (194) and -> . valoresBool AND valoresBool
    (195) and -> . eq
    (155) exp -> . exp ^ iSing
    (156) exp -> . valoresMat ^ iSing
    (157) exp -> . exp ^ valoresMat
    (158) exp -> . valoresMat ^ valoresMat
    (159) exp -> . iSing
    (196) eq -> . eq EQEQ mayor
    (197) eq -> . eq DISTINTO mayor
    (198) eq -> . tCompare EQEQ mayor
    (199) eq -> . tCompare DISTINTO mayor
    (200) eq -> . eq EQEQ tCompare
    (201) eq -> . eq DISTINTO tCompare
    (202) eq -> . tCompare EQEQ tCompare
    (203) eq -> . tCompare DISTINTO tCompare
    (204) eq -> . mayor
    (160) iSing -> . - paren
    (161) iSing -> . + paren
    (162) iSing -> . - valoresMat
    (163) iSing -> . + valoresMat
    (164) iSing -> . paren
    (205) tCompare -> . eMat
    (206) tCompare -> . varsOps
    (207) tCompare -> . varYVals
    (208) tCompare -> . INT
    (209) tCompare -> . funcInt
    (210) tCompare -> . FLOAT
    (211) tCompare -> . ( ternarioBool )
    (212) tCompare -> . ( ternarioMat )
    (213) mayor -> . tCompare > tCompare
    (214) mayor -> . menor
    (165) paren -> . ( eMat )
    (166) paren -> . ( valoresMat )
    (215) menor -> . tCompare < tCompare
    (216) menor -> . not
    (217) not -> . NOT not
    (218) not -> . NOT valoresBool
    (219) not -> . parenBool
    (220) parenBool -> . ( expBool )

    (               shift and go to state 405
    RES             shift and go to state 257
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    BOOL            shift and go to state 271
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    MULTIESCALAR    shift and go to state 25
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 172 (valoresBool -> .)
    OR              reduce using rule 172 (valoresBool -> .)
    AND             reduce using rule 172 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 399
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 477
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 295
    expBool                        shift and go to state 403
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 478
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 404
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 406
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255
