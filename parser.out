Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> g
Rule 1     g -> linea g
Rule 2     g -> COMMENT g
Rule 3     g -> empty
Rule 4     linea -> lAbierta
Rule 5     linea -> lCerrada
Rule 6     lAbierta -> IF ( cosaBooleana ) linea
Rule 7     lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta
Rule 8     lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta
Rule 9     lAbierta -> IF ( cosaBooleana ) { g }
Rule 10    lAbierta -> loop lAbierta
Rule 11    lCerrada -> sentencia
Rule 12    com -> COMMENT com
Rule 13    com -> empty
Rule 14    lCerrada -> IF ( cosaBooleana ) { g } ELSE { g }
Rule 15    lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g }
Rule 16    lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
Rule 17    lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada
Rule 18    lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada
Rule 19    lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
Rule 20    lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
Rule 21    lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
Rule 22    lCerrada -> loop { g }
Rule 23    lCerrada -> loop lCerrada
Rule 24    lCerrada -> loop COMMENT com lCerrada
Rule 25    lCerrada -> DO { g } WHILE ( valores ) ;
Rule 26    lCerrada -> DO lCerrada WHILE ( valores ) ;
Rule 27    sentencia -> varsOps ;
Rule 28    sentencia -> func ;
Rule 29    sentencia -> varAsig ;
Rule 30    sentencia -> RETURN ;
Rule 31    sentencia -> ;
Rule 32    loop -> WHILE ( valores )
Rule 33    loop -> FOR ( primParam ; valores ; tercerParam )
Rule 34    cosaBooleana -> expBool
Rule 35    cosaBooleana -> valoresBool
Rule 36    primParam -> varAsig
Rule 37    primParam -> empty
Rule 38    tercerParam -> varsOps
Rule 39    tercerParam -> varAsig
Rule 40    tercerParam -> func
Rule 41    tercerParam -> empty
Rule 42    func -> funcReturn
Rule 43    func -> funcVoid
Rule 44    funcReturn -> funcInt
Rule 45    funcReturn -> funcString
Rule 46    funcReturn -> funcBool
Rule 47    funcInt -> MULTIESCALAR ( valores , valores param )
Rule 48    funcInt -> LENGTH ( valores )
Rule 49    funcString -> CAPITALIZAR ( valores )
Rule 50    funcBool -> COLINEALES ( valores , valores )
Rule 51    funcVoid -> PRINT ( valores )
Rule 52    param -> , valores
Rule 53    param -> empty
Rule 54    empty -> <empty>
Rule 55    vec -> [ elem ]
Rule 56    elem -> valores , elem
Rule 57    elem -> valores
Rule 58    valores -> eMat
Rule 59    valores -> expBool
Rule 60    valores -> funcReturn
Rule 61    valores -> reg
Rule 62    valores -> INT
Rule 63    valores -> FLOAT
Rule 64    valores -> STRING
Rule 65    valores -> BOOL
Rule 66    valores -> varYVals
Rule 67    valores -> varsOps
Rule 68    valores -> vec
Rule 69    valores -> ternario
Rule 70    valores -> atributos
Rule 71    valores -> RES
Rule 72    atributos -> ID . valoresCampos
Rule 73    valoresCampos -> varYVals
Rule 74    valoresCampos -> END
Rule 75    valoresCampos -> BEGIN
Rule 76    ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars
Rule 77    ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat
Rule 78    ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars
Rule 79    ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool
Rule 80    ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars
Rule 81    ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars
Rule 82    ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat
Rule 83    ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars
Rule 84    ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool
Rule 85    ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars
Rule 86    valoresTernarioVars -> varsOps
Rule 87    valoresTernarioVars -> varYVals
Rule 88    valoresTernarioVars -> reg
Rule 89    valoresTernarioVars -> vec
Rule 90    valoresTernarioVars -> ternarioVars
Rule 91    valoresTernarioVars -> ( ternarioVars )
Rule 92    valoresTernarioVars -> atributos
Rule 93    valoresTernarioVars -> RES
Rule 94    varYVals -> ID
Rule 95    varYVals -> vecVal
Rule 96    varYVals -> vecVal . varYVals
Rule 97    vecVal -> ID m
Rule 98    vecVal -> vec m
Rule 99    m -> [ INT ]
Rule 100   m -> [ INT ] m
Rule 101   m -> [ varYVals ] m
Rule 102   m -> [ varYVals ]
Rule 103   m -> [ eMat ] m
Rule 104   m -> [ eMat ]
Rule 105   reg -> { campos }
Rule 106   campos -> ID : valores , campos
Rule 107   campos -> ID : valores
Rule 108   varsOps -> MENOSMENOS varYVals
Rule 109   varsOps -> MASMAS varYVals
Rule 110   varsOps -> varYVals MASMAS
Rule 111   varsOps -> varYVals MENOSMENOS
Rule 112   valoresAsig -> valores
Rule 113   varAsig -> varYVals MULEQ valoresAsig
Rule 114   varAsig -> varYVals DIVEQ valoresAsig
Rule 115   varAsig -> varYVals MASEQ valoresAsig
Rule 116   varAsig -> varYVals MENOSEQ valoresAsig
Rule 117   varAsig -> varYVals = valoresAsig
Rule 118   varAsig -> ID . ID = valoresAsig
Rule 119   valoresMat -> INT
Rule 120   valoresMat -> FLOAT
Rule 121   valoresMat -> funcInt
Rule 122   valoresMat -> varYVals
Rule 123   valoresMat -> varsOps
Rule 124   valoresMat -> STRING
Rule 125   valoresMat -> ( ternarioMat )
Rule 126   ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat
Rule 127   ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat
Rule 128   valoresTernarioMat -> INT
Rule 129   valoresTernarioMat -> FLOAT
Rule 130   valoresTernarioMat -> funcInt
Rule 131   valoresTernarioMat -> STRING
Rule 132   valoresTernarioMat -> eMat
Rule 133   valoresTernarioMat -> ternarioMat
Rule 134   valoresTernarioMat -> ( ternarioMat )
Rule 135   eMat -> eMat + p
Rule 136   eMat -> eMat - p
Rule 137   eMat -> valoresMat + p
Rule 138   eMat -> valoresMat - p
Rule 139   eMat -> eMat + valoresMat
Rule 140   eMat -> eMat - valoresMat
Rule 141   eMat -> valoresMat + valoresMat
Rule 142   eMat -> valoresMat - valoresMat
Rule 143   eMat -> p
Rule 144   p -> p * exp
Rule 145   p -> p / exp
Rule 146   p -> p % exp
Rule 147   p -> valoresMat * exp
Rule 148   p -> valoresMat / exp
Rule 149   p -> valoresMat % exp
Rule 150   p -> p * valoresMat
Rule 151   p -> p / valoresMat
Rule 152   p -> p % valoresMat
Rule 153   p -> valoresMat * valoresMat
Rule 154   p -> valoresMat / valoresMat
Rule 155   p -> valoresMat % valoresMat
Rule 156   p -> exp
Rule 157   exp -> exp ^ iSing
Rule 158   exp -> valoresMat ^ iSing
Rule 159   exp -> exp ^ valoresMat
Rule 160   exp -> valoresMat ^ valoresMat
Rule 161   exp -> iSing
Rule 162   iSing -> - paren
Rule 163   iSing -> + paren
Rule 164   iSing -> - valoresMat
Rule 165   iSing -> + valoresMat
Rule 166   iSing -> paren
Rule 167   paren -> ( eMat )
Rule 168   paren -> ( valoresMat )
Rule 169   valoresBool -> BOOL
Rule 170   valoresBool -> funcBool
Rule 171   valoresBool -> varYVals
Rule 172   valoresBool -> varsOps
Rule 173   valoresBool -> ( ternarioBool )
Rule 174   valoresBool -> <empty>
Rule 175   ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool
Rule 176   ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool
Rule 177   valoresTernarioBool -> BOOL
Rule 178   valoresTernarioBool -> funcBool
Rule 179   valoresTernarioBool -> ternarioBool
Rule 180   valoresTernarioBool -> ( ternarioBool )
Rule 181   valoresTernarioBool -> expBool
Rule 182   ternario -> ternarioMat
Rule 183   ternario -> ternarioBool
Rule 184   ternario -> ( ternarioMat )
Rule 185   ternario -> ( ternarioBool )
Rule 186   ternario -> ternarioVars
Rule 187   ternario -> ( ternarioVars )
Rule 188   expBool -> expBool OR and
Rule 189   expBool -> valoresBool OR and
Rule 190   expBool -> expBool OR valoresBool
Rule 191   expBool -> valoresBool OR valoresBool
Rule 192   expBool -> and
Rule 193   and -> and AND eq
Rule 194   and -> valoresBool AND eq
Rule 195   and -> and AND valoresBool
Rule 196   and -> valoresBool AND valoresBool
Rule 197   and -> eq
Rule 198   eq -> eq EQEQ mayor
Rule 199   eq -> eq DISTINTO mayor
Rule 200   eq -> tCompare EQEQ mayor
Rule 201   eq -> tCompare DISTINTO mayor
Rule 202   eq -> eq EQEQ tCompare
Rule 203   eq -> eq DISTINTO tCompare
Rule 204   eq -> tCompare EQEQ tCompare
Rule 205   eq -> tCompare DISTINTO tCompare
Rule 206   eq -> mayor
Rule 207   tCompare -> eMat
Rule 208   tCompare -> varsOps
Rule 209   tCompare -> varYVals
Rule 210   tCompare -> INT
Rule 211   tCompare -> funcInt
Rule 212   tCompare -> FLOAT
Rule 213   tCompare -> ( ternarioBool )
Rule 214   tCompare -> ( ternarioMat )
Rule 215   mayor -> tCompare > tCompare
Rule 216   mayor -> menor
Rule 217   menor -> tCompare < tCompare
Rule 218   menor -> not
Rule 219   not -> NOT not
Rule 220   not -> NOT valoresBool
Rule 221   not -> parenBool
Rule 222   parenBool -> ( expBool )

Terminals, with rules where they appear

%                    : 146 149 152 155
(                    : 6 7 8 9 14 15 16 17 18 19 20 21 25 26 32 33 47 48 49 50 51 91 125 134 167 168 173 180 184 185 187 213 214 222
)                    : 6 7 8 9 14 15 16 17 18 19 20 21 25 26 32 33 47 48 49 50 51 91 125 134 167 168 173 180 184 185 187 213 214 222
*                    : 144 147 150 153
+                    : 135 137 139 141 163 165
,                    : 47 50 52 56 106
-                    : 136 138 140 142 162 164
.                    : 72 96 118
/                    : 145 148 151 154
:                    : 76 77 78 79 80 81 82 83 84 85 106 107 126 127 175 176
;                    : 25 26 27 28 29 30 31 33 33
<                    : 217
=                    : 117 118
>                    : 215
?                    : 76 77 78 79 80 81 82 83 84 85 126 127 175 176
AND                  : 193 194 195 196
BEGIN                : 75
BOOL                 : 65 169 177
CAPITALIZAR          : 49
COLINEALES           : 50
COMMENT              : 2 12 16 19 20 21 21 24
DISTINTO             : 199 201 203 205
DIVEQ                : 114
DO                   : 25 26
ELSE                 : 7 8 14 15 16 17 18 19 20 21
END                  : 74
EQEQ                 : 198 200 202 204
FLOAT                : 63 120 129 212
FOR                  : 33
ID                   : 72 94 97 106 107 118 118
IF                   : 6 7 8 9 14 15 16 17 18 19 20 21
INT                  : 62 99 100 119 128 210
LENGTH               : 48
MASEQ                : 115
MASMAS               : 109 110
MENOSEQ              : 116
MENOSMENOS           : 108 111
MULEQ                : 113
MULTIESCALAR         : 47
NOT                  : 219 220
OR                   : 188 189 190 191
PRINT                : 51
RES                  : 71 93
RETURN               : 30
STRING               : 64 124 131
WHILE                : 25 26 32
[                    : 55 99 100 101 102 103 104
]                    : 55 99 100 101 102 103 104
^                    : 157 158 159 160
error                : 
{                    : 7 9 14 14 15 16 17 22 25 105
}                    : 7 9 14 14 15 16 17 22 25 105

Nonterminals, with rules where they appear

and                  : 188 189 192 193 195
atributos            : 70 92
campos               : 105 106
com                  : 12 16 19 20 21 21 24
cosaBooleana         : 6 7 8 9 14 15 16 17 18 19 20 21
eMat                 : 58 103 104 132 135 136 139 140 167 207
elem                 : 55 56
empty                : 3 13 37 41 53
eq                   : 193 194 197 198 199 202 203
exp                  : 144 145 146 147 148 149 156 157 159
expBool              : 34 59 81 82 83 84 85 127 176 181 188 190 222
func                 : 28 40
funcBool             : 46 170 178
funcInt              : 44 121 130 211
funcReturn           : 42 60
funcString           : 45
funcVoid             : 43
g                    : 1 2 7 9 14 14 15 16 17 22 25 0
iSing                : 157 158 161
lAbierta             : 4 7 8 10
lCerrada             : 5 8 15 16 17 18 18 19 19 20 20 21 21 23 24 26
linea                : 1 6
loop                 : 10 22 23 24
m                    : 97 98 100 101 103
mayor                : 198 199 200 201 206
menor                : 216
not                  : 218 219
p                    : 135 136 137 138 143 144 145 146 150 151 152
param                : 47
paren                : 162 163 166
parenBool            : 221
primParam            : 33
reg                  : 61 88
sentencia            : 11
tCompare             : 200 201 202 203 204 204 205 205 215 215 217 217
tercerParam          : 33
ternario             : 69
ternarioBool         : 173 179 180 183 185 213
ternarioMat          : 125 133 134 182 184 214
ternarioVars         : 90 91 186 187
valores              : 25 26 32 33 47 47 48 49 50 50 51 52 56 57 106 107 112
valoresAsig          : 113 114 115 116 117 118
valoresBool          : 35 76 77 78 79 80 126 175 189 190 191 191 194 195 196 196 220
valoresCampos        : 72
valoresMat           : 137 138 139 140 141 141 142 142 147 148 149 150 151 152 153 153 154 154 155 155 158 159 160 160 164 165 168
valoresTernarioBool  : 79 80 84 85 175 175 176 176
valoresTernarioMat   : 77 78 82 83 126 126 127 127
valoresTernarioVars  : 76 76 77 78 79 80 81 81 82 83 84 85
varAsig              : 29 36 39
varYVals             : 66 73 87 96 101 102 108 109 110 111 113 114 115 116 117 122 171 209
varsOps              : 27 38 67 86 123 172 208
vec                  : 68 89 98
vecVal               : 95 96

Parsing method: LALR

state 0

    (0) S' -> . g
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (54) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (32) loop -> . WHILE ( valores )
    (33) loop -> . FOR ( primParam ; valores ; tercerParam )
    (27) sentencia -> . varsOps ;
    (28) sentencia -> . func ;
    (29) sentencia -> . varAsig ;
    (30) sentencia -> . RETURN ;
    (31) sentencia -> . ;
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (42) func -> . funcReturn
    (43) func -> . funcVoid
    (113) varAsig -> . varYVals MULEQ valoresAsig
    (114) varAsig -> . varYVals DIVEQ valoresAsig
    (115) varAsig -> . varYVals MASEQ valoresAsig
    (116) varAsig -> . varYVals MENOSEQ valoresAsig
    (117) varAsig -> . varYVals = valoresAsig
    (118) varAsig -> . ID . ID = valoresAsig
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (51) funcVoid -> . PRINT ( valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (55) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    $end            reduce using rule 54 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 13
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 24
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 29
    lAbierta                       shift and go to state 30
    loop                           shift and go to state 32
    varYVals                       shift and go to state 11
    linea                          shift and go to state 34

state 1

    (25) lCerrada -> DO . { g } WHILE ( valores ) ;
    (26) lCerrada -> DO . lCerrada WHILE ( valores ) ;
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) sentencia -> . varsOps ;
    (28) sentencia -> . func ;
    (29) sentencia -> . varAsig ;
    (30) sentencia -> . RETURN ;
    (31) sentencia -> . ;
    (32) loop -> . WHILE ( valores )
    (33) loop -> . FOR ( primParam ; valores ; tercerParam )
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (42) func -> . funcReturn
    (43) func -> . funcVoid
    (113) varAsig -> . varYVals MULEQ valoresAsig
    (114) varAsig -> . varYVals DIVEQ valoresAsig
    (115) varAsig -> . varYVals MASEQ valoresAsig
    (116) varAsig -> . varYVals MENOSEQ valoresAsig
    (117) varAsig -> . varYVals = valoresAsig
    (118) varAsig -> . ID . ID = valoresAsig
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (51) funcVoid -> . PRINT ( valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (55) vec -> . [ elem ]

    {               shift and go to state 37
    IF              shift and go to state 35
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 36
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 38

state 2

    (30) sentencia -> RETURN . ;

    ;               shift and go to state 39


state 3

    (46) funcReturn -> funcBool .

    ;               reduce using rule 46 (funcReturn -> funcBool .)
    )               reduce using rule 46 (funcReturn -> funcBool .)


state 4

    (50) funcBool -> COLINEALES . ( valores , valores )

    (               shift and go to state 40


state 5

    (44) funcReturn -> funcInt .

    ;               reduce using rule 44 (funcReturn -> funcInt .)
    )               reduce using rule 44 (funcReturn -> funcInt .)


state 6

    (32) loop -> WHILE . ( valores )

    (               shift and go to state 41


state 7

    (51) funcVoid -> PRINT . ( valores )

    (               shift and go to state 42


state 8

    (95) varYVals -> vecVal .
    (96) varYVals -> vecVal . . varYVals

    MASMAS          reduce using rule 95 (varYVals -> vecVal .)
    MENOSMENOS      reduce using rule 95 (varYVals -> vecVal .)
    +               reduce using rule 95 (varYVals -> vecVal .)
    -               reduce using rule 95 (varYVals -> vecVal .)
    *               reduce using rule 95 (varYVals -> vecVal .)
    /               reduce using rule 95 (varYVals -> vecVal .)
    %               reduce using rule 95 (varYVals -> vecVal .)
    ^               reduce using rule 95 (varYVals -> vecVal .)
    ?               reduce using rule 95 (varYVals -> vecVal .)
    OR              reduce using rule 95 (varYVals -> vecVal .)
    AND             reduce using rule 95 (varYVals -> vecVal .)
    EQEQ            reduce using rule 95 (varYVals -> vecVal .)
    DISTINTO        reduce using rule 95 (varYVals -> vecVal .)
    >               reduce using rule 95 (varYVals -> vecVal .)
    <               reduce using rule 95 (varYVals -> vecVal .)
    ,               reduce using rule 95 (varYVals -> vecVal .)
    ]               reduce using rule 95 (varYVals -> vecVal .)
    )               reduce using rule 95 (varYVals -> vecVal .)
    ;               reduce using rule 95 (varYVals -> vecVal .)
    :               reduce using rule 95 (varYVals -> vecVal .)
    }               reduce using rule 95 (varYVals -> vecVal .)
    MULEQ           reduce using rule 95 (varYVals -> vecVal .)
    DIVEQ           reduce using rule 95 (varYVals -> vecVal .)
    MASEQ           reduce using rule 95 (varYVals -> vecVal .)
    MENOSEQ         reduce using rule 95 (varYVals -> vecVal .)
    =               reduce using rule 95 (varYVals -> vecVal .)
    .               shift and go to state 43


state 9

    (2) g -> COMMENT . g
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (54) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (32) loop -> . WHILE ( valores )
    (33) loop -> . FOR ( primParam ; valores ; tercerParam )
    (27) sentencia -> . varsOps ;
    (28) sentencia -> . func ;
    (29) sentencia -> . varAsig ;
    (30) sentencia -> . RETURN ;
    (31) sentencia -> . ;
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (42) func -> . funcReturn
    (43) func -> . funcVoid
    (113) varAsig -> . varYVals MULEQ valoresAsig
    (114) varAsig -> . varYVals DIVEQ valoresAsig
    (115) varAsig -> . varYVals MASEQ valoresAsig
    (116) varAsig -> . varYVals MENOSEQ valoresAsig
    (117) varAsig -> . varYVals = valoresAsig
    (118) varAsig -> . ID . ID = valoresAsig
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (51) funcVoid -> . PRINT ( valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (55) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    $end            reduce using rule 54 (empty -> .)
    }               reduce using rule 54 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 13
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 44
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 29
    lAbierta                       shift and go to state 30
    loop                           shift and go to state 32
    varYVals                       shift and go to state 11
    linea                          shift and go to state 34

state 10

    (11) lCerrada -> sentencia .

    WHILE           reduce using rule 11 (lCerrada -> sentencia .)
    COMMENT         reduce using rule 11 (lCerrada -> sentencia .)
    IF              reduce using rule 11 (lCerrada -> sentencia .)
    DO              reduce using rule 11 (lCerrada -> sentencia .)
    FOR             reduce using rule 11 (lCerrada -> sentencia .)
    RETURN          reduce using rule 11 (lCerrada -> sentencia .)
    ;               reduce using rule 11 (lCerrada -> sentencia .)
    MENOSMENOS      reduce using rule 11 (lCerrada -> sentencia .)
    MASMAS          reduce using rule 11 (lCerrada -> sentencia .)
    ID              reduce using rule 11 (lCerrada -> sentencia .)
    PRINT           reduce using rule 11 (lCerrada -> sentencia .)
    MULTIESCALAR    reduce using rule 11 (lCerrada -> sentencia .)
    LENGTH          reduce using rule 11 (lCerrada -> sentencia .)
    CAPITALIZAR     reduce using rule 11 (lCerrada -> sentencia .)
    COLINEALES      reduce using rule 11 (lCerrada -> sentencia .)
    [               reduce using rule 11 (lCerrada -> sentencia .)
    $end            reduce using rule 11 (lCerrada -> sentencia .)
    }               reduce using rule 11 (lCerrada -> sentencia .)
    ELSE            reduce using rule 11 (lCerrada -> sentencia .)


state 11

    (110) varsOps -> varYVals . MASMAS
    (111) varsOps -> varYVals . MENOSMENOS
    (113) varAsig -> varYVals . MULEQ valoresAsig
    (114) varAsig -> varYVals . DIVEQ valoresAsig
    (115) varAsig -> varYVals . MASEQ valoresAsig
    (116) varAsig -> varYVals . MENOSEQ valoresAsig
    (117) varAsig -> varYVals . = valoresAsig

    MASMAS          shift and go to state 49
    MENOSMENOS      shift and go to state 46
    MULEQ           shift and go to state 50
    DIVEQ           shift and go to state 51
    MASEQ           shift and go to state 47
    MENOSEQ         shift and go to state 45
    =               shift and go to state 48


state 12

    (31) sentencia -> ; .

    COMMENT         reduce using rule 31 (sentencia -> ; .)
    IF              reduce using rule 31 (sentencia -> ; .)
    DO              reduce using rule 31 (sentencia -> ; .)
    WHILE           reduce using rule 31 (sentencia -> ; .)
    FOR             reduce using rule 31 (sentencia -> ; .)
    RETURN          reduce using rule 31 (sentencia -> ; .)
    ;               reduce using rule 31 (sentencia -> ; .)
    MENOSMENOS      reduce using rule 31 (sentencia -> ; .)
    MASMAS          reduce using rule 31 (sentencia -> ; .)
    ID              reduce using rule 31 (sentencia -> ; .)
    PRINT           reduce using rule 31 (sentencia -> ; .)
    MULTIESCALAR    reduce using rule 31 (sentencia -> ; .)
    LENGTH          reduce using rule 31 (sentencia -> ; .)
    CAPITALIZAR     reduce using rule 31 (sentencia -> ; .)
    COLINEALES      reduce using rule 31 (sentencia -> ; .)
    [               reduce using rule 31 (sentencia -> ; .)
    $end            reduce using rule 31 (sentencia -> ; .)
    ELSE            reduce using rule 31 (sentencia -> ; .)
    }               reduce using rule 31 (sentencia -> ; .)


state 13

    (3) g -> empty .

    }               reduce using rule 3 (g -> empty .)
    $end            reduce using rule 3 (g -> empty .)


state 14

    (27) sentencia -> varsOps . ;

    ;               shift and go to state 52


state 15

    (43) func -> funcVoid .

    ;               reduce using rule 43 (func -> funcVoid .)
    )               reduce using rule 43 (func -> funcVoid .)


state 16

    (108) varsOps -> MENOSMENOS . varYVals
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (55) vec -> . [ elem ]

    ID              shift and go to state 54
    [               shift and go to state 20

    varYVals                       shift and go to state 53
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33

state 17

    (33) loop -> FOR . ( primParam ; valores ; tercerParam )

    (               shift and go to state 55


state 18

    (48) funcInt -> LENGTH . ( valores )

    (               shift and go to state 56


state 19

    (28) sentencia -> func . ;

    ;               shift and go to state 57


state 20

    (55) vec -> [ . elem ]
    (56) elem -> . valores , elem
    (57) elem -> . valores
    (58) valores -> . eMat
    (59) valores -> . expBool
    (60) valores -> . funcReturn
    (61) valores -> . reg
    (62) valores -> . INT
    (63) valores -> . FLOAT
    (64) valores -> . STRING
    (65) valores -> . BOOL
    (66) valores -> . varYVals
    (67) valores -> . varsOps
    (68) valores -> . vec
    (69) valores -> . ternario
    (70) valores -> . atributos
    (71) valores -> . RES
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (105) reg -> . { campos }
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (55) vec -> . [ elem ]
    (182) ternario -> . ternarioMat
    (183) ternario -> . ternarioBool
    (184) ternario -> . ( ternarioMat )
    (185) ternario -> . ( ternarioBool )
    (186) ternario -> . ternarioVars
    (187) ternario -> . ( ternarioVars )
    (72) atributos -> . ID . valoresCampos
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 85
    FLOAT           shift and go to state 87
    STRING          shift and go to state 69
    BOOL            shift and go to state 90
    RES             shift and go to state 61
    {               shift and go to state 94
    ID              shift and go to state 84
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 71
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    ?               reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    ternario                       shift and go to state 59
    funcBool                       shift and go to state 60
    funcInt                        shift and go to state 62
    valores                        shift and go to state 63
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 68
    eMat                           shift and go to state 70
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 74
    vec                            shift and go to state 75
    paren                          shift and go to state 82
    reg                            shift and go to state 76
    expBool                        shift and go to state 77
    ternarioBool                   shift and go to state 78
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 86
    elem                           shift and go to state 88
    p                              shift and go to state 89
    varsOps                        shift and go to state 91
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 65
    varYVals                       shift and go to state 96
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 97

state 21

    (118) varAsig -> ID . . ID = valoresAsig
    (94) varYVals -> ID .
    (97) vecVal -> ID . m
    (99) m -> . [ INT ]
    (100) m -> . [ INT ] m
    (101) m -> . [ varYVals ] m
    (102) m -> . [ varYVals ]
    (103) m -> . [ eMat ] m
    (104) m -> . [ eMat ]

    .               shift and go to state 99
    MASMAS          reduce using rule 94 (varYVals -> ID .)
    MENOSMENOS      reduce using rule 94 (varYVals -> ID .)
    MULEQ           reduce using rule 94 (varYVals -> ID .)
    DIVEQ           reduce using rule 94 (varYVals -> ID .)
    MASEQ           reduce using rule 94 (varYVals -> ID .)
    MENOSEQ         reduce using rule 94 (varYVals -> ID .)
    =               reduce using rule 94 (varYVals -> ID .)
    [               shift and go to state 100

    m                              shift and go to state 98

state 22

    (6) lAbierta -> IF . ( cosaBooleana ) linea
    (7) lAbierta -> IF . ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> IF . ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> IF . ( cosaBooleana ) { g }
    (14) lCerrada -> IF . ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF . ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada

    (               shift and go to state 101


state 23

    (29) sentencia -> varAsig . ;

    ;               shift and go to state 102


state 24

    (0) S' -> g .



state 25

    (45) funcReturn -> funcString .

    ;               reduce using rule 45 (funcReturn -> funcString .)
    ,               reduce using rule 45 (funcReturn -> funcString .)
    ]               reduce using rule 45 (funcReturn -> funcString .)
    )               reduce using rule 45 (funcReturn -> funcString .)
    }               reduce using rule 45 (funcReturn -> funcString .)


state 26

    (47) funcInt -> MULTIESCALAR . ( valores , valores param )

    (               shift and go to state 103


state 27

    (42) func -> funcReturn .

    ;               reduce using rule 42 (func -> funcReturn .)
    )               reduce using rule 42 (func -> funcReturn .)


state 28

    (49) funcString -> CAPITALIZAR . ( valores )

    (               shift and go to state 104


state 29

    (5) linea -> lCerrada .

    COMMENT         reduce using rule 5 (linea -> lCerrada .)
    IF              reduce using rule 5 (linea -> lCerrada .)
    DO              reduce using rule 5 (linea -> lCerrada .)
    WHILE           reduce using rule 5 (linea -> lCerrada .)
    FOR             reduce using rule 5 (linea -> lCerrada .)
    RETURN          reduce using rule 5 (linea -> lCerrada .)
    ;               reduce using rule 5 (linea -> lCerrada .)
    MENOSMENOS      reduce using rule 5 (linea -> lCerrada .)
    MASMAS          reduce using rule 5 (linea -> lCerrada .)
    ID              reduce using rule 5 (linea -> lCerrada .)
    PRINT           reduce using rule 5 (linea -> lCerrada .)
    MULTIESCALAR    reduce using rule 5 (linea -> lCerrada .)
    LENGTH          reduce using rule 5 (linea -> lCerrada .)
    CAPITALIZAR     reduce using rule 5 (linea -> lCerrada .)
    COLINEALES      reduce using rule 5 (linea -> lCerrada .)
    [               reduce using rule 5 (linea -> lCerrada .)
    }               reduce using rule 5 (linea -> lCerrada .)
    $end            reduce using rule 5 (linea -> lCerrada .)


state 30

    (4) linea -> lAbierta .

    COMMENT         reduce using rule 4 (linea -> lAbierta .)
    IF              reduce using rule 4 (linea -> lAbierta .)
    DO              reduce using rule 4 (linea -> lAbierta .)
    WHILE           reduce using rule 4 (linea -> lAbierta .)
    FOR             reduce using rule 4 (linea -> lAbierta .)
    RETURN          reduce using rule 4 (linea -> lAbierta .)
    ;               reduce using rule 4 (linea -> lAbierta .)
    MENOSMENOS      reduce using rule 4 (linea -> lAbierta .)
    MASMAS          reduce using rule 4 (linea -> lAbierta .)
    ID              reduce using rule 4 (linea -> lAbierta .)
    PRINT           reduce using rule 4 (linea -> lAbierta .)
    MULTIESCALAR    reduce using rule 4 (linea -> lAbierta .)
    LENGTH          reduce using rule 4 (linea -> lAbierta .)
    CAPITALIZAR     reduce using rule 4 (linea -> lAbierta .)
    COLINEALES      reduce using rule 4 (linea -> lAbierta .)
    [               reduce using rule 4 (linea -> lAbierta .)
    }               reduce using rule 4 (linea -> lAbierta .)
    $end            reduce using rule 4 (linea -> lAbierta .)


state 31

    (109) varsOps -> MASMAS . varYVals
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (55) vec -> . [ elem ]

    ID              shift and go to state 54
    [               shift and go to state 20

    varYVals                       shift and go to state 105
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33

state 32

    (10) lAbierta -> loop . lAbierta
    (22) lCerrada -> loop . { g }
    (23) lCerrada -> loop . lCerrada
    (24) lCerrada -> loop . COMMENT com lCerrada
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (32) loop -> . WHILE ( valores )
    (33) loop -> . FOR ( primParam ; valores ; tercerParam )
    (27) sentencia -> . varsOps ;
    (28) sentencia -> . func ;
    (29) sentencia -> . varAsig ;
    (30) sentencia -> . RETURN ;
    (31) sentencia -> . ;
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (42) func -> . funcReturn
    (43) func -> . funcVoid
    (113) varAsig -> . varYVals MULEQ valoresAsig
    (114) varAsig -> . varYVals DIVEQ valoresAsig
    (115) varAsig -> . varYVals MASEQ valoresAsig
    (116) varAsig -> . varYVals MENOSEQ valoresAsig
    (117) varAsig -> . varYVals = valoresAsig
    (118) varAsig -> . ID . ID = valoresAsig
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (51) funcVoid -> . PRINT ( valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (55) vec -> . [ elem ]

    {               shift and go to state 109
    COMMENT         shift and go to state 106
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    loop                           shift and go to state 32
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 107
    lAbierta                       shift and go to state 108
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11

state 33

    (98) vecVal -> vec . m
    (99) m -> . [ INT ]
    (100) m -> . [ INT ] m
    (101) m -> . [ varYVals ] m
    (102) m -> . [ varYVals ]
    (103) m -> . [ eMat ] m
    (104) m -> . [ eMat ]

    [               shift and go to state 100

    m                              shift and go to state 110

state 34

    (1) g -> linea . g
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (54) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (32) loop -> . WHILE ( valores )
    (33) loop -> . FOR ( primParam ; valores ; tercerParam )
    (27) sentencia -> . varsOps ;
    (28) sentencia -> . func ;
    (29) sentencia -> . varAsig ;
    (30) sentencia -> . RETURN ;
    (31) sentencia -> . ;
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (42) func -> . funcReturn
    (43) func -> . funcVoid
    (113) varAsig -> . varYVals MULEQ valoresAsig
    (114) varAsig -> . varYVals DIVEQ valoresAsig
    (115) varAsig -> . varYVals MASEQ valoresAsig
    (116) varAsig -> . varYVals MENOSEQ valoresAsig
    (117) varAsig -> . varYVals = valoresAsig
    (118) varAsig -> . ID . ID = valoresAsig
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (51) funcVoid -> . PRINT ( valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (55) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    $end            reduce using rule 54 (empty -> .)
    }               reduce using rule 54 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 13
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 111
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 29
    lAbierta                       shift and go to state 30
    loop                           shift and go to state 32
    varYVals                       shift and go to state 11
    linea                          shift and go to state 34

state 35

    (14) lCerrada -> IF . ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF . ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada

    (               shift and go to state 112


state 36

    (26) lCerrada -> DO lCerrada . WHILE ( valores ) ;

    WHILE           shift and go to state 113


state 37

    (25) lCerrada -> DO { . g } WHILE ( valores ) ;
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (54) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (32) loop -> . WHILE ( valores )
    (33) loop -> . FOR ( primParam ; valores ; tercerParam )
    (27) sentencia -> . varsOps ;
    (28) sentencia -> . func ;
    (29) sentencia -> . varAsig ;
    (30) sentencia -> . RETURN ;
    (31) sentencia -> . ;
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (42) func -> . funcReturn
    (43) func -> . funcVoid
    (113) varAsig -> . varYVals MULEQ valoresAsig
    (114) varAsig -> . varYVals DIVEQ valoresAsig
    (115) varAsig -> . varYVals MASEQ valoresAsig
    (116) varAsig -> . varYVals MENOSEQ valoresAsig
    (117) varAsig -> . varYVals = valoresAsig
    (118) varAsig -> . ID . ID = valoresAsig
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (51) funcVoid -> . PRINT ( valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (55) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 54 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    linea                          shift and go to state 34
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 13
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 114
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 29
    lAbierta                       shift and go to state 30
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 32

state 38

    (22) lCerrada -> loop . { g }
    (23) lCerrada -> loop . lCerrada
    (24) lCerrada -> loop . COMMENT com lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) sentencia -> . varsOps ;
    (28) sentencia -> . func ;
    (29) sentencia -> . varAsig ;
    (30) sentencia -> . RETURN ;
    (31) sentencia -> . ;
    (32) loop -> . WHILE ( valores )
    (33) loop -> . FOR ( primParam ; valores ; tercerParam )
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (42) func -> . funcReturn
    (43) func -> . funcVoid
    (113) varAsig -> . varYVals MULEQ valoresAsig
    (114) varAsig -> . varYVals DIVEQ valoresAsig
    (115) varAsig -> . varYVals MASEQ valoresAsig
    (116) varAsig -> . varYVals MENOSEQ valoresAsig
    (117) varAsig -> . varYVals = valoresAsig
    (118) varAsig -> . ID . ID = valoresAsig
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (51) funcVoid -> . PRINT ( valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (55) vec -> . [ elem ]

    {               shift and go to state 109
    COMMENT         shift and go to state 106
    IF              shift and go to state 35
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 107
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 38

state 39

    (30) sentencia -> RETURN ; .

    COMMENT         reduce using rule 30 (sentencia -> RETURN ; .)
    IF              reduce using rule 30 (sentencia -> RETURN ; .)
    DO              reduce using rule 30 (sentencia -> RETURN ; .)
    WHILE           reduce using rule 30 (sentencia -> RETURN ; .)
    FOR             reduce using rule 30 (sentencia -> RETURN ; .)
    RETURN          reduce using rule 30 (sentencia -> RETURN ; .)
    ;               reduce using rule 30 (sentencia -> RETURN ; .)
    MENOSMENOS      reduce using rule 30 (sentencia -> RETURN ; .)
    MASMAS          reduce using rule 30 (sentencia -> RETURN ; .)
    ID              reduce using rule 30 (sentencia -> RETURN ; .)
    PRINT           reduce using rule 30 (sentencia -> RETURN ; .)
    MULTIESCALAR    reduce using rule 30 (sentencia -> RETURN ; .)
    LENGTH          reduce using rule 30 (sentencia -> RETURN ; .)
    CAPITALIZAR     reduce using rule 30 (sentencia -> RETURN ; .)
    COLINEALES      reduce using rule 30 (sentencia -> RETURN ; .)
    [               reduce using rule 30 (sentencia -> RETURN ; .)
    $end            reduce using rule 30 (sentencia -> RETURN ; .)
    ELSE            reduce using rule 30 (sentencia -> RETURN ; .)
    }               reduce using rule 30 (sentencia -> RETURN ; .)


state 40

    (50) funcBool -> COLINEALES ( . valores , valores )
    (58) valores -> . eMat
    (59) valores -> . expBool
    (60) valores -> . funcReturn
    (61) valores -> . reg
    (62) valores -> . INT
    (63) valores -> . FLOAT
    (64) valores -> . STRING
    (65) valores -> . BOOL
    (66) valores -> . varYVals
    (67) valores -> . varsOps
    (68) valores -> . vec
    (69) valores -> . ternario
    (70) valores -> . atributos
    (71) valores -> . RES
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (105) reg -> . { campos }
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (55) vec -> . [ elem ]
    (182) ternario -> . ternarioMat
    (183) ternario -> . ternarioBool
    (184) ternario -> . ( ternarioMat )
    (185) ternario -> . ( ternarioBool )
    (186) ternario -> . ternarioVars
    (187) ternario -> . ( ternarioVars )
    (72) atributos -> . ID . valoresCampos
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 85
    FLOAT           shift and go to state 87
    STRING          shift and go to state 69
    BOOL            shift and go to state 90
    RES             shift and go to state 61
    {               shift and go to state 94
    ID              shift and go to state 84
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 71
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    ?               reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    ternario                       shift and go to state 59
    funcBool                       shift and go to state 60
    funcInt                        shift and go to state 62
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 68
    eMat                           shift and go to state 70
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 74
    vec                            shift and go to state 75
    paren                          shift and go to state 82
    reg                            shift and go to state 76
    expBool                        shift and go to state 77
    ternarioBool                   shift and go to state 78
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 86
    valores                        shift and go to state 115
    p                              shift and go to state 89
    varsOps                        shift and go to state 91
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 65
    varYVals                       shift and go to state 96
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 97

state 41

    (32) loop -> WHILE ( . valores )
    (58) valores -> . eMat
    (59) valores -> . expBool
    (60) valores -> . funcReturn
    (61) valores -> . reg
    (62) valores -> . INT
    (63) valores -> . FLOAT
    (64) valores -> . STRING
    (65) valores -> . BOOL
    (66) valores -> . varYVals
    (67) valores -> . varsOps
    (68) valores -> . vec
    (69) valores -> . ternario
    (70) valores -> . atributos
    (71) valores -> . RES
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (105) reg -> . { campos }
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (55) vec -> . [ elem ]
    (182) ternario -> . ternarioMat
    (183) ternario -> . ternarioBool
    (184) ternario -> . ( ternarioMat )
    (185) ternario -> . ( ternarioBool )
    (186) ternario -> . ternarioVars
    (187) ternario -> . ( ternarioVars )
    (72) atributos -> . ID . valoresCampos
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 85
    FLOAT           shift and go to state 87
    STRING          shift and go to state 69
    BOOL            shift and go to state 90
    RES             shift and go to state 61
    {               shift and go to state 94
    ID              shift and go to state 84
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 71
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    ?               reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    ternario                       shift and go to state 59
    funcBool                       shift and go to state 60
    funcInt                        shift and go to state 62
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 68
    eMat                           shift and go to state 70
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 74
    vec                            shift and go to state 75
    paren                          shift and go to state 82
    reg                            shift and go to state 76
    expBool                        shift and go to state 77
    ternarioBool                   shift and go to state 78
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 86
    valores                        shift and go to state 116
    p                              shift and go to state 89
    varsOps                        shift and go to state 91
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 65
    varYVals                       shift and go to state 96
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 97

state 42

    (51) funcVoid -> PRINT ( . valores )
    (58) valores -> . eMat
    (59) valores -> . expBool
    (60) valores -> . funcReturn
    (61) valores -> . reg
    (62) valores -> . INT
    (63) valores -> . FLOAT
    (64) valores -> . STRING
    (65) valores -> . BOOL
    (66) valores -> . varYVals
    (67) valores -> . varsOps
    (68) valores -> . vec
    (69) valores -> . ternario
    (70) valores -> . atributos
    (71) valores -> . RES
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (105) reg -> . { campos }
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (55) vec -> . [ elem ]
    (182) ternario -> . ternarioMat
    (183) ternario -> . ternarioBool
    (184) ternario -> . ( ternarioMat )
    (185) ternario -> . ( ternarioBool )
    (186) ternario -> . ternarioVars
    (187) ternario -> . ( ternarioVars )
    (72) atributos -> . ID . valoresCampos
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 85
    FLOAT           shift and go to state 87
    STRING          shift and go to state 69
    BOOL            shift and go to state 90
    RES             shift and go to state 61
    {               shift and go to state 94
    ID              shift and go to state 84
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 71
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    ?               reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    ternario                       shift and go to state 59
    funcBool                       shift and go to state 60
    funcInt                        shift and go to state 62
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 68
    eMat                           shift and go to state 70
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 74
    vec                            shift and go to state 75
    paren                          shift and go to state 82
    reg                            shift and go to state 76
    expBool                        shift and go to state 77
    ternarioBool                   shift and go to state 78
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 86
    valores                        shift and go to state 117
    p                              shift and go to state 89
    varsOps                        shift and go to state 91
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 65
    varYVals                       shift and go to state 96
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 97

state 43

    (96) varYVals -> vecVal . . varYVals
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (55) vec -> . [ elem ]

    ID              shift and go to state 54
    [               shift and go to state 20

    varYVals                       shift and go to state 118
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33

state 44

    (2) g -> COMMENT g .

    }               reduce using rule 2 (g -> COMMENT g .)
    $end            reduce using rule 2 (g -> COMMENT g .)


state 45

    (116) varAsig -> varYVals MENOSEQ . valoresAsig
    (112) valoresAsig -> . valores
    (58) valores -> . eMat
    (59) valores -> . expBool
    (60) valores -> . funcReturn
    (61) valores -> . reg
    (62) valores -> . INT
    (63) valores -> . FLOAT
    (64) valores -> . STRING
    (65) valores -> . BOOL
    (66) valores -> . varYVals
    (67) valores -> . varsOps
    (68) valores -> . vec
    (69) valores -> . ternario
    (70) valores -> . atributos
    (71) valores -> . RES
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (105) reg -> . { campos }
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (55) vec -> . [ elem ]
    (182) ternario -> . ternarioMat
    (183) ternario -> . ternarioBool
    (184) ternario -> . ( ternarioMat )
    (185) ternario -> . ( ternarioBool )
    (186) ternario -> . ternarioVars
    (187) ternario -> . ( ternarioVars )
    (72) atributos -> . ID . valoresCampos
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 85
    FLOAT           shift and go to state 87
    STRING          shift and go to state 69
    BOOL            shift and go to state 90
    RES             shift and go to state 61
    {               shift and go to state 94
    ID              shift and go to state 84
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 71
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    ?               reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    ternario                       shift and go to state 59
    funcBool                       shift and go to state 60
    funcInt                        shift and go to state 62
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 68
    eMat                           shift and go to state 70
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 74
    vec                            shift and go to state 75
    paren                          shift and go to state 82
    reg                            shift and go to state 76
    expBool                        shift and go to state 77
    ternarioBool                   shift and go to state 78
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    valoresAsig                    shift and go to state 119
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 86
    valores                        shift and go to state 120
    p                              shift and go to state 89
    varsOps                        shift and go to state 91
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 65
    varYVals                       shift and go to state 96
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 97

state 46

    (111) varsOps -> varYVals MENOSMENOS .

    )               reduce using rule 111 (varsOps -> varYVals MENOSMENOS .)
    +               reduce using rule 111 (varsOps -> varYVals MENOSMENOS .)
    -               reduce using rule 111 (varsOps -> varYVals MENOSMENOS .)
    *               reduce using rule 111 (varsOps -> varYVals MENOSMENOS .)
    /               reduce using rule 111 (varsOps -> varYVals MENOSMENOS .)
    %               reduce using rule 111 (varsOps -> varYVals MENOSMENOS .)
    ^               reduce using rule 111 (varsOps -> varYVals MENOSMENOS .)
    ?               reduce using rule 111 (varsOps -> varYVals MENOSMENOS .)
    OR              reduce using rule 111 (varsOps -> varYVals MENOSMENOS .)
    AND             reduce using rule 111 (varsOps -> varYVals MENOSMENOS .)
    EQEQ            reduce using rule 111 (varsOps -> varYVals MENOSMENOS .)
    DISTINTO        reduce using rule 111 (varsOps -> varYVals MENOSMENOS .)
    >               reduce using rule 111 (varsOps -> varYVals MENOSMENOS .)
    <               reduce using rule 111 (varsOps -> varYVals MENOSMENOS .)
    ;               reduce using rule 111 (varsOps -> varYVals MENOSMENOS .)
    ,               reduce using rule 111 (varsOps -> varYVals MENOSMENOS .)
    ]               reduce using rule 111 (varsOps -> varYVals MENOSMENOS .)
    :               reduce using rule 111 (varsOps -> varYVals MENOSMENOS .)
    }               reduce using rule 111 (varsOps -> varYVals MENOSMENOS .)


state 47

    (115) varAsig -> varYVals MASEQ . valoresAsig
    (112) valoresAsig -> . valores
    (58) valores -> . eMat
    (59) valores -> . expBool
    (60) valores -> . funcReturn
    (61) valores -> . reg
    (62) valores -> . INT
    (63) valores -> . FLOAT
    (64) valores -> . STRING
    (65) valores -> . BOOL
    (66) valores -> . varYVals
    (67) valores -> . varsOps
    (68) valores -> . vec
    (69) valores -> . ternario
    (70) valores -> . atributos
    (71) valores -> . RES
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (105) reg -> . { campos }
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (55) vec -> . [ elem ]
    (182) ternario -> . ternarioMat
    (183) ternario -> . ternarioBool
    (184) ternario -> . ( ternarioMat )
    (185) ternario -> . ( ternarioBool )
    (186) ternario -> . ternarioVars
    (187) ternario -> . ( ternarioVars )
    (72) atributos -> . ID . valoresCampos
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 85
    FLOAT           shift and go to state 87
    STRING          shift and go to state 69
    BOOL            shift and go to state 90
    RES             shift and go to state 61
    {               shift and go to state 94
    ID              shift and go to state 84
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 71
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    ?               reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    ternario                       shift and go to state 59
    funcBool                       shift and go to state 60
    funcInt                        shift and go to state 62
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 68
    eMat                           shift and go to state 70
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 74
    vec                            shift and go to state 75
    paren                          shift and go to state 82
    reg                            shift and go to state 76
    expBool                        shift and go to state 77
    ternarioBool                   shift and go to state 78
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    valoresAsig                    shift and go to state 121
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 86
    valores                        shift and go to state 120
    p                              shift and go to state 89
    varsOps                        shift and go to state 91
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 65
    varYVals                       shift and go to state 96
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 97

state 48

    (117) varAsig -> varYVals = . valoresAsig
    (112) valoresAsig -> . valores
    (58) valores -> . eMat
    (59) valores -> . expBool
    (60) valores -> . funcReturn
    (61) valores -> . reg
    (62) valores -> . INT
    (63) valores -> . FLOAT
    (64) valores -> . STRING
    (65) valores -> . BOOL
    (66) valores -> . varYVals
    (67) valores -> . varsOps
    (68) valores -> . vec
    (69) valores -> . ternario
    (70) valores -> . atributos
    (71) valores -> . RES
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (105) reg -> . { campos }
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (55) vec -> . [ elem ]
    (182) ternario -> . ternarioMat
    (183) ternario -> . ternarioBool
    (184) ternario -> . ( ternarioMat )
    (185) ternario -> . ( ternarioBool )
    (186) ternario -> . ternarioVars
    (187) ternario -> . ( ternarioVars )
    (72) atributos -> . ID . valoresCampos
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 85
    FLOAT           shift and go to state 87
    STRING          shift and go to state 69
    BOOL            shift and go to state 90
    RES             shift and go to state 61
    {               shift and go to state 94
    ID              shift and go to state 84
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 71
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    ?               reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    ternario                       shift and go to state 59
    funcBool                       shift and go to state 60
    funcInt                        shift and go to state 62
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 68
    eMat                           shift and go to state 70
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 74
    vec                            shift and go to state 75
    paren                          shift and go to state 82
    reg                            shift and go to state 76
    expBool                        shift and go to state 77
    ternarioBool                   shift and go to state 78
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    valoresAsig                    shift and go to state 122
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 86
    valores                        shift and go to state 120
    p                              shift and go to state 89
    varsOps                        shift and go to state 91
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 65
    varYVals                       shift and go to state 96
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 97

state 49

    (110) varsOps -> varYVals MASMAS .

    )               reduce using rule 110 (varsOps -> varYVals MASMAS .)
    +               reduce using rule 110 (varsOps -> varYVals MASMAS .)
    -               reduce using rule 110 (varsOps -> varYVals MASMAS .)
    *               reduce using rule 110 (varsOps -> varYVals MASMAS .)
    /               reduce using rule 110 (varsOps -> varYVals MASMAS .)
    %               reduce using rule 110 (varsOps -> varYVals MASMAS .)
    ^               reduce using rule 110 (varsOps -> varYVals MASMAS .)
    ?               reduce using rule 110 (varsOps -> varYVals MASMAS .)
    OR              reduce using rule 110 (varsOps -> varYVals MASMAS .)
    AND             reduce using rule 110 (varsOps -> varYVals MASMAS .)
    EQEQ            reduce using rule 110 (varsOps -> varYVals MASMAS .)
    DISTINTO        reduce using rule 110 (varsOps -> varYVals MASMAS .)
    >               reduce using rule 110 (varsOps -> varYVals MASMAS .)
    <               reduce using rule 110 (varsOps -> varYVals MASMAS .)
    ;               reduce using rule 110 (varsOps -> varYVals MASMAS .)
    ,               reduce using rule 110 (varsOps -> varYVals MASMAS .)
    ]               reduce using rule 110 (varsOps -> varYVals MASMAS .)
    :               reduce using rule 110 (varsOps -> varYVals MASMAS .)
    }               reduce using rule 110 (varsOps -> varYVals MASMAS .)


state 50

    (113) varAsig -> varYVals MULEQ . valoresAsig
    (112) valoresAsig -> . valores
    (58) valores -> . eMat
    (59) valores -> . expBool
    (60) valores -> . funcReturn
    (61) valores -> . reg
    (62) valores -> . INT
    (63) valores -> . FLOAT
    (64) valores -> . STRING
    (65) valores -> . BOOL
    (66) valores -> . varYVals
    (67) valores -> . varsOps
    (68) valores -> . vec
    (69) valores -> . ternario
    (70) valores -> . atributos
    (71) valores -> . RES
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (105) reg -> . { campos }
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (55) vec -> . [ elem ]
    (182) ternario -> . ternarioMat
    (183) ternario -> . ternarioBool
    (184) ternario -> . ( ternarioMat )
    (185) ternario -> . ( ternarioBool )
    (186) ternario -> . ternarioVars
    (187) ternario -> . ( ternarioVars )
    (72) atributos -> . ID . valoresCampos
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 85
    FLOAT           shift and go to state 87
    STRING          shift and go to state 69
    BOOL            shift and go to state 90
    RES             shift and go to state 61
    {               shift and go to state 94
    ID              shift and go to state 84
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 71
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    ?               reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    ternario                       shift and go to state 59
    funcBool                       shift and go to state 60
    funcInt                        shift and go to state 62
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 68
    eMat                           shift and go to state 70
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 74
    vec                            shift and go to state 75
    paren                          shift and go to state 82
    reg                            shift and go to state 76
    expBool                        shift and go to state 77
    ternarioBool                   shift and go to state 78
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    valoresAsig                    shift and go to state 123
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 86
    valores                        shift and go to state 120
    p                              shift and go to state 89
    varsOps                        shift and go to state 91
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 65
    varYVals                       shift and go to state 96
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 97

state 51

    (114) varAsig -> varYVals DIVEQ . valoresAsig
    (112) valoresAsig -> . valores
    (58) valores -> . eMat
    (59) valores -> . expBool
    (60) valores -> . funcReturn
    (61) valores -> . reg
    (62) valores -> . INT
    (63) valores -> . FLOAT
    (64) valores -> . STRING
    (65) valores -> . BOOL
    (66) valores -> . varYVals
    (67) valores -> . varsOps
    (68) valores -> . vec
    (69) valores -> . ternario
    (70) valores -> . atributos
    (71) valores -> . RES
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (105) reg -> . { campos }
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (55) vec -> . [ elem ]
    (182) ternario -> . ternarioMat
    (183) ternario -> . ternarioBool
    (184) ternario -> . ( ternarioMat )
    (185) ternario -> . ( ternarioBool )
    (186) ternario -> . ternarioVars
    (187) ternario -> . ( ternarioVars )
    (72) atributos -> . ID . valoresCampos
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 85
    FLOAT           shift and go to state 87
    STRING          shift and go to state 69
    BOOL            shift and go to state 90
    RES             shift and go to state 61
    {               shift and go to state 94
    ID              shift and go to state 84
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 71
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    ?               reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    ternario                       shift and go to state 59
    funcBool                       shift and go to state 60
    funcInt                        shift and go to state 62
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 68
    eMat                           shift and go to state 70
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 74
    vec                            shift and go to state 75
    paren                          shift and go to state 82
    reg                            shift and go to state 76
    expBool                        shift and go to state 77
    ternarioBool                   shift and go to state 78
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    valoresAsig                    shift and go to state 124
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 86
    valores                        shift and go to state 120
    p                              shift and go to state 89
    varsOps                        shift and go to state 91
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 65
    varYVals                       shift and go to state 96
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 97

state 52

    (27) sentencia -> varsOps ; .

    COMMENT         reduce using rule 27 (sentencia -> varsOps ; .)
    IF              reduce using rule 27 (sentencia -> varsOps ; .)
    DO              reduce using rule 27 (sentencia -> varsOps ; .)
    WHILE           reduce using rule 27 (sentencia -> varsOps ; .)
    FOR             reduce using rule 27 (sentencia -> varsOps ; .)
    RETURN          reduce using rule 27 (sentencia -> varsOps ; .)
    ;               reduce using rule 27 (sentencia -> varsOps ; .)
    MENOSMENOS      reduce using rule 27 (sentencia -> varsOps ; .)
    MASMAS          reduce using rule 27 (sentencia -> varsOps ; .)
    ID              reduce using rule 27 (sentencia -> varsOps ; .)
    PRINT           reduce using rule 27 (sentencia -> varsOps ; .)
    MULTIESCALAR    reduce using rule 27 (sentencia -> varsOps ; .)
    LENGTH          reduce using rule 27 (sentencia -> varsOps ; .)
    CAPITALIZAR     reduce using rule 27 (sentencia -> varsOps ; .)
    COLINEALES      reduce using rule 27 (sentencia -> varsOps ; .)
    [               reduce using rule 27 (sentencia -> varsOps ; .)
    $end            reduce using rule 27 (sentencia -> varsOps ; .)
    ELSE            reduce using rule 27 (sentencia -> varsOps ; .)
    }               reduce using rule 27 (sentencia -> varsOps ; .)


state 53

    (108) varsOps -> MENOSMENOS varYVals .

    )               reduce using rule 108 (varsOps -> MENOSMENOS varYVals .)
    +               reduce using rule 108 (varsOps -> MENOSMENOS varYVals .)
    -               reduce using rule 108 (varsOps -> MENOSMENOS varYVals .)
    *               reduce using rule 108 (varsOps -> MENOSMENOS varYVals .)
    /               reduce using rule 108 (varsOps -> MENOSMENOS varYVals .)
    %               reduce using rule 108 (varsOps -> MENOSMENOS varYVals .)
    ^               reduce using rule 108 (varsOps -> MENOSMENOS varYVals .)
    ?               reduce using rule 108 (varsOps -> MENOSMENOS varYVals .)
    OR              reduce using rule 108 (varsOps -> MENOSMENOS varYVals .)
    AND             reduce using rule 108 (varsOps -> MENOSMENOS varYVals .)
    EQEQ            reduce using rule 108 (varsOps -> MENOSMENOS varYVals .)
    DISTINTO        reduce using rule 108 (varsOps -> MENOSMENOS varYVals .)
    >               reduce using rule 108 (varsOps -> MENOSMENOS varYVals .)
    <               reduce using rule 108 (varsOps -> MENOSMENOS varYVals .)
    ;               reduce using rule 108 (varsOps -> MENOSMENOS varYVals .)
    ,               reduce using rule 108 (varsOps -> MENOSMENOS varYVals .)
    ]               reduce using rule 108 (varsOps -> MENOSMENOS varYVals .)
    :               reduce using rule 108 (varsOps -> MENOSMENOS varYVals .)
    }               reduce using rule 108 (varsOps -> MENOSMENOS varYVals .)


state 54

    (94) varYVals -> ID .
    (97) vecVal -> ID . m
    (99) m -> . [ INT ]
    (100) m -> . [ INT ] m
    (101) m -> . [ varYVals ] m
    (102) m -> . [ varYVals ]
    (103) m -> . [ eMat ] m
    (104) m -> . [ eMat ]

    MASMAS          reduce using rule 94 (varYVals -> ID .)
    MENOSMENOS      reduce using rule 94 (varYVals -> ID .)
    +               reduce using rule 94 (varYVals -> ID .)
    -               reduce using rule 94 (varYVals -> ID .)
    *               reduce using rule 94 (varYVals -> ID .)
    /               reduce using rule 94 (varYVals -> ID .)
    %               reduce using rule 94 (varYVals -> ID .)
    ^               reduce using rule 94 (varYVals -> ID .)
    ?               reduce using rule 94 (varYVals -> ID .)
    OR              reduce using rule 94 (varYVals -> ID .)
    AND             reduce using rule 94 (varYVals -> ID .)
    EQEQ            reduce using rule 94 (varYVals -> ID .)
    DISTINTO        reduce using rule 94 (varYVals -> ID .)
    >               reduce using rule 94 (varYVals -> ID .)
    <               reduce using rule 94 (varYVals -> ID .)
    ,               reduce using rule 94 (varYVals -> ID .)
    ]               reduce using rule 94 (varYVals -> ID .)
    )               reduce using rule 94 (varYVals -> ID .)
    ;               reduce using rule 94 (varYVals -> ID .)
    :               reduce using rule 94 (varYVals -> ID .)
    }               reduce using rule 94 (varYVals -> ID .)
    MULEQ           reduce using rule 94 (varYVals -> ID .)
    DIVEQ           reduce using rule 94 (varYVals -> ID .)
    MASEQ           reduce using rule 94 (varYVals -> ID .)
    MENOSEQ         reduce using rule 94 (varYVals -> ID .)
    =               reduce using rule 94 (varYVals -> ID .)
    [               shift and go to state 100

    m                              shift and go to state 98

state 55

    (33) loop -> FOR ( . primParam ; valores ; tercerParam )
    (36) primParam -> . varAsig
    (37) primParam -> . empty
    (113) varAsig -> . varYVals MULEQ valoresAsig
    (114) varAsig -> . varYVals DIVEQ valoresAsig
    (115) varAsig -> . varYVals MASEQ valoresAsig
    (116) varAsig -> . varYVals MENOSEQ valoresAsig
    (117) varAsig -> . varYVals = valoresAsig
    (118) varAsig -> . ID . ID = valoresAsig
    (54) empty -> .
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (55) vec -> . [ elem ]

    ID              shift and go to state 21
    ;               reduce using rule 54 (empty -> .)
    [               shift and go to state 20

    varAsig                        shift and go to state 126
    primParam                      shift and go to state 125
    vec                            shift and go to state 33
    varYVals                       shift and go to state 128
    vecVal                         shift and go to state 8
    empty                          shift and go to state 127

state 56

    (48) funcInt -> LENGTH ( . valores )
    (58) valores -> . eMat
    (59) valores -> . expBool
    (60) valores -> . funcReturn
    (61) valores -> . reg
    (62) valores -> . INT
    (63) valores -> . FLOAT
    (64) valores -> . STRING
    (65) valores -> . BOOL
    (66) valores -> . varYVals
    (67) valores -> . varsOps
    (68) valores -> . vec
    (69) valores -> . ternario
    (70) valores -> . atributos
    (71) valores -> . RES
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (105) reg -> . { campos }
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (55) vec -> . [ elem ]
    (182) ternario -> . ternarioMat
    (183) ternario -> . ternarioBool
    (184) ternario -> . ( ternarioMat )
    (185) ternario -> . ( ternarioBool )
    (186) ternario -> . ternarioVars
    (187) ternario -> . ( ternarioVars )
    (72) atributos -> . ID . valoresCampos
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 85
    FLOAT           shift and go to state 87
    STRING          shift and go to state 69
    BOOL            shift and go to state 90
    RES             shift and go to state 61
    {               shift and go to state 94
    ID              shift and go to state 84
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 71
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    ?               reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    ternario                       shift and go to state 59
    funcBool                       shift and go to state 60
    funcInt                        shift and go to state 62
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 68
    eMat                           shift and go to state 70
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 74
    vec                            shift and go to state 75
    paren                          shift and go to state 82
    reg                            shift and go to state 76
    expBool                        shift and go to state 77
    ternarioBool                   shift and go to state 78
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 86
    valores                        shift and go to state 129
    p                              shift and go to state 89
    varsOps                        shift and go to state 91
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 65
    varYVals                       shift and go to state 96
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 97

state 57

    (28) sentencia -> func ; .

    COMMENT         reduce using rule 28 (sentencia -> func ; .)
    IF              reduce using rule 28 (sentencia -> func ; .)
    DO              reduce using rule 28 (sentencia -> func ; .)
    WHILE           reduce using rule 28 (sentencia -> func ; .)
    FOR             reduce using rule 28 (sentencia -> func ; .)
    RETURN          reduce using rule 28 (sentencia -> func ; .)
    ;               reduce using rule 28 (sentencia -> func ; .)
    MENOSMENOS      reduce using rule 28 (sentencia -> func ; .)
    MASMAS          reduce using rule 28 (sentencia -> func ; .)
    ID              reduce using rule 28 (sentencia -> func ; .)
    PRINT           reduce using rule 28 (sentencia -> func ; .)
    MULTIESCALAR    reduce using rule 28 (sentencia -> func ; .)
    LENGTH          reduce using rule 28 (sentencia -> func ; .)
    CAPITALIZAR     reduce using rule 28 (sentencia -> func ; .)
    COLINEALES      reduce using rule 28 (sentencia -> func ; .)
    [               reduce using rule 28 (sentencia -> func ; .)
    $end            reduce using rule 28 (sentencia -> func ; .)
    ELSE            reduce using rule 28 (sentencia -> func ; .)
    }               reduce using rule 28 (sentencia -> func ; .)


state 58

    (192) expBool -> and .
    (193) and -> and . AND eq
    (195) and -> and . AND valoresBool

    OR              reduce using rule 192 (expBool -> and .)
    ?               reduce using rule 192 (expBool -> and .)
    ;               reduce using rule 192 (expBool -> and .)
    )               reduce using rule 192 (expBool -> and .)
    ,               reduce using rule 192 (expBool -> and .)
    :               reduce using rule 192 (expBool -> and .)
    ]               reduce using rule 192 (expBool -> and .)
    }               reduce using rule 192 (expBool -> and .)
    AND             shift and go to state 130


state 59

    (69) valores -> ternario .

    )               reduce using rule 69 (valores -> ternario .)
    ,               reduce using rule 69 (valores -> ternario .)
    ]               reduce using rule 69 (valores -> ternario .)
    ;               reduce using rule 69 (valores -> ternario .)
    }               reduce using rule 69 (valores -> ternario .)


state 60

    (46) funcReturn -> funcBool .
    (170) valoresBool -> funcBool .

    ,               reduce using rule 46 (funcReturn -> funcBool .)
    ]               reduce using rule 46 (funcReturn -> funcBool .)
    ;               reduce using rule 46 (funcReturn -> funcBool .)
    )               reduce using rule 46 (funcReturn -> funcBool .)
    }               reduce using rule 46 (funcReturn -> funcBool .)
    OR              reduce using rule 170 (valoresBool -> funcBool .)
    AND             reduce using rule 170 (valoresBool -> funcBool .)
    ?               reduce using rule 170 (valoresBool -> funcBool .)


state 61

    (71) valores -> RES .

    )               reduce using rule 71 (valores -> RES .)
    ,               reduce using rule 71 (valores -> RES .)
    ]               reduce using rule 71 (valores -> RES .)
    ;               reduce using rule 71 (valores -> RES .)
    }               reduce using rule 71 (valores -> RES .)


state 62

    (44) funcReturn -> funcInt .
    (121) valoresMat -> funcInt .
    (211) tCompare -> funcInt .

    ,               reduce using rule 44 (funcReturn -> funcInt .)
    ]               reduce using rule 44 (funcReturn -> funcInt .)
    ;               reduce using rule 44 (funcReturn -> funcInt .)
    )               reduce using rule 44 (funcReturn -> funcInt .)
    }               reduce using rule 44 (funcReturn -> funcInt .)
    +               reduce using rule 121 (valoresMat -> funcInt .)
    -               reduce using rule 121 (valoresMat -> funcInt .)
    *               reduce using rule 121 (valoresMat -> funcInt .)
    /               reduce using rule 121 (valoresMat -> funcInt .)
    %               reduce using rule 121 (valoresMat -> funcInt .)
    ^               reduce using rule 121 (valoresMat -> funcInt .)
    EQEQ            reduce using rule 211 (tCompare -> funcInt .)
    DISTINTO        reduce using rule 211 (tCompare -> funcInt .)
    >               reduce using rule 211 (tCompare -> funcInt .)
    <               reduce using rule 211 (tCompare -> funcInt .)


state 63

    (56) elem -> valores . , elem
    (57) elem -> valores .

    ,               shift and go to state 131
    ]               reduce using rule 57 (elem -> valores .)


state 64

    (216) mayor -> menor .

    EQEQ            reduce using rule 216 (mayor -> menor .)
    DISTINTO        reduce using rule 216 (mayor -> menor .)
    AND             reduce using rule 216 (mayor -> menor .)
    OR              reduce using rule 216 (mayor -> menor .)
    ?               reduce using rule 216 (mayor -> menor .)
    )               reduce using rule 216 (mayor -> menor .)
    :               reduce using rule 216 (mayor -> menor .)
    ,               reduce using rule 216 (mayor -> menor .)
    ]               reduce using rule 216 (mayor -> menor .)
    ;               reduce using rule 216 (mayor -> menor .)
    }               reduce using rule 216 (mayor -> menor .)


state 65

    (186) ternario -> ternarioVars .

    )               reduce using rule 186 (ternario -> ternarioVars .)
    ,               reduce using rule 186 (ternario -> ternarioVars .)
    }               reduce using rule 186 (ternario -> ternarioVars .)
    ]               reduce using rule 186 (ternario -> ternarioVars .)
    ;               reduce using rule 186 (ternario -> ternarioVars .)


state 66

    (137) eMat -> valoresMat . + p
    (138) eMat -> valoresMat . - p
    (141) eMat -> valoresMat . + valoresMat
    (142) eMat -> valoresMat . - valoresMat
    (147) p -> valoresMat . * exp
    (148) p -> valoresMat . / exp
    (149) p -> valoresMat . % exp
    (153) p -> valoresMat . * valoresMat
    (154) p -> valoresMat . / valoresMat
    (155) p -> valoresMat . % valoresMat
    (158) exp -> valoresMat . ^ iSing
    (160) exp -> valoresMat . ^ valoresMat

    +               shift and go to state 133
    -               shift and go to state 135
    *               shift and go to state 134
    /               shift and go to state 136
    %               shift and go to state 132
    ^               shift and go to state 137


state 67

    (197) and -> eq .
    (198) eq -> eq . EQEQ mayor
    (199) eq -> eq . DISTINTO mayor
    (202) eq -> eq . EQEQ tCompare
    (203) eq -> eq . DISTINTO tCompare

    AND             reduce using rule 197 (and -> eq .)
    ?               reduce using rule 197 (and -> eq .)
    OR              reduce using rule 197 (and -> eq .)
    :               reduce using rule 197 (and -> eq .)
    )               reduce using rule 197 (and -> eq .)
    ,               reduce using rule 197 (and -> eq .)
    }               reduce using rule 197 (and -> eq .)
    ]               reduce using rule 197 (and -> eq .)
    ;               reduce using rule 197 (and -> eq .)
    EQEQ            shift and go to state 138
    DISTINTO        shift and go to state 139


state 68

    (189) expBool -> valoresBool . OR and
    (191) expBool -> valoresBool . OR valoresBool
    (194) and -> valoresBool . AND eq
    (196) and -> valoresBool . AND valoresBool
    (126) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (175) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (76) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars

    OR              shift and go to state 141
    AND             shift and go to state 140
    ?               shift and go to state 142


state 69

    (64) valores -> STRING .
    (124) valoresMat -> STRING .

    )               reduce using rule 64 (valores -> STRING .)
    ,               reduce using rule 64 (valores -> STRING .)
    ]               reduce using rule 64 (valores -> STRING .)
    ;               reduce using rule 64 (valores -> STRING .)
    }               reduce using rule 64 (valores -> STRING .)
    +               reduce using rule 124 (valoresMat -> STRING .)
    -               reduce using rule 124 (valoresMat -> STRING .)
    *               reduce using rule 124 (valoresMat -> STRING .)
    /               reduce using rule 124 (valoresMat -> STRING .)
    %               reduce using rule 124 (valoresMat -> STRING .)
    ^               reduce using rule 124 (valoresMat -> STRING .)


state 70

    (58) valores -> eMat .
    (135) eMat -> eMat . + p
    (136) eMat -> eMat . - p
    (139) eMat -> eMat . + valoresMat
    (140) eMat -> eMat . - valoresMat
    (207) tCompare -> eMat .

    )               reduce using rule 58 (valores -> eMat .)
    ,               reduce using rule 58 (valores -> eMat .)
    ]               reduce using rule 58 (valores -> eMat .)
    ;               reduce using rule 58 (valores -> eMat .)
    }               reduce using rule 58 (valores -> eMat .)
    +               shift and go to state 143
    -               shift and go to state 144
    EQEQ            reduce using rule 207 (tCompare -> eMat .)
    DISTINTO        reduce using rule 207 (tCompare -> eMat .)
    >               reduce using rule 207 (tCompare -> eMat .)
    <               reduce using rule 207 (tCompare -> eMat .)


state 71

    (184) ternario -> ( . ternarioMat )
    (185) ternario -> ( . ternarioBool )
    (187) ternario -> ( . ternarioVars )
    (125) valoresMat -> ( . ternarioMat )
    (173) valoresBool -> ( . ternarioBool )
    (213) tCompare -> ( . ternarioBool )
    (214) tCompare -> ( . ternarioMat )
    (167) paren -> ( . eMat )
    (168) paren -> ( . valoresMat )
    (222) parenBool -> ( . expBool )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (50) funcBool -> . COLINEALES ( valores , valores )
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (55) vec -> . [ elem ]
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 154
    FLOAT           shift and go to state 155
    STRING          shift and go to state 152
    (               shift and go to state 150
    BOOL            shift and go to state 156
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    [               shift and go to state 20
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 146
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 147
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 149
    valoresBool                    shift and go to state 148
    ternarioMat                    shift and go to state 151
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    varsOps                        shift and go to state 157
    ternarioBool                   shift and go to state 153
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    p                              shift and go to state 89
    iSing                          shift and go to state 79
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 158
    varYVals                       shift and go to state 159
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 160

state 72

    (163) iSing -> + . paren
    (165) iSing -> + . valoresMat
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (55) vec -> . [ elem ]

    (               shift and go to state 163
    INT             shift and go to state 166
    FLOAT           shift and go to state 165
    STRING          shift and go to state 152
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20

    funcInt                        shift and go to state 161
    varsOps                        shift and go to state 167
    valoresMat                     shift and go to state 162
    paren                          shift and go to state 164
    varYVals                       shift and go to state 168
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33

state 73

    (162) iSing -> - . paren
    (164) iSing -> - . valoresMat
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (55) vec -> . [ elem ]

    (               shift and go to state 163
    INT             shift and go to state 166
    FLOAT           shift and go to state 165
    STRING          shift and go to state 152
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20

    funcInt                        shift and go to state 161
    varsOps                        shift and go to state 167
    valoresMat                     shift and go to state 169
    paren                          shift and go to state 170
    varYVals                       shift and go to state 168
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33

state 74

    (182) ternario -> ternarioMat .

    )               reduce using rule 182 (ternario -> ternarioMat .)
    ,               reduce using rule 182 (ternario -> ternarioMat .)
    }               reduce using rule 182 (ternario -> ternarioMat .)
    ]               reduce using rule 182 (ternario -> ternarioMat .)
    ;               reduce using rule 182 (ternario -> ternarioMat .)


state 75

    (68) valores -> vec .
    (98) vecVal -> vec . m
    (99) m -> . [ INT ]
    (100) m -> . [ INT ] m
    (101) m -> . [ varYVals ] m
    (102) m -> . [ varYVals ]
    (103) m -> . [ eMat ] m
    (104) m -> . [ eMat ]

    )               reduce using rule 68 (valores -> vec .)
    ,               reduce using rule 68 (valores -> vec .)
    ]               reduce using rule 68 (valores -> vec .)
    ;               reduce using rule 68 (valores -> vec .)
    }               reduce using rule 68 (valores -> vec .)
    [               shift and go to state 100

    m                              shift and go to state 110

state 76

    (61) valores -> reg .

    )               reduce using rule 61 (valores -> reg .)
    ,               reduce using rule 61 (valores -> reg .)
    ]               reduce using rule 61 (valores -> reg .)
    ;               reduce using rule 61 (valores -> reg .)
    }               reduce using rule 61 (valores -> reg .)


state 77

    (59) valores -> expBool .
    (188) expBool -> expBool . OR and
    (190) expBool -> expBool . OR valoresBool
    (127) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (176) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (81) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars

    )               reduce using rule 59 (valores -> expBool .)
    ,               reduce using rule 59 (valores -> expBool .)
    ]               reduce using rule 59 (valores -> expBool .)
    ;               reduce using rule 59 (valores -> expBool .)
    }               reduce using rule 59 (valores -> expBool .)
    OR              shift and go to state 171
    ?               shift and go to state 172


state 78

    (183) ternario -> ternarioBool .

    )               reduce using rule 183 (ternario -> ternarioBool .)
    ,               reduce using rule 183 (ternario -> ternarioBool .)
    }               reduce using rule 183 (ternario -> ternarioBool .)
    ]               reduce using rule 183 (ternario -> ternarioBool .)
    ;               reduce using rule 183 (ternario -> ternarioBool .)


state 79

    (161) exp -> iSing .

    ^               reduce using rule 161 (exp -> iSing .)
    *               reduce using rule 161 (exp -> iSing .)
    /               reduce using rule 161 (exp -> iSing .)
    %               reduce using rule 161 (exp -> iSing .)
    +               reduce using rule 161 (exp -> iSing .)
    -               reduce using rule 161 (exp -> iSing .)
    EQEQ            reduce using rule 161 (exp -> iSing .)
    DISTINTO        reduce using rule 161 (exp -> iSing .)
    >               reduce using rule 161 (exp -> iSing .)
    <               reduce using rule 161 (exp -> iSing .)
    :               reduce using rule 161 (exp -> iSing .)
    AND             reduce using rule 161 (exp -> iSing .)
    OR              reduce using rule 161 (exp -> iSing .)
    ?               reduce using rule 161 (exp -> iSing .)
    ,               reduce using rule 161 (exp -> iSing .)
    ]               reduce using rule 161 (exp -> iSing .)
    )               reduce using rule 161 (exp -> iSing .)
    ;               reduce using rule 161 (exp -> iSing .)
    }               reduce using rule 161 (exp -> iSing .)


state 80

    (221) not -> parenBool .

    EQEQ            reduce using rule 221 (not -> parenBool .)
    DISTINTO        reduce using rule 221 (not -> parenBool .)
    AND             reduce using rule 221 (not -> parenBool .)
    )               reduce using rule 221 (not -> parenBool .)
    ?               reduce using rule 221 (not -> parenBool .)
    OR              reduce using rule 221 (not -> parenBool .)
    ;               reduce using rule 221 (not -> parenBool .)
    :               reduce using rule 221 (not -> parenBool .)
    ,               reduce using rule 221 (not -> parenBool .)
    ]               reduce using rule 221 (not -> parenBool .)
    }               reduce using rule 221 (not -> parenBool .)


state 81

    (200) eq -> tCompare . EQEQ mayor
    (201) eq -> tCompare . DISTINTO mayor
    (204) eq -> tCompare . EQEQ tCompare
    (205) eq -> tCompare . DISTINTO tCompare
    (215) mayor -> tCompare . > tCompare
    (217) menor -> tCompare . < tCompare

    EQEQ            shift and go to state 174
    DISTINTO        shift and go to state 173
    >               shift and go to state 176
    <               shift and go to state 175


state 82

    (166) iSing -> paren .

    ^               reduce using rule 166 (iSing -> paren .)
    *               reduce using rule 166 (iSing -> paren .)
    /               reduce using rule 166 (iSing -> paren .)
    %               reduce using rule 166 (iSing -> paren .)
    +               reduce using rule 166 (iSing -> paren .)
    -               reduce using rule 166 (iSing -> paren .)
    )               reduce using rule 166 (iSing -> paren .)
    EQEQ            reduce using rule 166 (iSing -> paren .)
    DISTINTO        reduce using rule 166 (iSing -> paren .)
    >               reduce using rule 166 (iSing -> paren .)
    <               reduce using rule 166 (iSing -> paren .)
    ,               reduce using rule 166 (iSing -> paren .)
    ]               reduce using rule 166 (iSing -> paren .)
    ;               reduce using rule 166 (iSing -> paren .)
    AND             reduce using rule 166 (iSing -> paren .)
    OR              reduce using rule 166 (iSing -> paren .)
    ?               reduce using rule 166 (iSing -> paren .)
    :               reduce using rule 166 (iSing -> paren .)
    }               reduce using rule 166 (iSing -> paren .)


state 83

    (218) menor -> not .

    EQEQ            reduce using rule 218 (menor -> not .)
    DISTINTO        reduce using rule 218 (menor -> not .)
    AND             reduce using rule 218 (menor -> not .)
    ?               reduce using rule 218 (menor -> not .)
    OR              reduce using rule 218 (menor -> not .)
    ,               reduce using rule 218 (menor -> not .)
    ]               reduce using rule 218 (menor -> not .)
    )               reduce using rule 218 (menor -> not .)
    ;               reduce using rule 218 (menor -> not .)
    :               reduce using rule 218 (menor -> not .)
    }               reduce using rule 218 (menor -> not .)


state 84

    (94) varYVals -> ID .
    (72) atributos -> ID . . valoresCampos
    (97) vecVal -> ID . m
    (99) m -> . [ INT ]
    (100) m -> . [ INT ] m
    (101) m -> . [ varYVals ] m
    (102) m -> . [ varYVals ]
    (103) m -> . [ eMat ] m
    (104) m -> . [ eMat ]

    MASMAS          reduce using rule 94 (varYVals -> ID .)
    MENOSMENOS      reduce using rule 94 (varYVals -> ID .)
    )               reduce using rule 94 (varYVals -> ID .)
    +               reduce using rule 94 (varYVals -> ID .)
    -               reduce using rule 94 (varYVals -> ID .)
    *               reduce using rule 94 (varYVals -> ID .)
    /               reduce using rule 94 (varYVals -> ID .)
    %               reduce using rule 94 (varYVals -> ID .)
    ^               reduce using rule 94 (varYVals -> ID .)
    OR              reduce using rule 94 (varYVals -> ID .)
    AND             reduce using rule 94 (varYVals -> ID .)
    ?               reduce using rule 94 (varYVals -> ID .)
    EQEQ            reduce using rule 94 (varYVals -> ID .)
    DISTINTO        reduce using rule 94 (varYVals -> ID .)
    >               reduce using rule 94 (varYVals -> ID .)
    <               reduce using rule 94 (varYVals -> ID .)
    ,               reduce using rule 94 (varYVals -> ID .)
    }               reduce using rule 94 (varYVals -> ID .)
    ]               reduce using rule 94 (varYVals -> ID .)
    ;               reduce using rule 94 (varYVals -> ID .)
    :               reduce using rule 94 (varYVals -> ID .)
    .               shift and go to state 177
    [               shift and go to state 100

    m                              shift and go to state 98

state 85

    (62) valores -> INT .
    (119) valoresMat -> INT .
    (210) tCompare -> INT .

    )               reduce using rule 62 (valores -> INT .)
    ,               reduce using rule 62 (valores -> INT .)
    ]               reduce using rule 62 (valores -> INT .)
    ;               reduce using rule 62 (valores -> INT .)
    }               reduce using rule 62 (valores -> INT .)
    +               reduce using rule 119 (valoresMat -> INT .)
    -               reduce using rule 119 (valoresMat -> INT .)
    *               reduce using rule 119 (valoresMat -> INT .)
    /               reduce using rule 119 (valoresMat -> INT .)
    %               reduce using rule 119 (valoresMat -> INT .)
    ^               reduce using rule 119 (valoresMat -> INT .)
    EQEQ            reduce using rule 210 (tCompare -> INT .)
    DISTINTO        reduce using rule 210 (tCompare -> INT .)
    >               reduce using rule 210 (tCompare -> INT .)
    <               reduce using rule 210 (tCompare -> INT .)


state 86

    (60) valores -> funcReturn .

    )               reduce using rule 60 (valores -> funcReturn .)
    ,               reduce using rule 60 (valores -> funcReturn .)
    ]               reduce using rule 60 (valores -> funcReturn .)
    ;               reduce using rule 60 (valores -> funcReturn .)
    }               reduce using rule 60 (valores -> funcReturn .)


state 87

    (63) valores -> FLOAT .
    (120) valoresMat -> FLOAT .
    (212) tCompare -> FLOAT .

    )               reduce using rule 63 (valores -> FLOAT .)
    ,               reduce using rule 63 (valores -> FLOAT .)
    ]               reduce using rule 63 (valores -> FLOAT .)
    ;               reduce using rule 63 (valores -> FLOAT .)
    }               reduce using rule 63 (valores -> FLOAT .)
    +               reduce using rule 120 (valoresMat -> FLOAT .)
    -               reduce using rule 120 (valoresMat -> FLOAT .)
    *               reduce using rule 120 (valoresMat -> FLOAT .)
    /               reduce using rule 120 (valoresMat -> FLOAT .)
    %               reduce using rule 120 (valoresMat -> FLOAT .)
    ^               reduce using rule 120 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 212 (tCompare -> FLOAT .)
    DISTINTO        reduce using rule 212 (tCompare -> FLOAT .)
    >               reduce using rule 212 (tCompare -> FLOAT .)
    <               reduce using rule 212 (tCompare -> FLOAT .)


state 88

    (55) vec -> [ elem . ]

    ]               shift and go to state 178


state 89

    (143) eMat -> p .
    (144) p -> p . * exp
    (145) p -> p . / exp
    (146) p -> p . % exp
    (150) p -> p . * valoresMat
    (151) p -> p . / valoresMat
    (152) p -> p . % valoresMat

    +               reduce using rule 143 (eMat -> p .)
    -               reduce using rule 143 (eMat -> p .)
    :               reduce using rule 143 (eMat -> p .)
    EQEQ            reduce using rule 143 (eMat -> p .)
    DISTINTO        reduce using rule 143 (eMat -> p .)
    >               reduce using rule 143 (eMat -> p .)
    <               reduce using rule 143 (eMat -> p .)
    AND             reduce using rule 143 (eMat -> p .)
    OR              reduce using rule 143 (eMat -> p .)
    ?               reduce using rule 143 (eMat -> p .)
    ,               reduce using rule 143 (eMat -> p .)
    ]               reduce using rule 143 (eMat -> p .)
    )               reduce using rule 143 (eMat -> p .)
    ;               reduce using rule 143 (eMat -> p .)
    }               reduce using rule 143 (eMat -> p .)
    *               shift and go to state 180
    /               shift and go to state 181
    %               shift and go to state 179


state 90

    (65) valores -> BOOL .
    (169) valoresBool -> BOOL .

    )               reduce using rule 65 (valores -> BOOL .)
    ,               reduce using rule 65 (valores -> BOOL .)
    ]               reduce using rule 65 (valores -> BOOL .)
    ;               reduce using rule 65 (valores -> BOOL .)
    }               reduce using rule 65 (valores -> BOOL .)
    OR              reduce using rule 169 (valoresBool -> BOOL .)
    AND             reduce using rule 169 (valoresBool -> BOOL .)
    ?               reduce using rule 169 (valoresBool -> BOOL .)


state 91

    (67) valores -> varsOps .
    (123) valoresMat -> varsOps .
    (172) valoresBool -> varsOps .
    (208) tCompare -> varsOps .

    )               reduce using rule 67 (valores -> varsOps .)
    ,               reduce using rule 67 (valores -> varsOps .)
    ]               reduce using rule 67 (valores -> varsOps .)
    ;               reduce using rule 67 (valores -> varsOps .)
    }               reduce using rule 67 (valores -> varsOps .)
    +               reduce using rule 123 (valoresMat -> varsOps .)
    -               reduce using rule 123 (valoresMat -> varsOps .)
    *               reduce using rule 123 (valoresMat -> varsOps .)
    /               reduce using rule 123 (valoresMat -> varsOps .)
    %               reduce using rule 123 (valoresMat -> varsOps .)
    ^               reduce using rule 123 (valoresMat -> varsOps .)
    OR              reduce using rule 172 (valoresBool -> varsOps .)
    AND             reduce using rule 172 (valoresBool -> varsOps .)
    ?               reduce using rule 172 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 208 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 208 (tCompare -> varsOps .)
    >               reduce using rule 208 (tCompare -> varsOps .)
    <               reduce using rule 208 (tCompare -> varsOps .)


state 92

    (219) not -> NOT . not
    (220) not -> NOT . valoresBool
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (222) parenBool -> . ( expBool )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (55) vec -> . [ elem ]

    NOT             shift and go to state 92
    BOOL            shift and go to state 156
    (               shift and go to state 183
    EQEQ            reduce using rule 174 (valoresBool -> .)
    DISTINTO        reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    ?               reduce using rule 174 (valoresBool -> .)
    ,               reduce using rule 174 (valoresBool -> .)
    ]               reduce using rule 174 (valoresBool -> .)
    )               reduce using rule 174 (valoresBool -> .)
    ;               reduce using rule 174 (valoresBool -> .)
    :               reduce using rule 174 (valoresBool -> .)
    }               reduce using rule 174 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20

    funcBool                       shift and go to state 145
    parenBool                      shift and go to state 80
    varsOps                        shift and go to state 185
    vecVal                         shift and go to state 8
    not                            shift and go to state 184
    varYVals                       shift and go to state 186
    valoresBool                    shift and go to state 182
    vec                            shift and go to state 33

state 93

    (156) p -> exp .
    (157) exp -> exp . ^ iSing
    (159) exp -> exp . ^ valoresMat

    *               reduce using rule 156 (p -> exp .)
    /               reduce using rule 156 (p -> exp .)
    %               reduce using rule 156 (p -> exp .)
    +               reduce using rule 156 (p -> exp .)
    -               reduce using rule 156 (p -> exp .)
    EQEQ            reduce using rule 156 (p -> exp .)
    DISTINTO        reduce using rule 156 (p -> exp .)
    >               reduce using rule 156 (p -> exp .)
    <               reduce using rule 156 (p -> exp .)
    :               reduce using rule 156 (p -> exp .)
    ;               reduce using rule 156 (p -> exp .)
    )               reduce using rule 156 (p -> exp .)
    ,               reduce using rule 156 (p -> exp .)
    ]               reduce using rule 156 (p -> exp .)
    }               reduce using rule 156 (p -> exp .)
    AND             reduce using rule 156 (p -> exp .)
    OR              reduce using rule 156 (p -> exp .)
    ?               reduce using rule 156 (p -> exp .)
    ^               shift and go to state 187


state 94

    (105) reg -> { . campos }
    (106) campos -> . ID : valores , campos
    (107) campos -> . ID : valores

    ID              shift and go to state 189

    campos                         shift and go to state 188

state 95

    (206) eq -> mayor .

    EQEQ            reduce using rule 206 (eq -> mayor .)
    DISTINTO        reduce using rule 206 (eq -> mayor .)
    AND             reduce using rule 206 (eq -> mayor .)
    ?               reduce using rule 206 (eq -> mayor .)
    OR              reduce using rule 206 (eq -> mayor .)
    :               reduce using rule 206 (eq -> mayor .)
    )               reduce using rule 206 (eq -> mayor .)
    ,               reduce using rule 206 (eq -> mayor .)
    ]               reduce using rule 206 (eq -> mayor .)
    ;               reduce using rule 206 (eq -> mayor .)
    }               reduce using rule 206 (eq -> mayor .)


state 96

    (66) valores -> varYVals .
    (110) varsOps -> varYVals . MASMAS
    (111) varsOps -> varYVals . MENOSMENOS
    (122) valoresMat -> varYVals .
    (171) valoresBool -> varYVals .
    (209) tCompare -> varYVals .

    )               reduce using rule 66 (valores -> varYVals .)
    ,               reduce using rule 66 (valores -> varYVals .)
    ]               reduce using rule 66 (valores -> varYVals .)
    ;               reduce using rule 66 (valores -> varYVals .)
    }               reduce using rule 66 (valores -> varYVals .)
    MASMAS          shift and go to state 49
    MENOSMENOS      shift and go to state 46
    +               reduce using rule 122 (valoresMat -> varYVals .)
    -               reduce using rule 122 (valoresMat -> varYVals .)
    *               reduce using rule 122 (valoresMat -> varYVals .)
    /               reduce using rule 122 (valoresMat -> varYVals .)
    %               reduce using rule 122 (valoresMat -> varYVals .)
    ^               reduce using rule 122 (valoresMat -> varYVals .)
    OR              reduce using rule 171 (valoresBool -> varYVals .)
    AND             reduce using rule 171 (valoresBool -> varYVals .)
    ?               reduce using rule 171 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 209 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 209 (tCompare -> varYVals .)
    >               reduce using rule 209 (tCompare -> varYVals .)
    <               reduce using rule 209 (tCompare -> varYVals .)


state 97

    (70) valores -> atributos .

    )               reduce using rule 70 (valores -> atributos .)
    ,               reduce using rule 70 (valores -> atributos .)
    ]               reduce using rule 70 (valores -> atributos .)
    ;               reduce using rule 70 (valores -> atributos .)
    }               reduce using rule 70 (valores -> atributos .)


state 98

    (97) vecVal -> ID m .

    .               reduce using rule 97 (vecVal -> ID m .)
    MASMAS          reduce using rule 97 (vecVal -> ID m .)
    MENOSMENOS      reduce using rule 97 (vecVal -> ID m .)
    AND             reduce using rule 97 (vecVal -> ID m .)
    OR              reduce using rule 97 (vecVal -> ID m .)
    ?               reduce using rule 97 (vecVal -> ID m .)
    ,               reduce using rule 97 (vecVal -> ID m .)
    ]               reduce using rule 97 (vecVal -> ID m .)
    )               reduce using rule 97 (vecVal -> ID m .)
    ;               reduce using rule 97 (vecVal -> ID m .)
    :               reduce using rule 97 (vecVal -> ID m .)
    }               reduce using rule 97 (vecVal -> ID m .)
    EQEQ            reduce using rule 97 (vecVal -> ID m .)
    DISTINTO        reduce using rule 97 (vecVal -> ID m .)
    >               reduce using rule 97 (vecVal -> ID m .)
    <               reduce using rule 97 (vecVal -> ID m .)
    +               reduce using rule 97 (vecVal -> ID m .)
    -               reduce using rule 97 (vecVal -> ID m .)
    *               reduce using rule 97 (vecVal -> ID m .)
    /               reduce using rule 97 (vecVal -> ID m .)
    %               reduce using rule 97 (vecVal -> ID m .)
    ^               reduce using rule 97 (vecVal -> ID m .)
    MULEQ           reduce using rule 97 (vecVal -> ID m .)
    DIVEQ           reduce using rule 97 (vecVal -> ID m .)
    MASEQ           reduce using rule 97 (vecVal -> ID m .)
    MENOSEQ         reduce using rule 97 (vecVal -> ID m .)
    =               reduce using rule 97 (vecVal -> ID m .)


state 99

    (118) varAsig -> ID . . ID = valoresAsig

    ID              shift and go to state 190


state 100

    (99) m -> [ . INT ]
    (100) m -> [ . INT ] m
    (101) m -> [ . varYVals ] m
    (102) m -> [ . varYVals ]
    (103) m -> [ . eMat ] m
    (104) m -> [ . eMat ]
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (55) vec -> . [ elem ]
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )

    INT             shift and go to state 193
    ID              shift and go to state 54
    FLOAT           shift and go to state 165
    STRING          shift and go to state 152
    (               shift and go to state 192
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    -               shift and go to state 73
    +               shift and go to state 72

    iSing                          shift and go to state 79
    eMat                           shift and go to state 191
    funcInt                        shift and go to state 161
    p                              shift and go to state 89
    vec                            shift and go to state 33
    valoresMat                     shift and go to state 66
    paren                          shift and go to state 82
    exp                            shift and go to state 93
    varYVals                       shift and go to state 194
    vecVal                         shift and go to state 8
    varsOps                        shift and go to state 167

state 101

    (6) lAbierta -> IF ( . cosaBooleana ) linea
    (7) lAbierta -> IF ( . cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> IF ( . cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> IF ( . cosaBooleana ) { g }
    (14) lCerrada -> IF ( . cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( . cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (34) cosaBooleana -> . expBool
    (35) cosaBooleana -> . valoresBool
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (50) funcBool -> . COLINEALES ( valores , valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (55) vec -> . [ elem ]
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (222) parenBool -> . ( expBool )
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )

    BOOL            shift and go to state 156
    (               shift and go to state 198
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    )               reduce using rule 174 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 152
    NOT             shift and go to state 92
    -               shift and go to state 73
    +               shift and go to state 72

    and                            shift and go to state 58
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 195
    menor                          shift and go to state 64
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 196
    eMat                           shift and go to state 197
    mayor                          shift and go to state 95
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    varsOps                        shift and go to state 202
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    cosaBooleana                   shift and go to state 199
    p                              shift and go to state 89
    exp                            shift and go to state 93
    varYVals                       shift and go to state 203
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 204

state 102

    (29) sentencia -> varAsig ; .

    COMMENT         reduce using rule 29 (sentencia -> varAsig ; .)
    IF              reduce using rule 29 (sentencia -> varAsig ; .)
    DO              reduce using rule 29 (sentencia -> varAsig ; .)
    WHILE           reduce using rule 29 (sentencia -> varAsig ; .)
    FOR             reduce using rule 29 (sentencia -> varAsig ; .)
    RETURN          reduce using rule 29 (sentencia -> varAsig ; .)
    ;               reduce using rule 29 (sentencia -> varAsig ; .)
    MENOSMENOS      reduce using rule 29 (sentencia -> varAsig ; .)
    MASMAS          reduce using rule 29 (sentencia -> varAsig ; .)
    ID              reduce using rule 29 (sentencia -> varAsig ; .)
    PRINT           reduce using rule 29 (sentencia -> varAsig ; .)
    MULTIESCALAR    reduce using rule 29 (sentencia -> varAsig ; .)
    LENGTH          reduce using rule 29 (sentencia -> varAsig ; .)
    CAPITALIZAR     reduce using rule 29 (sentencia -> varAsig ; .)
    COLINEALES      reduce using rule 29 (sentencia -> varAsig ; .)
    [               reduce using rule 29 (sentencia -> varAsig ; .)
    $end            reduce using rule 29 (sentencia -> varAsig ; .)
    ELSE            reduce using rule 29 (sentencia -> varAsig ; .)
    }               reduce using rule 29 (sentencia -> varAsig ; .)


state 103

    (47) funcInt -> MULTIESCALAR ( . valores , valores param )
    (58) valores -> . eMat
    (59) valores -> . expBool
    (60) valores -> . funcReturn
    (61) valores -> . reg
    (62) valores -> . INT
    (63) valores -> . FLOAT
    (64) valores -> . STRING
    (65) valores -> . BOOL
    (66) valores -> . varYVals
    (67) valores -> . varsOps
    (68) valores -> . vec
    (69) valores -> . ternario
    (70) valores -> . atributos
    (71) valores -> . RES
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (105) reg -> . { campos }
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (55) vec -> . [ elem ]
    (182) ternario -> . ternarioMat
    (183) ternario -> . ternarioBool
    (184) ternario -> . ( ternarioMat )
    (185) ternario -> . ( ternarioBool )
    (186) ternario -> . ternarioVars
    (187) ternario -> . ( ternarioVars )
    (72) atributos -> . ID . valoresCampos
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 85
    FLOAT           shift and go to state 87
    STRING          shift and go to state 69
    BOOL            shift and go to state 90
    RES             shift and go to state 61
    {               shift and go to state 94
    ID              shift and go to state 84
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 71
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    ?               reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    ternario                       shift and go to state 59
    funcBool                       shift and go to state 60
    funcInt                        shift and go to state 62
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 68
    eMat                           shift and go to state 70
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 74
    vec                            shift and go to state 75
    paren                          shift and go to state 82
    reg                            shift and go to state 76
    expBool                        shift and go to state 77
    ternarioBool                   shift and go to state 78
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 86
    valores                        shift and go to state 205
    p                              shift and go to state 89
    varsOps                        shift and go to state 91
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 65
    varYVals                       shift and go to state 96
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 97

state 104

    (49) funcString -> CAPITALIZAR ( . valores )
    (58) valores -> . eMat
    (59) valores -> . expBool
    (60) valores -> . funcReturn
    (61) valores -> . reg
    (62) valores -> . INT
    (63) valores -> . FLOAT
    (64) valores -> . STRING
    (65) valores -> . BOOL
    (66) valores -> . varYVals
    (67) valores -> . varsOps
    (68) valores -> . vec
    (69) valores -> . ternario
    (70) valores -> . atributos
    (71) valores -> . RES
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (105) reg -> . { campos }
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (55) vec -> . [ elem ]
    (182) ternario -> . ternarioMat
    (183) ternario -> . ternarioBool
    (184) ternario -> . ( ternarioMat )
    (185) ternario -> . ( ternarioBool )
    (186) ternario -> . ternarioVars
    (187) ternario -> . ( ternarioVars )
    (72) atributos -> . ID . valoresCampos
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 85
    FLOAT           shift and go to state 87
    STRING          shift and go to state 69
    BOOL            shift and go to state 90
    RES             shift and go to state 61
    {               shift and go to state 94
    ID              shift and go to state 84
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 71
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    ?               reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    ternario                       shift and go to state 59
    funcBool                       shift and go to state 60
    funcInt                        shift and go to state 62
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 68
    eMat                           shift and go to state 70
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 74
    vec                            shift and go to state 75
    paren                          shift and go to state 82
    reg                            shift and go to state 76
    expBool                        shift and go to state 77
    ternarioBool                   shift and go to state 78
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 86
    valores                        shift and go to state 206
    p                              shift and go to state 89
    varsOps                        shift and go to state 91
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 65
    varYVals                       shift and go to state 96
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 97

state 105

    (109) varsOps -> MASMAS varYVals .

    )               reduce using rule 109 (varsOps -> MASMAS varYVals .)
    +               reduce using rule 109 (varsOps -> MASMAS varYVals .)
    -               reduce using rule 109 (varsOps -> MASMAS varYVals .)
    *               reduce using rule 109 (varsOps -> MASMAS varYVals .)
    /               reduce using rule 109 (varsOps -> MASMAS varYVals .)
    %               reduce using rule 109 (varsOps -> MASMAS varYVals .)
    ^               reduce using rule 109 (varsOps -> MASMAS varYVals .)
    ?               reduce using rule 109 (varsOps -> MASMAS varYVals .)
    OR              reduce using rule 109 (varsOps -> MASMAS varYVals .)
    AND             reduce using rule 109 (varsOps -> MASMAS varYVals .)
    EQEQ            reduce using rule 109 (varsOps -> MASMAS varYVals .)
    DISTINTO        reduce using rule 109 (varsOps -> MASMAS varYVals .)
    >               reduce using rule 109 (varsOps -> MASMAS varYVals .)
    <               reduce using rule 109 (varsOps -> MASMAS varYVals .)
    ;               reduce using rule 109 (varsOps -> MASMAS varYVals .)
    ,               reduce using rule 109 (varsOps -> MASMAS varYVals .)
    ]               reduce using rule 109 (varsOps -> MASMAS varYVals .)
    :               reduce using rule 109 (varsOps -> MASMAS varYVals .)
    }               reduce using rule 109 (varsOps -> MASMAS varYVals .)


state 106

    (24) lCerrada -> loop COMMENT . com lCerrada
    (12) com -> . COMMENT com
    (13) com -> . empty
    (54) empty -> .

    COMMENT         shift and go to state 207
    IF              reduce using rule 54 (empty -> .)
    DO              reduce using rule 54 (empty -> .)
    RETURN          reduce using rule 54 (empty -> .)
    ;               reduce using rule 54 (empty -> .)
    WHILE           reduce using rule 54 (empty -> .)
    FOR             reduce using rule 54 (empty -> .)
    MENOSMENOS      reduce using rule 54 (empty -> .)
    MASMAS          reduce using rule 54 (empty -> .)
    ID              reduce using rule 54 (empty -> .)
    PRINT           reduce using rule 54 (empty -> .)
    MULTIESCALAR    reduce using rule 54 (empty -> .)
    LENGTH          reduce using rule 54 (empty -> .)
    CAPITALIZAR     reduce using rule 54 (empty -> .)
    COLINEALES      reduce using rule 54 (empty -> .)
    [               reduce using rule 54 (empty -> .)

    com                            shift and go to state 208
    empty                          shift and go to state 209

state 107

    (23) lCerrada -> loop lCerrada .

    WHILE           reduce using rule 23 (lCerrada -> loop lCerrada .)
    COMMENT         reduce using rule 23 (lCerrada -> loop lCerrada .)
    IF              reduce using rule 23 (lCerrada -> loop lCerrada .)
    DO              reduce using rule 23 (lCerrada -> loop lCerrada .)
    FOR             reduce using rule 23 (lCerrada -> loop lCerrada .)
    RETURN          reduce using rule 23 (lCerrada -> loop lCerrada .)
    ;               reduce using rule 23 (lCerrada -> loop lCerrada .)
    MENOSMENOS      reduce using rule 23 (lCerrada -> loop lCerrada .)
    MASMAS          reduce using rule 23 (lCerrada -> loop lCerrada .)
    ID              reduce using rule 23 (lCerrada -> loop lCerrada .)
    PRINT           reduce using rule 23 (lCerrada -> loop lCerrada .)
    MULTIESCALAR    reduce using rule 23 (lCerrada -> loop lCerrada .)
    LENGTH          reduce using rule 23 (lCerrada -> loop lCerrada .)
    CAPITALIZAR     reduce using rule 23 (lCerrada -> loop lCerrada .)
    COLINEALES      reduce using rule 23 (lCerrada -> loop lCerrada .)
    [               reduce using rule 23 (lCerrada -> loop lCerrada .)
    $end            reduce using rule 23 (lCerrada -> loop lCerrada .)
    }               reduce using rule 23 (lCerrada -> loop lCerrada .)
    ELSE            reduce using rule 23 (lCerrada -> loop lCerrada .)


state 108

    (10) lAbierta -> loop lAbierta .

    COMMENT         reduce using rule 10 (lAbierta -> loop lAbierta .)
    IF              reduce using rule 10 (lAbierta -> loop lAbierta .)
    DO              reduce using rule 10 (lAbierta -> loop lAbierta .)
    WHILE           reduce using rule 10 (lAbierta -> loop lAbierta .)
    FOR             reduce using rule 10 (lAbierta -> loop lAbierta .)
    RETURN          reduce using rule 10 (lAbierta -> loop lAbierta .)
    ;               reduce using rule 10 (lAbierta -> loop lAbierta .)
    MENOSMENOS      reduce using rule 10 (lAbierta -> loop lAbierta .)
    MASMAS          reduce using rule 10 (lAbierta -> loop lAbierta .)
    ID              reduce using rule 10 (lAbierta -> loop lAbierta .)
    PRINT           reduce using rule 10 (lAbierta -> loop lAbierta .)
    MULTIESCALAR    reduce using rule 10 (lAbierta -> loop lAbierta .)
    LENGTH          reduce using rule 10 (lAbierta -> loop lAbierta .)
    CAPITALIZAR     reduce using rule 10 (lAbierta -> loop lAbierta .)
    COLINEALES      reduce using rule 10 (lAbierta -> loop lAbierta .)
    [               reduce using rule 10 (lAbierta -> loop lAbierta .)
    $end            reduce using rule 10 (lAbierta -> loop lAbierta .)
    }               reduce using rule 10 (lAbierta -> loop lAbierta .)


state 109

    (22) lCerrada -> loop { . g }
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (54) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (32) loop -> . WHILE ( valores )
    (33) loop -> . FOR ( primParam ; valores ; tercerParam )
    (27) sentencia -> . varsOps ;
    (28) sentencia -> . func ;
    (29) sentencia -> . varAsig ;
    (30) sentencia -> . RETURN ;
    (31) sentencia -> . ;
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (42) func -> . funcReturn
    (43) func -> . funcVoid
    (113) varAsig -> . varYVals MULEQ valoresAsig
    (114) varAsig -> . varYVals DIVEQ valoresAsig
    (115) varAsig -> . varYVals MASEQ valoresAsig
    (116) varAsig -> . varYVals MENOSEQ valoresAsig
    (117) varAsig -> . varYVals = valoresAsig
    (118) varAsig -> . ID . ID = valoresAsig
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (51) funcVoid -> . PRINT ( valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (55) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 54 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    linea                          shift and go to state 34
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 13
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 210
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 29
    lAbierta                       shift and go to state 30
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 32

state 110

    (98) vecVal -> vec m .

    .               reduce using rule 98 (vecVal -> vec m .)
    MASMAS          reduce using rule 98 (vecVal -> vec m .)
    MENOSMENOS      reduce using rule 98 (vecVal -> vec m .)
    AND             reduce using rule 98 (vecVal -> vec m .)
    OR              reduce using rule 98 (vecVal -> vec m .)
    ?               reduce using rule 98 (vecVal -> vec m .)
    ,               reduce using rule 98 (vecVal -> vec m .)
    ]               reduce using rule 98 (vecVal -> vec m .)
    )               reduce using rule 98 (vecVal -> vec m .)
    ;               reduce using rule 98 (vecVal -> vec m .)
    :               reduce using rule 98 (vecVal -> vec m .)
    }               reduce using rule 98 (vecVal -> vec m .)
    EQEQ            reduce using rule 98 (vecVal -> vec m .)
    DISTINTO        reduce using rule 98 (vecVal -> vec m .)
    >               reduce using rule 98 (vecVal -> vec m .)
    <               reduce using rule 98 (vecVal -> vec m .)
    +               reduce using rule 98 (vecVal -> vec m .)
    -               reduce using rule 98 (vecVal -> vec m .)
    *               reduce using rule 98 (vecVal -> vec m .)
    /               reduce using rule 98 (vecVal -> vec m .)
    %               reduce using rule 98 (vecVal -> vec m .)
    ^               reduce using rule 98 (vecVal -> vec m .)
    MULEQ           reduce using rule 98 (vecVal -> vec m .)
    DIVEQ           reduce using rule 98 (vecVal -> vec m .)
    MASEQ           reduce using rule 98 (vecVal -> vec m .)
    MENOSEQ         reduce using rule 98 (vecVal -> vec m .)
    =               reduce using rule 98 (vecVal -> vec m .)


state 111

    (1) g -> linea g .

    }               reduce using rule 1 (g -> linea g .)
    $end            reduce using rule 1 (g -> linea g .)


state 112

    (14) lCerrada -> IF ( . cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( . cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (34) cosaBooleana -> . expBool
    (35) cosaBooleana -> . valoresBool
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (50) funcBool -> . COLINEALES ( valores , valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (55) vec -> . [ elem ]
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (222) parenBool -> . ( expBool )
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )

    BOOL            shift and go to state 156
    (               shift and go to state 198
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    )               reduce using rule 174 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 152
    NOT             shift and go to state 92
    -               shift and go to state 73
    +               shift and go to state 72

    and                            shift and go to state 58
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 195
    menor                          shift and go to state 64
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 196
    eMat                           shift and go to state 197
    mayor                          shift and go to state 95
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    cosaBooleana                   shift and go to state 211
    p                              shift and go to state 89
    varsOps                        shift and go to state 202
    exp                            shift and go to state 93
    varYVals                       shift and go to state 203
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 204

state 113

    (26) lCerrada -> DO lCerrada WHILE . ( valores ) ;

    (               shift and go to state 212


state 114

    (25) lCerrada -> DO { g . } WHILE ( valores ) ;

    }               shift and go to state 213


state 115

    (50) funcBool -> COLINEALES ( valores . , valores )

    ,               shift and go to state 214


state 116

    (32) loop -> WHILE ( valores . )

    )               shift and go to state 215


state 117

    (51) funcVoid -> PRINT ( valores . )

    )               shift and go to state 216


state 118

    (96) varYVals -> vecVal . varYVals .

    MASMAS          reduce using rule 96 (varYVals -> vecVal . varYVals .)
    MENOSMENOS      reduce using rule 96 (varYVals -> vecVal . varYVals .)
    +               reduce using rule 96 (varYVals -> vecVal . varYVals .)
    -               reduce using rule 96 (varYVals -> vecVal . varYVals .)
    *               reduce using rule 96 (varYVals -> vecVal . varYVals .)
    /               reduce using rule 96 (varYVals -> vecVal . varYVals .)
    %               reduce using rule 96 (varYVals -> vecVal . varYVals .)
    ^               reduce using rule 96 (varYVals -> vecVal . varYVals .)
    ?               reduce using rule 96 (varYVals -> vecVal . varYVals .)
    OR              reduce using rule 96 (varYVals -> vecVal . varYVals .)
    AND             reduce using rule 96 (varYVals -> vecVal . varYVals .)
    EQEQ            reduce using rule 96 (varYVals -> vecVal . varYVals .)
    DISTINTO        reduce using rule 96 (varYVals -> vecVal . varYVals .)
    >               reduce using rule 96 (varYVals -> vecVal . varYVals .)
    <               reduce using rule 96 (varYVals -> vecVal . varYVals .)
    ,               reduce using rule 96 (varYVals -> vecVal . varYVals .)
    ]               reduce using rule 96 (varYVals -> vecVal . varYVals .)
    )               reduce using rule 96 (varYVals -> vecVal . varYVals .)
    ;               reduce using rule 96 (varYVals -> vecVal . varYVals .)
    :               reduce using rule 96 (varYVals -> vecVal . varYVals .)
    }               reduce using rule 96 (varYVals -> vecVal . varYVals .)
    MULEQ           reduce using rule 96 (varYVals -> vecVal . varYVals .)
    DIVEQ           reduce using rule 96 (varYVals -> vecVal . varYVals .)
    MASEQ           reduce using rule 96 (varYVals -> vecVal . varYVals .)
    MENOSEQ         reduce using rule 96 (varYVals -> vecVal . varYVals .)
    =               reduce using rule 96 (varYVals -> vecVal . varYVals .)


state 119

    (116) varAsig -> varYVals MENOSEQ valoresAsig .

    ;               reduce using rule 116 (varAsig -> varYVals MENOSEQ valoresAsig .)
    )               reduce using rule 116 (varAsig -> varYVals MENOSEQ valoresAsig .)


state 120

    (112) valoresAsig -> valores .

    ;               reduce using rule 112 (valoresAsig -> valores .)
    )               reduce using rule 112 (valoresAsig -> valores .)


state 121

    (115) varAsig -> varYVals MASEQ valoresAsig .

    ;               reduce using rule 115 (varAsig -> varYVals MASEQ valoresAsig .)
    )               reduce using rule 115 (varAsig -> varYVals MASEQ valoresAsig .)


state 122

    (117) varAsig -> varYVals = valoresAsig .

    ;               reduce using rule 117 (varAsig -> varYVals = valoresAsig .)
    )               reduce using rule 117 (varAsig -> varYVals = valoresAsig .)


state 123

    (113) varAsig -> varYVals MULEQ valoresAsig .

    ;               reduce using rule 113 (varAsig -> varYVals MULEQ valoresAsig .)
    )               reduce using rule 113 (varAsig -> varYVals MULEQ valoresAsig .)


state 124

    (114) varAsig -> varYVals DIVEQ valoresAsig .

    ;               reduce using rule 114 (varAsig -> varYVals DIVEQ valoresAsig .)
    )               reduce using rule 114 (varAsig -> varYVals DIVEQ valoresAsig .)


state 125

    (33) loop -> FOR ( primParam . ; valores ; tercerParam )

    ;               shift and go to state 217


state 126

    (36) primParam -> varAsig .

    ;               reduce using rule 36 (primParam -> varAsig .)


state 127

    (37) primParam -> empty .

    ;               reduce using rule 37 (primParam -> empty .)


state 128

    (113) varAsig -> varYVals . MULEQ valoresAsig
    (114) varAsig -> varYVals . DIVEQ valoresAsig
    (115) varAsig -> varYVals . MASEQ valoresAsig
    (116) varAsig -> varYVals . MENOSEQ valoresAsig
    (117) varAsig -> varYVals . = valoresAsig

    MULEQ           shift and go to state 50
    DIVEQ           shift and go to state 51
    MASEQ           shift and go to state 47
    MENOSEQ         shift and go to state 45
    =               shift and go to state 48


state 129

    (48) funcInt -> LENGTH ( valores . )

    )               shift and go to state 218


state 130

    (193) and -> and AND . eq
    (195) and -> and AND . valoresBool
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (50) funcBool -> . COLINEALES ( valores , valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (55) vec -> . [ elem ]
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (222) parenBool -> . ( expBool )
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )

    BOOL            shift and go to state 156
    (               shift and go to state 198
    AND             reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    ?               reduce using rule 174 (valoresBool -> .)
    ,               reduce using rule 174 (valoresBool -> .)
    ]               reduce using rule 174 (valoresBool -> .)
    )               reduce using rule 174 (valoresBool -> .)
    ;               reduce using rule 174 (valoresBool -> .)
    :               reduce using rule 174 (valoresBool -> .)
    }               reduce using rule 174 (valoresBool -> .)
    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    COLINEALES      shift and go to state 4
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 152
    NOT             shift and go to state 92
    [               shift and go to state 20
    -               shift and go to state 73
    +               shift and go to state 72

    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 195
    menor                          shift and go to state 64
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 219
    mayor                          shift and go to state 95
    valoresBool                    shift and go to state 220
    eMat                           shift and go to state 197
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 202
    exp                            shift and go to state 93
    varYVals                       shift and go to state 221
    parenBool                      shift and go to state 80

state 131

    (56) elem -> valores , . elem
    (56) elem -> . valores , elem
    (57) elem -> . valores
    (58) valores -> . eMat
    (59) valores -> . expBool
    (60) valores -> . funcReturn
    (61) valores -> . reg
    (62) valores -> . INT
    (63) valores -> . FLOAT
    (64) valores -> . STRING
    (65) valores -> . BOOL
    (66) valores -> . varYVals
    (67) valores -> . varsOps
    (68) valores -> . vec
    (69) valores -> . ternario
    (70) valores -> . atributos
    (71) valores -> . RES
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (105) reg -> . { campos }
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (55) vec -> . [ elem ]
    (182) ternario -> . ternarioMat
    (183) ternario -> . ternarioBool
    (184) ternario -> . ( ternarioMat )
    (185) ternario -> . ( ternarioBool )
    (186) ternario -> . ternarioVars
    (187) ternario -> . ( ternarioVars )
    (72) atributos -> . ID . valoresCampos
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 85
    FLOAT           shift and go to state 87
    STRING          shift and go to state 69
    BOOL            shift and go to state 90
    RES             shift and go to state 61
    {               shift and go to state 94
    ID              shift and go to state 84
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 71
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    ?               reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    ternario                       shift and go to state 59
    funcBool                       shift and go to state 60
    funcInt                        shift and go to state 62
    elem                           shift and go to state 222
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 68
    eMat                           shift and go to state 70
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 74
    vec                            shift and go to state 75
    paren                          shift and go to state 82
    reg                            shift and go to state 76
    expBool                        shift and go to state 77
    ternarioBool                   shift and go to state 78
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 86
    valores                        shift and go to state 63
    p                              shift and go to state 89
    varsOps                        shift and go to state 91
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 65
    varYVals                       shift and go to state 96
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 97

state 132

    (149) p -> valoresMat % . exp
    (155) p -> valoresMat % . valoresMat
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (55) vec -> . [ elem ]

    INT             shift and go to state 166
    FLOAT           shift and go to state 165
    STRING          shift and go to state 152
    (               shift and go to state 192
    -               shift and go to state 73
    +               shift and go to state 72
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20

    valoresMat                     shift and go to state 223
    funcInt                        shift and go to state 161
    vec                            shift and go to state 33
    varsOps                        shift and go to state 167
    exp                            shift and go to state 224
    paren                          shift and go to state 82
    varYVals                       shift and go to state 168
    vecVal                         shift and go to state 8
    iSing                          shift and go to state 79

state 133

    (137) eMat -> valoresMat + . p
    (141) eMat -> valoresMat + . valoresMat
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (55) vec -> . [ elem ]

    INT             shift and go to state 166
    FLOAT           shift and go to state 165
    STRING          shift and go to state 152
    (               shift and go to state 192
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    -               shift and go to state 73
    +               shift and go to state 72
    [               shift and go to state 20

    valoresMat                     shift and go to state 225
    funcInt                        shift and go to state 161
    p                              shift and go to state 226
    vec                            shift and go to state 33
    varsOps                        shift and go to state 167
    exp                            shift and go to state 93
    paren                          shift and go to state 82
    varYVals                       shift and go to state 168
    vecVal                         shift and go to state 8
    iSing                          shift and go to state 79

state 134

    (147) p -> valoresMat * . exp
    (153) p -> valoresMat * . valoresMat
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (55) vec -> . [ elem ]

    INT             shift and go to state 166
    FLOAT           shift and go to state 165
    STRING          shift and go to state 152
    (               shift and go to state 192
    -               shift and go to state 73
    +               shift and go to state 72
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20

    valoresMat                     shift and go to state 227
    funcInt                        shift and go to state 161
    vec                            shift and go to state 33
    varsOps                        shift and go to state 167
    exp                            shift and go to state 228
    paren                          shift and go to state 82
    varYVals                       shift and go to state 168
    vecVal                         shift and go to state 8
    iSing                          shift and go to state 79

state 135

    (138) eMat -> valoresMat - . p
    (142) eMat -> valoresMat - . valoresMat
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (55) vec -> . [ elem ]

    INT             shift and go to state 166
    FLOAT           shift and go to state 165
    STRING          shift and go to state 152
    (               shift and go to state 192
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    -               shift and go to state 73
    +               shift and go to state 72
    [               shift and go to state 20

    valoresMat                     shift and go to state 229
    funcInt                        shift and go to state 161
    p                              shift and go to state 230
    vec                            shift and go to state 33
    varsOps                        shift and go to state 167
    exp                            shift and go to state 93
    paren                          shift and go to state 82
    varYVals                       shift and go to state 168
    vecVal                         shift and go to state 8
    iSing                          shift and go to state 79

state 136

    (148) p -> valoresMat / . exp
    (154) p -> valoresMat / . valoresMat
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (55) vec -> . [ elem ]

    INT             shift and go to state 166
    FLOAT           shift and go to state 165
    STRING          shift and go to state 152
    (               shift and go to state 192
    -               shift and go to state 73
    +               shift and go to state 72
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20

    valoresMat                     shift and go to state 231
    funcInt                        shift and go to state 161
    vec                            shift and go to state 33
    varsOps                        shift and go to state 167
    exp                            shift and go to state 232
    paren                          shift and go to state 82
    varYVals                       shift and go to state 168
    vecVal                         shift and go to state 8
    iSing                          shift and go to state 79

state 137

    (158) exp -> valoresMat ^ . iSing
    (160) exp -> valoresMat ^ . valoresMat
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (55) vec -> . [ elem ]

    -               shift and go to state 73
    +               shift and go to state 72
    INT             shift and go to state 166
    FLOAT           shift and go to state 165
    STRING          shift and go to state 152
    (               shift and go to state 192
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20

    funcInt                        shift and go to state 161
    vec                            shift and go to state 33
    iSing                          shift and go to state 234
    valoresMat                     shift and go to state 233
    paren                          shift and go to state 82
    varYVals                       shift and go to state 168
    vecVal                         shift and go to state 8
    varsOps                        shift and go to state 167

state 138

    (198) eq -> eq EQEQ . mayor
    (202) eq -> eq EQEQ . tCompare
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (222) parenBool -> . ( expBool )
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (55) vec -> . [ elem ]
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )

    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    (               shift and go to state 236
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 54
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    NOT             shift and go to state 92
    STRING          shift and go to state 152
    [               shift and go to state 20
    -               shift and go to state 73
    +               shift and go to state 72

    funcInt                        shift and go to state 195
    menor                          shift and go to state 64
    mayor                          shift and go to state 235
    valoresMat                     shift and go to state 66
    eMat                           shift and go to state 197
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 237
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 238
    exp                            shift and go to state 93
    varYVals                       shift and go to state 239
    parenBool                      shift and go to state 80

state 139

    (199) eq -> eq DISTINTO . mayor
    (203) eq -> eq DISTINTO . tCompare
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (222) parenBool -> . ( expBool )
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (55) vec -> . [ elem ]
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )

    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    (               shift and go to state 236
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 54
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    NOT             shift and go to state 92
    STRING          shift and go to state 152
    [               shift and go to state 20
    -               shift and go to state 73
    +               shift and go to state 72

    funcInt                        shift and go to state 195
    menor                          shift and go to state 64
    mayor                          shift and go to state 240
    valoresMat                     shift and go to state 66
    eMat                           shift and go to state 197
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 241
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 238
    exp                            shift and go to state 93
    varYVals                       shift and go to state 239
    parenBool                      shift and go to state 80

state 140

    (194) and -> valoresBool AND . eq
    (196) and -> valoresBool AND . valoresBool
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (50) funcBool -> . COLINEALES ( valores , valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (55) vec -> . [ elem ]
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (222) parenBool -> . ( expBool )
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )

    BOOL            shift and go to state 156
    (               shift and go to state 198
    AND             reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    ?               reduce using rule 174 (valoresBool -> .)
    ,               reduce using rule 174 (valoresBool -> .)
    ]               reduce using rule 174 (valoresBool -> .)
    )               reduce using rule 174 (valoresBool -> .)
    ;               reduce using rule 174 (valoresBool -> .)
    :               reduce using rule 174 (valoresBool -> .)
    }               reduce using rule 174 (valoresBool -> .)
    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    COLINEALES      shift and go to state 4
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 152
    NOT             shift and go to state 92
    [               shift and go to state 20
    -               shift and go to state 73
    +               shift and go to state 72

    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 195
    menor                          shift and go to state 64
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 242
    mayor                          shift and go to state 95
    valoresBool                    shift and go to state 243
    eMat                           shift and go to state 197
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 202
    exp                            shift and go to state 93
    varYVals                       shift and go to state 221
    parenBool                      shift and go to state 80

state 141

    (189) expBool -> valoresBool OR . and
    (191) expBool -> valoresBool OR . valoresBool
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (50) funcBool -> . COLINEALES ( valores , valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (55) vec -> . [ elem ]
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (222) parenBool -> . ( expBool )
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )

    BOOL            shift and go to state 156
    (               shift and go to state 198
    AND             reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    ?               reduce using rule 174 (valoresBool -> .)
    ,               reduce using rule 174 (valoresBool -> .)
    ]               reduce using rule 174 (valoresBool -> .)
    )               reduce using rule 174 (valoresBool -> .)
    ;               reduce using rule 174 (valoresBool -> .)
    :               reduce using rule 174 (valoresBool -> .)
    }               reduce using rule 174 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    [               shift and go to state 20
    STRING          shift and go to state 152
    NOT             shift and go to state 92
    -               shift and go to state 73
    +               shift and go to state 72

    and                            shift and go to state 244
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 195
    menor                          shift and go to state 64
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    mayor                          shift and go to state 95
    valoresBool                    shift and go to state 245
    eMat                           shift and go to state 197
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 202
    exp                            shift and go to state 93
    varYVals                       shift and go to state 203
    parenBool                      shift and go to state 80

state 142

    (126) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (175) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (76) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (177) valoresTernarioBool -> . BOOL
    (178) valoresTernarioBool -> . funcBool
    (179) valoresTernarioBool -> . ternarioBool
    (180) valoresTernarioBool -> . ( ternarioBool )
    (181) valoresTernarioBool -> . expBool
    (86) valoresTernarioVars -> . varsOps
    (87) valoresTernarioVars -> . varYVals
    (88) valoresTernarioVars -> . reg
    (89) valoresTernarioVars -> . vec
    (90) valoresTernarioVars -> . ternarioVars
    (91) valoresTernarioVars -> . ( ternarioVars )
    (92) valoresTernarioVars -> . atributos
    (93) valoresTernarioVars -> . RES
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (50) funcBool -> . COLINEALES ( valores , valores )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (105) reg -> . { campos }
    (55) vec -> . [ elem ]
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (72) atributos -> . ID . valoresCampos
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 260
    FLOAT           shift and go to state 261
    STRING          shift and go to state 257
    (               shift and go to state 264
    BOOL            shift and go to state 262
    RES             shift and go to state 248
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 84
    {               shift and go to state 94
    [               shift and go to state 20
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 247
    funcInt                        shift and go to state 249
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 251
    valoresTernarioBool            shift and go to state 252
    valoresBool                    shift and go to state 250
    ternarioMat                    shift and go to state 253
    vec                            shift and go to state 254
    paren                          shift and go to state 82
    reg                            shift and go to state 255
    valoresTernarioVars            shift and go to state 256
    expBool                        shift and go to state 267
    ternarioBool                   shift and go to state 258
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    valoresTernarioMat             shift and go to state 259
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 263
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 265
    varYVals                       shift and go to state 266
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 246

state 143

    (135) eMat -> eMat + . p
    (139) eMat -> eMat + . valoresMat
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (55) vec -> . [ elem ]

    INT             shift and go to state 166
    FLOAT           shift and go to state 165
    STRING          shift and go to state 152
    (               shift and go to state 192
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    -               shift and go to state 73
    +               shift and go to state 72
    [               shift and go to state 20

    valoresMat                     shift and go to state 268
    funcInt                        shift and go to state 161
    p                              shift and go to state 269
    vec                            shift and go to state 33
    varsOps                        shift and go to state 167
    exp                            shift and go to state 93
    paren                          shift and go to state 82
    varYVals                       shift and go to state 168
    vecVal                         shift and go to state 8
    iSing                          shift and go to state 79

state 144

    (136) eMat -> eMat - . p
    (140) eMat -> eMat - . valoresMat
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (55) vec -> . [ elem ]

    INT             shift and go to state 166
    FLOAT           shift and go to state 165
    STRING          shift and go to state 152
    (               shift and go to state 192
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    -               shift and go to state 73
    +               shift and go to state 72
    [               shift and go to state 20

    valoresMat                     shift and go to state 270
    funcInt                        shift and go to state 161
    p                              shift and go to state 271
    vec                            shift and go to state 33
    varsOps                        shift and go to state 167
    exp                            shift and go to state 93
    paren                          shift and go to state 82
    varYVals                       shift and go to state 168
    vecVal                         shift and go to state 8
    iSing                          shift and go to state 79

state 145

    (170) valoresBool -> funcBool .

    ?               reduce using rule 170 (valoresBool -> funcBool .)
    OR              reduce using rule 170 (valoresBool -> funcBool .)
    AND             reduce using rule 170 (valoresBool -> funcBool .)
    ,               reduce using rule 170 (valoresBool -> funcBool .)
    ]               reduce using rule 170 (valoresBool -> funcBool .)
    )               reduce using rule 170 (valoresBool -> funcBool .)
    ;               reduce using rule 170 (valoresBool -> funcBool .)
    :               reduce using rule 170 (valoresBool -> funcBool .)
    }               reduce using rule 170 (valoresBool -> funcBool .)
    EQEQ            reduce using rule 170 (valoresBool -> funcBool .)
    DISTINTO        reduce using rule 170 (valoresBool -> funcBool .)


state 146

    (121) valoresMat -> funcInt .
    (211) tCompare -> funcInt .

    )               reduce using rule 121 (valoresMat -> funcInt .)
    +               reduce using rule 121 (valoresMat -> funcInt .)
    -               reduce using rule 121 (valoresMat -> funcInt .)
    *               reduce using rule 121 (valoresMat -> funcInt .)
    /               reduce using rule 121 (valoresMat -> funcInt .)
    %               reduce using rule 121 (valoresMat -> funcInt .)
    ^               reduce using rule 121 (valoresMat -> funcInt .)
    EQEQ            reduce using rule 211 (tCompare -> funcInt .)
    DISTINTO        reduce using rule 211 (tCompare -> funcInt .)
    >               reduce using rule 211 (tCompare -> funcInt .)
    <               reduce using rule 211 (tCompare -> funcInt .)


state 147

    (168) paren -> ( valoresMat . )
    (137) eMat -> valoresMat . + p
    (138) eMat -> valoresMat . - p
    (141) eMat -> valoresMat . + valoresMat
    (142) eMat -> valoresMat . - valoresMat
    (147) p -> valoresMat . * exp
    (148) p -> valoresMat . / exp
    (149) p -> valoresMat . % exp
    (153) p -> valoresMat . * valoresMat
    (154) p -> valoresMat . / valoresMat
    (155) p -> valoresMat . % valoresMat
    (158) exp -> valoresMat . ^ iSing
    (160) exp -> valoresMat . ^ valoresMat

    )               shift and go to state 272
    +               shift and go to state 133
    -               shift and go to state 135
    *               shift and go to state 134
    /               shift and go to state 136
    %               shift and go to state 132
    ^               shift and go to state 137


state 148

    (126) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (175) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (76) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (189) expBool -> valoresBool . OR and
    (191) expBool -> valoresBool . OR valoresBool
    (194) and -> valoresBool . AND eq
    (196) and -> valoresBool . AND valoresBool

    ?               shift and go to state 142
    OR              shift and go to state 141
    AND             shift and go to state 140


state 149

    (167) paren -> ( eMat . )
    (135) eMat -> eMat . + p
    (136) eMat -> eMat . - p
    (139) eMat -> eMat . + valoresMat
    (140) eMat -> eMat . - valoresMat
    (207) tCompare -> eMat .

    )               shift and go to state 273
    +               shift and go to state 143
    -               shift and go to state 144
    EQEQ            reduce using rule 207 (tCompare -> eMat .)
    DISTINTO        reduce using rule 207 (tCompare -> eMat .)
    >               reduce using rule 207 (tCompare -> eMat .)
    <               reduce using rule 207 (tCompare -> eMat .)


state 150

    (125) valoresMat -> ( . ternarioMat )
    (173) valoresBool -> ( . ternarioBool )
    (213) tCompare -> ( . ternarioBool )
    (214) tCompare -> ( . ternarioMat )
    (167) paren -> ( . eMat )
    (168) paren -> ( . valoresMat )
    (222) parenBool -> ( . expBool )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (50) funcBool -> . COLINEALES ( valores , valores )
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (55) vec -> . [ elem ]
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 154
    FLOAT           shift and go to state 155
    STRING          shift and go to state 152
    (               shift and go to state 150
    BOOL            shift and go to state 156
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    [               shift and go to state 20
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 146
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 147
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 149
    valoresBool                    shift and go to state 274
    ternarioMat                    shift and go to state 275
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    iSing                          shift and go to state 79
    ternarioBool                   shift and go to state 276
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 157
    exp                            shift and go to state 93
    varYVals                       shift and go to state 159
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 277

state 151

    (184) ternario -> ( ternarioMat . )
    (125) valoresMat -> ( ternarioMat . )
    (214) tCompare -> ( ternarioMat . )

    )               shift and go to state 278


state 152

    (124) valoresMat -> STRING .

    +               reduce using rule 124 (valoresMat -> STRING .)
    -               reduce using rule 124 (valoresMat -> STRING .)
    *               reduce using rule 124 (valoresMat -> STRING .)
    /               reduce using rule 124 (valoresMat -> STRING .)
    %               reduce using rule 124 (valoresMat -> STRING .)
    ^               reduce using rule 124 (valoresMat -> STRING .)
    ,               reduce using rule 124 (valoresMat -> STRING .)
    ]               reduce using rule 124 (valoresMat -> STRING .)
    EQEQ            reduce using rule 124 (valoresMat -> STRING .)
    DISTINTO        reduce using rule 124 (valoresMat -> STRING .)
    >               reduce using rule 124 (valoresMat -> STRING .)
    <               reduce using rule 124 (valoresMat -> STRING .)
    )               reduce using rule 124 (valoresMat -> STRING .)
    ;               reduce using rule 124 (valoresMat -> STRING .)
    AND             reduce using rule 124 (valoresMat -> STRING .)
    OR              reduce using rule 124 (valoresMat -> STRING .)
    ?               reduce using rule 124 (valoresMat -> STRING .)
    :               reduce using rule 124 (valoresMat -> STRING .)
    }               reduce using rule 124 (valoresMat -> STRING .)


state 153

    (185) ternario -> ( ternarioBool . )
    (173) valoresBool -> ( ternarioBool . )
    (213) tCompare -> ( ternarioBool . )

    )               shift and go to state 279


state 154

    (119) valoresMat -> INT .
    (210) tCompare -> INT .

    )               reduce using rule 119 (valoresMat -> INT .)
    +               reduce using rule 119 (valoresMat -> INT .)
    -               reduce using rule 119 (valoresMat -> INT .)
    *               reduce using rule 119 (valoresMat -> INT .)
    /               reduce using rule 119 (valoresMat -> INT .)
    %               reduce using rule 119 (valoresMat -> INT .)
    ^               reduce using rule 119 (valoresMat -> INT .)
    EQEQ            reduce using rule 210 (tCompare -> INT .)
    DISTINTO        reduce using rule 210 (tCompare -> INT .)
    >               reduce using rule 210 (tCompare -> INT .)
    <               reduce using rule 210 (tCompare -> INT .)


state 155

    (120) valoresMat -> FLOAT .
    (212) tCompare -> FLOAT .

    )               reduce using rule 120 (valoresMat -> FLOAT .)
    +               reduce using rule 120 (valoresMat -> FLOAT .)
    -               reduce using rule 120 (valoresMat -> FLOAT .)
    *               reduce using rule 120 (valoresMat -> FLOAT .)
    /               reduce using rule 120 (valoresMat -> FLOAT .)
    %               reduce using rule 120 (valoresMat -> FLOAT .)
    ^               reduce using rule 120 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 212 (tCompare -> FLOAT .)
    DISTINTO        reduce using rule 212 (tCompare -> FLOAT .)
    >               reduce using rule 212 (tCompare -> FLOAT .)
    <               reduce using rule 212 (tCompare -> FLOAT .)


state 156

    (169) valoresBool -> BOOL .

    ?               reduce using rule 169 (valoresBool -> BOOL .)
    OR              reduce using rule 169 (valoresBool -> BOOL .)
    AND             reduce using rule 169 (valoresBool -> BOOL .)
    ,               reduce using rule 169 (valoresBool -> BOOL .)
    ]               reduce using rule 169 (valoresBool -> BOOL .)
    )               reduce using rule 169 (valoresBool -> BOOL .)
    ;               reduce using rule 169 (valoresBool -> BOOL .)
    :               reduce using rule 169 (valoresBool -> BOOL .)
    }               reduce using rule 169 (valoresBool -> BOOL .)
    EQEQ            reduce using rule 169 (valoresBool -> BOOL .)
    DISTINTO        reduce using rule 169 (valoresBool -> BOOL .)


state 157

    (123) valoresMat -> varsOps .
    (172) valoresBool -> varsOps .
    (208) tCompare -> varsOps .

    )               reduce using rule 123 (valoresMat -> varsOps .)
    +               reduce using rule 123 (valoresMat -> varsOps .)
    -               reduce using rule 123 (valoresMat -> varsOps .)
    *               reduce using rule 123 (valoresMat -> varsOps .)
    /               reduce using rule 123 (valoresMat -> varsOps .)
    %               reduce using rule 123 (valoresMat -> varsOps .)
    ^               reduce using rule 123 (valoresMat -> varsOps .)
    ?               reduce using rule 172 (valoresBool -> varsOps .)
    OR              reduce using rule 172 (valoresBool -> varsOps .)
    AND             reduce using rule 172 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 208 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 208 (tCompare -> varsOps .)
    >               reduce using rule 208 (tCompare -> varsOps .)
    <               reduce using rule 208 (tCompare -> varsOps .)


state 158

    (187) ternario -> ( ternarioVars . )

    )               shift and go to state 280


state 159

    (122) valoresMat -> varYVals .
    (171) valoresBool -> varYVals .
    (110) varsOps -> varYVals . MASMAS
    (111) varsOps -> varYVals . MENOSMENOS
    (209) tCompare -> varYVals .

    )               reduce using rule 122 (valoresMat -> varYVals .)
    +               reduce using rule 122 (valoresMat -> varYVals .)
    -               reduce using rule 122 (valoresMat -> varYVals .)
    *               reduce using rule 122 (valoresMat -> varYVals .)
    /               reduce using rule 122 (valoresMat -> varYVals .)
    %               reduce using rule 122 (valoresMat -> varYVals .)
    ^               reduce using rule 122 (valoresMat -> varYVals .)
    ?               reduce using rule 171 (valoresBool -> varYVals .)
    OR              reduce using rule 171 (valoresBool -> varYVals .)
    AND             reduce using rule 171 (valoresBool -> varYVals .)
    MASMAS          shift and go to state 49
    MENOSMENOS      shift and go to state 46
    EQEQ            reduce using rule 209 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 209 (tCompare -> varYVals .)
    >               reduce using rule 209 (tCompare -> varYVals .)
    <               reduce using rule 209 (tCompare -> varYVals .)


state 160

    (222) parenBool -> ( expBool . )
    (127) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (176) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (81) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (188) expBool -> expBool . OR and
    (190) expBool -> expBool . OR valoresBool

    )               shift and go to state 281
    ?               shift and go to state 172
    OR              shift and go to state 171


state 161

    (121) valoresMat -> funcInt .

    ^               reduce using rule 121 (valoresMat -> funcInt .)
    *               reduce using rule 121 (valoresMat -> funcInt .)
    /               reduce using rule 121 (valoresMat -> funcInt .)
    %               reduce using rule 121 (valoresMat -> funcInt .)
    +               reduce using rule 121 (valoresMat -> funcInt .)
    -               reduce using rule 121 (valoresMat -> funcInt .)
    ,               reduce using rule 121 (valoresMat -> funcInt .)
    ]               reduce using rule 121 (valoresMat -> funcInt .)
    EQEQ            reduce using rule 121 (valoresMat -> funcInt .)
    DISTINTO        reduce using rule 121 (valoresMat -> funcInt .)
    >               reduce using rule 121 (valoresMat -> funcInt .)
    <               reduce using rule 121 (valoresMat -> funcInt .)
    )               reduce using rule 121 (valoresMat -> funcInt .)
    ;               reduce using rule 121 (valoresMat -> funcInt .)
    AND             reduce using rule 121 (valoresMat -> funcInt .)
    OR              reduce using rule 121 (valoresMat -> funcInt .)
    ?               reduce using rule 121 (valoresMat -> funcInt .)
    :               reduce using rule 121 (valoresMat -> funcInt .)
    }               reduce using rule 121 (valoresMat -> funcInt .)


state 162

    (165) iSing -> + valoresMat .

    ^               reduce using rule 165 (iSing -> + valoresMat .)
    *               reduce using rule 165 (iSing -> + valoresMat .)
    /               reduce using rule 165 (iSing -> + valoresMat .)
    %               reduce using rule 165 (iSing -> + valoresMat .)
    +               reduce using rule 165 (iSing -> + valoresMat .)
    -               reduce using rule 165 (iSing -> + valoresMat .)
    )               reduce using rule 165 (iSing -> + valoresMat .)
    EQEQ            reduce using rule 165 (iSing -> + valoresMat .)
    DISTINTO        reduce using rule 165 (iSing -> + valoresMat .)
    >               reduce using rule 165 (iSing -> + valoresMat .)
    <               reduce using rule 165 (iSing -> + valoresMat .)
    ,               reduce using rule 165 (iSing -> + valoresMat .)
    ]               reduce using rule 165 (iSing -> + valoresMat .)
    ;               reduce using rule 165 (iSing -> + valoresMat .)
    AND             reduce using rule 165 (iSing -> + valoresMat .)
    OR              reduce using rule 165 (iSing -> + valoresMat .)
    ?               reduce using rule 165 (iSing -> + valoresMat .)
    :               reduce using rule 165 (iSing -> + valoresMat .)
    }               reduce using rule 165 (iSing -> + valoresMat .)


state 163

    (167) paren -> ( . eMat )
    (168) paren -> ( . valoresMat )
    (125) valoresMat -> ( . ternarioMat )
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (50) funcBool -> . COLINEALES ( valores , valores )
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (55) vec -> . [ elem ]
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 154
    FLOAT           shift and go to state 155
    STRING          shift and go to state 152
    (               shift and go to state 283
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    BOOL            shift and go to state 156
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    [               shift and go to state 20
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 146
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 147
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 149
    valoresBool                    shift and go to state 282
    ternarioMat                    shift and go to state 284
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 157
    exp                            shift and go to state 93
    varYVals                       shift and go to state 285
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 286

state 164

    (163) iSing -> + paren .

    ^               reduce using rule 163 (iSing -> + paren .)
    *               reduce using rule 163 (iSing -> + paren .)
    /               reduce using rule 163 (iSing -> + paren .)
    %               reduce using rule 163 (iSing -> + paren .)
    +               reduce using rule 163 (iSing -> + paren .)
    -               reduce using rule 163 (iSing -> + paren .)
    )               reduce using rule 163 (iSing -> + paren .)
    EQEQ            reduce using rule 163 (iSing -> + paren .)
    DISTINTO        reduce using rule 163 (iSing -> + paren .)
    >               reduce using rule 163 (iSing -> + paren .)
    <               reduce using rule 163 (iSing -> + paren .)
    ,               reduce using rule 163 (iSing -> + paren .)
    ]               reduce using rule 163 (iSing -> + paren .)
    ;               reduce using rule 163 (iSing -> + paren .)
    AND             reduce using rule 163 (iSing -> + paren .)
    OR              reduce using rule 163 (iSing -> + paren .)
    ?               reduce using rule 163 (iSing -> + paren .)
    :               reduce using rule 163 (iSing -> + paren .)
    }               reduce using rule 163 (iSing -> + paren .)


state 165

    (120) valoresMat -> FLOAT .

    ^               reduce using rule 120 (valoresMat -> FLOAT .)
    *               reduce using rule 120 (valoresMat -> FLOAT .)
    /               reduce using rule 120 (valoresMat -> FLOAT .)
    %               reduce using rule 120 (valoresMat -> FLOAT .)
    +               reduce using rule 120 (valoresMat -> FLOAT .)
    -               reduce using rule 120 (valoresMat -> FLOAT .)
    ,               reduce using rule 120 (valoresMat -> FLOAT .)
    ]               reduce using rule 120 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 120 (valoresMat -> FLOAT .)
    DISTINTO        reduce using rule 120 (valoresMat -> FLOAT .)
    >               reduce using rule 120 (valoresMat -> FLOAT .)
    <               reduce using rule 120 (valoresMat -> FLOAT .)
    )               reduce using rule 120 (valoresMat -> FLOAT .)
    ;               reduce using rule 120 (valoresMat -> FLOAT .)
    AND             reduce using rule 120 (valoresMat -> FLOAT .)
    OR              reduce using rule 120 (valoresMat -> FLOAT .)
    ?               reduce using rule 120 (valoresMat -> FLOAT .)
    :               reduce using rule 120 (valoresMat -> FLOAT .)
    }               reduce using rule 120 (valoresMat -> FLOAT .)


state 166

    (119) valoresMat -> INT .

    ^               reduce using rule 119 (valoresMat -> INT .)
    *               reduce using rule 119 (valoresMat -> INT .)
    /               reduce using rule 119 (valoresMat -> INT .)
    %               reduce using rule 119 (valoresMat -> INT .)
    +               reduce using rule 119 (valoresMat -> INT .)
    -               reduce using rule 119 (valoresMat -> INT .)
    ,               reduce using rule 119 (valoresMat -> INT .)
    ]               reduce using rule 119 (valoresMat -> INT .)
    EQEQ            reduce using rule 119 (valoresMat -> INT .)
    DISTINTO        reduce using rule 119 (valoresMat -> INT .)
    >               reduce using rule 119 (valoresMat -> INT .)
    <               reduce using rule 119 (valoresMat -> INT .)
    )               reduce using rule 119 (valoresMat -> INT .)
    ;               reduce using rule 119 (valoresMat -> INT .)
    AND             reduce using rule 119 (valoresMat -> INT .)
    OR              reduce using rule 119 (valoresMat -> INT .)
    ?               reduce using rule 119 (valoresMat -> INT .)
    :               reduce using rule 119 (valoresMat -> INT .)
    }               reduce using rule 119 (valoresMat -> INT .)


state 167

    (123) valoresMat -> varsOps .

    ^               reduce using rule 123 (valoresMat -> varsOps .)
    *               reduce using rule 123 (valoresMat -> varsOps .)
    /               reduce using rule 123 (valoresMat -> varsOps .)
    %               reduce using rule 123 (valoresMat -> varsOps .)
    +               reduce using rule 123 (valoresMat -> varsOps .)
    -               reduce using rule 123 (valoresMat -> varsOps .)
    ,               reduce using rule 123 (valoresMat -> varsOps .)
    ]               reduce using rule 123 (valoresMat -> varsOps .)
    EQEQ            reduce using rule 123 (valoresMat -> varsOps .)
    DISTINTO        reduce using rule 123 (valoresMat -> varsOps .)
    >               reduce using rule 123 (valoresMat -> varsOps .)
    <               reduce using rule 123 (valoresMat -> varsOps .)
    )               reduce using rule 123 (valoresMat -> varsOps .)
    ;               reduce using rule 123 (valoresMat -> varsOps .)
    AND             reduce using rule 123 (valoresMat -> varsOps .)
    OR              reduce using rule 123 (valoresMat -> varsOps .)
    ?               reduce using rule 123 (valoresMat -> varsOps .)
    :               reduce using rule 123 (valoresMat -> varsOps .)
    }               reduce using rule 123 (valoresMat -> varsOps .)


state 168

    (122) valoresMat -> varYVals .
    (110) varsOps -> varYVals . MASMAS
    (111) varsOps -> varYVals . MENOSMENOS

    ^               reduce using rule 122 (valoresMat -> varYVals .)
    *               reduce using rule 122 (valoresMat -> varYVals .)
    /               reduce using rule 122 (valoresMat -> varYVals .)
    %               reduce using rule 122 (valoresMat -> varYVals .)
    +               reduce using rule 122 (valoresMat -> varYVals .)
    -               reduce using rule 122 (valoresMat -> varYVals .)
    ,               reduce using rule 122 (valoresMat -> varYVals .)
    ]               reduce using rule 122 (valoresMat -> varYVals .)
    EQEQ            reduce using rule 122 (valoresMat -> varYVals .)
    DISTINTO        reduce using rule 122 (valoresMat -> varYVals .)
    >               reduce using rule 122 (valoresMat -> varYVals .)
    <               reduce using rule 122 (valoresMat -> varYVals .)
    )               reduce using rule 122 (valoresMat -> varYVals .)
    ;               reduce using rule 122 (valoresMat -> varYVals .)
    AND             reduce using rule 122 (valoresMat -> varYVals .)
    OR              reduce using rule 122 (valoresMat -> varYVals .)
    ?               reduce using rule 122 (valoresMat -> varYVals .)
    :               reduce using rule 122 (valoresMat -> varYVals .)
    }               reduce using rule 122 (valoresMat -> varYVals .)
    MASMAS          shift and go to state 49
    MENOSMENOS      shift and go to state 46


state 169

    (164) iSing -> - valoresMat .

    ^               reduce using rule 164 (iSing -> - valoresMat .)
    *               reduce using rule 164 (iSing -> - valoresMat .)
    /               reduce using rule 164 (iSing -> - valoresMat .)
    %               reduce using rule 164 (iSing -> - valoresMat .)
    +               reduce using rule 164 (iSing -> - valoresMat .)
    -               reduce using rule 164 (iSing -> - valoresMat .)
    )               reduce using rule 164 (iSing -> - valoresMat .)
    EQEQ            reduce using rule 164 (iSing -> - valoresMat .)
    DISTINTO        reduce using rule 164 (iSing -> - valoresMat .)
    >               reduce using rule 164 (iSing -> - valoresMat .)
    <               reduce using rule 164 (iSing -> - valoresMat .)
    ,               reduce using rule 164 (iSing -> - valoresMat .)
    ]               reduce using rule 164 (iSing -> - valoresMat .)
    ;               reduce using rule 164 (iSing -> - valoresMat .)
    AND             reduce using rule 164 (iSing -> - valoresMat .)
    OR              reduce using rule 164 (iSing -> - valoresMat .)
    ?               reduce using rule 164 (iSing -> - valoresMat .)
    :               reduce using rule 164 (iSing -> - valoresMat .)
    }               reduce using rule 164 (iSing -> - valoresMat .)


state 170

    (162) iSing -> - paren .

    ^               reduce using rule 162 (iSing -> - paren .)
    *               reduce using rule 162 (iSing -> - paren .)
    /               reduce using rule 162 (iSing -> - paren .)
    %               reduce using rule 162 (iSing -> - paren .)
    +               reduce using rule 162 (iSing -> - paren .)
    -               reduce using rule 162 (iSing -> - paren .)
    )               reduce using rule 162 (iSing -> - paren .)
    EQEQ            reduce using rule 162 (iSing -> - paren .)
    DISTINTO        reduce using rule 162 (iSing -> - paren .)
    >               reduce using rule 162 (iSing -> - paren .)
    <               reduce using rule 162 (iSing -> - paren .)
    ,               reduce using rule 162 (iSing -> - paren .)
    ]               reduce using rule 162 (iSing -> - paren .)
    ;               reduce using rule 162 (iSing -> - paren .)
    AND             reduce using rule 162 (iSing -> - paren .)
    OR              reduce using rule 162 (iSing -> - paren .)
    ?               reduce using rule 162 (iSing -> - paren .)
    :               reduce using rule 162 (iSing -> - paren .)
    }               reduce using rule 162 (iSing -> - paren .)


state 171

    (188) expBool -> expBool OR . and
    (190) expBool -> expBool OR . valoresBool
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (50) funcBool -> . COLINEALES ( valores , valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (55) vec -> . [ elem ]
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (222) parenBool -> . ( expBool )
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )

    BOOL            shift and go to state 156
    (               shift and go to state 198
    AND             reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    ?               reduce using rule 174 (valoresBool -> .)
    ,               reduce using rule 174 (valoresBool -> .)
    ]               reduce using rule 174 (valoresBool -> .)
    )               reduce using rule 174 (valoresBool -> .)
    ;               reduce using rule 174 (valoresBool -> .)
    :               reduce using rule 174 (valoresBool -> .)
    }               reduce using rule 174 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    [               shift and go to state 20
    STRING          shift and go to state 152
    NOT             shift and go to state 92
    -               shift and go to state 73
    +               shift and go to state 72

    and                            shift and go to state 287
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 195
    menor                          shift and go to state 64
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    mayor                          shift and go to state 95
    valoresBool                    shift and go to state 288
    eMat                           shift and go to state 197
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 202
    exp                            shift and go to state 93
    varYVals                       shift and go to state 203
    parenBool                      shift and go to state 80

state 172

    (127) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (176) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (81) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (177) valoresTernarioBool -> . BOOL
    (178) valoresTernarioBool -> . funcBool
    (179) valoresTernarioBool -> . ternarioBool
    (180) valoresTernarioBool -> . ( ternarioBool )
    (181) valoresTernarioBool -> . expBool
    (86) valoresTernarioVars -> . varsOps
    (87) valoresTernarioVars -> . varYVals
    (88) valoresTernarioVars -> . reg
    (89) valoresTernarioVars -> . vec
    (90) valoresTernarioVars -> . ternarioVars
    (91) valoresTernarioVars -> . ( ternarioVars )
    (92) valoresTernarioVars -> . atributos
    (93) valoresTernarioVars -> . RES
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (50) funcBool -> . COLINEALES ( valores , valores )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (105) reg -> . { campos }
    (55) vec -> . [ elem ]
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (72) atributos -> . ID . valoresCampos
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 260
    FLOAT           shift and go to state 261
    STRING          shift and go to state 257
    (               shift and go to state 264
    BOOL            shift and go to state 262
    RES             shift and go to state 248
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 84
    {               shift and go to state 94
    [               shift and go to state 20
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 247
    funcInt                        shift and go to state 249
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 250
    eMat                           shift and go to state 251
    valoresTernarioBool            shift and go to state 289
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 253
    vec                            shift and go to state 254
    paren                          shift and go to state 82
    reg                            shift and go to state 255
    valoresTernarioVars            shift and go to state 290
    expBool                        shift and go to state 267
    ternarioBool                   shift and go to state 258
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    valoresTernarioMat             shift and go to state 291
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 263
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 265
    varYVals                       shift and go to state 266
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 246

state 173

    (201) eq -> tCompare DISTINTO . mayor
    (205) eq -> tCompare DISTINTO . tCompare
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (222) parenBool -> . ( expBool )
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (55) vec -> . [ elem ]
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )

    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    (               shift and go to state 236
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 54
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    NOT             shift and go to state 92
    STRING          shift and go to state 152
    [               shift and go to state 20
    -               shift and go to state 73
    +               shift and go to state 72

    funcInt                        shift and go to state 195
    menor                          shift and go to state 64
    mayor                          shift and go to state 292
    valoresMat                     shift and go to state 66
    eMat                           shift and go to state 197
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    varsOps                        shift and go to state 238
    tCompare                       shift and go to state 293
    not                            shift and go to state 83
    p                              shift and go to state 89
    iSing                          shift and go to state 79
    exp                            shift and go to state 93
    varYVals                       shift and go to state 239
    parenBool                      shift and go to state 80

state 174

    (200) eq -> tCompare EQEQ . mayor
    (204) eq -> tCompare EQEQ . tCompare
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (222) parenBool -> . ( expBool )
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (55) vec -> . [ elem ]
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )

    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    (               shift and go to state 236
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 54
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    NOT             shift and go to state 92
    STRING          shift and go to state 152
    [               shift and go to state 20
    -               shift and go to state 73
    +               shift and go to state 72

    funcInt                        shift and go to state 195
    menor                          shift and go to state 64
    mayor                          shift and go to state 294
    valoresMat                     shift and go to state 66
    eMat                           shift and go to state 197
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    varsOps                        shift and go to state 238
    tCompare                       shift and go to state 295
    not                            shift and go to state 83
    p                              shift and go to state 89
    iSing                          shift and go to state 79
    exp                            shift and go to state 93
    varYVals                       shift and go to state 239
    parenBool                      shift and go to state 80

state 175

    (217) menor -> tCompare < . tCompare
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (55) vec -> . [ elem ]
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )

    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    (               shift and go to state 296
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 54
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 152
    [               shift and go to state 20
    -               shift and go to state 73
    +               shift and go to state 72

    eMat                           shift and go to state 197
    funcInt                        shift and go to state 195
    p                              shift and go to state 89
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 297
    varsOps                        shift and go to state 238
    valoresMat                     shift and go to state 66
    paren                          shift and go to state 82
    exp                            shift and go to state 93
    varYVals                       shift and go to state 239
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33

state 176

    (215) mayor -> tCompare > . tCompare
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (55) vec -> . [ elem ]
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )

    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    (               shift and go to state 296
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 54
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 152
    [               shift and go to state 20
    -               shift and go to state 73
    +               shift and go to state 72

    eMat                           shift and go to state 197
    funcInt                        shift and go to state 195
    p                              shift and go to state 89
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 298
    varsOps                        shift and go to state 238
    valoresMat                     shift and go to state 66
    paren                          shift and go to state 82
    exp                            shift and go to state 93
    varYVals                       shift and go to state 239
    vecVal                         shift and go to state 8
    vec                            shift and go to state 33

state 177

    (72) atributos -> ID . . valoresCampos
    (73) valoresCampos -> . varYVals
    (74) valoresCampos -> . END
    (75) valoresCampos -> . BEGIN
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (55) vec -> . [ elem ]

    END             shift and go to state 300
    BEGIN           shift and go to state 299
    ID              shift and go to state 54
    [               shift and go to state 20

    vec                            shift and go to state 33
    valoresCampos                  shift and go to state 301
    varYVals                       shift and go to state 302
    vecVal                         shift and go to state 8

state 178

    (55) vec -> [ elem ] .

    [               reduce using rule 55 (vec -> [ elem ] .)
    :               reduce using rule 55 (vec -> [ elem ] .)
    ,               reduce using rule 55 (vec -> [ elem ] .)
    ]               reduce using rule 55 (vec -> [ elem ] .)
    )               reduce using rule 55 (vec -> [ elem ] .)
    ;               reduce using rule 55 (vec -> [ elem ] .)
    }               reduce using rule 55 (vec -> [ elem ] .)


state 179

    (146) p -> p % . exp
    (152) p -> p % . valoresMat
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (55) vec -> . [ elem ]

    INT             shift and go to state 166
    FLOAT           shift and go to state 165
    STRING          shift and go to state 152
    (               shift and go to state 192
    -               shift and go to state 73
    +               shift and go to state 72
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20

    exp                            shift and go to state 304
    funcInt                        shift and go to state 161
    vec                            shift and go to state 33
    iSing                          shift and go to state 79
    valoresMat                     shift and go to state 303
    paren                          shift and go to state 82
    varYVals                       shift and go to state 168
    vecVal                         shift and go to state 8
    varsOps                        shift and go to state 167

state 180

    (144) p -> p * . exp
    (150) p -> p * . valoresMat
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (55) vec -> . [ elem ]

    INT             shift and go to state 166
    FLOAT           shift and go to state 165
    STRING          shift and go to state 152
    (               shift and go to state 192
    -               shift and go to state 73
    +               shift and go to state 72
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20

    exp                            shift and go to state 306
    funcInt                        shift and go to state 161
    vec                            shift and go to state 33
    iSing                          shift and go to state 79
    valoresMat                     shift and go to state 305
    paren                          shift and go to state 82
    varYVals                       shift and go to state 168
    vecVal                         shift and go to state 8
    varsOps                        shift and go to state 167

state 181

    (145) p -> p / . exp
    (151) p -> p / . valoresMat
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (55) vec -> . [ elem ]

    INT             shift and go to state 166
    FLOAT           shift and go to state 165
    STRING          shift and go to state 152
    (               shift and go to state 192
    -               shift and go to state 73
    +               shift and go to state 72
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20

    exp                            shift and go to state 308
    funcInt                        shift and go to state 161
    vec                            shift and go to state 33
    iSing                          shift and go to state 79
    valoresMat                     shift and go to state 307
    paren                          shift and go to state 82
    varYVals                       shift and go to state 168
    vecVal                         shift and go to state 8
    varsOps                        shift and go to state 167

state 182

    (220) not -> NOT valoresBool .

    EQEQ            reduce using rule 220 (not -> NOT valoresBool .)
    DISTINTO        reduce using rule 220 (not -> NOT valoresBool .)
    AND             reduce using rule 220 (not -> NOT valoresBool .)
    )               reduce using rule 220 (not -> NOT valoresBool .)
    ?               reduce using rule 220 (not -> NOT valoresBool .)
    OR              reduce using rule 220 (not -> NOT valoresBool .)
    ;               reduce using rule 220 (not -> NOT valoresBool .)
    :               reduce using rule 220 (not -> NOT valoresBool .)
    ,               reduce using rule 220 (not -> NOT valoresBool .)
    ]               reduce using rule 220 (not -> NOT valoresBool .)
    }               reduce using rule 220 (not -> NOT valoresBool .)


state 183

    (173) valoresBool -> ( . ternarioBool )
    (222) parenBool -> ( . expBool )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (50) funcBool -> . COLINEALES ( valores , valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (55) vec -> . [ elem ]
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (222) parenBool -> . ( expBool )
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )

    BOOL            shift and go to state 156
    (               shift and go to state 198
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 152
    NOT             shift and go to state 92
    -               shift and go to state 73
    +               shift and go to state 72

    and                            shift and go to state 58
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 195
    menor                          shift and go to state 64
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 309
    eMat                           shift and go to state 197
    mayor                          shift and go to state 95
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    iSing                          shift and go to state 79
    ternarioBool                   shift and go to state 310
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 202
    exp                            shift and go to state 93
    varYVals                       shift and go to state 203
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 311

state 184

    (219) not -> NOT not .

    EQEQ            reduce using rule 219 (not -> NOT not .)
    DISTINTO        reduce using rule 219 (not -> NOT not .)
    AND             reduce using rule 219 (not -> NOT not .)
    )               reduce using rule 219 (not -> NOT not .)
    ?               reduce using rule 219 (not -> NOT not .)
    OR              reduce using rule 219 (not -> NOT not .)
    ;               reduce using rule 219 (not -> NOT not .)
    :               reduce using rule 219 (not -> NOT not .)
    ,               reduce using rule 219 (not -> NOT not .)
    ]               reduce using rule 219 (not -> NOT not .)
    }               reduce using rule 219 (not -> NOT not .)


state 185

    (172) valoresBool -> varsOps .

    EQEQ            reduce using rule 172 (valoresBool -> varsOps .)
    DISTINTO        reduce using rule 172 (valoresBool -> varsOps .)
    AND             reduce using rule 172 (valoresBool -> varsOps .)
    OR              reduce using rule 172 (valoresBool -> varsOps .)
    ?               reduce using rule 172 (valoresBool -> varsOps .)
    ,               reduce using rule 172 (valoresBool -> varsOps .)
    ]               reduce using rule 172 (valoresBool -> varsOps .)
    )               reduce using rule 172 (valoresBool -> varsOps .)
    ;               reduce using rule 172 (valoresBool -> varsOps .)
    :               reduce using rule 172 (valoresBool -> varsOps .)
    }               reduce using rule 172 (valoresBool -> varsOps .)


state 186

    (171) valoresBool -> varYVals .
    (110) varsOps -> varYVals . MASMAS
    (111) varsOps -> varYVals . MENOSMENOS

    EQEQ            reduce using rule 171 (valoresBool -> varYVals .)
    DISTINTO        reduce using rule 171 (valoresBool -> varYVals .)
    AND             reduce using rule 171 (valoresBool -> varYVals .)
    OR              reduce using rule 171 (valoresBool -> varYVals .)
    ?               reduce using rule 171 (valoresBool -> varYVals .)
    ,               reduce using rule 171 (valoresBool -> varYVals .)
    ]               reduce using rule 171 (valoresBool -> varYVals .)
    )               reduce using rule 171 (valoresBool -> varYVals .)
    ;               reduce using rule 171 (valoresBool -> varYVals .)
    :               reduce using rule 171 (valoresBool -> varYVals .)
    }               reduce using rule 171 (valoresBool -> varYVals .)
    MASMAS          shift and go to state 49
    MENOSMENOS      shift and go to state 46


state 187

    (157) exp -> exp ^ . iSing
    (159) exp -> exp ^ . valoresMat
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (55) vec -> . [ elem ]

    -               shift and go to state 73
    +               shift and go to state 72
    INT             shift and go to state 166
    FLOAT           shift and go to state 165
    STRING          shift and go to state 152
    (               shift and go to state 192
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20

    funcInt                        shift and go to state 161
    vec                            shift and go to state 33
    iSing                          shift and go to state 313
    valoresMat                     shift and go to state 312
    paren                          shift and go to state 82
    varYVals                       shift and go to state 168
    vecVal                         shift and go to state 8
    varsOps                        shift and go to state 167

state 188

    (105) reg -> { campos . }

    }               shift and go to state 314


state 189

    (106) campos -> ID . : valores , campos
    (107) campos -> ID . : valores

    :               shift and go to state 315


state 190

    (118) varAsig -> ID . ID . = valoresAsig

    =               shift and go to state 316


state 191

    (103) m -> [ eMat . ] m
    (104) m -> [ eMat . ]
    (135) eMat -> eMat . + p
    (136) eMat -> eMat . - p
    (139) eMat -> eMat . + valoresMat
    (140) eMat -> eMat . - valoresMat

    ]               shift and go to state 317
    +               shift and go to state 143
    -               shift and go to state 144


state 192

    (125) valoresMat -> ( . ternarioMat )
    (167) paren -> ( . eMat )
    (168) paren -> ( . valoresMat )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (50) funcBool -> . COLINEALES ( valores , valores )
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (55) vec -> . [ elem ]
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 154
    FLOAT           shift and go to state 155
    STRING          shift and go to state 152
    (               shift and go to state 150
    BOOL            shift and go to state 156
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    [               shift and go to state 20
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 146
    menor                          shift and go to state 64
    valoresMat                     shift and go to state 147
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 282
    eMat                           shift and go to state 149
    mayor                          shift and go to state 95
    ternarioMat                    shift and go to state 284
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 157
    exp                            shift and go to state 93
    varYVals                       shift and go to state 159
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 286

state 193

    (99) m -> [ INT . ]
    (100) m -> [ INT . ] m
    (119) valoresMat -> INT .

    ]               shift and go to state 318
    +               reduce using rule 119 (valoresMat -> INT .)
    -               reduce using rule 119 (valoresMat -> INT .)
    *               reduce using rule 119 (valoresMat -> INT .)
    /               reduce using rule 119 (valoresMat -> INT .)
    %               reduce using rule 119 (valoresMat -> INT .)
    ^               reduce using rule 119 (valoresMat -> INT .)


state 194

    (101) m -> [ varYVals . ] m
    (102) m -> [ varYVals . ]
    (122) valoresMat -> varYVals .
    (110) varsOps -> varYVals . MASMAS
    (111) varsOps -> varYVals . MENOSMENOS

    ]               shift and go to state 319
    +               reduce using rule 122 (valoresMat -> varYVals .)
    -               reduce using rule 122 (valoresMat -> varYVals .)
    *               reduce using rule 122 (valoresMat -> varYVals .)
    /               reduce using rule 122 (valoresMat -> varYVals .)
    %               reduce using rule 122 (valoresMat -> varYVals .)
    ^               reduce using rule 122 (valoresMat -> varYVals .)
    MASMAS          shift and go to state 49
    MENOSMENOS      shift and go to state 46


state 195

    (211) tCompare -> funcInt .
    (121) valoresMat -> funcInt .

    EQEQ            reduce using rule 211 (tCompare -> funcInt .)
    DISTINTO        reduce using rule 211 (tCompare -> funcInt .)
    >               reduce using rule 211 (tCompare -> funcInt .)
    <               reduce using rule 211 (tCompare -> funcInt .)
    AND             reduce using rule 211 (tCompare -> funcInt .)
    OR              reduce using rule 211 (tCompare -> funcInt .)
    ?               reduce using rule 211 (tCompare -> funcInt .)
    ,               reduce using rule 211 (tCompare -> funcInt .)
    ]               reduce using rule 211 (tCompare -> funcInt .)
    )               reduce using rule 211 (tCompare -> funcInt .)
    ;               reduce using rule 211 (tCompare -> funcInt .)
    :               reduce using rule 211 (tCompare -> funcInt .)
    }               reduce using rule 211 (tCompare -> funcInt .)
    +               reduce using rule 121 (valoresMat -> funcInt .)
    -               reduce using rule 121 (valoresMat -> funcInt .)
    *               reduce using rule 121 (valoresMat -> funcInt .)
    /               reduce using rule 121 (valoresMat -> funcInt .)
    %               reduce using rule 121 (valoresMat -> funcInt .)
    ^               reduce using rule 121 (valoresMat -> funcInt .)


state 196

    (35) cosaBooleana -> valoresBool .
    (189) expBool -> valoresBool . OR and
    (191) expBool -> valoresBool . OR valoresBool
    (194) and -> valoresBool . AND eq
    (196) and -> valoresBool . AND valoresBool

    )               reduce using rule 35 (cosaBooleana -> valoresBool .)
    OR              shift and go to state 141
    AND             shift and go to state 140


state 197

    (207) tCompare -> eMat .
    (135) eMat -> eMat . + p
    (136) eMat -> eMat . - p
    (139) eMat -> eMat . + valoresMat
    (140) eMat -> eMat . - valoresMat

    EQEQ            reduce using rule 207 (tCompare -> eMat .)
    DISTINTO        reduce using rule 207 (tCompare -> eMat .)
    >               reduce using rule 207 (tCompare -> eMat .)
    <               reduce using rule 207 (tCompare -> eMat .)
    AND             reduce using rule 207 (tCompare -> eMat .)
    OR              reduce using rule 207 (tCompare -> eMat .)
    ?               reduce using rule 207 (tCompare -> eMat .)
    ,               reduce using rule 207 (tCompare -> eMat .)
    ]               reduce using rule 207 (tCompare -> eMat .)
    )               reduce using rule 207 (tCompare -> eMat .)
    ;               reduce using rule 207 (tCompare -> eMat .)
    :               reduce using rule 207 (tCompare -> eMat .)
    }               reduce using rule 207 (tCompare -> eMat .)
    +               shift and go to state 143
    -               shift and go to state 144


state 198

    (173) valoresBool -> ( . ternarioBool )
    (213) tCompare -> ( . ternarioBool )
    (214) tCompare -> ( . ternarioMat )
    (125) valoresMat -> ( . ternarioMat )
    (222) parenBool -> ( . expBool )
    (167) paren -> ( . eMat )
    (168) paren -> ( . valoresMat )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (50) funcBool -> . COLINEALES ( valores , valores )
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (55) vec -> . [ elem ]
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 154
    FLOAT           shift and go to state 155
    STRING          shift and go to state 152
    (               shift and go to state 150
    BOOL            shift and go to state 156
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    [               shift and go to state 20
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 146
    menor                          shift and go to state 64
    valoresMat                     shift and go to state 147
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 320
    eMat                           shift and go to state 149
    mayor                          shift and go to state 95
    ternarioMat                    shift and go to state 321
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    iSing                          shift and go to state 79
    ternarioBool                   shift and go to state 276
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 157
    exp                            shift and go to state 93
    varYVals                       shift and go to state 159
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 322

state 199

    (6) lAbierta -> IF ( cosaBooleana . ) linea
    (7) lAbierta -> IF ( cosaBooleana . ) { g } ELSE lAbierta
    (8) lAbierta -> IF ( cosaBooleana . ) lCerrada ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana . ) { g }
    (14) lCerrada -> IF ( cosaBooleana . ) { g } ELSE { g }
    (15) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE { g }
    (16) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana . ) { g } ELSE lCerrada
    (18) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE COMMENT com lCerrada

    )               shift and go to state 323


state 200

    (210) tCompare -> INT .
    (119) valoresMat -> INT .

    EQEQ            reduce using rule 210 (tCompare -> INT .)
    DISTINTO        reduce using rule 210 (tCompare -> INT .)
    >               reduce using rule 210 (tCompare -> INT .)
    <               reduce using rule 210 (tCompare -> INT .)
    AND             reduce using rule 210 (tCompare -> INT .)
    OR              reduce using rule 210 (tCompare -> INT .)
    ?               reduce using rule 210 (tCompare -> INT .)
    ,               reduce using rule 210 (tCompare -> INT .)
    ]               reduce using rule 210 (tCompare -> INT .)
    )               reduce using rule 210 (tCompare -> INT .)
    ;               reduce using rule 210 (tCompare -> INT .)
    :               reduce using rule 210 (tCompare -> INT .)
    }               reduce using rule 210 (tCompare -> INT .)
    +               reduce using rule 119 (valoresMat -> INT .)
    -               reduce using rule 119 (valoresMat -> INT .)
    *               reduce using rule 119 (valoresMat -> INT .)
    /               reduce using rule 119 (valoresMat -> INT .)
    %               reduce using rule 119 (valoresMat -> INT .)
    ^               reduce using rule 119 (valoresMat -> INT .)


state 201

    (212) tCompare -> FLOAT .
    (120) valoresMat -> FLOAT .

    EQEQ            reduce using rule 212 (tCompare -> FLOAT .)
    DISTINTO        reduce using rule 212 (tCompare -> FLOAT .)
    >               reduce using rule 212 (tCompare -> FLOAT .)
    <               reduce using rule 212 (tCompare -> FLOAT .)
    AND             reduce using rule 212 (tCompare -> FLOAT .)
    OR              reduce using rule 212 (tCompare -> FLOAT .)
    ?               reduce using rule 212 (tCompare -> FLOAT .)
    ,               reduce using rule 212 (tCompare -> FLOAT .)
    ]               reduce using rule 212 (tCompare -> FLOAT .)
    )               reduce using rule 212 (tCompare -> FLOAT .)
    ;               reduce using rule 212 (tCompare -> FLOAT .)
    :               reduce using rule 212 (tCompare -> FLOAT .)
    }               reduce using rule 212 (tCompare -> FLOAT .)
    +               reduce using rule 120 (valoresMat -> FLOAT .)
    -               reduce using rule 120 (valoresMat -> FLOAT .)
    *               reduce using rule 120 (valoresMat -> FLOAT .)
    /               reduce using rule 120 (valoresMat -> FLOAT .)
    %               reduce using rule 120 (valoresMat -> FLOAT .)
    ^               reduce using rule 120 (valoresMat -> FLOAT .)


state 202

    (172) valoresBool -> varsOps .
    (208) tCompare -> varsOps .
    (123) valoresMat -> varsOps .

    ?               reduce using rule 172 (valoresBool -> varsOps .)
    OR              reduce using rule 172 (valoresBool -> varsOps .)
    AND             reduce using rule 172 (valoresBool -> varsOps .)
    ,               reduce using rule 172 (valoresBool -> varsOps .)
    ]               reduce using rule 172 (valoresBool -> varsOps .)
    )               reduce using rule 172 (valoresBool -> varsOps .)
    ;               reduce using rule 172 (valoresBool -> varsOps .)
    :               reduce using rule 172 (valoresBool -> varsOps .)
    }               reduce using rule 172 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 208 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 208 (tCompare -> varsOps .)
    >               reduce using rule 208 (tCompare -> varsOps .)
    <               reduce using rule 208 (tCompare -> varsOps .)
    +               reduce using rule 123 (valoresMat -> varsOps .)
    -               reduce using rule 123 (valoresMat -> varsOps .)
    *               reduce using rule 123 (valoresMat -> varsOps .)
    /               reduce using rule 123 (valoresMat -> varsOps .)
    %               reduce using rule 123 (valoresMat -> varsOps .)
    ^               reduce using rule 123 (valoresMat -> varsOps .)


state 203

    (171) valoresBool -> varYVals .
    (110) varsOps -> varYVals . MASMAS
    (111) varsOps -> varYVals . MENOSMENOS
    (209) tCompare -> varYVals .
    (122) valoresMat -> varYVals .

    ?               reduce using rule 171 (valoresBool -> varYVals .)
    OR              reduce using rule 171 (valoresBool -> varYVals .)
    AND             reduce using rule 171 (valoresBool -> varYVals .)
    ,               reduce using rule 171 (valoresBool -> varYVals .)
    ]               reduce using rule 171 (valoresBool -> varYVals .)
    )               reduce using rule 171 (valoresBool -> varYVals .)
    ;               reduce using rule 171 (valoresBool -> varYVals .)
    :               reduce using rule 171 (valoresBool -> varYVals .)
    }               reduce using rule 171 (valoresBool -> varYVals .)
    MASMAS          shift and go to state 49
    MENOSMENOS      shift and go to state 46
    EQEQ            reduce using rule 209 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 209 (tCompare -> varYVals .)
    >               reduce using rule 209 (tCompare -> varYVals .)
    <               reduce using rule 209 (tCompare -> varYVals .)
    +               reduce using rule 122 (valoresMat -> varYVals .)
    -               reduce using rule 122 (valoresMat -> varYVals .)
    *               reduce using rule 122 (valoresMat -> varYVals .)
    /               reduce using rule 122 (valoresMat -> varYVals .)
    %               reduce using rule 122 (valoresMat -> varYVals .)
    ^               reduce using rule 122 (valoresMat -> varYVals .)


state 204

    (34) cosaBooleana -> expBool .
    (188) expBool -> expBool . OR and
    (190) expBool -> expBool . OR valoresBool

    )               reduce using rule 34 (cosaBooleana -> expBool .)
    OR              shift and go to state 171


state 205

    (47) funcInt -> MULTIESCALAR ( valores . , valores param )

    ,               shift and go to state 324


state 206

    (49) funcString -> CAPITALIZAR ( valores . )

    )               shift and go to state 325


state 207

    (12) com -> COMMENT . com
    (12) com -> . COMMENT com
    (13) com -> . empty
    (54) empty -> .

    COMMENT         shift and go to state 207
    IF              reduce using rule 54 (empty -> .)
    DO              reduce using rule 54 (empty -> .)
    RETURN          reduce using rule 54 (empty -> .)
    ;               reduce using rule 54 (empty -> .)
    WHILE           reduce using rule 54 (empty -> .)
    FOR             reduce using rule 54 (empty -> .)
    MENOSMENOS      reduce using rule 54 (empty -> .)
    MASMAS          reduce using rule 54 (empty -> .)
    ID              reduce using rule 54 (empty -> .)
    PRINT           reduce using rule 54 (empty -> .)
    MULTIESCALAR    reduce using rule 54 (empty -> .)
    LENGTH          reduce using rule 54 (empty -> .)
    CAPITALIZAR     reduce using rule 54 (empty -> .)
    COLINEALES      reduce using rule 54 (empty -> .)
    [               reduce using rule 54 (empty -> .)

    com                            shift and go to state 326
    empty                          shift and go to state 209

state 208

    (24) lCerrada -> loop COMMENT com . lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) sentencia -> . varsOps ;
    (28) sentencia -> . func ;
    (29) sentencia -> . varAsig ;
    (30) sentencia -> . RETURN ;
    (31) sentencia -> . ;
    (32) loop -> . WHILE ( valores )
    (33) loop -> . FOR ( primParam ; valores ; tercerParam )
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (42) func -> . funcReturn
    (43) func -> . funcVoid
    (113) varAsig -> . varYVals MULEQ valoresAsig
    (114) varAsig -> . varYVals DIVEQ valoresAsig
    (115) varAsig -> . varYVals MASEQ valoresAsig
    (116) varAsig -> . varYVals MENOSEQ valoresAsig
    (117) varAsig -> . varYVals = valoresAsig
    (118) varAsig -> . ID . ID = valoresAsig
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (51) funcVoid -> . PRINT ( valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (55) vec -> . [ elem ]

    IF              shift and go to state 35
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 327
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 38

state 209

    (13) com -> empty .

    IF              reduce using rule 13 (com -> empty .)
    DO              reduce using rule 13 (com -> empty .)
    RETURN          reduce using rule 13 (com -> empty .)
    ;               reduce using rule 13 (com -> empty .)
    WHILE           reduce using rule 13 (com -> empty .)
    FOR             reduce using rule 13 (com -> empty .)
    MENOSMENOS      reduce using rule 13 (com -> empty .)
    MASMAS          reduce using rule 13 (com -> empty .)
    ID              reduce using rule 13 (com -> empty .)
    PRINT           reduce using rule 13 (com -> empty .)
    MULTIESCALAR    reduce using rule 13 (com -> empty .)
    LENGTH          reduce using rule 13 (com -> empty .)
    CAPITALIZAR     reduce using rule 13 (com -> empty .)
    COLINEALES      reduce using rule 13 (com -> empty .)
    [               reduce using rule 13 (com -> empty .)


state 210

    (22) lCerrada -> loop { g . }

    }               shift and go to state 328


state 211

    (14) lCerrada -> IF ( cosaBooleana . ) { g } ELSE { g }
    (15) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE { g }
    (16) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana . ) { g } ELSE lCerrada
    (18) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE COMMENT com lCerrada

    )               shift and go to state 329


state 212

    (26) lCerrada -> DO lCerrada WHILE ( . valores ) ;
    (58) valores -> . eMat
    (59) valores -> . expBool
    (60) valores -> . funcReturn
    (61) valores -> . reg
    (62) valores -> . INT
    (63) valores -> . FLOAT
    (64) valores -> . STRING
    (65) valores -> . BOOL
    (66) valores -> . varYVals
    (67) valores -> . varsOps
    (68) valores -> . vec
    (69) valores -> . ternario
    (70) valores -> . atributos
    (71) valores -> . RES
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (105) reg -> . { campos }
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (55) vec -> . [ elem ]
    (182) ternario -> . ternarioMat
    (183) ternario -> . ternarioBool
    (184) ternario -> . ( ternarioMat )
    (185) ternario -> . ( ternarioBool )
    (186) ternario -> . ternarioVars
    (187) ternario -> . ( ternarioVars )
    (72) atributos -> . ID . valoresCampos
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 85
    FLOAT           shift and go to state 87
    STRING          shift and go to state 69
    BOOL            shift and go to state 90
    RES             shift and go to state 61
    {               shift and go to state 94
    ID              shift and go to state 84
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 71
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    ?               reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    ternario                       shift and go to state 59
    funcBool                       shift and go to state 60
    funcInt                        shift and go to state 62
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 68
    eMat                           shift and go to state 70
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 74
    vec                            shift and go to state 75
    paren                          shift and go to state 82
    reg                            shift and go to state 76
    expBool                        shift and go to state 77
    ternarioBool                   shift and go to state 78
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 86
    valores                        shift and go to state 330
    p                              shift and go to state 89
    varsOps                        shift and go to state 91
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 65
    varYVals                       shift and go to state 96
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 97

state 213

    (25) lCerrada -> DO { g } . WHILE ( valores ) ;

    WHILE           shift and go to state 331


state 214

    (50) funcBool -> COLINEALES ( valores , . valores )
    (58) valores -> . eMat
    (59) valores -> . expBool
    (60) valores -> . funcReturn
    (61) valores -> . reg
    (62) valores -> . INT
    (63) valores -> . FLOAT
    (64) valores -> . STRING
    (65) valores -> . BOOL
    (66) valores -> . varYVals
    (67) valores -> . varsOps
    (68) valores -> . vec
    (69) valores -> . ternario
    (70) valores -> . atributos
    (71) valores -> . RES
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (105) reg -> . { campos }
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (55) vec -> . [ elem ]
    (182) ternario -> . ternarioMat
    (183) ternario -> . ternarioBool
    (184) ternario -> . ( ternarioMat )
    (185) ternario -> . ( ternarioBool )
    (186) ternario -> . ternarioVars
    (187) ternario -> . ( ternarioVars )
    (72) atributos -> . ID . valoresCampos
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 85
    FLOAT           shift and go to state 87
    STRING          shift and go to state 69
    BOOL            shift and go to state 90
    RES             shift and go to state 61
    {               shift and go to state 94
    ID              shift and go to state 84
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 71
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    ?               reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    ternario                       shift and go to state 59
    funcBool                       shift and go to state 60
    funcInt                        shift and go to state 62
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 68
    eMat                           shift and go to state 70
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 74
    vec                            shift and go to state 75
    paren                          shift and go to state 82
    reg                            shift and go to state 76
    expBool                        shift and go to state 77
    ternarioBool                   shift and go to state 78
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 86
    valores                        shift and go to state 332
    p                              shift and go to state 89
    varsOps                        shift and go to state 91
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 65
    varYVals                       shift and go to state 96
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 97

state 215

    (32) loop -> WHILE ( valores ) .

    {               reduce using rule 32 (loop -> WHILE ( valores ) .)
    COMMENT         reduce using rule 32 (loop -> WHILE ( valores ) .)
    IF              reduce using rule 32 (loop -> WHILE ( valores ) .)
    DO              reduce using rule 32 (loop -> WHILE ( valores ) .)
    RETURN          reduce using rule 32 (loop -> WHILE ( valores ) .)
    ;               reduce using rule 32 (loop -> WHILE ( valores ) .)
    WHILE           reduce using rule 32 (loop -> WHILE ( valores ) .)
    FOR             reduce using rule 32 (loop -> WHILE ( valores ) .)
    MENOSMENOS      reduce using rule 32 (loop -> WHILE ( valores ) .)
    MASMAS          reduce using rule 32 (loop -> WHILE ( valores ) .)
    ID              reduce using rule 32 (loop -> WHILE ( valores ) .)
    PRINT           reduce using rule 32 (loop -> WHILE ( valores ) .)
    MULTIESCALAR    reduce using rule 32 (loop -> WHILE ( valores ) .)
    LENGTH          reduce using rule 32 (loop -> WHILE ( valores ) .)
    CAPITALIZAR     reduce using rule 32 (loop -> WHILE ( valores ) .)
    COLINEALES      reduce using rule 32 (loop -> WHILE ( valores ) .)
    [               reduce using rule 32 (loop -> WHILE ( valores ) .)


state 216

    (51) funcVoid -> PRINT ( valores ) .

    ;               reduce using rule 51 (funcVoid -> PRINT ( valores ) .)
    )               reduce using rule 51 (funcVoid -> PRINT ( valores ) .)


state 217

    (33) loop -> FOR ( primParam ; . valores ; tercerParam )
    (58) valores -> . eMat
    (59) valores -> . expBool
    (60) valores -> . funcReturn
    (61) valores -> . reg
    (62) valores -> . INT
    (63) valores -> . FLOAT
    (64) valores -> . STRING
    (65) valores -> . BOOL
    (66) valores -> . varYVals
    (67) valores -> . varsOps
    (68) valores -> . vec
    (69) valores -> . ternario
    (70) valores -> . atributos
    (71) valores -> . RES
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (105) reg -> . { campos }
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (55) vec -> . [ elem ]
    (182) ternario -> . ternarioMat
    (183) ternario -> . ternarioBool
    (184) ternario -> . ( ternarioMat )
    (185) ternario -> . ( ternarioBool )
    (186) ternario -> . ternarioVars
    (187) ternario -> . ( ternarioVars )
    (72) atributos -> . ID . valoresCampos
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 85
    FLOAT           shift and go to state 87
    STRING          shift and go to state 69
    BOOL            shift and go to state 90
    RES             shift and go to state 61
    {               shift and go to state 94
    ID              shift and go to state 84
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 71
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    ?               reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    ternario                       shift and go to state 59
    funcBool                       shift and go to state 60
    funcInt                        shift and go to state 62
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 68
    eMat                           shift and go to state 70
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 74
    vec                            shift and go to state 75
    paren                          shift and go to state 82
    reg                            shift and go to state 76
    expBool                        shift and go to state 77
    ternarioBool                   shift and go to state 78
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 86
    valores                        shift and go to state 333
    p                              shift and go to state 89
    varsOps                        shift and go to state 91
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 65
    varYVals                       shift and go to state 96
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 97

state 218

    (48) funcInt -> LENGTH ( valores ) .

    ,               reduce using rule 48 (funcInt -> LENGTH ( valores ) .)
    ]               reduce using rule 48 (funcInt -> LENGTH ( valores ) .)
    )               reduce using rule 48 (funcInt -> LENGTH ( valores ) .)
    ;               reduce using rule 48 (funcInt -> LENGTH ( valores ) .)
    :               reduce using rule 48 (funcInt -> LENGTH ( valores ) .)
    }               reduce using rule 48 (funcInt -> LENGTH ( valores ) .)
    +               reduce using rule 48 (funcInt -> LENGTH ( valores ) .)
    -               reduce using rule 48 (funcInt -> LENGTH ( valores ) .)
    *               reduce using rule 48 (funcInt -> LENGTH ( valores ) .)
    /               reduce using rule 48 (funcInt -> LENGTH ( valores ) .)
    %               reduce using rule 48 (funcInt -> LENGTH ( valores ) .)
    ^               reduce using rule 48 (funcInt -> LENGTH ( valores ) .)
    EQEQ            reduce using rule 48 (funcInt -> LENGTH ( valores ) .)
    DISTINTO        reduce using rule 48 (funcInt -> LENGTH ( valores ) .)
    >               reduce using rule 48 (funcInt -> LENGTH ( valores ) .)
    <               reduce using rule 48 (funcInt -> LENGTH ( valores ) .)
    AND             reduce using rule 48 (funcInt -> LENGTH ( valores ) .)
    OR              reduce using rule 48 (funcInt -> LENGTH ( valores ) .)
    ?               reduce using rule 48 (funcInt -> LENGTH ( valores ) .)


state 219

    (193) and -> and AND eq .
    (198) eq -> eq . EQEQ mayor
    (199) eq -> eq . DISTINTO mayor
    (202) eq -> eq . EQEQ tCompare
    (203) eq -> eq . DISTINTO tCompare

    AND             reduce using rule 193 (and -> and AND eq .)
    ?               reduce using rule 193 (and -> and AND eq .)
    OR              reduce using rule 193 (and -> and AND eq .)
    :               reduce using rule 193 (and -> and AND eq .)
    )               reduce using rule 193 (and -> and AND eq .)
    ,               reduce using rule 193 (and -> and AND eq .)
    }               reduce using rule 193 (and -> and AND eq .)
    ]               reduce using rule 193 (and -> and AND eq .)
    ;               reduce using rule 193 (and -> and AND eq .)
    EQEQ            shift and go to state 138
    DISTINTO        shift and go to state 139


state 220

    (195) and -> and AND valoresBool .

    AND             reduce using rule 195 (and -> and AND valoresBool .)
    ?               reduce using rule 195 (and -> and AND valoresBool .)
    OR              reduce using rule 195 (and -> and AND valoresBool .)
    :               reduce using rule 195 (and -> and AND valoresBool .)
    )               reduce using rule 195 (and -> and AND valoresBool .)
    ,               reduce using rule 195 (and -> and AND valoresBool .)
    }               reduce using rule 195 (and -> and AND valoresBool .)
    ]               reduce using rule 195 (and -> and AND valoresBool .)
    ;               reduce using rule 195 (and -> and AND valoresBool .)


state 221

    (171) valoresBool -> varYVals .
    (209) tCompare -> varYVals .
    (110) varsOps -> varYVals . MASMAS
    (111) varsOps -> varYVals . MENOSMENOS
    (122) valoresMat -> varYVals .

    AND             reduce using rule 171 (valoresBool -> varYVals .)
    OR              reduce using rule 171 (valoresBool -> varYVals .)
    ?               reduce using rule 171 (valoresBool -> varYVals .)
    ,               reduce using rule 171 (valoresBool -> varYVals .)
    ]               reduce using rule 171 (valoresBool -> varYVals .)
    )               reduce using rule 171 (valoresBool -> varYVals .)
    ;               reduce using rule 171 (valoresBool -> varYVals .)
    :               reduce using rule 171 (valoresBool -> varYVals .)
    }               reduce using rule 171 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 209 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 209 (tCompare -> varYVals .)
    >               reduce using rule 209 (tCompare -> varYVals .)
    <               reduce using rule 209 (tCompare -> varYVals .)
    MASMAS          shift and go to state 49
    MENOSMENOS      shift and go to state 46
    +               reduce using rule 122 (valoresMat -> varYVals .)
    -               reduce using rule 122 (valoresMat -> varYVals .)
    *               reduce using rule 122 (valoresMat -> varYVals .)
    /               reduce using rule 122 (valoresMat -> varYVals .)
    %               reduce using rule 122 (valoresMat -> varYVals .)
    ^               reduce using rule 122 (valoresMat -> varYVals .)


state 222

    (56) elem -> valores , elem .

    ]               reduce using rule 56 (elem -> valores , elem .)


state 223

    (155) p -> valoresMat % valoresMat .
    (158) exp -> valoresMat . ^ iSing
    (160) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 155 (p -> valoresMat % valoresMat .)
    /               reduce using rule 155 (p -> valoresMat % valoresMat .)
    %               reduce using rule 155 (p -> valoresMat % valoresMat .)
    +               reduce using rule 155 (p -> valoresMat % valoresMat .)
    -               reduce using rule 155 (p -> valoresMat % valoresMat .)
    EQEQ            reduce using rule 155 (p -> valoresMat % valoresMat .)
    DISTINTO        reduce using rule 155 (p -> valoresMat % valoresMat .)
    >               reduce using rule 155 (p -> valoresMat % valoresMat .)
    <               reduce using rule 155 (p -> valoresMat % valoresMat .)
    :               reduce using rule 155 (p -> valoresMat % valoresMat .)
    ;               reduce using rule 155 (p -> valoresMat % valoresMat .)
    )               reduce using rule 155 (p -> valoresMat % valoresMat .)
    ,               reduce using rule 155 (p -> valoresMat % valoresMat .)
    ]               reduce using rule 155 (p -> valoresMat % valoresMat .)
    }               reduce using rule 155 (p -> valoresMat % valoresMat .)
    AND             reduce using rule 155 (p -> valoresMat % valoresMat .)
    OR              reduce using rule 155 (p -> valoresMat % valoresMat .)
    ?               reduce using rule 155 (p -> valoresMat % valoresMat .)
    ^               shift and go to state 137


state 224

    (149) p -> valoresMat % exp .
    (157) exp -> exp . ^ iSing
    (159) exp -> exp . ^ valoresMat

    *               reduce using rule 149 (p -> valoresMat % exp .)
    /               reduce using rule 149 (p -> valoresMat % exp .)
    %               reduce using rule 149 (p -> valoresMat % exp .)
    +               reduce using rule 149 (p -> valoresMat % exp .)
    -               reduce using rule 149 (p -> valoresMat % exp .)
    EQEQ            reduce using rule 149 (p -> valoresMat % exp .)
    DISTINTO        reduce using rule 149 (p -> valoresMat % exp .)
    >               reduce using rule 149 (p -> valoresMat % exp .)
    <               reduce using rule 149 (p -> valoresMat % exp .)
    :               reduce using rule 149 (p -> valoresMat % exp .)
    ;               reduce using rule 149 (p -> valoresMat % exp .)
    )               reduce using rule 149 (p -> valoresMat % exp .)
    ,               reduce using rule 149 (p -> valoresMat % exp .)
    ]               reduce using rule 149 (p -> valoresMat % exp .)
    }               reduce using rule 149 (p -> valoresMat % exp .)
    AND             reduce using rule 149 (p -> valoresMat % exp .)
    OR              reduce using rule 149 (p -> valoresMat % exp .)
    ?               reduce using rule 149 (p -> valoresMat % exp .)
    ^               shift and go to state 187


state 225

    (141) eMat -> valoresMat + valoresMat .
    (147) p -> valoresMat . * exp
    (148) p -> valoresMat . / exp
    (149) p -> valoresMat . % exp
    (153) p -> valoresMat . * valoresMat
    (154) p -> valoresMat . / valoresMat
    (155) p -> valoresMat . % valoresMat
    (158) exp -> valoresMat . ^ iSing
    (160) exp -> valoresMat . ^ valoresMat

    +               reduce using rule 141 (eMat -> valoresMat + valoresMat .)
    -               reduce using rule 141 (eMat -> valoresMat + valoresMat .)
    :               reduce using rule 141 (eMat -> valoresMat + valoresMat .)
    EQEQ            reduce using rule 141 (eMat -> valoresMat + valoresMat .)
    DISTINTO        reduce using rule 141 (eMat -> valoresMat + valoresMat .)
    >               reduce using rule 141 (eMat -> valoresMat + valoresMat .)
    <               reduce using rule 141 (eMat -> valoresMat + valoresMat .)
    AND             reduce using rule 141 (eMat -> valoresMat + valoresMat .)
    OR              reduce using rule 141 (eMat -> valoresMat + valoresMat .)
    ?               reduce using rule 141 (eMat -> valoresMat + valoresMat .)
    ,               reduce using rule 141 (eMat -> valoresMat + valoresMat .)
    ]               reduce using rule 141 (eMat -> valoresMat + valoresMat .)
    )               reduce using rule 141 (eMat -> valoresMat + valoresMat .)
    ;               reduce using rule 141 (eMat -> valoresMat + valoresMat .)
    }               reduce using rule 141 (eMat -> valoresMat + valoresMat .)
    *               shift and go to state 134
    /               shift and go to state 136
    %               shift and go to state 132
    ^               shift and go to state 137


state 226

    (137) eMat -> valoresMat + p .
    (144) p -> p . * exp
    (145) p -> p . / exp
    (146) p -> p . % exp
    (150) p -> p . * valoresMat
    (151) p -> p . / valoresMat
    (152) p -> p . % valoresMat

    +               reduce using rule 137 (eMat -> valoresMat + p .)
    -               reduce using rule 137 (eMat -> valoresMat + p .)
    :               reduce using rule 137 (eMat -> valoresMat + p .)
    EQEQ            reduce using rule 137 (eMat -> valoresMat + p .)
    DISTINTO        reduce using rule 137 (eMat -> valoresMat + p .)
    >               reduce using rule 137 (eMat -> valoresMat + p .)
    <               reduce using rule 137 (eMat -> valoresMat + p .)
    AND             reduce using rule 137 (eMat -> valoresMat + p .)
    OR              reduce using rule 137 (eMat -> valoresMat + p .)
    ?               reduce using rule 137 (eMat -> valoresMat + p .)
    ,               reduce using rule 137 (eMat -> valoresMat + p .)
    ]               reduce using rule 137 (eMat -> valoresMat + p .)
    )               reduce using rule 137 (eMat -> valoresMat + p .)
    ;               reduce using rule 137 (eMat -> valoresMat + p .)
    }               reduce using rule 137 (eMat -> valoresMat + p .)
    *               shift and go to state 180
    /               shift and go to state 181
    %               shift and go to state 179


state 227

    (153) p -> valoresMat * valoresMat .
    (158) exp -> valoresMat . ^ iSing
    (160) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 153 (p -> valoresMat * valoresMat .)
    /               reduce using rule 153 (p -> valoresMat * valoresMat .)
    %               reduce using rule 153 (p -> valoresMat * valoresMat .)
    +               reduce using rule 153 (p -> valoresMat * valoresMat .)
    -               reduce using rule 153 (p -> valoresMat * valoresMat .)
    EQEQ            reduce using rule 153 (p -> valoresMat * valoresMat .)
    DISTINTO        reduce using rule 153 (p -> valoresMat * valoresMat .)
    >               reduce using rule 153 (p -> valoresMat * valoresMat .)
    <               reduce using rule 153 (p -> valoresMat * valoresMat .)
    :               reduce using rule 153 (p -> valoresMat * valoresMat .)
    ;               reduce using rule 153 (p -> valoresMat * valoresMat .)
    )               reduce using rule 153 (p -> valoresMat * valoresMat .)
    ,               reduce using rule 153 (p -> valoresMat * valoresMat .)
    ]               reduce using rule 153 (p -> valoresMat * valoresMat .)
    }               reduce using rule 153 (p -> valoresMat * valoresMat .)
    AND             reduce using rule 153 (p -> valoresMat * valoresMat .)
    OR              reduce using rule 153 (p -> valoresMat * valoresMat .)
    ?               reduce using rule 153 (p -> valoresMat * valoresMat .)
    ^               shift and go to state 137


state 228

    (147) p -> valoresMat * exp .
    (157) exp -> exp . ^ iSing
    (159) exp -> exp . ^ valoresMat

    *               reduce using rule 147 (p -> valoresMat * exp .)
    /               reduce using rule 147 (p -> valoresMat * exp .)
    %               reduce using rule 147 (p -> valoresMat * exp .)
    +               reduce using rule 147 (p -> valoresMat * exp .)
    -               reduce using rule 147 (p -> valoresMat * exp .)
    EQEQ            reduce using rule 147 (p -> valoresMat * exp .)
    DISTINTO        reduce using rule 147 (p -> valoresMat * exp .)
    >               reduce using rule 147 (p -> valoresMat * exp .)
    <               reduce using rule 147 (p -> valoresMat * exp .)
    :               reduce using rule 147 (p -> valoresMat * exp .)
    ;               reduce using rule 147 (p -> valoresMat * exp .)
    )               reduce using rule 147 (p -> valoresMat * exp .)
    ,               reduce using rule 147 (p -> valoresMat * exp .)
    ]               reduce using rule 147 (p -> valoresMat * exp .)
    }               reduce using rule 147 (p -> valoresMat * exp .)
    AND             reduce using rule 147 (p -> valoresMat * exp .)
    OR              reduce using rule 147 (p -> valoresMat * exp .)
    ?               reduce using rule 147 (p -> valoresMat * exp .)
    ^               shift and go to state 187


state 229

    (142) eMat -> valoresMat - valoresMat .
    (147) p -> valoresMat . * exp
    (148) p -> valoresMat . / exp
    (149) p -> valoresMat . % exp
    (153) p -> valoresMat . * valoresMat
    (154) p -> valoresMat . / valoresMat
    (155) p -> valoresMat . % valoresMat
    (158) exp -> valoresMat . ^ iSing
    (160) exp -> valoresMat . ^ valoresMat

    +               reduce using rule 142 (eMat -> valoresMat - valoresMat .)
    -               reduce using rule 142 (eMat -> valoresMat - valoresMat .)
    :               reduce using rule 142 (eMat -> valoresMat - valoresMat .)
    EQEQ            reduce using rule 142 (eMat -> valoresMat - valoresMat .)
    DISTINTO        reduce using rule 142 (eMat -> valoresMat - valoresMat .)
    >               reduce using rule 142 (eMat -> valoresMat - valoresMat .)
    <               reduce using rule 142 (eMat -> valoresMat - valoresMat .)
    AND             reduce using rule 142 (eMat -> valoresMat - valoresMat .)
    OR              reduce using rule 142 (eMat -> valoresMat - valoresMat .)
    ?               reduce using rule 142 (eMat -> valoresMat - valoresMat .)
    ,               reduce using rule 142 (eMat -> valoresMat - valoresMat .)
    ]               reduce using rule 142 (eMat -> valoresMat - valoresMat .)
    )               reduce using rule 142 (eMat -> valoresMat - valoresMat .)
    ;               reduce using rule 142 (eMat -> valoresMat - valoresMat .)
    }               reduce using rule 142 (eMat -> valoresMat - valoresMat .)
    *               shift and go to state 134
    /               shift and go to state 136
    %               shift and go to state 132
    ^               shift and go to state 137


state 230

    (138) eMat -> valoresMat - p .
    (144) p -> p . * exp
    (145) p -> p . / exp
    (146) p -> p . % exp
    (150) p -> p . * valoresMat
    (151) p -> p . / valoresMat
    (152) p -> p . % valoresMat

    +               reduce using rule 138 (eMat -> valoresMat - p .)
    -               reduce using rule 138 (eMat -> valoresMat - p .)
    :               reduce using rule 138 (eMat -> valoresMat - p .)
    EQEQ            reduce using rule 138 (eMat -> valoresMat - p .)
    DISTINTO        reduce using rule 138 (eMat -> valoresMat - p .)
    >               reduce using rule 138 (eMat -> valoresMat - p .)
    <               reduce using rule 138 (eMat -> valoresMat - p .)
    AND             reduce using rule 138 (eMat -> valoresMat - p .)
    OR              reduce using rule 138 (eMat -> valoresMat - p .)
    ?               reduce using rule 138 (eMat -> valoresMat - p .)
    ,               reduce using rule 138 (eMat -> valoresMat - p .)
    ]               reduce using rule 138 (eMat -> valoresMat - p .)
    )               reduce using rule 138 (eMat -> valoresMat - p .)
    ;               reduce using rule 138 (eMat -> valoresMat - p .)
    }               reduce using rule 138 (eMat -> valoresMat - p .)
    *               shift and go to state 180
    /               shift and go to state 181
    %               shift and go to state 179


state 231

    (154) p -> valoresMat / valoresMat .
    (158) exp -> valoresMat . ^ iSing
    (160) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 154 (p -> valoresMat / valoresMat .)
    /               reduce using rule 154 (p -> valoresMat / valoresMat .)
    %               reduce using rule 154 (p -> valoresMat / valoresMat .)
    +               reduce using rule 154 (p -> valoresMat / valoresMat .)
    -               reduce using rule 154 (p -> valoresMat / valoresMat .)
    EQEQ            reduce using rule 154 (p -> valoresMat / valoresMat .)
    DISTINTO        reduce using rule 154 (p -> valoresMat / valoresMat .)
    >               reduce using rule 154 (p -> valoresMat / valoresMat .)
    <               reduce using rule 154 (p -> valoresMat / valoresMat .)
    :               reduce using rule 154 (p -> valoresMat / valoresMat .)
    ;               reduce using rule 154 (p -> valoresMat / valoresMat .)
    )               reduce using rule 154 (p -> valoresMat / valoresMat .)
    ,               reduce using rule 154 (p -> valoresMat / valoresMat .)
    ]               reduce using rule 154 (p -> valoresMat / valoresMat .)
    }               reduce using rule 154 (p -> valoresMat / valoresMat .)
    AND             reduce using rule 154 (p -> valoresMat / valoresMat .)
    OR              reduce using rule 154 (p -> valoresMat / valoresMat .)
    ?               reduce using rule 154 (p -> valoresMat / valoresMat .)
    ^               shift and go to state 137


state 232

    (148) p -> valoresMat / exp .
    (157) exp -> exp . ^ iSing
    (159) exp -> exp . ^ valoresMat

    *               reduce using rule 148 (p -> valoresMat / exp .)
    /               reduce using rule 148 (p -> valoresMat / exp .)
    %               reduce using rule 148 (p -> valoresMat / exp .)
    +               reduce using rule 148 (p -> valoresMat / exp .)
    -               reduce using rule 148 (p -> valoresMat / exp .)
    EQEQ            reduce using rule 148 (p -> valoresMat / exp .)
    DISTINTO        reduce using rule 148 (p -> valoresMat / exp .)
    >               reduce using rule 148 (p -> valoresMat / exp .)
    <               reduce using rule 148 (p -> valoresMat / exp .)
    :               reduce using rule 148 (p -> valoresMat / exp .)
    ;               reduce using rule 148 (p -> valoresMat / exp .)
    )               reduce using rule 148 (p -> valoresMat / exp .)
    ,               reduce using rule 148 (p -> valoresMat / exp .)
    ]               reduce using rule 148 (p -> valoresMat / exp .)
    }               reduce using rule 148 (p -> valoresMat / exp .)
    AND             reduce using rule 148 (p -> valoresMat / exp .)
    OR              reduce using rule 148 (p -> valoresMat / exp .)
    ?               reduce using rule 148 (p -> valoresMat / exp .)
    ^               shift and go to state 187


state 233

    (160) exp -> valoresMat ^ valoresMat .

    ^               reduce using rule 160 (exp -> valoresMat ^ valoresMat .)
    *               reduce using rule 160 (exp -> valoresMat ^ valoresMat .)
    /               reduce using rule 160 (exp -> valoresMat ^ valoresMat .)
    %               reduce using rule 160 (exp -> valoresMat ^ valoresMat .)
    +               reduce using rule 160 (exp -> valoresMat ^ valoresMat .)
    -               reduce using rule 160 (exp -> valoresMat ^ valoresMat .)
    EQEQ            reduce using rule 160 (exp -> valoresMat ^ valoresMat .)
    DISTINTO        reduce using rule 160 (exp -> valoresMat ^ valoresMat .)
    >               reduce using rule 160 (exp -> valoresMat ^ valoresMat .)
    <               reduce using rule 160 (exp -> valoresMat ^ valoresMat .)
    :               reduce using rule 160 (exp -> valoresMat ^ valoresMat .)
    AND             reduce using rule 160 (exp -> valoresMat ^ valoresMat .)
    OR              reduce using rule 160 (exp -> valoresMat ^ valoresMat .)
    ?               reduce using rule 160 (exp -> valoresMat ^ valoresMat .)
    ,               reduce using rule 160 (exp -> valoresMat ^ valoresMat .)
    ]               reduce using rule 160 (exp -> valoresMat ^ valoresMat .)
    )               reduce using rule 160 (exp -> valoresMat ^ valoresMat .)
    ;               reduce using rule 160 (exp -> valoresMat ^ valoresMat .)
    }               reduce using rule 160 (exp -> valoresMat ^ valoresMat .)


state 234

    (158) exp -> valoresMat ^ iSing .

    ^               reduce using rule 158 (exp -> valoresMat ^ iSing .)
    *               reduce using rule 158 (exp -> valoresMat ^ iSing .)
    /               reduce using rule 158 (exp -> valoresMat ^ iSing .)
    %               reduce using rule 158 (exp -> valoresMat ^ iSing .)
    +               reduce using rule 158 (exp -> valoresMat ^ iSing .)
    -               reduce using rule 158 (exp -> valoresMat ^ iSing .)
    EQEQ            reduce using rule 158 (exp -> valoresMat ^ iSing .)
    DISTINTO        reduce using rule 158 (exp -> valoresMat ^ iSing .)
    >               reduce using rule 158 (exp -> valoresMat ^ iSing .)
    <               reduce using rule 158 (exp -> valoresMat ^ iSing .)
    :               reduce using rule 158 (exp -> valoresMat ^ iSing .)
    AND             reduce using rule 158 (exp -> valoresMat ^ iSing .)
    OR              reduce using rule 158 (exp -> valoresMat ^ iSing .)
    ?               reduce using rule 158 (exp -> valoresMat ^ iSing .)
    ,               reduce using rule 158 (exp -> valoresMat ^ iSing .)
    ]               reduce using rule 158 (exp -> valoresMat ^ iSing .)
    )               reduce using rule 158 (exp -> valoresMat ^ iSing .)
    ;               reduce using rule 158 (exp -> valoresMat ^ iSing .)
    }               reduce using rule 158 (exp -> valoresMat ^ iSing .)


state 235

    (198) eq -> eq EQEQ mayor .

    EQEQ            reduce using rule 198 (eq -> eq EQEQ mayor .)
    DISTINTO        reduce using rule 198 (eq -> eq EQEQ mayor .)
    AND             reduce using rule 198 (eq -> eq EQEQ mayor .)
    ?               reduce using rule 198 (eq -> eq EQEQ mayor .)
    OR              reduce using rule 198 (eq -> eq EQEQ mayor .)
    :               reduce using rule 198 (eq -> eq EQEQ mayor .)
    )               reduce using rule 198 (eq -> eq EQEQ mayor .)
    ,               reduce using rule 198 (eq -> eq EQEQ mayor .)
    ]               reduce using rule 198 (eq -> eq EQEQ mayor .)
    ;               reduce using rule 198 (eq -> eq EQEQ mayor .)
    }               reduce using rule 198 (eq -> eq EQEQ mayor .)


state 236

    (213) tCompare -> ( . ternarioBool )
    (214) tCompare -> ( . ternarioMat )
    (125) valoresMat -> ( . ternarioMat )
    (222) parenBool -> ( . expBool )
    (167) paren -> ( . eMat )
    (168) paren -> ( . valoresMat )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (50) funcBool -> . COLINEALES ( valores , valores )
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (55) vec -> . [ elem ]
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 154
    FLOAT           shift and go to state 155
    STRING          shift and go to state 152
    (               shift and go to state 150
    BOOL            shift and go to state 156
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    [               shift and go to state 20
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 146
    menor                          shift and go to state 64
    valoresMat                     shift and go to state 147
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 320
    eMat                           shift and go to state 149
    mayor                          shift and go to state 95
    ternarioMat                    shift and go to state 321
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    iSing                          shift and go to state 79
    ternarioBool                   shift and go to state 334
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 157
    exp                            shift and go to state 93
    varYVals                       shift and go to state 159
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 322

state 237

    (202) eq -> eq EQEQ tCompare .
    (215) mayor -> tCompare . > tCompare
    (217) menor -> tCompare . < tCompare

    EQEQ            reduce using rule 202 (eq -> eq EQEQ tCompare .)
    DISTINTO        reduce using rule 202 (eq -> eq EQEQ tCompare .)
    AND             reduce using rule 202 (eq -> eq EQEQ tCompare .)
    ?               reduce using rule 202 (eq -> eq EQEQ tCompare .)
    OR              reduce using rule 202 (eq -> eq EQEQ tCompare .)
    :               reduce using rule 202 (eq -> eq EQEQ tCompare .)
    )               reduce using rule 202 (eq -> eq EQEQ tCompare .)
    ,               reduce using rule 202 (eq -> eq EQEQ tCompare .)
    ]               reduce using rule 202 (eq -> eq EQEQ tCompare .)
    ;               reduce using rule 202 (eq -> eq EQEQ tCompare .)
    }               reduce using rule 202 (eq -> eq EQEQ tCompare .)
    >               shift and go to state 176
    <               shift and go to state 175


state 238

    (208) tCompare -> varsOps .
    (123) valoresMat -> varsOps .

    EQEQ            reduce using rule 208 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 208 (tCompare -> varsOps .)
    AND             reduce using rule 208 (tCompare -> varsOps .)
    OR              reduce using rule 208 (tCompare -> varsOps .)
    ?               reduce using rule 208 (tCompare -> varsOps .)
    ,               reduce using rule 208 (tCompare -> varsOps .)
    ]               reduce using rule 208 (tCompare -> varsOps .)
    )               reduce using rule 208 (tCompare -> varsOps .)
    ;               reduce using rule 208 (tCompare -> varsOps .)
    :               reduce using rule 208 (tCompare -> varsOps .)
    }               reduce using rule 208 (tCompare -> varsOps .)
    >               reduce using rule 208 (tCompare -> varsOps .)
    <               reduce using rule 208 (tCompare -> varsOps .)
    +               reduce using rule 123 (valoresMat -> varsOps .)
    -               reduce using rule 123 (valoresMat -> varsOps .)
    *               reduce using rule 123 (valoresMat -> varsOps .)
    /               reduce using rule 123 (valoresMat -> varsOps .)
    %               reduce using rule 123 (valoresMat -> varsOps .)
    ^               reduce using rule 123 (valoresMat -> varsOps .)


state 239

    (209) tCompare -> varYVals .
    (110) varsOps -> varYVals . MASMAS
    (111) varsOps -> varYVals . MENOSMENOS
    (122) valoresMat -> varYVals .

    EQEQ            reduce using rule 209 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 209 (tCompare -> varYVals .)
    AND             reduce using rule 209 (tCompare -> varYVals .)
    OR              reduce using rule 209 (tCompare -> varYVals .)
    ?               reduce using rule 209 (tCompare -> varYVals .)
    ,               reduce using rule 209 (tCompare -> varYVals .)
    ]               reduce using rule 209 (tCompare -> varYVals .)
    )               reduce using rule 209 (tCompare -> varYVals .)
    ;               reduce using rule 209 (tCompare -> varYVals .)
    :               reduce using rule 209 (tCompare -> varYVals .)
    }               reduce using rule 209 (tCompare -> varYVals .)
    >               reduce using rule 209 (tCompare -> varYVals .)
    <               reduce using rule 209 (tCompare -> varYVals .)
    MASMAS          shift and go to state 49
    MENOSMENOS      shift and go to state 46
    +               reduce using rule 122 (valoresMat -> varYVals .)
    -               reduce using rule 122 (valoresMat -> varYVals .)
    *               reduce using rule 122 (valoresMat -> varYVals .)
    /               reduce using rule 122 (valoresMat -> varYVals .)
    %               reduce using rule 122 (valoresMat -> varYVals .)
    ^               reduce using rule 122 (valoresMat -> varYVals .)


state 240

    (199) eq -> eq DISTINTO mayor .

    EQEQ            reduce using rule 199 (eq -> eq DISTINTO mayor .)
    DISTINTO        reduce using rule 199 (eq -> eq DISTINTO mayor .)
    AND             reduce using rule 199 (eq -> eq DISTINTO mayor .)
    ?               reduce using rule 199 (eq -> eq DISTINTO mayor .)
    OR              reduce using rule 199 (eq -> eq DISTINTO mayor .)
    :               reduce using rule 199 (eq -> eq DISTINTO mayor .)
    )               reduce using rule 199 (eq -> eq DISTINTO mayor .)
    ,               reduce using rule 199 (eq -> eq DISTINTO mayor .)
    ]               reduce using rule 199 (eq -> eq DISTINTO mayor .)
    ;               reduce using rule 199 (eq -> eq DISTINTO mayor .)
    }               reduce using rule 199 (eq -> eq DISTINTO mayor .)


state 241

    (203) eq -> eq DISTINTO tCompare .
    (215) mayor -> tCompare . > tCompare
    (217) menor -> tCompare . < tCompare

    EQEQ            reduce using rule 203 (eq -> eq DISTINTO tCompare .)
    DISTINTO        reduce using rule 203 (eq -> eq DISTINTO tCompare .)
    AND             reduce using rule 203 (eq -> eq DISTINTO tCompare .)
    ?               reduce using rule 203 (eq -> eq DISTINTO tCompare .)
    OR              reduce using rule 203 (eq -> eq DISTINTO tCompare .)
    :               reduce using rule 203 (eq -> eq DISTINTO tCompare .)
    )               reduce using rule 203 (eq -> eq DISTINTO tCompare .)
    ,               reduce using rule 203 (eq -> eq DISTINTO tCompare .)
    ]               reduce using rule 203 (eq -> eq DISTINTO tCompare .)
    ;               reduce using rule 203 (eq -> eq DISTINTO tCompare .)
    }               reduce using rule 203 (eq -> eq DISTINTO tCompare .)
    >               shift and go to state 176
    <               shift and go to state 175


state 242

    (194) and -> valoresBool AND eq .
    (198) eq -> eq . EQEQ mayor
    (199) eq -> eq . DISTINTO mayor
    (202) eq -> eq . EQEQ tCompare
    (203) eq -> eq . DISTINTO tCompare

    AND             reduce using rule 194 (and -> valoresBool AND eq .)
    ?               reduce using rule 194 (and -> valoresBool AND eq .)
    OR              reduce using rule 194 (and -> valoresBool AND eq .)
    :               reduce using rule 194 (and -> valoresBool AND eq .)
    )               reduce using rule 194 (and -> valoresBool AND eq .)
    ,               reduce using rule 194 (and -> valoresBool AND eq .)
    }               reduce using rule 194 (and -> valoresBool AND eq .)
    ]               reduce using rule 194 (and -> valoresBool AND eq .)
    ;               reduce using rule 194 (and -> valoresBool AND eq .)
    EQEQ            shift and go to state 138
    DISTINTO        shift and go to state 139


state 243

    (196) and -> valoresBool AND valoresBool .

    AND             reduce using rule 196 (and -> valoresBool AND valoresBool .)
    ?               reduce using rule 196 (and -> valoresBool AND valoresBool .)
    OR              reduce using rule 196 (and -> valoresBool AND valoresBool .)
    :               reduce using rule 196 (and -> valoresBool AND valoresBool .)
    )               reduce using rule 196 (and -> valoresBool AND valoresBool .)
    ,               reduce using rule 196 (and -> valoresBool AND valoresBool .)
    }               reduce using rule 196 (and -> valoresBool AND valoresBool .)
    ]               reduce using rule 196 (and -> valoresBool AND valoresBool .)
    ;               reduce using rule 196 (and -> valoresBool AND valoresBool .)


state 244

    (189) expBool -> valoresBool OR and .
    (193) and -> and . AND eq
    (195) and -> and . AND valoresBool

    OR              reduce using rule 189 (expBool -> valoresBool OR and .)
    ?               reduce using rule 189 (expBool -> valoresBool OR and .)
    ;               reduce using rule 189 (expBool -> valoresBool OR and .)
    )               reduce using rule 189 (expBool -> valoresBool OR and .)
    ,               reduce using rule 189 (expBool -> valoresBool OR and .)
    :               reduce using rule 189 (expBool -> valoresBool OR and .)
    ]               reduce using rule 189 (expBool -> valoresBool OR and .)
    }               reduce using rule 189 (expBool -> valoresBool OR and .)
    AND             shift and go to state 130


state 245

    (191) expBool -> valoresBool OR valoresBool .
    (194) and -> valoresBool . AND eq
    (196) and -> valoresBool . AND valoresBool

    OR              reduce using rule 191 (expBool -> valoresBool OR valoresBool .)
    ?               reduce using rule 191 (expBool -> valoresBool OR valoresBool .)
    ;               reduce using rule 191 (expBool -> valoresBool OR valoresBool .)
    )               reduce using rule 191 (expBool -> valoresBool OR valoresBool .)
    ,               reduce using rule 191 (expBool -> valoresBool OR valoresBool .)
    :               reduce using rule 191 (expBool -> valoresBool OR valoresBool .)
    ]               reduce using rule 191 (expBool -> valoresBool OR valoresBool .)
    }               reduce using rule 191 (expBool -> valoresBool OR valoresBool .)
    AND             shift and go to state 140


state 246

    (92) valoresTernarioVars -> atributos .

    :               reduce using rule 92 (valoresTernarioVars -> atributos .)
    ,               reduce using rule 92 (valoresTernarioVars -> atributos .)
    ]               reduce using rule 92 (valoresTernarioVars -> atributos .)
    )               reduce using rule 92 (valoresTernarioVars -> atributos .)
    ;               reduce using rule 92 (valoresTernarioVars -> atributos .)
    }               reduce using rule 92 (valoresTernarioVars -> atributos .)


state 247

    (178) valoresTernarioBool -> funcBool .
    (170) valoresBool -> funcBool .

    :               reduce using rule 178 (valoresTernarioBool -> funcBool .)
    )               reduce using rule 178 (valoresTernarioBool -> funcBool .)
    ,               reduce using rule 178 (valoresTernarioBool -> funcBool .)
    ]               reduce using rule 178 (valoresTernarioBool -> funcBool .)
    ;               reduce using rule 178 (valoresTernarioBool -> funcBool .)
    }               reduce using rule 178 (valoresTernarioBool -> funcBool .)
    ?               reduce using rule 170 (valoresBool -> funcBool .)
    OR              reduce using rule 170 (valoresBool -> funcBool .)
    AND             reduce using rule 170 (valoresBool -> funcBool .)


state 248

    (93) valoresTernarioVars -> RES .

    :               reduce using rule 93 (valoresTernarioVars -> RES .)
    ,               reduce using rule 93 (valoresTernarioVars -> RES .)
    ]               reduce using rule 93 (valoresTernarioVars -> RES .)
    )               reduce using rule 93 (valoresTernarioVars -> RES .)
    ;               reduce using rule 93 (valoresTernarioVars -> RES .)
    }               reduce using rule 93 (valoresTernarioVars -> RES .)


state 249

    (130) valoresTernarioMat -> funcInt .
    (121) valoresMat -> funcInt .
    (211) tCompare -> funcInt .

    :               reduce using rule 130 (valoresTernarioMat -> funcInt .)
    )               reduce using rule 130 (valoresTernarioMat -> funcInt .)
    ,               reduce using rule 130 (valoresTernarioMat -> funcInt .)
    ]               reduce using rule 130 (valoresTernarioMat -> funcInt .)
    ;               reduce using rule 130 (valoresTernarioMat -> funcInt .)
    }               reduce using rule 130 (valoresTernarioMat -> funcInt .)
    +               reduce using rule 121 (valoresMat -> funcInt .)
    -               reduce using rule 121 (valoresMat -> funcInt .)
    *               reduce using rule 121 (valoresMat -> funcInt .)
    /               reduce using rule 121 (valoresMat -> funcInt .)
    %               reduce using rule 121 (valoresMat -> funcInt .)
    ^               reduce using rule 121 (valoresMat -> funcInt .)
    EQEQ            reduce using rule 211 (tCompare -> funcInt .)
    DISTINTO        reduce using rule 211 (tCompare -> funcInt .)
    >               reduce using rule 211 (tCompare -> funcInt .)
    <               reduce using rule 211 (tCompare -> funcInt .)


state 250

    (126) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (175) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (189) expBool -> valoresBool . OR and
    (191) expBool -> valoresBool . OR valoresBool
    (76) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (194) and -> valoresBool . AND eq
    (196) and -> valoresBool . AND valoresBool

    ?               shift and go to state 142
    OR              shift and go to state 141
    AND             shift and go to state 140


state 251

    (132) valoresTernarioMat -> eMat .
    (135) eMat -> eMat . + p
    (136) eMat -> eMat . - p
    (139) eMat -> eMat . + valoresMat
    (140) eMat -> eMat . - valoresMat
    (207) tCompare -> eMat .

    :               reduce using rule 132 (valoresTernarioMat -> eMat .)
    )               reduce using rule 132 (valoresTernarioMat -> eMat .)
    ,               reduce using rule 132 (valoresTernarioMat -> eMat .)
    ]               reduce using rule 132 (valoresTernarioMat -> eMat .)
    ;               reduce using rule 132 (valoresTernarioMat -> eMat .)
    }               reduce using rule 132 (valoresTernarioMat -> eMat .)
    +               shift and go to state 143
    -               shift and go to state 144
    EQEQ            reduce using rule 207 (tCompare -> eMat .)
    DISTINTO        reduce using rule 207 (tCompare -> eMat .)
    >               reduce using rule 207 (tCompare -> eMat .)
    <               reduce using rule 207 (tCompare -> eMat .)


state 252

    (175) ternarioBool -> valoresBool ? valoresTernarioBool . : valoresTernarioBool
    (80) ternarioVars -> valoresBool ? valoresTernarioBool . : valoresTernarioVars

    :               shift and go to state 335


state 253

    (133) valoresTernarioMat -> ternarioMat .

    :               reduce using rule 133 (valoresTernarioMat -> ternarioMat .)
    )               reduce using rule 133 (valoresTernarioMat -> ternarioMat .)
    ,               reduce using rule 133 (valoresTernarioMat -> ternarioMat .)
    ]               reduce using rule 133 (valoresTernarioMat -> ternarioMat .)
    ;               reduce using rule 133 (valoresTernarioMat -> ternarioMat .)
    }               reduce using rule 133 (valoresTernarioMat -> ternarioMat .)


state 254

    (89) valoresTernarioVars -> vec .
    (98) vecVal -> vec . m
    (99) m -> . [ INT ]
    (100) m -> . [ INT ] m
    (101) m -> . [ varYVals ] m
    (102) m -> . [ varYVals ]
    (103) m -> . [ eMat ] m
    (104) m -> . [ eMat ]

    :               reduce using rule 89 (valoresTernarioVars -> vec .)
    ,               reduce using rule 89 (valoresTernarioVars -> vec .)
    ]               reduce using rule 89 (valoresTernarioVars -> vec .)
    )               reduce using rule 89 (valoresTernarioVars -> vec .)
    ;               reduce using rule 89 (valoresTernarioVars -> vec .)
    }               reduce using rule 89 (valoresTernarioVars -> vec .)
    [               shift and go to state 100

    m                              shift and go to state 110

state 255

    (88) valoresTernarioVars -> reg .

    :               reduce using rule 88 (valoresTernarioVars -> reg .)
    ,               reduce using rule 88 (valoresTernarioVars -> reg .)
    ]               reduce using rule 88 (valoresTernarioVars -> reg .)
    )               reduce using rule 88 (valoresTernarioVars -> reg .)
    ;               reduce using rule 88 (valoresTernarioVars -> reg .)
    }               reduce using rule 88 (valoresTernarioVars -> reg .)


state 256

    (76) ternarioVars -> valoresBool ? valoresTernarioVars . : valoresTernarioVars
    (77) ternarioVars -> valoresBool ? valoresTernarioVars . : valoresTernarioMat
    (79) ternarioVars -> valoresBool ? valoresTernarioVars . : valoresTernarioBool

    :               shift and go to state 336


state 257

    (131) valoresTernarioMat -> STRING .
    (124) valoresMat -> STRING .

    :               reduce using rule 131 (valoresTernarioMat -> STRING .)
    )               reduce using rule 131 (valoresTernarioMat -> STRING .)
    ,               reduce using rule 131 (valoresTernarioMat -> STRING .)
    ]               reduce using rule 131 (valoresTernarioMat -> STRING .)
    ;               reduce using rule 131 (valoresTernarioMat -> STRING .)
    }               reduce using rule 131 (valoresTernarioMat -> STRING .)
    +               reduce using rule 124 (valoresMat -> STRING .)
    -               reduce using rule 124 (valoresMat -> STRING .)
    *               reduce using rule 124 (valoresMat -> STRING .)
    /               reduce using rule 124 (valoresMat -> STRING .)
    %               reduce using rule 124 (valoresMat -> STRING .)
    ^               reduce using rule 124 (valoresMat -> STRING .)


state 258

    (179) valoresTernarioBool -> ternarioBool .

    :               reduce using rule 179 (valoresTernarioBool -> ternarioBool .)
    )               reduce using rule 179 (valoresTernarioBool -> ternarioBool .)
    ,               reduce using rule 179 (valoresTernarioBool -> ternarioBool .)
    ]               reduce using rule 179 (valoresTernarioBool -> ternarioBool .)
    ;               reduce using rule 179 (valoresTernarioBool -> ternarioBool .)
    }               reduce using rule 179 (valoresTernarioBool -> ternarioBool .)


state 259

    (126) ternarioMat -> valoresBool ? valoresTernarioMat . : valoresTernarioMat
    (78) ternarioVars -> valoresBool ? valoresTernarioMat . : valoresTernarioVars

    :               shift and go to state 337


state 260

    (128) valoresTernarioMat -> INT .
    (119) valoresMat -> INT .
    (210) tCompare -> INT .

    :               reduce using rule 128 (valoresTernarioMat -> INT .)
    )               reduce using rule 128 (valoresTernarioMat -> INT .)
    ,               reduce using rule 128 (valoresTernarioMat -> INT .)
    ]               reduce using rule 128 (valoresTernarioMat -> INT .)
    ;               reduce using rule 128 (valoresTernarioMat -> INT .)
    }               reduce using rule 128 (valoresTernarioMat -> INT .)
    +               reduce using rule 119 (valoresMat -> INT .)
    -               reduce using rule 119 (valoresMat -> INT .)
    *               reduce using rule 119 (valoresMat -> INT .)
    /               reduce using rule 119 (valoresMat -> INT .)
    %               reduce using rule 119 (valoresMat -> INT .)
    ^               reduce using rule 119 (valoresMat -> INT .)
    EQEQ            reduce using rule 210 (tCompare -> INT .)
    DISTINTO        reduce using rule 210 (tCompare -> INT .)
    >               reduce using rule 210 (tCompare -> INT .)
    <               reduce using rule 210 (tCompare -> INT .)


state 261

    (129) valoresTernarioMat -> FLOAT .
    (120) valoresMat -> FLOAT .
    (212) tCompare -> FLOAT .

    :               reduce using rule 129 (valoresTernarioMat -> FLOAT .)
    )               reduce using rule 129 (valoresTernarioMat -> FLOAT .)
    ,               reduce using rule 129 (valoresTernarioMat -> FLOAT .)
    ]               reduce using rule 129 (valoresTernarioMat -> FLOAT .)
    ;               reduce using rule 129 (valoresTernarioMat -> FLOAT .)
    }               reduce using rule 129 (valoresTernarioMat -> FLOAT .)
    +               reduce using rule 120 (valoresMat -> FLOAT .)
    -               reduce using rule 120 (valoresMat -> FLOAT .)
    *               reduce using rule 120 (valoresMat -> FLOAT .)
    /               reduce using rule 120 (valoresMat -> FLOAT .)
    %               reduce using rule 120 (valoresMat -> FLOAT .)
    ^               reduce using rule 120 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 212 (tCompare -> FLOAT .)
    DISTINTO        reduce using rule 212 (tCompare -> FLOAT .)
    >               reduce using rule 212 (tCompare -> FLOAT .)
    <               reduce using rule 212 (tCompare -> FLOAT .)


state 262

    (177) valoresTernarioBool -> BOOL .
    (169) valoresBool -> BOOL .

    :               reduce using rule 177 (valoresTernarioBool -> BOOL .)
    )               reduce using rule 177 (valoresTernarioBool -> BOOL .)
    ,               reduce using rule 177 (valoresTernarioBool -> BOOL .)
    ]               reduce using rule 177 (valoresTernarioBool -> BOOL .)
    ;               reduce using rule 177 (valoresTernarioBool -> BOOL .)
    }               reduce using rule 177 (valoresTernarioBool -> BOOL .)
    ?               reduce using rule 169 (valoresBool -> BOOL .)
    OR              reduce using rule 169 (valoresBool -> BOOL .)
    AND             reduce using rule 169 (valoresBool -> BOOL .)


state 263

    (86) valoresTernarioVars -> varsOps .
    (123) valoresMat -> varsOps .
    (172) valoresBool -> varsOps .
    (208) tCompare -> varsOps .

    :               reduce using rule 86 (valoresTernarioVars -> varsOps .)
    ,               reduce using rule 86 (valoresTernarioVars -> varsOps .)
    ]               reduce using rule 86 (valoresTernarioVars -> varsOps .)
    )               reduce using rule 86 (valoresTernarioVars -> varsOps .)
    ;               reduce using rule 86 (valoresTernarioVars -> varsOps .)
    }               reduce using rule 86 (valoresTernarioVars -> varsOps .)
    +               reduce using rule 123 (valoresMat -> varsOps .)
    -               reduce using rule 123 (valoresMat -> varsOps .)
    *               reduce using rule 123 (valoresMat -> varsOps .)
    /               reduce using rule 123 (valoresMat -> varsOps .)
    %               reduce using rule 123 (valoresMat -> varsOps .)
    ^               reduce using rule 123 (valoresMat -> varsOps .)
    ?               reduce using rule 172 (valoresBool -> varsOps .)
    OR              reduce using rule 172 (valoresBool -> varsOps .)
    AND             reduce using rule 172 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 208 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 208 (tCompare -> varsOps .)
    >               reduce using rule 208 (tCompare -> varsOps .)
    <               reduce using rule 208 (tCompare -> varsOps .)


state 264

    (134) valoresTernarioMat -> ( . ternarioMat )
    (180) valoresTernarioBool -> ( . ternarioBool )
    (91) valoresTernarioVars -> ( . ternarioVars )
    (125) valoresMat -> ( . ternarioMat )
    (173) valoresBool -> ( . ternarioBool )
    (213) tCompare -> ( . ternarioBool )
    (214) tCompare -> ( . ternarioMat )
    (167) paren -> ( . eMat )
    (168) paren -> ( . valoresMat )
    (222) parenBool -> ( . expBool )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (50) funcBool -> . COLINEALES ( valores , valores )
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (55) vec -> . [ elem ]
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 154
    FLOAT           shift and go to state 155
    STRING          shift and go to state 152
    (               shift and go to state 150
    BOOL            shift and go to state 156
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    [               shift and go to state 20
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 146
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 147
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 149
    valoresBool                    shift and go to state 148
    ternarioMat                    shift and go to state 338
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    varsOps                        shift and go to state 157
    ternarioBool                   shift and go to state 339
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    p                              shift and go to state 89
    iSing                          shift and go to state 79
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 340
    varYVals                       shift and go to state 159
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 160

state 265

    (90) valoresTernarioVars -> ternarioVars .

    :               reduce using rule 90 (valoresTernarioVars -> ternarioVars .)
    ,               reduce using rule 90 (valoresTernarioVars -> ternarioVars .)
    ]               reduce using rule 90 (valoresTernarioVars -> ternarioVars .)
    )               reduce using rule 90 (valoresTernarioVars -> ternarioVars .)
    ;               reduce using rule 90 (valoresTernarioVars -> ternarioVars .)
    }               reduce using rule 90 (valoresTernarioVars -> ternarioVars .)


state 266

    (87) valoresTernarioVars -> varYVals .
    (110) varsOps -> varYVals . MASMAS
    (111) varsOps -> varYVals . MENOSMENOS
    (122) valoresMat -> varYVals .
    (171) valoresBool -> varYVals .
    (209) tCompare -> varYVals .

    :               reduce using rule 87 (valoresTernarioVars -> varYVals .)
    ,               reduce using rule 87 (valoresTernarioVars -> varYVals .)
    ]               reduce using rule 87 (valoresTernarioVars -> varYVals .)
    )               reduce using rule 87 (valoresTernarioVars -> varYVals .)
    ;               reduce using rule 87 (valoresTernarioVars -> varYVals .)
    }               reduce using rule 87 (valoresTernarioVars -> varYVals .)
    MASMAS          shift and go to state 49
    MENOSMENOS      shift and go to state 46
    +               reduce using rule 122 (valoresMat -> varYVals .)
    -               reduce using rule 122 (valoresMat -> varYVals .)
    *               reduce using rule 122 (valoresMat -> varYVals .)
    /               reduce using rule 122 (valoresMat -> varYVals .)
    %               reduce using rule 122 (valoresMat -> varYVals .)
    ^               reduce using rule 122 (valoresMat -> varYVals .)
    ?               reduce using rule 171 (valoresBool -> varYVals .)
    OR              reduce using rule 171 (valoresBool -> varYVals .)
    AND             reduce using rule 171 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 209 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 209 (tCompare -> varYVals .)
    >               reduce using rule 209 (tCompare -> varYVals .)
    <               reduce using rule 209 (tCompare -> varYVals .)


state 267

    (181) valoresTernarioBool -> expBool .
    (127) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (176) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> expBool . OR and
    (190) expBool -> expBool . OR valoresBool
    (81) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars

    :               reduce using rule 181 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 172
    OR              shift and go to state 171


state 268

    (139) eMat -> eMat + valoresMat .
    (147) p -> valoresMat . * exp
    (148) p -> valoresMat . / exp
    (149) p -> valoresMat . % exp
    (153) p -> valoresMat . * valoresMat
    (154) p -> valoresMat . / valoresMat
    (155) p -> valoresMat . % valoresMat
    (158) exp -> valoresMat . ^ iSing
    (160) exp -> valoresMat . ^ valoresMat

    +               reduce using rule 139 (eMat -> eMat + valoresMat .)
    -               reduce using rule 139 (eMat -> eMat + valoresMat .)
    :               reduce using rule 139 (eMat -> eMat + valoresMat .)
    EQEQ            reduce using rule 139 (eMat -> eMat + valoresMat .)
    DISTINTO        reduce using rule 139 (eMat -> eMat + valoresMat .)
    >               reduce using rule 139 (eMat -> eMat + valoresMat .)
    <               reduce using rule 139 (eMat -> eMat + valoresMat .)
    AND             reduce using rule 139 (eMat -> eMat + valoresMat .)
    OR              reduce using rule 139 (eMat -> eMat + valoresMat .)
    ?               reduce using rule 139 (eMat -> eMat + valoresMat .)
    ,               reduce using rule 139 (eMat -> eMat + valoresMat .)
    ]               reduce using rule 139 (eMat -> eMat + valoresMat .)
    )               reduce using rule 139 (eMat -> eMat + valoresMat .)
    ;               reduce using rule 139 (eMat -> eMat + valoresMat .)
    }               reduce using rule 139 (eMat -> eMat + valoresMat .)
    *               shift and go to state 134
    /               shift and go to state 136
    %               shift and go to state 132
    ^               shift and go to state 137


state 269

    (135) eMat -> eMat + p .
    (144) p -> p . * exp
    (145) p -> p . / exp
    (146) p -> p . % exp
    (150) p -> p . * valoresMat
    (151) p -> p . / valoresMat
    (152) p -> p . % valoresMat

    +               reduce using rule 135 (eMat -> eMat + p .)
    -               reduce using rule 135 (eMat -> eMat + p .)
    :               reduce using rule 135 (eMat -> eMat + p .)
    EQEQ            reduce using rule 135 (eMat -> eMat + p .)
    DISTINTO        reduce using rule 135 (eMat -> eMat + p .)
    >               reduce using rule 135 (eMat -> eMat + p .)
    <               reduce using rule 135 (eMat -> eMat + p .)
    AND             reduce using rule 135 (eMat -> eMat + p .)
    OR              reduce using rule 135 (eMat -> eMat + p .)
    ?               reduce using rule 135 (eMat -> eMat + p .)
    ,               reduce using rule 135 (eMat -> eMat + p .)
    ]               reduce using rule 135 (eMat -> eMat + p .)
    )               reduce using rule 135 (eMat -> eMat + p .)
    ;               reduce using rule 135 (eMat -> eMat + p .)
    }               reduce using rule 135 (eMat -> eMat + p .)
    *               shift and go to state 180
    /               shift and go to state 181
    %               shift and go to state 179


state 270

    (140) eMat -> eMat - valoresMat .
    (147) p -> valoresMat . * exp
    (148) p -> valoresMat . / exp
    (149) p -> valoresMat . % exp
    (153) p -> valoresMat . * valoresMat
    (154) p -> valoresMat . / valoresMat
    (155) p -> valoresMat . % valoresMat
    (158) exp -> valoresMat . ^ iSing
    (160) exp -> valoresMat . ^ valoresMat

    +               reduce using rule 140 (eMat -> eMat - valoresMat .)
    -               reduce using rule 140 (eMat -> eMat - valoresMat .)
    :               reduce using rule 140 (eMat -> eMat - valoresMat .)
    EQEQ            reduce using rule 140 (eMat -> eMat - valoresMat .)
    DISTINTO        reduce using rule 140 (eMat -> eMat - valoresMat .)
    >               reduce using rule 140 (eMat -> eMat - valoresMat .)
    <               reduce using rule 140 (eMat -> eMat - valoresMat .)
    AND             reduce using rule 140 (eMat -> eMat - valoresMat .)
    OR              reduce using rule 140 (eMat -> eMat - valoresMat .)
    ?               reduce using rule 140 (eMat -> eMat - valoresMat .)
    ,               reduce using rule 140 (eMat -> eMat - valoresMat .)
    ]               reduce using rule 140 (eMat -> eMat - valoresMat .)
    )               reduce using rule 140 (eMat -> eMat - valoresMat .)
    ;               reduce using rule 140 (eMat -> eMat - valoresMat .)
    }               reduce using rule 140 (eMat -> eMat - valoresMat .)
    *               shift and go to state 134
    /               shift and go to state 136
    %               shift and go to state 132
    ^               shift and go to state 137


state 271

    (136) eMat -> eMat - p .
    (144) p -> p . * exp
    (145) p -> p . / exp
    (146) p -> p . % exp
    (150) p -> p . * valoresMat
    (151) p -> p . / valoresMat
    (152) p -> p . % valoresMat

    +               reduce using rule 136 (eMat -> eMat - p .)
    -               reduce using rule 136 (eMat -> eMat - p .)
    :               reduce using rule 136 (eMat -> eMat - p .)
    EQEQ            reduce using rule 136 (eMat -> eMat - p .)
    DISTINTO        reduce using rule 136 (eMat -> eMat - p .)
    >               reduce using rule 136 (eMat -> eMat - p .)
    <               reduce using rule 136 (eMat -> eMat - p .)
    AND             reduce using rule 136 (eMat -> eMat - p .)
    OR              reduce using rule 136 (eMat -> eMat - p .)
    ?               reduce using rule 136 (eMat -> eMat - p .)
    ,               reduce using rule 136 (eMat -> eMat - p .)
    ]               reduce using rule 136 (eMat -> eMat - p .)
    )               reduce using rule 136 (eMat -> eMat - p .)
    ;               reduce using rule 136 (eMat -> eMat - p .)
    }               reduce using rule 136 (eMat -> eMat - p .)
    *               shift and go to state 180
    /               shift and go to state 181
    %               shift and go to state 179


state 272

    (168) paren -> ( valoresMat ) .

    ^               reduce using rule 168 (paren -> ( valoresMat ) .)
    *               reduce using rule 168 (paren -> ( valoresMat ) .)
    /               reduce using rule 168 (paren -> ( valoresMat ) .)
    %               reduce using rule 168 (paren -> ( valoresMat ) .)
    +               reduce using rule 168 (paren -> ( valoresMat ) .)
    -               reduce using rule 168 (paren -> ( valoresMat ) .)
    :               reduce using rule 168 (paren -> ( valoresMat ) .)
    EQEQ            reduce using rule 168 (paren -> ( valoresMat ) .)
    DISTINTO        reduce using rule 168 (paren -> ( valoresMat ) .)
    >               reduce using rule 168 (paren -> ( valoresMat ) .)
    <               reduce using rule 168 (paren -> ( valoresMat ) .)
    )               reduce using rule 168 (paren -> ( valoresMat ) .)
    ,               reduce using rule 168 (paren -> ( valoresMat ) .)
    ]               reduce using rule 168 (paren -> ( valoresMat ) .)
    ;               reduce using rule 168 (paren -> ( valoresMat ) .)
    AND             reduce using rule 168 (paren -> ( valoresMat ) .)
    OR              reduce using rule 168 (paren -> ( valoresMat ) .)
    ?               reduce using rule 168 (paren -> ( valoresMat ) .)
    }               reduce using rule 168 (paren -> ( valoresMat ) .)


state 273

    (167) paren -> ( eMat ) .

    ^               reduce using rule 167 (paren -> ( eMat ) .)
    *               reduce using rule 167 (paren -> ( eMat ) .)
    /               reduce using rule 167 (paren -> ( eMat ) .)
    %               reduce using rule 167 (paren -> ( eMat ) .)
    +               reduce using rule 167 (paren -> ( eMat ) .)
    -               reduce using rule 167 (paren -> ( eMat ) .)
    :               reduce using rule 167 (paren -> ( eMat ) .)
    EQEQ            reduce using rule 167 (paren -> ( eMat ) .)
    DISTINTO        reduce using rule 167 (paren -> ( eMat ) .)
    >               reduce using rule 167 (paren -> ( eMat ) .)
    <               reduce using rule 167 (paren -> ( eMat ) .)
    )               reduce using rule 167 (paren -> ( eMat ) .)
    ,               reduce using rule 167 (paren -> ( eMat ) .)
    ]               reduce using rule 167 (paren -> ( eMat ) .)
    ;               reduce using rule 167 (paren -> ( eMat ) .)
    AND             reduce using rule 167 (paren -> ( eMat ) .)
    OR              reduce using rule 167 (paren -> ( eMat ) .)
    ?               reduce using rule 167 (paren -> ( eMat ) .)
    }               reduce using rule 167 (paren -> ( eMat ) .)


state 274

    (126) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (175) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (189) expBool -> valoresBool . OR and
    (191) expBool -> valoresBool . OR valoresBool
    (194) and -> valoresBool . AND eq
    (196) and -> valoresBool . AND valoresBool

    ?               shift and go to state 341
    OR              shift and go to state 141
    AND             shift and go to state 140


state 275

    (125) valoresMat -> ( ternarioMat . )
    (214) tCompare -> ( ternarioMat . )

    )               shift and go to state 342


state 276

    (173) valoresBool -> ( ternarioBool . )
    (213) tCompare -> ( ternarioBool . )

    )               shift and go to state 343


state 277

    (222) parenBool -> ( expBool . )
    (127) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (176) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> expBool . OR and
    (190) expBool -> expBool . OR valoresBool

    )               shift and go to state 281
    ?               shift and go to state 344
    OR              shift and go to state 171


state 278

    (184) ternario -> ( ternarioMat ) .
    (125) valoresMat -> ( ternarioMat ) .
    (214) tCompare -> ( ternarioMat ) .

    )               reduce using rule 184 (ternario -> ( ternarioMat ) .)
    ,               reduce using rule 184 (ternario -> ( ternarioMat ) .)
    }               reduce using rule 184 (ternario -> ( ternarioMat ) .)
    ]               reduce using rule 184 (ternario -> ( ternarioMat ) .)
    ;               reduce using rule 184 (ternario -> ( ternarioMat ) .)
    +               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    ^               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    EQEQ            reduce using rule 214 (tCompare -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 214 (tCompare -> ( ternarioMat ) .)
    >               reduce using rule 214 (tCompare -> ( ternarioMat ) .)
    <               reduce using rule 214 (tCompare -> ( ternarioMat ) .)


state 279

    (185) ternario -> ( ternarioBool ) .
    (173) valoresBool -> ( ternarioBool ) .
    (213) tCompare -> ( ternarioBool ) .

    )               reduce using rule 185 (ternario -> ( ternarioBool ) .)
    ,               reduce using rule 185 (ternario -> ( ternarioBool ) .)
    }               reduce using rule 185 (ternario -> ( ternarioBool ) .)
    ]               reduce using rule 185 (ternario -> ( ternarioBool ) .)
    ;               reduce using rule 185 (ternario -> ( ternarioBool ) .)
    OR              reduce using rule 173 (valoresBool -> ( ternarioBool ) .)
    AND             reduce using rule 173 (valoresBool -> ( ternarioBool ) .)
    ?               reduce using rule 173 (valoresBool -> ( ternarioBool ) .)
    EQEQ            reduce using rule 213 (tCompare -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 213 (tCompare -> ( ternarioBool ) .)
    >               reduce using rule 213 (tCompare -> ( ternarioBool ) .)
    <               reduce using rule 213 (tCompare -> ( ternarioBool ) .)


state 280

    (187) ternario -> ( ternarioVars ) .

    )               reduce using rule 187 (ternario -> ( ternarioVars ) .)
    ,               reduce using rule 187 (ternario -> ( ternarioVars ) .)
    }               reduce using rule 187 (ternario -> ( ternarioVars ) .)
    ]               reduce using rule 187 (ternario -> ( ternarioVars ) .)
    ;               reduce using rule 187 (ternario -> ( ternarioVars ) .)


state 281

    (222) parenBool -> ( expBool ) .

    EQEQ            reduce using rule 222 (parenBool -> ( expBool ) .)
    DISTINTO        reduce using rule 222 (parenBool -> ( expBool ) .)
    AND             reduce using rule 222 (parenBool -> ( expBool ) .)
    )               reduce using rule 222 (parenBool -> ( expBool ) .)
    ?               reduce using rule 222 (parenBool -> ( expBool ) .)
    OR              reduce using rule 222 (parenBool -> ( expBool ) .)
    :               reduce using rule 222 (parenBool -> ( expBool ) .)
    ,               reduce using rule 222 (parenBool -> ( expBool ) .)
    ]               reduce using rule 222 (parenBool -> ( expBool ) .)
    ;               reduce using rule 222 (parenBool -> ( expBool ) .)
    }               reduce using rule 222 (parenBool -> ( expBool ) .)


state 282

    (126) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (189) expBool -> valoresBool . OR and
    (191) expBool -> valoresBool . OR valoresBool
    (194) and -> valoresBool . AND eq
    (196) and -> valoresBool . AND valoresBool

    ?               shift and go to state 345
    OR              shift and go to state 141
    AND             shift and go to state 140


state 283

    (125) valoresMat -> ( . ternarioMat )
    (173) valoresBool -> ( . ternarioBool )
    (167) paren -> ( . eMat )
    (168) paren -> ( . valoresMat )
    (213) tCompare -> ( . ternarioBool )
    (214) tCompare -> ( . ternarioMat )
    (222) parenBool -> ( . expBool )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (50) funcBool -> . COLINEALES ( valores , valores )
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (55) vec -> . [ elem ]
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 154
    FLOAT           shift and go to state 155
    STRING          shift and go to state 152
    (               shift and go to state 150
    BOOL            shift and go to state 156
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    [               shift and go to state 20
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 146
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 147
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 149
    valoresBool                    shift and go to state 274
    ternarioMat                    shift and go to state 275
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    iSing                          shift and go to state 79
    ternarioBool                   shift and go to state 276
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 157
    exp                            shift and go to state 93
    varYVals                       shift and go to state 159
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 277

state 284

    (125) valoresMat -> ( ternarioMat . )

    )               shift and go to state 346


state 285

    (122) valoresMat -> varYVals .
    (110) varsOps -> varYVals . MASMAS
    (111) varsOps -> varYVals . MENOSMENOS
    (171) valoresBool -> varYVals .
    (209) tCompare -> varYVals .

    )               reduce using rule 122 (valoresMat -> varYVals .)
    +               reduce using rule 122 (valoresMat -> varYVals .)
    -               reduce using rule 122 (valoresMat -> varYVals .)
    *               reduce using rule 122 (valoresMat -> varYVals .)
    /               reduce using rule 122 (valoresMat -> varYVals .)
    %               reduce using rule 122 (valoresMat -> varYVals .)
    ^               reduce using rule 122 (valoresMat -> varYVals .)
    MASMAS          shift and go to state 49
    MENOSMENOS      shift and go to state 46
    ?               reduce using rule 171 (valoresBool -> varYVals .)
    OR              reduce using rule 171 (valoresBool -> varYVals .)
    AND             reduce using rule 171 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 209 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 209 (tCompare -> varYVals .)
    >               reduce using rule 209 (tCompare -> varYVals .)
    <               reduce using rule 209 (tCompare -> varYVals .)


state 286

    (127) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (188) expBool -> expBool . OR and
    (190) expBool -> expBool . OR valoresBool

    ?               shift and go to state 347
    OR              shift and go to state 171


state 287

    (188) expBool -> expBool OR and .
    (193) and -> and . AND eq
    (195) and -> and . AND valoresBool

    OR              reduce using rule 188 (expBool -> expBool OR and .)
    ?               reduce using rule 188 (expBool -> expBool OR and .)
    ;               reduce using rule 188 (expBool -> expBool OR and .)
    )               reduce using rule 188 (expBool -> expBool OR and .)
    ,               reduce using rule 188 (expBool -> expBool OR and .)
    :               reduce using rule 188 (expBool -> expBool OR and .)
    ]               reduce using rule 188 (expBool -> expBool OR and .)
    }               reduce using rule 188 (expBool -> expBool OR and .)
    AND             shift and go to state 130


state 288

    (190) expBool -> expBool OR valoresBool .
    (194) and -> valoresBool . AND eq
    (196) and -> valoresBool . AND valoresBool

    OR              reduce using rule 190 (expBool -> expBool OR valoresBool .)
    ?               reduce using rule 190 (expBool -> expBool OR valoresBool .)
    ;               reduce using rule 190 (expBool -> expBool OR valoresBool .)
    )               reduce using rule 190 (expBool -> expBool OR valoresBool .)
    ,               reduce using rule 190 (expBool -> expBool OR valoresBool .)
    :               reduce using rule 190 (expBool -> expBool OR valoresBool .)
    ]               reduce using rule 190 (expBool -> expBool OR valoresBool .)
    }               reduce using rule 190 (expBool -> expBool OR valoresBool .)
    AND             shift and go to state 140


state 289

    (176) ternarioBool -> expBool ? valoresTernarioBool . : valoresTernarioBool
    (85) ternarioVars -> expBool ? valoresTernarioBool . : valoresTernarioVars

    :               shift and go to state 348


state 290

    (81) ternarioVars -> expBool ? valoresTernarioVars . : valoresTernarioVars
    (82) ternarioVars -> expBool ? valoresTernarioVars . : valoresTernarioMat
    (84) ternarioVars -> expBool ? valoresTernarioVars . : valoresTernarioBool

    :               shift and go to state 349


state 291

    (127) ternarioMat -> expBool ? valoresTernarioMat . : valoresTernarioMat
    (83) ternarioVars -> expBool ? valoresTernarioMat . : valoresTernarioVars

    :               shift and go to state 350


state 292

    (201) eq -> tCompare DISTINTO mayor .

    EQEQ            reduce using rule 201 (eq -> tCompare DISTINTO mayor .)
    DISTINTO        reduce using rule 201 (eq -> tCompare DISTINTO mayor .)
    AND             reduce using rule 201 (eq -> tCompare DISTINTO mayor .)
    ?               reduce using rule 201 (eq -> tCompare DISTINTO mayor .)
    OR              reduce using rule 201 (eq -> tCompare DISTINTO mayor .)
    :               reduce using rule 201 (eq -> tCompare DISTINTO mayor .)
    )               reduce using rule 201 (eq -> tCompare DISTINTO mayor .)
    ,               reduce using rule 201 (eq -> tCompare DISTINTO mayor .)
    ]               reduce using rule 201 (eq -> tCompare DISTINTO mayor .)
    ;               reduce using rule 201 (eq -> tCompare DISTINTO mayor .)
    }               reduce using rule 201 (eq -> tCompare DISTINTO mayor .)


state 293

    (205) eq -> tCompare DISTINTO tCompare .
    (215) mayor -> tCompare . > tCompare
    (217) menor -> tCompare . < tCompare

    EQEQ            reduce using rule 205 (eq -> tCompare DISTINTO tCompare .)
    DISTINTO        reduce using rule 205 (eq -> tCompare DISTINTO tCompare .)
    AND             reduce using rule 205 (eq -> tCompare DISTINTO tCompare .)
    ?               reduce using rule 205 (eq -> tCompare DISTINTO tCompare .)
    OR              reduce using rule 205 (eq -> tCompare DISTINTO tCompare .)
    :               reduce using rule 205 (eq -> tCompare DISTINTO tCompare .)
    )               reduce using rule 205 (eq -> tCompare DISTINTO tCompare .)
    ,               reduce using rule 205 (eq -> tCompare DISTINTO tCompare .)
    ]               reduce using rule 205 (eq -> tCompare DISTINTO tCompare .)
    ;               reduce using rule 205 (eq -> tCompare DISTINTO tCompare .)
    }               reduce using rule 205 (eq -> tCompare DISTINTO tCompare .)
    >               shift and go to state 176
    <               shift and go to state 175


state 294

    (200) eq -> tCompare EQEQ mayor .

    EQEQ            reduce using rule 200 (eq -> tCompare EQEQ mayor .)
    DISTINTO        reduce using rule 200 (eq -> tCompare EQEQ mayor .)
    AND             reduce using rule 200 (eq -> tCompare EQEQ mayor .)
    ?               reduce using rule 200 (eq -> tCompare EQEQ mayor .)
    OR              reduce using rule 200 (eq -> tCompare EQEQ mayor .)
    :               reduce using rule 200 (eq -> tCompare EQEQ mayor .)
    )               reduce using rule 200 (eq -> tCompare EQEQ mayor .)
    ,               reduce using rule 200 (eq -> tCompare EQEQ mayor .)
    ]               reduce using rule 200 (eq -> tCompare EQEQ mayor .)
    ;               reduce using rule 200 (eq -> tCompare EQEQ mayor .)
    }               reduce using rule 200 (eq -> tCompare EQEQ mayor .)


state 295

    (204) eq -> tCompare EQEQ tCompare .
    (215) mayor -> tCompare . > tCompare
    (217) menor -> tCompare . < tCompare

    EQEQ            reduce using rule 204 (eq -> tCompare EQEQ tCompare .)
    DISTINTO        reduce using rule 204 (eq -> tCompare EQEQ tCompare .)
    AND             reduce using rule 204 (eq -> tCompare EQEQ tCompare .)
    ?               reduce using rule 204 (eq -> tCompare EQEQ tCompare .)
    OR              reduce using rule 204 (eq -> tCompare EQEQ tCompare .)
    :               reduce using rule 204 (eq -> tCompare EQEQ tCompare .)
    )               reduce using rule 204 (eq -> tCompare EQEQ tCompare .)
    ,               reduce using rule 204 (eq -> tCompare EQEQ tCompare .)
    ]               reduce using rule 204 (eq -> tCompare EQEQ tCompare .)
    ;               reduce using rule 204 (eq -> tCompare EQEQ tCompare .)
    }               reduce using rule 204 (eq -> tCompare EQEQ tCompare .)
    >               shift and go to state 176
    <               shift and go to state 175


state 296

    (213) tCompare -> ( . ternarioBool )
    (214) tCompare -> ( . ternarioMat )
    (125) valoresMat -> ( . ternarioMat )
    (167) paren -> ( . eMat )
    (168) paren -> ( . valoresMat )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (50) funcBool -> . COLINEALES ( valores , valores )
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (55) vec -> . [ elem ]
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 154
    FLOAT           shift and go to state 155
    STRING          shift and go to state 152
    (               shift and go to state 150
    BOOL            shift and go to state 156
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    [               shift and go to state 20
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 146
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 147
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 149
    valoresBool                    shift and go to state 320
    ternarioMat                    shift and go to state 321
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    iSing                          shift and go to state 79
    ternarioBool                   shift and go to state 334
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 157
    exp                            shift and go to state 93
    varYVals                       shift and go to state 159
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 351

state 297

    (217) menor -> tCompare < tCompare .

    EQEQ            reduce using rule 217 (menor -> tCompare < tCompare .)
    DISTINTO        reduce using rule 217 (menor -> tCompare < tCompare .)
    AND             reduce using rule 217 (menor -> tCompare < tCompare .)
    ?               reduce using rule 217 (menor -> tCompare < tCompare .)
    OR              reduce using rule 217 (menor -> tCompare < tCompare .)
    ,               reduce using rule 217 (menor -> tCompare < tCompare .)
    ]               reduce using rule 217 (menor -> tCompare < tCompare .)
    )               reduce using rule 217 (menor -> tCompare < tCompare .)
    ;               reduce using rule 217 (menor -> tCompare < tCompare .)
    :               reduce using rule 217 (menor -> tCompare < tCompare .)
    }               reduce using rule 217 (menor -> tCompare < tCompare .)


state 298

    (215) mayor -> tCompare > tCompare .

    EQEQ            reduce using rule 215 (mayor -> tCompare > tCompare .)
    DISTINTO        reduce using rule 215 (mayor -> tCompare > tCompare .)
    AND             reduce using rule 215 (mayor -> tCompare > tCompare .)
    OR              reduce using rule 215 (mayor -> tCompare > tCompare .)
    ?               reduce using rule 215 (mayor -> tCompare > tCompare .)
    )               reduce using rule 215 (mayor -> tCompare > tCompare .)
    :               reduce using rule 215 (mayor -> tCompare > tCompare .)
    ,               reduce using rule 215 (mayor -> tCompare > tCompare .)
    ]               reduce using rule 215 (mayor -> tCompare > tCompare .)
    ;               reduce using rule 215 (mayor -> tCompare > tCompare .)
    }               reduce using rule 215 (mayor -> tCompare > tCompare .)


state 299

    (75) valoresCampos -> BEGIN .

    ,               reduce using rule 75 (valoresCampos -> BEGIN .)
    ]               reduce using rule 75 (valoresCampos -> BEGIN .)
    )               reduce using rule 75 (valoresCampos -> BEGIN .)
    ;               reduce using rule 75 (valoresCampos -> BEGIN .)
    :               reduce using rule 75 (valoresCampos -> BEGIN .)
    }               reduce using rule 75 (valoresCampos -> BEGIN .)


state 300

    (74) valoresCampos -> END .

    ,               reduce using rule 74 (valoresCampos -> END .)
    ]               reduce using rule 74 (valoresCampos -> END .)
    )               reduce using rule 74 (valoresCampos -> END .)
    ;               reduce using rule 74 (valoresCampos -> END .)
    :               reduce using rule 74 (valoresCampos -> END .)
    }               reduce using rule 74 (valoresCampos -> END .)


state 301

    (72) atributos -> ID . valoresCampos .

    )               reduce using rule 72 (atributos -> ID . valoresCampos .)
    :               reduce using rule 72 (atributos -> ID . valoresCampos .)
    ;               reduce using rule 72 (atributos -> ID . valoresCampos .)
    ,               reduce using rule 72 (atributos -> ID . valoresCampos .)
    ]               reduce using rule 72 (atributos -> ID . valoresCampos .)
    }               reduce using rule 72 (atributos -> ID . valoresCampos .)


state 302

    (73) valoresCampos -> varYVals .

    ,               reduce using rule 73 (valoresCampos -> varYVals .)
    ]               reduce using rule 73 (valoresCampos -> varYVals .)
    )               reduce using rule 73 (valoresCampos -> varYVals .)
    ;               reduce using rule 73 (valoresCampos -> varYVals .)
    :               reduce using rule 73 (valoresCampos -> varYVals .)
    }               reduce using rule 73 (valoresCampos -> varYVals .)


state 303

    (152) p -> p % valoresMat .
    (158) exp -> valoresMat . ^ iSing
    (160) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 152 (p -> p % valoresMat .)
    /               reduce using rule 152 (p -> p % valoresMat .)
    %               reduce using rule 152 (p -> p % valoresMat .)
    +               reduce using rule 152 (p -> p % valoresMat .)
    -               reduce using rule 152 (p -> p % valoresMat .)
    EQEQ            reduce using rule 152 (p -> p % valoresMat .)
    DISTINTO        reduce using rule 152 (p -> p % valoresMat .)
    >               reduce using rule 152 (p -> p % valoresMat .)
    <               reduce using rule 152 (p -> p % valoresMat .)
    :               reduce using rule 152 (p -> p % valoresMat .)
    ;               reduce using rule 152 (p -> p % valoresMat .)
    )               reduce using rule 152 (p -> p % valoresMat .)
    ,               reduce using rule 152 (p -> p % valoresMat .)
    ]               reduce using rule 152 (p -> p % valoresMat .)
    }               reduce using rule 152 (p -> p % valoresMat .)
    AND             reduce using rule 152 (p -> p % valoresMat .)
    OR              reduce using rule 152 (p -> p % valoresMat .)
    ?               reduce using rule 152 (p -> p % valoresMat .)
    ^               shift and go to state 137


state 304

    (146) p -> p % exp .
    (157) exp -> exp . ^ iSing
    (159) exp -> exp . ^ valoresMat

    *               reduce using rule 146 (p -> p % exp .)
    /               reduce using rule 146 (p -> p % exp .)
    %               reduce using rule 146 (p -> p % exp .)
    +               reduce using rule 146 (p -> p % exp .)
    -               reduce using rule 146 (p -> p % exp .)
    EQEQ            reduce using rule 146 (p -> p % exp .)
    DISTINTO        reduce using rule 146 (p -> p % exp .)
    >               reduce using rule 146 (p -> p % exp .)
    <               reduce using rule 146 (p -> p % exp .)
    :               reduce using rule 146 (p -> p % exp .)
    ;               reduce using rule 146 (p -> p % exp .)
    )               reduce using rule 146 (p -> p % exp .)
    ,               reduce using rule 146 (p -> p % exp .)
    ]               reduce using rule 146 (p -> p % exp .)
    }               reduce using rule 146 (p -> p % exp .)
    AND             reduce using rule 146 (p -> p % exp .)
    OR              reduce using rule 146 (p -> p % exp .)
    ?               reduce using rule 146 (p -> p % exp .)
    ^               shift and go to state 187


state 305

    (150) p -> p * valoresMat .
    (158) exp -> valoresMat . ^ iSing
    (160) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 150 (p -> p * valoresMat .)
    /               reduce using rule 150 (p -> p * valoresMat .)
    %               reduce using rule 150 (p -> p * valoresMat .)
    +               reduce using rule 150 (p -> p * valoresMat .)
    -               reduce using rule 150 (p -> p * valoresMat .)
    EQEQ            reduce using rule 150 (p -> p * valoresMat .)
    DISTINTO        reduce using rule 150 (p -> p * valoresMat .)
    >               reduce using rule 150 (p -> p * valoresMat .)
    <               reduce using rule 150 (p -> p * valoresMat .)
    :               reduce using rule 150 (p -> p * valoresMat .)
    ;               reduce using rule 150 (p -> p * valoresMat .)
    )               reduce using rule 150 (p -> p * valoresMat .)
    ,               reduce using rule 150 (p -> p * valoresMat .)
    ]               reduce using rule 150 (p -> p * valoresMat .)
    }               reduce using rule 150 (p -> p * valoresMat .)
    AND             reduce using rule 150 (p -> p * valoresMat .)
    OR              reduce using rule 150 (p -> p * valoresMat .)
    ?               reduce using rule 150 (p -> p * valoresMat .)
    ^               shift and go to state 137


state 306

    (144) p -> p * exp .
    (157) exp -> exp . ^ iSing
    (159) exp -> exp . ^ valoresMat

    *               reduce using rule 144 (p -> p * exp .)
    /               reduce using rule 144 (p -> p * exp .)
    %               reduce using rule 144 (p -> p * exp .)
    +               reduce using rule 144 (p -> p * exp .)
    -               reduce using rule 144 (p -> p * exp .)
    EQEQ            reduce using rule 144 (p -> p * exp .)
    DISTINTO        reduce using rule 144 (p -> p * exp .)
    >               reduce using rule 144 (p -> p * exp .)
    <               reduce using rule 144 (p -> p * exp .)
    :               reduce using rule 144 (p -> p * exp .)
    ;               reduce using rule 144 (p -> p * exp .)
    )               reduce using rule 144 (p -> p * exp .)
    ,               reduce using rule 144 (p -> p * exp .)
    ]               reduce using rule 144 (p -> p * exp .)
    }               reduce using rule 144 (p -> p * exp .)
    AND             reduce using rule 144 (p -> p * exp .)
    OR              reduce using rule 144 (p -> p * exp .)
    ?               reduce using rule 144 (p -> p * exp .)
    ^               shift and go to state 187


state 307

    (151) p -> p / valoresMat .
    (158) exp -> valoresMat . ^ iSing
    (160) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 151 (p -> p / valoresMat .)
    /               reduce using rule 151 (p -> p / valoresMat .)
    %               reduce using rule 151 (p -> p / valoresMat .)
    +               reduce using rule 151 (p -> p / valoresMat .)
    -               reduce using rule 151 (p -> p / valoresMat .)
    EQEQ            reduce using rule 151 (p -> p / valoresMat .)
    DISTINTO        reduce using rule 151 (p -> p / valoresMat .)
    >               reduce using rule 151 (p -> p / valoresMat .)
    <               reduce using rule 151 (p -> p / valoresMat .)
    :               reduce using rule 151 (p -> p / valoresMat .)
    ;               reduce using rule 151 (p -> p / valoresMat .)
    )               reduce using rule 151 (p -> p / valoresMat .)
    ,               reduce using rule 151 (p -> p / valoresMat .)
    ]               reduce using rule 151 (p -> p / valoresMat .)
    }               reduce using rule 151 (p -> p / valoresMat .)
    AND             reduce using rule 151 (p -> p / valoresMat .)
    OR              reduce using rule 151 (p -> p / valoresMat .)
    ?               reduce using rule 151 (p -> p / valoresMat .)
    ^               shift and go to state 137


state 308

    (145) p -> p / exp .
    (157) exp -> exp . ^ iSing
    (159) exp -> exp . ^ valoresMat

    *               reduce using rule 145 (p -> p / exp .)
    /               reduce using rule 145 (p -> p / exp .)
    %               reduce using rule 145 (p -> p / exp .)
    +               reduce using rule 145 (p -> p / exp .)
    -               reduce using rule 145 (p -> p / exp .)
    EQEQ            reduce using rule 145 (p -> p / exp .)
    DISTINTO        reduce using rule 145 (p -> p / exp .)
    >               reduce using rule 145 (p -> p / exp .)
    <               reduce using rule 145 (p -> p / exp .)
    :               reduce using rule 145 (p -> p / exp .)
    ;               reduce using rule 145 (p -> p / exp .)
    )               reduce using rule 145 (p -> p / exp .)
    ,               reduce using rule 145 (p -> p / exp .)
    ]               reduce using rule 145 (p -> p / exp .)
    }               reduce using rule 145 (p -> p / exp .)
    AND             reduce using rule 145 (p -> p / exp .)
    OR              reduce using rule 145 (p -> p / exp .)
    ?               reduce using rule 145 (p -> p / exp .)
    ^               shift and go to state 187


state 309

    (175) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (189) expBool -> valoresBool . OR and
    (191) expBool -> valoresBool . OR valoresBool
    (194) and -> valoresBool . AND eq
    (196) and -> valoresBool . AND valoresBool

    ?               shift and go to state 352
    OR              shift and go to state 141
    AND             shift and go to state 140


state 310

    (173) valoresBool -> ( ternarioBool . )

    )               shift and go to state 353


state 311

    (222) parenBool -> ( expBool . )
    (176) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> expBool . OR and
    (190) expBool -> expBool . OR valoresBool

    )               shift and go to state 281
    ?               shift and go to state 354
    OR              shift and go to state 171


state 312

    (159) exp -> exp ^ valoresMat .

    ^               reduce using rule 159 (exp -> exp ^ valoresMat .)
    *               reduce using rule 159 (exp -> exp ^ valoresMat .)
    /               reduce using rule 159 (exp -> exp ^ valoresMat .)
    %               reduce using rule 159 (exp -> exp ^ valoresMat .)
    +               reduce using rule 159 (exp -> exp ^ valoresMat .)
    -               reduce using rule 159 (exp -> exp ^ valoresMat .)
    EQEQ            reduce using rule 159 (exp -> exp ^ valoresMat .)
    DISTINTO        reduce using rule 159 (exp -> exp ^ valoresMat .)
    >               reduce using rule 159 (exp -> exp ^ valoresMat .)
    <               reduce using rule 159 (exp -> exp ^ valoresMat .)
    :               reduce using rule 159 (exp -> exp ^ valoresMat .)
    AND             reduce using rule 159 (exp -> exp ^ valoresMat .)
    OR              reduce using rule 159 (exp -> exp ^ valoresMat .)
    ?               reduce using rule 159 (exp -> exp ^ valoresMat .)
    ,               reduce using rule 159 (exp -> exp ^ valoresMat .)
    ]               reduce using rule 159 (exp -> exp ^ valoresMat .)
    )               reduce using rule 159 (exp -> exp ^ valoresMat .)
    ;               reduce using rule 159 (exp -> exp ^ valoresMat .)
    }               reduce using rule 159 (exp -> exp ^ valoresMat .)


state 313

    (157) exp -> exp ^ iSing .

    ^               reduce using rule 157 (exp -> exp ^ iSing .)
    *               reduce using rule 157 (exp -> exp ^ iSing .)
    /               reduce using rule 157 (exp -> exp ^ iSing .)
    %               reduce using rule 157 (exp -> exp ^ iSing .)
    +               reduce using rule 157 (exp -> exp ^ iSing .)
    -               reduce using rule 157 (exp -> exp ^ iSing .)
    EQEQ            reduce using rule 157 (exp -> exp ^ iSing .)
    DISTINTO        reduce using rule 157 (exp -> exp ^ iSing .)
    >               reduce using rule 157 (exp -> exp ^ iSing .)
    <               reduce using rule 157 (exp -> exp ^ iSing .)
    :               reduce using rule 157 (exp -> exp ^ iSing .)
    AND             reduce using rule 157 (exp -> exp ^ iSing .)
    OR              reduce using rule 157 (exp -> exp ^ iSing .)
    ?               reduce using rule 157 (exp -> exp ^ iSing .)
    ,               reduce using rule 157 (exp -> exp ^ iSing .)
    ]               reduce using rule 157 (exp -> exp ^ iSing .)
    )               reduce using rule 157 (exp -> exp ^ iSing .)
    ;               reduce using rule 157 (exp -> exp ^ iSing .)
    }               reduce using rule 157 (exp -> exp ^ iSing .)


state 314

    (105) reg -> { campos } .

    ,               reduce using rule 105 (reg -> { campos } .)
    ]               reduce using rule 105 (reg -> { campos } .)
    )               reduce using rule 105 (reg -> { campos } .)
    ;               reduce using rule 105 (reg -> { campos } .)
    :               reduce using rule 105 (reg -> { campos } .)
    }               reduce using rule 105 (reg -> { campos } .)


state 315

    (106) campos -> ID : . valores , campos
    (107) campos -> ID : . valores
    (58) valores -> . eMat
    (59) valores -> . expBool
    (60) valores -> . funcReturn
    (61) valores -> . reg
    (62) valores -> . INT
    (63) valores -> . FLOAT
    (64) valores -> . STRING
    (65) valores -> . BOOL
    (66) valores -> . varYVals
    (67) valores -> . varsOps
    (68) valores -> . vec
    (69) valores -> . ternario
    (70) valores -> . atributos
    (71) valores -> . RES
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (105) reg -> . { campos }
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (55) vec -> . [ elem ]
    (182) ternario -> . ternarioMat
    (183) ternario -> . ternarioBool
    (184) ternario -> . ( ternarioMat )
    (185) ternario -> . ( ternarioBool )
    (186) ternario -> . ternarioVars
    (187) ternario -> . ( ternarioVars )
    (72) atributos -> . ID . valoresCampos
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 85
    FLOAT           shift and go to state 87
    STRING          shift and go to state 69
    BOOL            shift and go to state 90
    RES             shift and go to state 61
    {               shift and go to state 94
    ID              shift and go to state 84
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 71
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    ?               reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    ternario                       shift and go to state 59
    funcBool                       shift and go to state 60
    funcInt                        shift and go to state 62
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 68
    eMat                           shift and go to state 70
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 74
    vec                            shift and go to state 75
    paren                          shift and go to state 82
    reg                            shift and go to state 76
    expBool                        shift and go to state 77
    ternarioBool                   shift and go to state 78
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 86
    valores                        shift and go to state 355
    p                              shift and go to state 89
    varsOps                        shift and go to state 91
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 65
    varYVals                       shift and go to state 96
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 97

state 316

    (118) varAsig -> ID . ID = . valoresAsig
    (112) valoresAsig -> . valores
    (58) valores -> . eMat
    (59) valores -> . expBool
    (60) valores -> . funcReturn
    (61) valores -> . reg
    (62) valores -> . INT
    (63) valores -> . FLOAT
    (64) valores -> . STRING
    (65) valores -> . BOOL
    (66) valores -> . varYVals
    (67) valores -> . varsOps
    (68) valores -> . vec
    (69) valores -> . ternario
    (70) valores -> . atributos
    (71) valores -> . RES
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (105) reg -> . { campos }
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (55) vec -> . [ elem ]
    (182) ternario -> . ternarioMat
    (183) ternario -> . ternarioBool
    (184) ternario -> . ( ternarioMat )
    (185) ternario -> . ( ternarioBool )
    (186) ternario -> . ternarioVars
    (187) ternario -> . ( ternarioVars )
    (72) atributos -> . ID . valoresCampos
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 85
    FLOAT           shift and go to state 87
    STRING          shift and go to state 69
    BOOL            shift and go to state 90
    RES             shift and go to state 61
    {               shift and go to state 94
    ID              shift and go to state 84
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 71
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    ?               reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    ternario                       shift and go to state 59
    funcBool                       shift and go to state 60
    funcInt                        shift and go to state 62
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 68
    eMat                           shift and go to state 70
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 74
    vec                            shift and go to state 75
    paren                          shift and go to state 82
    reg                            shift and go to state 76
    expBool                        shift and go to state 77
    ternarioBool                   shift and go to state 78
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    valoresAsig                    shift and go to state 356
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 86
    valores                        shift and go to state 120
    p                              shift and go to state 89
    varsOps                        shift and go to state 91
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 65
    varYVals                       shift and go to state 96
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 97

state 317

    (103) m -> [ eMat ] . m
    (104) m -> [ eMat ] .
    (99) m -> . [ INT ]
    (100) m -> . [ INT ] m
    (101) m -> . [ varYVals ] m
    (102) m -> . [ varYVals ]
    (103) m -> . [ eMat ] m
    (104) m -> . [ eMat ]

    .               reduce using rule 104 (m -> [ eMat ] .)
    MASMAS          reduce using rule 104 (m -> [ eMat ] .)
    MENOSMENOS      reduce using rule 104 (m -> [ eMat ] .)
    ,               reduce using rule 104 (m -> [ eMat ] .)
    ]               reduce using rule 104 (m -> [ eMat ] .)
    +               reduce using rule 104 (m -> [ eMat ] .)
    -               reduce using rule 104 (m -> [ eMat ] .)
    *               reduce using rule 104 (m -> [ eMat ] .)
    /               reduce using rule 104 (m -> [ eMat ] .)
    %               reduce using rule 104 (m -> [ eMat ] .)
    ^               reduce using rule 104 (m -> [ eMat ] .)
    OR              reduce using rule 104 (m -> [ eMat ] .)
    AND             reduce using rule 104 (m -> [ eMat ] .)
    ?               reduce using rule 104 (m -> [ eMat ] .)
    EQEQ            reduce using rule 104 (m -> [ eMat ] .)
    DISTINTO        reduce using rule 104 (m -> [ eMat ] .)
    >               reduce using rule 104 (m -> [ eMat ] .)
    <               reduce using rule 104 (m -> [ eMat ] .)
    )               reduce using rule 104 (m -> [ eMat ] .)
    ;               reduce using rule 104 (m -> [ eMat ] .)
    :               reduce using rule 104 (m -> [ eMat ] .)
    }               reduce using rule 104 (m -> [ eMat ] .)
    MULEQ           reduce using rule 104 (m -> [ eMat ] .)
    DIVEQ           reduce using rule 104 (m -> [ eMat ] .)
    MASEQ           reduce using rule 104 (m -> [ eMat ] .)
    MENOSEQ         reduce using rule 104 (m -> [ eMat ] .)
    =               reduce using rule 104 (m -> [ eMat ] .)
    [               shift and go to state 100

    m                              shift and go to state 357

state 318

    (99) m -> [ INT ] .
    (100) m -> [ INT ] . m
    (99) m -> . [ INT ]
    (100) m -> . [ INT ] m
    (101) m -> . [ varYVals ] m
    (102) m -> . [ varYVals ]
    (103) m -> . [ eMat ] m
    (104) m -> . [ eMat ]

    .               reduce using rule 99 (m -> [ INT ] .)
    MASMAS          reduce using rule 99 (m -> [ INT ] .)
    MENOSMENOS      reduce using rule 99 (m -> [ INT ] .)
    ,               reduce using rule 99 (m -> [ INT ] .)
    ]               reduce using rule 99 (m -> [ INT ] .)
    +               reduce using rule 99 (m -> [ INT ] .)
    -               reduce using rule 99 (m -> [ INT ] .)
    *               reduce using rule 99 (m -> [ INT ] .)
    /               reduce using rule 99 (m -> [ INT ] .)
    %               reduce using rule 99 (m -> [ INT ] .)
    ^               reduce using rule 99 (m -> [ INT ] .)
    OR              reduce using rule 99 (m -> [ INT ] .)
    AND             reduce using rule 99 (m -> [ INT ] .)
    ?               reduce using rule 99 (m -> [ INT ] .)
    EQEQ            reduce using rule 99 (m -> [ INT ] .)
    DISTINTO        reduce using rule 99 (m -> [ INT ] .)
    >               reduce using rule 99 (m -> [ INT ] .)
    <               reduce using rule 99 (m -> [ INT ] .)
    )               reduce using rule 99 (m -> [ INT ] .)
    ;               reduce using rule 99 (m -> [ INT ] .)
    :               reduce using rule 99 (m -> [ INT ] .)
    }               reduce using rule 99 (m -> [ INT ] .)
    MULEQ           reduce using rule 99 (m -> [ INT ] .)
    DIVEQ           reduce using rule 99 (m -> [ INT ] .)
    MASEQ           reduce using rule 99 (m -> [ INT ] .)
    MENOSEQ         reduce using rule 99 (m -> [ INT ] .)
    =               reduce using rule 99 (m -> [ INT ] .)
    [               shift and go to state 100

    m                              shift and go to state 358

state 319

    (101) m -> [ varYVals ] . m
    (102) m -> [ varYVals ] .
    (99) m -> . [ INT ]
    (100) m -> . [ INT ] m
    (101) m -> . [ varYVals ] m
    (102) m -> . [ varYVals ]
    (103) m -> . [ eMat ] m
    (104) m -> . [ eMat ]

    .               reduce using rule 102 (m -> [ varYVals ] .)
    MASMAS          reduce using rule 102 (m -> [ varYVals ] .)
    MENOSMENOS      reduce using rule 102 (m -> [ varYVals ] .)
    ,               reduce using rule 102 (m -> [ varYVals ] .)
    ]               reduce using rule 102 (m -> [ varYVals ] .)
    +               reduce using rule 102 (m -> [ varYVals ] .)
    -               reduce using rule 102 (m -> [ varYVals ] .)
    *               reduce using rule 102 (m -> [ varYVals ] .)
    /               reduce using rule 102 (m -> [ varYVals ] .)
    %               reduce using rule 102 (m -> [ varYVals ] .)
    ^               reduce using rule 102 (m -> [ varYVals ] .)
    OR              reduce using rule 102 (m -> [ varYVals ] .)
    AND             reduce using rule 102 (m -> [ varYVals ] .)
    ?               reduce using rule 102 (m -> [ varYVals ] .)
    EQEQ            reduce using rule 102 (m -> [ varYVals ] .)
    DISTINTO        reduce using rule 102 (m -> [ varYVals ] .)
    >               reduce using rule 102 (m -> [ varYVals ] .)
    <               reduce using rule 102 (m -> [ varYVals ] .)
    )               reduce using rule 102 (m -> [ varYVals ] .)
    ;               reduce using rule 102 (m -> [ varYVals ] .)
    :               reduce using rule 102 (m -> [ varYVals ] .)
    }               reduce using rule 102 (m -> [ varYVals ] .)
    MULEQ           reduce using rule 102 (m -> [ varYVals ] .)
    DIVEQ           reduce using rule 102 (m -> [ varYVals ] .)
    MASEQ           reduce using rule 102 (m -> [ varYVals ] .)
    MENOSEQ         reduce using rule 102 (m -> [ varYVals ] .)
    =               reduce using rule 102 (m -> [ varYVals ] .)
    [               shift and go to state 100

    m                              shift and go to state 359

state 320

    (175) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (126) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (189) expBool -> valoresBool . OR and
    (191) expBool -> valoresBool . OR valoresBool
    (194) and -> valoresBool . AND eq
    (196) and -> valoresBool . AND valoresBool

    ?               shift and go to state 360
    OR              shift and go to state 141
    AND             shift and go to state 140


state 321

    (214) tCompare -> ( ternarioMat . )
    (125) valoresMat -> ( ternarioMat . )

    )               shift and go to state 361


state 322

    (222) parenBool -> ( expBool . )
    (176) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (127) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (188) expBool -> expBool . OR and
    (190) expBool -> expBool . OR valoresBool

    )               shift and go to state 281
    ?               shift and go to state 362
    OR              shift and go to state 171


state 323

    (6) lAbierta -> IF ( cosaBooleana ) . linea
    (7) lAbierta -> IF ( cosaBooleana ) . { g } ELSE lAbierta
    (8) lAbierta -> IF ( cosaBooleana ) . lCerrada ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) . { g }
    (14) lCerrada -> IF ( cosaBooleana ) . { g } ELSE { g }
    (15) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE { g }
    (16) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) . { g } ELSE lCerrada
    (18) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE COMMENT com lCerrada
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (27) sentencia -> . varsOps ;
    (28) sentencia -> . func ;
    (29) sentencia -> . varAsig ;
    (30) sentencia -> . RETURN ;
    (31) sentencia -> . ;
    (32) loop -> . WHILE ( valores )
    (33) loop -> . FOR ( primParam ; valores ; tercerParam )
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (42) func -> . funcReturn
    (43) func -> . funcVoid
    (113) varAsig -> . varYVals MULEQ valoresAsig
    (114) varAsig -> . varYVals DIVEQ valoresAsig
    (115) varAsig -> . varYVals MASEQ valoresAsig
    (116) varAsig -> . varYVals MENOSEQ valoresAsig
    (117) varAsig -> . varYVals = valoresAsig
    (118) varAsig -> . ID . ID = valoresAsig
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (51) funcVoid -> . PRINT ( valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (55) vec -> . [ elem ]

    {               shift and go to state 367
    COMMENT         shift and go to state 364
    IF              shift and go to state 365
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 366
    lAbierta                       shift and go to state 30
    linea                          shift and go to state 363
    varYVals                       shift and go to state 11
    loop                           shift and go to state 368

state 324

    (47) funcInt -> MULTIESCALAR ( valores , . valores param )
    (58) valores -> . eMat
    (59) valores -> . expBool
    (60) valores -> . funcReturn
    (61) valores -> . reg
    (62) valores -> . INT
    (63) valores -> . FLOAT
    (64) valores -> . STRING
    (65) valores -> . BOOL
    (66) valores -> . varYVals
    (67) valores -> . varsOps
    (68) valores -> . vec
    (69) valores -> . ternario
    (70) valores -> . atributos
    (71) valores -> . RES
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (105) reg -> . { campos }
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (55) vec -> . [ elem ]
    (182) ternario -> . ternarioMat
    (183) ternario -> . ternarioBool
    (184) ternario -> . ( ternarioMat )
    (185) ternario -> . ( ternarioBool )
    (186) ternario -> . ternarioVars
    (187) ternario -> . ( ternarioVars )
    (72) atributos -> . ID . valoresCampos
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 85
    FLOAT           shift and go to state 87
    STRING          shift and go to state 69
    BOOL            shift and go to state 90
    RES             shift and go to state 61
    {               shift and go to state 94
    ID              shift and go to state 84
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 71
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    ?               reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    ternario                       shift and go to state 59
    funcBool                       shift and go to state 60
    funcInt                        shift and go to state 62
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 68
    eMat                           shift and go to state 70
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 74
    vec                            shift and go to state 75
    paren                          shift and go to state 82
    reg                            shift and go to state 76
    expBool                        shift and go to state 77
    ternarioBool                   shift and go to state 78
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 86
    valores                        shift and go to state 369
    p                              shift and go to state 89
    varsOps                        shift and go to state 91
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 65
    varYVals                       shift and go to state 96
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 97

state 325

    (49) funcString -> CAPITALIZAR ( valores ) .

    )               reduce using rule 49 (funcString -> CAPITALIZAR ( valores ) .)
    ;               reduce using rule 49 (funcString -> CAPITALIZAR ( valores ) .)
    ,               reduce using rule 49 (funcString -> CAPITALIZAR ( valores ) .)
    }               reduce using rule 49 (funcString -> CAPITALIZAR ( valores ) .)
    ]               reduce using rule 49 (funcString -> CAPITALIZAR ( valores ) .)


state 326

    (12) com -> COMMENT com .

    IF              reduce using rule 12 (com -> COMMENT com .)
    DO              reduce using rule 12 (com -> COMMENT com .)
    RETURN          reduce using rule 12 (com -> COMMENT com .)
    ;               reduce using rule 12 (com -> COMMENT com .)
    WHILE           reduce using rule 12 (com -> COMMENT com .)
    FOR             reduce using rule 12 (com -> COMMENT com .)
    MENOSMENOS      reduce using rule 12 (com -> COMMENT com .)
    MASMAS          reduce using rule 12 (com -> COMMENT com .)
    ID              reduce using rule 12 (com -> COMMENT com .)
    PRINT           reduce using rule 12 (com -> COMMENT com .)
    MULTIESCALAR    reduce using rule 12 (com -> COMMENT com .)
    LENGTH          reduce using rule 12 (com -> COMMENT com .)
    CAPITALIZAR     reduce using rule 12 (com -> COMMENT com .)
    COLINEALES      reduce using rule 12 (com -> COMMENT com .)
    [               reduce using rule 12 (com -> COMMENT com .)


state 327

    (24) lCerrada -> loop COMMENT com lCerrada .

    WHILE           reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    COMMENT         reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    IF              reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    DO              reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    FOR             reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    RETURN          reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    ;               reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    MENOSMENOS      reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    MASMAS          reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    ID              reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    PRINT           reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    MULTIESCALAR    reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    LENGTH          reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    CAPITALIZAR     reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    COLINEALES      reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    [               reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    $end            reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    }               reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)
    ELSE            reduce using rule 24 (lCerrada -> loop COMMENT com lCerrada .)


state 328

    (22) lCerrada -> loop { g } .

    WHILE           reduce using rule 22 (lCerrada -> loop { g } .)
    COMMENT         reduce using rule 22 (lCerrada -> loop { g } .)
    IF              reduce using rule 22 (lCerrada -> loop { g } .)
    DO              reduce using rule 22 (lCerrada -> loop { g } .)
    FOR             reduce using rule 22 (lCerrada -> loop { g } .)
    RETURN          reduce using rule 22 (lCerrada -> loop { g } .)
    ;               reduce using rule 22 (lCerrada -> loop { g } .)
    MENOSMENOS      reduce using rule 22 (lCerrada -> loop { g } .)
    MASMAS          reduce using rule 22 (lCerrada -> loop { g } .)
    ID              reduce using rule 22 (lCerrada -> loop { g } .)
    PRINT           reduce using rule 22 (lCerrada -> loop { g } .)
    MULTIESCALAR    reduce using rule 22 (lCerrada -> loop { g } .)
    LENGTH          reduce using rule 22 (lCerrada -> loop { g } .)
    CAPITALIZAR     reduce using rule 22 (lCerrada -> loop { g } .)
    COLINEALES      reduce using rule 22 (lCerrada -> loop { g } .)
    [               reduce using rule 22 (lCerrada -> loop { g } .)
    $end            reduce using rule 22 (lCerrada -> loop { g } .)
    }               reduce using rule 22 (lCerrada -> loop { g } .)
    ELSE            reduce using rule 22 (lCerrada -> loop { g } .)


state 329

    (14) lCerrada -> IF ( cosaBooleana ) . { g } ELSE { g }
    (15) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE { g }
    (16) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) . { g } ELSE lCerrada
    (18) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE COMMENT com lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) sentencia -> . varsOps ;
    (28) sentencia -> . func ;
    (29) sentencia -> . varAsig ;
    (30) sentencia -> . RETURN ;
    (31) sentencia -> . ;
    (32) loop -> . WHILE ( valores )
    (33) loop -> . FOR ( primParam ; valores ; tercerParam )
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (42) func -> . funcReturn
    (43) func -> . funcVoid
    (113) varAsig -> . varYVals MULEQ valoresAsig
    (114) varAsig -> . varYVals DIVEQ valoresAsig
    (115) varAsig -> . varYVals MASEQ valoresAsig
    (116) varAsig -> . varYVals MENOSEQ valoresAsig
    (117) varAsig -> . varYVals = valoresAsig
    (118) varAsig -> . ID . ID = valoresAsig
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (51) funcVoid -> . PRINT ( valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (55) vec -> . [ elem ]

    {               shift and go to state 371
    COMMENT         shift and go to state 364
    IF              shift and go to state 35
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 370
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 38

state 330

    (26) lCerrada -> DO lCerrada WHILE ( valores . ) ;

    )               shift and go to state 372


state 331

    (25) lCerrada -> DO { g } WHILE . ( valores ) ;

    (               shift and go to state 373


state 332

    (50) funcBool -> COLINEALES ( valores , valores . )

    )               shift and go to state 374


state 333

    (33) loop -> FOR ( primParam ; valores . ; tercerParam )

    ;               shift and go to state 375


state 334

    (213) tCompare -> ( ternarioBool . )

    )               shift and go to state 376


state 335

    (175) ternarioBool -> valoresBool ? valoresTernarioBool : . valoresTernarioBool
    (80) ternarioVars -> valoresBool ? valoresTernarioBool : . valoresTernarioVars
    (177) valoresTernarioBool -> . BOOL
    (178) valoresTernarioBool -> . funcBool
    (179) valoresTernarioBool -> . ternarioBool
    (180) valoresTernarioBool -> . ( ternarioBool )
    (181) valoresTernarioBool -> . expBool
    (86) valoresTernarioVars -> . varsOps
    (87) valoresTernarioVars -> . varYVals
    (88) valoresTernarioVars -> . reg
    (89) valoresTernarioVars -> . vec
    (90) valoresTernarioVars -> . ternarioVars
    (91) valoresTernarioVars -> . ( ternarioVars )
    (92) valoresTernarioVars -> . atributos
    (93) valoresTernarioVars -> . RES
    (50) funcBool -> . COLINEALES ( valores , valores )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (105) reg -> . { campos }
    (55) vec -> . [ elem ]
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (72) atributos -> . ID . valoresCampos
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (222) parenBool -> . ( expBool )
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )

    BOOL            shift and go to state 262
    (               shift and go to state 382
    RES             shift and go to state 248
    COLINEALES      shift and go to state 4
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 84
    {               shift and go to state 94
    [               shift and go to state 20
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 152
    NOT             shift and go to state 92
    -               shift and go to state 73
    +               shift and go to state 72

    and                            shift and go to state 58
    funcBool                       shift and go to state 247
    funcInt                        shift and go to state 195
    menor                          shift and go to state 64
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    mayor                          shift and go to state 95
    valoresBool                    shift and go to state 377
    eMat                           shift and go to state 197
    valoresTernarioBool            shift and go to state 378
    vecVal                         shift and go to state 8
    vec                            shift and go to state 254
    paren                          shift and go to state 82
    reg                            shift and go to state 255
    valoresTernarioVars            shift and go to state 379
    expBool                        shift and go to state 380
    ternarioBool                   shift and go to state 258
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 381
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 265
    varYVals                       shift and go to state 383
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 246

state 336

    (76) ternarioVars -> valoresBool ? valoresTernarioVars : . valoresTernarioVars
    (77) ternarioVars -> valoresBool ? valoresTernarioVars : . valoresTernarioMat
    (79) ternarioVars -> valoresBool ? valoresTernarioVars : . valoresTernarioBool
    (86) valoresTernarioVars -> . varsOps
    (87) valoresTernarioVars -> . varYVals
    (88) valoresTernarioVars -> . reg
    (89) valoresTernarioVars -> . vec
    (90) valoresTernarioVars -> . ternarioVars
    (91) valoresTernarioVars -> . ( ternarioVars )
    (92) valoresTernarioVars -> . atributos
    (93) valoresTernarioVars -> . RES
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (177) valoresTernarioBool -> . BOOL
    (178) valoresTernarioBool -> . funcBool
    (179) valoresTernarioBool -> . ternarioBool
    (180) valoresTernarioBool -> . ( ternarioBool )
    (181) valoresTernarioBool -> . expBool
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (105) reg -> . { campos }
    (55) vec -> . [ elem ]
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (72) atributos -> . ID . valoresCampos
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (50) funcBool -> . COLINEALES ( valores , valores )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    (               shift and go to state 390
    RES             shift and go to state 248
    INT             shift and go to state 260
    FLOAT           shift and go to state 261
    STRING          shift and go to state 257
    BOOL            shift and go to state 262
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 84
    {               shift and go to state 94
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    atributos                      shift and go to state 246
    funcBool                       shift and go to state 247
    funcInt                        shift and go to state 249
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 251
    valoresTernarioBool            shift and go to state 385
    valoresBool                    shift and go to state 384
    ternarioMat                    shift and go to state 253
    vec                            shift and go to state 254
    paren                          shift and go to state 82
    reg                            shift and go to state 255
    valoresTernarioVars            shift and go to state 386
    exp                            shift and go to state 93
    ternarioBool                   shift and go to state 258
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    valoresTernarioMat             shift and go to state 387
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 389
    ternarioVars                   shift and go to state 265
    varYVals                       shift and go to state 391
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 388

state 337

    (126) ternarioMat -> valoresBool ? valoresTernarioMat : . valoresTernarioMat
    (78) ternarioVars -> valoresBool ? valoresTernarioMat : . valoresTernarioVars
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (86) valoresTernarioVars -> . varsOps
    (87) valoresTernarioVars -> . varYVals
    (88) valoresTernarioVars -> . reg
    (89) valoresTernarioVars -> . vec
    (90) valoresTernarioVars -> . ternarioVars
    (91) valoresTernarioVars -> . ( ternarioVars )
    (92) valoresTernarioVars -> . atributos
    (93) valoresTernarioVars -> . RES
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (105) reg -> . { campos }
    (55) vec -> . [ elem ]
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (72) atributos -> . ID . valoresCampos
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (50) funcBool -> . COLINEALES ( valores , valores )
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 260
    FLOAT           shift and go to state 261
    STRING          shift and go to state 257
    (               shift and go to state 393
    RES             shift and go to state 248
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 84
    {               shift and go to state 94
    [               shift and go to state 20
    BOOL            shift and go to state 156
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    atributos                      shift and go to state 246
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 249
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 251
    valoresBool                    shift and go to state 392
    ternarioMat                    shift and go to state 253
    vec                            shift and go to state 254
    paren                          shift and go to state 82
    reg                            shift and go to state 255
    valoresTernarioVars            shift and go to state 394
    exp                            shift and go to state 93
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    valoresTernarioMat             shift and go to state 395
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 263
    ternarioVars                   shift and go to state 265
    varYVals                       shift and go to state 266
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 396

state 338

    (134) valoresTernarioMat -> ( ternarioMat . )
    (125) valoresMat -> ( ternarioMat . )
    (214) tCompare -> ( ternarioMat . )

    )               shift and go to state 397


state 339

    (180) valoresTernarioBool -> ( ternarioBool . )
    (173) valoresBool -> ( ternarioBool . )
    (213) tCompare -> ( ternarioBool . )

    )               shift and go to state 398


state 340

    (91) valoresTernarioVars -> ( ternarioVars . )

    )               shift and go to state 399


state 341

    (126) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (175) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (177) valoresTernarioBool -> . BOOL
    (178) valoresTernarioBool -> . funcBool
    (179) valoresTernarioBool -> . ternarioBool
    (180) valoresTernarioBool -> . ( ternarioBool )
    (181) valoresTernarioBool -> . expBool
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (50) funcBool -> . COLINEALES ( valores , valores )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (55) vec -> . [ elem ]
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 260
    FLOAT           shift and go to state 261
    STRING          shift and go to state 257
    (               shift and go to state 402
    BOOL            shift and go to state 262
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    -               shift and go to state 73
    +               shift and go to state 72
    [               shift and go to state 20
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 247
    funcInt                        shift and go to state 249
    menor                          shift and go to state 64
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 274
    eMat                           shift and go to state 251
    valoresTernarioBool            shift and go to state 400
    mayor                          shift and go to state 95
    ternarioMat                    shift and go to state 253
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    iSing                          shift and go to state 79
    ternarioBool                   shift and go to state 258
    tCompare                       shift and go to state 81
    valoresTernarioMat             shift and go to state 401
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 157
    exp                            shift and go to state 93
    varYVals                       shift and go to state 159
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 403

state 342

    (125) valoresMat -> ( ternarioMat ) .
    (214) tCompare -> ( ternarioMat ) .

    )               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    +               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    ^               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    EQEQ            reduce using rule 214 (tCompare -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 214 (tCompare -> ( ternarioMat ) .)
    >               reduce using rule 214 (tCompare -> ( ternarioMat ) .)
    <               reduce using rule 214 (tCompare -> ( ternarioMat ) .)


state 343

    (173) valoresBool -> ( ternarioBool ) .
    (213) tCompare -> ( ternarioBool ) .

    ?               reduce using rule 173 (valoresBool -> ( ternarioBool ) .)
    OR              reduce using rule 173 (valoresBool -> ( ternarioBool ) .)
    AND             reduce using rule 173 (valoresBool -> ( ternarioBool ) .)
    ,               reduce using rule 173 (valoresBool -> ( ternarioBool ) .)
    ]               reduce using rule 173 (valoresBool -> ( ternarioBool ) .)
    )               reduce using rule 173 (valoresBool -> ( ternarioBool ) .)
    ;               reduce using rule 173 (valoresBool -> ( ternarioBool ) .)
    :               reduce using rule 173 (valoresBool -> ( ternarioBool ) .)
    }               reduce using rule 173 (valoresBool -> ( ternarioBool ) .)
    EQEQ            reduce using rule 213 (tCompare -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 213 (tCompare -> ( ternarioBool ) .)
    >               reduce using rule 213 (tCompare -> ( ternarioBool ) .)
    <               reduce using rule 213 (tCompare -> ( ternarioBool ) .)


state 344

    (127) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (176) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (177) valoresTernarioBool -> . BOOL
    (178) valoresTernarioBool -> . funcBool
    (179) valoresTernarioBool -> . ternarioBool
    (180) valoresTernarioBool -> . ( ternarioBool )
    (181) valoresTernarioBool -> . expBool
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (50) funcBool -> . COLINEALES ( valores , valores )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (55) vec -> . [ elem ]
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 260
    FLOAT           shift and go to state 261
    STRING          shift and go to state 257
    (               shift and go to state 402
    BOOL            shift and go to state 262
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    -               shift and go to state 73
    +               shift and go to state 72
    [               shift and go to state 20
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 247
    funcInt                        shift and go to state 249
    menor                          shift and go to state 64
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 274
    eMat                           shift and go to state 251
    valoresTernarioBool            shift and go to state 404
    mayor                          shift and go to state 95
    ternarioMat                    shift and go to state 253
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    iSing                          shift and go to state 79
    ternarioBool                   shift and go to state 258
    tCompare                       shift and go to state 81
    valoresTernarioMat             shift and go to state 405
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 157
    exp                            shift and go to state 93
    varYVals                       shift and go to state 159
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 403

state 345

    (126) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (50) funcBool -> . COLINEALES ( valores , valores )
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (55) vec -> . [ elem ]
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 260
    FLOAT           shift and go to state 261
    STRING          shift and go to state 257
    (               shift and go to state 406
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    BOOL            shift and go to state 156
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    [               shift and go to state 20
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 249
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 251
    valoresBool                    shift and go to state 282
    ternarioMat                    shift and go to state 253
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    valoresTernarioMat             shift and go to state 401
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 157
    exp                            shift and go to state 93
    varYVals                       shift and go to state 159
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 286

state 346

    (125) valoresMat -> ( ternarioMat ) .

    ^               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    +               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    ,               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    ]               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    EQEQ            reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    >               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    <               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    )               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    ;               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    AND             reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    OR              reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    ?               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    :               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    }               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)


state 347

    (127) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (50) funcBool -> . COLINEALES ( valores , valores )
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (55) vec -> . [ elem ]
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 260
    FLOAT           shift and go to state 261
    STRING          shift and go to state 257
    (               shift and go to state 406
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    BOOL            shift and go to state 156
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    [               shift and go to state 20
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 249
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 251
    valoresBool                    shift and go to state 282
    ternarioMat                    shift and go to state 253
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    valoresTernarioMat             shift and go to state 405
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 157
    exp                            shift and go to state 93
    varYVals                       shift and go to state 159
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 286

state 348

    (176) ternarioBool -> expBool ? valoresTernarioBool : . valoresTernarioBool
    (85) ternarioVars -> expBool ? valoresTernarioBool : . valoresTernarioVars
    (177) valoresTernarioBool -> . BOOL
    (178) valoresTernarioBool -> . funcBool
    (179) valoresTernarioBool -> . ternarioBool
    (180) valoresTernarioBool -> . ( ternarioBool )
    (181) valoresTernarioBool -> . expBool
    (86) valoresTernarioVars -> . varsOps
    (87) valoresTernarioVars -> . varYVals
    (88) valoresTernarioVars -> . reg
    (89) valoresTernarioVars -> . vec
    (90) valoresTernarioVars -> . ternarioVars
    (91) valoresTernarioVars -> . ( ternarioVars )
    (92) valoresTernarioVars -> . atributos
    (93) valoresTernarioVars -> . RES
    (50) funcBool -> . COLINEALES ( valores , valores )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (105) reg -> . { campos }
    (55) vec -> . [ elem ]
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (72) atributos -> . ID . valoresCampos
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (222) parenBool -> . ( expBool )
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )

    BOOL            shift and go to state 262
    (               shift and go to state 382
    RES             shift and go to state 248
    COLINEALES      shift and go to state 4
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 84
    {               shift and go to state 94
    [               shift and go to state 20
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 152
    NOT             shift and go to state 92
    -               shift and go to state 73
    +               shift and go to state 72

    and                            shift and go to state 58
    funcBool                       shift and go to state 247
    funcInt                        shift and go to state 195
    not                            shift and go to state 83
    menor                          shift and go to state 64
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    mayor                          shift and go to state 95
    eMat                           shift and go to state 197
    valoresTernarioBool            shift and go to state 407
    valoresBool                    shift and go to state 377
    vec                            shift and go to state 254
    paren                          shift and go to state 82
    reg                            shift and go to state 255
    valoresTernarioVars            shift and go to state 408
    expBool                        shift and go to state 380
    ternarioBool                   shift and go to state 258
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    vecVal                         shift and go to state 8
    p                              shift and go to state 89
    varsOps                        shift and go to state 381
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 265
    varYVals                       shift and go to state 383
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 246

state 349

    (81) ternarioVars -> expBool ? valoresTernarioVars : . valoresTernarioVars
    (82) ternarioVars -> expBool ? valoresTernarioVars : . valoresTernarioMat
    (84) ternarioVars -> expBool ? valoresTernarioVars : . valoresTernarioBool
    (86) valoresTernarioVars -> . varsOps
    (87) valoresTernarioVars -> . varYVals
    (88) valoresTernarioVars -> . reg
    (89) valoresTernarioVars -> . vec
    (90) valoresTernarioVars -> . ternarioVars
    (91) valoresTernarioVars -> . ( ternarioVars )
    (92) valoresTernarioVars -> . atributos
    (93) valoresTernarioVars -> . RES
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (177) valoresTernarioBool -> . BOOL
    (178) valoresTernarioBool -> . funcBool
    (179) valoresTernarioBool -> . ternarioBool
    (180) valoresTernarioBool -> . ( ternarioBool )
    (181) valoresTernarioBool -> . expBool
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (105) reg -> . { campos }
    (55) vec -> . [ elem ]
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (72) atributos -> . ID . valoresCampos
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (50) funcBool -> . COLINEALES ( valores , valores )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    (               shift and go to state 390
    RES             shift and go to state 248
    INT             shift and go to state 260
    FLOAT           shift and go to state 261
    STRING          shift and go to state 257
    BOOL            shift and go to state 262
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 84
    {               shift and go to state 94
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 247
    funcInt                        shift and go to state 249
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 384
    eMat                           shift and go to state 251
    valoresTernarioBool            shift and go to state 409
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 253
    vec                            shift and go to state 254
    paren                          shift and go to state 82
    reg                            shift and go to state 255
    valoresTernarioVars            shift and go to state 411
    expBool                        shift and go to state 388
    ternarioBool                   shift and go to state 258
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    valoresTernarioMat             shift and go to state 410
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 389
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 265
    varYVals                       shift and go to state 391
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 246

state 350

    (127) ternarioMat -> expBool ? valoresTernarioMat : . valoresTernarioMat
    (83) ternarioVars -> expBool ? valoresTernarioMat : . valoresTernarioVars
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (86) valoresTernarioVars -> . varsOps
    (87) valoresTernarioVars -> . varYVals
    (88) valoresTernarioVars -> . reg
    (89) valoresTernarioVars -> . vec
    (90) valoresTernarioVars -> . ternarioVars
    (91) valoresTernarioVars -> . ( ternarioVars )
    (92) valoresTernarioVars -> . atributos
    (93) valoresTernarioVars -> . RES
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (105) reg -> . { campos }
    (55) vec -> . [ elem ]
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (72) atributos -> . ID . valoresCampos
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (50) funcBool -> . COLINEALES ( valores , valores )
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 260
    FLOAT           shift and go to state 261
    STRING          shift and go to state 257
    (               shift and go to state 393
    RES             shift and go to state 248
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 84
    {               shift and go to state 94
    [               shift and go to state 20
    BOOL            shift and go to state 156
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 249
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 392
    eMat                           shift and go to state 251
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 253
    vec                            shift and go to state 254
    paren                          shift and go to state 82
    reg                            shift and go to state 255
    valoresTernarioVars            shift and go to state 413
    expBool                        shift and go to state 396
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    valoresTernarioMat             shift and go to state 412
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 263
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 265
    varYVals                       shift and go to state 266
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 246

state 351

    (176) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (127) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (188) expBool -> expBool . OR and
    (190) expBool -> expBool . OR valoresBool

    ?               shift and go to state 362
    OR              shift and go to state 171


state 352

    (175) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (177) valoresTernarioBool -> . BOOL
    (178) valoresTernarioBool -> . funcBool
    (179) valoresTernarioBool -> . ternarioBool
    (180) valoresTernarioBool -> . ( ternarioBool )
    (181) valoresTernarioBool -> . expBool
    (50) funcBool -> . COLINEALES ( valores , valores )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (55) vec -> . [ elem ]
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (222) parenBool -> . ( expBool )
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )

    BOOL            shift and go to state 262
    (               shift and go to state 414
    COLINEALES      shift and go to state 4
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 152
    NOT             shift and go to state 92
    -               shift and go to state 73
    +               shift and go to state 72

    and                            shift and go to state 58
    funcBool                       shift and go to state 247
    funcInt                        shift and go to state 195
    menor                          shift and go to state 64
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 309
    eMat                           shift and go to state 197
    valoresTernarioBool            shift and go to state 400
    mayor                          shift and go to state 95
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    iSing                          shift and go to state 79
    ternarioBool                   shift and go to state 258
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 202
    exp                            shift and go to state 93
    varYVals                       shift and go to state 203
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 415

state 353

    (173) valoresBool -> ( ternarioBool ) .

    EQEQ            reduce using rule 173 (valoresBool -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 173 (valoresBool -> ( ternarioBool ) .)
    AND             reduce using rule 173 (valoresBool -> ( ternarioBool ) .)
    OR              reduce using rule 173 (valoresBool -> ( ternarioBool ) .)
    ?               reduce using rule 173 (valoresBool -> ( ternarioBool ) .)
    ,               reduce using rule 173 (valoresBool -> ( ternarioBool ) .)
    ]               reduce using rule 173 (valoresBool -> ( ternarioBool ) .)
    )               reduce using rule 173 (valoresBool -> ( ternarioBool ) .)
    ;               reduce using rule 173 (valoresBool -> ( ternarioBool ) .)
    :               reduce using rule 173 (valoresBool -> ( ternarioBool ) .)
    }               reduce using rule 173 (valoresBool -> ( ternarioBool ) .)


state 354

    (176) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (177) valoresTernarioBool -> . BOOL
    (178) valoresTernarioBool -> . funcBool
    (179) valoresTernarioBool -> . ternarioBool
    (180) valoresTernarioBool -> . ( ternarioBool )
    (181) valoresTernarioBool -> . expBool
    (50) funcBool -> . COLINEALES ( valores , valores )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (55) vec -> . [ elem ]
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (222) parenBool -> . ( expBool )
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )

    BOOL            shift and go to state 262
    (               shift and go to state 414
    COLINEALES      shift and go to state 4
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 152
    NOT             shift and go to state 92
    -               shift and go to state 73
    +               shift and go to state 72

    and                            shift and go to state 58
    funcBool                       shift and go to state 247
    funcInt                        shift and go to state 195
    menor                          shift and go to state 64
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 309
    eMat                           shift and go to state 197
    valoresTernarioBool            shift and go to state 404
    mayor                          shift and go to state 95
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    iSing                          shift and go to state 79
    ternarioBool                   shift and go to state 258
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 202
    exp                            shift and go to state 93
    varYVals                       shift and go to state 203
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 415

state 355

    (106) campos -> ID : valores . , campos
    (107) campos -> ID : valores .

    ,               shift and go to state 416
    }               reduce using rule 107 (campos -> ID : valores .)


state 356

    (118) varAsig -> ID . ID = valoresAsig .

    ;               reduce using rule 118 (varAsig -> ID . ID = valoresAsig .)
    )               reduce using rule 118 (varAsig -> ID . ID = valoresAsig .)


state 357

    (103) m -> [ eMat ] m .

    .               reduce using rule 103 (m -> [ eMat ] m .)
    MASMAS          reduce using rule 103 (m -> [ eMat ] m .)
    MENOSMENOS      reduce using rule 103 (m -> [ eMat ] m .)
    ,               reduce using rule 103 (m -> [ eMat ] m .)
    ]               reduce using rule 103 (m -> [ eMat ] m .)
    +               reduce using rule 103 (m -> [ eMat ] m .)
    -               reduce using rule 103 (m -> [ eMat ] m .)
    *               reduce using rule 103 (m -> [ eMat ] m .)
    /               reduce using rule 103 (m -> [ eMat ] m .)
    %               reduce using rule 103 (m -> [ eMat ] m .)
    ^               reduce using rule 103 (m -> [ eMat ] m .)
    OR              reduce using rule 103 (m -> [ eMat ] m .)
    AND             reduce using rule 103 (m -> [ eMat ] m .)
    ?               reduce using rule 103 (m -> [ eMat ] m .)
    EQEQ            reduce using rule 103 (m -> [ eMat ] m .)
    DISTINTO        reduce using rule 103 (m -> [ eMat ] m .)
    >               reduce using rule 103 (m -> [ eMat ] m .)
    <               reduce using rule 103 (m -> [ eMat ] m .)
    )               reduce using rule 103 (m -> [ eMat ] m .)
    ;               reduce using rule 103 (m -> [ eMat ] m .)
    :               reduce using rule 103 (m -> [ eMat ] m .)
    }               reduce using rule 103 (m -> [ eMat ] m .)
    MULEQ           reduce using rule 103 (m -> [ eMat ] m .)
    DIVEQ           reduce using rule 103 (m -> [ eMat ] m .)
    MASEQ           reduce using rule 103 (m -> [ eMat ] m .)
    MENOSEQ         reduce using rule 103 (m -> [ eMat ] m .)
    =               reduce using rule 103 (m -> [ eMat ] m .)


state 358

    (100) m -> [ INT ] m .

    .               reduce using rule 100 (m -> [ INT ] m .)
    MASMAS          reduce using rule 100 (m -> [ INT ] m .)
    MENOSMENOS      reduce using rule 100 (m -> [ INT ] m .)
    ,               reduce using rule 100 (m -> [ INT ] m .)
    ]               reduce using rule 100 (m -> [ INT ] m .)
    +               reduce using rule 100 (m -> [ INT ] m .)
    -               reduce using rule 100 (m -> [ INT ] m .)
    *               reduce using rule 100 (m -> [ INT ] m .)
    /               reduce using rule 100 (m -> [ INT ] m .)
    %               reduce using rule 100 (m -> [ INT ] m .)
    ^               reduce using rule 100 (m -> [ INT ] m .)
    OR              reduce using rule 100 (m -> [ INT ] m .)
    AND             reduce using rule 100 (m -> [ INT ] m .)
    ?               reduce using rule 100 (m -> [ INT ] m .)
    EQEQ            reduce using rule 100 (m -> [ INT ] m .)
    DISTINTO        reduce using rule 100 (m -> [ INT ] m .)
    >               reduce using rule 100 (m -> [ INT ] m .)
    <               reduce using rule 100 (m -> [ INT ] m .)
    )               reduce using rule 100 (m -> [ INT ] m .)
    ;               reduce using rule 100 (m -> [ INT ] m .)
    :               reduce using rule 100 (m -> [ INT ] m .)
    }               reduce using rule 100 (m -> [ INT ] m .)
    MULEQ           reduce using rule 100 (m -> [ INT ] m .)
    DIVEQ           reduce using rule 100 (m -> [ INT ] m .)
    MASEQ           reduce using rule 100 (m -> [ INT ] m .)
    MENOSEQ         reduce using rule 100 (m -> [ INT ] m .)
    =               reduce using rule 100 (m -> [ INT ] m .)


state 359

    (101) m -> [ varYVals ] m .

    .               reduce using rule 101 (m -> [ varYVals ] m .)
    MASMAS          reduce using rule 101 (m -> [ varYVals ] m .)
    MENOSMENOS      reduce using rule 101 (m -> [ varYVals ] m .)
    ,               reduce using rule 101 (m -> [ varYVals ] m .)
    ]               reduce using rule 101 (m -> [ varYVals ] m .)
    +               reduce using rule 101 (m -> [ varYVals ] m .)
    -               reduce using rule 101 (m -> [ varYVals ] m .)
    *               reduce using rule 101 (m -> [ varYVals ] m .)
    /               reduce using rule 101 (m -> [ varYVals ] m .)
    %               reduce using rule 101 (m -> [ varYVals ] m .)
    ^               reduce using rule 101 (m -> [ varYVals ] m .)
    OR              reduce using rule 101 (m -> [ varYVals ] m .)
    AND             reduce using rule 101 (m -> [ varYVals ] m .)
    ?               reduce using rule 101 (m -> [ varYVals ] m .)
    EQEQ            reduce using rule 101 (m -> [ varYVals ] m .)
    DISTINTO        reduce using rule 101 (m -> [ varYVals ] m .)
    >               reduce using rule 101 (m -> [ varYVals ] m .)
    <               reduce using rule 101 (m -> [ varYVals ] m .)
    )               reduce using rule 101 (m -> [ varYVals ] m .)
    ;               reduce using rule 101 (m -> [ varYVals ] m .)
    :               reduce using rule 101 (m -> [ varYVals ] m .)
    }               reduce using rule 101 (m -> [ varYVals ] m .)
    MULEQ           reduce using rule 101 (m -> [ varYVals ] m .)
    DIVEQ           reduce using rule 101 (m -> [ varYVals ] m .)
    MASEQ           reduce using rule 101 (m -> [ varYVals ] m .)
    MENOSEQ         reduce using rule 101 (m -> [ varYVals ] m .)
    =               reduce using rule 101 (m -> [ varYVals ] m .)


state 360

    (175) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (126) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (177) valoresTernarioBool -> . BOOL
    (178) valoresTernarioBool -> . funcBool
    (179) valoresTernarioBool -> . ternarioBool
    (180) valoresTernarioBool -> . ( ternarioBool )
    (181) valoresTernarioBool -> . expBool
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (55) vec -> . [ elem ]
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    BOOL            shift and go to state 262
    (               shift and go to state 419
    INT             shift and go to state 260
    FLOAT           shift and go to state 261
    STRING          shift and go to state 257
    COLINEALES      shift and go to state 4
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    -               shift and go to state 73
    +               shift and go to state 72
    [               shift and go to state 20
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 247
    funcInt                        shift and go to state 249
    menor                          shift and go to state 64
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 417
    eMat                           shift and go to state 251
    valoresTernarioBool            shift and go to state 400
    mayor                          shift and go to state 95
    ternarioMat                    shift and go to state 253
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    iSing                          shift and go to state 79
    ternarioBool                   shift and go to state 258
    tCompare                       shift and go to state 81
    valoresTernarioMat             shift and go to state 401
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 418
    exp                            shift and go to state 93
    varYVals                       shift and go to state 420
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 421

state 361

    (214) tCompare -> ( ternarioMat ) .
    (125) valoresMat -> ( ternarioMat ) .

    EQEQ            reduce using rule 214 (tCompare -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 214 (tCompare -> ( ternarioMat ) .)
    >               reduce using rule 214 (tCompare -> ( ternarioMat ) .)
    <               reduce using rule 214 (tCompare -> ( ternarioMat ) .)
    AND             reduce using rule 214 (tCompare -> ( ternarioMat ) .)
    OR              reduce using rule 214 (tCompare -> ( ternarioMat ) .)
    ?               reduce using rule 214 (tCompare -> ( ternarioMat ) .)
    ,               reduce using rule 214 (tCompare -> ( ternarioMat ) .)
    ]               reduce using rule 214 (tCompare -> ( ternarioMat ) .)
    )               reduce using rule 214 (tCompare -> ( ternarioMat ) .)
    ;               reduce using rule 214 (tCompare -> ( ternarioMat ) .)
    :               reduce using rule 214 (tCompare -> ( ternarioMat ) .)
    }               reduce using rule 214 (tCompare -> ( ternarioMat ) .)
    +               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    ^               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)


state 362

    (176) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (127) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (177) valoresTernarioBool -> . BOOL
    (178) valoresTernarioBool -> . funcBool
    (179) valoresTernarioBool -> . ternarioBool
    (180) valoresTernarioBool -> . ( ternarioBool )
    (181) valoresTernarioBool -> . expBool
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (55) vec -> . [ elem ]
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    BOOL            shift and go to state 262
    (               shift and go to state 419
    INT             shift and go to state 260
    FLOAT           shift and go to state 261
    STRING          shift and go to state 257
    COLINEALES      shift and go to state 4
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    -               shift and go to state 73
    +               shift and go to state 72
    [               shift and go to state 20
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 247
    funcInt                        shift and go to state 249
    menor                          shift and go to state 64
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 417
    eMat                           shift and go to state 251
    valoresTernarioBool            shift and go to state 404
    mayor                          shift and go to state 95
    ternarioMat                    shift and go to state 253
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    iSing                          shift and go to state 79
    ternarioBool                   shift and go to state 258
    tCompare                       shift and go to state 81
    valoresTernarioMat             shift and go to state 405
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 418
    exp                            shift and go to state 93
    varYVals                       shift and go to state 420
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 421

state 363

    (6) lAbierta -> IF ( cosaBooleana ) linea .

    COMMENT         reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    IF              reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    DO              reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    WHILE           reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    FOR             reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    RETURN          reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    ;               reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    MENOSMENOS      reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    MASMAS          reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    ID              reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    PRINT           reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    MULTIESCALAR    reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    LENGTH          reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    CAPITALIZAR     reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    COLINEALES      reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    [               reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    $end            reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)
    }               reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) linea .)


state 364

    (16) lCerrada -> IF ( cosaBooleana ) COMMENT . com lCerrada ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) COMMENT . com lCerrada ELSE lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT . com lCerrada ELSE COMMENT com lCerrada
    (12) com -> . COMMENT com
    (13) com -> . empty
    (54) empty -> .

    COMMENT         shift and go to state 207
    IF              reduce using rule 54 (empty -> .)
    DO              reduce using rule 54 (empty -> .)
    RETURN          reduce using rule 54 (empty -> .)
    ;               reduce using rule 54 (empty -> .)
    WHILE           reduce using rule 54 (empty -> .)
    FOR             reduce using rule 54 (empty -> .)
    MENOSMENOS      reduce using rule 54 (empty -> .)
    MASMAS          reduce using rule 54 (empty -> .)
    ID              reduce using rule 54 (empty -> .)
    PRINT           reduce using rule 54 (empty -> .)
    MULTIESCALAR    reduce using rule 54 (empty -> .)
    LENGTH          reduce using rule 54 (empty -> .)
    CAPITALIZAR     reduce using rule 54 (empty -> .)
    COLINEALES      reduce using rule 54 (empty -> .)
    [               reduce using rule 54 (empty -> .)

    com                            shift and go to state 422
    empty                          shift and go to state 209

state 365

    (14) lCerrada -> IF . ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF . ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF . ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (6) lAbierta -> IF . ( cosaBooleana ) linea
    (7) lAbierta -> IF . ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> IF . ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> IF . ( cosaBooleana ) { g }

    (               shift and go to state 423


state 366

    (8) lAbierta -> IF ( cosaBooleana ) lCerrada . ELSE lAbierta
    (15) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE { g }
    (18) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE COMMENT com lCerrada
    (5) linea -> lCerrada .

    ELSE            shift and go to state 424
    COMMENT         reduce using rule 5 (linea -> lCerrada .)
    IF              reduce using rule 5 (linea -> lCerrada .)
    DO              reduce using rule 5 (linea -> lCerrada .)
    WHILE           reduce using rule 5 (linea -> lCerrada .)
    FOR             reduce using rule 5 (linea -> lCerrada .)
    RETURN          reduce using rule 5 (linea -> lCerrada .)
    ;               reduce using rule 5 (linea -> lCerrada .)
    MENOSMENOS      reduce using rule 5 (linea -> lCerrada .)
    MASMAS          reduce using rule 5 (linea -> lCerrada .)
    ID              reduce using rule 5 (linea -> lCerrada .)
    PRINT           reduce using rule 5 (linea -> lCerrada .)
    MULTIESCALAR    reduce using rule 5 (linea -> lCerrada .)
    LENGTH          reduce using rule 5 (linea -> lCerrada .)
    CAPITALIZAR     reduce using rule 5 (linea -> lCerrada .)
    COLINEALES      reduce using rule 5 (linea -> lCerrada .)
    [               reduce using rule 5 (linea -> lCerrada .)
    $end            reduce using rule 5 (linea -> lCerrada .)
    }               reduce using rule 5 (linea -> lCerrada .)


state 367

    (7) lAbierta -> IF ( cosaBooleana ) { . g } ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) { . g }
    (14) lCerrada -> IF ( cosaBooleana ) { . g } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { . g } ELSE lCerrada
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (54) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (32) loop -> . WHILE ( valores )
    (33) loop -> . FOR ( primParam ; valores ; tercerParam )
    (27) sentencia -> . varsOps ;
    (28) sentencia -> . func ;
    (29) sentencia -> . varAsig ;
    (30) sentencia -> . RETURN ;
    (31) sentencia -> . ;
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (42) func -> . funcReturn
    (43) func -> . funcVoid
    (113) varAsig -> . varYVals MULEQ valoresAsig
    (114) varAsig -> . varYVals DIVEQ valoresAsig
    (115) varAsig -> . varYVals MASEQ valoresAsig
    (116) varAsig -> . varYVals MENOSEQ valoresAsig
    (117) varAsig -> . varYVals = valoresAsig
    (118) varAsig -> . ID . ID = valoresAsig
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (51) funcVoid -> . PRINT ( valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (55) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 54 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    linea                          shift and go to state 34
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 13
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 425
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 29
    lAbierta                       shift and go to state 30
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 32

state 368

    (22) lCerrada -> loop . { g }
    (23) lCerrada -> loop . lCerrada
    (24) lCerrada -> loop . COMMENT com lCerrada
    (10) lAbierta -> loop . lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (27) sentencia -> . varsOps ;
    (28) sentencia -> . func ;
    (29) sentencia -> . varAsig ;
    (30) sentencia -> . RETURN ;
    (31) sentencia -> . ;
    (32) loop -> . WHILE ( valores )
    (33) loop -> . FOR ( primParam ; valores ; tercerParam )
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (42) func -> . funcReturn
    (43) func -> . funcVoid
    (113) varAsig -> . varYVals MULEQ valoresAsig
    (114) varAsig -> . varYVals DIVEQ valoresAsig
    (115) varAsig -> . varYVals MASEQ valoresAsig
    (116) varAsig -> . varYVals MENOSEQ valoresAsig
    (117) varAsig -> . varYVals = valoresAsig
    (118) varAsig -> . ID . ID = valoresAsig
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (51) funcVoid -> . PRINT ( valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (55) vec -> . [ elem ]

    {               shift and go to state 109
    COMMENT         shift and go to state 106
    IF              shift and go to state 365
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 107
    lAbierta                       shift and go to state 108
    loop                           shift and go to state 368
    varYVals                       shift and go to state 11

state 369

    (47) funcInt -> MULTIESCALAR ( valores , valores . param )
    (52) param -> . , valores
    (53) param -> . empty
    (54) empty -> .

    ,               shift and go to state 427
    )               reduce using rule 54 (empty -> .)

    empty                          shift and go to state 428
    param                          shift and go to state 426

state 370

    (15) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE { g }
    (18) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE COMMENT com lCerrada

    ELSE            shift and go to state 429


state 371

    (14) lCerrada -> IF ( cosaBooleana ) { . g } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { . g } ELSE lCerrada
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (54) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (32) loop -> . WHILE ( valores )
    (33) loop -> . FOR ( primParam ; valores ; tercerParam )
    (27) sentencia -> . varsOps ;
    (28) sentencia -> . func ;
    (29) sentencia -> . varAsig ;
    (30) sentencia -> . RETURN ;
    (31) sentencia -> . ;
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (42) func -> . funcReturn
    (43) func -> . funcVoid
    (113) varAsig -> . varYVals MULEQ valoresAsig
    (114) varAsig -> . varYVals DIVEQ valoresAsig
    (115) varAsig -> . varYVals MASEQ valoresAsig
    (116) varAsig -> . varYVals MENOSEQ valoresAsig
    (117) varAsig -> . varYVals = valoresAsig
    (118) varAsig -> . ID . ID = valoresAsig
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (51) funcVoid -> . PRINT ( valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (55) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 54 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 13
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 430
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 29
    lAbierta                       shift and go to state 30
    loop                           shift and go to state 32
    varYVals                       shift and go to state 11
    linea                          shift and go to state 34

state 372

    (26) lCerrada -> DO lCerrada WHILE ( valores ) . ;

    ;               shift and go to state 431


state 373

    (25) lCerrada -> DO { g } WHILE ( . valores ) ;
    (58) valores -> . eMat
    (59) valores -> . expBool
    (60) valores -> . funcReturn
    (61) valores -> . reg
    (62) valores -> . INT
    (63) valores -> . FLOAT
    (64) valores -> . STRING
    (65) valores -> . BOOL
    (66) valores -> . varYVals
    (67) valores -> . varsOps
    (68) valores -> . vec
    (69) valores -> . ternario
    (70) valores -> . atributos
    (71) valores -> . RES
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (105) reg -> . { campos }
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (55) vec -> . [ elem ]
    (182) ternario -> . ternarioMat
    (183) ternario -> . ternarioBool
    (184) ternario -> . ( ternarioMat )
    (185) ternario -> . ( ternarioBool )
    (186) ternario -> . ternarioVars
    (187) ternario -> . ( ternarioVars )
    (72) atributos -> . ID . valoresCampos
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 85
    FLOAT           shift and go to state 87
    STRING          shift and go to state 69
    BOOL            shift and go to state 90
    RES             shift and go to state 61
    {               shift and go to state 94
    ID              shift and go to state 84
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 71
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    ?               reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    ternario                       shift and go to state 59
    funcBool                       shift and go to state 60
    funcInt                        shift and go to state 62
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 68
    eMat                           shift and go to state 70
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 74
    vec                            shift and go to state 75
    paren                          shift and go to state 82
    reg                            shift and go to state 76
    expBool                        shift and go to state 77
    ternarioBool                   shift and go to state 78
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 86
    valores                        shift and go to state 432
    p                              shift and go to state 89
    varsOps                        shift and go to state 91
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 65
    varYVals                       shift and go to state 96
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 97

state 374

    (50) funcBool -> COLINEALES ( valores , valores ) .

    :               reduce using rule 50 (funcBool -> COLINEALES ( valores , valores ) .)
    ?               reduce using rule 50 (funcBool -> COLINEALES ( valores , valores ) .)
    OR              reduce using rule 50 (funcBool -> COLINEALES ( valores , valores ) .)
    AND             reduce using rule 50 (funcBool -> COLINEALES ( valores , valores ) .)
    ;               reduce using rule 50 (funcBool -> COLINEALES ( valores , valores ) .)
    ,               reduce using rule 50 (funcBool -> COLINEALES ( valores , valores ) .)
    ]               reduce using rule 50 (funcBool -> COLINEALES ( valores , valores ) .)
    )               reduce using rule 50 (funcBool -> COLINEALES ( valores , valores ) .)
    }               reduce using rule 50 (funcBool -> COLINEALES ( valores , valores ) .)
    EQEQ            reduce using rule 50 (funcBool -> COLINEALES ( valores , valores ) .)
    DISTINTO        reduce using rule 50 (funcBool -> COLINEALES ( valores , valores ) .)


state 375

    (33) loop -> FOR ( primParam ; valores ; . tercerParam )
    (38) tercerParam -> . varsOps
    (39) tercerParam -> . varAsig
    (40) tercerParam -> . func
    (41) tercerParam -> . empty
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (113) varAsig -> . varYVals MULEQ valoresAsig
    (114) varAsig -> . varYVals DIVEQ valoresAsig
    (115) varAsig -> . varYVals MASEQ valoresAsig
    (116) varAsig -> . varYVals MENOSEQ valoresAsig
    (117) varAsig -> . varYVals = valoresAsig
    (118) varAsig -> . ID . ID = valoresAsig
    (42) func -> . funcReturn
    (43) func -> . funcVoid
    (54) empty -> .
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (51) funcVoid -> . PRINT ( valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (55) vec -> . [ elem ]

    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    )               reduce using rule 54 (empty -> .)
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    varAsig                        shift and go to state 435
    funcVoid                       shift and go to state 15
    funcBool                       shift and go to state 3
    funcString                     shift and go to state 25
    funcInt                        shift and go to state 5
    funcReturn                     shift and go to state 27
    vec                            shift and go to state 33
    varsOps                        shift and go to state 437
    func                           shift and go to state 433
    varYVals                       shift and go to state 11
    vecVal                         shift and go to state 8
    empty                          shift and go to state 436
    tercerParam                    shift and go to state 434

state 376

    (213) tCompare -> ( ternarioBool ) .

    EQEQ            reduce using rule 213 (tCompare -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 213 (tCompare -> ( ternarioBool ) .)
    AND             reduce using rule 213 (tCompare -> ( ternarioBool ) .)
    OR              reduce using rule 213 (tCompare -> ( ternarioBool ) .)
    ?               reduce using rule 213 (tCompare -> ( ternarioBool ) .)
    ,               reduce using rule 213 (tCompare -> ( ternarioBool ) .)
    ]               reduce using rule 213 (tCompare -> ( ternarioBool ) .)
    )               reduce using rule 213 (tCompare -> ( ternarioBool ) .)
    ;               reduce using rule 213 (tCompare -> ( ternarioBool ) .)
    :               reduce using rule 213 (tCompare -> ( ternarioBool ) .)
    }               reduce using rule 213 (tCompare -> ( ternarioBool ) .)
    >               reduce using rule 213 (tCompare -> ( ternarioBool ) .)
    <               reduce using rule 213 (tCompare -> ( ternarioBool ) .)


state 377

    (175) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (189) expBool -> valoresBool . OR and
    (191) expBool -> valoresBool . OR valoresBool
    (76) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (194) and -> valoresBool . AND eq
    (196) and -> valoresBool . AND valoresBool

    ?               shift and go to state 438
    OR              shift and go to state 141
    AND             shift and go to state 140


state 378

    (175) ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .

    :               reduce using rule 175 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    )               reduce using rule 175 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    ,               reduce using rule 175 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    ]               reduce using rule 175 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    ;               reduce using rule 175 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    }               reduce using rule 175 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)


state 379

    (80) ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .

    ;               reduce using rule 80 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    )               reduce using rule 80 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    ,               reduce using rule 80 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    ]               reduce using rule 80 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    :               reduce using rule 80 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    }               reduce using rule 80 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)


state 380

    (181) valoresTernarioBool -> expBool .
    (176) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> expBool . OR and
    (190) expBool -> expBool . OR valoresBool
    (81) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars

    ,               reduce using rule 181 (valoresTernarioBool -> expBool .)
    ]               reduce using rule 181 (valoresTernarioBool -> expBool .)
    )               reduce using rule 181 (valoresTernarioBool -> expBool .)
    ;               reduce using rule 181 (valoresTernarioBool -> expBool .)
    :               reduce using rule 181 (valoresTernarioBool -> expBool .)
    }               reduce using rule 181 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 439
    OR              shift and go to state 171


state 381

    (86) valoresTernarioVars -> varsOps .
    (172) valoresBool -> varsOps .
    (208) tCompare -> varsOps .
    (123) valoresMat -> varsOps .

    ,               reduce using rule 86 (valoresTernarioVars -> varsOps .)
    ]               reduce using rule 86 (valoresTernarioVars -> varsOps .)
    )               reduce using rule 86 (valoresTernarioVars -> varsOps .)
    ;               reduce using rule 86 (valoresTernarioVars -> varsOps .)
    :               reduce using rule 86 (valoresTernarioVars -> varsOps .)
    }               reduce using rule 86 (valoresTernarioVars -> varsOps .)
    ?               reduce using rule 172 (valoresBool -> varsOps .)
    OR              reduce using rule 172 (valoresBool -> varsOps .)
    AND             reduce using rule 172 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 208 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 208 (tCompare -> varsOps .)
    >               reduce using rule 208 (tCompare -> varsOps .)
    <               reduce using rule 208 (tCompare -> varsOps .)
    +               reduce using rule 123 (valoresMat -> varsOps .)
    -               reduce using rule 123 (valoresMat -> varsOps .)
    *               reduce using rule 123 (valoresMat -> varsOps .)
    /               reduce using rule 123 (valoresMat -> varsOps .)
    %               reduce using rule 123 (valoresMat -> varsOps .)
    ^               reduce using rule 123 (valoresMat -> varsOps .)


state 382

    (180) valoresTernarioBool -> ( . ternarioBool )
    (91) valoresTernarioVars -> ( . ternarioVars )
    (173) valoresBool -> ( . ternarioBool )
    (213) tCompare -> ( . ternarioBool )
    (214) tCompare -> ( . ternarioMat )
    (125) valoresMat -> ( . ternarioMat )
    (222) parenBool -> ( . expBool )
    (167) paren -> ( . eMat )
    (168) paren -> ( . valoresMat )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (50) funcBool -> . COLINEALES ( valores , valores )
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (55) vec -> . [ elem ]
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 154
    FLOAT           shift and go to state 155
    STRING          shift and go to state 152
    (               shift and go to state 150
    BOOL            shift and go to state 156
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    [               shift and go to state 20
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 146
    menor                          shift and go to state 64
    valoresMat                     shift and go to state 147
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 440
    eMat                           shift and go to state 149
    mayor                          shift and go to state 95
    ternarioMat                    shift and go to state 321
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    ternarioBool                   shift and go to state 339
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 157
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 340
    varYVals                       shift and go to state 159
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 441

state 383

    (87) valoresTernarioVars -> varYVals .
    (110) varsOps -> varYVals . MASMAS
    (111) varsOps -> varYVals . MENOSMENOS
    (171) valoresBool -> varYVals .
    (209) tCompare -> varYVals .
    (122) valoresMat -> varYVals .

    ,               reduce using rule 87 (valoresTernarioVars -> varYVals .)
    ]               reduce using rule 87 (valoresTernarioVars -> varYVals .)
    )               reduce using rule 87 (valoresTernarioVars -> varYVals .)
    ;               reduce using rule 87 (valoresTernarioVars -> varYVals .)
    :               reduce using rule 87 (valoresTernarioVars -> varYVals .)
    }               reduce using rule 87 (valoresTernarioVars -> varYVals .)
    MASMAS          shift and go to state 49
    MENOSMENOS      shift and go to state 46
    ?               reduce using rule 171 (valoresBool -> varYVals .)
    OR              reduce using rule 171 (valoresBool -> varYVals .)
    AND             reduce using rule 171 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 209 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 209 (tCompare -> varYVals .)
    >               reduce using rule 209 (tCompare -> varYVals .)
    <               reduce using rule 209 (tCompare -> varYVals .)
    +               reduce using rule 122 (valoresMat -> varYVals .)
    -               reduce using rule 122 (valoresMat -> varYVals .)
    *               reduce using rule 122 (valoresMat -> varYVals .)
    /               reduce using rule 122 (valoresMat -> varYVals .)
    %               reduce using rule 122 (valoresMat -> varYVals .)
    ^               reduce using rule 122 (valoresMat -> varYVals .)


state 384

    (76) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (126) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (175) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (189) expBool -> valoresBool . OR and
    (191) expBool -> valoresBool . OR valoresBool
    (194) and -> valoresBool . AND eq
    (196) and -> valoresBool . AND valoresBool

    ?               shift and go to state 442
    OR              shift and go to state 141
    AND             shift and go to state 140


state 385

    (79) ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .

    ;               reduce using rule 79 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    )               reduce using rule 79 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    ,               reduce using rule 79 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    ]               reduce using rule 79 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    :               reduce using rule 79 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    }               reduce using rule 79 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)


state 386

    (76) ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .

    ;               reduce using rule 76 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    )               reduce using rule 76 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    ,               reduce using rule 76 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    ]               reduce using rule 76 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    :               reduce using rule 76 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    }               reduce using rule 76 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)


state 387

    (77) ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .

    ;               reduce using rule 77 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    )               reduce using rule 77 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    ,               reduce using rule 77 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    ]               reduce using rule 77 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    :               reduce using rule 77 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    }               reduce using rule 77 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)


state 388

    (181) valoresTernarioBool -> expBool .
    (81) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (127) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (176) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> expBool . OR and
    (190) expBool -> expBool . OR valoresBool

    :               reduce using rule 181 (valoresTernarioBool -> expBool .)
    ,               reduce using rule 181 (valoresTernarioBool -> expBool .)
    ]               reduce using rule 181 (valoresTernarioBool -> expBool .)
    )               reduce using rule 181 (valoresTernarioBool -> expBool .)
    ;               reduce using rule 181 (valoresTernarioBool -> expBool .)
    }               reduce using rule 181 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 443
    OR              shift and go to state 171


state 389

    (86) valoresTernarioVars -> varsOps .
    (172) valoresBool -> varsOps .
    (123) valoresMat -> varsOps .
    (208) tCompare -> varsOps .

    :               reduce using rule 86 (valoresTernarioVars -> varsOps .)
    ,               reduce using rule 86 (valoresTernarioVars -> varsOps .)
    ]               reduce using rule 86 (valoresTernarioVars -> varsOps .)
    )               reduce using rule 86 (valoresTernarioVars -> varsOps .)
    ;               reduce using rule 86 (valoresTernarioVars -> varsOps .)
    }               reduce using rule 86 (valoresTernarioVars -> varsOps .)
    ?               reduce using rule 172 (valoresBool -> varsOps .)
    OR              reduce using rule 172 (valoresBool -> varsOps .)
    AND             reduce using rule 172 (valoresBool -> varsOps .)
    +               reduce using rule 123 (valoresMat -> varsOps .)
    -               reduce using rule 123 (valoresMat -> varsOps .)
    *               reduce using rule 123 (valoresMat -> varsOps .)
    /               reduce using rule 123 (valoresMat -> varsOps .)
    %               reduce using rule 123 (valoresMat -> varsOps .)
    ^               reduce using rule 123 (valoresMat -> varsOps .)
    EQEQ            reduce using rule 208 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 208 (tCompare -> varsOps .)
    >               reduce using rule 208 (tCompare -> varsOps .)
    <               reduce using rule 208 (tCompare -> varsOps .)


state 390

    (91) valoresTernarioVars -> ( . ternarioVars )
    (134) valoresTernarioMat -> ( . ternarioMat )
    (180) valoresTernarioBool -> ( . ternarioBool )
    (173) valoresBool -> ( . ternarioBool )
    (125) valoresMat -> ( . ternarioMat )
    (213) tCompare -> ( . ternarioBool )
    (214) tCompare -> ( . ternarioMat )
    (167) paren -> ( . eMat )
    (168) paren -> ( . valoresMat )
    (222) parenBool -> ( . expBool )
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (50) funcBool -> . COLINEALES ( valores , valores )
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (55) vec -> . [ elem ]
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 154
    FLOAT           shift and go to state 155
    STRING          shift and go to state 152
    (               shift and go to state 150
    BOOL            shift and go to state 156
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    [               shift and go to state 20
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 146
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 147
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 149
    valoresBool                    shift and go to state 384
    ternarioMat                    shift and go to state 338
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    varsOps                        shift and go to state 157
    ternarioBool                   shift and go to state 339
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    p                              shift and go to state 89
    iSing                          shift and go to state 79
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 340
    varYVals                       shift and go to state 159
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 444

state 391

    (87) valoresTernarioVars -> varYVals .
    (110) varsOps -> varYVals . MASMAS
    (111) varsOps -> varYVals . MENOSMENOS
    (171) valoresBool -> varYVals .
    (122) valoresMat -> varYVals .
    (209) tCompare -> varYVals .

    :               reduce using rule 87 (valoresTernarioVars -> varYVals .)
    ,               reduce using rule 87 (valoresTernarioVars -> varYVals .)
    ]               reduce using rule 87 (valoresTernarioVars -> varYVals .)
    )               reduce using rule 87 (valoresTernarioVars -> varYVals .)
    ;               reduce using rule 87 (valoresTernarioVars -> varYVals .)
    }               reduce using rule 87 (valoresTernarioVars -> varYVals .)
    MASMAS          shift and go to state 49
    MENOSMENOS      shift and go to state 46
    ?               reduce using rule 171 (valoresBool -> varYVals .)
    OR              reduce using rule 171 (valoresBool -> varYVals .)
    AND             reduce using rule 171 (valoresBool -> varYVals .)
    +               reduce using rule 122 (valoresMat -> varYVals .)
    -               reduce using rule 122 (valoresMat -> varYVals .)
    *               reduce using rule 122 (valoresMat -> varYVals .)
    /               reduce using rule 122 (valoresMat -> varYVals .)
    %               reduce using rule 122 (valoresMat -> varYVals .)
    ^               reduce using rule 122 (valoresMat -> varYVals .)
    EQEQ            reduce using rule 209 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 209 (tCompare -> varYVals .)
    >               reduce using rule 209 (tCompare -> varYVals .)
    <               reduce using rule 209 (tCompare -> varYVals .)


state 392

    (126) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (76) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (189) expBool -> valoresBool . OR and
    (191) expBool -> valoresBool . OR valoresBool
    (194) and -> valoresBool . AND eq
    (196) and -> valoresBool . AND valoresBool

    ?               shift and go to state 445
    OR              shift and go to state 141
    AND             shift and go to state 140


state 393

    (134) valoresTernarioMat -> ( . ternarioMat )
    (91) valoresTernarioVars -> ( . ternarioVars )
    (125) valoresMat -> ( . ternarioMat )
    (173) valoresBool -> ( . ternarioBool )
    (167) paren -> ( . eMat )
    (168) paren -> ( . valoresMat )
    (213) tCompare -> ( . ternarioBool )
    (214) tCompare -> ( . ternarioMat )
    (222) parenBool -> ( . expBool )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (50) funcBool -> . COLINEALES ( valores , valores )
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (55) vec -> . [ elem ]
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 154
    FLOAT           shift and go to state 155
    STRING          shift and go to state 152
    (               shift and go to state 150
    BOOL            shift and go to state 156
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    [               shift and go to state 20
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 146
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 147
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 149
    valoresBool                    shift and go to state 446
    ternarioMat                    shift and go to state 338
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    varsOps                        shift and go to state 157
    ternarioBool                   shift and go to state 276
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    p                              shift and go to state 89
    iSing                          shift and go to state 79
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 340
    varYVals                       shift and go to state 159
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 447

state 394

    (78) ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .

    ;               reduce using rule 78 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    )               reduce using rule 78 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    ,               reduce using rule 78 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    ]               reduce using rule 78 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    :               reduce using rule 78 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    }               reduce using rule 78 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)


state 395

    (126) ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .

    )               reduce using rule 126 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    ;               reduce using rule 126 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    :               reduce using rule 126 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    ,               reduce using rule 126 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    ]               reduce using rule 126 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    }               reduce using rule 126 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)


state 396

    (127) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (81) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (188) expBool -> expBool . OR and
    (190) expBool -> expBool . OR valoresBool

    ?               shift and go to state 448
    OR              shift and go to state 171


state 397

    (134) valoresTernarioMat -> ( ternarioMat ) .
    (125) valoresMat -> ( ternarioMat ) .
    (214) tCompare -> ( ternarioMat ) .

    :               reduce using rule 134 (valoresTernarioMat -> ( ternarioMat ) .)
    )               reduce using rule 134 (valoresTernarioMat -> ( ternarioMat ) .)
    ,               reduce using rule 134 (valoresTernarioMat -> ( ternarioMat ) .)
    ]               reduce using rule 134 (valoresTernarioMat -> ( ternarioMat ) .)
    ;               reduce using rule 134 (valoresTernarioMat -> ( ternarioMat ) .)
    }               reduce using rule 134 (valoresTernarioMat -> ( ternarioMat ) .)
    +               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    ^               reduce using rule 125 (valoresMat -> ( ternarioMat ) .)
    EQEQ            reduce using rule 214 (tCompare -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 214 (tCompare -> ( ternarioMat ) .)
    >               reduce using rule 214 (tCompare -> ( ternarioMat ) .)
    <               reduce using rule 214 (tCompare -> ( ternarioMat ) .)


state 398

    (180) valoresTernarioBool -> ( ternarioBool ) .
    (173) valoresBool -> ( ternarioBool ) .
    (213) tCompare -> ( ternarioBool ) .

    :               reduce using rule 180 (valoresTernarioBool -> ( ternarioBool ) .)
    )               reduce using rule 180 (valoresTernarioBool -> ( ternarioBool ) .)
    ,               reduce using rule 180 (valoresTernarioBool -> ( ternarioBool ) .)
    ]               reduce using rule 180 (valoresTernarioBool -> ( ternarioBool ) .)
    ;               reduce using rule 180 (valoresTernarioBool -> ( ternarioBool ) .)
    }               reduce using rule 180 (valoresTernarioBool -> ( ternarioBool ) .)
    ?               reduce using rule 173 (valoresBool -> ( ternarioBool ) .)
    OR              reduce using rule 173 (valoresBool -> ( ternarioBool ) .)
    AND             reduce using rule 173 (valoresBool -> ( ternarioBool ) .)
    EQEQ            reduce using rule 213 (tCompare -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 213 (tCompare -> ( ternarioBool ) .)
    >               reduce using rule 213 (tCompare -> ( ternarioBool ) .)
    <               reduce using rule 213 (tCompare -> ( ternarioBool ) .)


state 399

    (91) valoresTernarioVars -> ( ternarioVars ) .

    :               reduce using rule 91 (valoresTernarioVars -> ( ternarioVars ) .)
    ,               reduce using rule 91 (valoresTernarioVars -> ( ternarioVars ) .)
    ]               reduce using rule 91 (valoresTernarioVars -> ( ternarioVars ) .)
    )               reduce using rule 91 (valoresTernarioVars -> ( ternarioVars ) .)
    ;               reduce using rule 91 (valoresTernarioVars -> ( ternarioVars ) .)
    }               reduce using rule 91 (valoresTernarioVars -> ( ternarioVars ) .)


state 400

    (175) ternarioBool -> valoresBool ? valoresTernarioBool . : valoresTernarioBool

    :               shift and go to state 449


state 401

    (126) ternarioMat -> valoresBool ? valoresTernarioMat . : valoresTernarioMat

    :               shift and go to state 450


state 402

    (134) valoresTernarioMat -> ( . ternarioMat )
    (180) valoresTernarioBool -> ( . ternarioBool )
    (125) valoresMat -> ( . ternarioMat )
    (173) valoresBool -> ( . ternarioBool )
    (213) tCompare -> ( . ternarioBool )
    (214) tCompare -> ( . ternarioMat )
    (167) paren -> ( . eMat )
    (168) paren -> ( . valoresMat )
    (222) parenBool -> ( . expBool )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (50) funcBool -> . COLINEALES ( valores , valores )
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (55) vec -> . [ elem ]
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 154
    FLOAT           shift and go to state 155
    STRING          shift and go to state 152
    (               shift and go to state 150
    BOOL            shift and go to state 156
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    [               shift and go to state 20
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 146
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 147
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 149
    valoresBool                    shift and go to state 274
    ternarioMat                    shift and go to state 338
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    iSing                          shift and go to state 79
    ternarioBool                   shift and go to state 339
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 157
    exp                            shift and go to state 93
    varYVals                       shift and go to state 159
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 277

state 403

    (181) valoresTernarioBool -> expBool .
    (127) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (176) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> expBool . OR and
    (190) expBool -> expBool . OR valoresBool

    :               reduce using rule 181 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 344
    OR              shift and go to state 171


state 404

    (176) ternarioBool -> expBool ? valoresTernarioBool . : valoresTernarioBool

    :               shift and go to state 451


state 405

    (127) ternarioMat -> expBool ? valoresTernarioMat . : valoresTernarioMat

    :               shift and go to state 452


state 406

    (134) valoresTernarioMat -> ( . ternarioMat )
    (125) valoresMat -> ( . ternarioMat )
    (173) valoresBool -> ( . ternarioBool )
    (167) paren -> ( . eMat )
    (168) paren -> ( . valoresMat )
    (213) tCompare -> ( . ternarioBool )
    (214) tCompare -> ( . ternarioMat )
    (222) parenBool -> ( . expBool )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (50) funcBool -> . COLINEALES ( valores , valores )
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (55) vec -> . [ elem ]
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 154
    FLOAT           shift and go to state 155
    STRING          shift and go to state 152
    (               shift and go to state 150
    BOOL            shift and go to state 156
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    [               shift and go to state 20
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 146
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 147
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 149
    valoresBool                    shift and go to state 274
    ternarioMat                    shift and go to state 338
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    iSing                          shift and go to state 79
    ternarioBool                   shift and go to state 276
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 157
    exp                            shift and go to state 93
    varYVals                       shift and go to state 159
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 277

state 407

    (176) ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .

    :               reduce using rule 176 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    )               reduce using rule 176 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    ,               reduce using rule 176 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    ]               reduce using rule 176 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    ;               reduce using rule 176 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    }               reduce using rule 176 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)


state 408

    (85) ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .

    ;               reduce using rule 85 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    )               reduce using rule 85 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    ,               reduce using rule 85 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    ]               reduce using rule 85 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    :               reduce using rule 85 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    }               reduce using rule 85 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)


state 409

    (84) ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .

    ;               reduce using rule 84 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    )               reduce using rule 84 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    ,               reduce using rule 84 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    ]               reduce using rule 84 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    :               reduce using rule 84 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    }               reduce using rule 84 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)


state 410

    (82) ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .

    ;               reduce using rule 82 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    )               reduce using rule 82 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    ,               reduce using rule 82 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    ]               reduce using rule 82 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    :               reduce using rule 82 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    }               reduce using rule 82 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)


state 411

    (81) ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .

    ;               reduce using rule 81 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    )               reduce using rule 81 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    ,               reduce using rule 81 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    ]               reduce using rule 81 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    :               reduce using rule 81 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    }               reduce using rule 81 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)


state 412

    (127) ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .

    )               reduce using rule 127 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    ;               reduce using rule 127 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    :               reduce using rule 127 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    ,               reduce using rule 127 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    ]               reduce using rule 127 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    }               reduce using rule 127 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)


state 413

    (83) ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .

    ;               reduce using rule 83 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    )               reduce using rule 83 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    ,               reduce using rule 83 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    ]               reduce using rule 83 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    :               reduce using rule 83 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    }               reduce using rule 83 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)


state 414

    (180) valoresTernarioBool -> ( . ternarioBool )
    (173) valoresBool -> ( . ternarioBool )
    (213) tCompare -> ( . ternarioBool )
    (214) tCompare -> ( . ternarioMat )
    (125) valoresMat -> ( . ternarioMat )
    (222) parenBool -> ( . expBool )
    (167) paren -> ( . eMat )
    (168) paren -> ( . valoresMat )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (50) funcBool -> . COLINEALES ( valores , valores )
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (55) vec -> . [ elem ]
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 154
    FLOAT           shift and go to state 155
    STRING          shift and go to state 152
    (               shift and go to state 150
    BOOL            shift and go to state 156
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    [               shift and go to state 20
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 146
    menor                          shift and go to state 64
    valoresMat                     shift and go to state 147
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 320
    eMat                           shift and go to state 149
    mayor                          shift and go to state 95
    ternarioMat                    shift and go to state 321
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    iSing                          shift and go to state 79
    ternarioBool                   shift and go to state 339
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 157
    exp                            shift and go to state 93
    varYVals                       shift and go to state 159
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 322

state 415

    (181) valoresTernarioBool -> expBool .
    (176) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> expBool . OR and
    (190) expBool -> expBool . OR valoresBool

    )               reduce using rule 181 (valoresTernarioBool -> expBool .)
    :               reduce using rule 181 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 354
    OR              shift and go to state 171


state 416

    (106) campos -> ID : valores , . campos
    (106) campos -> . ID : valores , campos
    (107) campos -> . ID : valores

    ID              shift and go to state 189

    campos                         shift and go to state 453

state 417

    (175) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (189) expBool -> valoresBool . OR and
    (191) expBool -> valoresBool . OR valoresBool
    (126) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (194) and -> valoresBool . AND eq
    (196) and -> valoresBool . AND valoresBool

    ?               shift and go to state 360
    OR              shift and go to state 141
    AND             shift and go to state 140


state 418

    (172) valoresBool -> varsOps .
    (123) valoresMat -> varsOps .
    (208) tCompare -> varsOps .

    ?               reduce using rule 172 (valoresBool -> varsOps .)
    OR              reduce using rule 172 (valoresBool -> varsOps .)
    AND             reduce using rule 172 (valoresBool -> varsOps .)
    +               reduce using rule 123 (valoresMat -> varsOps .)
    -               reduce using rule 123 (valoresMat -> varsOps .)
    *               reduce using rule 123 (valoresMat -> varsOps .)
    /               reduce using rule 123 (valoresMat -> varsOps .)
    %               reduce using rule 123 (valoresMat -> varsOps .)
    ^               reduce using rule 123 (valoresMat -> varsOps .)
    EQEQ            reduce using rule 208 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 208 (tCompare -> varsOps .)
    >               reduce using rule 208 (tCompare -> varsOps .)
    <               reduce using rule 208 (tCompare -> varsOps .)


state 419

    (180) valoresTernarioBool -> ( . ternarioBool )
    (134) valoresTernarioMat -> ( . ternarioMat )
    (173) valoresBool -> ( . ternarioBool )
    (125) valoresMat -> ( . ternarioMat )
    (213) tCompare -> ( . ternarioBool )
    (214) tCompare -> ( . ternarioMat )
    (167) paren -> ( . eMat )
    (168) paren -> ( . valoresMat )
    (222) parenBool -> ( . expBool )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (50) funcBool -> . COLINEALES ( valores , valores )
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (55) vec -> . [ elem ]
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 154
    FLOAT           shift and go to state 155
    STRING          shift and go to state 152
    (               shift and go to state 150
    BOOL            shift and go to state 156
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    [               shift and go to state 20
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 146
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 147
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 149
    valoresBool                    shift and go to state 320
    ternarioMat                    shift and go to state 338
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    iSing                          shift and go to state 79
    ternarioBool                   shift and go to state 339
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 157
    exp                            shift and go to state 93
    varYVals                       shift and go to state 159
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 322

state 420

    (171) valoresBool -> varYVals .
    (122) valoresMat -> varYVals .
    (110) varsOps -> varYVals . MASMAS
    (111) varsOps -> varYVals . MENOSMENOS
    (209) tCompare -> varYVals .

    ?               reduce using rule 171 (valoresBool -> varYVals .)
    OR              reduce using rule 171 (valoresBool -> varYVals .)
    AND             reduce using rule 171 (valoresBool -> varYVals .)
    +               reduce using rule 122 (valoresMat -> varYVals .)
    -               reduce using rule 122 (valoresMat -> varYVals .)
    *               reduce using rule 122 (valoresMat -> varYVals .)
    /               reduce using rule 122 (valoresMat -> varYVals .)
    %               reduce using rule 122 (valoresMat -> varYVals .)
    ^               reduce using rule 122 (valoresMat -> varYVals .)
    MASMAS          shift and go to state 49
    MENOSMENOS      shift and go to state 46
    EQEQ            reduce using rule 209 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 209 (tCompare -> varYVals .)
    >               reduce using rule 209 (tCompare -> varYVals .)
    <               reduce using rule 209 (tCompare -> varYVals .)


state 421

    (181) valoresTernarioBool -> expBool .
    (176) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> expBool . OR and
    (190) expBool -> expBool . OR valoresBool
    (127) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat

    :               reduce using rule 181 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 362
    OR              shift and go to state 171


state 422

    (16) lCerrada -> IF ( cosaBooleana ) COMMENT com . lCerrada ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) COMMENT com . lCerrada ELSE lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com . lCerrada ELSE COMMENT com lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) sentencia -> . varsOps ;
    (28) sentencia -> . func ;
    (29) sentencia -> . varAsig ;
    (30) sentencia -> . RETURN ;
    (31) sentencia -> . ;
    (32) loop -> . WHILE ( valores )
    (33) loop -> . FOR ( primParam ; valores ; tercerParam )
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (42) func -> . funcReturn
    (43) func -> . funcVoid
    (113) varAsig -> . varYVals MULEQ valoresAsig
    (114) varAsig -> . varYVals DIVEQ valoresAsig
    (115) varAsig -> . varYVals MASEQ valoresAsig
    (116) varAsig -> . varYVals MENOSEQ valoresAsig
    (117) varAsig -> . varYVals = valoresAsig
    (118) varAsig -> . ID . ID = valoresAsig
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (51) funcVoid -> . PRINT ( valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (55) vec -> . [ elem ]

    IF              shift and go to state 35
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 454
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 38

state 423

    (14) lCerrada -> IF ( . cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( . cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( . cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (6) lAbierta -> IF ( . cosaBooleana ) linea
    (7) lAbierta -> IF ( . cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> IF ( . cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> IF ( . cosaBooleana ) { g }
    (34) cosaBooleana -> . expBool
    (35) cosaBooleana -> . valoresBool
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (50) funcBool -> . COLINEALES ( valores , valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (55) vec -> . [ elem ]
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (222) parenBool -> . ( expBool )
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )

    BOOL            shift and go to state 156
    (               shift and go to state 198
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    )               reduce using rule 174 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 152
    NOT             shift and go to state 92
    -               shift and go to state 73
    +               shift and go to state 72

    and                            shift and go to state 58
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 195
    menor                          shift and go to state 64
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 196
    eMat                           shift and go to state 197
    mayor                          shift and go to state 95
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    varsOps                        shift and go to state 202
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    cosaBooleana                   shift and go to state 455
    p                              shift and go to state 89
    exp                            shift and go to state 93
    varYVals                       shift and go to state 203
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 204

state 424

    (8) lAbierta -> IF ( cosaBooleana ) lCerrada ELSE . lAbierta
    (15) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . { g }
    (18) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . COMMENT com lCerrada
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (32) loop -> . WHILE ( valores )
    (33) loop -> . FOR ( primParam ; valores ; tercerParam )
    (27) sentencia -> . varsOps ;
    (28) sentencia -> . func ;
    (29) sentencia -> . varAsig ;
    (30) sentencia -> . RETURN ;
    (31) sentencia -> . ;
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (42) func -> . funcReturn
    (43) func -> . funcVoid
    (113) varAsig -> . varYVals MULEQ valoresAsig
    (114) varAsig -> . varYVals DIVEQ valoresAsig
    (115) varAsig -> . varYVals MASEQ valoresAsig
    (116) varAsig -> . varYVals MENOSEQ valoresAsig
    (117) varAsig -> . varYVals = valoresAsig
    (118) varAsig -> . ID . ID = valoresAsig
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (51) funcVoid -> . PRINT ( valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (55) vec -> . [ elem ]

    {               shift and go to state 459
    COMMENT         shift and go to state 456
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 457
    lAbierta                       shift and go to state 458
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 32

state 425

    (7) lAbierta -> IF ( cosaBooleana ) { g . } ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) { g . }
    (14) lCerrada -> IF ( cosaBooleana ) { g . } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g . } ELSE lCerrada

    }               shift and go to state 460


state 426

    (47) funcInt -> MULTIESCALAR ( valores , valores param . )

    )               shift and go to state 461


state 427

    (52) param -> , . valores
    (58) valores -> . eMat
    (59) valores -> . expBool
    (60) valores -> . funcReturn
    (61) valores -> . reg
    (62) valores -> . INT
    (63) valores -> . FLOAT
    (64) valores -> . STRING
    (65) valores -> . BOOL
    (66) valores -> . varYVals
    (67) valores -> . varsOps
    (68) valores -> . vec
    (69) valores -> . ternario
    (70) valores -> . atributos
    (71) valores -> . RES
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (105) reg -> . { campos }
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (55) vec -> . [ elem ]
    (182) ternario -> . ternarioMat
    (183) ternario -> . ternarioBool
    (184) ternario -> . ( ternarioMat )
    (185) ternario -> . ( ternarioBool )
    (186) ternario -> . ternarioVars
    (187) ternario -> . ( ternarioVars )
    (72) atributos -> . ID . valoresCampos
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 85
    FLOAT           shift and go to state 87
    STRING          shift and go to state 69
    BOOL            shift and go to state 90
    RES             shift and go to state 61
    {               shift and go to state 94
    ID              shift and go to state 84
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    [               shift and go to state 20
    (               shift and go to state 71
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    ?               reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    ternario                       shift and go to state 59
    funcBool                       shift and go to state 60
    funcInt                        shift and go to state 62
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 68
    eMat                           shift and go to state 70
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 74
    vec                            shift and go to state 75
    paren                          shift and go to state 82
    reg                            shift and go to state 76
    expBool                        shift and go to state 77
    ternarioBool                   shift and go to state 78
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 86
    valores                        shift and go to state 462
    p                              shift and go to state 89
    varsOps                        shift and go to state 91
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 65
    varYVals                       shift and go to state 96
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 97

state 428

    (53) param -> empty .

    )               reduce using rule 53 (param -> empty .)


state 429

    (15) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . { g }
    (18) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . COMMENT com lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) sentencia -> . varsOps ;
    (28) sentencia -> . func ;
    (29) sentencia -> . varAsig ;
    (30) sentencia -> . RETURN ;
    (31) sentencia -> . ;
    (32) loop -> . WHILE ( valores )
    (33) loop -> . FOR ( primParam ; valores ; tercerParam )
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (42) func -> . funcReturn
    (43) func -> . funcVoid
    (113) varAsig -> . varYVals MULEQ valoresAsig
    (114) varAsig -> . varYVals DIVEQ valoresAsig
    (115) varAsig -> . varYVals MASEQ valoresAsig
    (116) varAsig -> . varYVals MENOSEQ valoresAsig
    (117) varAsig -> . varYVals = valoresAsig
    (118) varAsig -> . ID . ID = valoresAsig
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (51) funcVoid -> . PRINT ( valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (55) vec -> . [ elem ]

    {               shift and go to state 459
    COMMENT         shift and go to state 456
    IF              shift and go to state 35
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 457
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 38

state 430

    (14) lCerrada -> IF ( cosaBooleana ) { g . } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g . } ELSE lCerrada

    }               shift and go to state 463


state 431

    (26) lCerrada -> DO lCerrada WHILE ( valores ) ; .

    WHILE           reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    COMMENT         reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    IF              reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    DO              reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    FOR             reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    RETURN          reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    ;               reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    MENOSMENOS      reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    MASMAS          reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    ID              reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    PRINT           reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    MULTIESCALAR    reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    LENGTH          reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    CAPITALIZAR     reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    COLINEALES      reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    [               reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    $end            reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    }               reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    ELSE            reduce using rule 26 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)


state 432

    (25) lCerrada -> DO { g } WHILE ( valores . ) ;

    )               shift and go to state 464


state 433

    (40) tercerParam -> func .

    )               reduce using rule 40 (tercerParam -> func .)


state 434

    (33) loop -> FOR ( primParam ; valores ; tercerParam . )

    )               shift and go to state 465


state 435

    (39) tercerParam -> varAsig .

    )               reduce using rule 39 (tercerParam -> varAsig .)


state 436

    (41) tercerParam -> empty .

    )               reduce using rule 41 (tercerParam -> empty .)


state 437

    (38) tercerParam -> varsOps .

    )               reduce using rule 38 (tercerParam -> varsOps .)


state 438

    (175) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (76) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (177) valoresTernarioBool -> . BOOL
    (178) valoresTernarioBool -> . funcBool
    (179) valoresTernarioBool -> . ternarioBool
    (180) valoresTernarioBool -> . ( ternarioBool )
    (181) valoresTernarioBool -> . expBool
    (86) valoresTernarioVars -> . varsOps
    (87) valoresTernarioVars -> . varYVals
    (88) valoresTernarioVars -> . reg
    (89) valoresTernarioVars -> . vec
    (90) valoresTernarioVars -> . ternarioVars
    (91) valoresTernarioVars -> . ( ternarioVars )
    (92) valoresTernarioVars -> . atributos
    (93) valoresTernarioVars -> . RES
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (105) reg -> . { campos }
    (55) vec -> . [ elem ]
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (72) atributos -> . ID . valoresCampos
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    BOOL            shift and go to state 262
    (               shift and go to state 469
    RES             shift and go to state 248
    INT             shift and go to state 260
    FLOAT           shift and go to state 261
    STRING          shift and go to state 257
    COLINEALES      shift and go to state 4
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 84
    {               shift and go to state 94
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 247
    funcInt                        shift and go to state 249
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 251
    valoresTernarioBool            shift and go to state 252
    valoresBool                    shift and go to state 466
    ternarioMat                    shift and go to state 253
    vec                            shift and go to state 254
    paren                          shift and go to state 82
    reg                            shift and go to state 255
    valoresTernarioVars            shift and go to state 256
    expBool                        shift and go to state 467
    ternarioBool                   shift and go to state 258
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    valoresTernarioMat             shift and go to state 468
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 389
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 265
    varYVals                       shift and go to state 391
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 246

state 439

    (176) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (81) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (177) valoresTernarioBool -> . BOOL
    (178) valoresTernarioBool -> . funcBool
    (179) valoresTernarioBool -> . ternarioBool
    (180) valoresTernarioBool -> . ( ternarioBool )
    (181) valoresTernarioBool -> . expBool
    (86) valoresTernarioVars -> . varsOps
    (87) valoresTernarioVars -> . varYVals
    (88) valoresTernarioVars -> . reg
    (89) valoresTernarioVars -> . vec
    (90) valoresTernarioVars -> . ternarioVars
    (91) valoresTernarioVars -> . ( ternarioVars )
    (92) valoresTernarioVars -> . atributos
    (93) valoresTernarioVars -> . RES
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (105) reg -> . { campos }
    (55) vec -> . [ elem ]
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (72) atributos -> . ID . valoresCampos
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    BOOL            shift and go to state 262
    (               shift and go to state 469
    RES             shift and go to state 248
    INT             shift and go to state 260
    FLOAT           shift and go to state 261
    STRING          shift and go to state 257
    COLINEALES      shift and go to state 4
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 84
    {               shift and go to state 94
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 247
    funcInt                        shift and go to state 249
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 466
    eMat                           shift and go to state 251
    valoresTernarioBool            shift and go to state 289
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 253
    vec                            shift and go to state 254
    paren                          shift and go to state 82
    reg                            shift and go to state 255
    valoresTernarioVars            shift and go to state 290
    expBool                        shift and go to state 467
    ternarioBool                   shift and go to state 258
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    valoresTernarioMat             shift and go to state 470
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 389
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 265
    varYVals                       shift and go to state 391
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 246

state 440

    (175) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (76) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (126) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (189) expBool -> valoresBool . OR and
    (191) expBool -> valoresBool . OR valoresBool
    (194) and -> valoresBool . AND eq
    (196) and -> valoresBool . AND valoresBool

    ?               shift and go to state 471
    OR              shift and go to state 141
    AND             shift and go to state 140


state 441

    (222) parenBool -> ( expBool . )
    (176) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (81) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (127) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (188) expBool -> expBool . OR and
    (190) expBool -> expBool . OR valoresBool

    )               shift and go to state 281
    ?               shift and go to state 472
    OR              shift and go to state 171


state 442

    (76) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (126) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (175) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (86) valoresTernarioVars -> . varsOps
    (87) valoresTernarioVars -> . varYVals
    (88) valoresTernarioVars -> . reg
    (89) valoresTernarioVars -> . vec
    (90) valoresTernarioVars -> . ternarioVars
    (91) valoresTernarioVars -> . ( ternarioVars )
    (92) valoresTernarioVars -> . atributos
    (93) valoresTernarioVars -> . RES
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (177) valoresTernarioBool -> . BOOL
    (178) valoresTernarioBool -> . funcBool
    (179) valoresTernarioBool -> . ternarioBool
    (180) valoresTernarioBool -> . ( ternarioBool )
    (181) valoresTernarioBool -> . expBool
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (105) reg -> . { campos }
    (55) vec -> . [ elem ]
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (72) atributos -> . ID . valoresCampos
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (50) funcBool -> . COLINEALES ( valores , valores )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    (               shift and go to state 390
    RES             shift and go to state 248
    INT             shift and go to state 260
    FLOAT           shift and go to state 261
    STRING          shift and go to state 257
    BOOL            shift and go to state 262
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 84
    {               shift and go to state 94
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    atributos                      shift and go to state 246
    funcBool                       shift and go to state 247
    funcInt                        shift and go to state 249
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 251
    valoresTernarioBool            shift and go to state 473
    valoresBool                    shift and go to state 384
    ternarioMat                    shift and go to state 253
    vec                            shift and go to state 254
    paren                          shift and go to state 82
    reg                            shift and go to state 255
    valoresTernarioVars            shift and go to state 256
    exp                            shift and go to state 93
    ternarioBool                   shift and go to state 258
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    valoresTernarioMat             shift and go to state 474
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 389
    ternarioVars                   shift and go to state 265
    varYVals                       shift and go to state 391
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 388

state 443

    (81) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (127) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (176) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (86) valoresTernarioVars -> . varsOps
    (87) valoresTernarioVars -> . varYVals
    (88) valoresTernarioVars -> . reg
    (89) valoresTernarioVars -> . vec
    (90) valoresTernarioVars -> . ternarioVars
    (91) valoresTernarioVars -> . ( ternarioVars )
    (92) valoresTernarioVars -> . atributos
    (93) valoresTernarioVars -> . RES
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (177) valoresTernarioBool -> . BOOL
    (178) valoresTernarioBool -> . funcBool
    (179) valoresTernarioBool -> . ternarioBool
    (180) valoresTernarioBool -> . ( ternarioBool )
    (181) valoresTernarioBool -> . expBool
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (105) reg -> . { campos }
    (55) vec -> . [ elem ]
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (72) atributos -> . ID . valoresCampos
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (50) funcBool -> . COLINEALES ( valores , valores )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    (               shift and go to state 390
    RES             shift and go to state 248
    INT             shift and go to state 260
    FLOAT           shift and go to state 261
    STRING          shift and go to state 257
    BOOL            shift and go to state 262
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 84
    {               shift and go to state 94
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 247
    funcInt                        shift and go to state 249
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 384
    eMat                           shift and go to state 251
    valoresTernarioBool            shift and go to state 475
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 253
    vec                            shift and go to state 254
    paren                          shift and go to state 82
    reg                            shift and go to state 255
    valoresTernarioVars            shift and go to state 290
    expBool                        shift and go to state 388
    ternarioBool                   shift and go to state 258
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    valoresTernarioMat             shift and go to state 476
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 389
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 265
    varYVals                       shift and go to state 391
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 246

state 444

    (222) parenBool -> ( expBool . )
    (81) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (127) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (176) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> expBool . OR and
    (190) expBool -> expBool . OR valoresBool

    )               shift and go to state 281
    ?               shift and go to state 443
    OR              shift and go to state 171


state 445

    (126) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (76) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (86) valoresTernarioVars -> . varsOps
    (87) valoresTernarioVars -> . varYVals
    (88) valoresTernarioVars -> . reg
    (89) valoresTernarioVars -> . vec
    (90) valoresTernarioVars -> . ternarioVars
    (91) valoresTernarioVars -> . ( ternarioVars )
    (92) valoresTernarioVars -> . atributos
    (93) valoresTernarioVars -> . RES
    (177) valoresTernarioBool -> . BOOL
    (178) valoresTernarioBool -> . funcBool
    (179) valoresTernarioBool -> . ternarioBool
    (180) valoresTernarioBool -> . ( ternarioBool )
    (181) valoresTernarioBool -> . expBool
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (105) reg -> . { campos }
    (55) vec -> . [ elem ]
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (72) atributos -> . ID . valoresCampos
    (50) funcBool -> . COLINEALES ( valores , valores )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 260
    FLOAT           shift and go to state 261
    STRING          shift and go to state 257
    (               shift and go to state 479
    RES             shift and go to state 248
    BOOL            shift and go to state 262
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 84
    {               shift and go to state 94
    [               shift and go to state 20
    COLINEALES      shift and go to state 4
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    atributos                      shift and go to state 246
    funcBool                       shift and go to state 247
    funcInt                        shift and go to state 249
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 251
    valoresTernarioBool            shift and go to state 477
    valoresBool                    shift and go to state 446
    ternarioMat                    shift and go to state 253
    vec                            shift and go to state 254
    paren                          shift and go to state 82
    reg                            shift and go to state 255
    valoresTernarioVars            shift and go to state 256
    exp                            shift and go to state 93
    ternarioBool                   shift and go to state 258
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    valoresTernarioMat             shift and go to state 259
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 263
    ternarioVars                   shift and go to state 265
    varYVals                       shift and go to state 266
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 478

state 446

    (126) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (76) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (175) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (189) expBool -> valoresBool . OR and
    (191) expBool -> valoresBool . OR valoresBool
    (194) and -> valoresBool . AND eq
    (196) and -> valoresBool . AND valoresBool

    ?               shift and go to state 480
    OR              shift and go to state 141
    AND             shift and go to state 140


state 447

    (222) parenBool -> ( expBool . )
    (127) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (81) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (176) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> expBool . OR and
    (190) expBool -> expBool . OR valoresBool

    )               shift and go to state 281
    ?               shift and go to state 481
    OR              shift and go to state 171


state 448

    (127) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (81) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (86) valoresTernarioVars -> . varsOps
    (87) valoresTernarioVars -> . varYVals
    (88) valoresTernarioVars -> . reg
    (89) valoresTernarioVars -> . vec
    (90) valoresTernarioVars -> . ternarioVars
    (91) valoresTernarioVars -> . ( ternarioVars )
    (92) valoresTernarioVars -> . atributos
    (93) valoresTernarioVars -> . RES
    (177) valoresTernarioBool -> . BOOL
    (178) valoresTernarioBool -> . funcBool
    (179) valoresTernarioBool -> . ternarioBool
    (180) valoresTernarioBool -> . ( ternarioBool )
    (181) valoresTernarioBool -> . expBool
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (105) reg -> . { campos }
    (55) vec -> . [ elem ]
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (72) atributos -> . ID . valoresCampos
    (50) funcBool -> . COLINEALES ( valores , valores )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 260
    FLOAT           shift and go to state 261
    STRING          shift and go to state 257
    (               shift and go to state 479
    RES             shift and go to state 248
    BOOL            shift and go to state 262
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 84
    {               shift and go to state 94
    [               shift and go to state 20
    COLINEALES      shift and go to state 4
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 247
    funcInt                        shift and go to state 249
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 446
    eMat                           shift and go to state 251
    valoresTernarioBool            shift and go to state 482
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 253
    vec                            shift and go to state 254
    paren                          shift and go to state 82
    reg                            shift and go to state 255
    valoresTernarioVars            shift and go to state 290
    expBool                        shift and go to state 478
    ternarioBool                   shift and go to state 258
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    valoresTernarioMat             shift and go to state 291
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 263
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 265
    varYVals                       shift and go to state 266
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 246

state 449

    (175) ternarioBool -> valoresBool ? valoresTernarioBool : . valoresTernarioBool
    (177) valoresTernarioBool -> . BOOL
    (178) valoresTernarioBool -> . funcBool
    (179) valoresTernarioBool -> . ternarioBool
    (180) valoresTernarioBool -> . ( ternarioBool )
    (181) valoresTernarioBool -> . expBool
    (50) funcBool -> . COLINEALES ( valores , valores )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (55) vec -> . [ elem ]
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (222) parenBool -> . ( expBool )
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )

    BOOL            shift and go to state 262
    (               shift and go to state 414
    COLINEALES      shift and go to state 4
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 152
    NOT             shift and go to state 92
    -               shift and go to state 73
    +               shift and go to state 72

    and                            shift and go to state 58
    funcBool                       shift and go to state 247
    funcInt                        shift and go to state 195
    menor                          shift and go to state 64
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 309
    eMat                           shift and go to state 197
    valoresTernarioBool            shift and go to state 378
    mayor                          shift and go to state 95
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    iSing                          shift and go to state 79
    ternarioBool                   shift and go to state 258
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 202
    exp                            shift and go to state 93
    varYVals                       shift and go to state 203
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 415

state 450

    (126) ternarioMat -> valoresBool ? valoresTernarioMat : . valoresTernarioMat
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (50) funcBool -> . COLINEALES ( valores , valores )
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (55) vec -> . [ elem ]
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 260
    FLOAT           shift and go to state 261
    STRING          shift and go to state 257
    (               shift and go to state 406
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    BOOL            shift and go to state 156
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    [               shift and go to state 20
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 249
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 251
    valoresBool                    shift and go to state 282
    ternarioMat                    shift and go to state 253
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    valoresTernarioMat             shift and go to state 395
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 157
    exp                            shift and go to state 93
    varYVals                       shift and go to state 159
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 286

state 451

    (176) ternarioBool -> expBool ? valoresTernarioBool : . valoresTernarioBool
    (177) valoresTernarioBool -> . BOOL
    (178) valoresTernarioBool -> . funcBool
    (179) valoresTernarioBool -> . ternarioBool
    (180) valoresTernarioBool -> . ( ternarioBool )
    (181) valoresTernarioBool -> . expBool
    (50) funcBool -> . COLINEALES ( valores , valores )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (55) vec -> . [ elem ]
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (222) parenBool -> . ( expBool )
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )

    BOOL            shift and go to state 262
    (               shift and go to state 414
    COLINEALES      shift and go to state 4
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 152
    NOT             shift and go to state 92
    -               shift and go to state 73
    +               shift and go to state 72

    and                            shift and go to state 58
    funcBool                       shift and go to state 247
    funcInt                        shift and go to state 195
    menor                          shift and go to state 64
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 309
    eMat                           shift and go to state 197
    valoresTernarioBool            shift and go to state 407
    mayor                          shift and go to state 95
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    iSing                          shift and go to state 79
    ternarioBool                   shift and go to state 258
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 202
    exp                            shift and go to state 93
    varYVals                       shift and go to state 203
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 415

state 452

    (127) ternarioMat -> expBool ? valoresTernarioMat : . valoresTernarioMat
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (50) funcBool -> . COLINEALES ( valores , valores )
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (55) vec -> . [ elem ]
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 260
    FLOAT           shift and go to state 261
    STRING          shift and go to state 257
    (               shift and go to state 406
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    BOOL            shift and go to state 156
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    [               shift and go to state 20
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 249
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 251
    valoresBool                    shift and go to state 282
    ternarioMat                    shift and go to state 253
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    valoresTernarioMat             shift and go to state 412
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 157
    exp                            shift and go to state 93
    varYVals                       shift and go to state 159
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 286

state 453

    (106) campos -> ID : valores , campos .

    }               reduce using rule 106 (campos -> ID : valores , campos .)


state 454

    (16) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada . ELSE { g }
    (19) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada . ELSE lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada . ELSE COMMENT com lCerrada

    ELSE            shift and go to state 483


state 455

    (14) lCerrada -> IF ( cosaBooleana . ) { g } ELSE { g }
    (15) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE { g }
    (16) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana . ) { g } ELSE lCerrada
    (18) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( cosaBooleana . ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (6) lAbierta -> IF ( cosaBooleana . ) linea
    (7) lAbierta -> IF ( cosaBooleana . ) { g } ELSE lAbierta
    (8) lAbierta -> IF ( cosaBooleana . ) lCerrada ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana . ) { g }

    )               shift and go to state 484


state 456

    (20) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT . com lCerrada
    (12) com -> . COMMENT com
    (13) com -> . empty
    (54) empty -> .

    COMMENT         shift and go to state 207
    IF              reduce using rule 54 (empty -> .)
    DO              reduce using rule 54 (empty -> .)
    RETURN          reduce using rule 54 (empty -> .)
    ;               reduce using rule 54 (empty -> .)
    WHILE           reduce using rule 54 (empty -> .)
    FOR             reduce using rule 54 (empty -> .)
    MENOSMENOS      reduce using rule 54 (empty -> .)
    MASMAS          reduce using rule 54 (empty -> .)
    ID              reduce using rule 54 (empty -> .)
    PRINT           reduce using rule 54 (empty -> .)
    MULTIESCALAR    reduce using rule 54 (empty -> .)
    LENGTH          reduce using rule 54 (empty -> .)
    CAPITALIZAR     reduce using rule 54 (empty -> .)
    COLINEALES      reduce using rule 54 (empty -> .)
    [               reduce using rule 54 (empty -> .)

    com                            shift and go to state 485
    empty                          shift and go to state 209

state 457

    (18) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .

    WHILE           reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    COMMENT         reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    IF              reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    DO              reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    FOR             reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    RETURN          reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    ;               reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    MENOSMENOS      reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    MASMAS          reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    ID              reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    PRINT           reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    MULTIESCALAR    reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    LENGTH          reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    CAPITALIZAR     reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    COLINEALES      reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    [               reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    $end            reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    }               reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    ELSE            reduce using rule 18 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)


state 458

    (8) lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .

    COMMENT         reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    IF              reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    DO              reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    WHILE           reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    FOR             reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    RETURN          reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    ;               reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    MENOSMENOS      reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    MASMAS          reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    ID              reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    PRINT           reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    MULTIESCALAR    reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    LENGTH          reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    CAPITALIZAR     reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    COLINEALES      reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    [               reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    $end            reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    }               reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)


state 459

    (15) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { . g }
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (54) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (32) loop -> . WHILE ( valores )
    (33) loop -> . FOR ( primParam ; valores ; tercerParam )
    (27) sentencia -> . varsOps ;
    (28) sentencia -> . func ;
    (29) sentencia -> . varAsig ;
    (30) sentencia -> . RETURN ;
    (31) sentencia -> . ;
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (42) func -> . funcReturn
    (43) func -> . funcVoid
    (113) varAsig -> . varYVals MULEQ valoresAsig
    (114) varAsig -> . varYVals DIVEQ valoresAsig
    (115) varAsig -> . varYVals MASEQ valoresAsig
    (116) varAsig -> . varYVals MENOSEQ valoresAsig
    (117) varAsig -> . varYVals = valoresAsig
    (118) varAsig -> . ID . ID = valoresAsig
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (51) funcVoid -> . PRINT ( valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (55) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 54 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 13
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 486
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 29
    lAbierta                       shift and go to state 30
    loop                           shift and go to state 32
    varYVals                       shift and go to state 11
    linea                          shift and go to state 34

state 460

    (7) lAbierta -> IF ( cosaBooleana ) { g } . ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) { g } .
    (14) lCerrada -> IF ( cosaBooleana ) { g } . ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g } . ELSE lCerrada

    ELSE            shift and go to state 487
    COMMENT         reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    IF              reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    DO              reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    WHILE           reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    FOR             reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    RETURN          reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    ;               reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MENOSMENOS      reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MASMAS          reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    ID              reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    PRINT           reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MULTIESCALAR    reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    LENGTH          reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    CAPITALIZAR     reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    COLINEALES      reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    [               reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    $end            reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    }               reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)


state 461

    (47) funcInt -> MULTIESCALAR ( valores , valores param ) .

    ,               reduce using rule 47 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ]               reduce using rule 47 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    )               reduce using rule 47 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ;               reduce using rule 47 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    :               reduce using rule 47 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    }               reduce using rule 47 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    +               reduce using rule 47 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    -               reduce using rule 47 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    *               reduce using rule 47 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    /               reduce using rule 47 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    %               reduce using rule 47 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ^               reduce using rule 47 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    EQEQ            reduce using rule 47 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    DISTINTO        reduce using rule 47 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    >               reduce using rule 47 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    <               reduce using rule 47 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    AND             reduce using rule 47 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    OR              reduce using rule 47 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ?               reduce using rule 47 (funcInt -> MULTIESCALAR ( valores , valores param ) .)


state 462

    (52) param -> , valores .

    )               reduce using rule 52 (param -> , valores .)


state 463

    (14) lCerrada -> IF ( cosaBooleana ) { g } . ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g } . ELSE lCerrada

    ELSE            shift and go to state 488


state 464

    (25) lCerrada -> DO { g } WHILE ( valores ) . ;

    ;               shift and go to state 489


state 465

    (33) loop -> FOR ( primParam ; valores ; tercerParam ) .

    {               reduce using rule 33 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    COMMENT         reduce using rule 33 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    IF              reduce using rule 33 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    DO              reduce using rule 33 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    RETURN          reduce using rule 33 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    ;               reduce using rule 33 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    WHILE           reduce using rule 33 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    FOR             reduce using rule 33 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    MENOSMENOS      reduce using rule 33 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    MASMAS          reduce using rule 33 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    ID              reduce using rule 33 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    PRINT           reduce using rule 33 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    MULTIESCALAR    reduce using rule 33 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    LENGTH          reduce using rule 33 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    CAPITALIZAR     reduce using rule 33 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    COLINEALES      reduce using rule 33 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    [               reduce using rule 33 (loop -> FOR ( primParam ; valores ; tercerParam ) .)


state 466

    (175) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (189) expBool -> valoresBool . OR and
    (191) expBool -> valoresBool . OR valoresBool
    (76) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (126) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (194) and -> valoresBool . AND eq
    (196) and -> valoresBool . AND valoresBool

    ?               shift and go to state 471
    OR              shift and go to state 141
    AND             shift and go to state 140


state 467

    (181) valoresTernarioBool -> expBool .
    (176) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> expBool . OR and
    (190) expBool -> expBool . OR valoresBool
    (81) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (127) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat

    :               reduce using rule 181 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 472
    OR              shift and go to state 171


state 468

    (78) ternarioVars -> valoresBool ? valoresTernarioMat . : valoresTernarioVars

    :               shift and go to state 490


state 469

    (180) valoresTernarioBool -> ( . ternarioBool )
    (91) valoresTernarioVars -> ( . ternarioVars )
    (134) valoresTernarioMat -> ( . ternarioMat )
    (173) valoresBool -> ( . ternarioBool )
    (125) valoresMat -> ( . ternarioMat )
    (213) tCompare -> ( . ternarioBool )
    (214) tCompare -> ( . ternarioMat )
    (167) paren -> ( . eMat )
    (168) paren -> ( . valoresMat )
    (222) parenBool -> ( . expBool )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (50) funcBool -> . COLINEALES ( valores , valores )
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (55) vec -> . [ elem ]
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 154
    FLOAT           shift and go to state 155
    STRING          shift and go to state 152
    (               shift and go to state 150
    BOOL            shift and go to state 156
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    [               shift and go to state 20
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 146
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 147
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 149
    valoresBool                    shift and go to state 440
    ternarioMat                    shift and go to state 338
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    varsOps                        shift and go to state 157
    ternarioBool                   shift and go to state 339
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    p                              shift and go to state 89
    iSing                          shift and go to state 79
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 340
    varYVals                       shift and go to state 159
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 441

state 470

    (83) ternarioVars -> expBool ? valoresTernarioMat . : valoresTernarioVars

    :               shift and go to state 491


state 471

    (175) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (76) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (126) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (177) valoresTernarioBool -> . BOOL
    (178) valoresTernarioBool -> . funcBool
    (179) valoresTernarioBool -> . ternarioBool
    (180) valoresTernarioBool -> . ( ternarioBool )
    (181) valoresTernarioBool -> . expBool
    (86) valoresTernarioVars -> . varsOps
    (87) valoresTernarioVars -> . varYVals
    (88) valoresTernarioVars -> . reg
    (89) valoresTernarioVars -> . vec
    (90) valoresTernarioVars -> . ternarioVars
    (91) valoresTernarioVars -> . ( ternarioVars )
    (92) valoresTernarioVars -> . atributos
    (93) valoresTernarioVars -> . RES
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (105) reg -> . { campos }
    (55) vec -> . [ elem ]
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (72) atributos -> . ID . valoresCampos
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    BOOL            shift and go to state 262
    (               shift and go to state 469
    RES             shift and go to state 248
    INT             shift and go to state 260
    FLOAT           shift and go to state 261
    STRING          shift and go to state 257
    COLINEALES      shift and go to state 4
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 84
    {               shift and go to state 94
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 247
    funcInt                        shift and go to state 249
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 251
    valoresTernarioBool            shift and go to state 252
    valoresBool                    shift and go to state 466
    ternarioMat                    shift and go to state 253
    vec                            shift and go to state 254
    paren                          shift and go to state 82
    reg                            shift and go to state 255
    valoresTernarioVars            shift and go to state 256
    expBool                        shift and go to state 467
    ternarioBool                   shift and go to state 258
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    valoresTernarioMat             shift and go to state 474
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 389
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 265
    varYVals                       shift and go to state 391
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 246

state 472

    (176) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (81) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (127) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (177) valoresTernarioBool -> . BOOL
    (178) valoresTernarioBool -> . funcBool
    (179) valoresTernarioBool -> . ternarioBool
    (180) valoresTernarioBool -> . ( ternarioBool )
    (181) valoresTernarioBool -> . expBool
    (86) valoresTernarioVars -> . varsOps
    (87) valoresTernarioVars -> . varYVals
    (88) valoresTernarioVars -> . reg
    (89) valoresTernarioVars -> . vec
    (90) valoresTernarioVars -> . ternarioVars
    (91) valoresTernarioVars -> . ( ternarioVars )
    (92) valoresTernarioVars -> . atributos
    (93) valoresTernarioVars -> . RES
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (105) reg -> . { campos }
    (55) vec -> . [ elem ]
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (72) atributos -> . ID . valoresCampos
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    BOOL            shift and go to state 262
    (               shift and go to state 469
    RES             shift and go to state 248
    INT             shift and go to state 260
    FLOAT           shift and go to state 261
    STRING          shift and go to state 257
    COLINEALES      shift and go to state 4
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 84
    {               shift and go to state 94
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 247
    funcInt                        shift and go to state 249
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 466
    eMat                           shift and go to state 251
    valoresTernarioBool            shift and go to state 289
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 253
    vec                            shift and go to state 254
    paren                          shift and go to state 82
    reg                            shift and go to state 255
    valoresTernarioVars            shift and go to state 290
    expBool                        shift and go to state 467
    ternarioBool                   shift and go to state 258
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    valoresTernarioMat             shift and go to state 476
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 389
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 265
    varYVals                       shift and go to state 391
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 246

state 473

    (80) ternarioVars -> valoresBool ? valoresTernarioBool . : valoresTernarioVars
    (175) ternarioBool -> valoresBool ? valoresTernarioBool . : valoresTernarioBool

    :               shift and go to state 492


state 474

    (78) ternarioVars -> valoresBool ? valoresTernarioMat . : valoresTernarioVars
    (126) ternarioMat -> valoresBool ? valoresTernarioMat . : valoresTernarioMat

    :               shift and go to state 493


state 475

    (85) ternarioVars -> expBool ? valoresTernarioBool . : valoresTernarioVars
    (176) ternarioBool -> expBool ? valoresTernarioBool . : valoresTernarioBool

    :               shift and go to state 494


state 476

    (83) ternarioVars -> expBool ? valoresTernarioMat . : valoresTernarioVars
    (127) ternarioMat -> expBool ? valoresTernarioMat . : valoresTernarioMat

    :               shift and go to state 495


state 477

    (80) ternarioVars -> valoresBool ? valoresTernarioBool . : valoresTernarioVars

    :               shift and go to state 496


state 478

    (181) valoresTernarioBool -> expBool .
    (127) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (81) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (176) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> expBool . OR and
    (190) expBool -> expBool . OR valoresBool

    :               reduce using rule 181 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 481
    OR              shift and go to state 171


state 479

    (134) valoresTernarioMat -> ( . ternarioMat )
    (91) valoresTernarioVars -> ( . ternarioVars )
    (180) valoresTernarioBool -> ( . ternarioBool )
    (125) valoresMat -> ( . ternarioMat )
    (173) valoresBool -> ( . ternarioBool )
    (213) tCompare -> ( . ternarioBool )
    (214) tCompare -> ( . ternarioMat )
    (167) paren -> ( . eMat )
    (168) paren -> ( . valoresMat )
    (222) parenBool -> ( . expBool )
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (50) funcBool -> . COLINEALES ( valores , valores )
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (55) vec -> . [ elem ]
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 154
    FLOAT           shift and go to state 155
    STRING          shift and go to state 152
    (               shift and go to state 150
    BOOL            shift and go to state 156
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    [               shift and go to state 20
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 146
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 147
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 149
    valoresBool                    shift and go to state 446
    ternarioMat                    shift and go to state 338
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    varsOps                        shift and go to state 157
    ternarioBool                   shift and go to state 339
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    p                              shift and go to state 89
    iSing                          shift and go to state 79
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 340
    varYVals                       shift and go to state 159
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 447

state 480

    (126) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (76) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (175) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (86) valoresTernarioVars -> . varsOps
    (87) valoresTernarioVars -> . varYVals
    (88) valoresTernarioVars -> . reg
    (89) valoresTernarioVars -> . vec
    (90) valoresTernarioVars -> . ternarioVars
    (91) valoresTernarioVars -> . ( ternarioVars )
    (92) valoresTernarioVars -> . atributos
    (93) valoresTernarioVars -> . RES
    (177) valoresTernarioBool -> . BOOL
    (178) valoresTernarioBool -> . funcBool
    (179) valoresTernarioBool -> . ternarioBool
    (180) valoresTernarioBool -> . ( ternarioBool )
    (181) valoresTernarioBool -> . expBool
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (105) reg -> . { campos }
    (55) vec -> . [ elem ]
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (72) atributos -> . ID . valoresCampos
    (50) funcBool -> . COLINEALES ( valores , valores )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 260
    FLOAT           shift and go to state 261
    STRING          shift and go to state 257
    (               shift and go to state 479
    RES             shift and go to state 248
    BOOL            shift and go to state 262
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 84
    {               shift and go to state 94
    [               shift and go to state 20
    COLINEALES      shift and go to state 4
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    atributos                      shift and go to state 246
    funcBool                       shift and go to state 247
    funcInt                        shift and go to state 249
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 251
    valoresTernarioBool            shift and go to state 473
    valoresBool                    shift and go to state 446
    ternarioMat                    shift and go to state 253
    vec                            shift and go to state 254
    paren                          shift and go to state 82
    reg                            shift and go to state 255
    valoresTernarioVars            shift and go to state 256
    exp                            shift and go to state 93
    ternarioBool                   shift and go to state 258
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    valoresTernarioMat             shift and go to state 259
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 263
    ternarioVars                   shift and go to state 265
    varYVals                       shift and go to state 266
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 478

state 481

    (127) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (81) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (176) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (86) valoresTernarioVars -> . varsOps
    (87) valoresTernarioVars -> . varYVals
    (88) valoresTernarioVars -> . reg
    (89) valoresTernarioVars -> . vec
    (90) valoresTernarioVars -> . ternarioVars
    (91) valoresTernarioVars -> . ( ternarioVars )
    (92) valoresTernarioVars -> . atributos
    (93) valoresTernarioVars -> . RES
    (177) valoresTernarioBool -> . BOOL
    (178) valoresTernarioBool -> . funcBool
    (179) valoresTernarioBool -> . ternarioBool
    (180) valoresTernarioBool -> . ( ternarioBool )
    (181) valoresTernarioBool -> . expBool
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (105) reg -> . { campos }
    (55) vec -> . [ elem ]
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (72) atributos -> . ID . valoresCampos
    (50) funcBool -> . COLINEALES ( valores , valores )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 260
    FLOAT           shift and go to state 261
    STRING          shift and go to state 257
    (               shift and go to state 479
    RES             shift and go to state 248
    BOOL            shift and go to state 262
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 84
    {               shift and go to state 94
    [               shift and go to state 20
    COLINEALES      shift and go to state 4
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 247
    funcInt                        shift and go to state 249
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 446
    eMat                           shift and go to state 251
    valoresTernarioBool            shift and go to state 475
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 253
    vec                            shift and go to state 254
    paren                          shift and go to state 82
    reg                            shift and go to state 255
    valoresTernarioVars            shift and go to state 290
    expBool                        shift and go to state 478
    ternarioBool                   shift and go to state 258
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    valoresTernarioMat             shift and go to state 291
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 263
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 265
    varYVals                       shift and go to state 266
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 246

state 482

    (85) ternarioVars -> expBool ? valoresTernarioBool . : valoresTernarioVars

    :               shift and go to state 497


state 483

    (16) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE . { g }
    (19) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE . lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE . COMMENT com lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) sentencia -> . varsOps ;
    (28) sentencia -> . func ;
    (29) sentencia -> . varAsig ;
    (30) sentencia -> . RETURN ;
    (31) sentencia -> . ;
    (32) loop -> . WHILE ( valores )
    (33) loop -> . FOR ( primParam ; valores ; tercerParam )
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (42) func -> . funcReturn
    (43) func -> . funcVoid
    (113) varAsig -> . varYVals MULEQ valoresAsig
    (114) varAsig -> . varYVals DIVEQ valoresAsig
    (115) varAsig -> . varYVals MASEQ valoresAsig
    (116) varAsig -> . varYVals MENOSEQ valoresAsig
    (117) varAsig -> . varYVals = valoresAsig
    (118) varAsig -> . ID . ID = valoresAsig
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (51) funcVoid -> . PRINT ( valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (55) vec -> . [ elem ]

    {               shift and go to state 500
    COMMENT         shift and go to state 498
    IF              shift and go to state 35
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 499
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 38

state 484

    (14) lCerrada -> IF ( cosaBooleana ) . { g } ELSE { g }
    (15) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE { g }
    (16) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) . { g } ELSE lCerrada
    (18) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE lCerrada
    (19) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> IF ( cosaBooleana ) . COMMENT com lCerrada ELSE COMMENT com lCerrada
    (6) lAbierta -> IF ( cosaBooleana ) . linea
    (7) lAbierta -> IF ( cosaBooleana ) . { g } ELSE lAbierta
    (8) lAbierta -> IF ( cosaBooleana ) . lCerrada ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) . { g }
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (27) sentencia -> . varsOps ;
    (28) sentencia -> . func ;
    (29) sentencia -> . varAsig ;
    (30) sentencia -> . RETURN ;
    (31) sentencia -> . ;
    (32) loop -> . WHILE ( valores )
    (33) loop -> . FOR ( primParam ; valores ; tercerParam )
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (42) func -> . funcReturn
    (43) func -> . funcVoid
    (113) varAsig -> . varYVals MULEQ valoresAsig
    (114) varAsig -> . varYVals DIVEQ valoresAsig
    (115) varAsig -> . varYVals MASEQ valoresAsig
    (116) varAsig -> . varYVals MENOSEQ valoresAsig
    (117) varAsig -> . varYVals = valoresAsig
    (118) varAsig -> . ID . ID = valoresAsig
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (51) funcVoid -> . PRINT ( valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (55) vec -> . [ elem ]

    {               shift and go to state 502
    COMMENT         shift and go to state 364
    IF              shift and go to state 365
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 501
    lAbierta                       shift and go to state 30
    linea                          shift and go to state 363
    varYVals                       shift and go to state 11
    loop                           shift and go to state 368

state 485

    (20) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com . lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) sentencia -> . varsOps ;
    (28) sentencia -> . func ;
    (29) sentencia -> . varAsig ;
    (30) sentencia -> . RETURN ;
    (31) sentencia -> . ;
    (32) loop -> . WHILE ( valores )
    (33) loop -> . FOR ( primParam ; valores ; tercerParam )
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (42) func -> . funcReturn
    (43) func -> . funcVoid
    (113) varAsig -> . varYVals MULEQ valoresAsig
    (114) varAsig -> . varYVals DIVEQ valoresAsig
    (115) varAsig -> . varYVals MASEQ valoresAsig
    (116) varAsig -> . varYVals MENOSEQ valoresAsig
    (117) varAsig -> . varYVals = valoresAsig
    (118) varAsig -> . ID . ID = valoresAsig
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (51) funcVoid -> . PRINT ( valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (55) vec -> . [ elem ]

    IF              shift and go to state 35
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 503
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 38

state 486

    (15) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g . }

    }               shift and go to state 504


state 487

    (7) lAbierta -> IF ( cosaBooleana ) { g } ELSE . lAbierta
    (14) lCerrada -> IF ( cosaBooleana ) { g } ELSE . { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g } ELSE . lCerrada
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (32) loop -> . WHILE ( valores )
    (33) loop -> . FOR ( primParam ; valores ; tercerParam )
    (27) sentencia -> . varsOps ;
    (28) sentencia -> . func ;
    (29) sentencia -> . varAsig ;
    (30) sentencia -> . RETURN ;
    (31) sentencia -> . ;
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (42) func -> . funcReturn
    (43) func -> . funcVoid
    (113) varAsig -> . varYVals MULEQ valoresAsig
    (114) varAsig -> . varYVals DIVEQ valoresAsig
    (115) varAsig -> . varYVals MASEQ valoresAsig
    (116) varAsig -> . varYVals MENOSEQ valoresAsig
    (117) varAsig -> . varYVals = valoresAsig
    (118) varAsig -> . ID . ID = valoresAsig
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (51) funcVoid -> . PRINT ( valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (55) vec -> . [ elem ]

    {               shift and go to state 507
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 505
    lAbierta                       shift and go to state 506
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 32

state 488

    (14) lCerrada -> IF ( cosaBooleana ) { g } ELSE . { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g } ELSE . lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) sentencia -> . varsOps ;
    (28) sentencia -> . func ;
    (29) sentencia -> . varAsig ;
    (30) sentencia -> . RETURN ;
    (31) sentencia -> . ;
    (32) loop -> . WHILE ( valores )
    (33) loop -> . FOR ( primParam ; valores ; tercerParam )
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (42) func -> . funcReturn
    (43) func -> . funcVoid
    (113) varAsig -> . varYVals MULEQ valoresAsig
    (114) varAsig -> . varYVals DIVEQ valoresAsig
    (115) varAsig -> . varYVals MASEQ valoresAsig
    (116) varAsig -> . varYVals MENOSEQ valoresAsig
    (117) varAsig -> . varYVals = valoresAsig
    (118) varAsig -> . ID . ID = valoresAsig
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (51) funcVoid -> . PRINT ( valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (55) vec -> . [ elem ]

    {               shift and go to state 507
    IF              shift and go to state 35
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 505
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 38

state 489

    (25) lCerrada -> DO { g } WHILE ( valores ) ; .

    WHILE           reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    COMMENT         reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    IF              reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    DO              reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    FOR             reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    RETURN          reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    ;               reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    MENOSMENOS      reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    MASMAS          reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    ID              reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    PRINT           reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    MULTIESCALAR    reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    LENGTH          reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    CAPITALIZAR     reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    COLINEALES      reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    [               reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    $end            reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    }               reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    ELSE            reduce using rule 25 (lCerrada -> DO { g } WHILE ( valores ) ; .)


state 490

    (78) ternarioVars -> valoresBool ? valoresTernarioMat : . valoresTernarioVars
    (86) valoresTernarioVars -> . varsOps
    (87) valoresTernarioVars -> . varYVals
    (88) valoresTernarioVars -> . reg
    (89) valoresTernarioVars -> . vec
    (90) valoresTernarioVars -> . ternarioVars
    (91) valoresTernarioVars -> . ( ternarioVars )
    (92) valoresTernarioVars -> . atributos
    (93) valoresTernarioVars -> . RES
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (105) reg -> . { campos }
    (55) vec -> . [ elem ]
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (72) atributos -> . ID . valoresCampos
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (50) funcBool -> . COLINEALES ( valores , valores )
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (222) parenBool -> . ( expBool )
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )

    (               shift and go to state 509
    RES             shift and go to state 248
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 84
    {               shift and go to state 94
    [               shift and go to state 20
    BOOL            shift and go to state 156
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 152
    NOT             shift and go to state 92
    -               shift and go to state 73
    +               shift and go to state 72

    and                            shift and go to state 58
    atributos                      shift and go to state 246
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 195
    menor                          shift and go to state 64
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 508
    eMat                           shift and go to state 197
    vecVal                         shift and go to state 8
    vec                            shift and go to state 254
    paren                          shift and go to state 82
    reg                            shift and go to state 255
    valoresTernarioVars            shift and go to state 394
    exp                            shift and go to state 93
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    varYVals                       shift and go to state 383
    p                              shift and go to state 89
    varsOps                        shift and go to state 381
    ternarioVars                   shift and go to state 265
    mayor                          shift and go to state 95
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 510

state 491

    (83) ternarioVars -> expBool ? valoresTernarioMat : . valoresTernarioVars
    (86) valoresTernarioVars -> . varsOps
    (87) valoresTernarioVars -> . varYVals
    (88) valoresTernarioVars -> . reg
    (89) valoresTernarioVars -> . vec
    (90) valoresTernarioVars -> . ternarioVars
    (91) valoresTernarioVars -> . ( ternarioVars )
    (92) valoresTernarioVars -> . atributos
    (93) valoresTernarioVars -> . RES
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (105) reg -> . { campos }
    (55) vec -> . [ elem ]
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (72) atributos -> . ID . valoresCampos
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (50) funcBool -> . COLINEALES ( valores , valores )
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (222) parenBool -> . ( expBool )
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )

    (               shift and go to state 509
    RES             shift and go to state 248
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 84
    {               shift and go to state 94
    [               shift and go to state 20
    BOOL            shift and go to state 156
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 152
    NOT             shift and go to state 92
    -               shift and go to state 73
    +               shift and go to state 72

    and                            shift and go to state 58
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 195
    menor                          shift and go to state 64
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 508
    eMat                           shift and go to state 197
    vecVal                         shift and go to state 8
    vec                            shift and go to state 254
    paren                          shift and go to state 82
    reg                            shift and go to state 255
    valoresTernarioVars            shift and go to state 413
    expBool                        shift and go to state 510
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    varYVals                       shift and go to state 383
    p                              shift and go to state 89
    varsOps                        shift and go to state 381
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 265
    mayor                          shift and go to state 95
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 246

state 492

    (80) ternarioVars -> valoresBool ? valoresTernarioBool : . valoresTernarioVars
    (175) ternarioBool -> valoresBool ? valoresTernarioBool : . valoresTernarioBool
    (86) valoresTernarioVars -> . varsOps
    (87) valoresTernarioVars -> . varYVals
    (88) valoresTernarioVars -> . reg
    (89) valoresTernarioVars -> . vec
    (90) valoresTernarioVars -> . ternarioVars
    (91) valoresTernarioVars -> . ( ternarioVars )
    (92) valoresTernarioVars -> . atributos
    (93) valoresTernarioVars -> . RES
    (177) valoresTernarioBool -> . BOOL
    (178) valoresTernarioBool -> . funcBool
    (179) valoresTernarioBool -> . ternarioBool
    (180) valoresTernarioBool -> . ( ternarioBool )
    (181) valoresTernarioBool -> . expBool
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (105) reg -> . { campos }
    (55) vec -> . [ elem ]
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (72) atributos -> . ID . valoresCampos
    (50) funcBool -> . COLINEALES ( valores , valores )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (222) parenBool -> . ( expBool )
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )

    (               shift and go to state 513
    RES             shift and go to state 248
    BOOL            shift and go to state 262
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 84
    {               shift and go to state 94
    [               shift and go to state 20
    COLINEALES      shift and go to state 4
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 152
    NOT             shift and go to state 92
    -               shift and go to state 73
    +               shift and go to state 72

    and                            shift and go to state 58
    atributos                      shift and go to state 246
    funcBool                       shift and go to state 247
    funcInt                        shift and go to state 195
    menor                          shift and go to state 64
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 511
    eMat                           shift and go to state 197
    valoresTernarioBool            shift and go to state 378
    mayor                          shift and go to state 95
    vec                            shift and go to state 254
    paren                          shift and go to state 82
    reg                            shift and go to state 255
    valoresTernarioVars            shift and go to state 379
    exp                            shift and go to state 93
    ternarioBool                   shift and go to state 258
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 381
    ternarioVars                   shift and go to state 265
    varYVals                       shift and go to state 383
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 512

state 493

    (78) ternarioVars -> valoresBool ? valoresTernarioMat : . valoresTernarioVars
    (126) ternarioMat -> valoresBool ? valoresTernarioMat : . valoresTernarioMat
    (86) valoresTernarioVars -> . varsOps
    (87) valoresTernarioVars -> . varYVals
    (88) valoresTernarioVars -> . reg
    (89) valoresTernarioVars -> . vec
    (90) valoresTernarioVars -> . ternarioVars
    (91) valoresTernarioVars -> . ( ternarioVars )
    (92) valoresTernarioVars -> . atributos
    (93) valoresTernarioVars -> . RES
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (105) reg -> . { campos }
    (55) vec -> . [ elem ]
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (72) atributos -> . ID . valoresCampos
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (50) funcBool -> . COLINEALES ( valores , valores )
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    (               shift and go to state 515
    RES             shift and go to state 248
    INT             shift and go to state 260
    FLOAT           shift and go to state 261
    STRING          shift and go to state 257
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 84
    {               shift and go to state 94
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    BOOL            shift and go to state 156
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    atributos                      shift and go to state 246
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 249
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 514
    eMat                           shift and go to state 251
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 253
    vec                            shift and go to state 254
    paren                          shift and go to state 82
    reg                            shift and go to state 255
    valoresTernarioVars            shift and go to state 394
    exp                            shift and go to state 93
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    valoresTernarioMat             shift and go to state 395
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 389
    ternarioVars                   shift and go to state 265
    varYVals                       shift and go to state 391
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 516

state 494

    (85) ternarioVars -> expBool ? valoresTernarioBool : . valoresTernarioVars
    (176) ternarioBool -> expBool ? valoresTernarioBool : . valoresTernarioBool
    (86) valoresTernarioVars -> . varsOps
    (87) valoresTernarioVars -> . varYVals
    (88) valoresTernarioVars -> . reg
    (89) valoresTernarioVars -> . vec
    (90) valoresTernarioVars -> . ternarioVars
    (91) valoresTernarioVars -> . ( ternarioVars )
    (92) valoresTernarioVars -> . atributos
    (93) valoresTernarioVars -> . RES
    (177) valoresTernarioBool -> . BOOL
    (178) valoresTernarioBool -> . funcBool
    (179) valoresTernarioBool -> . ternarioBool
    (180) valoresTernarioBool -> . ( ternarioBool )
    (181) valoresTernarioBool -> . expBool
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (105) reg -> . { campos }
    (55) vec -> . [ elem ]
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (72) atributos -> . ID . valoresCampos
    (50) funcBool -> . COLINEALES ( valores , valores )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (222) parenBool -> . ( expBool )
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )

    (               shift and go to state 513
    RES             shift and go to state 248
    BOOL            shift and go to state 262
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 84
    {               shift and go to state 94
    [               shift and go to state 20
    COLINEALES      shift and go to state 4
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 152
    NOT             shift and go to state 92
    -               shift and go to state 73
    +               shift and go to state 72

    and                            shift and go to state 58
    funcBool                       shift and go to state 247
    funcInt                        shift and go to state 195
    menor                          shift and go to state 64
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 511
    eMat                           shift and go to state 197
    valoresTernarioBool            shift and go to state 407
    vecVal                         shift and go to state 8
    vec                            shift and go to state 254
    paren                          shift and go to state 82
    reg                            shift and go to state 255
    valoresTernarioVars            shift and go to state 408
    expBool                        shift and go to state 512
    ternarioBool                   shift and go to state 258
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    varYVals                       shift and go to state 383
    p                              shift and go to state 89
    varsOps                        shift and go to state 381
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 265
    mayor                          shift and go to state 95
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 246

state 495

    (83) ternarioVars -> expBool ? valoresTernarioMat : . valoresTernarioVars
    (127) ternarioMat -> expBool ? valoresTernarioMat : . valoresTernarioMat
    (86) valoresTernarioVars -> . varsOps
    (87) valoresTernarioVars -> . varYVals
    (88) valoresTernarioVars -> . reg
    (89) valoresTernarioVars -> . vec
    (90) valoresTernarioVars -> . ternarioVars
    (91) valoresTernarioVars -> . ( ternarioVars )
    (92) valoresTernarioVars -> . atributos
    (93) valoresTernarioVars -> . RES
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (105) reg -> . { campos }
    (55) vec -> . [ elem ]
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (72) atributos -> . ID . valoresCampos
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (50) funcBool -> . COLINEALES ( valores , valores )
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    (               shift and go to state 515
    RES             shift and go to state 248
    INT             shift and go to state 260
    FLOAT           shift and go to state 261
    STRING          shift and go to state 257
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 84
    {               shift and go to state 94
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    BOOL            shift and go to state 156
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 249
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 514
    eMat                           shift and go to state 251
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 253
    vec                            shift and go to state 254
    paren                          shift and go to state 82
    reg                            shift and go to state 255
    valoresTernarioVars            shift and go to state 413
    expBool                        shift and go to state 516
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    valoresTernarioMat             shift and go to state 412
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 389
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 265
    varYVals                       shift and go to state 391
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 246

state 496

    (80) ternarioVars -> valoresBool ? valoresTernarioBool : . valoresTernarioVars
    (86) valoresTernarioVars -> . varsOps
    (87) valoresTernarioVars -> . varYVals
    (88) valoresTernarioVars -> . reg
    (89) valoresTernarioVars -> . vec
    (90) valoresTernarioVars -> . ternarioVars
    (91) valoresTernarioVars -> . ( ternarioVars )
    (92) valoresTernarioVars -> . atributos
    (93) valoresTernarioVars -> . RES
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (105) reg -> . { campos }
    (55) vec -> . [ elem ]
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (72) atributos -> . ID . valoresCampos
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (50) funcBool -> . COLINEALES ( valores , valores )
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (222) parenBool -> . ( expBool )
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )

    (               shift and go to state 509
    RES             shift and go to state 248
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 84
    {               shift and go to state 94
    [               shift and go to state 20
    BOOL            shift and go to state 156
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 152
    NOT             shift and go to state 92
    -               shift and go to state 73
    +               shift and go to state 72

    and                            shift and go to state 58
    atributos                      shift and go to state 246
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 195
    menor                          shift and go to state 64
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 508
    eMat                           shift and go to state 197
    mayor                          shift and go to state 95
    vec                            shift and go to state 254
    paren                          shift and go to state 82
    reg                            shift and go to state 255
    valoresTernarioVars            shift and go to state 379
    exp                            shift and go to state 93
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 381
    ternarioVars                   shift and go to state 265
    varYVals                       shift and go to state 383
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 510

state 497

    (85) ternarioVars -> expBool ? valoresTernarioBool : . valoresTernarioVars
    (86) valoresTernarioVars -> . varsOps
    (87) valoresTernarioVars -> . varYVals
    (88) valoresTernarioVars -> . reg
    (89) valoresTernarioVars -> . vec
    (90) valoresTernarioVars -> . ternarioVars
    (91) valoresTernarioVars -> . ( ternarioVars )
    (92) valoresTernarioVars -> . atributos
    (93) valoresTernarioVars -> . RES
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (105) reg -> . { campos }
    (55) vec -> . [ elem ]
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (72) atributos -> . ID . valoresCampos
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (50) funcBool -> . COLINEALES ( valores , valores )
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (222) parenBool -> . ( expBool )
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )

    (               shift and go to state 509
    RES             shift and go to state 248
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 84
    {               shift and go to state 94
    [               shift and go to state 20
    BOOL            shift and go to state 156
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    INT             shift and go to state 200
    FLOAT           shift and go to state 201
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    STRING          shift and go to state 152
    NOT             shift and go to state 92
    -               shift and go to state 73
    +               shift and go to state 72

    and                            shift and go to state 58
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 195
    menor                          shift and go to state 64
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 508
    eMat                           shift and go to state 197
    vecVal                         shift and go to state 8
    vec                            shift and go to state 254
    paren                          shift and go to state 82
    reg                            shift and go to state 255
    valoresTernarioVars            shift and go to state 408
    expBool                        shift and go to state 510
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    varYVals                       shift and go to state 383
    p                              shift and go to state 89
    varsOps                        shift and go to state 381
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 265
    mayor                          shift and go to state 95
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 246

state 498

    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT . com lCerrada
    (12) com -> . COMMENT com
    (13) com -> . empty
    (54) empty -> .

    COMMENT         shift and go to state 207
    IF              reduce using rule 54 (empty -> .)
    DO              reduce using rule 54 (empty -> .)
    RETURN          reduce using rule 54 (empty -> .)
    ;               reduce using rule 54 (empty -> .)
    WHILE           reduce using rule 54 (empty -> .)
    FOR             reduce using rule 54 (empty -> .)
    MENOSMENOS      reduce using rule 54 (empty -> .)
    MASMAS          reduce using rule 54 (empty -> .)
    ID              reduce using rule 54 (empty -> .)
    PRINT           reduce using rule 54 (empty -> .)
    MULTIESCALAR    reduce using rule 54 (empty -> .)
    LENGTH          reduce using rule 54 (empty -> .)
    CAPITALIZAR     reduce using rule 54 (empty -> .)
    COLINEALES      reduce using rule 54 (empty -> .)
    [               reduce using rule 54 (empty -> .)

    com                            shift and go to state 517
    empty                          shift and go to state 209

state 499

    (19) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .

    WHILE           reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    COMMENT         reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    IF              reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    DO              reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    FOR             reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    RETURN          reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    ;               reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    MENOSMENOS      reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    MASMAS          reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    ID              reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    PRINT           reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    MULTIESCALAR    reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    LENGTH          reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    CAPITALIZAR     reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    COLINEALES      reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    [               reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    $end            reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    }               reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)
    ELSE            reduce using rule 19 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada .)


state 500

    (16) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { . g }
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (54) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (32) loop -> . WHILE ( valores )
    (33) loop -> . FOR ( primParam ; valores ; tercerParam )
    (27) sentencia -> . varsOps ;
    (28) sentencia -> . func ;
    (29) sentencia -> . varAsig ;
    (30) sentencia -> . RETURN ;
    (31) sentencia -> . ;
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (42) func -> . funcReturn
    (43) func -> . funcVoid
    (113) varAsig -> . varYVals MULEQ valoresAsig
    (114) varAsig -> . varYVals DIVEQ valoresAsig
    (115) varAsig -> . varYVals MASEQ valoresAsig
    (116) varAsig -> . varYVals MENOSEQ valoresAsig
    (117) varAsig -> . varYVals = valoresAsig
    (118) varAsig -> . ID . ID = valoresAsig
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (51) funcVoid -> . PRINT ( valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (55) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 54 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 13
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 518
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 29
    lAbierta                       shift and go to state 30
    loop                           shift and go to state 32
    varYVals                       shift and go to state 11
    linea                          shift and go to state 34

state 501

    (15) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE { g }
    (18) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE COMMENT com lCerrada
    (8) lAbierta -> IF ( cosaBooleana ) lCerrada . ELSE lAbierta
    (5) linea -> lCerrada .

    ELSE            shift and go to state 519
    COMMENT         reduce using rule 5 (linea -> lCerrada .)
    IF              reduce using rule 5 (linea -> lCerrada .)
    DO              reduce using rule 5 (linea -> lCerrada .)
    WHILE           reduce using rule 5 (linea -> lCerrada .)
    FOR             reduce using rule 5 (linea -> lCerrada .)
    RETURN          reduce using rule 5 (linea -> lCerrada .)
    ;               reduce using rule 5 (linea -> lCerrada .)
    MENOSMENOS      reduce using rule 5 (linea -> lCerrada .)
    MASMAS          reduce using rule 5 (linea -> lCerrada .)
    ID              reduce using rule 5 (linea -> lCerrada .)
    PRINT           reduce using rule 5 (linea -> lCerrada .)
    MULTIESCALAR    reduce using rule 5 (linea -> lCerrada .)
    LENGTH          reduce using rule 5 (linea -> lCerrada .)
    CAPITALIZAR     reduce using rule 5 (linea -> lCerrada .)
    COLINEALES      reduce using rule 5 (linea -> lCerrada .)
    [               reduce using rule 5 (linea -> lCerrada .)
    $end            reduce using rule 5 (linea -> lCerrada .)
    }               reduce using rule 5 (linea -> lCerrada .)


state 502

    (14) lCerrada -> IF ( cosaBooleana ) { . g } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { . g } ELSE lCerrada
    (7) lAbierta -> IF ( cosaBooleana ) { . g } ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) { . g }
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (54) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (32) loop -> . WHILE ( valores )
    (33) loop -> . FOR ( primParam ; valores ; tercerParam )
    (27) sentencia -> . varsOps ;
    (28) sentencia -> . func ;
    (29) sentencia -> . varAsig ;
    (30) sentencia -> . RETURN ;
    (31) sentencia -> . ;
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (42) func -> . funcReturn
    (43) func -> . funcVoid
    (113) varAsig -> . varYVals MULEQ valoresAsig
    (114) varAsig -> . varYVals DIVEQ valoresAsig
    (115) varAsig -> . varYVals MASEQ valoresAsig
    (116) varAsig -> . varYVals MENOSEQ valoresAsig
    (117) varAsig -> . varYVals = valoresAsig
    (118) varAsig -> . ID . ID = valoresAsig
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (51) funcVoid -> . PRINT ( valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (55) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 54 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    linea                          shift and go to state 34
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 13
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 520
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 29
    lAbierta                       shift and go to state 30
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 32

state 503

    (20) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .

    WHILE           reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    COMMENT         reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    IF              reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    DO              reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    FOR             reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    RETURN          reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    ;               reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    MENOSMENOS      reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    MASMAS          reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    ID              reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    PRINT           reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    MULTIESCALAR    reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    LENGTH          reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    CAPITALIZAR     reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    COLINEALES      reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    [               reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    $end            reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    }               reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)
    ELSE            reduce using rule 20 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada .)


state 504

    (15) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .

    WHILE           reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    COMMENT         reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    IF              reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    DO              reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    FOR             reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    RETURN          reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    ;               reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    MENOSMENOS      reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    MASMAS          reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    ID              reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    PRINT           reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    MULTIESCALAR    reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    LENGTH          reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    CAPITALIZAR     reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    COLINEALES      reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    [               reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    $end            reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    }               reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    ELSE            reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)


state 505

    (17) lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .

    WHILE           reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    COMMENT         reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    IF              reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    DO              reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    FOR             reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    RETURN          reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    ;               reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    MENOSMENOS      reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    MASMAS          reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    ID              reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    PRINT           reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    MULTIESCALAR    reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    LENGTH          reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    CAPITALIZAR     reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    COLINEALES      reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    [               reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    $end            reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    }               reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    ELSE            reduce using rule 17 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)


state 506

    (7) lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .

    COMMENT         reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    IF              reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    DO              reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    WHILE           reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    FOR             reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    RETURN          reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    ;               reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    MENOSMENOS      reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    MASMAS          reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    ID              reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    PRINT           reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    MULTIESCALAR    reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    LENGTH          reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    CAPITALIZAR     reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    COLINEALES      reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    [               reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    $end            reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    }               reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)


state 507

    (14) lCerrada -> IF ( cosaBooleana ) { g } ELSE { . g }
    (1) g -> . linea g
    (2) g -> . COMMENT g
    (3) g -> . empty
    (4) linea -> . lAbierta
    (5) linea -> . lCerrada
    (54) empty -> .
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (32) loop -> . WHILE ( valores )
    (33) loop -> . FOR ( primParam ; valores ; tercerParam )
    (27) sentencia -> . varsOps ;
    (28) sentencia -> . func ;
    (29) sentencia -> . varAsig ;
    (30) sentencia -> . RETURN ;
    (31) sentencia -> . ;
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (42) func -> . funcReturn
    (43) func -> . funcVoid
    (113) varAsig -> . varYVals MULEQ valoresAsig
    (114) varAsig -> . varYVals DIVEQ valoresAsig
    (115) varAsig -> . varYVals MASEQ valoresAsig
    (116) varAsig -> . varYVals MENOSEQ valoresAsig
    (117) varAsig -> . varYVals = valoresAsig
    (118) varAsig -> . ID . ID = valoresAsig
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (51) funcVoid -> . PRINT ( valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (55) vec -> . [ elem ]

    COMMENT         shift and go to state 9
    }               reduce using rule 54 (empty -> .)
    IF              shift and go to state 22
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    empty                          shift and go to state 13
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    g                              shift and go to state 521
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 29
    lAbierta                       shift and go to state 30
    loop                           shift and go to state 32
    varYVals                       shift and go to state 11
    linea                          shift and go to state 34

state 508

    (76) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (189) expBool -> valoresBool . OR and
    (191) expBool -> valoresBool . OR valoresBool
    (194) and -> valoresBool . AND eq
    (196) and -> valoresBool . AND valoresBool

    ?               shift and go to state 522
    OR              shift and go to state 141
    AND             shift and go to state 140


state 509

    (91) valoresTernarioVars -> ( . ternarioVars )
    (173) valoresBool -> ( . ternarioBool )
    (213) tCompare -> ( . ternarioBool )
    (214) tCompare -> ( . ternarioMat )
    (125) valoresMat -> ( . ternarioMat )
    (222) parenBool -> ( . expBool )
    (167) paren -> ( . eMat )
    (168) paren -> ( . valoresMat )
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (50) funcBool -> . COLINEALES ( valores , valores )
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (55) vec -> . [ elem ]
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 154
    FLOAT           shift and go to state 155
    STRING          shift and go to state 152
    (               shift and go to state 150
    BOOL            shift and go to state 156
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    [               shift and go to state 20
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 146
    menor                          shift and go to state 64
    valoresMat                     shift and go to state 147
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 523
    eMat                           shift and go to state 149
    mayor                          shift and go to state 95
    ternarioMat                    shift and go to state 321
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    ternarioBool                   shift and go to state 276
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 157
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 340
    varYVals                       shift and go to state 159
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 524

state 510

    (81) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (188) expBool -> expBool . OR and
    (190) expBool -> expBool . OR valoresBool

    ?               shift and go to state 525
    OR              shift and go to state 171


state 511

    (76) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (175) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (189) expBool -> valoresBool . OR and
    (191) expBool -> valoresBool . OR valoresBool
    (194) and -> valoresBool . AND eq
    (196) and -> valoresBool . AND valoresBool

    ?               shift and go to state 526
    OR              shift and go to state 141
    AND             shift and go to state 140


state 512

    (181) valoresTernarioBool -> expBool .
    (81) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (176) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> expBool . OR and
    (190) expBool -> expBool . OR valoresBool

    ,               reduce using rule 181 (valoresTernarioBool -> expBool .)
    ]               reduce using rule 181 (valoresTernarioBool -> expBool .)
    )               reduce using rule 181 (valoresTernarioBool -> expBool .)
    ;               reduce using rule 181 (valoresTernarioBool -> expBool .)
    :               reduce using rule 181 (valoresTernarioBool -> expBool .)
    }               reduce using rule 181 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 527
    OR              shift and go to state 171


state 513

    (91) valoresTernarioVars -> ( . ternarioVars )
    (180) valoresTernarioBool -> ( . ternarioBool )
    (173) valoresBool -> ( . ternarioBool )
    (213) tCompare -> ( . ternarioBool )
    (214) tCompare -> ( . ternarioMat )
    (125) valoresMat -> ( . ternarioMat )
    (222) parenBool -> ( . expBool )
    (167) paren -> ( . eMat )
    (168) paren -> ( . valoresMat )
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (50) funcBool -> . COLINEALES ( valores , valores )
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (55) vec -> . [ elem ]
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 154
    FLOAT           shift and go to state 155
    STRING          shift and go to state 152
    (               shift and go to state 150
    BOOL            shift and go to state 156
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    [               shift and go to state 20
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 146
    menor                          shift and go to state 64
    valoresMat                     shift and go to state 147
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 523
    eMat                           shift and go to state 149
    mayor                          shift and go to state 95
    ternarioMat                    shift and go to state 321
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    ternarioBool                   shift and go to state 339
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 157
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 340
    varYVals                       shift and go to state 159
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 524

state 514

    (76) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (126) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (189) expBool -> valoresBool . OR and
    (191) expBool -> valoresBool . OR valoresBool
    (194) and -> valoresBool . AND eq
    (196) and -> valoresBool . AND valoresBool

    ?               shift and go to state 528
    OR              shift and go to state 141
    AND             shift and go to state 140


state 515

    (91) valoresTernarioVars -> ( . ternarioVars )
    (134) valoresTernarioMat -> ( . ternarioMat )
    (173) valoresBool -> ( . ternarioBool )
    (125) valoresMat -> ( . ternarioMat )
    (213) tCompare -> ( . ternarioBool )
    (214) tCompare -> ( . ternarioMat )
    (167) paren -> ( . eMat )
    (168) paren -> ( . valoresMat )
    (222) parenBool -> ( . expBool )
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (50) funcBool -> . COLINEALES ( valores , valores )
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (55) vec -> . [ elem ]
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    INT             shift and go to state 154
    FLOAT           shift and go to state 155
    STRING          shift and go to state 152
    (               shift and go to state 150
    BOOL            shift and go to state 156
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    ID              shift and go to state 54
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    COLINEALES      shift and go to state 4
    -               shift and go to state 73
    +               shift and go to state 72
    [               shift and go to state 20
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 145
    funcInt                        shift and go to state 146
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 147
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 149
    valoresBool                    shift and go to state 384
    ternarioMat                    shift and go to state 338
    vec                            shift and go to state 33
    paren                          shift and go to state 82
    varsOps                        shift and go to state 157
    ternarioBool                   shift and go to state 276
    tCompare                       shift and go to state 81
    not                            shift and go to state 83
    p                              shift and go to state 89
    iSing                          shift and go to state 79
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 340
    varYVals                       shift and go to state 159
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 444

state 516

    (81) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (127) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (188) expBool -> expBool . OR and
    (190) expBool -> expBool . OR valoresBool

    ?               shift and go to state 529
    OR              shift and go to state 171


state 517

    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com . lCerrada
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (27) sentencia -> . varsOps ;
    (28) sentencia -> . func ;
    (29) sentencia -> . varAsig ;
    (30) sentencia -> . RETURN ;
    (31) sentencia -> . ;
    (32) loop -> . WHILE ( valores )
    (33) loop -> . FOR ( primParam ; valores ; tercerParam )
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (42) func -> . funcReturn
    (43) func -> . funcVoid
    (113) varAsig -> . varYVals MULEQ valoresAsig
    (114) varAsig -> . varYVals DIVEQ valoresAsig
    (115) varAsig -> . varYVals MASEQ valoresAsig
    (116) varAsig -> . varYVals MENOSEQ valoresAsig
    (117) varAsig -> . varYVals = valoresAsig
    (118) varAsig -> . ID . ID = valoresAsig
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (51) funcVoid -> . PRINT ( valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (55) vec -> . [ elem ]

    IF              shift and go to state 35
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 530
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 11
    loop                           shift and go to state 38

state 518

    (16) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g . }

    }               shift and go to state 531


state 519

    (15) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . { g }
    (18) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . lCerrada
    (20) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . COMMENT com lCerrada
    (8) lAbierta -> IF ( cosaBooleana ) lCerrada ELSE . lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (27) sentencia -> . varsOps ;
    (28) sentencia -> . func ;
    (29) sentencia -> . varAsig ;
    (30) sentencia -> . RETURN ;
    (31) sentencia -> . ;
    (32) loop -> . WHILE ( valores )
    (33) loop -> . FOR ( primParam ; valores ; tercerParam )
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (42) func -> . funcReturn
    (43) func -> . funcVoid
    (113) varAsig -> . varYVals MULEQ valoresAsig
    (114) varAsig -> . varYVals DIVEQ valoresAsig
    (115) varAsig -> . varYVals MASEQ valoresAsig
    (116) varAsig -> . varYVals MENOSEQ valoresAsig
    (117) varAsig -> . varYVals = valoresAsig
    (118) varAsig -> . ID . ID = valoresAsig
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (51) funcVoid -> . PRINT ( valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (55) vec -> . [ elem ]

    {               shift and go to state 459
    COMMENT         shift and go to state 456
    IF              shift and go to state 365
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 457
    lAbierta                       shift and go to state 458
    loop                           shift and go to state 368
    varYVals                       shift and go to state 11

state 520

    (14) lCerrada -> IF ( cosaBooleana ) { g . } ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g . } ELSE lCerrada
    (7) lAbierta -> IF ( cosaBooleana ) { g . } ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) { g . }

    }               shift and go to state 532


state 521

    (14) lCerrada -> IF ( cosaBooleana ) { g } ELSE { g . }

    }               shift and go to state 533


state 522

    (76) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (86) valoresTernarioVars -> . varsOps
    (87) valoresTernarioVars -> . varYVals
    (88) valoresTernarioVars -> . reg
    (89) valoresTernarioVars -> . vec
    (90) valoresTernarioVars -> . ternarioVars
    (91) valoresTernarioVars -> . ( ternarioVars )
    (92) valoresTernarioVars -> . atributos
    (93) valoresTernarioVars -> . RES
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (177) valoresTernarioBool -> . BOOL
    (178) valoresTernarioBool -> . funcBool
    (179) valoresTernarioBool -> . ternarioBool
    (180) valoresTernarioBool -> . ( ternarioBool )
    (181) valoresTernarioBool -> . expBool
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (105) reg -> . { campos }
    (55) vec -> . [ elem ]
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (72) atributos -> . ID . valoresCampos
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (50) funcBool -> . COLINEALES ( valores , valores )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    (               shift and go to state 390
    RES             shift and go to state 248
    INT             shift and go to state 260
    FLOAT           shift and go to state 261
    STRING          shift and go to state 257
    BOOL            shift and go to state 262
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 84
    {               shift and go to state 94
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    atributos                      shift and go to state 246
    funcBool                       shift and go to state 247
    funcInt                        shift and go to state 249
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 251
    valoresTernarioBool            shift and go to state 477
    valoresBool                    shift and go to state 384
    ternarioMat                    shift and go to state 253
    vec                            shift and go to state 254
    paren                          shift and go to state 82
    reg                            shift and go to state 255
    valoresTernarioVars            shift and go to state 256
    exp                            shift and go to state 93
    ternarioBool                   shift and go to state 258
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    valoresTernarioMat             shift and go to state 468
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 389
    ternarioVars                   shift and go to state 265
    varYVals                       shift and go to state 391
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 388

state 523

    (76) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (175) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (126) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (189) expBool -> valoresBool . OR and
    (191) expBool -> valoresBool . OR valoresBool
    (194) and -> valoresBool . AND eq
    (196) and -> valoresBool . AND valoresBool

    ?               shift and go to state 534
    OR              shift and go to state 141
    AND             shift and go to state 140


state 524

    (222) parenBool -> ( expBool . )
    (81) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (176) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (127) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (188) expBool -> expBool . OR and
    (190) expBool -> expBool . OR valoresBool

    )               shift and go to state 281
    ?               shift and go to state 535
    OR              shift and go to state 171


state 525

    (81) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (86) valoresTernarioVars -> . varsOps
    (87) valoresTernarioVars -> . varYVals
    (88) valoresTernarioVars -> . reg
    (89) valoresTernarioVars -> . vec
    (90) valoresTernarioVars -> . ternarioVars
    (91) valoresTernarioVars -> . ( ternarioVars )
    (92) valoresTernarioVars -> . atributos
    (93) valoresTernarioVars -> . RES
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (177) valoresTernarioBool -> . BOOL
    (178) valoresTernarioBool -> . funcBool
    (179) valoresTernarioBool -> . ternarioBool
    (180) valoresTernarioBool -> . ( ternarioBool )
    (181) valoresTernarioBool -> . expBool
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (105) reg -> . { campos }
    (55) vec -> . [ elem ]
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (72) atributos -> . ID . valoresCampos
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (50) funcBool -> . COLINEALES ( valores , valores )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    (               shift and go to state 390
    RES             shift and go to state 248
    INT             shift and go to state 260
    FLOAT           shift and go to state 261
    STRING          shift and go to state 257
    BOOL            shift and go to state 262
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 84
    {               shift and go to state 94
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 247
    funcInt                        shift and go to state 249
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 384
    eMat                           shift and go to state 251
    valoresTernarioBool            shift and go to state 482
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 253
    vec                            shift and go to state 254
    paren                          shift and go to state 82
    reg                            shift and go to state 255
    valoresTernarioVars            shift and go to state 290
    expBool                        shift and go to state 388
    ternarioBool                   shift and go to state 258
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    valoresTernarioMat             shift and go to state 470
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 389
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 265
    varYVals                       shift and go to state 391
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 246

state 526

    (76) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (175) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (86) valoresTernarioVars -> . varsOps
    (87) valoresTernarioVars -> . varYVals
    (88) valoresTernarioVars -> . reg
    (89) valoresTernarioVars -> . vec
    (90) valoresTernarioVars -> . ternarioVars
    (91) valoresTernarioVars -> . ( ternarioVars )
    (92) valoresTernarioVars -> . atributos
    (93) valoresTernarioVars -> . RES
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (177) valoresTernarioBool -> . BOOL
    (178) valoresTernarioBool -> . funcBool
    (179) valoresTernarioBool -> . ternarioBool
    (180) valoresTernarioBool -> . ( ternarioBool )
    (181) valoresTernarioBool -> . expBool
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (105) reg -> . { campos }
    (55) vec -> . [ elem ]
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (72) atributos -> . ID . valoresCampos
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (50) funcBool -> . COLINEALES ( valores , valores )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    (               shift and go to state 390
    RES             shift and go to state 248
    INT             shift and go to state 260
    FLOAT           shift and go to state 261
    STRING          shift and go to state 257
    BOOL            shift and go to state 262
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 84
    {               shift and go to state 94
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    atributos                      shift and go to state 246
    funcBool                       shift and go to state 247
    funcInt                        shift and go to state 249
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 251
    valoresTernarioBool            shift and go to state 473
    valoresBool                    shift and go to state 384
    ternarioMat                    shift and go to state 253
    vec                            shift and go to state 254
    paren                          shift and go to state 82
    reg                            shift and go to state 255
    valoresTernarioVars            shift and go to state 256
    exp                            shift and go to state 93
    ternarioBool                   shift and go to state 258
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    valoresTernarioMat             shift and go to state 468
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 389
    ternarioVars                   shift and go to state 265
    varYVals                       shift and go to state 391
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 388

state 527

    (81) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (176) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (86) valoresTernarioVars -> . varsOps
    (87) valoresTernarioVars -> . varYVals
    (88) valoresTernarioVars -> . reg
    (89) valoresTernarioVars -> . vec
    (90) valoresTernarioVars -> . ternarioVars
    (91) valoresTernarioVars -> . ( ternarioVars )
    (92) valoresTernarioVars -> . atributos
    (93) valoresTernarioVars -> . RES
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (177) valoresTernarioBool -> . BOOL
    (178) valoresTernarioBool -> . funcBool
    (179) valoresTernarioBool -> . ternarioBool
    (180) valoresTernarioBool -> . ( ternarioBool )
    (181) valoresTernarioBool -> . expBool
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (105) reg -> . { campos }
    (55) vec -> . [ elem ]
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (72) atributos -> . ID . valoresCampos
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (50) funcBool -> . COLINEALES ( valores , valores )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    (               shift and go to state 390
    RES             shift and go to state 248
    INT             shift and go to state 260
    FLOAT           shift and go to state 261
    STRING          shift and go to state 257
    BOOL            shift and go to state 262
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 84
    {               shift and go to state 94
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 247
    funcInt                        shift and go to state 249
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 384
    eMat                           shift and go to state 251
    valoresTernarioBool            shift and go to state 475
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 253
    vec                            shift and go to state 254
    paren                          shift and go to state 82
    reg                            shift and go to state 255
    valoresTernarioVars            shift and go to state 290
    expBool                        shift and go to state 388
    ternarioBool                   shift and go to state 258
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    valoresTernarioMat             shift and go to state 470
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 389
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 265
    varYVals                       shift and go to state 391
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 246

state 528

    (76) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (126) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (86) valoresTernarioVars -> . varsOps
    (87) valoresTernarioVars -> . varYVals
    (88) valoresTernarioVars -> . reg
    (89) valoresTernarioVars -> . vec
    (90) valoresTernarioVars -> . ternarioVars
    (91) valoresTernarioVars -> . ( ternarioVars )
    (92) valoresTernarioVars -> . atributos
    (93) valoresTernarioVars -> . RES
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (177) valoresTernarioBool -> . BOOL
    (178) valoresTernarioBool -> . funcBool
    (179) valoresTernarioBool -> . ternarioBool
    (180) valoresTernarioBool -> . ( ternarioBool )
    (181) valoresTernarioBool -> . expBool
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (105) reg -> . { campos }
    (55) vec -> . [ elem ]
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (72) atributos -> . ID . valoresCampos
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (50) funcBool -> . COLINEALES ( valores , valores )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    (               shift and go to state 390
    RES             shift and go to state 248
    INT             shift and go to state 260
    FLOAT           shift and go to state 261
    STRING          shift and go to state 257
    BOOL            shift and go to state 262
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 84
    {               shift and go to state 94
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    atributos                      shift and go to state 246
    funcBool                       shift and go to state 247
    funcInt                        shift and go to state 249
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 251
    valoresTernarioBool            shift and go to state 477
    valoresBool                    shift and go to state 384
    ternarioMat                    shift and go to state 253
    vec                            shift and go to state 254
    paren                          shift and go to state 82
    reg                            shift and go to state 255
    valoresTernarioVars            shift and go to state 256
    exp                            shift and go to state 93
    ternarioBool                   shift and go to state 258
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    valoresTernarioMat             shift and go to state 474
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 389
    ternarioVars                   shift and go to state 265
    varYVals                       shift and go to state 391
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 388

state 529

    (81) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (127) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (86) valoresTernarioVars -> . varsOps
    (87) valoresTernarioVars -> . varYVals
    (88) valoresTernarioVars -> . reg
    (89) valoresTernarioVars -> . vec
    (90) valoresTernarioVars -> . ternarioVars
    (91) valoresTernarioVars -> . ( ternarioVars )
    (92) valoresTernarioVars -> . atributos
    (93) valoresTernarioVars -> . RES
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (177) valoresTernarioBool -> . BOOL
    (178) valoresTernarioBool -> . funcBool
    (179) valoresTernarioBool -> . ternarioBool
    (180) valoresTernarioBool -> . ( ternarioBool )
    (181) valoresTernarioBool -> . expBool
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (105) reg -> . { campos }
    (55) vec -> . [ elem ]
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (72) atributos -> . ID . valoresCampos
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (50) funcBool -> . COLINEALES ( valores , valores )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    (               shift and go to state 390
    RES             shift and go to state 248
    INT             shift and go to state 260
    FLOAT           shift and go to state 261
    STRING          shift and go to state 257
    BOOL            shift and go to state 262
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 84
    {               shift and go to state 94
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 247
    funcInt                        shift and go to state 249
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 384
    eMat                           shift and go to state 251
    valoresTernarioBool            shift and go to state 482
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 253
    vec                            shift and go to state 254
    paren                          shift and go to state 82
    reg                            shift and go to state 255
    valoresTernarioVars            shift and go to state 290
    expBool                        shift and go to state 388
    ternarioBool                   shift and go to state 258
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    valoresTernarioMat             shift and go to state 476
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 389
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 265
    varYVals                       shift and go to state 391
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 246

state 530

    (21) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .

    WHILE           reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    COMMENT         reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    IF              reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    DO              reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    FOR             reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    RETURN          reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    ;               reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    MENOSMENOS      reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    MASMAS          reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    ID              reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    PRINT           reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    MULTIESCALAR    reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    LENGTH          reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    CAPITALIZAR     reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    COLINEALES      reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    [               reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    $end            reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    }               reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)
    ELSE            reduce using rule 21 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada .)


state 531

    (16) lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .

    WHILE           reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    COMMENT         reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    IF              reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    DO              reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    FOR             reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    RETURN          reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    ;               reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    MENOSMENOS      reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    MASMAS          reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    ID              reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    PRINT           reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    MULTIESCALAR    reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    LENGTH          reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    CAPITALIZAR     reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    COLINEALES      reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    [               reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    $end            reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    }               reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)
    ELSE            reduce using rule 16 (lCerrada -> IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g } .)


state 532

    (14) lCerrada -> IF ( cosaBooleana ) { g } . ELSE { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g } . ELSE lCerrada
    (7) lAbierta -> IF ( cosaBooleana ) { g } . ELSE lAbierta
    (9) lAbierta -> IF ( cosaBooleana ) { g } .

    ELSE            shift and go to state 536
    COMMENT         reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    IF              reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    DO              reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    WHILE           reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    FOR             reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    RETURN          reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    ;               reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MENOSMENOS      reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MASMAS          reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    ID              reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    PRINT           reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MULTIESCALAR    reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    LENGTH          reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    CAPITALIZAR     reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    COLINEALES      reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    [               reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    $end            reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)
    }               reduce using rule 9 (lAbierta -> IF ( cosaBooleana ) { g } .)


state 533

    (14) lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .

    WHILE           reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    COMMENT         reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    IF              reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    DO              reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    FOR             reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    RETURN          reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    ;               reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    MENOSMENOS      reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    MASMAS          reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    ID              reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    PRINT           reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    MULTIESCALAR    reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    LENGTH          reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    CAPITALIZAR     reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    COLINEALES      reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    [               reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    $end            reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    }               reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    ELSE            reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)


state 534

    (76) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (175) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (126) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (86) valoresTernarioVars -> . varsOps
    (87) valoresTernarioVars -> . varYVals
    (88) valoresTernarioVars -> . reg
    (89) valoresTernarioVars -> . vec
    (90) valoresTernarioVars -> . ternarioVars
    (91) valoresTernarioVars -> . ( ternarioVars )
    (92) valoresTernarioVars -> . atributos
    (93) valoresTernarioVars -> . RES
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (177) valoresTernarioBool -> . BOOL
    (178) valoresTernarioBool -> . funcBool
    (179) valoresTernarioBool -> . ternarioBool
    (180) valoresTernarioBool -> . ( ternarioBool )
    (181) valoresTernarioBool -> . expBool
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (105) reg -> . { campos }
    (55) vec -> . [ elem ]
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (72) atributos -> . ID . valoresCampos
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (50) funcBool -> . COLINEALES ( valores , valores )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    (               shift and go to state 390
    RES             shift and go to state 248
    INT             shift and go to state 260
    FLOAT           shift and go to state 261
    STRING          shift and go to state 257
    BOOL            shift and go to state 262
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 84
    {               shift and go to state 94
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    atributos                      shift and go to state 246
    funcBool                       shift and go to state 247
    funcInt                        shift and go to state 249
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 251
    valoresTernarioBool            shift and go to state 473
    valoresBool                    shift and go to state 384
    ternarioMat                    shift and go to state 253
    vec                            shift and go to state 254
    paren                          shift and go to state 82
    reg                            shift and go to state 255
    valoresTernarioVars            shift and go to state 256
    exp                            shift and go to state 93
    ternarioBool                   shift and go to state 258
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    valoresTernarioMat             shift and go to state 474
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 389
    ternarioVars                   shift and go to state 265
    varYVals                       shift and go to state 391
    parenBool                      shift and go to state 80
    expBool                        shift and go to state 388

state 535

    (81) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (176) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (127) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (86) valoresTernarioVars -> . varsOps
    (87) valoresTernarioVars -> . varYVals
    (88) valoresTernarioVars -> . reg
    (89) valoresTernarioVars -> . vec
    (90) valoresTernarioVars -> . ternarioVars
    (91) valoresTernarioVars -> . ( ternarioVars )
    (92) valoresTernarioVars -> . atributos
    (93) valoresTernarioVars -> . RES
    (128) valoresTernarioMat -> . INT
    (129) valoresTernarioMat -> . FLOAT
    (130) valoresTernarioMat -> . funcInt
    (131) valoresTernarioMat -> . STRING
    (132) valoresTernarioMat -> . eMat
    (133) valoresTernarioMat -> . ternarioMat
    (134) valoresTernarioMat -> . ( ternarioMat )
    (177) valoresTernarioBool -> . BOOL
    (178) valoresTernarioBool -> . funcBool
    (179) valoresTernarioBool -> . ternarioBool
    (180) valoresTernarioBool -> . ( ternarioBool )
    (181) valoresTernarioBool -> . expBool
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (105) reg -> . { campos }
    (55) vec -> . [ elem ]
    (76) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (77) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (78) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (79) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (80) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (81) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (82) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (83) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (84) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (85) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (72) atributos -> . ID . valoresCampos
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (135) eMat -> . eMat + p
    (136) eMat -> . eMat - p
    (137) eMat -> . valoresMat + p
    (138) eMat -> . valoresMat - p
    (139) eMat -> . eMat + valoresMat
    (140) eMat -> . eMat - valoresMat
    (141) eMat -> . valoresMat + valoresMat
    (142) eMat -> . valoresMat - valoresMat
    (143) eMat -> . p
    (126) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (127) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (50) funcBool -> . COLINEALES ( valores , valores )
    (175) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (176) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (188) expBool -> . expBool OR and
    (189) expBool -> . valoresBool OR and
    (190) expBool -> . expBool OR valoresBool
    (191) expBool -> . valoresBool OR valoresBool
    (192) expBool -> . and
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (169) valoresBool -> . BOOL
    (170) valoresBool -> . funcBool
    (171) valoresBool -> . varYVals
    (172) valoresBool -> . varsOps
    (173) valoresBool -> . ( ternarioBool )
    (174) valoresBool -> .
    (119) valoresMat -> . INT
    (120) valoresMat -> . FLOAT
    (121) valoresMat -> . funcInt
    (122) valoresMat -> . varYVals
    (123) valoresMat -> . varsOps
    (124) valoresMat -> . STRING
    (125) valoresMat -> . ( ternarioMat )
    (144) p -> . p * exp
    (145) p -> . p / exp
    (146) p -> . p % exp
    (147) p -> . valoresMat * exp
    (148) p -> . valoresMat / exp
    (149) p -> . valoresMat % exp
    (150) p -> . p * valoresMat
    (151) p -> . p / valoresMat
    (152) p -> . p % valoresMat
    (153) p -> . valoresMat * valoresMat
    (154) p -> . valoresMat / valoresMat
    (155) p -> . valoresMat % valoresMat
    (156) p -> . exp
    (193) and -> . and AND eq
    (194) and -> . valoresBool AND eq
    (195) and -> . and AND valoresBool
    (196) and -> . valoresBool AND valoresBool
    (197) and -> . eq
    (157) exp -> . exp ^ iSing
    (158) exp -> . valoresMat ^ iSing
    (159) exp -> . exp ^ valoresMat
    (160) exp -> . valoresMat ^ valoresMat
    (161) exp -> . iSing
    (198) eq -> . eq EQEQ mayor
    (199) eq -> . eq DISTINTO mayor
    (200) eq -> . tCompare EQEQ mayor
    (201) eq -> . tCompare DISTINTO mayor
    (202) eq -> . eq EQEQ tCompare
    (203) eq -> . eq DISTINTO tCompare
    (204) eq -> . tCompare EQEQ tCompare
    (205) eq -> . tCompare DISTINTO tCompare
    (206) eq -> . mayor
    (162) iSing -> . - paren
    (163) iSing -> . + paren
    (164) iSing -> . - valoresMat
    (165) iSing -> . + valoresMat
    (166) iSing -> . paren
    (207) tCompare -> . eMat
    (208) tCompare -> . varsOps
    (209) tCompare -> . varYVals
    (210) tCompare -> . INT
    (211) tCompare -> . funcInt
    (212) tCompare -> . FLOAT
    (213) tCompare -> . ( ternarioBool )
    (214) tCompare -> . ( ternarioMat )
    (215) mayor -> . tCompare > tCompare
    (216) mayor -> . menor
    (167) paren -> . ( eMat )
    (168) paren -> . ( valoresMat )
    (217) menor -> . tCompare < tCompare
    (218) menor -> . not
    (219) not -> . NOT not
    (220) not -> . NOT valoresBool
    (221) not -> . parenBool
    (222) parenBool -> . ( expBool )

    (               shift and go to state 390
    RES             shift and go to state 248
    INT             shift and go to state 260
    FLOAT           shift and go to state 261
    STRING          shift and go to state 257
    BOOL            shift and go to state 262
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 84
    {               shift and go to state 94
    [               shift and go to state 20
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 174 (valoresBool -> .)
    OR              reduce using rule 174 (valoresBool -> .)
    AND             reduce using rule 174 (valoresBool -> .)
    -               shift and go to state 73
    +               shift and go to state 72
    NOT             shift and go to state 92

    and                            shift and go to state 58
    funcBool                       shift and go to state 247
    funcInt                        shift and go to state 249
    menor                          shift and go to state 64
    mayor                          shift and go to state 95
    valoresMat                     shift and go to state 66
    eq                             shift and go to state 67
    valoresBool                    shift and go to state 384
    eMat                           shift and go to state 251
    valoresTernarioBool            shift and go to state 475
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 253
    vec                            shift and go to state 254
    paren                          shift and go to state 82
    reg                            shift and go to state 255
    valoresTernarioVars            shift and go to state 290
    expBool                        shift and go to state 388
    ternarioBool                   shift and go to state 258
    iSing                          shift and go to state 79
    tCompare                       shift and go to state 81
    valoresTernarioMat             shift and go to state 476
    not                            shift and go to state 83
    p                              shift and go to state 89
    varsOps                        shift and go to state 389
    exp                            shift and go to state 93
    ternarioVars                   shift and go to state 265
    varYVals                       shift and go to state 391
    parenBool                      shift and go to state 80
    atributos                      shift and go to state 246

state 536

    (14) lCerrada -> IF ( cosaBooleana ) { g } ELSE . { g }
    (17) lCerrada -> IF ( cosaBooleana ) { g } ELSE . lCerrada
    (7) lAbierta -> IF ( cosaBooleana ) { g } ELSE . lAbierta
    (11) lCerrada -> . sentencia
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (16) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE { g }
    (17) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (18) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (19) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE lCerrada
    (20) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE COMMENT com lCerrada
    (21) lCerrada -> . IF ( cosaBooleana ) COMMENT com lCerrada ELSE COMMENT com lCerrada
    (22) lCerrada -> . loop { g }
    (23) lCerrada -> . loop lCerrada
    (24) lCerrada -> . loop COMMENT com lCerrada
    (25) lCerrada -> . DO { g } WHILE ( valores ) ;
    (26) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (6) lAbierta -> . IF ( cosaBooleana ) linea
    (7) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (9) lAbierta -> . IF ( cosaBooleana ) { g }
    (10) lAbierta -> . loop lAbierta
    (27) sentencia -> . varsOps ;
    (28) sentencia -> . func ;
    (29) sentencia -> . varAsig ;
    (30) sentencia -> . RETURN ;
    (31) sentencia -> . ;
    (32) loop -> . WHILE ( valores )
    (33) loop -> . FOR ( primParam ; valores ; tercerParam )
    (108) varsOps -> . MENOSMENOS varYVals
    (109) varsOps -> . MASMAS varYVals
    (110) varsOps -> . varYVals MASMAS
    (111) varsOps -> . varYVals MENOSMENOS
    (42) func -> . funcReturn
    (43) func -> . funcVoid
    (113) varAsig -> . varYVals MULEQ valoresAsig
    (114) varAsig -> . varYVals DIVEQ valoresAsig
    (115) varAsig -> . varYVals MASEQ valoresAsig
    (116) varAsig -> . varYVals MENOSEQ valoresAsig
    (117) varAsig -> . varYVals = valoresAsig
    (118) varAsig -> . ID . ID = valoresAsig
    (94) varYVals -> . ID
    (95) varYVals -> . vecVal
    (96) varYVals -> . vecVal . varYVals
    (44) funcReturn -> . funcInt
    (45) funcReturn -> . funcString
    (46) funcReturn -> . funcBool
    (51) funcVoid -> . PRINT ( valores )
    (97) vecVal -> . ID m
    (98) vecVal -> . vec m
    (47) funcInt -> . MULTIESCALAR ( valores , valores param )
    (48) funcInt -> . LENGTH ( valores )
    (49) funcString -> . CAPITALIZAR ( valores )
    (50) funcBool -> . COLINEALES ( valores , valores )
    (55) vec -> . [ elem ]

    {               shift and go to state 507
    IF              shift and go to state 365
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 12
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 31
    ID              shift and go to state 21
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 26
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 28
    COLINEALES      shift and go to state 4
    [               shift and go to state 20

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    vec                            shift and go to state 33
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 23
    funcString                     shift and go to state 25
    funcReturn                     shift and go to state 27
    lCerrada                       shift and go to state 505
    lAbierta                       shift and go to state 506
    loop                           shift and go to state 368
    varYVals                       shift and go to state 11
